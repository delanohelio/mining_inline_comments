{"pr_number": 13549, "pr_title": "[BEAM-11196] Fix `None` parent when fusing >2 stages", "pr_createdAt": "2020-12-14T22:05:06Z", "pr_url": "https://github.com/apache/beam/pull/13549", "timeline": [{"oid": "0d1525bc60cbc141fb144374409680531b571662", "url": "https://github.com/apache/beam/commit/0d1525bc60cbc141fb144374409680531b571662", "message": "[BEAM-11196] Fix parent of fused stage", "committedDate": "2020-12-14T21:54:15Z", "type": "commit"}, {"oid": "f4a1c026836b7e4e27ef91e208f3828f87d9cb0c", "url": "https://github.com/apache/beam/commit/f4a1c026836b7e4e27ef91e208f3828f87d9cb0c", "message": "Lint", "committedDate": "2020-12-14T22:11:46Z", "type": "commit"}, {"oid": "4333a3d9334073f75c762f44c6e2ce98910e58a4", "url": "https://github.com/apache/beam/commit/4333a3d9334073f75c762f44c6e2ce98910e58a4", "message": "type annotation", "committedDate": "2020-12-14T22:28:20Z", "type": "commit"}, {"oid": "f4aaf4631435250d185fb5ec1db9491194577c43", "url": "https://github.com/apache/beam/commit/f4aaf4631435250d185fb5ec1db9491194577c43", "message": "Fix type", "committedDate": "2020-12-14T22:34:49Z", "type": "commit"}, {"oid": "d363416b296f81445be4c4197c854546b58fb394", "url": "https://github.com/apache/beam/commit/d363416b296f81445be4c4197c854546b58fb394", "message": "Fix test", "committedDate": "2020-12-14T23:02:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkxNjg4MA==", "url": "https://github.com/apache/beam/pull/13549#discussion_r542916880", "bodyText": "Is there a case where the parent's parent is not correctly set?", "author": "robertwb", "createdAt": "2020-12-14T23:18:17Z", "path": "sdks/python/apache_beam/runners/portability/fn_api_runner/translations.py", "diffHunk": "@@ -1217,23 +1215,33 @@ def get_ancestors(name):\n \n \n def _parent_for_fused_stages(stages, context):\n-  # type: (Iterable[Optional[str]], TransformContext) -> Optional[str]\n+  # type: (Iterable[Stage], TransformContext) -> Optional[str]\n \n   '''Returns the name of the new parent for the fused stages.\n \n   The new parent is the lowest common ancestor of the fused stages that is not\n   contained in the set of stages to be fused. The provided context is used to\n   compute ancestors of stages.\n   '''\n+\n+  parents = context.parents_map()\n+  # If any of the input stages were produced by fusion or an optimizer phase,", "originalCommit": "d363416b296f81445be4c4197c854546b58fb394", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkxOTY2Ng==", "url": "https://github.com/apache/beam/pull/13549#discussion_r542919666", "bodyText": "Nope-ish. This problem really arises because for stages going through the phases, there are two sources of truth for their parents: parent field of the stage and the subtransforms field of transforms in the PipelineContext. The parent of a stage has to be a transform in PipelineContext, which means there is only one source of truth (the subtransforms field). So we don't encounter this issue with grandparents.", "author": "yifanmai", "createdAt": "2020-12-14T23:24:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkxNjg4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkyMTUxMg==", "url": "https://github.com/apache/beam/pull/13549#discussion_r542921512", "bodyText": "Ack. Thanks for the clarification.", "author": "robertwb", "createdAt": "2020-12-14T23:28:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkxNjg4MA=="}], "type": "inlineReview"}]}