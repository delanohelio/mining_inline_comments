{"pr_number": 10795, "pr_title": "[BEAM-9265] @RequiresTimeSortedInput respects allowedLateness", "pr_createdAt": "2020-02-06T22:13:36Z", "pr_url": "https://github.com/apache/beam/pull/10795", "timeline": [{"oid": "0fb3c1040dff472c3a5278c2b9e27ed465da19d3", "url": "https://github.com/apache/beam/commit/0fb3c1040dff472c3a5278c2b9e27ed465da19d3", "message": "[BEAM-9265] @RequiresTimeSortedInput respects allowedLateness", "committedDate": "2020-02-06T22:16:51Z", "type": "forcePushed"}, {"oid": "201c921ef4f2b56f856148de45215220901aa1da", "url": "https://github.com/apache/beam/commit/201c921ef4f2b56f856148de45215220901aa1da", "message": "[BEAM-9265] @RequiresTimeSortedInput respects allowedLateness", "committedDate": "2020-02-06T22:19:19Z", "type": "forcePushed"}, {"oid": "d744b9909fb985b3c84ab8cb98dbdd3450183ad0", "url": "https://github.com/apache/beam/commit/d744b9909fb985b3c84ab8cb98dbdd3450183ad0", "message": "[BEAM-9265] @RequiresTimeSortedInput respects allowedLateness", "committedDate": "2020-02-07T14:42:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODcyNDEwMg==", "url": "https://github.com/apache/beam/pull/10795#discussion_r378724102", "bodyText": "900 remaining elements?", "author": "dmvk", "createdAt": "2020-02-13T08:55:10Z", "path": "sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java", "diffHunk": "@@ -2409,6 +2410,39 @@ public void testRequiresTimeSortedInputWithTestStream() {\n       testTimeSortedInput(numElements, pipeline.apply(stream.advanceWatermarkToInfinity()));\n     }\n \n+    @Test\n+    @Category({\n+      ValidatesRunner.class,\n+      UsesStatefulParDo.class,\n+      UsesRequiresTimeSortedInput.class,\n+      UsesStrictTimerOrdering.class,\n+      UsesTestStream.class\n+    })\n+    public void testRequiresTimeSortedInputWithLateDataAndAllowedLateness() {\n+      // generate list long enough to rule out random shuffle in sorted order\n+      int numElements = 1000;\n+      List<Long> eventStamps =\n+          LongStream.range(0, numElements)\n+              .mapToObj(i -> numElements - i)\n+              .collect(Collectors.toList());\n+      TestStream.Builder<Long> input = TestStream.create(VarLongCoder.of());\n+      for (Long stamp : eventStamps) {\n+        input = input.addElements(TimestampedValue.of(stamp, Instant.ofEpochMilli(stamp)));\n+        if (stamp == 100) {\n+          // advance watermark when we have 100 remaining elements", "originalCommit": "d744b9909fb985b3c84ab8cb98dbdd3450183ad0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc1MzA1MQ==", "url": "https://github.com/apache/beam/pull/10795#discussion_r378753051", "bodyText": "100 because the stamp is descending. The watermark advances past the last 100 elements which should get dropped.", "author": "je-ik", "createdAt": "2020-02-13T09:49:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODcyNDEwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgxMTM3Nw==", "url": "https://github.com/apache/beam/pull/10795#discussion_r378811377", "bodyText": "\ud83e\udd26\u200d\u2642 makes sense, thanks for clarification", "author": "dmvk", "createdAt": "2020-02-13T11:45:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODcyNDEwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODcyNTQxMw==", "url": "https://github.com/apache/beam/pull/10795#discussion_r378725413", "bodyText": "Can you add a javadoc for this method?", "author": "dmvk", "createdAt": "2020-02-13T08:57:50Z", "path": "runners/core-java/src/main/java/org/apache/beam/runners/core/StatefulDoFnRunner.java", "diffHunk": "@@ -252,18 +255,29 @@ private void onSortFlushTimer(BoundedWindow window, Instant timestamp) {\n     keep.forEach(sortBuffer::add);\n     minStampState.write(newMinStamp);\n     if (newMinStamp.isBefore(BoundedWindow.TIMESTAMP_MAX_VALUE)) {\n-      setupFlushTimerAndWatermarkHold(namespace, newMinStamp);\n+      setupFlushTimerAndWatermarkHold(namespace, window, newMinStamp);\n     } else {\n       clearWatermarkHold(namespace);\n     }\n   }\n \n-  private void setupFlushTimerAndWatermarkHold(StateNamespace namespace, Instant flush) {\n+  private void setupFlushTimerAndWatermarkHold(", "originalCommit": "d744b9909fb985b3c84ab8cb98dbdd3450183ad0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "12dd1129e2aff6f8471bc5b3bfb6fb35210b3c81", "url": "https://github.com/apache/beam/commit/12dd1129e2aff6f8471bc5b3bfb6fb35210b3c81", "message": "[BEAM-9265] @RequiresTimeSortedInput respects allowedLateness", "committedDate": "2020-02-14T16:37:39Z", "type": "forcePushed"}, {"oid": "8654f20680270e3e4dad8e13063433b3c7f5a9f0", "url": "https://github.com/apache/beam/commit/8654f20680270e3e4dad8e13063433b3c7f5a9f0", "message": "[BEAM-9265] @RequiresTimeSortedInput respects allowedLateness", "committedDate": "2020-02-14T18:22:58Z", "type": "commit"}, {"oid": "8654f20680270e3e4dad8e13063433b3c7f5a9f0", "url": "https://github.com/apache/beam/commit/8654f20680270e3e4dad8e13063433b3c7f5a9f0", "message": "[BEAM-9265] @RequiresTimeSortedInput respects allowedLateness", "committedDate": "2020-02-14T18:22:58Z", "type": "forcePushed"}]}