{"pr_number": 10942, "pr_title": "[BEAM-6374] Emit PCollection metrics from GoSDK", "pr_createdAt": "2020-02-23T04:55:57Z", "pr_url": "https://github.com/apache/beam/pull/10942", "timeline": [{"oid": "e7946344657cfeb346dce946c6b68c96e09b49f9", "url": "https://github.com/apache/beam/commit/e7946344657cfeb346dce946c6b68c96e09b49f9", "message": "[GoSDK] Move user metrics store out of exec.Plan", "committedDate": "2020-02-23T03:30:50Z", "type": "commit"}, {"oid": "52f4d7a432a6488f0227e2be0064e2a768e3592d", "url": "https://github.com/apache/beam/commit/52f4d7a432a6488f0227e2be0064e2a768e3592d", "message": "[BEAM-6374] Emit PCollection metrics from GoSDK", "committedDate": "2020-02-23T03:52:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU4MzExOA==", "url": "https://github.com/apache/beam/pull/10942#discussion_r383583118", "bodyText": "This comment should probably be updated to explain that the bool returned represents whether the snapshot has a DataSource, as opposed to the usual assumption of an \"ok\" value.", "author": "youngoli", "createdAt": "2020-02-24T23:52:30Z", "path": "sdks/go/pkg/beam/core/runtime/exec/plan.go", "diffHunk": "@@ -178,19 +160,25 @@ func (p *Plan) String() string {\n \treturn fmt.Sprintf(\"Plan[%v]:\\n%v\", p.ID(), strings.Join(units, \"\\n\"))\n }\n \n-// Progress returns a snapshot of input progress of the plan, and associated metrics.\n-func (p *Plan) Progress() (ProgressReportSnapshot, bool) {\n-\tif p.source != nil {\n-\t\treturn p.source.Progress(), true\n-\t}\n-\treturn ProgressReportSnapshot{}, false\n+// PlanSnapshot contains system metrics for the current run of the plan.\n+type PlanSnapshot struct {\n+\tSource ProgressReportSnapshot\n+\tPCols  []PCollectionSnapshot\n }\n \n-// Store returns the metric store for the last use of this plan.\n-func (p *Plan) Store() *metrics.Store {\n-\tp.storeMu.Lock()\n-\tdefer p.storeMu.Unlock()\n-\treturn p.store\n+// Progress returns a snapshot of progress of the plan, and associated metrics.", "originalCommit": "52f4d7a432a6488f0227e2be0064e2a768e3592d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3MDcwNA==", "url": "https://github.com/apache/beam/pull/10942#discussion_r384070704", "bodyText": "Just checking, we use the size of a small int instead of an int64 because the keys are encoded as small ints, right?", "author": "youngoli", "createdAt": "2020-02-25T19:16:31Z", "path": "sdks/go/pkg/beam/core/runtime/exec/datasource_test.go", "diffHunk": "@@ -201,6 +201,16 @@ func TestDataSource_Iterators(t *testing.T) {\n \t\t\tif got, want := iVals, expectedKeys; !equalList(got, want) {\n \t\t\t\tt.Errorf(\"DataSource => %#v, want %#v\", extractValues(got...), extractValues(want...))\n \t\t\t}\n+\n+\t\t\t// We're using small ints, so do some quick math to validate.\n+\t\t\tsizeOfSmallInt := 1", "originalCommit": "52f4d7a432a6488f0227e2be0064e2a768e3592d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2ODk5OA==", "url": "https://github.com/apache/beam/pull/10942#discussion_r384168998", "bodyText": "You're right that my wording is ambiguous. I literally mean small ints as in 0-127 which are definitely encoded as a single byte with varint64 encoding.\nIf we use larger integers (as one of the PCollection tests do), the encoded size is larger.", "author": "lostluck", "createdAt": "2020-02-25T22:36:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3MDcwNA=="}], "type": "inlineReview"}, {"oid": "42888e0f89708d905a8aa935b1ca0b1fdb628751", "url": "https://github.com/apache/beam/commit/42888e0f89708d905a8aa935b1ca0b1fdb628751", "message": "Clarify what \"small ints\" means", "committedDate": "2020-03-04T19:13:53Z", "type": "commit"}, {"oid": "0f2f9e10dc018fd540b966f1785def78dfbe3912", "url": "https://github.com/apache/beam/commit/0f2f9e10dc018fd540b966f1785def78dfbe3912", "message": "Clarity #Progress() returned bool", "committedDate": "2020-03-04T19:16:24Z", "type": "commit"}]}