{"pr_number": 12702, "pr_title": "[BEAM-10603] Fix BCJ termination conditions.", "pr_createdAt": "2020-08-27T18:54:23Z", "pr_url": "https://github.com/apache/beam/pull/12702", "timeline": [{"oid": "6bc39bc52f517000b9e8b59c56ede57d49e11ef3", "url": "https://github.com/apache/beam/commit/6bc39bc52f517000b9e8b59c56ede57d49e11ef3", "message": "Fix BCJ termination conditions.\n\nChange-Id: I24eb5a94e1bdafa1833ede0d04c9e2b824417f87", "committedDate": "2020-08-27T18:50:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI4ODkxOQ==", "url": "https://github.com/apache/beam/pull/12702#discussion_r480288919", "bodyText": "Ah this is odd indeed - this line must be hit by the test in capture_control_test.py, right? But codecov is marking it as not covered, correct?\ncc: @udim", "author": "pabloem", "createdAt": "2020-08-31T17:49:05Z", "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -87,11 +87,10 @@ def _should_end_condition_checker(self):\n     return any([l.is_triggered() for l in self._limiters])\n \n   def is_done(self):\n-    is_terminated = self._pipeline_result.state is PipelineState.DONE\n+    is_terminated = self._pipeline_result.state in (\n+        PipelineState.DONE, PipelineState.CANCELLED)", "originalCommit": "6bc39bc52f517000b9e8b59c56ede57d49e11ef3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMwNzY3Ng==", "url": "https://github.com/apache/beam/pull/12702#discussion_r480307676", "bodyText": "Yeah, it definitely looks like it should be. Maybe Codev is trying to do something smarter like static analysis on the logic?", "author": "rohdesamuel", "createdAt": "2020-08-31T18:24:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI4ODkxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExNzMzMQ==", "url": "https://github.com/apache/beam/pull/12702#discussion_r489117331", "bodyText": "Codecov reporting was buggy, should be better now. :)", "author": "udim", "createdAt": "2020-09-16T02:04:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI4ODkxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI5MjY2OA==", "url": "https://github.com/apache/beam/pull/12702#discussion_r480292668", "bodyText": "I'm sure you've considered this, but just to be sure, have you given thought to other code assuming that this call is asynchronous?\nAlso, might this pipeline run in an environment where a cancelation may take a long time? I guess it shouldnt be a problem generally?", "author": "pabloem", "createdAt": "2020-08-31T17:55:59Z", "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -103,6 +102,7 @@ def cancel(self):\n     if not PipelineState.is_terminal(self._pipeline_result.state):\n       try:\n         self._pipeline_result.cancel()\n+        self._pipeline_result.wait_until_finish()", "originalCommit": "6bc39bc52f517000b9e8b59c56ede57d49e11ef3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ5NTM0OQ==", "url": "https://github.com/apache/beam/pull/12702#discussion_r482495349", "bodyText": "Yeah, in a later PR I added a lock about the pipeline result because of this comment. And it generally shouldn't be a problem if the cancellation takes a long time.", "author": "rohdesamuel", "createdAt": "2020-09-02T21:34:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI5MjY2OA=="}], "type": "inlineReview"}]}