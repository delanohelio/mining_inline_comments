{"pr_number": 10860, "pr_title": "[BEAM-1833] Fixes BEAM-1833", "pr_createdAt": "2020-02-14T00:46:45Z", "pr_url": "https://github.com/apache/beam/pull/10860", "timeline": [{"oid": "29a444b43412d81cd9fca09700213b523a1154fb", "url": "https://github.com/apache/beam/commit/29a444b43412d81cd9fca09700213b523a1154fb", "message": "Fxes BEAM-1833\n\n* This changes the \"add_output\" interface to require a PCollection tag\nwhen adding an output to a PTransform.\n* This also changes the replacement algorithm's to propogate the\nPCollection tag when doing replacements.\n* This also moves the DirectRunner's TestStream implementation to a\nreplacement transform. This is because the TestStream relies on getting\nthe output_tags from the PTransform.\n\nChange-Id: Ibd80b0d25cd8cc5ff5c28e127f7313638e6664da", "committedDate": "2020-02-14T18:15:12Z", "type": "forcePushed"}, {"oid": "0be33bba371ef5f3241ac8ce1d190009c61dcb6b", "url": "https://github.com/apache/beam/commit/0be33bba371ef5f3241ac8ce1d190009c61dcb6b", "message": "Fxes BEAM-1833\n\n* This changes the \"add_output\" interface to require a PCollection tag\nwhen adding an output to a PTransform.\n* This also changes the replacement algorithm's to propogate the\nPCollection tag when doing replacements.\n* This also moves the DirectRunner's TestStream implementation to a\nreplacement transform. This is because the TestStream relies on getting\nthe output_tags from the PTransform.\n\nChange-Id: Ibd80b0d25cd8cc5ff5c28e127f7313638e6664da", "committedDate": "2020-02-14T22:08:26Z", "type": "forcePushed"}, {"oid": "f06dfaa435809b8c12a509897a7096f8ca7a5683", "url": "https://github.com/apache/beam/commit/f06dfaa435809b8c12a509897a7096f8ca7a5683", "message": "Fxes BEAM-1833\n\n* This changes the \"add_output\" interface to require a PCollection tag\nwhen adding an output to a PTransform.\n* This also changes the replacement algorithm's to propogate the\nPCollection tag when doing replacements.\n* This also moves the DirectRunner's TestStream implementation to a\nreplacement transform. This is because the TestStream relies on getting\nthe output_tags from the PTransform.\n\nChange-Id: Ibd80b0d25cd8cc5ff5c28e127f7313638e6664da", "committedDate": "2020-02-14T22:53:46Z", "type": "forcePushed"}, {"oid": "549dda3ee1cba9fe215eb44d9d82cf404d7ea545", "url": "https://github.com/apache/beam/commit/549dda3ee1cba9fe215eb44d9d82cf404d7ea545", "message": "Fxes BEAM-1833\n\n* This changes the \"add_output\" interface to require a PCollection tag\nwhen adding an output to a PTransform.\n* This also changes the replacement algorithm's to propogate the\nPCollection tag when doing replacements.\n* This also moves the DirectRunner's TestStream implementation to a\nreplacement transform. This is because the TestStream relies on getting\nthe output_tags from the PTransform.\n\nChange-Id: Ibd80b0d25cd8cc5ff5c28e127f7313638e6664da", "committedDate": "2020-02-15T01:27:26Z", "type": "forcePushed"}, {"oid": "19abce5cb5407f727ae2f4a476efc6221515175b", "url": "https://github.com/apache/beam/commit/19abce5cb5407f727ae2f4a476efc6221515175b", "message": "Fxes BEAM-1833\n\n* This changes the \"add_output\" interface to require a PCollection tag\nwhen adding an output to a PTransform.\n* This also changes the replacement algorithm's to propogate the\nPCollection tag when doing replacements.\n* This also moves the DirectRunner's TestStream implementation to a\nreplacement transform. This is because the TestStream relies on getting\nthe output_tags from the PTransform.\n* PCollections will now have their tags correctly propagated through the Pipeline. Users may expect the old implementation which gave PCollection output ids a monotonically increasing id. To go back to the old implementation, use the \"force_generated_pcollection_output_ids\" experiment. The default is the new implementation (force_generated_pcollection_output_ids=False).\n\nChange-Id: Ibd80b0d25cd8cc5ff5c28e127f7313638e6664da", "committedDate": "2020-02-15T01:33:06Z", "type": "forcePushed"}, {"oid": "838140babea6152bc4a46a2aaa86ca064d65fa8a", "url": "https://github.com/apache/beam/commit/838140babea6152bc4a46a2aaa86ca064d65fa8a", "message": "Fxes BEAM-1833\n\n* This changes the \"add_output\" interface to require a PCollection tag\nwhen adding an output to a PTransform.\n* This also changes the replacement algorithm's to propogate the\nPCollection tag when doing replacements.\n* This also moves the DirectRunner's TestStream implementation to a\nreplacement transform. This is because the TestStream relies on getting\nthe output_tags from the PTransform.\n* PCollections will now have their tags correctly propagated through the Pipeline. Users may expect the old implementation which gave PCollection output ids a monotonically increasing id. To go back to the old implementation, use the \"force_generated_pcollection_output_ids\" experiment. The default is the new implementation (force_generated_pcollection_output_ids=False).\n\nChange-Id: Ibd80b0d25cd8cc5ff5c28e127f7313638e6664da", "committedDate": "2020-02-15T01:41:55Z", "type": "forcePushed"}, {"oid": "65743db4b4bf04f721eacff7246e8ea3a1f999c2", "url": "https://github.com/apache/beam/commit/65743db4b4bf04f721eacff7246e8ea3a1f999c2", "message": "Fxes BEAM-1833\n\n* This changes the \"add_output\" interface to require a PCollection tag\nwhen adding an output to a PTransform.\n* This also changes the replacement algorithm's to propogate the\nPCollection tag when doing replacements.\n* This also moves the DirectRunner's TestStream implementation to a\nreplacement transform. This is because the TestStream relies on getting\nthe output_tags from the PTransform.\n* PCollections will now have their tags correctly propagated through the Pipeline. Users may expect the old implementation which gave PCollection output ids a monotonically increasing id. To go back to the old implementation, use the \"force_generated_pcollection_output_ids\" experiment. The default is the new implementation (force_generated_pcollection_output_ids=False).\n\nChange-Id: Ibd80b0d25cd8cc5ff5c28e127f7313638e6664da", "committedDate": "2020-02-15T01:43:40Z", "type": "forcePushed"}, {"oid": "d43d8522b29d73cf140be8a9b1e17f4ba9344119", "url": "https://github.com/apache/beam/commit/d43d8522b29d73cf140be8a9b1e17f4ba9344119", "message": "Fxes BEAM-1833\n\n* This changes the \"add_output\" interface to require a PCollection tag\nwhen adding an output to a PTransform.\n* This also changes the replacement algorithm's to propogate the\nPCollection tag when doing replacements.\n* This also moves the DirectRunner's TestStream implementation to a\nreplacement transform. This is because the TestStream relies on getting\nthe output_tags from the PTransform.\n* PCollections will now have their tags correctly propagated through the Pipeline. Users may expect the old implementation which gave PCollection output ids a monotonically increasing id. To go back to the old implementation, use the \"force_generated_pcollection_output_ids\" experiment. The default is the new implementation (force_generated_pcollection_output_ids=False).\n\nChange-Id: Ibd80b0d25cd8cc5ff5c28e127f7313638e6664da", "committedDate": "2020-02-15T01:58:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxMDczNw==", "url": "https://github.com/apache/beam/pull/10860#discussion_r379710737", "bodyText": "Are you sure, that we would like to change the default in the first release of the change?", "author": "aaltay", "createdAt": "2020-02-15T02:19:33Z", "path": "CHANGES.md", "diffHunk": "@@ -36,6 +36,7 @@\n \n * ReadFromPubSub(topic=<topic>) in Python previously created a subscription under the same project as the topic. Now it will create the subscription under the project specified in pipeline_options. If the project is not specified in pipeline_options, then it will create the subscription under the same project as the topic. ([BEAM-3453](https://issues.apache.org/jira/browse/BEAM-3453)).\n * SpannerAccessor in Java is now package-private to reduce API surface. `SpannerConfig.connectToSpanner` has been moved to `SpannerAccessor.create`. ([BEAM-9310](https://issues.apache.org/jira/browse/BEAM-9310)).\n+* PCollections will now have their tags correctly propagated through the Pipeline. Users may expect the old implementation which gave PCollection output ids a monotonically increasing id. To go back to the old implementation, use the \"force_generated_pcollection_output_ids\" experiment. The default is the new implementation (force_generated_pcollection_output_ids=False).", "originalCommit": "d43d8522b29d73cf140be8a9b1e17f4ba9344119", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg1MTMwNg==", "url": "https://github.com/apache/beam/pull/10860#discussion_r380851306", "bodyText": "I looked into your question a bit more about determinism in the generated ids, and I found that since it traverses dicts, the order is non-deterministic. DoOutputsTuple manually add themselves correctly to their producer. For Tuples, I'm keeping the old implementation. For PValues, I fixed the bug to now correctly propagate the tag.\nUnless I'm mistaken, for the user to want to use the old implementation they are then either:\n\nRelying on a bug (PValue)\nRelying on non-deterministic behavior for generated tags (dicts)\nOr using Tuples, which I didn't change.\n\nIs this okay to leave the default as-is?", "author": "rohdesamuel", "createdAt": "2020-02-18T18:21:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxMDczNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg1MTU0OQ==", "url": "https://github.com/apache/beam/pull/10860#discussion_r380851549", "bodyText": "What is the best practice for rolling out experiments in Beam? In any case, we should set it as the default at least within interactive runner.", "author": "davidyan74", "createdAt": "2020-02-18T18:21:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxMDczNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3ODQ2Nw==", "url": "https://github.com/apache/beam/pull/10860#discussion_r380878467", "bodyText": "Sam, I would say that the existing behavior was a bug for the points that you mentioned or that the user never really cared what the tag names are (e.g. for a partition transform).", "author": "lukecwik", "createdAt": "2020-02-18T19:13:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxMDczNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg5NjEyNQ==", "url": "https://github.com/apache/beam/pull/10860#discussion_r380896125", "bodyText": "With this explanation, I think it is fine to change the default in this release.\nFWIW, dictionaries have deterministic iteration order for py >= 3.6.", "author": "aaltay", "createdAt": "2020-02-18T19:47:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxMDczNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg4NTk5OA==", "url": "https://github.com/apache/beam/pull/10860#discussion_r380885998", "bodyText": "nit:\nright below new_output assignment, please assert that it is one of the supported types:\nassert isinstance(result, (dict, pvalue.PValue, pvalue.DoOutputsTuple))", "author": "lukecwik", "createdAt": "2020-02-18T19:27:46Z", "path": "sdks/python/apache_beam/pipeline.py", "diffHunk": "@@ -314,7 +314,15 @@ def _replace_if_needed(self, original_transform_node):\n             new_output.element_type = None", "originalCommit": "d43d8522b29d73cf140be8a9b1e17f4ba9344119", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk0MzQ3NQ==", "url": "https://github.com/apache/beam/pull/10860#discussion_r380943475", "bodyText": "Added the assert", "author": "rohdesamuel", "createdAt": "2020-02-18T21:24:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg4NTk5OA=="}], "type": "inlineReview"}, {"oid": "5ee32b4d3525e7affc5826d7e9703425ec7be0ea", "url": "https://github.com/apache/beam/commit/5ee32b4d3525e7affc5826d7e9703425ec7be0ea", "message": "Fxes BEAM-1833\n\n* This changes the \"add_output\" interface to require a PCollection tag\nwhen adding an output to a PTransform.\n* This also changes the replacement algorithm's to propogate the\nPCollection tag when doing replacements.\n* This also moves the DirectRunner's TestStream implementation to a\nreplacement transform. This is because the TestStream relies on getting\nthe output_tags from the PTransform.\n* PCollections will now have their tags correctly propagated through the Pipeline. Users may expect the old implementation which gave PCollection output ids a monotonically increasing id. To go back to the old implementation, use the \"force_generated_pcollection_output_ids\" experiment. The default is the new implementation (force_generated_pcollection_output_ids=False).\n\nChange-Id: Ibd80b0d25cd8cc5ff5c28e127f7313638e6664da", "committedDate": "2020-02-18T21:23:57Z", "type": "commit"}, {"oid": "5ee32b4d3525e7affc5826d7e9703425ec7be0ea", "url": "https://github.com/apache/beam/commit/5ee32b4d3525e7affc5826d7e9703425ec7be0ea", "message": "Fxes BEAM-1833\n\n* This changes the \"add_output\" interface to require a PCollection tag\nwhen adding an output to a PTransform.\n* This also changes the replacement algorithm's to propogate the\nPCollection tag when doing replacements.\n* This also moves the DirectRunner's TestStream implementation to a\nreplacement transform. This is because the TestStream relies on getting\nthe output_tags from the PTransform.\n* PCollections will now have their tags correctly propagated through the Pipeline. Users may expect the old implementation which gave PCollection output ids a monotonically increasing id. To go back to the old implementation, use the \"force_generated_pcollection_output_ids\" experiment. The default is the new implementation (force_generated_pcollection_output_ids=False).\n\nChange-Id: Ibd80b0d25cd8cc5ff5c28e127f7313638e6664da", "committedDate": "2020-02-18T21:23:57Z", "type": "forcePushed"}]}