{"pr_number": 13013, "pr_title": "[BEAM-11019] Fixing Go SDF progress reporting with multiple windows.", "pr_createdAt": "2020-10-05T20:47:11Z", "pr_url": "https://github.com/apache/beam/pull/13013", "timeline": [{"oid": "c5e95d3c4bbbca12aed318d424d981779f2b6626", "url": "https://github.com/apache/beam/commit/c5e95d3c4bbbca12aed318d424d981779f2b6626", "message": "[BEAM-11019] Fixing Go SDF progress reporting with multiple windows.\n\nNow the SDF runner keeps track of the current window being processed as well,\nso when GetProgress is called on the SplittableUnit it can calculate progress\nrelative to all the windows.", "committedDate": "2020-10-05T20:45:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkzOTAxMg==", "url": "https://github.com/apache/beam/pull/13013#discussion_r499939012", "bodyText": "Consider amending the comment here making the optimization explicit.\n...doesn't observe windows meaning they can be computed simultaneously as a single window.\nMostly because processSingleWindow is very explicit at saying it's for 1 window only, which could cause this to read as a bug otherwise.", "author": "lostluck", "createdAt": "2020-10-06T00:14:56Z", "path": "sdks/go/pkg/beam/core/runtime/exec/pardo.go", "diffHunk": "@@ -134,40 +134,40 @@ func (n *ParDo) processMainInput(mainIn *MainInput) error {\n \t// If the function observes windows, we must invoke it for each window. The expected fast path\n \t// is that either there is a single window or the function doesn't observes windows.", "originalCommit": "c5e95d3c4bbbca12aed318d424d981779f2b6626", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MTk4OQ==", "url": "https://github.com/apache/beam/pull/13013#discussion_r500671989", "bodyText": "Done, added some comments making this optimization more explicit.", "author": "youngoli", "createdAt": "2020-10-07T00:37:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkzOTAxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk0MTY3OA==", "url": "https://github.com/apache/beam/pull/13013#discussion_r499941678", "bodyText": "rm commented out code.", "author": "lostluck", "createdAt": "2020-10-06T00:25:06Z", "path": "sdks/go/pkg/beam/core/runtime/exec/sdf_test.go", "diffHunk": "@@ -400,6 +400,90 @@ func TestAsSplittableUnit(t *testing.T) {\n \tif err != nil {\n \t\tt.Fatalf(\"invalid function: %v\", err)\n \t}\n+\t//wdfn, err := graph.NewDoFn(&VetWindowSdf{}, graph.NumMainInputs(graph.MainSingle))", "originalCommit": "c5e95d3c4bbbca12aed318d424d981779f2b6626", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3MjAwNQ==", "url": "https://github.com/apache/beam/pull/13013#discussion_r500672005", "bodyText": "Done.", "author": "youngoli", "createdAt": "2020-10-07T00:37:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk0MTY3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk0MjQxNQ==", "url": "https://github.com/apache/beam/pull/13013#discussion_r499942415", "bodyText": "VetSdf doesn't observe windows (either explicitly or implicitly via side input), so I'm not sure it checks the code?", "author": "lostluck", "createdAt": "2020-10-06T00:28:18Z", "path": "sdks/go/pkg/beam/core/runtime/exec/sdf_test.go", "diffHunk": "@@ -400,6 +400,90 @@ func TestAsSplittableUnit(t *testing.T) {\n \tif err != nil {\n \t\tt.Fatalf(\"invalid function: %v\", err)\n \t}\n+\t//wdfn, err := graph.NewDoFn(&VetWindowSdf{}, graph.NumMainInputs(graph.MainSingle))\n+\t//if err != nil {\n+\t//\tt.Fatalf(\"invalid function: %v\", err)\n+\t//}\n+\tmultiWindows := []typex.Window{\n+\t\twindow.IntervalWindow{Start: 10, End: 20},\n+\t\twindow.IntervalWindow{Start: 11, End: 21},\n+\t\twindow.IntervalWindow{Start: 12, End: 22},\n+\t\twindow.IntervalWindow{Start: 13, End: 23},\n+\t}\n+\n+\t// Test that progress returns expected results and respects windows.\n+\tt.Run(\"Progress\", func(t *testing.T) {\n+\t\ttests := []struct {\n+\t\t\tname          string\n+\t\t\tfn            *graph.DoFn\n+\t\t\tin            FullValue\n+\t\t\tdoneWork      float64 // Will be output by RTracker's GetProgress.\n+\t\t\tremainingWork float64 // Will be output by RTracker's GetProgress.\n+\t\t\tcurrWindow    int\n+\t\t\twantProgress  float64\n+\t\t}{\n+\t\t\t{\n+\t\t\t\tname: \"SingleWindow\",\n+\t\t\t\tfn:   dfn,\n+\t\t\t\tin: FullValue{\n+\t\t\t\t\tElm: &FullValue{\n+\t\t\t\t\t\tElm:  1,\n+\t\t\t\t\t\tElm2: &VetRestriction{ID: \"Sdf\"},\n+\t\t\t\t\t},\n+\t\t\t\t\tElm2:      1.0,\n+\t\t\t\t\tTimestamp: testTimestamp,\n+\t\t\t\t\tWindows:   testWindows,\n+\t\t\t\t},\n+\t\t\t\tdoneWork:      1.0,\n+\t\t\t\tremainingWork: 1.0,\n+\t\t\t\tcurrWindow:    0,\n+\t\t\t\twantProgress:  0.5,\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\tname: \"MultipleWindows\",\n+\t\t\t\tfn:   dfn,", "originalCommit": "c5e95d3c4bbbca12aed318d424d981779f2b6626", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3NDA3MA==", "url": "https://github.com/apache/beam/pull/13013#discussion_r500674070", "bodyText": "This test doesn't actually check the code in ProcessElement because it never actually calls ProcessElement, so it doesn't actually matter what the DoFn being used is (in fact, I can probably erase that field from the tests). It's unit testing the SplittableUnit behavior specifically.\nI think I can add a unit test to make sure ProcessElement handles windows correctly (or a component test technically, since it's testing multiple methods), but it's a little more involved since I need to figure out how to block processing to check progress and perform splits. I'll add it in the upcoming PR enabling multi-window splitting.", "author": "youngoli", "createdAt": "2020-10-07T00:45:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk0MjQxNQ=="}], "type": "inlineReview"}, {"oid": "1d575a5c3e1708ccde18a7ea257317a64467494a", "url": "https://github.com/apache/beam/commit/1d575a5c3e1708ccde18a7ea257317a64467494a", "message": "[BEAM-11019] Fixup", "committedDate": "2020-10-07T00:35:18Z", "type": "commit"}, {"oid": "7b7b47d6b8b681da99493083b9f71b9f8255db16", "url": "https://github.com/apache/beam/commit/7b7b47d6b8b681da99493083b9f71b9f8255db16", "message": "[BEAM-11019] More fixup", "committedDate": "2020-10-07T00:54:54Z", "type": "commit"}]}