{"pr_number": 12084, "pr_title": "[BEAM-10317] Python - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID", "pr_createdAt": "2020-06-25T00:53:36Z", "pr_url": "https://github.com/apache/beam/pull/12084", "timeline": [{"oid": "b917196e2f03ffdfd63dd49fe6729b334c3ebadf", "url": "https://github.com/apache/beam/commit/b917196e2f03ffdfd63dd49fe6729b334c3ebadf", "message": "[BEAM-10317] Python - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID", "committedDate": "2020-06-25T00:57:23Z", "type": "forcePushed"}, {"oid": "6a8b2d29250962d33f2de1c89a3d1bf11a97895a", "url": "https://github.com/apache/beam/commit/6a8b2d29250962d33f2de1c89a3d1bf11a97895a", "message": "[BEAM-10317] Python - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID", "committedDate": "2020-06-25T19:36:40Z", "type": "forcePushed"}, {"oid": "54f60c3755f757369d447eec1259203395f76181", "url": "https://github.com/apache/beam/commit/54f60c3755f757369d447eec1259203395f76181", "message": "[BEAM-10317] Python - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID", "committedDate": "2020-06-25T22:21:56Z", "type": "forcePushed"}, {"oid": "a2cce709b5014ad334b24e50046273f727746d7a", "url": "https://github.com/apache/beam/commit/a2cce709b5014ad334b24e50046273f727746d7a", "message": "[BEAM-10317] Python - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID", "committedDate": "2020-06-25T23:35:08Z", "type": "forcePushed"}, {"oid": "77265f82d95a4f42e130d8c76e03863de304aa56", "url": "https://github.com/apache/beam/commit/77265f82d95a4f42e130d8c76e03863de304aa56", "message": "[BEAM-10317] Python - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID", "committedDate": "2020-06-26T00:45:33Z", "type": "forcePushed"}, {"oid": "459b9e0dd8c8ccff381e946b35f99d25268947a8", "url": "https://github.com/apache/beam/commit/459b9e0dd8c8ccff381e946b35f99d25268947a8", "message": "[BEAM-10317] Python - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID", "committedDate": "2020-06-26T01:00:27Z", "type": "forcePushed"}, {"oid": "b6f929ae90a842ea714bb71d7fca915281805645", "url": "https://github.com/apache/beam/commit/b6f929ae90a842ea714bb71d7fca915281805645", "message": "[BEAM-10317] Python - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID", "committedDate": "2020-06-26T23:40:10Z", "type": "forcePushed"}, {"oid": "16429501a4de8d17bdc380a2e97dd53c033d21b4", "url": "https://github.com/apache/beam/commit/16429501a4de8d17bdc380a2e97dd53c033d21b4", "message": "[BEAM-10317] Python - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID", "committedDate": "2020-06-29T20:49:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyMTk4Mg==", "url": "https://github.com/apache/beam/pull/12084#discussion_r448121982", "bodyText": "(nit)Up to you, but you could reduce to this:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                job_labels = dict() if job_labels is None else job_labels\n          \n          \n            \n                job_labels = job_labels or {}", "author": "pabloem", "createdAt": "2020-07-01T05:24:00Z", "path": "sdks/python/apache_beam/io/gcp/bigquery_io_metadata.py", "diffHunk": "@@ -0,0 +1,55 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"Metadata for use in BigQueryIO, i.e. a job_id to use in BQ job labels.\"\"\"\n+\n+# pytype: skip-file\n+\n+from __future__ import absolute_import\n+\n+from apache_beam.io.gcp import gce_metadata_util\n+\n+\n+def CreateBigQueryIOMetadata():\n+  \"\"\"Creates a BigQueryIOMetadata.\n+\n+  This will request metadata properly based on which runner is being used.\n+  \"\"\"\n+  dataflow_job_id = gce_metadata_util.FetchDataflowJobId()\n+  # If a dataflow_job id is returned on GCE metadata. Then it means\n+  # This program is running on a Dataflow GCE VM.\n+  is_dataflow_runner = bool(dataflow_job_id)\n+  kwargs = {}\n+  if is_dataflow_runner:\n+    kwargs['beam_job_id'] = dataflow_job_id\n+  return BigQueryIOMetadata(**kwargs)\n+\n+\n+class BigQueryIOMetadata(object):\n+  \"\"\"Metadata class for BigQueryIO. i.e. to use as BQ job labels.\n+\n+  Do not construct directly, use the CreateBigQueryIOMetadata factory.\n+  Which will request metadata properly based on which runner is being used.\n+  \"\"\"\n+  def __init__(self, beam_job_id=None):\n+    self.beam_job_id = beam_job_id\n+\n+  def add_additional_bq_job_labels(self, job_labels=None):\n+    job_labels = dict() if job_labels is None else job_labels", "originalCommit": "16429501a4de8d17bdc380a2e97dd53c033d21b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU1MTAwNg==", "url": "https://github.com/apache/beam/pull/12084#discussion_r448551006", "bodyText": "Done", "author": "ajamato", "createdAt": "2020-07-01T18:43:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyMTk4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyMjkwNQ==", "url": "https://github.com/apache/beam/pull/12084#discussion_r448122905", "bodyText": "Do you want to add the display data item for this DoFn?", "author": "pabloem", "createdAt": "2020-07-01T05:27:13Z", "path": "sdks/python/apache_beam/io/gcp/bigquery_file_loads.py", "diffHunk": "@@ -327,10 +329,13 @@ def __init__(\n     self.write_disposition = write_disposition\n     self.test_client = test_client\n     self._observed_tables = set()\n+    self.bq_io_metadata = None", "originalCommit": "16429501a4de8d17bdc380a2e97dd53c033d21b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU0ODA2OA==", "url": "https://github.com/apache/beam/pull/12084#discussion_r448548068", "bodyText": "Yes. Done", "author": "ajamato", "createdAt": "2020-07-01T18:37:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyMjkwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyMzE2Nw==", "url": "https://github.com/apache/beam/pull/12084#discussion_r448123167", "bodyText": "we usually make functions be snake_case. Could you change this please?", "author": "pabloem", "createdAt": "2020-07-01T05:28:09Z", "path": "sdks/python/apache_beam/io/gcp/bigquery_io_metadata.py", "diffHunk": "@@ -0,0 +1,55 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"Metadata for use in BigQueryIO, i.e. a job_id to use in BQ job labels.\"\"\"\n+\n+# pytype: skip-file\n+\n+from __future__ import absolute_import\n+\n+from apache_beam.io.gcp import gce_metadata_util\n+\n+\n+def CreateBigQueryIOMetadata():", "originalCommit": "16429501a4de8d17bdc380a2e97dd53c033d21b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU0OTk2MA==", "url": "https://github.com/apache/beam/pull/12084#discussion_r448549960", "bodyText": "Done", "author": "ajamato", "createdAt": "2020-07-01T18:41:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyMzE2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyMzMzNw==", "url": "https://github.com/apache/beam/pull/12084#discussion_r448123337", "bodyText": "make functions snake_case please", "author": "pabloem", "createdAt": "2020-07-01T05:28:57Z", "path": "sdks/python/apache_beam/io/gcp/gce_metadata_util.py", "diffHunk": "@@ -0,0 +1,51 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"Fetches GCE metadata if the calling process is running on a GCE VM.\"\"\"\n+\n+# pytype: skip-file\n+\n+from __future__ import absolute_import\n+\n+import httplib2\n+\n+from apache_beam.internal.http_client import get_new_http\n+\n+BASE_METADATA_URL = \"http://metadata/computeMetadata/v1/\"\n+\n+\n+def FetchMetadata(key):", "originalCommit": "16429501a4de8d17bdc380a2e97dd53c033d21b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU1MjkyNQ==", "url": "https://github.com/apache/beam/pull/12084#discussion_r448552925", "bodyText": "Done", "author": "ajamato", "createdAt": "2020-07-01T18:47:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyMzMzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNDEwNQ==", "url": "https://github.com/apache/beam/pull/12084#discussion_r448124105", "bodyText": "os.path.join should ensure URLs are joined properly independently of whether the key has/does not have a leading slash. Do you think that'd be good to add?", "author": "pabloem", "createdAt": "2020-07-01T05:31:49Z", "path": "sdks/python/apache_beam/io/gcp/gce_metadata_util.py", "diffHunk": "@@ -0,0 +1,51 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"Fetches GCE metadata if the calling process is running on a GCE VM.\"\"\"\n+\n+# pytype: skip-file\n+\n+from __future__ import absolute_import\n+\n+import httplib2\n+\n+from apache_beam.internal.http_client import get_new_http\n+\n+BASE_METADATA_URL = \"http://metadata/computeMetadata/v1/\"\n+\n+\n+def FetchMetadata(key):\n+  try:\n+    h = get_new_http(timeout_secs=5)\n+    headers = {\"Metadata-Flavor\": \"Google\"}\n+    uri = BASE_METADATA_URL + key", "originalCommit": "16429501a4de8d17bdc380a2e97dd53c033d21b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNjIxNA==", "url": "https://github.com/apache/beam/pull/12084#discussion_r448126214", "bodyText": "(up to you)", "author": "pabloem", "createdAt": "2020-07-01T05:39:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNDEwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU1MzQ4MA==", "url": "https://github.com/apache/beam/pull/12084#discussion_r448553480", "bodyText": "No, because on windows it will add backslashes. Let's just keep it simple like this for now. Since its a private method, we should expect proper methods like fetch_dataflow_job_id to be written for future keys.", "author": "ajamato", "createdAt": "2020-07-01T18:48:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNDEwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNTU5Mg==", "url": "https://github.com/apache/beam/pull/12084#discussion_r448125592", "bodyText": "this means that for other runners, BQ will receive jobs with a label of 'beam_job_id'=None - is that fine?", "author": "pabloem", "createdAt": "2020-07-01T05:37:07Z", "path": "sdks/python/apache_beam/io/gcp/bigquery_io_metadata.py", "diffHunk": "@@ -0,0 +1,55 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"Metadata for use in BigQueryIO, i.e. a job_id to use in BQ job labels.\"\"\"\n+\n+# pytype: skip-file\n+\n+from __future__ import absolute_import\n+\n+from apache_beam.io.gcp import gce_metadata_util\n+\n+\n+def CreateBigQueryIOMetadata():\n+  \"\"\"Creates a BigQueryIOMetadata.\n+\n+  This will request metadata properly based on which runner is being used.\n+  \"\"\"\n+  dataflow_job_id = gce_metadata_util.FetchDataflowJobId()\n+  # If a dataflow_job id is returned on GCE metadata. Then it means\n+  # This program is running on a Dataflow GCE VM.\n+  is_dataflow_runner = bool(dataflow_job_id)\n+  kwargs = {}\n+  if is_dataflow_runner:\n+    kwargs['beam_job_id'] = dataflow_job_id\n+  return BigQueryIOMetadata(**kwargs)\n+\n+\n+class BigQueryIOMetadata(object):\n+  \"\"\"Metadata class for BigQueryIO. i.e. to use as BQ job labels.\n+\n+  Do not construct directly, use the CreateBigQueryIOMetadata factory.\n+  Which will request metadata properly based on which runner is being used.\n+  \"\"\"\n+  def __init__(self, beam_job_id=None):\n+    self.beam_job_id = beam_job_id\n+\n+  def add_additional_bq_job_labels(self, job_labels=None):\n+    job_labels = dict() if job_labels is None else job_labels\n+    if self.beam_job_id and 'beam_job_id' not in job_labels:\n+      job_labels['beam_job_id'] = self.beam_job_id", "originalCommit": "16429501a4de8d17bdc380a2e97dd53c033d21b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU1MTY4Mg==", "url": "https://github.com/apache/beam/pull/12084#discussion_r448551682", "bodyText": "No, it shouldn't populate the label at all in that case. Because of the\n\"if self.beam_job_id\"\nIt won't evaluate the if if it's None or an empty string.\nOr have I made a mistake which I don't see?", "author": "ajamato", "createdAt": "2020-07-01T18:45:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNTU5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNjg3NA==", "url": "https://github.com/apache/beam/pull/12084#discussion_r448126874", "bodyText": "how will it work for non-dataflow workers? Will it fail immediately? time out?", "author": "pabloem", "createdAt": "2020-07-01T05:41:27Z", "path": "sdks/python/apache_beam/io/gcp/gce_metadata_util.py", "diffHunk": "@@ -0,0 +1,51 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"Fetches GCE metadata if the calling process is running on a GCE VM.\"\"\"\n+\n+# pytype: skip-file\n+\n+from __future__ import absolute_import\n+\n+import httplib2\n+\n+from apache_beam.internal.http_client import get_new_http\n+\n+BASE_METADATA_URL = \"http://metadata/computeMetadata/v1/\"\n+\n+\n+def FetchMetadata(key):\n+  try:\n+    h = get_new_http(timeout_secs=5)\n+    headers = {\"Metadata-Flavor\": \"Google\"}\n+    uri = BASE_METADATA_URL + key\n+    resp, content = h.request(uri, \"GET\", headers=headers)\n+    if resp.status == 200:\n+      return content\n+  except httplib2.HttpLib2Error:", "originalCommit": "16429501a4de8d17bdc380a2e97dd53c033d21b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU4ODU0OQ==", "url": "https://github.com/apache/beam/pull/12084#discussion_r448588549", "bodyText": "The URL should not resolve, so it should fail quickly after attempting a request, not for the full timeout. Ideally we are making this request as infrequently as possible.\nI've also just added a method to validate the label, in the off case that the metadata server is giving bad output. I don't want this to make the BQ jobs fail (they will fail if given invalid labels).", "author": "ajamato", "createdAt": "2020-07-01T20:05:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNjg3NA=="}], "type": "inlineReview"}, {"oid": "5ab2b0a1051863fca3f85887cb8fe2d0933a630f", "url": "https://github.com/apache/beam/commit/5ab2b0a1051863fca3f85887cb8fe2d0933a630f", "message": "[BEAM-10317] Python - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID", "committedDate": "2020-07-01T20:20:43Z", "type": "forcePushed"}, {"oid": "48fa73e51b683148f102187c3a67278118cbb8ac", "url": "https://github.com/apache/beam/commit/48fa73e51b683148f102187c3a67278118cbb8ac", "message": "[BEAM-10317] Python - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID", "committedDate": "2020-07-02T00:37:16Z", "type": "commit"}, {"oid": "48fa73e51b683148f102187c3a67278118cbb8ac", "url": "https://github.com/apache/beam/commit/48fa73e51b683148f102187c3a67278118cbb8ac", "message": "[BEAM-10317] Python - Update BigQueryIO to tag BigQuery Jobs with the Dataflow Job ID", "committedDate": "2020-07-02T00:37:16Z", "type": "forcePushed"}]}