{"pr_number": 12832, "pr_title": "[BEAM-10906] Add basic ToRows transform.", "pr_createdAt": "2020-09-11T22:50:12Z", "pr_url": "https://github.com/apache/beam/pull/12832", "timeline": [{"oid": "11cdff16c79ca2158930c2428fdb2a49ab716187", "url": "https://github.com/apache/beam/commit/11cdff16c79ca2158930c2428fdb2a49ab716187", "message": "Add basic ToRows transform.\n\nThis will make it easier to create schema'd PCollections.\n\nThis includes improvements to type inference to be able to better\nunderstand the Row type and apply getattr(...).", "committedDate": "2020-09-11T22:49:37Z", "type": "commit"}, {"oid": "0e92ffc9fb8c58579d9d3aa450cb1eea12f57fcf", "url": "https://github.com/apache/beam/commit/0e92ffc9fb8c58579d9d3aa450cb1eea12f57fcf", "message": "lint", "committedDate": "2020-09-14T22:37:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExNDMyOQ==", "url": "https://github.com/apache/beam/pull/12832#discussion_r489114329", "bodyText": "Nit: For simplicity I'd only support the kwargs format.\n(My personal preference would be to always use kwargs so it's clear what's being mapped to what.)", "author": "udim", "createdAt": "2020-09-16T01:53:03Z", "path": "sdks/python/apache_beam/transforms/core.py", "diffHunk": "@@ -2519,6 +2520,45 @@ def expand(self, pcoll):\n             (*(key + value))))\n \n \n+class ToRows(PTransform):\n+  \"\"\"Converts the elements of a PCollection into a schema'd PCollection of Rows.\n+\n+  `ToRow(...)` is roughly equivalent to `Map(lambda x: Row(...))` where each\n+  argument (which may be a string or callable) of `ToRow` is applied to `x`.\n+  For example,\n+\n+      pcoll | beam.ToRow('a', b=lambda x: foo(x))", "originalCommit": "0e92ffc9fb8c58579d9d3aa450cb1eea12f57fcf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1MDY4NA==", "url": "https://github.com/apache/beam/pull/12832#discussion_r489550684", "bodyText": "Good call. Done.", "author": "robertwb", "createdAt": "2020-09-16T15:59:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExNDMyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExNDg2Nw==", "url": "https://github.com/apache/beam/pull/12832#discussion_r489114867", "bodyText": "I recommend testing internally since this may break some tests.", "author": "udim", "createdAt": "2020-09-16T01:55:10Z", "path": "sdks/python/apache_beam/typehints/trivial_inference.py", "diffHunk": "@@ -320,6 +325,10 @@ def infer_return_type(c, input_types, debug=False, depth=5):\n             dict: typehints.Dict[Any, Any]\n         }[c]\n       return c\n+    elif (c == getattr and len(input_types) == 2 and", "originalCommit": "0e92ffc9fb8c58579d9d3aa450cb1eea12f57fcf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1MDM1Ng==", "url": "https://github.com/apache/beam/pull/12832#discussion_r489550356", "bodyText": "Done. All looks well.", "author": "robertwb", "createdAt": "2020-09-16T15:59:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExNDg2Nw=="}], "type": "inlineReview"}, {"oid": "0e92ffc9fb8c58579d9d3aa450cb1eea12f57fcf", "url": "https://github.com/apache/beam/commit/0e92ffc9fb8c58579d9d3aa450cb1eea12f57fcf", "message": "lint", "committedDate": "2020-09-14T22:37:00Z", "type": "forcePushed"}, {"oid": "6c8b3fd7ded8cacabf375dd53421cec567066679", "url": "https://github.com/apache/beam/commit/6c8b3fd7ded8cacabf375dd53421cec567066679", "message": "Rename ToRows to Select.", "committedDate": "2020-09-17T00:07:20Z", "type": "commit"}, {"oid": "616ae9d0dae94cb3923d4b92fdcce0b79af795cb", "url": "https://github.com/apache/beam/commit/616ae9d0dae94cb3923d4b92fdcce0b79af795cb", "message": "Merge branch 'master' into to-row", "committedDate": "2020-09-17T00:11:32Z", "type": "commit"}, {"oid": "b9616a8213bf48d5706304bda8818d6216cf3168", "url": "https://github.com/apache/beam/commit/b9616a8213bf48d5706304bda8818d6216cf3168", "message": "Fix groupby tests.", "committedDate": "2020-09-17T00:34:58Z", "type": "commit"}]}