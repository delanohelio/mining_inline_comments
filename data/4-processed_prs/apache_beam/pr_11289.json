{"pr_number": 11289, "pr_title": "[BEAM-9660]: Add an explicit check for integer overflow.", "pr_createdAt": "2020-04-02T03:18:13Z", "pr_url": "https://github.com/apache/beam/pull/11289", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2NjQyMQ==", "url": "https://github.com/apache/beam/pull/11289#discussion_r402466421", "bodyText": "We still would prefer to send a truncation commit (from buildWorkItemTruncationRequest).  That reports the commit as too large but sends the necessary info to the backend to attempt to truncate the work item for reprocessing.", "author": "scwhittle", "createdAt": "2020-04-02T16:58:16Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "diffHunk": "@@ -1372,11 +1372,13 @@ private void process(\n       WorkItemCommitRequest commitRequest = outputBuilder.build();\n       int byteLimit = maxWorkItemCommitBytes;\n       int commitSize = commitRequest.getSerializedSize();\n-      int estimatedCommitSize = commitSize < 0 ? Integer.MAX_VALUE : commitSize;\n-\n-      // Detect overflow of integer serialized size or if the byte limit was exceeded.\n-      windmillMaxObservedWorkItemCommitBytes.addValue(estimatedCommitSize);\n-      if (estimatedCommitSize > byteLimit) {\n+      // Detect overflow of integer serialized size.\n+      if (commitSize < 0) {\n+        throw KeyCommitTooLargeException.causedBy(computationId, byteLimit, commitRequest);", "originalCommit": "426230a54744f9fb930b7d2bc28dbd0098a1ce10", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY5MzM4MQ==", "url": "https://github.com/apache/beam/pull/11289#discussion_r402693381", "bodyText": "Done.", "author": "spoortikundargi", "createdAt": "2020-04-03T01:52:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2NjQyMQ=="}], "type": "inlineReview"}, {"oid": "cac59bc585d8c7eb71fe4a893b3b337c630287d4", "url": "https://github.com/apache/beam/commit/cac59bc585d8c7eb71fe4a893b3b337c630287d4", "message": "[BEAM-9660]: Add an explicit check for integer overflow.\n\nIf `commitSize` is less than zero (due to overflow of integer serialized size), the existing code was setting it to `Integer.MAX_VALUE` and using the `estimatedCommitSize > byteLimit` check to throw an exception. However, in some cases in Dataflow Streaming Applicance, `byteLimit` is set to `Integer.MAX_VALUE` and so the check `estimatedCommitSize > byteLimit` fails to detect integer overflow.", "committedDate": "2020-04-03T01:44:17Z", "type": "commit"}, {"oid": "cac59bc585d8c7eb71fe4a893b3b337c630287d4", "url": "https://github.com/apache/beam/commit/cac59bc585d8c7eb71fe4a893b3b337c630287d4", "message": "[BEAM-9660]: Add an explicit check for integer overflow.\n\nIf `commitSize` is less than zero (due to overflow of integer serialized size), the existing code was setting it to `Integer.MAX_VALUE` and using the `estimatedCommitSize > byteLimit` check to throw an exception. However, in some cases in Dataflow Streaming Applicance, `byteLimit` is set to `Integer.MAX_VALUE` and so the check `estimatedCommitSize > byteLimit` fails to detect integer overflow.", "committedDate": "2020-04-03T01:44:17Z", "type": "forcePushed"}]}