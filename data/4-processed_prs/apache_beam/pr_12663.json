{"pr_number": 12663, "pr_title": "[BEAM-10597] Propagate BigQuery streaming insert throttled time to Dataflow worker in Python SDK", "pr_createdAt": "2020-08-21T17:47:49Z", "pr_url": "https://github.com/apache/beam/pull/12663", "timeline": [{"oid": "3e80a2113a4e06c9c1efe566b3db872cb96c8e91", "url": "https://github.com/apache/beam/commit/3e80a2113a4e06c9c1efe566b3db872cb96c8e91", "message": "Propagate BigQuery streaming insert throttled time to Dataflow worker in Python SDK", "committedDate": "2020-08-21T17:44:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg0MjQ4Ng==", "url": "https://github.com/apache/beam/pull/12663#discussion_r474842486", "bodyText": "In Python, BigQuery does not insert rows in parallel threads and retry within each of them, instead it backs off on all retry-able inserts together.", "author": "robinyqiu", "createdAt": "2020-08-21T17:51:33Z", "path": "sdks/python/apache_beam/io/gcp/bigquery.py", "diffHunk": "@@ -1257,6 +1260,7 @@ def _flush_batch(self, destination):\n         _LOGGER.info(\n             'Sleeping %s seconds before retrying insertion.', retry_backoff)\n         time.sleep(retry_backoff)\n+        self._throttled_secs.inc(retry_backoff)", "originalCommit": "3e80a2113a4e06c9c1efe566b3db872cb96c8e91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkxMzczOQ==", "url": "https://github.com/apache/beam/pull/12663#discussion_r474913739", "bodyText": "I wonder if we should make this a Metrics.distribution type metric? @rezarokni do you have an opinion about this? Since the metric may be exported to monitoring systems, a counter may just show a 'sometimes increasing' chart vs a distribution showing a rate of increase?", "author": "pabloem", "createdAt": "2020-08-21T19:54:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg0MjQ4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkyOTg0MA==", "url": "https://github.com/apache/beam/pull/12663#discussion_r474929840", "bodyText": "I think we can consider that as an improvement. Currently the metric is reported to autoscalar, so I simply made it a counter, similar to the ones in GCS and DataStore", "author": "robinyqiu", "createdAt": "2020-08-21T20:14:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg0MjQ4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk1MzczNg==", "url": "https://github.com/apache/beam/pull/12663#discussion_r475953736", "bodyText": "@pabloem Sorry missed this one...\nYes agree with Metrics for this type of value, as the ever increasing number will just chart as a liner value without the ability to usefully capture the changes.", "author": "rezarokni", "createdAt": "2020-08-24T23:22:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg0MjQ4Ng=="}], "type": "inlineReview"}]}