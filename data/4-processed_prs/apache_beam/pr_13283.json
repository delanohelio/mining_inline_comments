{"pr_number": 13283, "pr_title": "[BEAM-11142] Enable CrossLanguageValidateRunner test for dataflow run\u2026", "pr_createdAt": "2020-11-07T02:29:13Z", "pr_url": "https://github.com/apache/beam/pull/13283", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU0MDU1Nw==", "url": "https://github.com/apache/beam/pull/13283#discussion_r521540557", "bodyText": "Ditto. Not sure why we need this update given that tests should already pass for Dataflow.", "author": "chamikaramj", "createdAt": "2020-11-11T17:59:15Z", "path": "sdks/python/apache_beam/transforms/ptransform.py", "diffHunk": "@@ -695,9 +695,9 @@ def from_runner_api(cls,\n     # type: (...) -> Optional[PTransform]\n     if proto is None or proto.spec is None or not proto.spec.urn:\n       return None\n-    parameter_type, constructor = cls._known_urns[proto.spec.urn]\n \n     try:\n+      parameter_type, constructor = cls._known_urns[proto.spec.urn]", "originalCommit": "46b5cb623ed485c03999601d2f764a82d30e7b5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU4MTk3NA==", "url": "https://github.com/apache/beam/pull/13283#discussion_r521581974", "bodyText": "It was for fixing Java xlang pipelines but the fix is still incomplete anyway. Will revert this.", "author": "ihji", "createdAt": "2020-11-11T19:16:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU0MDU1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU0MDYyOQ==", "url": "https://github.com/apache/beam/pull/13283#discussion_r521540629", "bodyText": "Why do we need to update dataflow_runner for the test ?\nExisting tests should already work for dataflow_runner without these updates.\nDuplicates environments are handled here when submitting the Dataflow job request: https://github.com/apache/beam/blob/master/sdks/python/apache_beam/runners/dataflow/internal/apiclient.py#L303", "author": "chamikaramj", "createdAt": "2020-11-11T17:59:21Z", "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner.py", "diffHunk": "@@ -542,19 +593,32 @@ def run_pipeline(self, pipeline, options):\n       # TODO(chamikara): remove following pipeline and pipeline proto recreation\n       # after portable job submission path is fully in place.\n       from apache_beam import Pipeline\n-      pipeline = Pipeline.from_runner_api(\n+      pipeline, src_context = Pipeline.from_runner_api(\n           self.proto_pipeline,\n           pipeline.runner,\n           options,\n+          return_context=True,\n           allow_proto_holders=True)\n \n       # Pipelines generated from proto do not have output set to PDone set for\n       # leaf elements.\n       pipeline.visit(self._set_pdone_visitor(pipeline))\n \n+      from apache_beam.runners import pipeline_context\n+      dst_context = pipeline_context.PipelineContext(\n+          component_id_map=pipeline.component_id_map,\n+          default_environment=self._default_environment)\n+\n+      # Copy external environments to prevent dangling environment ids\n+      pipeline.visit(", "originalCommit": "46b5cb623ed485c03999601d2f764a82d30e7b5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU4MDg2MA==", "url": "https://github.com/apache/beam/pull/13283#discussion_r521580860", "bodyText": "Python pipeline using python external transform doesn't work without handling dangling environment ids.\nIt's not because of duplicated environments. It's because of missing environments. Dangling environment IDs are generated when 1) PTransform URN from external environment is known (therefore RunnerAPIPTransformHolder won't work as expected) 2) PipelineContext from rehydration process is not used in the second proto conversion. Python external transforms in Python pipelines are rehydrated to AppliedPTransform since external PTransform URN is known to the SDK however AppliedPTransform only keeps an environment id not environment itself. Environments are saved separately in PipelineContext but we dropped the PipelineContext from rehydration in the second proto conversion.", "author": "ihji", "createdAt": "2020-11-11T19:14:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU0MDYyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYxODAyNg==", "url": "https://github.com/apache/beam/pull/13283#discussion_r521618026", "bodyText": "\"RunnerAPIPTransformHolder\" is expected to go away soon (when we enable portable job submission). Do you think we can skip this test (that use Python external transforms in a Python pipeline) for now and try without these updates when we have portable job submission ?", "author": "chamikaramj", "createdAt": "2020-11-11T20:25:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU0MDYyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY4ODYyNQ==", "url": "https://github.com/apache/beam/pull/13283#discussion_r521688625", "bodyText": "Make sense. Updated to enable PythonUsingJava and PythonUsingSql only.", "author": "ihji", "createdAt": "2020-11-11T22:59:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU0MDYyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU0MTAyOQ==", "url": "https://github.com/apache/beam/pull/13283#discussion_r521541029", "bodyText": "This probably should be a separate PR.", "author": "chamikaramj", "createdAt": "2020-11-11T18:00:02Z", "path": "sdks/python/setup.py", "diffHunk": "@@ -256,70 +256,71 @@ def run(self):\n       'Python %s.%s. You may encounter bugs or missing features.' % (\n           sys.version_info.major, sys.version_info.minor))\n \n-setuptools.setup(\n-    name=PACKAGE_NAME,\n-    version=PACKAGE_VERSION,\n-    description=PACKAGE_DESCRIPTION,\n-    long_description=PACKAGE_LONG_DESCRIPTION,\n-    url=PACKAGE_URL,\n-    download_url=PACKAGE_DOWNLOAD_URL,\n-    author=PACKAGE_AUTHOR,\n-    author_email=PACKAGE_EMAIL,\n-    packages=setuptools.find_packages(),\n-    package_data={'apache_beam': [\n-        '*/*.pyx', '*/*/*.pyx', '*/*.pxd', '*/*/*.pxd', '*/*.h', '*/*/*.h',\n-        'testing/data/*.yaml', 'portability/api/*.yaml']},\n-    ext_modules=cythonize([\n-        'apache_beam/**/*.pyx',\n-        'apache_beam/coders/coder_impl.py',\n-        'apache_beam/metrics/cells.py',\n-        'apache_beam/metrics/execution.py',\n-        'apache_beam/runners/common.py',\n-        'apache_beam/runners/worker/logger.py',\n-        'apache_beam/runners/worker/opcounters.py',\n-        'apache_beam/runners/worker/operations.py',\n-        'apache_beam/transforms/cy_combiners.py',\n-        'apache_beam/utils/counters.py',\n-        'apache_beam/utils/windowed_value.py',\n-    ]),\n-    install_requires=REQUIRED_PACKAGES,\n-    python_requires=python_requires,\n-    test_suite='nose.collector',\n-    # BEAM-8840: Do NOT use tests_require or setup_requires.\n-    extras_require={\n-        'docs': ['Sphinx>=1.5.2,<2.0'],\n-        'test': REQUIRED_TEST_PACKAGES,\n-        'gcp': GCP_REQUIREMENTS,\n-        'interactive': INTERACTIVE_BEAM,\n-        'interactive_test': INTERACTIVE_BEAM_TEST,\n-        'aws': AWS_REQUIREMENTS,\n-        'azure': AZURE_REQUIREMENTS\n-    },\n-    zip_safe=False,\n-    # PyPI package information.\n-    classifiers=[\n-        'Intended Audience :: End Users/Desktop',\n-        'License :: OSI Approved :: Apache Software License',\n-        'Operating System :: POSIX :: Linux',\n-        'Programming Language :: Python :: 3.6',\n-        'Programming Language :: Python :: 3.7',\n-        'Programming Language :: Python :: 3.8',\n-        # When updating vesion classifiers, also update version warnings\n-        # above and in apache_beam/__init__.py.\n-        'Topic :: Software Development :: Libraries',\n-        'Topic :: Software Development :: Libraries :: Python Modules',\n-    ],\n-    license='Apache License, Version 2.0',\n-    keywords=PACKAGE_KEYWORDS,\n-    entry_points={\n-        'nose.plugins.0.10': [\n-            'beam_test_plugin = test_config:BeamTestPlugin',\n-        ]},\n-    cmdclass={\n-        'build_py': generate_protos_first(build_py),\n-        'develop': generate_protos_first(develop),\n-        'egg_info': generate_protos_first(egg_info),\n-        'test': generate_protos_first(test),\n-        'mypy': generate_protos_first(mypy),\n-    },\n-)\n+if __name__ == '__main__':", "originalCommit": "46b5cb623ed485c03999601d2f764a82d30e7b5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYwMzQxMA==", "url": "https://github.com/apache/beam/pull/13283#discussion_r521603410", "bodyText": "Done.", "author": "ihji", "createdAt": "2020-11-11T19:56:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU0MTAyOQ=="}], "type": "inlineReview"}, {"oid": "df2084fc45d814830582ad1876ed91db9fddd40e", "url": "https://github.com/apache/beam/commit/df2084fc45d814830582ad1876ed91db9fddd40e", "message": "[BEAM-11142] Enable CrossLanguageValidateRunner test for dataflow runner v2", "committedDate": "2020-11-11T21:47:40Z", "type": "commit"}, {"oid": "df2084fc45d814830582ad1876ed91db9fddd40e", "url": "https://github.com/apache/beam/commit/df2084fc45d814830582ad1876ed91db9fddd40e", "message": "[BEAM-11142] Enable CrossLanguageValidateRunner test for dataflow runner v2", "committedDate": "2020-11-11T21:47:40Z", "type": "forcePushed"}, {"oid": "d9908749f14d62e160f840e82c05c8975680d4e7", "url": "https://github.com/apache/beam/commit/d9908749f14d62e160f840e82c05c8975680d4e7", "message": "enable sql testing", "committedDate": "2020-11-11T22:34:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTcwMjMwNg==", "url": "https://github.com/apache/beam/pull/13283#discussion_r521702306", "bodyText": "Please remove experiments \"beam_fn_api\" and \"unified_worker\" and add \"use_runner_v2\"", "author": "chamikaramj", "createdAt": "2020-11-11T23:33:23Z", "path": "runners/google-cloud-dataflow-java/build.gradle", "diffHunk": "@@ -312,6 +313,37 @@ task validatesRunnerStreaming {\n   ))\n }\n \n+createCrossLanguageValidatesRunnerTask(\n+  startJobServer: buildAndPushDockerContainer,\n+  cleanupJobServer: cleanUpDockerImages,\n+  classpath: configurations.validatesRunner,\n+  numParallelTests: Integer.MAX_VALUE,\n+  needsSdkLocation: true,\n+  pythonPipelineOptions: [\n+    \"--runner=TestDataflowRunner\",\n+    \"--project=${dataflowProject}\",\n+    \"--region=${dataflowRegion}\",\n+    \"--sdk_harness_container_image_overrides=.*java.*,${dockerImageContainer}:${dockerTag}\",\n+    \"--experiments=beam_fn_api\",\n+    \"--experiments=use_unified_worker\",", "originalCommit": "d9908749f14d62e160f840e82c05c8975680d4e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwOTg0MA==", "url": "https://github.com/apache/beam/pull/13283#discussion_r522409840", "bodyText": "done.", "author": "ihji", "createdAt": "2020-11-12T20:35:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTcwMjMwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTcwMjM0Mg==", "url": "https://github.com/apache/beam/pull/13283#discussion_r521702342", "bodyText": "Ditto.", "author": "chamikaramj", "createdAt": "2020-11-11T23:33:31Z", "path": "runners/google-cloud-dataflow-java/build.gradle", "diffHunk": "@@ -312,6 +313,37 @@ task validatesRunnerStreaming {\n   ))\n }\n \n+createCrossLanguageValidatesRunnerTask(\n+  startJobServer: buildAndPushDockerContainer,\n+  cleanupJobServer: cleanUpDockerImages,\n+  classpath: configurations.validatesRunner,\n+  numParallelTests: Integer.MAX_VALUE,\n+  needsSdkLocation: true,\n+  pythonPipelineOptions: [\n+    \"--runner=TestDataflowRunner\",\n+    \"--project=${dataflowProject}\",\n+    \"--region=${dataflowRegion}\",\n+    \"--sdk_harness_container_image_overrides=.*java.*,${dockerImageContainer}:${dockerTag}\",\n+    \"--experiments=beam_fn_api\",\n+    \"--experiments=use_unified_worker\",\n+  ],\n+  javaPipelineOptions: [\n+    \"--runner=TestDataflowRunner\",\n+    \"--project=${dataflowProject}\",\n+    \"--region=${dataflowRegion}\",\n+    \"--tempRoot=${dataflowValidatesTempRoot}\",\n+    //\"--sdkHarnessContainerImageOverrides=.*java.*,${dockerImageContainer}:${dockerTag}\",\n+    \"--experiments=beam_fn_api,use_unified_worker\",", "originalCommit": "d9908749f14d62e160f840e82c05c8975680d4e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwOTk1NA==", "url": "https://github.com/apache/beam/pull/13283#discussion_r522409954", "bodyText": "done.", "author": "ihji", "createdAt": "2020-11-12T20:35:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTcwMjM0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTcwMzgxNQ==", "url": "https://github.com/apache/beam/pull/13283#discussion_r521703815", "bodyText": "Can we add Kafka as well ?", "author": "chamikaramj", "createdAt": "2020-11-11T23:35:39Z", "path": ".test-infra/jenkins/job_PostCommit_CrossLanguageValidatesRunner_Dataflow.groovy", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import PostcommitJobBuilder\n+\n+// This job runs the suite of ValidatesRunner tests against the Dataflow runner.\n+PostcommitJobBuilder.postCommitJob('beam_PostCommit_XVR_Dataflow',\n+    'Run XVR_Dataflow PostCommit', 'Dataflow CrossLanguageValidatesRunner Tests', this) {\n+      description('Runs the CrossLanguageValidatesRunner suite on the Dataflow runner.')\n+\n+      // Set common parameters.\n+      commonJobProperties.setTopLevelMainJobProperties(delegate)\n+\n+      // Publish all test results to Jenkins\n+      publishers {\n+        archiveJunit('**/nosetests*.xml')\n+      }\n+\n+      // Gradle goals for this job.\n+      // TODO: We only support Python pipeline using Java external transforms at the moment.\n+      // Enable testing for Java pipeline using Python external transforms when BEAM-11203\n+      // is implemented.\n+      steps {\n+        shell('echo \"*** RUN CROSS-LANGUAGE DATAFLOW PYTHON WITH JAVA EXTERNAL TRANSFORMS USING PYTHON 3.6 ***\"')\n+        gradle {\n+          rootBuildScriptDir(commonJobProperties.checkoutDir)\n+          tasks(':runners:google-cloud-dataflow-java:validatesCrossLanguageRunnerPythonUsingJava')\n+          commonJobProperties.setGradleSwitches(delegate)\n+          switches('-PpythonVersion=3.6')\n+        }\n+        shell('echo \"*** RUN CROSS-LANGUAGE DATAFLOW PYTHON WITH JAVA EXTERNAL TRANSFORMS USING PYTHON 3.8 ***\"')\n+        gradle {\n+          rootBuildScriptDir(commonJobProperties.checkoutDir)\n+          tasks(':runners:google-cloud-dataflow-java:validatesCrossLanguageRunnerPythonUsingJava')\n+          commonJobProperties.setGradleSwitches(delegate)\n+          switches('-PpythonVersion=3.8')\n+        }\n+        shell('echo \"*** RUN CROSS-LANGUAGE DATAFLOW PYTHON WITH JAVA SQL TRANSFORMS USING PYTHON 3.8 ***\"')", "originalCommit": "d9908749f14d62e160f840e82c05c8975680d4e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQxMDk0MA==", "url": "https://github.com/apache/beam/pull/13283#discussion_r522410940", "bodyText": "I think it's not necessary. Kafka xlang test is already a part of python postcommit tests: https://github.com/apache/beam/blob/master/sdks/python/test-suites/portable/common.gradle#L177", "author": "ihji", "createdAt": "2020-11-12T20:37:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTcwMzgxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ1MDk0NA==", "url": "https://github.com/apache/beam/pull/13283#discussion_r522450944", "bodyText": "That only runs Kafka on Flink though right?\nand thank you for adding the SQL task :) it looks like it's working:", "author": "TheNeuralBit", "createdAt": "2020-11-12T21:56:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTcwMzgxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ1Mzk4Mg==", "url": "https://github.com/apache/beam/pull/13283#discussion_r522453982", "bodyText": "Oh, that's right. Good catch \ud83d\ude04\nWill take a look if we can easily add Kafka xlang test too.", "author": "ihji", "createdAt": "2020-11-12T22:02:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTcwMzgxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUzNDI2NQ==", "url": "https://github.com/apache/beam/pull/13283#discussion_r522534265", "bodyText": "We can't simply adding xlang Kafkaio test here since it needs a separate Kafka cluster setup on Dataflow (on Flink it uses locally launched Kafka cluster). Will merge without xlang Kafkaio test.", "author": "ihji", "createdAt": "2020-11-13T00:48:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTcwMzgxNQ=="}], "type": "inlineReview"}, {"oid": "b4c988f81e5540a330300c7209b31a18bf046849", "url": "https://github.com/apache/beam/commit/b4c988f81e5540a330300c7209b31a18bf046849", "message": "disable failed tests", "committedDate": "2020-11-12T20:23:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUyMzQ1MA==", "url": "https://github.com/apache/beam/pull/13283#discussion_r524523450", "bodyText": "This task makes all Dataflow runner v2 tests fail because the sdk container is cleaned up as soon as it is built. The cause is that in the common configuration, you have\nconfig.startJobServer.finalizedBy config.cleanupJobServer\nThis will change the task dependency incorrectly.\nFiled jira here: https://issues.apache.org/jira/browse/BEAM-11270\ncc: @tysonjh", "author": "boyuanzz", "createdAt": "2020-11-16T19:36:27Z", "path": "runners/google-cloud-dataflow-java/build.gradle", "diffHunk": "@@ -312,6 +313,36 @@ task validatesRunnerStreaming {\n   ))\n }\n \n+createCrossLanguageValidatesRunnerTask(", "originalCommit": "b4c988f81e5540a330300c7209b31a18bf046849", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}