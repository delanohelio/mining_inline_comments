{"pr_number": 12782, "pr_title": "[BEAM-10950] Overriding Dataflow Native BQSource.", "pr_createdAt": "2020-09-08T14:14:36Z", "pr_url": "https://github.com/apache/beam/pull/12782", "timeline": [{"oid": "6da0b46d0d9610c2022eabde8cf44ad08452db07", "url": "https://github.com/apache/beam/commit/6da0b46d0d9610c2022eabde8cf44ad08452db07", "message": "Overriding Dataflow Native BQSource.", "committedDate": "2020-09-08T14:14:08Z", "type": "commit"}, {"oid": "47dc3e5b16c9a8f6f703d93501d1656dbb351916", "url": "https://github.com/apache/beam/commit/47dc3e5b16c9a8f6f703d93501d1656dbb351916", "message": "Fixing tests", "committedDate": "2020-09-09T14:20:43Z", "type": "commit"}, {"oid": "85313410da8eb7d03faa6a4b65961a4529f6f737", "url": "https://github.com/apache/beam/commit/85313410da8eb7d03faa6a4b65961a4529f6f737", "message": "Tryin to fix to_runner_proto transform", "committedDate": "2020-09-09T23:39:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwMjUzOA==", "url": "https://github.com/apache/beam/pull/12782#discussion_r488902538", "bodyText": "How many of these tests fail if we don't force the native source?", "author": "robertwb", "createdAt": "2020-09-15T19:07:05Z", "path": "sdks/python/apache_beam/io/gcp/bigquery_test.py", "diffHunk": "@@ -168,7 +168,8 @@ def test_invalid_json_neg_inf(self):\n @unittest.skipIf(HttpError is None, 'GCP dependencies are not installed')\n class TestBigQuerySource(unittest.TestCase):\n   def test_display_data_item_on_validate_true(self):\n-    source = beam.io.BigQuerySource('dataset.table', validate=True)\n+    source = beam.io.BigQuerySource(", "originalCommit": "85313410da8eb7d03faa6a4b65961a4529f6f737", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAzMTg1NQ==", "url": "https://github.com/apache/beam/pull/12782#discussion_r493031855", "bodyText": "Tests in this file use the native BQ source implementation (e.g. specific display data, using the Reader implementation used for DirectRunner, etc. I think after deprecation, most of the tests in this particular class would go away) - integration tests are not having to change almost at all.", "author": "pabloem", "createdAt": "2020-09-22T21:02:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwMjUzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2MjQyNg==", "url": "https://github.com/apache/beam/pull/12782#discussion_r493862426", "bodyText": "I assume we have the same test coverage for the new source ?", "author": "chamikaramj", "createdAt": "2020-09-23T20:04:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwMjUzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkxNzkzNA==", "url": "https://github.com/apache/beam/pull/12782#discussion_r493917934", "bodyText": "yes, most tests have variants for the new and the old source running alongside each other.", "author": "pabloem", "createdAt": "2020-09-23T21:55:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwMjUzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwMzEwMQ==", "url": "https://github.com/apache/beam/pull/12782#discussion_r488903101", "bodyText": "Could you file a JIRA to update these to not depend on the deprecated source?", "author": "robertwb", "createdAt": "2020-09-15T19:08:09Z", "path": "sdks/python/apache_beam/io/gcp/bigquery_tools_test.py", "diffHunk": "@@ -451,7 +451,9 @@ def test_read_from_table(self):\n     client.jobs.GetQueryResults.return_value = bigquery.GetQueryResultsResponse(\n         jobComplete=True, rows=table_rows, schema=schema)\n     actual_rows = []\n-    with beam.io.BigQuerySource('dataset.table').reader(client) as reader:\n+    with beam.io.BigQuerySource(", "originalCommit": "85313410da8eb7d03faa6a4b65961a4529f6f737", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2MzAzNA==", "url": "https://github.com/apache/beam/pull/12782#discussion_r493863034", "bodyText": "+1. Any reason why we can use the new source here today ?", "author": "chamikaramj", "createdAt": "2020-09-23T20:05:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwMzEwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkxNzc1OQ==", "url": "https://github.com/apache/beam/pull/12782#discussion_r493917759", "bodyText": "I've filed the JIRA (BEAM-10951) - the tests in this class are using BigQuerySource-specific functions. The new sources do not implement the reader function, which we use mainly to support BQSource in direct runner. The tests in this class should be deleted if BQSource goes away.", "author": "pabloem", "createdAt": "2020-09-23T21:55:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwMzEwMQ=="}], "type": "inlineReview"}, {"oid": "6aa0a4dc3516941d905e72adf40e512df01e9004", "url": "https://github.com/apache/beam/commit/6aa0a4dc3516941d905e72adf40e512df01e9004", "message": "fixup", "committedDate": "2020-09-21T20:22:48Z", "type": "commit"}, {"oid": "1a2e5e8584dc168246012edfeed3032681fa53df", "url": "https://github.com/apache/beam/commit/1a2e5e8584dc168246012edfeed3032681fa53df", "message": "fixup", "committedDate": "2020-09-21T21:10:30Z", "type": "commit"}, {"oid": "08bb0a36d7cc9a44ab1d67aeead23372e2bd4f6a", "url": "https://github.com/apache/beam/commit/08bb0a36d7cc9a44ab1d67aeead23372e2bd4f6a", "message": "fixup", "committedDate": "2020-09-22T19:19:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3OTQwNQ==", "url": "https://github.com/apache/beam/pull/12782#discussion_r493779405", "bodyText": "Does this update the sink as well ? If so please update the CL description accordingly.", "author": "chamikaramj", "createdAt": "2020-09-23T17:51:02Z", "path": "sdks/python/apache_beam/io/gcp/big_query_query_to_table_pipeline.py", "diffHunk": "@@ -91,24 +91,16 @@ def run_bq_pipeline(argv=None):\n         use_standard_sql=known_args.use_standard_sql,\n         use_json_exports=known_args.use_json_exports,\n         kms_key=kms_key)\n-  if known_args.native:\n-    _ = data | 'write' >> beam.io.Write(\n-        beam.io.BigQuerySink(\n-            known_args.output,\n-            schema=table_schema,\n-            create_disposition=beam.io.BigQueryDisposition.CREATE_IF_NEEDED,\n-            write_disposition=beam.io.BigQueryDisposition.WRITE_EMPTY,\n-            kms_key=kms_key))\n-  else:\n-    temp_file_format = (\n-        'NEWLINE_DELIMITED_JSON' if known_args.use_json_exports else 'AVRO')\n-    _ = data | 'write' >> beam.io.WriteToBigQuery(\n-        known_args.output,\n-        schema=table_schema,\n-        create_disposition=beam.io.BigQueryDisposition.CREATE_IF_NEEDED,\n-        write_disposition=beam.io.BigQueryDisposition.WRITE_EMPTY,\n-        temp_file_format=temp_file_format,\n-        kms_key=kms_key)\n+\n+  temp_file_format = (", "originalCommit": "08bb0a36d7cc9a44ab1d67aeead23372e2bd4f6a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkxNjkwMg==", "url": "https://github.com/apache/beam/pull/12782#discussion_r493916902", "bodyText": "this does not update the sink, but the sink has been deprecated for a while. I just removed this from the test.", "author": "pabloem", "createdAt": "2020-09-23T21:53:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3OTQwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2MzQ0NQ==", "url": "https://github.com/apache/beam/pull/12782#discussion_r493863445", "bodyText": "This looks pretty awkward but I get the idea. Please add a comment here explaining this.", "author": "chamikaramj", "createdAt": "2020-09-23T20:06:16Z", "path": "sdks/python/apache_beam/io/iobase.py", "diffHunk": "@@ -890,6 +890,8 @@ def get_desired_chunk_size(total_size):\n   def expand(self, pbegin):\n     if isinstance(self.source, BoundedSource):\n       return pbegin | _SDFBoundedSourceWrapper(self.source)\n+    elif isinstance(self.source, ptransform.PTransform):\n+      return pbegin.pipeline | self.source", "originalCommit": "08bb0a36d7cc9a44ab1d67aeead23372e2bd4f6a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkyMDA1MQ==", "url": "https://github.com/apache/beam/pull/12782#discussion_r493920051", "bodyText": "Done.", "author": "pabloem", "createdAt": "2020-09-23T22:00:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2MzQ0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2NDU1OA==", "url": "https://github.com/apache/beam/pull/12782#discussion_r493864558", "bodyText": "Is there any value in maintaining these tests that explicitly check whether a non-default behavior fails for Runner v2 ?", "author": "chamikaramj", "createdAt": "2020-09-23T20:08:18Z", "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner_test.py", "diffHunk": "@@ -269,7 +260,9 @@ def test_biqquery_read_fn_api_fail(self):\n           'apache_beam.io.gcp.bigquery.ReadFromBigQuery.*'):\n         with Pipeline(remote_runner,\n                       PipelineOptions(self.default_properties)) as p:\n-          _ = p | beam.io.Read(beam.io.BigQuerySource('some.table'))\n+          _ = p | beam.io.Read(\n+              beam.io.BigQuerySource(", "originalCommit": "08bb0a36d7cc9a44ab1d67aeead23372e2bd4f6a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkxOTk5NQ==", "url": "https://github.com/apache/beam/pull/12782#discussion_r493919995", "bodyText": "discussing this in the next comment.", "author": "pabloem", "createdAt": "2020-09-23T22:00:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2NDU1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2NTUzNg==", "url": "https://github.com/apache/beam/pull/12782#discussion_r493865536", "bodyText": "I assume the state is following.\n(1) We have full test coverage for the new source (which is the default)\n(2) We have additional tests that check old native source which can be just removed whenever we discontinue support for that source.", "author": "chamikaramj", "createdAt": "2020-09-23T20:10:04Z", "path": "sdks/python/apache_beam/runners/dataflow/dataflow_runner_test.py", "diffHunk": "@@ -323,7 +316,9 @@ def test_no_group_by_key_directly_after_bigquery(self):\n                          options=PipelineOptions(self.default_properties)) as p:\n         # pylint: disable=expression-not-assigned\n         p | beam.io.Read(\n-            beam.io.BigQuerySource('dataset.faketable')) | beam.GroupByKey()\n+            beam.io.BigQuerySource(\n+                'dataset.faketable',\n+                use_dataflow_native_source=True)) | beam.GroupByKey()", "originalCommit": "08bb0a36d7cc9a44ab1d67aeead23372e2bd4f6a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkxOTk0OA==", "url": "https://github.com/apache/beam/pull/12782#discussion_r493919948", "bodyText": "for these two tests in dataflow_runner_test, we do not have equivalents for the custom source. This is because these failures do not occur under the custom source:\n\nCustom source is acceptable in streaming because it becomes an SDF that runs fine in streaming\nCustom source will not error out on type hints with GBK because the type hints are not set up to fail for this sort of composite transform. I don't know why, but we can file a bug to ensure this is re-enabled.", "author": "pabloem", "createdAt": "2020-09-23T22:00:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2NTUzNg=="}], "type": "inlineReview"}, {"oid": "c0d1ddae47920cacca6481313e1abfbb44c5f36d", "url": "https://github.com/apache/beam/commit/c0d1ddae47920cacca6481313e1abfbb44c5f36d", "message": "adding comment", "committedDate": "2020-09-23T22:00:57Z", "type": "commit"}]}