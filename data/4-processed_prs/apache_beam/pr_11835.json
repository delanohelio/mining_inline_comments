{"pr_number": 11835, "pr_title": "Various fixes to allow Java PAssert to run on Python", "pr_createdAt": "2020-05-27T18:42:31Z", "pr_url": "https://github.com/apache/beam/pull/11835", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2NDkyNA==", "url": "https://github.com/apache/beam/pull/11835#discussion_r432064924", "bodyText": "Never trigger is misnamed. It means that the trigger itself never fires, but that at window GC output is produced. That's why PAssert uses it to gather the full result.", "author": "kennknowles", "createdAt": "2020-05-28T19:19:50Z", "path": "sdks/python/apache_beam/transforms/trigger_test.py", "diffHunk": "@@ -518,6 +519,28 @@ def format_result(k_v):\n                   'B-3': {10, 15, 16},\n               }.items())))\n \n+  def test_never(self):\n+    with TestPipeline() as p:\n+\n+      def construct_timestamped(k_t):\n+        return TimestampedValue((k_t[0], k_t[1]), k_t[1])\n+\n+      def format_result(k_v):\n+        return ('%s-%s' % (k_v[0], len(k_v[1])), set(k_v[1]))\n+\n+      result = (\n+          p\n+          | beam.Create([1, 1, 2, 3, 4, 5, 10, 11])\n+          | beam.FlatMap(lambda t: [('A', t), ('B', t + 5)])\n+          | beam.Map(construct_timestamped)\n+          | beam.WindowInto(\n+              FixedWindows(10),\n+              trigger=Never(),\n+              accumulation_mode=AccumulationMode.DISCARDING)\n+          | beam.GroupByKey()\n+          | beam.Map(format_result))\n+      assert_that(result, equal_to([]))", "originalCommit": "85c05629dce4e5539d1089c79d5f81831b906e67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5MzIzNw==", "url": "https://github.com/apache/beam/pull/11835#discussion_r432093237", "bodyText": "Ack. (Interestingly, I originally was expecting it to fire at EoW.) The ULR doesn't yet support gc timers. I can look into fixing this (or at least making the \"Never\" trigger correct).\nAs an aside, the non-trivial triggering and windowing in PAssert makes it less than ideal for validating new runners.", "author": "robertwb", "createdAt": "2020-05-28T20:05:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2NDkyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE5ODI0NQ==", "url": "https://github.com/apache/beam/pull/11835#discussion_r432198245", "bodyText": "I couldn't find an existing bug about closing behaviors, so I filed BEAM-10149. That seems pretty invasive to change as part of this PR, so I added a hack to support its use with proper closing behavior in batch only. PTAL.", "author": "robertwb", "createdAt": "2020-05-29T00:42:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2NDkyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAxMjY2OA==", "url": "https://github.com/apache/beam/pull/11835#discussion_r434012668", "bodyText": "Good point about that in PAssert. Though isn't the triggering just \"fire at GC\" and the windowing nothing special? Previously, it depended on side inputs which tend to come later in a runner's lifecycle.", "author": "kennknowles", "createdAt": "2020-06-02T16:28:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2NDkyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDczMDYwNg==", "url": "https://github.com/apache/beam/pull/11835#discussion_r434730606", "bodyText": "I think even the concept of GC triggers (which have to be scheduled at a different time than a \"normal\" trigger at EOW) and late data is rather advanced. Also, yes, it used a custom (java serializable) WindowFn (didn't investigate which one this was). Possibly the right thing to do here would be to use \"standard\" triggers for the normal case, and advanced features when needed, assuming they can be queried at pipeline construction time. But this is completely an aside.\nThanks for the review. I discovered another couple of issues when running the full suite; I'll get them into separate PRs.", "author": "robertwb", "createdAt": "2020-06-03T17:19:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2NDkyNA=="}], "type": "inlineReview"}, {"oid": "a7866b5f55fb5dc4a669be5c1708479365f61120", "url": "https://github.com/apache/beam/commit/a7866b5f55fb5dc4a669be5c1708479365f61120", "message": "[BEAM-10116] Allow unknown non-merging windowing strategies in ULR.", "committedDate": "2020-06-03T17:24:00Z", "type": "commit"}, {"oid": "6eefa9c30d1865519626f2e23792c7cf6bdf6b2b", "url": "https://github.com/apache/beam/commit/6eefa9c30d1865519626f2e23792c7cf6bdf6b2b", "message": "Never trigger for Python.", "committedDate": "2020-06-03T17:24:00Z", "type": "commit"}, {"oid": "75df297fbddb97e73e44084eb0c1dc97e8c22aa1", "url": "https://github.com/apache/beam/commit/75df297fbddb97e73e44084eb0c1dc97e8c22aa1", "message": "Fix GetState API to handle timestamps field.", "committedDate": "2020-06-03T17:24:00Z", "type": "forcePushed"}, {"oid": "edbe4ceffcdcedd6b75b494d2a7e6e437079c455", "url": "https://github.com/apache/beam/commit/edbe4ceffcdcedd6b75b494d2a7e6e437079c455", "message": "Add a hack to ensure the Never() trigger fires on window closing in batch mode.\n\nAlso, make it private for now, to avoid surprising use until closing behavior\nis supported generally.\n\nThis is needed to support Java PAssert.", "committedDate": "2020-06-04T00:37:41Z", "type": "commit"}, {"oid": "ae36a5d72493e921f14a50b9950c966a1e9ef73c", "url": "https://github.com/apache/beam/commit/ae36a5d72493e921f14a50b9950c966a1e9ef73c", "message": "[BEAM-10118] Unconditionally use safe coders for data channels in FnAPI runner.", "committedDate": "2020-06-04T00:37:41Z", "type": "commit"}, {"oid": "748e060fac2fa72d73957420d5c46b5494389f5c", "url": "https://github.com/apache/beam/commit/748e060fac2fa72d73957420d5c46b5494389f5c", "message": "Fix GetState API to handle timestamps field.", "committedDate": "2020-06-04T00:37:42Z", "type": "forcePushed"}, {"oid": "141df78e1fa81a48babb3b3018c8bc23259d4666", "url": "https://github.com/apache/beam/commit/141df78e1fa81a48babb3b3018c8bc23259d4666", "message": "Typing fix.", "committedDate": "2020-06-04T21:11:33Z", "type": "forcePushed"}, {"oid": "25b8fd7b223599a0c881c0d2f92f5da1d4267157", "url": "https://github.com/apache/beam/commit/25b8fd7b223599a0c881c0d2f92f5da1d4267157", "message": "Typing fix.", "committedDate": "2020-06-04T21:35:19Z", "type": "forcePushed"}, {"oid": "3ac5dd74650e1b8bc0b7482d8b9069c4e289fcbe", "url": "https://github.com/apache/beam/commit/3ac5dd74650e1b8bc0b7482d8b9069c4e289fcbe", "message": "Use trivial Flatten rather than identity DoFn for transcoding.", "committedDate": "2020-06-05T00:41:50Z", "type": "commit"}, {"oid": "a07fac8c6cbf8bf34a9746d2ae676d9a39998ad9", "url": "https://github.com/apache/beam/commit/a07fac8c6cbf8bf34a9746d2ae676d9a39998ad9", "message": "Fix GetState API to handle timestamps field.", "committedDate": "2020-06-05T00:41:50Z", "type": "commit"}, {"oid": "78ed2704a8475c4a4bf5ad37e21ccc10af1db799", "url": "https://github.com/apache/beam/commit/78ed2704a8475c4a4bf5ad37e21ccc10af1db799", "message": "Typing fix.", "committedDate": "2020-06-05T00:41:50Z", "type": "commit"}, {"oid": "78ed2704a8475c4a4bf5ad37e21ccc10af1db799", "url": "https://github.com/apache/beam/commit/78ed2704a8475c4a4bf5ad37e21ccc10af1db799", "message": "Typing fix.", "committedDate": "2020-06-05T00:41:50Z", "type": "forcePushed"}]}