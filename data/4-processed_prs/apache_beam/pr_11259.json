{"pr_number": 11259, "pr_title": "Use attachValues in SQL", "pr_createdAt": "2020-03-29T23:23:57Z", "pr_url": "https://github.com/apache/beam/pull/11259", "timeline": [{"oid": "064f88c7b43bc50c5bd9a66424be1327a7e26012", "url": "https://github.com/apache/beam/commit/064f88c7b43bc50c5bd9a66424be1327a7e26012", "message": "foo", "committedDate": "2020-03-29T22:10:46Z", "type": "commit"}, {"oid": "348e746ab4f2cf9099a402f968b6f97526b19d32", "url": "https://github.com/apache/beam/commit/348e746ab4f2cf9099a402f968b6f97526b19d32", "message": "replace addValues with attachValues in SQL", "committedDate": "2020-03-29T23:18:25Z", "type": "commit"}, {"oid": "4dd5391c309395712694d6f206c71daff25e941e", "url": "https://github.com/apache/beam/commit/4dd5391c309395712694d6f206c71daff25e941e", "message": "fix comments", "committedDate": "2020-03-29T23:24:20Z", "type": "commit"}, {"oid": "fb15f8a1c34ed428ea9170a102d68e78e752cca5", "url": "https://github.com/apache/beam/commit/fb15f8a1c34ed428ea9170a102d68e78e752cca5", "message": "fix BeamCalcRel", "committedDate": "2020-04-01T23:01:10Z", "type": "commit"}, {"oid": "7f806d2c610c1ae9a51d90dbaa3059bbeca01217", "url": "https://github.com/apache/beam/commit/7f806d2c610c1ae9a51d90dbaa3059bbeca01217", "message": "foo", "committedDate": "2020-04-02T00:10:20Z", "type": "commit"}, {"oid": "82973bd890973276d8a1889be651167e41d3e479", "url": "https://github.com/apache/beam/commit/82973bd890973276d8a1889be651167e41d3e479", "message": "fix failures and add pipeline option to control", "committedDate": "2020-04-02T16:57:27Z", "type": "commit"}, {"oid": "0155354227bf10e89bddb3271ee5348088c68d53", "url": "https://github.com/apache/beam/commit/0155354227bf10e89bddb3271ee5348088c68d53", "message": "fix return", "committedDate": "2020-04-02T16:59:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5NTAxMQ==", "url": "https://github.com/apache/beam/pull/11259#discussion_r403295011", "bodyText": "I think this is missing a .build()", "author": "TheNeuralBit", "createdAt": "2020-04-03T20:09:11Z", "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/rel/BeamAggregationRel.java", "diffHunk": "@@ -343,7 +351,11 @@ public void processElement(\n             fieldValues.add(windowStartFieldIndex, ((IntervalWindow) window).start());\n           }\n \n-          o.output(Row.withSchema(outputSchema).addValues(fieldValues).build());\n+          Row row =\n+              verifyRowValues\n+                  ? Row.withSchema(outputSchema).addValues(fieldValues).build()\n+                  : Row.withSchema(outputSchema).attachValues(fieldValues);", "originalCommit": "0155354227bf10e89bddb3271ee5348088c68d53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMyODU2OA==", "url": "https://github.com/apache/beam/pull/11259#discussion_r403328568", "bodyText": "pr/10883 changed attachValues() to return a Row, so build() not needed.", "author": "reuvenlax", "createdAt": "2020-04-03T20:53:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5NTAxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5ODUzOA==", "url": "https://github.com/apache/beam/pull/11259#discussion_r403298538", "bodyText": "and here", "author": "TheNeuralBit", "createdAt": "2020-04-03T20:14:15Z", "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/BeamZetaSqlCalcRel.java", "diffHunk": "@@ -185,14 +193,19 @@ public void processElement(ProcessContext c) {\n         return;\n       }\n \n-      Row.Builder output = Row.withSchema(outputSchema);\n+      List<Object> values = Lists.newArrayListWithExpectedSize(outputSchema.getFieldCount());\n       for (int i = 0; i < outputSchema.getFieldCount(); i++) {\n         // TODO[BEAM-8630]: performance optimization by bundling the gRPC calls\n         Value v = projectExps.get(i).execute(columns, params);\n-        output.addValue(\n-            ZetaSqlUtils.zetaSqlValueToJavaObject(v, outputSchema.getField(i).getType()));\n+        values.add(\n+            ZetaSqlUtils.zetaSqlValueToJavaObject(\n+                v, outputSchema.getField(i).getType(), verifyRowValues));\n       }\n-      c.output(output.build());\n+      Row outputRow =\n+          verifyRowValues\n+              ? Row.withSchema(outputSchema).addValues(values).build()\n+              : Row.withSchema(outputSchema).attachValues(values);", "originalCommit": "0155354227bf10e89bddb3271ee5348088c68d53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMyODYxMA==", "url": "https://github.com/apache/beam/pull/11259#discussion_r403328610", "bodyText": "ditto", "author": "reuvenlax", "createdAt": "2020-04-03T20:53:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5ODUzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5ODU4OQ==", "url": "https://github.com/apache/beam/pull/11259#discussion_r403298589", "bodyText": "and here", "author": "TheNeuralBit", "createdAt": "2020-04-03T20:14:22Z", "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSqlUtils.java", "diffHunk": "@@ -227,18 +229,25 @@ private static Instant zetaSqlTimestampValueToJodaInstant(Value timestampValue)\n     return Instant.ofEpochMilli(millis);\n   }\n \n-  private static List<Object> zetaSqlArrayValueToJavaList(Value arrayValue, FieldType elementType) {\n+  private static List<Object> zetaSqlArrayValueToJavaList(\n+      Value arrayValue, FieldType elementType, boolean verifyValues) {\n     return arrayValue.getElementList().stream()\n-        .map(e -> zetaSqlValueToJavaObject(e, elementType))\n+        .map(e -> zetaSqlValueToJavaObject(e, elementType, verifyValues))\n         .collect(Collectors.toList());\n   }\n \n-  private static Row zetaSqlStructValueToBeamRow(Value structValue, Schema schema) {\n+  private static Row zetaSqlStructValueToBeamRow(\n+      Value structValue, Schema schema, boolean verifyValues) {\n     List<Object> objects = new ArrayList<>(schema.getFieldCount());\n     List<Value> values = structValue.getFieldList();\n     for (int i = 0; i < values.size(); i++) {\n-      objects.add(zetaSqlValueToJavaObject(values.get(i), schema.getField(i).getType()));\n+      objects.add(\n+          zetaSqlValueToJavaObject(values.get(i), schema.getField(i).getType(), verifyValues));\n     }\n-    return Row.withSchema(schema).addValues(objects).build();\n+    Row row =\n+        verifyValues\n+            ? Row.withSchema(schema).addValues(objects).build()\n+            : Row.withSchema(schema).attachValues(objects);", "originalCommit": "0155354227bf10e89bddb3271ee5348088c68d53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMyODY3Mg==", "url": "https://github.com/apache/beam/pull/11259#discussion_r403328672", "bodyText": "ditto", "author": "reuvenlax", "createdAt": "2020-04-03T20:53:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5ODU4OQ=="}], "type": "inlineReview"}]}