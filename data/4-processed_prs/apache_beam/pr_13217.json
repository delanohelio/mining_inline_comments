{"pr_number": 13217, "pr_title": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "pr_createdAt": "2020-10-29T01:08:21Z", "pr_url": "https://github.com/apache/beam/pull/13217", "timeline": [{"oid": "3bbc6d3ed7965dbc11fff7801a1c1c87ecfa0c58", "url": "https://github.com/apache/beam/commit/3bbc6d3ed7965dbc11fff7801a1c1c87ecfa0c58", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-10-29T01:25:05Z", "type": "forcePushed"}, {"oid": "bcd39239f016408ce230f09a94bdf1df77cedc0e", "url": "https://github.com/apache/beam/commit/bcd39239f016408ce230f09a94bdf1df77cedc0e", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-10-29T02:59:56Z", "type": "forcePushed"}, {"oid": "dae17bbefa391d68892d5737780b901f87977935", "url": "https://github.com/apache/beam/commit/dae17bbefa391d68892d5737780b901f87977935", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-10-29T03:04:55Z", "type": "forcePushed"}, {"oid": "421081515e30920a8dce673e98872b29b5135769", "url": "https://github.com/apache/beam/commit/421081515e30920a8dce673e98872b29b5135769", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-10-29T03:19:29Z", "type": "forcePushed"}, {"oid": "303171094ce69c6a70cf8d69eb51ed4c9113a571", "url": "https://github.com/apache/beam/commit/303171094ce69c6a70cf8d69eb51ed4c9113a571", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-10-29T03:47:41Z", "type": "forcePushed"}, {"oid": "4ae1c453bf131eb78958b50ec45fce0c804f3751", "url": "https://github.com/apache/beam/commit/4ae1c453bf131eb78958b50ec45fce0c804f3751", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-10-29T03:55:11Z", "type": "forcePushed"}, {"oid": "3e1f292fdf90aa43c58f9ea9015f60a9f8c7d5db", "url": "https://github.com/apache/beam/commit/3e1f292fdf90aa43c58f9ea9015f60a9f8c7d5db", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-10-29T04:10:45Z", "type": "forcePushed"}, {"oid": "d0140a25e78a1d2a6c068e9838a1c46909bb3738", "url": "https://github.com/apache/beam/commit/d0140a25e78a1d2a6c068e9838a1c46909bb3738", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-10-29T04:44:44Z", "type": "forcePushed"}, {"oid": "78303e2bad2a8ec666a287f24792e73e9ae89153", "url": "https://github.com/apache/beam/commit/78303e2bad2a8ec666a287f24792e73e9ae89153", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-10-29T04:50:21Z", "type": "forcePushed"}, {"oid": "2670a2a29dd48bf50d6f4470a507a31dc40e0524", "url": "https://github.com/apache/beam/commit/2670a2a29dd48bf50d6f4470a507a31dc40e0524", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-10-29T06:08:07Z", "type": "forcePushed"}, {"oid": "54d8278c728ee1a60c5ef3e6230368af8329ed27", "url": "https://github.com/apache/beam/commit/54d8278c728ee1a60c5ef3e6230368af8329ed27", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-11-04T20:34:02Z", "type": "forcePushed"}, {"oid": "243cfbd2830095506628325f77565ab0bb5eb077", "url": "https://github.com/apache/beam/commit/243cfbd2830095506628325f77565ab0bb5eb077", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-11-05T06:17:53Z", "type": "forcePushed"}, {"oid": "2068070337ad1012272e95df5697c5e45b769bf5", "url": "https://github.com/apache/beam/commit/2068070337ad1012272e95df5697c5e45b769bf5", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-11-05T06:29:26Z", "type": "forcePushed"}, {"oid": "91e0fd15b3662a11613ca792614179081b7c6585", "url": "https://github.com/apache/beam/commit/91e0fd15b3662a11613ca792614179081b7c6585", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-11-05T06:50:32Z", "type": "forcePushed"}, {"oid": "966597c8c050b67f9d3949bd8bdc1af34d71781b", "url": "https://github.com/apache/beam/commit/966597c8c050b67f9d3949bd8bdc1af34d71781b", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-11-14T02:38:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4OTU4NQ==", "url": "https://github.com/apache/beam/pull/13217#discussion_r525289585", "bodyText": "fyi - from now on, you can use type hints directly, not as comments (no need to change anything atm)", "author": "pabloem", "createdAt": "2020-11-17T16:14:48Z", "path": "sdks/python/apache_beam/internal/metrics/metric.py", "diffHunk": "@@ -136,3 +165,64 @@ def log_metrics(self, reset_after_logging=False):\n           self._last_logging_millis = current_millis\n       finally:\n         self._lock.release()\n+\n+\n+class ServiceCallMetric(object):\n+  \"\"\"Metric class which records Service API call metrics.\n+\n+  This class will capture a request count metric for the specified\n+  request_count_urn and base_labels.\n+\n+  When call() is invoked the status must be provided, which will\n+  be converted to a canonical GCP status code, if possible.\n+\n+  TODO(ajamato): Add Request latency metric.\n+  \"\"\"\n+  def __init__(self, request_count_urn, base_labels=None):\n+    # type: (str, Optional[Dict[str, str]]) -> None", "originalCommit": "966597c8c050b67f9d3949bd8bdc1af34d71781b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM4ODI4MA==", "url": "https://github.com/apache/beam/pull/13217#discussion_r525388280", "bodyText": "ack", "author": "ajamato", "createdAt": "2020-11-17T18:24:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4OTU4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5NTk1Mw==", "url": "https://github.com/apache/beam/pull/13217#discussion_r525295953", "bodyText": "The method here would be a BatchWrite? Or a Streaming Insert maybe?", "author": "pabloem", "createdAt": "2020-11-17T16:22:58Z", "path": "sdks/python/apache_beam/io/gcp/bigquery_tools.py", "diffHunk": "@@ -566,10 +568,30 @@ def _insert_all_rows(\n             skipInvalidRows=skip_invalid_rows,\n             # TODO(silviuc): Should have an option for ignoreUnknownValues?\n             rows=rows))\n+\n+    resource = '//bigquery.googleapis.com/projects/%s/datasets/%s/tables/%s' % (\n+        project_id, dataset_id, table_id)\n+\n+    labels = {\n+        # TODO(ajamato): Add Ptransform label.\n+        monitoring_infos.SERVICE_LABEL: 'BigQuery',\n+        monitoring_infos.METHOD_LABEL: 'BigQueryBatchWrite',", "originalCommit": "966597c8c050b67f9d3949bd8bdc1af34d71781b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM4ODA5OA==", "url": "https://github.com/apache/beam/pull/13217#discussion_r525388098", "bodyText": "Added a clarifying comment. I don't want this to be that specific. I.e. if new APIs are introduced, which do the same thing from a dataflow pipeline's perspective \"Write batches of elements to BigQuery\"", "author": "ajamato", "createdAt": "2020-11-17T18:24:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5NTk1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5NjU5Ng==", "url": "https://github.com/apache/beam/pull/13217#discussion_r525296596", "bodyText": "Maybe add the resource calculation to a helper method? So it can be reused later? (I imagine you'll add these metrics for other methods?)", "author": "pabloem", "createdAt": "2020-11-17T16:23:49Z", "path": "sdks/python/apache_beam/io/gcp/bigquery_tools.py", "diffHunk": "@@ -566,10 +568,30 @@ def _insert_all_rows(\n             skipInvalidRows=skip_invalid_rows,\n             # TODO(silviuc): Should have an option for ignoreUnknownValues?\n             rows=rows))\n+\n+    resource = '//bigquery.googleapis.com/projects/%s/datasets/%s/tables/%s' % (\n+        project_id, dataset_id, table_id)", "originalCommit": "966597c8c050b67f9d3949bd8bdc1af34d71781b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMyNDQ1Mg==", "url": "https://github.com/apache/beam/pull/13217#discussion_r525324452", "bodyText": "or a constant IDK : )", "author": "pabloem", "createdAt": "2020-11-17T16:58:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5NjU5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM4ODE3Mg==", "url": "https://github.com/apache/beam/pull/13217#discussion_r525388172", "bodyText": "done", "author": "ajamato", "createdAt": "2020-11-17T18:24:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5NjU5Ng=="}], "type": "inlineReview"}, {"oid": "0d33248d41fc75229be9c9fb29fdcd767ae30403", "url": "https://github.com/apache/beam/commit/0d33248d41fc75229be9c9fb29fdcd767ae30403", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-11-17T19:11:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ3MTYwMA==", "url": "https://github.com/apache/beam/pull/13217#discussion_r525471600", "bodyText": "ah one more thing: You may need to sort the list here so that ordering on labels will be consistent?", "author": "pabloem", "createdAt": "2020-11-17T20:05:20Z", "path": "sdks/python/apache_beam/metrics/metricbase.py", "diffHunk": "@@ -50,34 +52,56 @@ class MetricName(object):\n   allows grouping related metrics together and also prevents collisions\n   between multiple metrics of the same name.\n   \"\"\"\n-  def __init__(self, namespace, name):\n-    # type: (str, str) -> None\n+  def __init__(self, namespace, name, urn=None, labels=None):\n+    # type: (Optional[str], Optional[str], Optional[str], Optional[Dict[str, str]]) -> None\n \n     \"\"\"Initializes ``MetricName``.\n \n+    Note: namespace and name should be set for user metrics,\n+    urn and labels should be set for an arbitrary metric to package into a\n+    MonitoringInfo.\n+\n     Args:\n       namespace: A string with the namespace of a metric.\n       name: A string with the name of a metric.\n+      urn: URN to populate on a MonitoringInfo, when sending to RunnerHarness.\n+      labels: Labels to populate on a MonitoringInfo\n     \"\"\"\n-    if not namespace:\n-      raise ValueError('Metric namespace must be non-empty')\n-    if not name:\n-      raise ValueError('Metric name must be non-empty')\n+    if not urn:\n+      if not namespace:\n+        raise ValueError('Metric namespace must be non-empty')\n+      if not name:\n+        raise ValueError('Metric name must be non-empty')\n     self.namespace = namespace\n     self.name = name\n+    self.urn = urn\n+    self.labels = labels if labels else {}\n \n   def __eq__(self, other):\n-    return self.namespace == other.namespace and self.name == other.name\n+    return (\n+        self.namespace == other.namespace and self.name == other.name and\n+        self.urn == other.urn and self.labels == other.labels)\n \n   def __ne__(self, other):\n     # TODO(BEAM-5949): Needed for Python 2 compatibility.\n     return not self == other\n \n   def __str__(self):\n-    return 'MetricName(namespace={}, name={})'.format(self.namespace, self.name)\n+    return 'MetricName(namespace={}, name={}, urn={}, labels={})'.format(\n+        self.namespace, self.name, self.urn, self.labels)\n \n   def __hash__(self):\n-    return hash((self.namespace, self.name))\n+    return hash((self.namespace, self.name, self.urn) +\n+                tuple(self.labels.items()))\n+\n+  def fast_name(self):\n+    name = self.name or ''\n+    namespace = self.namespace or ''\n+    urn = self.urn or ''\n+    labels = ''\n+    if self.labels:\n+      labels = '_'.join(['%s=%s' % (k, v) for (k, v) in self.labels.items()])\n+    return '%d_%s%s%s%s' % (len(name), name, namespace, urn, labels)", "originalCommit": "0d33248d41fc75229be9c9fb29fdcd767ae30403", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU3MDM3MQ==", "url": "https://github.com/apache/beam/pull/13217#discussion_r525570371", "bodyText": "oh seems like the answer is no from 3.6: https://softwaremaniacs.org/blog/2020/02/05/dicts-ordered/\nSince we don't support 3.5 anymore, I think you can ignore this.", "author": "pabloem", "createdAt": "2020-11-17T22:34:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ3MTYwMA=="}], "type": "inlineReview"}, {"oid": "53a26aee3f35b6dabb62661a7186217fc5c4442c", "url": "https://github.com/apache/beam/commit/53a26aee3f35b6dabb62661a7186217fc5c4442c", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-11-18T06:45:10Z", "type": "commit"}, {"oid": "53a26aee3f35b6dabb62661a7186217fc5c4442c", "url": "https://github.com/apache/beam/commit/53a26aee3f35b6dabb62661a7186217fc5c4442c", "message": "[BEAM-11092] Add bigquery io request count metric, implementing HarnessMonitoringInfos and process_wide metrics", "committedDate": "2020-11-18T06:45:10Z", "type": "forcePushed"}]}