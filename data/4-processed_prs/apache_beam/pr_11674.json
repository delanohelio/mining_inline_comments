{"pr_number": 11674, "pr_title": "[BEAM-9958] Linkage Checker to use exclusion files as baseline", "pr_createdAt": "2020-05-12T01:29:49Z", "pr_url": "https://github.com/apache/beam/pull/11674", "timeline": [{"oid": "d181899aeb182abd333841c8505154c8be199155", "url": "https://github.com/apache/beam/commit/d181899aeb182abd333841c8505154c8be199155", "message": "Linkage Checker to use baseline", "committedDate": "2020-05-12T00:42:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQxMjkzMQ==", "url": "https://github.com/apache/beam/pull/11674#discussion_r423412931", "bodyText": "No need to compare the output with diff command any more.", "author": "suztomo", "createdAt": "2020-05-12T01:35:33Z", "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -66,51 +66,58 @@ if [ ! -z \"$(git diff)\" ]; then\n   exit 1\n fi\n \n+ACCUMULATED_RESULT=0\n+\n function runLinkageCheck () {\n   COMMIT=$1\n   BRANCH=$2\n+  MODE=$3 # baseline or validate\n   # An empty invocation so that the subsequent checkJavaLinkage does not\n   # contain garbage\n   echo \"`date`:\" \"Installing artifacts of ${BRANCH}(${COMMIT}) to Maven local repository.\"\n-  ./gradlew -Ppublishing -PjavaLinkageArtifactIds=beam-sdks-java-core :checkJavaLinkage > /dev/null 2>&1\n+  ./gradlew -Ppublishing -PjavaLinkageArtifactIds=beam-sdks-java-core -PjavaLinkageWriteBaseline=/dev/null :checkJavaLinkage > /dev/null 2>&1\n   for ARTIFACT in $ARTIFACTS; do\n-    echo \"`date`:\" \"Running linkage check for ${ARTIFACT} in ${BRANCH}\"\n-    # Removing time taken to have clean diff\n-    ./gradlew -Ppublishing -PjavaLinkageArtifactIds=$ARTIFACT :checkJavaLinkage |grep -v 'BUILD SUCCESSFUL in' | grep -v 'dependency paths' > ${OUTPUT_DIR}/${COMMIT}-${ARTIFACT}\n-    echo \"`date`:\" \"Done: ${OUTPUT_DIR}/${COMMIT}-${ARTIFACT}\"\n+    echo \"`date`:\" \"Running linkage check (${MODE}) for ${ARTIFACT} in ${BRANCH}\"\n+\n+    BASELINE_FILE=${OUTPUT_DIR}/baseline-${ARTIFACT}.xml\n+    if [ \"$MODE\" = \"baseline\" ]; then\n+      BASELINE_OPTION='-PjavaLinkageWriteBaseline'\n+      echo \"`date`:\" \"to create a baseline (existing errors before change) $BASELINE_FILE\"\n+    elif [ \"$MODE\" = \"validate\" ]; then\n+      BASELINE_OPTION='-PjavaLinkageReadBaseline'\n+      echo \"`date`:\" \"using baseline $BASELINE_FILE\"\n+    else\n+      echo \"invalid parameter for runLinkageCheck: ${MODE}\"\n+      exit 1\n+    fi\n+\n+    set +e\n+    ./gradlew -Ppublishing -PjavaLinkageArtifactIds=$ARTIFACT ${BASELINE_OPTION}=${BASELINE_FILE} :checkJavaLinkage\n+    RESULT=$?\n+    set -e\n+    if [ \"$MODE\" = \"validate\" ]; then\n+      echo \"`date`:\" \"Done: ${RESULT}\"\n+      ACCUMULATED_RESULT=$((ACCUMULATED_RESULT | RESULT))\n+    fi\n   done\n }\n \n+\n BRANCH_NAME=`git rev-parse --abbrev-ref HEAD`\n BRANCH_COMMIT=`git rev-parse --short=8 HEAD`\n-runLinkageCheck $BRANCH_COMMIT $BRANCH_NAME\n \n git fetch\n MASTER_COMMIT=`git rev-parse --short=8 origin/master`\n git -c advice.detachedHead=false checkout $MASTER_COMMIT\n-runLinkageCheck $MASTER_COMMIT master\n+runLinkageCheck $MASTER_COMMIT master baseline\n+\n \n # Restore original branch\n git checkout $BRANCH_NAME\n+runLinkageCheck $BRANCH_COMMIT $BRANCH_NAME validate\n \n-# Diff command can return non-zero status\n-set +e\n-\n-FOUND_DIFFERENCE=false\n-for ARTIFACT in $ARTIFACTS; do\n-  echo; echo\n-  echo \"Linkage Check difference on $ARTIFACT between master(${MASTER_COMMIT}) and ${BRANCH_NAME}(${BRANCH_COMMIT}):\"\n-  DIFF=$(diff ${OUTPUT_DIR}/${MASTER_COMMIT}-${ARTIFACT} ${OUTPUT_DIR}/${BRANCH_COMMIT}-${ARTIFACT})", "originalCommit": "d181899aeb182abd333841c8505154c8be199155", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4d8e28d4d1c440c24e272e33a74c33d65b482bde", "url": "https://github.com/apache/beam/commit/4d8e28d4d1c440c24e272e33a74c33d65b482bde", "message": "exit value for CI", "committedDate": "2020-05-12T14:28:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwMzY1MQ==", "url": "https://github.com/apache/beam/pull/11674#discussion_r426803651", "bodyText": "why is this invalid, it looks like the linkage checker supports running without specifying javaLinkageReadBaseline or javaLinkageWriteBaseline", "author": "aaltay", "createdAt": "2020-05-18T18:02:54Z", "path": "sdks/java/build-tools/beam-linkage-check.sh", "diffHunk": "@@ -66,51 +66,61 @@ if [ ! -z \"$(git diff)\" ]; then\n   exit 1\n fi\n \n+ACCUMULATED_RESULT=0\n+\n function runLinkageCheck () {\n   COMMIT=$1\n   BRANCH=$2\n+  MODE=$3 # baseline or validate\n   # An empty invocation so that the subsequent checkJavaLinkage does not\n   # contain garbage\n   echo \"`date`:\" \"Installing artifacts of ${BRANCH}(${COMMIT}) to Maven local repository.\"\n-  ./gradlew -Ppublishing -PjavaLinkageArtifactIds=beam-sdks-java-core :checkJavaLinkage > /dev/null 2>&1\n+  ./gradlew -Ppublishing -PjavaLinkageArtifactIds=beam-sdks-java-core -PjavaLinkageWriteBaseline=/dev/null :checkJavaLinkage > /dev/null 2>&1\n   for ARTIFACT in $ARTIFACTS; do\n-    echo \"`date`:\" \"Running linkage check for ${ARTIFACT} in ${BRANCH}\"\n-    # Removing time taken to have clean diff\n-    ./gradlew -Ppublishing -PjavaLinkageArtifactIds=$ARTIFACT :checkJavaLinkage |grep -v 'BUILD SUCCESSFUL in' | grep -v 'dependency paths' > ${OUTPUT_DIR}/${COMMIT}-${ARTIFACT}\n-    echo \"`date`:\" \"Done: ${OUTPUT_DIR}/${COMMIT}-${ARTIFACT}\"\n+    echo \"`date`:\" \"Running linkage check (${MODE}) for ${ARTIFACT} in ${BRANCH}\"\n+\n+    BASELINE_FILE=${OUTPUT_DIR}/baseline-${ARTIFACT}.xml\n+    if [ \"$MODE\" = \"baseline\" ]; then\n+      BASELINE_OPTION='-PjavaLinkageWriteBaseline'\n+      echo \"`date`:\" \"to create a baseline (existing errors before change) $BASELINE_FILE\"\n+    elif [ \"$MODE\" = \"validate\" ]; then\n+      BASELINE_OPTION='-PjavaLinkageReadBaseline'\n+      echo \"`date`:\" \"using baseline $BASELINE_FILE\"\n+    else\n+      echo \"invalid parameter for runLinkageCheck: ${MODE}\"", "originalCommit": "4d8e28d4d1c440c24e272e33a74c33d65b482bde", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg3MTE5NA==", "url": "https://github.com/apache/beam/pull/11674#discussion_r426871194", "bodyText": "Good point. Will fix that (I only thought about the use case from the shell script, but now I remember that directly running the task is also useful.)", "author": "suztomo", "createdAt": "2020-05-18T20:19:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwMzY1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNzgzOA==", "url": "https://github.com/apache/beam/pull/11674#discussion_r426927838", "bodyText": "Fixed.", "author": "suztomo", "createdAt": "2020-05-18T22:32:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwMzY1MQ=="}], "type": "inlineReview"}, {"oid": "40c51fddb51e0588c3e664ab6a5e81302ab3c298", "url": "https://github.com/apache/beam/commit/40c51fddb51e0588c3e664ab6a5e81302ab3c298", "message": "Merge remote-tracking branch 'origin/master' into linkage-check-baseline", "committedDate": "2020-05-18T21:46:11Z", "type": "commit"}, {"oid": "6d8b808a840e91fd73355e49f81f580b5e2601fb", "url": "https://github.com/apache/beam/commit/6d8b808a840e91fd73355e49f81f580b5e2601fb", "message": "Case when mode is unexpected", "committedDate": "2020-05-18T21:50:49Z", "type": "commit"}]}