{"pr_number": 12906, "pr_title": "[BEAM-7372] Drop Python 2 shims and update docstring in apache_beam.typehints.schemas", "pr_createdAt": "2020-09-22T19:02:28Z", "pr_url": "https://github.com/apache/beam/pull/12906", "timeline": [{"oid": "04b9e52b5a804c85861923d0309cc8eed33a8054", "url": "https://github.com/apache/beam/commit/04b9e52b5a804c85861923d0309cc8eed33a8054", "message": "Fix apache_beam.typehints.schemas docstring", "committedDate": "2020-09-22T19:01:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwMDU5OQ==", "url": "https://github.com/apache/beam/pull/12906#discussion_r493100599", "bodyText": "What does ---/  mean? That these types have no equivalent in schemas?", "author": "ibzib", "createdAt": "2020-09-23T00:07:40Z", "path": "sdks/python/apache_beam/typehints/schemas.py", "diffHunk": "@@ -17,36 +17,42 @@\n \n \"\"\" Support for mapping python types to proto Schemas and back again.\n \n-Python              Schema\n-np.int8     <-----> BYTE\n-np.int16    <-----> INT16\n-np.int32    <-----> INT32\n-np.int64    <-----> INT64\n-int         ---/\n-np.float32  <-----> FLOAT\n-np.float64  <-----> DOUBLE\n-float       ---/\n-bool        <-----> BOOLEAN\n-Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n-Mapping     <-----> MapType\n-Sequence    <-----> ArrayType\n-NamedTuple  <-----> RowType\n-beam.Row    ---/\n-\n-nullable=True on a Beam FieldType is represented in Python by wrapping the\n-typing in Optional.\n-\n-The mappings for STRING and BYTES are different between python 2 and python 3,\n-because of the changes to str:\n-py3:\n-str/unicode <-----> STRING\n-bytes       <-----> BYTES\n-ByteString  ---/\n-\n-py2:\n-str will be rejected since it is ambiguous.\n-unicode     <-----> STRING\n-ByteString  <-----> BYTES\n+Imposes a mapping between common Python types and Beam portable schemas\n+(https://s.apache.org/beam-schemas)::\n+\n+  Python              Schema\n+  np.int8     <-----> BYTE\n+  np.int16    <-----> INT16\n+  np.int32    <-----> INT32\n+  np.int64    <-----> INT64\n+  int         ---/", "originalCommit": "04b9e52b5a804c85861923d0309cc8eed33a8054", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwNTgzMA==", "url": "https://github.com/apache/beam/pull/12906#discussion_r493105830", "bodyText": "It's supposed to indicate that when converting to Beam schemas int will map to INT64, but it's not a two-way mapping. Converting back from Beam schemas will produce np.int64, not int.", "author": "TheNeuralBit", "createdAt": "2020-09-23T00:26:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwMDU5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwNjMxMQ==", "url": "https://github.com/apache/beam/pull/12906#discussion_r493106311", "bodyText": "Wouldn't ------> be a more obvious notation for that?", "author": "ibzib", "createdAt": "2020-09-23T00:28:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwMDU5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzExMjI2Nw==", "url": "https://github.com/apache/beam/pull/12906#discussion_r493112267", "bodyText": "I guess they seem pretty equivalent to me, but I see your point that it my ascii art for two arrows merging may not be obvious. I'll change it", "author": "TheNeuralBit", "createdAt": "2020-09-23T00:51:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwMDU5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwMDYxNw==", "url": "https://github.com/apache/beam/pull/12906#discussion_r493100617", "bodyText": "Should we get rid of this since we're dropping Python 2 support?", "author": "ibzib", "createdAt": "2020-09-23T00:07:44Z", "path": "sdks/python/apache_beam/typehints/schemas.py", "diffHunk": "@@ -17,36 +17,42 @@\n \n \"\"\" Support for mapping python types to proto Schemas and back again.\n \n-Python              Schema\n-np.int8     <-----> BYTE\n-np.int16    <-----> INT16\n-np.int32    <-----> INT32\n-np.int64    <-----> INT64\n-int         ---/\n-np.float32  <-----> FLOAT\n-np.float64  <-----> DOUBLE\n-float       ---/\n-bool        <-----> BOOLEAN\n-Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n-Mapping     <-----> MapType\n-Sequence    <-----> ArrayType\n-NamedTuple  <-----> RowType\n-beam.Row    ---/\n-\n-nullable=True on a Beam FieldType is represented in Python by wrapping the\n-typing in Optional.\n-\n-The mappings for STRING and BYTES are different between python 2 and python 3,\n-because of the changes to str:\n-py3:\n-str/unicode <-----> STRING\n-bytes       <-----> BYTES\n-ByteString  ---/\n-\n-py2:\n-str will be rejected since it is ambiguous.\n-unicode     <-----> STRING\n-ByteString  <-----> BYTES\n+Imposes a mapping between common Python types and Beam portable schemas\n+(https://s.apache.org/beam-schemas)::\n+\n+  Python              Schema\n+  np.int8     <-----> BYTE\n+  np.int16    <-----> INT16\n+  np.int32    <-----> INT32\n+  np.int64    <-----> INT64\n+  int         ---/\n+  np.float32  <-----> FLOAT\n+  np.float64  <-----> DOUBLE\n+  float       ---/\n+  bool        <-----> BOOLEAN\n+  Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n+  Mapping     <-----> MapType\n+  Sequence    <-----> ArrayType\n+  NamedTuple  <-----> RowType\n+  beam.Row    ---/\n+\n+:code:`nullable=True` on a Beam :code:`FieldType` is represented in Python by\n+wrapping the type in :code:`Optional`.\n+\n+The mappings for :code:`STRING` and :code:`BYTES` are different between python\n+2 and python 3, because of the changes to str.\n+\n+Python 3.x::\n+\n+  str/unicode <-----> STRING\n+  bytes       <-----> BYTES\n+  ByteString  ---/\n+\n+Python 2.x::", "originalCommit": "04b9e52b5a804c85861923d0309cc8eed33a8054", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwODczMQ==", "url": "https://github.com/apache/beam/pull/12906#discussion_r493108731", "bodyText": "Yeah I guess I should just drop all the Python 2 shims now  \ud83c\udf89", "author": "TheNeuralBit", "createdAt": "2020-09-23T00:37:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwMDYxNw=="}], "type": "inlineReview"}, {"oid": "d3a929b718d801a2af8556babf79c5c92e6db720", "url": "https://github.com/apache/beam/commit/d3a929b718d801a2af8556babf79c5c92e6db720", "message": "Remove Python 2 shims", "committedDate": "2020-09-23T00:45:27Z", "type": "commit"}, {"oid": "dcf180968cf5a2ab40493d6e928d8b084e34bf3b", "url": "https://github.com/apache/beam/commit/dcf180968cf5a2ab40493d6e928d8b084e34bf3b", "message": "Make ascii are clearer", "committedDate": "2020-09-23T01:04:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzExNjU2Mw==", "url": "https://github.com/apache/beam/pull/12906#discussion_r493116563", "bodyText": "Thanks for the note, this definitely helps.", "author": "ibzib", "createdAt": "2020-09-23T01:07:18Z", "path": "sdks/python/apache_beam/typehints/schemas.py", "diffHunk": "@@ -17,36 +17,36 @@\n \n \"\"\" Support for mapping python types to proto Schemas and back again.\n \n-Python              Schema\n-np.int8     <-----> BYTE\n-np.int16    <-----> INT16\n-np.int32    <-----> INT32\n-np.int64    <-----> INT64\n-int         ---/\n-np.float32  <-----> FLOAT\n-np.float64  <-----> DOUBLE\n-float       ---/\n-bool        <-----> BOOLEAN\n-Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n-Mapping     <-----> MapType\n-Sequence    <-----> ArrayType\n-NamedTuple  <-----> RowType\n-beam.Row    ---/\n-\n-nullable=True on a Beam FieldType is represented in Python by wrapping the\n-typing in Optional.\n-\n-The mappings for STRING and BYTES are different between python 2 and python 3,\n-because of the changes to str:\n-py3:\n-str/unicode <-----> STRING\n-bytes       <-----> BYTES\n-ByteString  ---/\n-\n-py2:\n-str will be rejected since it is ambiguous.\n-unicode     <-----> STRING\n-ByteString  <-----> BYTES\n+Imposes a mapping between common Python types and Beam portable schemas\n+(https://s.apache.org/beam-schemas)::\n+\n+  Python              Schema\n+  np.int8     <-----> BYTE\n+  np.int16    <-----> INT16\n+  np.int32    <-----> INT32\n+  np.int64    <-----> INT64\n+  int         ------> INT64\n+  np.float32  <-----> FLOAT\n+  np.float64  <-----> DOUBLE\n+  float       ------> DOUBLE\n+  bool        <-----> BOOLEAN\n+  str/unicode <-----> STRING\n+  bytes       <-----> BYTES\n+  ByteString  ------> BYTES\n+  Timestamp   <-----> LogicalType(urn=\"beam:logical_type:micros_instant:v1\")\n+  Mapping     <-----> MapType\n+  Sequence    <-----> ArrayType\n+  NamedTuple  <-----> RowType\n+  beam.Row    ------> RowType\n+\n+Note that some of these mappings are provided as conveniences,", "originalCommit": "dcf180968cf5a2ab40493d6e928d8b084e34bf3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzExNjY3OA==", "url": "https://github.com/apache/beam/pull/12906#discussion_r493116678", "bodyText": "Thanks for helping me clarify my documentation :)", "author": "TheNeuralBit", "createdAt": "2020-09-23T01:07:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzExNjU2Mw=="}], "type": "inlineReview"}, {"oid": "abcd1c13b28a9d367a60cfe8499c446357862ec5", "url": "https://github.com/apache/beam/commit/abcd1c13b28a9d367a60cfe8499c446357862ec5", "message": "Remove unuused import sys", "committedDate": "2020-09-23T01:53:49Z", "type": "commit"}]}