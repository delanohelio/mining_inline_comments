{"pr_number": 11319, "pr_title": "[BEAM-9703]Include user distritribution into metric-dedicated validate runner test.", "pr_createdAt": "2020-04-06T03:09:34Z", "pr_url": "https://github.com/apache/beam/pull/11319", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0Nzk2NQ==", "url": "https://github.com/apache/beam/pull/11319#discussion_r404247965", "bodyText": "not all runners support attempted metrics, please only compare against committed metrics for now", "author": "lukecwik", "createdAt": "2020-04-06T17:01:48Z", "path": "sdks/python/apache_beam/metrics/metric_test.py", "diffHunk": "@@ -162,6 +169,17 @@ def process(self, element):\n         outputs_counter.key.metric.name, 'metrics_user_counter_element')\n     self.assertEqual(outputs_counter.committed, 4)\n \n+    # Verify user distribution counter.\n+    metric_results = res.metrics().query()\n+    namespace = 'apache_beam.metrics.metric_test.SomeDoFn'\n+    hc.assert_that(\n+        metric_results['distributions'],\n+        hc.contains_inanyorder(\n+            MetricResult(\n+                MetricKey('ApplyPardo', MetricName(namespace, 'element_dist')),\n+                DistributionResult(DistributionData(10, 4, 1, 4)),\n+                DistributionResult(DistributionData(10, 4, 1, 4)))))", "originalCommit": "4f81493eeda0fccfe00fc002724b4be10349ff92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI1NzEwMw==", "url": "https://github.com/apache/beam/pull/11319#discussion_r404257103", "bodyText": "I see. Thanks for the information!\nI checked MetricResult interface, it only works when passed in both 'commited' and 'attempted'.\nI will take a look what alternative we need to do.  If you by any chance are aware of a particular API I should use, please let me know.", "author": "HuangLED", "createdAt": "2020-04-06T17:16:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0Nzk2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4ODk1NQ==", "url": "https://github.com/apache/beam/pull/11319#discussion_r404288955", "bodyText": "Write your own matcher and/or use any that already exist.", "author": "lukecwik", "createdAt": "2020-04-06T18:08:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0Nzk2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5Mjc1MQ==", "url": "https://github.com/apache/beam/pull/11319#discussion_r404292751", "bodyText": "Sure.\nDone update.\nPlease take a look if it makes sense.", "author": "HuangLED", "createdAt": "2020-04-06T18:15:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0Nzk2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkxNzU3Mw==", "url": "https://github.com/apache/beam/pull/11319#discussion_r405917573", "bodyText": "This is not what I meant when I suggested a matcher, see https://github.com/hamcrest/PyHamcrest#writing-custom-matchers for an example.", "author": "lukecwik", "createdAt": "2020-04-09T02:14:21Z", "path": "sdks/python/apache_beam/metrics/execution.py", "diffHunk": "@@ -106,11 +107,13 @@ def __init__(self, key, committed, attempted):\n     self.key = key\n     self.committed = committed\n     self.attempted = attempted\n+    self.committed_only = committed_only\n \n   def __eq__(self, other):\n     return (\n         self.key == other.key and self.committed == other.committed and\n-        self.attempted == other.attempted)\n+        (self.committed_only or other.committed_only or\n+         self.attempted == other.attempted))", "originalCommit": "68b39e9869687e7f46045915710a60d231859650", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk0NDQ0Mg==", "url": "https://github.com/apache/beam/pull/11319#discussion_r405944442", "bodyText": "By searching for MatcherBase, found an existing implementation under testing folder.\nUpdated.   PTAL.", "author": "HuangLED", "createdAt": "2020-04-09T04:06:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkxNzU3Mw=="}], "type": "inlineReview"}, {"oid": "5b41b1f8a17f0788edc9601ac654766bbb3afbc4", "url": "https://github.com/apache/beam/commit/5b41b1f8a17f0788edc9601ac654766bbb3afbc4", "message": "Include user distritribution into metric-dedicated validate runner test.", "committedDate": "2020-04-10T04:19:20Z", "type": "commit"}, {"oid": "656869f876567426444e6bd2b40b9faeda39e69c", "url": "https://github.com/apache/beam/commit/656869f876567426444e6bd2b40b9faeda39e69c", "message": "update inline comment.", "committedDate": "2020-04-10T04:19:20Z", "type": "commit"}, {"oid": "34031ad3c714b108d5a1d79f15a9a340aae07832", "url": "https://github.com/apache/beam/commit/34031ad3c714b108d5a1d79f15a9a340aae07832", "message": "To allow only assert on committed metrics, bypassing the attempted ones.", "committedDate": "2020-04-10T04:19:20Z", "type": "commit"}, {"oid": "8dbdce425c813d6f376e2194d4cc9add9b215a39", "url": "https://github.com/apache/beam/commit/8dbdce425c813d6f376e2194d4cc9add9b215a39", "message": "Use distribution matcher for testing.", "committedDate": "2020-04-10T04:19:20Z", "type": "commit"}]}