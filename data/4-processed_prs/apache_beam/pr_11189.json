{"pr_number": 11189, "pr_title": "[BEAM-9446] Retain unknown arguments when using uber jar job server.", "pr_createdAt": "2020-03-20T23:50:47Z", "pr_url": "https://github.com/apache/beam/pull/11189", "timeline": [{"oid": "e65e28965d3db5140444a23e65bede7a07074161", "url": "https://github.com/apache/beam/commit/e65e28965d3db5140444a23e65bede7a07074161", "message": "[BEAM-9446] Retain unknown arguments when using uber jar job server.", "committedDate": "2020-03-20T23:45:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMwOTQ0OA==", "url": "https://github.com/apache/beam/pull/11189#discussion_r396309448", "bodyText": "What about the --arg=value format?", "author": "mxm", "createdAt": "2020-03-23T09:23:21Z", "path": "sdks/python/apache_beam/options/pipeline_options.py", "diffHunk": "@@ -285,10 +289,25 @@ def get_all_options(\n       cls._add_argparse_args(parser)  # pylint: disable=protected-access\n     if add_extra_args_fn:\n       add_extra_args_fn(parser)\n+\n     known_args, unknown_args = parser.parse_known_args(self._flags)\n-    if unknown_args:\n-      _LOGGER.warning(\"Discarding unparseable args: %s\", unknown_args)\n-    result = vars(known_args)\n+    if retain_unknown_options:\n+      i = 0\n+      while i < len(unknown_args):\n+        # Treat all unary flags as booleans, and all binary argument values as\n+        # strings.\n+        if i + 1 >= len(unknown_args) or unknown_args[i + 1].startswith('--'):\n+          parser.add_argument(unknown_args[i], action='store_true')\n+          i += 1\n+        else:\n+          parser.add_argument(unknown_args[i], type=str)\n+          i += 2", "originalCommit": "e65e28965d3db5140444a23e65bede7a07074161", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3Nzg3MA==", "url": "https://github.com/apache/beam/pull/11189#discussion_r396677870", "bodyText": "Good catch. I will have to add additional logic to handle that.", "author": "ibzib", "createdAt": "2020-03-23T18:44:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMwOTQ0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMxMDIwNA==", "url": "https://github.com/apache/beam/pull/11189#discussion_r396310204", "bodyText": "Should we always check a parameter name starts with --, like done here for boolean flags?", "author": "mxm", "createdAt": "2020-03-23T09:24:42Z", "path": "sdks/python/apache_beam/options/pipeline_options.py", "diffHunk": "@@ -285,10 +289,25 @@ def get_all_options(\n       cls._add_argparse_args(parser)  # pylint: disable=protected-access\n     if add_extra_args_fn:\n       add_extra_args_fn(parser)\n+\n     known_args, unknown_args = parser.parse_known_args(self._flags)\n-    if unknown_args:\n-      _LOGGER.warning(\"Discarding unparseable args: %s\", unknown_args)\n-    result = vars(known_args)\n+    if retain_unknown_options:\n+      i = 0\n+      while i < len(unknown_args):\n+        # Treat all unary flags as booleans, and all binary argument values as\n+        # strings.\n+        if i + 1 >= len(unknown_args) or unknown_args[i + 1].startswith('--'):", "originalCommit": "e65e28965d3db5140444a23e65bede7a07074161", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4NDQ4Ng==", "url": "https://github.com/apache/beam/pull/11189#discussion_r396684486", "bodyText": "I guess I should change it to -, not --. - is the default prefix for argparse, and AFAICT that is true for Beam as well, even though most (all?) pipeline options use --.\nhttps://docs.python.org/3/library/argparse.html#prefix-chars\nSo then the question becomes \"Should we always check a parameter name starts with -?\" And the answer is we don't have to, because the call to parse_args will do that for us. test_retain_unknown_options_unary_missing_prefix tests that.", "author": "ibzib", "createdAt": "2020-03-23T18:55:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMxMDIwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMxMzg1OQ==", "url": "https://github.com/apache/beam/pull/11189#discussion_r397313859", "bodyText": "That sounds good :)", "author": "mxm", "createdAt": "2020-03-24T16:59:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMxMDIwNA=="}], "type": "inlineReview"}, {"oid": "47b07d111db9644fc645b4eda7b100ea5cc56056", "url": "https://github.com/apache/beam/commit/47b07d111db9644fc645b4eda7b100ea5cc56056", "message": "Enable '--option=value' and '-option' syntax.", "committedDate": "2020-03-23T19:25:20Z", "type": "commit"}, {"oid": "47b07d111db9644fc645b4eda7b100ea5cc56056", "url": "https://github.com/apache/beam/commit/47b07d111db9644fc645b4eda7b100ea5cc56056", "message": "Enable '--option=value' and '-option' syntax.", "committedDate": "2020-03-23T19:25:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwNzUyMQ==", "url": "https://github.com/apache/beam/pull/11189#discussion_r399107521", "bodyText": "Why rsplit? Shouldn't this be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      split = unknown_args[i].rsplit('=')\n          \n          \n            \n                      split = unknown_args[i].split('=', 1)\n          \n      \n    \n    \n  \n\n?", "author": "mxm", "createdAt": "2020-03-27T08:38:32Z", "path": "sdks/python/apache_beam/options/pipeline_options.py", "diffHunk": "@@ -285,10 +289,29 @@ def get_all_options(\n       cls._add_argparse_args(parser)  # pylint: disable=protected-access\n     if add_extra_args_fn:\n       add_extra_args_fn(parser)\n+\n     known_args, unknown_args = parser.parse_known_args(self._flags)\n-    if unknown_args:\n-      _LOGGER.warning(\"Discarding unparseable args: %s\", unknown_args)\n-    result = vars(known_args)\n+    if retain_unknown_options:\n+      i = 0\n+      while i < len(unknown_args):\n+        # Treat all unary flags as booleans, and all binary argument values as\n+        # strings.\n+        if i + 1 >= len(unknown_args) or unknown_args[i + 1].startswith('-'):\n+          split = unknown_args[i].rsplit('=')", "originalCommit": "47b07d111db9644fc645b4eda7b100ea5cc56056", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwODIwNA==", "url": "https://github.com/apache/beam/pull/11189#discussion_r399108204", "bodyText": "Otherwise this will break options like experiments=state_cache_size=1.", "author": "mxm", "createdAt": "2020-03-27T08:39:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwNzUyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwNTA2NA==", "url": "https://github.com/apache/beam/pull/11189#discussion_r399405064", "bodyText": "The split is only used to get the argument name, and the rest of the split isn't used.", "author": "ibzib", "createdAt": "2020-03-27T16:52:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwNzUyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzODQ2OQ==", "url": "https://github.com/apache/beam/pull/11189#discussion_r399538469", "bodyText": "Comment still applies. Splitting should be performed from the left, not the right. At most one split has to be performed.", "author": "mxm", "createdAt": "2020-03-27T21:07:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwNzUyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYwNDg0OA==", "url": "https://github.com/apache/beam/pull/11189#discussion_r399604848", "bodyText": "Oh, I see what you mean now. I will commit your suggestion to avoid confusion. However, I don't think we should support unrecognized append arguments. I don't want to have to infer complex argument types. As for the specific case of experiments, that will not be a problem because experiments is already recognized by the parser.", "author": "ibzib", "createdAt": "2020-03-28T01:54:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwNzUyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0ODQ4Mg==", "url": "https://github.com/apache/beam/pull/11189#discussion_r400448482", "bodyText": "I will merge this now. If we need to support append arguments for some reason, we should be able to add that later.", "author": "ibzib", "createdAt": "2020-03-30T19:43:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwNzUyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ3NjE0NA==", "url": "https://github.com/apache/beam/pull/11189#discussion_r400476144", "bodyText": "I was only referring to options values containing = which can be the case independently of append options. That is fixed now. So all good.", "author": "mxm", "createdAt": "2020-03-30T20:33:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwNzUyMQ=="}], "type": "inlineReview"}, {"oid": "231308de9b15f8cd815b55dc3d2798642fc8521a", "url": "https://github.com/apache/beam/commit/231308de9b15f8cd815b55dc3d2798642fc8521a", "message": "Use split instead of rsplit\n\nCo-Authored-By: Maximilian Michels <mxm@apache.org>", "committedDate": "2020-03-28T01:55:16Z", "type": "commit"}]}