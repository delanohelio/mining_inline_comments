{"pr_number": 11162, "pr_title": "[BEAM-9339, BEAM-2939] Drop splittable field from ParDoPayload, add splittable dofn requirement to Python SDK.", "pr_createdAt": "2020-03-18T19:37:59Z", "pr_url": "https://github.com/apache/beam/pull/11162", "timeline": [{"oid": "0d245c79c44a72c3e7d479c26e7075f431dc0f18", "url": "https://github.com/apache/beam/commit/0d245c79c44a72c3e7d479c26e7075f431dc0f18", "message": "[BEAM-9339, BEAM-2939] Drop splittable field from proto, add splittable dofn capability to Python SDK.\n\nAdd requirement URNs to Java SDK.", "committedDate": "2020-03-18T20:56:04Z", "type": "forcePushed"}, {"oid": "17b021624d249dde650980e552f41a6c6fd44994", "url": "https://github.com/apache/beam/commit/17b021624d249dde650980e552f41a6c6fd44994", "message": "[BEAM-9339, BEAM-2939] Drop splittable field from proto, add splittable dofn capability to Python SDK.\n\nAdd requirement URNs to Java SDK.", "committedDate": "2020-03-18T22:14:32Z", "type": "commit"}, {"oid": "17b021624d249dde650980e552f41a6c6fd44994", "url": "https://github.com/apache/beam/commit/17b021624d249dde650980e552f41a6c6fd44994", "message": "[BEAM-9339, BEAM-2939] Drop splittable field from proto, add splittable dofn capability to Python SDK.\n\nAdd requirement URNs to Java SDK.", "committedDate": "2020-03-18T22:14:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIxMjc4Ng==", "url": "https://github.com/apache/beam/pull/11162#discussion_r395212786", "bodyText": "I'm not convinced that using the presence of a restriction coder is better than explicitly marking things as splittable, but could possibly be persuaded.", "author": "robertwb", "createdAt": "2020-03-19T17:50:38Z", "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -457,10 +457,9 @@ message ParDoPayload {\n   // be placed in the pipeline requirements.\n   map<string, TimerFamilySpec> timer_family_specs = 9;\n \n-  // Whether the DoFn is splittable\n-  bool splittable = 6;\n-\n-  // (Required if splittable == true) Id of the restriction coder.\n+  // (Optional) Only set when this ParDo contains a splittable DoFn.", "originalCommit": "17b021624d249dde650980e552f41a6c6fd44994", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIyMDM5MQ==", "url": "https://github.com/apache/beam/pull/11162#discussion_r395220391", "bodyText": "splittable is invalid without the other field being set so why have it?\nIt would allow for bugs where one is set and the other is not.", "author": "lukecwik", "createdAt": "2020-03-19T18:02:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIxMjc4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI2OTM2Mw==", "url": "https://github.com/apache/beam/pull/11162#discussion_r395269363", "bodyText": "Because it's not as obvious. But I can see the pros and cons.", "author": "robertwb", "createdAt": "2020-03-19T19:29:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIxMjc4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIxMzUyOQ==", "url": "https://github.com/apache/beam/pull/11162#discussion_r395213529", "bodyText": "Is this a requirement, given that the pipeline would still execute correctly were expansion not performed? (Maybe the performance is bad enough to merit this, but then again, maybe SDF is so primitive that all runners should do something do support sources.)", "author": "robertwb", "createdAt": "2020-03-19T17:51:55Z", "path": "model/pipeline/src/main/proto/beam_runner_api.proto", "diffHunk": "@@ -1355,6 +1355,10 @@ message StandardRequirements {\n     // This requirement indicates the requires_time_sorted_input field of ParDo\n     // transform payloads must be inspected.\n     REQUIRES_TIME_SORTED_INPUT = 3 [(beam_urn) = \"beam:requirement:pardo:time_sorted_input:v1\"];\n+\n+    // This requirement indicates the restriction_coder_id field of ParDo\n+    // transform payloads must be inspected.\n+    REQUIRES_SPLITTABLE_DOFN = 4 [(beam_urn) = \"beam:requirement:pardo:splittable_dofn:v1\"];", "originalCommit": "17b021624d249dde650980e552f41a6c6fd44994", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIxNjE2NA==", "url": "https://github.com/apache/beam/pull/11162#discussion_r395216164", "bodyText": "If its unbounded, a runner will never be able to execute it without expansion which requires the runner to at least inspect whether its capable of doing it.", "author": "lukecwik", "createdAt": "2020-03-19T17:56:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIxMzUyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI2OTM3Mw==", "url": "https://github.com/apache/beam/pull/11162#discussion_r395269373", "bodyText": "Fair point.", "author": "robertwb", "createdAt": "2020-03-19T19:29:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIxMzUyOQ=="}], "type": "inlineReview"}]}