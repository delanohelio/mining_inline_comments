{"pr_number": 10613, "pr_title": "[BEAM-9093] Log invalid overwrites in pipeline options", "pr_createdAt": "2020-01-16T20:02:03Z", "pr_url": "https://github.com/apache/beam/pull/10613", "timeline": [{"oid": "c331d138c44bcd0472d56383968d437369d55eba", "url": "https://github.com/apache/beam/commit/c331d138c44bcd0472d56383968d437369d55eba", "message": "[BEAM-9093] Log invalid overwrites in pipeline options", "committedDate": "2020-01-16T21:17:17Z", "type": "forcePushed"}, {"oid": "006562ee96667eb4b1f14aaad311b33f33e0ee5d", "url": "https://github.com/apache/beam/commit/006562ee96667eb4b1f14aaad311b33f33e0ee5d", "message": "[BEAM-9093] Log invalid overwrites in pipeline options", "committedDate": "2020-01-16T21:24:03Z", "type": "forcePushed"}, {"oid": "79158748de2c0a50cc986a0cb154a0d3d39635f6", "url": "https://github.com/apache/beam/commit/79158748de2c0a50cc986a0cb154a0d3d39635f6", "message": "[BEAM-9093] Log invalid overwrites in pipeline options", "committedDate": "2020-01-16T21:29:28Z", "type": "commit"}, {"oid": "79158748de2c0a50cc986a0cb154a0d3d39635f6", "url": "https://github.com/apache/beam/commit/79158748de2c0a50cc986a0cb154a0d3d39635f6", "message": "[BEAM-9093] Log invalid overwrites in pipeline options", "committedDate": "2020-01-16T21:29:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2MDE4Mg==", "url": "https://github.com/apache/beam/pull/10613#discussion_r369260182", "bodyText": "Looks like there are two spaces.", "author": "ihji", "createdAt": "2020-01-21T21:46:39Z", "path": "sdks/python/apache_beam/options/pipeline_options.py", "diffHunk": "@@ -288,15 +288,20 @@ def get_all_options(self,\n       _LOGGER.warning(\"Discarding unparseable args: %s\", unknown_args)\n     result = vars(known_args)\n \n+    overrides = self._all_options.copy()\n     # Apply the overrides if any\n     for k in list(result):\n+      overrides.pop(k, None)\n       if k in self._all_options:\n         result[k] = self._all_options[k]\n       if (drop_default and\n           parser.get_default(k) == result[k] and\n           not isinstance(parser.get_default(k), ValueProvider)):\n         del result[k]\n \n+    if  overrides:", "originalCommit": "79158748de2c0a50cc986a0cb154a0d3d39635f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMxMzU2NQ==", "url": "https://github.com/apache/beam/pull/10613#discussion_r370313565", "bodyText": "Good catch. I don't know why lint did not catch it.", "author": "angoenka", "createdAt": "2020-01-23T19:33:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2MDE4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2NDkxOQ==", "url": "https://github.com/apache/beam/pull/10613#discussion_r369264919", "bodyText": "It would be great if we could also capture the logging in addition to only checking mock_flag is untouched.", "author": "ihji", "createdAt": "2020-01-21T21:57:13Z", "path": "sdks/python/apache_beam/options/pipeline_options_test.py", "diffHunk": "@@ -264,6 +264,18 @@ def test_override_options(self):\n     self.assertEqual(options.get_all_options()['num_workers'], 5)\n     self.assertTrue(options.get_all_options()['mock_flag'])\n \n+  def test_override_init_options(self):\n+    base_flags = ['--num_workers', '5']\n+    options = PipelineOptions(base_flags, mock_flag=True)\n+    self.assertEqual(options.get_all_options()['num_workers'], 5)\n+    self.assertEqual(options.get_all_options()['mock_flag'], True)\n+\n+  def test_invalid_override_init_options(self):\n+    base_flags = ['--num_workers', '5']\n+    options = PipelineOptions(base_flags, mock_invalid_flag=True)\n+    self.assertEqual(options.get_all_options()['num_workers'], 5)\n+    self.assertEqual(options.get_all_options()['mock_flag'], False)", "originalCommit": "79158748de2c0a50cc986a0cb154a0d3d39635f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMxMzQ1OA==", "url": "https://github.com/apache/beam/pull/10613#discussion_r370313458", "bodyText": "Checking log message for test correctness will not be idle i suppose.", "author": "angoenka", "createdAt": "2020-01-23T19:32:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2NDkxOQ=="}], "type": "inlineReview"}, {"oid": "c7650f15b5890adaf2b11ece92795736498c0206", "url": "https://github.com/apache/beam/commit/c7650f15b5890adaf2b11ece92795736498c0206", "message": "Fixing extra space", "committedDate": "2020-01-23T19:34:19Z", "type": "commit"}]}