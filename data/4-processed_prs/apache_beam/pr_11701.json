{"pr_number": 11701, "pr_title": "[BEAM-9989] Fix some issues around storing schema `id` on user types", "pr_createdAt": "2020-05-13T22:05:15Z", "pr_url": "https://github.com/apache/beam/pull/11701", "timeline": [{"oid": "a5383c2d657dc629163fb1aae10dd2b1fefed456", "url": "https://github.com/apache/beam/commit/a5383c2d657dc629163fb1aae10dd2b1fefed456", "message": "Change column name to 'id' to expose row_coder error", "committedDate": "2020-05-13T21:51:16Z", "type": "commit"}, {"oid": "3198086a33ba44da92719bc80d989a2ca7b49d38", "url": "https://github.com/apache/beam/commit/3198086a33ba44da92719bc80d989a2ca7b49d38", "message": "Pull out fields as a tuple rather than attribute access\n\nFixes bug where we read the incorrect value for a field named 'id'", "committedDate": "2020-05-13T21:51:17Z", "type": "commit"}, {"oid": "7ae3bb68f008bfaf6e4c546c29e233e9b802580c", "url": "https://github.com/apache/beam/commit/7ae3bb68f008bfaf6e4c546c29e233e9b802580c", "message": "Tag types with '_beam_schema_id' rather than 'id' to avoid collisions", "committedDate": "2020-05-13T21:51:17Z", "type": "commit"}, {"oid": "ed0ce0963d2f5b11e180e58b18c0c00dd5cb46a4", "url": "https://github.com/apache/beam/commit/ed0ce0963d2f5b11e180e58b18c0c00dd5cb46a4", "message": "Ensure user types have a _beam_schema_id set", "committedDate": "2020-05-13T21:51:17Z", "type": "commit"}, {"oid": "dafb03854696c8d189da4f1ad16345931e6d09dc", "url": "https://github.com/apache/beam/commit/dafb03854696c8d189da4f1ad16345931e6d09dc", "message": "lint", "committedDate": "2020-05-14T00:36:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY0ODE4MA==", "url": "https://github.com/apache/beam/pull/11701#discussion_r427648180", "bodyText": "This forces the value to be an iterable, rather than just having the right fields, right? Are we sure we want to do that?", "author": "robertwb", "createdAt": "2020-05-19T23:02:31Z", "path": "sdks/python/apache_beam/coders/row_coder.py", "diffHunk": "@@ -134,19 +134,18 @@ def __init__(self, schema, components):\n   def encode_to_stream(self, value, out, nested):\n     nvals = len(self.schema.fields)\n     self.SIZE_CODER.encode_to_stream(nvals, out, True)\n-    attrs = [getattr(value, f.name) for f in self.schema.fields]", "originalCommit": "dafb03854696c8d189da4f1ad16345931e6d09dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY1NTMzMg==", "url": "https://github.com/apache/beam/pull/11701#discussion_r427655332", "bodyText": "Yeah that's right. Right now it should only be possible to get here with a NamedTuple instance, so it should be safe.\nLooking forward to the day where more types might go through this code.. I kind of like the idea of using tuple as the \"base\" schema type in Python (i.e. the type we must be able to convert to/from for use in row coder). Relying on attributes isn't great since it limits us to field names that are valid python identifiers.\nAll that being said I'd be fine dropping this part of the change for now. Renaming the special id field also fixes the bug.", "author": "TheNeuralBit", "createdAt": "2020-05-19T23:24:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY0ODE4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxNzkxNw==", "url": "https://github.com/apache/beam/pull/11701#discussion_r428217917", "bodyText": "Yeah, let's drop this change for now.", "author": "robertwb", "createdAt": "2020-05-20T18:23:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY0ODE4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIyMzk2Ng==", "url": "https://github.com/apache/beam/pull/11701#discussion_r428223966", "bodyText": "I just pushed a commit that drops the coder change for now", "author": "TheNeuralBit", "createdAt": "2020-05-20T18:32:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY0ODE4MA=="}], "type": "inlineReview"}, {"oid": "c8a7558136ac3ea772239fb569ffad52393c15b4", "url": "https://github.com/apache/beam/commit/c8a7558136ac3ea772239fb569ffad52393c15b4", "message": "Revert \"Pull out fields as a tuple rather than attribute access\"\n\nThis reverts commit 3198086a33ba44da92719bc80d989a2ca7b49d38.", "committedDate": "2020-05-20T18:30:33Z", "type": "commit"}]}