{"pr_number": 12641, "pr_title": "[BEAM-10764] Make is_in_ipython robust", "pr_createdAt": "2020-08-19T23:29:21Z", "pr_url": "https://github.com/apache/beam/pull/12641", "timeline": [{"oid": "8b6ed6aa56e22dfeb480d56c4a478973b11752e2", "url": "https://github.com/apache/beam/commit/8b6ed6aa56e22dfeb480d56c4a478973b11752e2", "message": "[BEAM-10764] Make is_in_ipython robust\n\nTo handle potentially corrupted IPython dep used by the user running a\nenvironment that is not managed by setuptools, added an any-exception\nstatement to treat the current code execution as not in IPython kernel\non non-import errors.", "committedDate": "2020-08-20T20:10:02Z", "type": "forcePushed"}, {"oid": "add5e1b1afc5743d1a97e81489b6ebac2cda560e", "url": "https://github.com/apache/beam/commit/add5e1b1afc5743d1a97e81489b6ebac2cda560e", "message": "[BEAM-10764] Make is_in_ipython robust\n\nTo handle potentially corrupted IPython dep used by the user running a\nenvironment that is not managed by setuptools, added an any-exception\nstatement to treat the current code execution as not in IPython kernel\non non-import errors.", "committedDate": "2020-08-20T20:31:32Z", "type": "commit"}, {"oid": "add5e1b1afc5743d1a97e81489b6ebac2cda560e", "url": "https://github.com/apache/beam/commit/add5e1b1afc5743d1a97e81489b6ebac2cda560e", "message": "[BEAM-10764] Make is_in_ipython robust\n\nTo handle potentially corrupted IPython dep used by the user running a\nenvironment that is not managed by setuptools, added an any-exception\nstatement to treat the current code execution as not in IPython kernel\non non-import errors.", "committedDate": "2020-08-20T20:31:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MTUyMQ==", "url": "https://github.com/apache/beam/pull/12641#discussion_r474291521", "bodyText": "Optional: This is a case where an explicit return False (here and for the ImportError) might make things more clear.", "author": "robertwb", "createdAt": "2020-08-20T21:48:23Z", "path": "sdks/python/apache_beam/utils/interactive_utils.py", "diffHunk": "@@ -34,6 +38,11 @@ def is_in_ipython():\n       is_in_ipython = True\n   except ImportError:\n     pass  # If dependencies are not available, then not interactive for sure.\n+  except (KeyboardInterrupt, SystemExit):\n+    raise\n+  except:  # pylint: disable=bare-except\n+    _LOGGER.info(\n+        'Unexpected error occurred, treated as not in IPython.', exc_info=True)", "originalCommit": "add5e1b1afc5743d1a97e81489b6ebac2cda560e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMzMDExNw==", "url": "https://github.com/apache/beam/pull/12641#discussion_r474330117", "bodyText": "Added explicit return statement at each return point.", "author": "KevinGG", "createdAt": "2020-08-20T23:43:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MTUyMQ=="}], "type": "inlineReview"}, {"oid": "c6c21f6655fe275490cb9cc60e4106c09885a650", "url": "https://github.com/apache/beam/commit/c6c21f6655fe275490cb9cc60e4106c09885a650", "message": "Made explicit return statement in each return point", "committedDate": "2020-08-20T23:42:30Z", "type": "commit"}]}