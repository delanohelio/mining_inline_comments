{"pr_number": 10765, "pr_title": "[BEAM-8758] Google-cloud-spanner upgrade to 1.49.1", "pr_createdAt": "2020-02-04T16:59:45Z", "pr_url": "https://github.com/apache/beam/pull/10765", "timeline": [{"oid": "dcafbbd5b159033678e4f030cb942b7c8b89cf8a", "url": "https://github.com/apache/beam/commit/dcafbbd5b159033678e4f030cb942b7c8b89cf8a", "message": "Spanner 1.49.1", "committedDate": "2020-02-04T16:25:41Z", "type": "commit"}, {"oid": "7df9bdb35dc5e7747ba712c992b1fa1873619f73", "url": "https://github.com/apache/beam/commit/7df9bdb35dc5e7747ba712c992b1fa1873619f73", "message": "Fixed GcpApiSurfaceTest", "committedDate": "2020-02-04T16:47:50Z", "type": "commit"}, {"oid": "4428eb4a978913b11f47a84c5e2ee0673b874aa3", "url": "https://github.com/apache/beam/commit/4428eb4a978913b11f47a84c5e2ee0673b874aa3", "message": "Merge remote-tracking branch 'origin/master' into google-cloud-spanner", "committedDate": "2020-02-05T17:48:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4Njk5Mw==", "url": "https://github.com/apache/beam/pull/10765#discussion_r375986993", "bodyText": "I had to add these classes in whitelist. Details in BEAM-8758.\nI hope they are acceptable.", "author": "suztomo", "createdAt": "2020-02-06T17:48:50Z", "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/GcpApiSurfaceTest.java", "diffHunk": "@@ -91,6 +91,20 @@ public void testGcpApiSurface() throws Exception {\n             Matchers.<Class<?>>equalTo(com.google.cloud.ByteArray.class),\n             Matchers.<Class<?>>equalTo(com.google.cloud.Date.class),\n             Matchers.<Class<?>>equalTo(com.google.cloud.Timestamp.class),\n+            Matchers.<Class<?>>equalTo(com.google.cloud.Identity.class),\n+            Matchers.<Class<?>>equalTo(com.google.cloud.Identity.Type.class),\n+            Matchers.<Class<?>>equalTo(com.google.cloud.Policy.class),\n+            Matchers.<Class<?>>equalTo(com.google.cloud.Policy.Builder.class),\n+            Matchers.<Class<?>>equalTo(com.google.cloud.Policy.Marshaller.class),\n+            Matchers.<Class<?>>equalTo(com.google.cloud.Policy.DefaultMarshaller.class),\n+            Matchers.<Class<?>>equalTo(com.google.cloud.Role.class),\n+            Matchers.<Class<?>>equalTo(com.google.cloud.StringEnumValue.class),\n+            Matchers.<Class<?>>equalTo(com.google.iam.v1.Binding.class),\n+            Matchers.<Class<?>>equalTo(com.google.iam.v1.Binding.Builder.class),\n+            Matchers.<Class<?>>equalTo(com.google.iam.v1.Policy.class),\n+            Matchers.<Class<?>>equalTo(com.google.iam.v1.Policy.Builder.class),\n+            Matchers.<Class<?>>equalTo(com.google.iam.v1.BindingOrBuilder.class),\n+            Matchers.<Class<?>>equalTo(com.google.iam.v1.PolicyOrBuilder.class),", "originalCommit": "7df9bdb35dc5e7747ba712c992b1fa1873619f73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fe9ef036230250d88c6caf1909d1717d21b75860", "url": "https://github.com/apache/beam/commit/fe9ef036230250d88c6caf1909d1717d21b75860", "message": "Merge remote-tracking branch 'origin/master' into google-cloud-spanner", "committedDate": "2020-02-13T18:09:12Z", "type": "commit"}, {"oid": "59ff3cddea01a4f948b6dba28362c467e5b82fe8", "url": "https://github.com/apache/beam/commit/59ff3cddea01a4f948b6dba28362c467e5b82fe8", "message": "SpannerAccessor.create\n\nThis change still fails GcpApiSurfaceTest:\n\njava.lang.AssertionError:\nExpected: API surface to include only:\n\tClasses in package \"com.google.api.core\"\n\tClasses in package \"com.google.api.client.googleapis\"\n\tClasses in package \"com.google.api.client.http\"\n\tClasses in package \"com.google.api.client.json\"\n\tClasses in package \"com.google.api.client.util\"\n\tClasses in package \"com.google.api.services.bigquery.model\"\n\tClasses in package \"com.google.auth\"\n\tClasses in package \"com.google.bigtable.v2\"\n\tClasses in package \"com.google.cloud.bigquery.storage.v1beta1\"\n\tClasses in package \"com.google.cloud.bigtable.config\"\n\tClasses in package \"com.google.spanner.v1\"\n\tClasses in package \"com.google.pubsub.v1\"\n\t<class com.google.api.gax.rpc.ApiException>\n\t<interface com.google.api.gax.longrunning.OperationFuture>\n\t<interface com.google.api.gax.longrunning.OperationSnapshot>\n\t<interface com.google.api.gax.paging.Page>\n\t<interface com.google.api.gax.retrying.RetryingFuture>\n\t<class com.google.api.gax.retrying.RetrySettings>\n\t<class com.google.api.gax.retrying.RetrySettings$Builder>\n\t<class com.google.api.gax.retrying.TimedAttemptSettings>\n\t<class com.google.api.gax.retrying.TimedAttemptSettings$Builder>\n\t<interface com.google.api.gax.rpc.StatusCode>\n\t<class com.google.api.gax.rpc.StatusCode$Code>\n\t<class com.google.cloud.bigtable.grpc.BigtableClusterName>\n\t<class com.google.cloud.bigtable.grpc.BigtableInstanceName>\n\t<class com.google.cloud.bigtable.grpc.BigtableTableName>\n\t<class com.google.cloud.BaseServiceException>\n\t<class com.google.cloud.BaseServiceException$Error>\n\t<class com.google.cloud.BaseServiceException$ExceptionData>\n\t<class com.google.cloud.BaseServiceException$ExceptionData$Builder>\n\t<class com.google.cloud.RetryHelper$RetryHelperException>\n\t<class com.google.cloud.grpc.BaseGrpcServiceException>\n\t<class com.google.cloud.ByteArray>\n\t<class com.google.cloud.Date>\n\t<class com.google.cloud.Timestamp>\n\tClasses in package \"com.google.cloud.spanner\"\n\tClasses in package \"com.google.spanner.admin.database.v1\"\n\tClasses in package \"com.google.datastore.v1\"\n\tClasses in package \"com.google.protobuf\"\n\tClasses in package \"com.google.type\"\n\tClasses in package \"com.fasterxml.jackson.annotation\"\n\tClasses in package \"com.fasterxml.jackson.core\"\n\tClasses in package \"com.fasterxml.jackson.databind\"\n\tClasses in package \"io.grpc\"\n\tClasses in package \"java\"\n\tClasses in package \"javax\"\n\tClasses in package \"org.apache.avro\"\n\tClasses in package \"org.apache.beam\"\n\tClasses in package \"org.apache.commons.logging\"\n\tClasses in package \"org.codehaus.jackson\"\n\tClasses in package \"org.joda.time\"\n\tClasses in package \"org.threeten.bp\"\n\n     but: The following disallowed classes appeared on the API surface:\n\tclass com.google.cloud.Identity exposed via:\n\t\tclass com.google.cloud.Identity\n\t\tclass com.google.cloud.Policy$Builder\n\t\tclass com.google.cloud.Policy\n\t\tinterface com.google.cloud.spanner.DatabaseAdminClient\n\t\tclass org.apache.beam.sdk.io.gcp.spanner.SpannerAccessor\n\tclass com.google.cloud.Identity$Type exposed via:\n\t\tclass com.google.cloud.Identity$Type\n\t\tclass com.google.cloud.Identity\n\t\tclass com.google.cloud.Policy$Builder\n\t\tclass com.google.cloud.Policy\n\t\tinterface com.google.cloud.spanner.DatabaseAdminClient\n\t\tclass org.apache.beam.sdk.io.gcp.spanner.SpannerAccessor\n\tclass com.google.cloud.Policy exposed via:\n\t\tclass com.google.cloud.Policy\n\t\tinterface com.google.cloud.spanner.DatabaseAdminClient\n\t\tclass org.apache.beam.sdk.io.gcp.spanner.SpannerAccessor\n\tclass com.google.cloud.Policy$Builder exposed via:\n\t\tclass com.google.cloud.Policy$Builder\n\t\tclass com.google.cloud.Policy\n\t\tinterface com.google.cloud.spanner.DatabaseAdminClient\n\t\tclass org.apache.beam.sdk.io.gcp.spanner.SpannerAccessor\n\tclass com.google.cloud.Policy$DefaultMarshaller exposed via:\n\t\tclass com.google.cloud.Policy$DefaultMarshaller\n\t\tclass com.google.cloud.Policy\n\t\tinterface com.google.cloud.spanner.DatabaseAdminClient\n\t\tclass org.apache.beam.sdk.io.gcp.spanner.SpannerAccessor\n\tclass com.google.cloud.Policy$Marshaller exposed via:\n\t\tclass com.google.cloud.Policy$Marshaller\n\t\tclass com.google.cloud.Policy$DefaultMarshaller\n\t\tclass com.google.cloud.Policy\n\t\tinterface com.google.cloud.spanner.DatabaseAdminClient\n\t\tclass org.apache.beam.sdk.io.gcp.spanner.SpannerAccessor\n\tclass com.google.cloud.Role exposed via:\n\t\tclass com.google.cloud.Role\n\t\tclass com.google.cloud.Policy$Builder\n\t\tclass com.google.cloud.Policy\n\t\tinterface com.google.cloud.spanner.DatabaseAdminClient\n\t\tclass org.apache.beam.sdk.io.gcp.spanner.SpannerAccessor\n\tclass com.google.cloud.StringEnumValue exposed via:\n\t\tclass com.google.cloud.StringEnumValue\n\t\tclass com.google.cloud.Identity$Type\n\t\tclass com.google.cloud.Identity\n\t\tclass com.google.cloud.Policy$Builder\n\t\tclass com.google.cloud.Policy\n\t\tinterface com.google.cloud.spanner.DatabaseAdminClient\n\t\tclass org.apache.beam.sdk.io.gcp.spanner.SpannerAccessor\n\tclass com.google.iam.v1.Binding exposed via:\n\t\tclass com.google.iam.v1.Binding\n\t\tclass com.google.iam.v1.Binding$Builder\n\t\tclass com.google.iam.v1.Policy$Builder\n\t\tclass com.google.iam.v1.Policy\n\t\tclass com.google.cloud.Policy$DefaultMarshaller\n\t\tclass com.google.cloud.Policy\n\t\tinterface com.google.cloud.spanner.DatabaseAdminClient\n\t\tclass org.apache.beam.sdk.io.gcp.spanner.SpannerAccessor\n\tclass com.google.iam.v1.Binding$Builder exposed via:\n\t\tclass com.google.iam.v1.Binding$Builder\n\t\tclass com.google.iam.v1.Binding\n\t\tclass com.google.iam.v1.Policy$Builder\n\t\tclass com.google.iam.v1.Policy\n\t\tclass com.google.cloud.Policy$DefaultMarshaller\n\t\tclass com.google.cloud.Policy\n\t\tinterface com.google.cloud.spanner.DatabaseAdminClient\n\t\tclass org.apache.beam.sdk.io.gcp.spanner.SpannerAccessor\n\tclass com.google.iam.v1.Policy exposed via:\n\t\tclass com.google.iam.v1.Policy\n\t\tclass com.google.cloud.Policy$DefaultMarshaller\n\t\tclass com.google.cloud.Policy\n\t\tinterface com.google.cloud.spanner.DatabaseAdminClient\n\t\tclass org.apache.beam.sdk.io.gcp.spanner.SpannerAccessor\n\tclass com.google.iam.v1.Policy$Builder exposed via:\n\t\tclass com.google.iam.v1.Policy$Builder\n\t\tclass com.google.iam.v1.Policy\n\t\tclass com.google.cloud.Policy$DefaultMarshaller\n\t\tclass com.google.cloud.Policy\n\t\tinterface com.google.cloud.spanner.DatabaseAdminClient\n\t\tclass org.apache.beam.sdk.io.gcp.spanner.SpannerAccessor\n\tinterface com.google.iam.v1.BindingOrBuilder exposed via:\n\t\tinterface com.google.iam.v1.BindingOrBuilder\n\t\tclass com.google.iam.v1.Binding\n\t\tclass com.google.iam.v1.Binding$Builder\n\t\tclass com.google.iam.v1.Policy$Builder\n\t\tclass com.google.iam.v1.Policy\n\t\tclass com.google.cloud.Policy$DefaultMarshaller\n\t\tclass com.google.cloud.Policy\n\t\tinterface com.google.cloud.spanner.DatabaseAdminClient\n\t\tclass org.apache.beam.sdk.io.gcp.spanner.SpannerAccessor\n\tinterface com.google.iam.v1.PolicyOrBuilder exposed via:\n\t\tinterface com.google.iam.v1.PolicyOrBuilder\n\t\tclass com.google.iam.v1.Policy$Builder\n\t\tclass com.google.iam.v1.Policy\n\t\tclass com.google.cloud.Policy$DefaultMarshaller\n\t\tclass com.google.cloud.Policy\n\t\tinterface com.google.cloud.spanner.DatabaseAdminClient\n\t\tclass org.apache.beam.sdk.io.gcp.spanner.SpannerAccessor", "committedDate": "2020-02-13T18:43:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1NDM3Ng==", "url": "https://github.com/apache/beam/pull/10765#discussion_r379054376", "bodyText": "I think this line is the cause of the API surface leak, because all the test failure error messages have\n...\n\t\tinterface com.google.cloud.spanner.DatabaseAdminClient\n\t\tclass org.apache.beam.sdk.io.gcp.spanner.SpannerAccessor\n\nIs it ok to make this package private? My IntelliJ says this method is unused. But Beam users might touch the method.", "author": "suztomo", "createdAt": "2020-02-13T18:54:36Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/spanner/SpannerAccessor.java", "diffHunk": "@@ -40,6 +57,59 @@\n     this.batchClient = batchClient;\n   }\n \n+  static SpannerAccessor create(SpannerConfig spannerConfig) {\n+    SpannerOptions.Builder builder = SpannerOptions.newBuilder();\n+\n+    ValueProvider<Duration> commitDeadline = spannerConfig.getCommitDeadline();\n+    if (commitDeadline != null && commitDeadline.get().getMillis() > 0) {\n+\n+      // In Spanner API version 1.21 or above, we can set the deadline / total Timeout on an API\n+      // call using the following code:\n+      //\n+      // UnaryCallSettings.Builder commitSettings =\n+      // builder.getSpannerStubSettingsBuilder().commitSettings();\n+      // RetrySettings.Builder commitRetrySettings = commitSettings.getRetrySettings().toBuilder()\n+      // commitSettings.setRetrySettings(\n+      //     commitRetrySettings.setTotalTimeout(\n+      //         Duration.ofMillis(getCommitDeadlineMillis().get()))\n+      //     .build());\n+      //\n+      // However, at time of this commit, the Spanner API is at only at v1.6.0, where the only\n+      // method to set a deadline is with GRPC Interceptors, so we have to use that...\n+      SpannerInterceptorProvider interceptorProvider =\n+          SpannerInterceptorProvider.createDefault()\n+              .with(new CommitDeadlineSettingInterceptor(commitDeadline.get()));\n+      builder.setInterceptorProvider(interceptorProvider);\n+    }\n+\n+    ValueProvider<String> projectId = spannerConfig.getProjectId();\n+    if (projectId != null) {\n+      builder.setProjectId(projectId.get());\n+    }\n+    ServiceFactory<Spanner, SpannerOptions> serviceFactory = spannerConfig.getServiceFactory();\n+    if (serviceFactory != null) {\n+      builder.setServiceFactory(serviceFactory);\n+    }\n+    ValueProvider<String> host = spannerConfig.getHost();\n+    if (host != null) {\n+      builder.setHost(host.get());\n+    }\n+    String userAgentString = USER_AGENT_PREFIX + \"/\" + ReleaseInfo.getReleaseInfo().getVersion();\n+    builder.setHeaderProvider(FixedHeaderProvider.create(\"user-agent\", userAgentString));\n+    SpannerOptions options = builder.build();\n+\n+    Spanner spanner = options.getService();\n+    String instanceId = spannerConfig.getInstanceId().get();\n+    String databaseId = spannerConfig.getDatabaseId().get();\n+    DatabaseClient databaseClient =\n+        spanner.getDatabaseClient(DatabaseId.of(options.getProjectId(), instanceId, databaseId));\n+    BatchClient batchClient =\n+        spanner.getBatchClient(DatabaseId.of(options.getProjectId(), instanceId, databaseId));\n+    DatabaseAdminClient databaseAdminClient = spanner.getDatabaseAdminClient();\n+\n+    return new SpannerAccessor(spanner, databaseClient, databaseAdminClient, batchClient);\n+  }\n+\n   public DatabaseClient getDatabaseClient() {", "originalCommit": "59ff3cddea01a4f948b6dba28362c467e5b82fe8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2MTUxMg==", "url": "https://github.com/apache/beam/pull/10765#discussion_r379061512", "bodyText": "The commit message was by Mairbek:\ncommit b99c67e9f2f5064cc6ac708fdedf2a3aeba55ae3\nDate:   Tue May 1 16:58:23 2018 -0700\n\n    Expose DatabaseAdminClient\n    \n    Change-Id: I50670b8cd6a479fcad6ff866c6adb97434ae2ed8", "author": "suztomo", "createdAt": "2020-02-13T19:08:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1NDM3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1NDc4Nw==", "url": "https://github.com/apache/beam/pull/10765#discussion_r379054787", "bodyText": "SpannerAccessor is public. Therefore any public methods' return values may become the source of the API surface leak.", "author": "suztomo", "createdAt": "2020-02-13T18:55:25Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/spanner/SpannerAccessor.java", "diffHunk": "@@ -17,19 +17,36 @@\n  */\n package org.apache.beam.sdk.io.gcp.spanner;\n \n+import com.google.api.gax.rpc.FixedHeaderProvider;\n+import com.google.cloud.ServiceFactory;\n import com.google.cloud.spanner.BatchClient;\n import com.google.cloud.spanner.DatabaseAdminClient;\n import com.google.cloud.spanner.DatabaseClient;\n+import com.google.cloud.spanner.DatabaseId;\n import com.google.cloud.spanner.Spanner;\n+import com.google.cloud.spanner.SpannerOptions;\n+import com.google.cloud.spanner.spi.v1.SpannerInterceptorProvider;\n+import io.grpc.CallOptions;\n+import io.grpc.Channel;\n+import io.grpc.ClientCall;\n+import io.grpc.ClientInterceptor;\n+import io.grpc.MethodDescriptor;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.beam.sdk.options.ValueProvider;\n+import org.apache.beam.sdk.util.ReleaseInfo;\n+import org.joda.time.Duration;\n \n /** Manages lifecycle of {@link DatabaseClient} and {@link Spanner} instances. */\n public class SpannerAccessor implements AutoCloseable {", "originalCommit": "59ff3cddea01a4f948b6dba28362c467e5b82fe8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fc0ac6a4b86b6d3082cf06edd9e9649e9e801381", "url": "https://github.com/apache/beam/commit/fc0ac6a4b86b6d3082cf06edd9e9649e9e801381", "message": "SpannerAccessor is package-private", "committedDate": "2020-02-13T19:16:41Z", "type": "commit"}, {"oid": "62e12c341655f29fb028370a7ffa69bfc9f36abe", "url": "https://github.com/apache/beam/commit/62e12c341655f29fb028370a7ffa69bfc9f36abe", "message": "Changes", "committedDate": "2020-02-13T19:26:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3MjMyMA==", "url": "https://github.com/apache/beam/pull/10765#discussion_r379072320", "bodyText": "Please file a JIRA and add a TODO for this comment linking the JIRA now that the upgrade has been done.\nYour free to pick up doing this TODO in a follow-up PR.", "author": "lukecwik", "createdAt": "2020-02-13T19:29:11Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/spanner/SpannerAccessor.java", "diffHunk": "@@ -40,21 +57,91 @@\n     this.batchClient = batchClient;\n   }\n \n-  public DatabaseClient getDatabaseClient() {\n+  static SpannerAccessor create(SpannerConfig spannerConfig) {\n+    SpannerOptions.Builder builder = SpannerOptions.newBuilder();\n+\n+    ValueProvider<Duration> commitDeadline = spannerConfig.getCommitDeadline();\n+    if (commitDeadline != null && commitDeadline.get().getMillis() > 0) {\n+\n+      // In Spanner API version 1.21 or above, we can set the deadline / total Timeout on an API\n+      // call using the following code:\n+      //\n+      // UnaryCallSettings.Builder commitSettings =", "originalCommit": "62e12c341655f29fb028370a7ffa69bfc9f36abe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3OTc0MQ==", "url": "https://github.com/apache/beam/pull/10765#discussion_r379079741", "bodyText": "Added JIRA ticket in CHANGES.", "author": "suztomo", "createdAt": "2020-02-13T19:43:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3MjMyMA=="}], "type": "inlineReview"}, {"oid": "cdb502cf76ac4a3fab10ad382fe3da562ac18dd4", "url": "https://github.com/apache/beam/commit/cdb502cf76ac4a3fab10ad382fe3da562ac18dd4", "message": "Added JIRA ticket", "committedDate": "2020-02-13T19:42:57Z", "type": "commit"}]}