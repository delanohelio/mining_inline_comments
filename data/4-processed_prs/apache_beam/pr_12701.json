{"pr_number": 12701, "pr_title": "[BEAM-10603] Gracefully shutdown the channel reader in the test_stream_impl", "pr_createdAt": "2020-08-27T18:48:31Z", "pr_url": "https://github.com/apache/beam/pull/12701", "timeline": [{"oid": "44bcb533bd791c919424471d295e8f8aefb3f5e7", "url": "https://github.com/apache/beam/commit/44bcb533bd791c919424471d295e8f8aefb3f5e7", "message": "Gracefully shutdown the channel reader in the test_stream_impl\n\nChange-Id: I5fac037a7dcc141ff9d0ff8058fa3de993626c15", "committedDate": "2020-08-27T18:43:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNTA2NQ==", "url": "https://github.com/apache/beam/pull/12701#discussion_r481315065", "bodyText": "how do we deal with other statuscodes? Shouldn't we still write the endofstream to the file for other errors?", "author": "pabloem", "createdAt": "2020-09-01T17:32:04Z", "path": "sdks/python/apache_beam/runners/direct/test_stream_impl.py", "diffHunk": "@@ -276,11 +276,20 @@ def _stream_events_from_rpc(endpoint, output_tags, coder, channel, is_alive):\n         output_ids=[str(tag) for tag in output_tags])\n \n     event_stream = stub.Events(event_request)\n-    for e in event_stream:\n-      channel.put(_TestStream.test_stream_payload_to_events(e, coder))\n-      if not is_alive():\n+    try:\n+      for e in event_stream:\n+        channel.put(_TestStream.test_stream_payload_to_events(e, coder))\n+        if not is_alive():\n+          return\n+    except grpc.RpcError as e:\n+      # This happens when the Python interpreter shuts down or whn in a\n+      # notebook environment when the kernel is interrupted.\n+      if e.code() == grpc.StatusCode.UNAVAILABLE:", "originalCommit": "44bcb533bd791c919424471d295e8f8aefb3f5e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzNTY5NQ==", "url": "https://github.com/apache/beam/pull/12701#discussion_r481335695", "bodyText": "So far I've only seen UNAVAILABLE as a non-error code. But looking at https://developers.google.com/maps-booking/reference/grpc-api/status_codes I think we can also add CANCELLED to not forward the exception.\nAt L290, we do have a finally clause which will run regardless, so the endofstream will always be written to the channel.", "author": "rohdesamuel", "createdAt": "2020-09-01T18:08:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNTA2NQ=="}], "type": "inlineReview"}, {"oid": "39242ca67609ec09fec9f2539ac843f0f11d70f2", "url": "https://github.com/apache/beam/commit/39242ca67609ec09fec9f2539ac843f0f11d70f2", "message": "Add CANCELLED to non error codes for test stream events from grpc\n\nChange-Id: Ic149d64301572201b29813f94bff704e9e7ca778", "committedDate": "2020-09-01T18:12:45Z", "type": "commit"}]}