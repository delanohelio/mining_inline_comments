{"pr_number": 12888, "pr_title": "[BEAM-10861]Adds PubSub Runner API encoding to Read/Write transforms", "pr_createdAt": "2020-09-21T14:26:16Z", "pr_url": "https://github.com/apache/beam/pull/12888", "timeline": [{"oid": "5f107e3c6ce54bb1829ad0a42d42fe53c4a633fd", "url": "https://github.com/apache/beam/commit/5f107e3c6ce54bb1829ad0a42d42fe53c4a633fd", "message": "Simplifies read proto", "committedDate": "2020-09-22T07:20:23Z", "type": "forcePushed"}, {"oid": "fac493f793ad94fbec6c22a0740f6ab34152331c", "url": "https://github.com/apache/beam/commit/fac493f793ad94fbec6c22a0740f6ab34152331c", "message": "Simplifies read proto", "committedDate": "2020-09-22T07:30:39Z", "type": "forcePushed"}, {"oid": "98defc31035bffbd1ded39505f85ab4b1af59fdf", "url": "https://github.com/apache/beam/commit/98defc31035bffbd1ded39505f85ab4b1af59fdf", "message": "Simplifies read proto", "committedDate": "2020-09-22T18:53:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk3MTY5MQ==", "url": "https://github.com/apache/beam/pull/12888#discussion_r492971691", "bodyText": "If with_attributes is always True, should we also remove with_attributes from _PubSubSink and  _PubSubSource? This change requires _PubSubSource only outputs PubSubMessage and _PubSubSink only accepts PubSubMessage.", "author": "boyuanzz", "createdAt": "2020-09-22T19:09:33Z", "path": "sdks/python/apache_beam/io/iobase.py", "diffHunk": "@@ -992,6 +1012,43 @@ def expand(self, pcoll):\n           'A sink must inherit iobase.Sink, iobase.NativeSink, '\n           'or be a PTransform. Received : %r' % self.sink)\n \n+  def _pubsub_write_payload(self):\n+    return beam_runner_api_pb2.PubSubWritePayload(\n+        topic=self.sink.full_topic,\n+        id_attribute=self.sink.id_label,\n+        timestamp_attribute=self.sink.timestamp_attribute)\n+\n+  def to_runner_api_parameter(self, context):\n+    # type: (PipelineContext) -> Tuple[str, Any]\n+    # Importing locally to prevent circular dependencies.\n+    from apache_beam.io.gcp.pubsub import _PubSubSink\n+    if isinstance(self.sink, _PubSubSink):\n+      payload = self._pubsub_write_payload()\n+      return (common_urns.composites.PUBSUB_WRITE.urn, payload)\n+    else:\n+      return super(Write, self).to_runner_api_parameter(context)\n+\n+  @staticmethod\n+  @ptransform.PTransform.register_urn(\n+      common_urns.composites.PUBSUB_WRITE.urn,\n+      beam_runner_api_pb2.PubSubWritePayload)\n+  def from_runner_api_parameter(ptransform, payload, unused_context):\n+    # type: (Any, Any, PipelineContext) -> Write\n+    if ptransform.spec.urn != common_urns.composites.PUBSUB_WRITE.urn:\n+      raise ValueError(\n+          'Write transform cannot be constructed for the given proto %r',\n+          ptransform)\n+\n+    # Importing locally to prevent circular dependencies.\n+    from apache_beam.io.gcp.pubsub import _PubSubSink\n+    sink = _PubSubSink(\n+        topic=payload.topic,\n+        id_label=payload.id_attribute,\n+        with_attributes=True,", "originalCommit": "98defc31035bffbd1ded39505f85ab4b1af59fdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk3NjUwNg==", "url": "https://github.com/apache/beam/pull/12888#discussion_r492976506", "bodyText": "So, I thought that's the simplification you are working on, right ? I'm fine with these properties being removed form source/sink if they are always true.\nThis change simply updates protos (and corresponding encoding in Read/Write transforms) to match your updates to PubSub native source/sink.", "author": "chamikaramj", "createdAt": "2020-09-22T19:18:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk3MTY5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAwMDU0Mw==", "url": "https://github.com/apache/beam/pull/12888#discussion_r493000543", "bodyText": "I only did partial cleanup to Write. We can have a followup PR to add more cleanup.\ncc: @lukecwik", "author": "boyuanzz", "createdAt": "2020-09-22T20:04:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk3MTY5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1MDQ4Mg==", "url": "https://github.com/apache/beam/pull/12888#discussion_r493650482", "bodyText": "Hmm, actually \"with_attributes=True\" is not really correct for current users since we do a runner API to and from round trip here: https://github.com/apache/beam/blob/master/sdks/python/apache_beam/runners/dataflow/dataflow_runner.py#L511\nI think the next best course of action is to revert #12760 from the release and get this in once Boyuan's source/sink simplifications are in.", "author": "chamikaramj", "createdAt": "2020-09-23T14:42:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk3MTY5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcyODY2NA==", "url": "https://github.com/apache/beam/pull/12888#discussion_r493728664", "bodyText": "I added 'with_attributes' property back. That should fix the failure here. We can later deprecate/remove it from the proto if we truly remove all it's usage including DirectRunner.", "author": "chamikaramj", "createdAt": "2020-09-23T16:28:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk3MTY5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MjcwOQ==", "url": "https://github.com/apache/beam/pull/12888#discussion_r493782709", "bodyText": "Could you explain more about why it also affects DirecrRunner? I would prefer checking in cleanup for Sink/Source first then checking in clean version of proto. What do you think?", "author": "boyuanzz", "createdAt": "2020-09-23T17:56:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk3MTY5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgwMDMxOA==", "url": "https://github.com/apache/beam/pull/12888#discussion_r493800318", "bodyText": "I think the crux of the matter is that runners (both Dataflow and Direct) depend on pipeline->proto->pipleline transformation to preserve state.\nAll runners depend on it here: https://github.com/apache/beam/blob/master/sdks/python/apache_beam/pipeline.py#L514\nAdditional Dataflow performs a second round trip here: https://github.com/apache/beam/blob/master/sdks/python/apache_beam/runners/dataflow/dataflow_runner.py#L511\nAdditionally DirectRunner refers to 'with_attributes' property here which is expected to be preserved in such a transformation: https://github.com/apache/beam/blob/master/sdks/python/apache_beam/runners/direct/direct_runner.py#L406\nMy proposal it to remove other Dataflow specific state from the proto and keep with_attributes which is needed to preserve state of the transforms today.", "author": "chamikaramj", "createdAt": "2020-09-23T18:26:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk3MTY5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg1MDk4NA==", "url": "https://github.com/apache/beam/pull/12888#discussion_r493850984", "bodyText": "After an offline discussion, we'll get the revert (#12914) in the unblock the 2.25.0 release and get this PR in after Boyuan's upcoming refactoring efforts.", "author": "chamikaramj", "createdAt": "2020-09-23T19:43:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk3MTY5MQ=="}], "type": "inlineReview"}, {"oid": "8a05b652989cfb27597dd5aa40ee520ca713f191", "url": "https://github.com/apache/beam/commit/8a05b652989cfb27597dd5aa40ee520ca713f191", "message": "Adds with_attributes property back", "committedDate": "2020-09-23T16:25:24Z", "type": "forcePushed"}, {"oid": "f4b9d2323ea095c2e1762b8b7b6a9109fcd1b26d", "url": "https://github.com/apache/beam/commit/f4b9d2323ea095c2e1762b8b7b6a9109fcd1b26d", "message": "Adds runner API encoding for PubSub read/write transforms", "committedDate": "2020-10-13T05:13:46Z", "type": "commit"}, {"oid": "f4b9d2323ea095c2e1762b8b7b6a9109fcd1b26d", "url": "https://github.com/apache/beam/commit/f4b9d2323ea095c2e1762b8b7b6a9109fcd1b26d", "message": "Adds runner API encoding for PubSub read/write transforms", "committedDate": "2020-10-13T05:13:46Z", "type": "forcePushed"}, {"oid": "980b065227a6410648c0130599f09b1746e52bfc", "url": "https://github.com/apache/beam/commit/980b065227a6410648c0130599f09b1746e52bfc", "message": "Fixes yapf", "committedDate": "2020-10-13T06:07:50Z", "type": "commit"}]}