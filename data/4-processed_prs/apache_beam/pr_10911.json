{"pr_number": 10911, "pr_title": "[BEAM-9339] Declare capabilities for Go SDK.", "pr_createdAt": "2020-02-20T01:21:40Z", "pr_url": "https://github.com/apache/beam/pull/10911", "timeline": [{"oid": "41bf2de3d20e7f99429a9fe628dbbbde2859042c", "url": "https://github.com/apache/beam/commit/41bf2de3d20e7f99429a9fe628dbbbde2859042c", "message": "Update go beam runner generated protos.", "committedDate": "2020-02-20T01:19:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY1ODMyNQ==", "url": "https://github.com/apache/beam/pull/10911#discussion_r381658325", "bodyText": "Accidentally duped.\nurnMultiCore?", "author": "lostluck", "createdAt": "2020-02-20T01:48:59Z", "path": "sdks/go/pkg/beam/runners/universal/universal.go", "diffHunk": "@@ -78,6 +78,20 @@ func Execute(ctx context.Context, p *beam.Pipeline) error {\n \treturn err\n }\n \n+const (\n+\turnLegacyProgressReporting = \"beam:protocol:progress_reporting:v0\"\n+\turnMultiCore               = \"beam:protocol:multi_core_bundle_processing:v1\"\n+)\n+\n+func goCapabilities() []string {\n+\tcapabilities := []string{\n+\t\turnLegacyProgressReporting,\n+\t\turnLegacyProgressReporting,", "originalCommit": "45effd744be7ee6d28e3e4e03b09b22d81ec304f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwNjE3OA==", "url": "https://github.com/apache/beam/pull/10911#discussion_r382206178", "bodyText": "Oh, yes. Done.", "author": "robertwb", "createdAt": "2020-02-20T19:20:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY1ODMyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY1OTc1NA==", "url": "https://github.com/apache/beam/pull/10911#discussion_r381659754", "bodyText": "You can return straight from the append and save a line.", "author": "lostluck", "createdAt": "2020-02-20T01:51:33Z", "path": "sdks/go/pkg/beam/runners/universal/universal.go", "diffHunk": "@@ -78,6 +78,20 @@ func Execute(ctx context.Context, p *beam.Pipeline) error {\n \treturn err\n }\n \n+const (\n+\turnLegacyProgressReporting = \"beam:protocol:progress_reporting:v0\"\n+\turnMultiCore               = \"beam:protocol:multi_core_bundle_processing:v1\"\n+)\n+\n+func goCapabilities() []string {\n+\tcapabilities := []string{\n+\t\turnLegacyProgressReporting,\n+\t\turnLegacyProgressReporting,\n+\t}\n+\tcapabilities = append(capabilities, graphx.KnownStandardCoders()...)\n+\treturn capabilities\n+}\n+", "originalCommit": "45effd744be7ee6d28e3e4e03b09b22d81ec304f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwNjYzNQ==", "url": "https://github.com/apache/beam/pull/10911#discussion_r382206635", "bodyText": "Done. I wasn't sure what the convention was--the semantics of append (may modify the first argument or return a new value) seemed odd to me.", "author": "robertwb", "createdAt": "2020-02-20T19:21:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY1OTc1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIzMDkyOQ==", "url": "https://github.com/apache/beam/pull/10911#discussion_r382230929", "bodyText": "Fair enough.\nTechnically append always returns a new \"slice\" but the backing array for the data may be reused. It's possible to have aliasing problems if done poorly, but that's not a risk here.\nIt mostly comes down to the difference between the used length, and the capacity of the slice. If there's enough capacity, it will simply mutate the backing slice.\nTo avoid the aliasing, as a rule, one should avoid using an slice one didn't allocate as the base for append.", "author": "lostluck", "createdAt": "2020-02-20T20:09:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY1OTc1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NjMwOQ==", "url": "https://github.com/apache/beam/pull/10911#discussion_r382286309", "bodyText": "Since this lives in the same package as the caller, we can make the function un-exported (lowercase k for knownStandardCoders() instead).\nIt's reasonably to have this function live here, due to locality with the coder URNs", "author": "lostluck", "createdAt": "2020-02-20T22:10:22Z", "path": "sdks/go/pkg/beam/core/runtime/graphx/coder.go", "diffHunk": "@@ -50,6 +50,22 @@ const (\n \turnCoGBKList   = \"beam:go:coder:cogbklist:v1\" // CoGBK representation. Not a coder.\n )\n \n+func KnownStandardCoders() []string {", "originalCommit": "b147a5900ad144eb8c3f7d73ccff90c6fa4deea7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NzAwNA==", "url": "https://github.com/apache/beam/pull/10911#discussion_r382287004", "bodyText": "I don't like that we're importing this package here. jobopts creates flags, which could be unexpected or unnecessary for certain runners.\nCould we instead just pass the environment urn in as a string? (the only thing we actually use from the package).", "author": "lostluck", "createdAt": "2020-02-20T22:11:58Z", "path": "sdks/go/pkg/beam/core/runtime/graphx/translate.go", "diffHunk": "@@ -26,6 +27,7 @@ import (\n \t\"github.com/apache/beam/sdks/go/pkg/beam/core/util/protox\"\n \t\"github.com/apache/beam/sdks/go/pkg/beam/internal/errors\"\n \tpb \"github.com/apache/beam/sdks/go/pkg/beam/model/pipeline_v1\"\n+\t\"github.com/apache/beam/sdks/go/pkg/beam/options/jobopts\"", "originalCommit": "b147a5900ad144eb8c3f7d73ccff90c6fa4deea7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxMTY5MA==", "url": "https://github.com/apache/beam/pull/10911#discussion_r382311690", "bodyText": "OK, done.", "author": "robertwb", "createdAt": "2020-02-20T23:14:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4NzAwNA=="}], "type": "inlineReview"}, {"oid": "5f46b678e001d55621e5de719cf782160b1ba67d", "url": "https://github.com/apache/beam/commit/5f46b678e001d55621e5de719cf782160b1ba67d", "message": "[BEAM-9339] Declare capabilities for Go SDK.", "committedDate": "2020-02-21T00:03:08Z", "type": "commit"}, {"oid": "5f46b678e001d55621e5de719cf782160b1ba67d", "url": "https://github.com/apache/beam/commit/5f46b678e001d55621e5de719cf782160b1ba67d", "message": "[BEAM-9339] Declare capabilities for Go SDK.", "committedDate": "2020-02-21T00:03:08Z", "type": "forcePushed"}]}