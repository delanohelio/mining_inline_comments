{"pr_number": 11598, "pr_title": "[BEAM-9877] Estimate sizes of group-by-key values behind a key lazily only.", "pr_createdAt": "2020-05-04T03:22:55Z", "pr_url": "https://github.com/apache/beam/pull/11598", "timeline": [{"oid": "573289a8a8bcf19db9ff489bbd804eb0e3c02379", "url": "https://github.com/apache/beam/commit/573289a8a8bcf19db9ff489bbd804eb0e3c02379", "message": "Do not attempt to estimate sizes of group-by-key values behind a key; such iterables can have enormous sizes and size estimates would cause reading the data multiple times.  Furthermore, the size of the entire group-by-key collection is already known precisely at read time (and encoded into corresponding counters), which means the estimation is in fact not only expensive but redundant and unnecessary.", "committedDate": "2020-05-04T02:56:40Z", "type": "commit"}, {"oid": "0cd43d16a907719048f722f16c7b37c846912dc5", "url": "https://github.com/apache/beam/commit/0cd43d16a907719048f722f16c7b37c846912dc5", "message": "remove comments", "committedDate": "2020-05-04T15:23:22Z", "type": "commit"}, {"oid": "497cd0302ddf04fefd83363d6cf6192b41fc937b", "url": "https://github.com/apache/beam/commit/497cd0302ddf04fefd83363d6cf6192b41fc937b", "message": "Make BatchGroupAlsoByWindowViaIteratorsFn extend the ElementByteSizeObservableIterable so that size estimation is lazy", "committedDate": "2020-05-04T17:17:51Z", "type": "commit"}, {"oid": "33091d223c5ea6811d97d919ea48251315ed6432", "url": "https://github.com/apache/beam/commit/33091d223c5ea6811d97d919ea48251315ed6432", "message": "Make BatchGroupAlsoByWindowViaIteratorsFn extend the ElementByteSizeObservableIterable so that size estimation is lazy", "committedDate": "2020-05-04T17:19:00Z", "type": "commit"}, {"oid": "62e4df74ff76f308353bf3049c097a3a3d288bcd", "url": "https://github.com/apache/beam/commit/62e4df74ff76f308353bf3049c097a3a3d288bcd", "message": "revert changes to grouping shuffle reader and iterable like coder", "committedDate": "2020-05-04T17:23:26Z", "type": "commit"}, {"oid": "fc180dd97b4311df3db20186dd747aeff1325b2a", "url": "https://github.com/apache/beam/commit/fc180dd97b4311df3db20186dd747aeff1325b2a", "message": "fix merge conflicts", "committedDate": "2020-05-04T17:26:53Z", "type": "commit"}, {"oid": "dd9ab00aab02e20f6b19b57436b815fc372acee9", "url": "https://github.com/apache/beam/commit/dd9ab00aab02e20f6b19b57436b815fc372acee9", "message": "remove obsolete class", "committedDate": "2020-05-04T17:28:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY0OTE3NA==", "url": "https://github.com/apache/beam/pull/11598#discussion_r419649174", "bodyText": "It's odd that ElementByteSizeObservableIterable::iterator adds observers within the method body. I assume this is for historic reasons, since it doesn't seem to do anything now, and the comment documenting references a setObserver method that doesn't exist. Anyway, your change looks fine. But we should consider cleaning this up.\n\n  \n    \n      beam/sdks/java/core/src/main/java/org/apache/beam/sdk/util/common/ElementByteSizeObservableIterable.java\n    \n    \n        Lines 49 to 61\n      in\n      6453e85\n    \n    \n    \n    \n\n        \n          \n             /** \n        \n\n        \n          \n              * Returns a new iterator for this iterable. If an observer was set in a previous call to \n        \n\n        \n          \n              * setObserver(), it will observe the iterator returned. \n        \n\n        \n          \n              */ \n        \n\n        \n          \n             @Override \n        \n\n        \n          \n             public InputT iterator() { \n        \n\n        \n          \n               InputT iterator = createIterator(); \n        \n\n        \n          \n               for (Observer observer : observers) { \n        \n\n        \n          \n                 iterator.addObserver(observer); \n        \n\n        \n          \n               } \n        \n\n        \n          \n               observers.clear(); \n        \n\n        \n          \n               return iterator; \n        \n\n        \n          \n             }", "author": "ibzib", "createdAt": "2020-05-04T18:44:41Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/util/BatchGroupAlsoByWindowViaIteratorsFn.java", "diffHunk": "@@ -165,12 +168,17 @@ public WindowReiterable(\n     }\n \n     @Override\n-    public Reiterator<V> iterator() {\n+    public WindowReiterator<V> iterator() {", "originalCommit": "dd9ab00aab02e20f6b19b57436b815fc372acee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY1MjIwMA==", "url": "https://github.com/apache/beam/pull/11598#discussion_r419652200", "bodyText": "I filed BEAM-9878 as a wish item.", "author": "ibzib", "createdAt": "2020-05-04T18:49:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY0OTE3NA=="}], "type": "inlineReview"}]}