{"pr_number": 10701, "pr_title": "[BEAM-9188] CassandraIO split performance improvement - cache size of the table", "pr_createdAt": "2020-01-28T15:24:37Z", "pr_url": "https://github.com/apache/beam/pull/10701", "timeline": [{"oid": "f19b8cb3455146a8c1b44829cab8d0a0c5db3bd7", "url": "https://github.com/apache/beam/commit/f19b8cb3455146a8c1b44829cab8d0a0c5db3bd7", "message": "[BEAM-9188] CassandraIO split performance improvement - cache size of table\n\nSplitting CassandraIO source into multiple sources works fast as it uses one connection pool to Cassandra cluster but after that dataflow.worker.WorkerCustomSources is calling CassandraSource.getEstimatedSizeBytes for each source which setups and tears down connection to Cassandra cluster to calculate same size of table.", "committedDate": "2020-01-28T15:19:52Z", "type": "commit"}, {"oid": "eaf347cd6e2ff0e1f0e870fb95f6323405f12e49", "url": "https://github.com/apache/beam/commit/eaf347cd6e2ff0e1f0e870fb95f6323405f12e49", "message": "spotless fixes", "committedDate": "2020-01-28T20:54:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5MjE2Mg==", "url": "https://github.com/apache/beam/pull/10701#discussion_r372092162", "bodyText": "Can we also cache the size here in case getEstimateSizeBytes is called more than once?", "author": "boyuanzz", "createdAt": "2020-01-28T22:22:25Z", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -508,26 +518,30 @@ private static long getNumSplits(\n \n     @Override\n     public long getEstimatedSizeBytes(PipelineOptions pipelineOptions) {\n-      try (Cluster cluster =\n-          getCluster(\n-              spec.hosts(),\n-              spec.port(),\n-              spec.username(),\n-              spec.password(),\n-              spec.localDc(),\n-              spec.consistencyLevel())) {\n-        if (isMurmur3Partitioner(cluster)) {\n-          try {\n-            List<TokenRange> tokenRanges =\n-                getTokenRanges(cluster, spec.keyspace().get(), spec.table().get());\n-            return getEstimatedSizeBytesFromTokenRanges(tokenRanges);\n-          } catch (Exception e) {\n-            LOG.warn(\"Can't estimate the size\", e);\n+      if (estimatedSize != null) {\n+        return estimatedSize;\n+      } else {\n+        try (Cluster cluster =\n+            getCluster(\n+                spec.hosts(),\n+                spec.port(),\n+                spec.username(),\n+                spec.password(),\n+                spec.localDc(),\n+                spec.consistencyLevel())) {\n+          if (isMurmur3Partitioner(cluster)) {\n+            try {\n+              List<TokenRange> tokenRanges =\n+                  getTokenRanges(cluster, spec.keyspace().get(), spec.table().get());\n+              return getEstimatedSizeBytesFromTokenRanges(tokenRanges);", "originalCommit": "eaf347cd6e2ff0e1f0e870fb95f6323405f12e49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMxNjE0OQ==", "url": "https://github.com/apache/beam/pull/10701#discussion_r372316149", "bodyText": "done", "author": "stankiewicz", "createdAt": "2020-01-29T10:58:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5MjE2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5MzU5Mg==", "url": "https://github.com/apache/beam/pull/10701#discussion_r372093592", "bodyText": "Could you please add some comments about this field? Like, why and when the size is cached.", "author": "boyuanzz", "createdAt": "2020-01-28T22:26:02Z", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -375,9 +375,15 @@ private CassandraIO() {}\n   static class CassandraSource<T> extends BoundedSource<T> {\n     final Read<T> spec;\n     final List<String> splitQueries;\n+    final Long estimatedSize;", "originalCommit": "eaf347cd6e2ff0e1f0e870fb95f6323405f12e49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMxNTg0MQ==", "url": "https://github.com/apache/beam/pull/10701#discussion_r372315841", "bodyText": "done.", "author": "stankiewicz", "createdAt": "2020-01-29T10:57:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5MzU5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEwNjQ3OQ==", "url": "https://github.com/apache/beam/pull/10701#discussion_r372106479", "bodyText": "Just want to make sure that I understand how Cassandra does initial split. Lets say that we are going to split A into A_1 and A_2, so we expect that : size of (A) == size of (A_1) == size of(A_2) because they share the same spec. Is that correct?", "author": "boyuanzz", "createdAt": "2020-01-28T22:59:24Z", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -450,6 +456,10 @@ private static String buildQuery(Read spec) {\n               .map(ColumnMetadata::getName)\n               .collect(Collectors.joining(\",\"));\n \n+      List<TokenRange> tokenRanges =\n+          getTokenRanges(cluster, spec.keyspace().get(), spec.table().get());\n+      final long estimatedSize = getEstimatedSizeBytesFromTokenRanges(tokenRanges);", "originalCommit": "eaf347cd6e2ff0e1f0e870fb95f6323405f12e49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIxNTM0NA==", "url": "https://github.com/apache/beam/pull/10701#discussion_r372215344", "bodyText": "That's good point. Based on past implementation I assumed very bad estimation but I didn't want to change this logic.\nWhat I could try to do is based on root estimates (SA) and n splits calculate SA_1 = SA/n etc. Generally this size estimates is also broken from beginning as CassandraIO can query 1 column instead of all or have filters and this estimation doesn't take it into account. It supports only size(t) where query is select * from table t. In A_1,A_2.. it's difficult to calculate size as ranges are concatenated to underlying queries.", "author": "stankiewicz", "createdAt": "2020-01-29T06:59:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEwNjQ3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMxNTk3Nw==", "url": "https://github.com/apache/beam/pull/10701#discussion_r372315977", "bodyText": "fixed this logic.", "author": "stankiewicz", "createdAt": "2020-01-29T10:57:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEwNjQ3OQ=="}], "type": "inlineReview"}, {"oid": "9fe2cec8cb6592bfd4a46517a080638776a8ccef", "url": "https://github.com/apache/beam/commit/9fe2cec8cb6592bfd4a46517a080638776a8ccef", "message": "comments and tests", "committedDate": "2020-01-29T10:50:13Z", "type": "commit"}, {"oid": "47850319f798a6533f9402420a8ae24424218160", "url": "https://github.com/apache/beam/commit/47850319f798a6533f9402420a8ae24424218160", "message": "spottless", "committedDate": "2020-01-31T08:57:50Z", "type": "commit"}]}