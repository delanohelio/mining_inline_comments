{"pr_number": 13429, "pr_title": "Add start_times to MonitoringInfos and populate them in the python SDK", "pr_createdAt": "2020-11-25T20:25:25Z", "pr_url": "https://github.com/apache/beam/pull/13429", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY1OTc1Mg==", "url": "https://github.com/apache/beam/pull/13429#discussion_r530659752", "bodyText": "Could simplify this a bit by putting the start time logic in MetricCell.to_runner_api_monitoring_info and having that call a to_runner_api_monitoring_info_impl on each of the subclasses", "author": "dpmills", "createdAt": "2020-11-25T21:50:41Z", "path": "sdks/python/apache_beam/metrics/cells.py", "diffHunk": "@@ -77,6 +79,13 @@ def reset(self):\n     # type: () -> None\n     raise NotImplementedError\n \n+  @property\n+  def start_time(self):", "originalCommit": "9f4f1ea96347d1016794cd2b5c132775270f050c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgyMzQ5NA==", "url": "https://github.com/apache/beam/pull/13429#discussion_r533823494", "bodyText": "I tried doing this, but couldn't make it simpler. I was going to make the base class return an empty MonitoringInfo except for setting the start time, then updating it. But since the implementations in the subcalsses are calling into functions which return a whole monitoring_info (rather than setting fields on one passed in), I found what I could produce wasn't actually cleaner.\ni.e. calling\nmi = monitoring_infos.int64_user_counter(\nname.namespace,\nname.name,\nself.get_cumulative(),\nptransform=transform_id)\nIf you had something else in mind, please provide a snippet, and ill see what i can do", "author": "ajamato", "createdAt": "2020-12-02T00:57:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY1OTc1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg0NDEyNw==", "url": "https://github.com/apache/beam/pull/13429#discussion_r533844127", "bodyText": "Something like this:\nclass MetricCell:\ndef to_runner_api_monitoring_info(self, name, transform_id):\nmi = self.to_runner_api_monitoring_info_impl(name, transform_id)\nmi.start_time.FromDatetime(self.start_time) # or just put the start_time code inline here\nreturn mi\nThen, rename all the to_runner_api_monitoring_info methods in the subclasses to to_runner_api_monitoring_info_impl", "author": "dpmills", "createdAt": "2020-12-02T01:56:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY1OTc1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2MDg3MA==", "url": "https://github.com/apache/beam/pull/13429#discussion_r530660870", "bodyText": "Maybe \"This indicates the start of the time range over which this value was measured\"?", "author": "dpmills", "createdAt": "2020-11-25T21:53:47Z", "path": "model/pipeline/src/main/proto/metrics.proto", "diffHunk": "@@ -401,6 +402,17 @@ message MonitoringInfo {\n   // as Stackdriver will be able to aggregate the metrics using a subset of the\n   // provided labels\n   map<string, string> labels = 4;\n+\n+  // This indicates when the first value was populated by the SDK Harness.", "originalCommit": "9f4f1ea96347d1016794cd2b5c132775270f050c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgyMDI5OA==", "url": "https://github.com/apache/beam/pull/13429#discussion_r533820298", "bodyText": "Done", "author": "ajamato", "createdAt": "2020-12-02T00:48:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2MDg3MA=="}], "type": "inlineReview"}, {"oid": "96fdaba4e6b16807887d659569bf2800d939a5a4", "url": "https://github.com/apache/beam/commit/96fdaba4e6b16807887d659569bf2800d939a5a4", "message": "Add start_times to MonitoringInfos and populate them in the python SDK", "committedDate": "2020-12-02T01:24:34Z", "type": "forcePushed"}, {"oid": "8009b5a939578cfb00909c4797a0490089f4289a", "url": "https://github.com/apache/beam/commit/8009b5a939578cfb00909c4797a0490089f4289a", "message": "Add start_times to MonitoringInfos and populate them in the python SDK", "committedDate": "2020-12-02T01:26:48Z", "type": "forcePushed"}, {"oid": "53d8847f9263f972d981c2a4806ccb280f965476", "url": "https://github.com/apache/beam/commit/53d8847f9263f972d981c2a4806ccb280f965476", "message": "Add start_times to MonitoringInfos and populate them in the python SDK", "committedDate": "2020-12-02T02:12:17Z", "type": "forcePushed"}, {"oid": "c2364c1d92acc8a10756a336eb4a88434fec3640", "url": "https://github.com/apache/beam/commit/c2364c1d92acc8a10756a336eb4a88434fec3640", "message": "Add start_times to MonitoringInfos and populate them in the python SDK", "committedDate": "2020-12-02T02:16:00Z", "type": "forcePushed"}, {"oid": "6c25bc082e809246989ca8a459c36c5b4d247f20", "url": "https://github.com/apache/beam/commit/6c25bc082e809246989ca8a459c36c5b4d247f20", "message": "Add start_times to MonitoringInfos and populate them in the python SDK", "committedDate": "2020-12-02T02:19:55Z", "type": "commit"}, {"oid": "6c25bc082e809246989ca8a459c36c5b4d247f20", "url": "https://github.com/apache/beam/commit/6c25bc082e809246989ca8a459c36c5b4d247f20", "message": "Add start_times to MonitoringInfos and populate them in the python SDK", "committedDate": "2020-12-02T02:19:55Z", "type": "forcePushed"}]}