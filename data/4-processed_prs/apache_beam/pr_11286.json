{"pr_number": 11286, "pr_title": "[BEAM-4374] Short IDs for the Python SDK", "pr_createdAt": "2020-04-01T23:50:27Z", "pr_url": "https://github.com/apache/beam/pull/11286", "timeline": [{"oid": "11e59e22d56debc4eb857dd009db46ce41f209d5", "url": "https://github.com/apache/beam/commit/11e59e22d56debc4eb857dd009db46ce41f209d5", "message": "Add basic short id implementation", "committedDate": "2020-04-01T23:46:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2MjA1Mw==", "url": "https://github.com/apache/beam/pull/11286#discussion_r402462053", "bodyText": "I think you missed adding your monitoring_infos changes.", "author": "lukecwik", "createdAt": "2020-04-02T16:51:36Z", "path": "sdks/python/apache_beam/runners/worker/sdk_worker.py", "diffHunk": "@@ -76,6 +79,50 @@\n DEFAULT_BUNDLE_PROCESSOR_CACHE_SHUTDOWN_THRESHOLD_S = 60\n \n \n+class ShortIdCache(object):\n+  \"\"\" Cache for MonitoringInfo \"short ids\"\n+  \"\"\"\n+  def __init__(self):\n+    self._lock = threading.Lock()\n+    self._lastShortId = 0\n+    self._infoKeyToShortId = {}  # type: Dict[FrozenSet, str]\n+    self._shortIdToInfo = {}  # type: Dict[str, metrics_pb2.MonitoringInfo]\n+\n+  def getShortId(self, monitoring_info):\n+    \"\"\" Returns the assigned shortId for a given MonitoringInfo, assigns one if\n+    not assigned already.\n+    \"\"\"\n+    # type: (metrics_pb2.MonitoringInfo) -> str\n+    with self._lock:\n+      key = monitoring_infos.to_key(monitoring_info)", "originalCommit": "11e59e22d56debc4eb857dd009db46ce41f209d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2NjYyMQ==", "url": "https://github.com/apache/beam/pull/11286#discussion_r402466621", "bodyText": "This function exists already: https://github.com/apache/beam/blob/master/sdks/python/apache_beam/metrics/monitoring_infos.py#L329-L338", "author": "TheNeuralBit", "createdAt": "2020-04-02T16:58:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2MjA1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxNTMyNA==", "url": "https://github.com/apache/beam/pull/11286#discussion_r402515324", "bodyText": "yup and I was editing that code a week ago", "author": "lukecwik", "createdAt": "2020-04-02T18:12:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2MjA1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2MzIxMw==", "url": "https://github.com/apache/beam/pull/11286#discussion_r402463213", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                with self._lock:\n          \n          \n            \n                  key = monitoring_infos.to_key(monitoring_info)\n          \n          \n            \n                key = monitoring_infos.to_key(monitoring_info)\n          \n          \n            \n                with self._lock:", "author": "lukecwik", "createdAt": "2020-04-02T16:53:25Z", "path": "sdks/python/apache_beam/runners/worker/sdk_worker.py", "diffHunk": "@@ -76,6 +79,50 @@\n DEFAULT_BUNDLE_PROCESSOR_CACHE_SHUTDOWN_THRESHOLD_S = 60\n \n \n+class ShortIdCache(object):\n+  \"\"\" Cache for MonitoringInfo \"short ids\"\n+  \"\"\"\n+  def __init__(self):\n+    self._lock = threading.Lock()\n+    self._lastShortId = 0\n+    self._infoKeyToShortId = {}  # type: Dict[FrozenSet, str]\n+    self._shortIdToInfo = {}  # type: Dict[str, metrics_pb2.MonitoringInfo]\n+\n+  def getShortId(self, monitoring_info):\n+    \"\"\" Returns the assigned shortId for a given MonitoringInfo, assigns one if\n+    not assigned already.\n+    \"\"\"\n+    # type: (metrics_pb2.MonitoringInfo) -> str\n+    with self._lock:\n+      key = monitoring_infos.to_key(monitoring_info)", "originalCommit": "11e59e22d56debc4eb857dd009db46ce41f209d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "09c6032538d42c84e350ec06ad0fe1f7aac31d36", "url": "https://github.com/apache/beam/commit/09c6032538d42c84e350ec06ad0fe1f7aac31d36", "message": "Update sdks/python/apache_beam/runners/worker/sdk_worker.py\n\nCo-Authored-By: Lukasz Cwik <lcwik@google.com>", "committedDate": "2020-04-02T16:58:59Z", "type": "commit"}, {"oid": "06df4b4b8e99e7476eb918806df8cfef65d5a0aa", "url": "https://github.com/apache/beam/commit/06df4b4b8e99e7476eb918806df8cfef65d5a0aa", "message": "add test", "committedDate": "2020-04-02T20:14:37Z", "type": "commit"}, {"oid": "f89a1a4680b6a522abe6dfb75467818e9b8121d5", "url": "https://github.com/apache/beam/commit/f89a1a4680b6a522abe6dfb75467818e9b8121d5", "message": "yapf", "committedDate": "2020-04-02T21:23:47Z", "type": "commit"}, {"oid": "a3ae7d8dc112462079a4815893781d0da16f33ba", "url": "https://github.com/apache/beam/commit/a3ae7d8dc112462079a4815893781d0da16f33ba", "message": "lint", "committedDate": "2020-04-02T22:08:44Z", "type": "commit"}]}