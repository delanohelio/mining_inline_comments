{"pr_number": 13264, "pr_title": "[BEAM-9547] Add basic support for `DataFrame.{eval,query}`", "pr_createdAt": "2020-11-04T23:30:24Z", "pr_url": "https://github.com/apache/beam/pull/13264", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5Mjc1NQ==", "url": "https://github.com/apache/beam/pull/13264#discussion_r517692755", "bodyText": "Currently if the user specifies a local variable in expr with @<local> this will fail at construction time (when generating the proxy), but the error message isn't helpful, it just indicates <local> doesn't exist.", "author": "TheNeuralBit", "createdAt": "2020-11-04T23:32:15Z", "path": "sdks/python/apache_beam/dataframe/frames.py", "diffHunk": "@@ -1069,6 +1069,23 @@ def dropna(self, axis, **kwargs):\n             preserves_partition_by=partitionings.Singleton(),\n             requires_partition_by=requires_partition_by))\n \n+\n+  # TODO(BEAM-XXXX): support @<local> in eval and query. Currently fails in\n+  # proxy generation", "originalCommit": "8eed466263bcc6fb2894687ba126424a4367f132", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5NzA5MQ==", "url": "https://github.com/apache/beam/pull/13264#discussion_r517697091", "bodyText": "(I'll update the XXX with a jira number before merging if this gets approved, I just didn't want to create it prematurely)", "author": "TheNeuralBit", "createdAt": "2020-11-04T23:44:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5Mjc1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU2NzIxMQ==", "url": "https://github.com/apache/beam/pull/13264#discussion_r518567211", "bodyText": "Go ahead and create the jira. Can we give a better message if @ is in the expression?", "author": "robertwb", "createdAt": "2020-11-06T07:29:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5Mjc1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk3MDg0NQ==", "url": "https://github.com/apache/beam/pull/13264#discussion_r518970845", "bodyText": "Yeah I'll add a regex to check for @<py identifier> and point to the jira.", "author": "TheNeuralBit", "createdAt": "2020-11-06T19:53:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5Mjc1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4MDY3OA==", "url": "https://github.com/apache/beam/pull/13264#discussion_r519080678", "bodyText": "Done.", "author": "TheNeuralBit", "createdAt": "2020-11-07T01:57:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY5Mjc1NQ=="}], "type": "inlineReview"}, {"oid": "8c60b16bfe728930e31abf6984ddaa56ac5eaa8f", "url": "https://github.com/apache/beam/commit/8c60b16bfe728930e31abf6984ddaa56ac5eaa8f", "message": "Add basic Dataframe eval/query support", "committedDate": "2020-11-04T23:32:49Z", "type": "commit"}, {"oid": "cb6a5bb4bbc6745c3deb6027d5e734de0ab2501b", "url": "https://github.com/apache/beam/commit/cb6a5bb4bbc6745c3deb6027d5e734de0ab2501b", "message": "Pass through *args in maybe_inplace", "committedDate": "2020-11-04T23:33:54Z", "type": "commit"}, {"oid": "cb6a5bb4bbc6745c3deb6027d5e734de0ab2501b", "url": "https://github.com/apache/beam/commit/cb6a5bb4bbc6745c3deb6027d5e734de0ab2501b", "message": "Pass through *args in maybe_inplace", "committedDate": "2020-11-04T23:33:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI1OTA3Mw==", "url": "https://github.com/apache/beam/pull/13264#discussion_r518259073", "bodyText": "This is dangerous, as it won't catch if inplace was passed as a non-keyword argument.", "author": "robertwb", "createdAt": "2020-11-05T18:07:23Z", "path": "sdks/python/apache_beam/dataframe/frame_base.py", "diffHunk": "@@ -318,8 +318,8 @@ def wrapper(self, *args, **kwargs):\n \n def maybe_inplace(func):\n   @functools.wraps(func)\n-  def wrapper(self, inplace=False, **kwargs):\n-    result = func(self, **kwargs)\n+  def wrapper(self, *args, inplace=False, **kwargs):", "originalCommit": "cb6a5bb4bbc6745c3deb6027d5e734de0ab2501b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk3MDQwMA==", "url": "https://github.com/apache/beam/pull/13264#discussion_r518970400", "bodyText": "That could happen only with methods where the first kwarg is inplace right? I wouldn't think there's many of those but I suppose there could be.\nSo what's the right thing to do here? We could use inspect to find inplace in the args/kwargs of func and handle it correctly. Or more simply just never use this in methods where we need to pass through args.", "author": "TheNeuralBit", "createdAt": "2020-11-06T19:52:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI1OTA3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODk4NTY3NA==", "url": "https://github.com/apache/beam/pull/13264#discussion_r518985674", "bodyText": "We shouldn't use this in places where we may need to pass args. (Actually, if we're just passing a*args, we can't generally detect inplace safely at all).", "author": "robertwb", "createdAt": "2020-11-06T20:20:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI1OTA3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA3MTM3Mg==", "url": "https://github.com/apache/beam/pull/13264#discussion_r519071372", "bodyText": "If we passed the base type as in populate_defaults we could inspect it's method. Seems like a lot of trouble.. but I'm just worried that there's some edge case where we're dropping non-keyword args, and it would be great to catch that possibility at import time.", "author": "TheNeuralBit", "createdAt": "2020-11-07T00:50:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI1OTA3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4MDc4MA==", "url": "https://github.com/apache/beam/pull/13264#discussion_r519080780", "bodyText": "I removed this change and instead handle inplace in the new methods, PTAL", "author": "TheNeuralBit", "createdAt": "2020-11-07T01:58:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI1OTA3Mw=="}], "type": "inlineReview"}, {"oid": "30a2f71a09d216c863fbd6a9dfab881ebe9cd7e5", "url": "https://github.com/apache/beam/commit/30a2f71a09d216c863fbd6a9dfab881ebe9cd7e5", "message": "Add explicit check for @<local>", "committedDate": "2020-11-07T01:47:24Z", "type": "commit"}, {"oid": "51b9bc1da95dc17803ce35982b557fe7168a4f21", "url": "https://github.com/apache/beam/commit/51b9bc1da95dc17803ce35982b557fe7168a4f21", "message": "Revert \"Pass through *args in maybe_inplace\"\n\nThis reverts commit cb6a5bb4bbc6745c3deb6027d5e734de0ab2501b.", "committedDate": "2020-11-07T01:48:26Z", "type": "commit"}, {"oid": "8c05050bd942081c80756494d3c1f2438583ce6c", "url": "https://github.com/apache/beam/commit/8c05050bd942081c80756494d3c1f2438583ce6c", "message": "Fix unsupported kwargs check", "committedDate": "2020-11-09T20:41:05Z", "type": "commit"}, {"oid": "dcb5cffe7e59823c87475bbb1708ab2fb1397a76", "url": "https://github.com/apache/beam/commit/dcb5cffe7e59823c87475bbb1708ab2fb1397a76", "message": "lint", "committedDate": "2020-11-09T20:41:21Z", "type": "commit"}]}