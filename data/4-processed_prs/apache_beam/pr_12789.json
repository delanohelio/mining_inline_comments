{"pr_number": 12789, "pr_title": "Support updating from a job in DRAINING state", "pr_createdAt": "2020-09-08T23:13:13Z", "pr_url": "https://github.com/apache/beam/pull/12789", "timeline": [{"oid": "2a20847c1e4b2303308c91658524735575248b46", "url": "https://github.com/apache/beam/commit/2a20847c1e4b2303308c91658524735575248b46", "message": "Support updating from a job in DRAINING state", "committedDate": "2020-09-08T23:12:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1MTE4NA==", "url": "https://github.com/apache/beam/pull/12789#discussion_r485251184", "bodyText": "Could you add a pydoc comment to this function explaining that this is used for updates and it will return a job id only for running/draining pipelines?\nShould we change the function name, this seems to be a internal only function?", "author": "aaltay", "createdAt": "2020-09-08T23:32:59Z", "path": "sdks/python/apache_beam/runners/dataflow/internal/apiclient.py", "diffHunk": "@@ -923,8 +923,9 @@ def job_id_for_name(self, job_name):\n           pageToken=token)\n       response = self._client.projects_locations_jobs.List(request)\n       for job in response.jobs:\n-        if (job.name == job_name and job.currentState ==\n-            dataflow.Job.CurrentStateValueValuesEnum.JOB_STATE_RUNNING):\n+        if (job.name == job_name and job.currentState in", "originalCommit": "2a20847c1e4b2303308c91658524735575248b46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1NzIzMQ==", "url": "https://github.com/apache/beam/pull/12789#discussion_r485257231", "bodyText": "Since this is only used by update, I'd support renaming the method to include 'running'.", "author": "edre", "createdAt": "2020-09-08T23:53:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1MTE4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI3MTI4Mg==", "url": "https://github.com/apache/beam/pull/12789#discussion_r485271282", "bodyText": "On a second thought, I do not know if we will break some users if we rename this. I do not think so but it will still a breaking change.", "author": "aaltay", "createdAt": "2020-09-09T00:43:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1MTE4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1MTMyNA==", "url": "https://github.com/apache/beam/pull/12789#discussion_r485251324", "bodyText": "Add a test to apiclient_test so that this behavior is not reverted in the future?", "author": "aaltay", "createdAt": "2020-09-08T23:33:28Z", "path": "sdks/python/apache_beam/runners/dataflow/internal/apiclient.py", "diffHunk": "@@ -923,8 +923,9 @@ def job_id_for_name(self, job_name):\n           pageToken=token)\n       response = self._client.projects_locations_jobs.List(request)\n       for job in response.jobs:\n-        if (job.name == job_name and job.currentState ==\n-            dataflow.Job.CurrentStateValueValuesEnum.JOB_STATE_RUNNING):\n+        if (job.name == job_name and job.currentState in\n+            [dataflow.Job.CurrentStateValueValuesEnum.JOB_STATE_RUNNING,\n+             dataflow.Job.CurrentStateValueValuesEnum.JOB_STATE_DRAINING]):", "originalCommit": "2a20847c1e4b2303308c91658524735575248b46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1NzI0Mg==", "url": "https://github.com/apache/beam/pull/12789#discussion_r485257242", "bodyText": "I created this change with the github single-file in-browser editor, and now I don't think I can amend it with another file change. Can someone with the infrastructure already set up take this over?", "author": "edre", "createdAt": "2020-09-08T23:53:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1MTMyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI3MTY4Ng==", "url": "https://github.com/apache/beam/pull/12789#discussion_r485271686", "bodyText": "Let's get this change in, in that case. We can add tests after. Github's UI is limited to single file edits.", "author": "aaltay", "createdAt": "2020-09-09T00:45:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1MTMyNA=="}], "type": "inlineReview"}]}