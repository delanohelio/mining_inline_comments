{"pr_number": 11050, "pr_title": "[BEAM-8335] Implemented Capture Size limitation", "pr_createdAt": "2020-03-05T00:30:21Z", "pr_url": "https://github.com/apache/beam/pull/11050", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NTI0OQ==", "url": "https://github.com/apache/beam/pull/11050#discussion_r388045249", "bodyText": "Maybe log here?", "author": "aaltay", "createdAt": "2020-03-05T02:20:58Z", "path": "sdks/python/apache_beam/runners/interactive/caching/streaming_cache.py", "diffHunk": "@@ -63,6 +63,14 @@ def path(self):\n     \"\"\"Returns the path the sink leads to.\"\"\"\n     return self._path\n \n+  @property\n+  def size_in_bytes(self):\n+    \"\"\"Returns the space usage in bytes of the sink.\"\"\"\n+    try:\n+      return os.stat(self._path).st_size\n+    except:\n+      return 0", "originalCommit": "a6d9e2382eeea148b3f667726f8e8e8933a7196c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4Mzg3Mw==", "url": "https://github.com/apache/beam/pull/11050#discussion_r388483873", "bodyText": "Could add a debug level logging.", "author": "KevinGG", "createdAt": "2020-03-05T18:35:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NTI0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NTI3OQ==", "url": "https://github.com/apache/beam/pull/11050#discussion_r388045279", "bodyText": "Does this work in all OSes?", "author": "aaltay", "createdAt": "2020-03-05T02:21:07Z", "path": "sdks/python/apache_beam/runners/interactive/caching/streaming_cache.py", "diffHunk": "@@ -63,6 +63,14 @@ def path(self):\n     \"\"\"Returns the path the sink leads to.\"\"\"\n     return self._path\n \n+  @property\n+  def size_in_bytes(self):\n+    \"\"\"Returns the space usage in bytes of the sink.\"\"\"\n+    try:\n+      return os.stat(self._path).st_size", "originalCommit": "a6d9e2382eeea148b3f667726f8e8e8933a7196c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4MzI3MQ==", "url": "https://github.com/apache/beam/pull/11050#discussion_r388483271", "bodyText": "It works. Though in some versions of some OSes, some of the fields of the returned stat might be dummy values.", "author": "KevinGG", "createdAt": "2020-03-05T18:34:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NTI3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NTc4NA==", "url": "https://github.com/apache/beam/pull/11050#discussion_r388045784", "bodyText": "Shoulds this have \"limit\" or \"max\" in its name, or something to indicate that this is an upper limit.", "author": "aaltay", "createdAt": "2020-03-05T02:23:14Z", "path": "sdks/python/apache_beam/runners/interactive/interactive_beam.py", "diffHunk": "@@ -88,7 +88,22 @@ def capture_duration(self, value):\n     \"\"\"\n     self.capture_control._capture_duration = value\n \n-  # TODO(BEAM-8335): add capture_size options when they are supported.\n+  @property\n+  def capture_size(self):", "originalCommit": "a6d9e2382eeea148b3f667726f8e8e8933a7196c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4MjU1MQ==", "url": "https://github.com/apache/beam/pull/11050#discussion_r388482551", "bodyText": "Renaming it to capture_size_limit.", "author": "KevinGG", "createdAt": "2020-03-05T18:33:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NTc4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NjE1Mw==", "url": "https://github.com/apache/beam/pull/11050#discussion_r388046153", "bodyText": "Should this be moved inside the if below? Is it used anywhere else?", "author": "aaltay", "createdAt": "2020-03-05T02:24:42Z", "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -259,21 +269,31 @@ def is_source_to_cache_changed(\n   # The computation of extract_unbounded_source_signature is expensive, track on\n   # change by default.\n   if is_changed and update_cached_source_signature:\n-    if ie.current_env().options.enable_capture_replay:\n-      # TODO(BEAM-8335): display rather than logging when is_in_notebook.\n+    options = ie.current_env().options\n+    # No info needed when capture replay is disabled.\n+    if options.enable_capture_replay:\n+\n+      def sizeof_fmt(num, suffix='B'):", "originalCommit": "a6d9e2382eeea148b3f667726f8e8e8933a7196c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ3OTE5Mg==", "url": "https://github.com/apache/beam/pull/11050#discussion_r388479192", "bodyText": "No, it's not used anywhere else. Moving it.", "author": "KevinGG", "createdAt": "2020-03-05T18:26:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NjE1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NjIzNA==", "url": "https://github.com/apache/beam/pull/11050#discussion_r388046234", "bodyText": "Do you mean to pass is_cache_complete() or is_cache_complete ?", "author": "aaltay", "createdAt": "2020-03-05T02:24:58Z", "path": "sdks/python/apache_beam/runners/interactive/background_caching_job.py", "diffHunk": "@@ -202,10 +202,20 @@ def has_source_to_cache(user_pipeline):\n   if has_cache:\n     if not isinstance(ie.current_env().cache_manager(),\n                       streaming_cache.StreamingCache):\n-      # TODO(BEAM-8335): convert the cache manager into a streaming cache\n-      # manager. Note this does not invalidate the current cache including the\n-      # source data capture.\n-      pass\n+      # Wrap the cache manager into a streaming cache manager. Note this\n+      # does not invalidate the current cache manager.\n+      def is_cache_complete():\n+        job = ie.current_env().get_background_caching_job(user_pipeline)\n+        is_done = job and job.is_done()\n+        cache_changed = is_source_to_cache_changed(\n+            user_pipeline, update_cached_source_signature=False)\n+        return is_done and not cache_changed\n+\n+      ie.current_env().set_cache_manager(\n+          streaming_cache.StreamingCache(\n+              ie.current_env().cache_manager()._cache_dir,\n+              is_cache_complete=is_cache_complete,", "originalCommit": "a6d9e2382eeea148b3f667726f8e8e8933a7196c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ3OTE3Ng==", "url": "https://github.com/apache/beam/pull/11050#discussion_r388479176", "bodyText": "is_cache_complete is a function required by StreamingCache, not the return value of the function.", "author": "KevinGG", "createdAt": "2020-03-05T18:26:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NjIzNA=="}], "type": "inlineReview"}, {"oid": "333640069edc046cd4393df01a156b359a6310ba", "url": "https://github.com/apache/beam/commit/333640069edc046cd4393df01a156b359a6310ba", "message": "Changes based on comments\n\nChange-Id: If24d2d9aa97dce94a97673ef7df70e6eeaf12b81", "committedDate": "2020-03-12T17:15:12Z", "type": "forcePushed"}, {"oid": "1596119d3c0a7b1cfa55eb3562338ea8ebd60093", "url": "https://github.com/apache/beam/commit/1596119d3c0a7b1cfa55eb3562338ea8ebd60093", "message": "[BEAM-8335] Implemented Capture Size limitation\n\n1. Capture cache size is calculated as a property from\nStreamingCacheSinks and\n   should be implemented by any other sink implementations in the\nfuture.\n2. For each capture cache, if it doesn't exist, the size is 0.\n3. If the cache manager doesn't exist or doesn't support capture_size,\n   the capture size configured in ib.options would not take effect as if\n   capture cache size stays 0.\n4. Captured data from sources are stored like intermediate PCollections.\n   The capture cache size does not include intermediate PCollections'\n   disk usages.", "committedDate": "2020-03-12T17:30:10Z", "type": "commit"}, {"oid": "1596119d3c0a7b1cfa55eb3562338ea8ebd60093", "url": "https://github.com/apache/beam/commit/1596119d3c0a7b1cfa55eb3562338ea8ebd60093", "message": "[BEAM-8335] Implemented Capture Size limitation\n\n1. Capture cache size is calculated as a property from\nStreamingCacheSinks and\n   should be implemented by any other sink implementations in the\nfuture.\n2. For each capture cache, if it doesn't exist, the size is 0.\n3. If the cache manager doesn't exist or doesn't support capture_size,\n   the capture size configured in ib.options would not take effect as if\n   capture cache size stays 0.\n4. Captured data from sources are stored like intermediate PCollections.\n   The capture cache size does not include intermediate PCollections'\n   disk usages.", "committedDate": "2020-03-12T17:30:10Z", "type": "forcePushed"}, {"oid": "58b5ee3e4f298679dbd321872280c2cafbc446b8", "url": "https://github.com/apache/beam/commit/58b5ee3e4f298679dbd321872280c2cafbc446b8", "message": "fix lint", "committedDate": "2020-03-12T18:50:13Z", "type": "commit"}]}