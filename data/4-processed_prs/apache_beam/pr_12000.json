{"pr_number": 12000, "pr_title": "BEAM-10221: Add in example tests cases of Kotlin cookbook", "pr_createdAt": "2020-06-12T15:37:34Z", "pr_url": "https://github.com/apache/beam/pull/12000", "timeline": [{"oid": "bd77616d500cf680f8cd4e63a1740e2c5ad26a8b", "url": "https://github.com/apache/beam/commit/bd77616d500cf680f8cd4e63a1740e2c5ad26a8b", "message": "BEAM-10221: Add in four tests cases of base on the java equivalent for the kotlin cookbook examples.", "committedDate": "2020-06-12T15:43:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUwMDg0OQ==", "url": "https://github.com/apache/beam/pull/12000#discussion_r439500849", "bodyText": "Can we get rid of this rogue \"?", "author": "harshithdwivedi", "createdAt": "2020-06-12T15:51:02Z", "path": "examples/kotlin/src/test/java/org/apache/beam/examples/kotlin/cookbook/JoinExamplesTest.kt", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.examples.kotlin.cookbook\n+\n+import com.google.api.services.bigquery.model.TableRow\n+import org.apache.beam.examples.kotlin.cookbook.JoinExamples.ExtractCountryInfoFn\n+import org.apache.beam.examples.kotlin.cookbook.JoinExamples.ExtractEventDataFn\n+import org.apache.beam.sdk.testing.PAssert\n+import org.apache.beam.sdk.testing.TestPipeline\n+import org.apache.beam.sdk.testing.ValidatesRunner\n+import org.apache.beam.sdk.transforms.Create\n+import org.apache.beam.sdk.transforms.ParDo\n+import org.apache.beam.sdk.values.KV\n+import org.apache.beam.sdk.values.PCollection\n+import org.junit.Rule\n+import org.junit.Test\n+import org.junit.experimental.categories.Category\n+import org.junit.runner.RunWith\n+import org.junit.runners.JUnit4\n+\n+/** Unit tests for [JoinExamples].  */\n+@RunWith(JUnit4::class)\n+class JoinExamplesTest {\n+\n+    companion object {\n+        private val row1 = TableRow()\n+                .set(\"ActionGeo_CountryCode\", \"VM\")\n+                .set(\"SQLDATE\", \"20141212\")\n+                .set(\"Actor1Name\", \"BANGKOK\")\n+                .set(\"SOURCEURL\", \"http://cnn.com\")\n+        private val row2 = TableRow()\n+                .set(\"ActionGeo_CountryCode\", \"VM\")\n+                .set(\"SQLDATE\", \"20141212\")\n+                .set(\"Actor1Name\", \"LAOS\")\n+                .set(\"SOURCEURL\", \"http://www.chicagotribune.com\")\n+        private val row3 = TableRow()\n+                .set(\"ActionGeo_CountryCode\", \"BE\")\n+                .set(\"SQLDATE\", \"20141213\")\n+                .set(\"Actor1Name\", \"AFGHANISTAN\")\n+                .set(\"SOURCEURL\", \"http://cnn.com\")\n+        private val EVENTS = arrayOf(row1, row2, row3)\n+        val EVENT_ARRAY: List<TableRow> = listOf(*EVENTS)\n+        private val PARSED_EVENTS = listOf(\n+                KV.of(\"VM\", \"Date: 20141212, Actor1: LAOS, url: http://www.chicagotribune.com\"),\n+                KV.of(\"BE\", \"Date: 20141213, Actor1: AFGHANISTAN, url: http://cnn.com\"),\n+                KV.of(\"VM\", \"Date: 20141212, Actor1: BANGKOK, url: http://cnn.com\"))\n+        private val PARSED_COUNTRY_CODES = listOf(KV.of(\"BE\", \"Belgium\"), KV.of(\"VM\", \"Vietnam\"))\n+        private val cc1 = TableRow().set(\"FIPSCC\", \"VM\").set(\"HumanName\", \"Vietnam\")\n+        private val cc2 = TableRow().set(\"FIPSCC\", \"BE\").set(\"HumanName\", \"Belgium\")\n+        private val CCS = arrayOf(cc1, cc2)\n+        val CC_ARRAY = listOf(*CCS)\n+        val JOINED_EVENTS = arrayOf(\"Country code: VM, Country name: Vietnam, Event info: Date: 20141212, Actor1: LAOS, \"\n+                + \"url: http://www.chicagotribune.com\", \"Country code: VM, Country name: Vietnam, Event info: Date: 20141212, Actor1: BANGKOK, \"", "originalCommit": "bd77616d500cf680f8cd4e63a1740e2c5ad26a8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUwNTk5Nw==", "url": "https://github.com/apache/beam/pull/12000#discussion_r439505997", "bodyText": "Thanks for looking through. Not sure what you mean here specifically? But formatted inline with max width now and how the java example was shown", "author": "perkss", "createdAt": "2020-06-12T16:00:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUwMDg0OQ=="}], "type": "inlineReview"}, {"oid": "ed23422feaf8058007997d10cfcc39cb24ea473b", "url": "https://github.com/apache/beam/commit/ed23422feaf8058007997d10cfcc39cb24ea473b", "message": "BEAM-10221: Add in four tests cases of base on the java equivalent for the kotlin cookbook examples.", "committedDate": "2020-06-12T16:00:04Z", "type": "forcePushed"}, {"oid": "7e0f08fd12b75987498b492e2a593a0082c1972e", "url": "https://github.com/apache/beam/commit/7e0f08fd12b75987498b492e2a593a0082c1972e", "message": "BEAM-10221: Add in four tests cases of base on the java equivalent for the kotlin cookbook examples.", "committedDate": "2020-06-12T19:22:45Z", "type": "forcePushed"}, {"oid": "dc046a0290136333a0216faf2d74379574b2fbfc", "url": "https://github.com/apache/beam/commit/dc046a0290136333a0216faf2d74379574b2fbfc", "message": "BEAM-10221: Add in four tests cases of base on the java equivalent for the kotlin cookbook examples.", "committedDate": "2020-06-13T17:54:07Z", "type": "forcePushed"}, {"oid": "1e7220f32d70dd8a311a08cdb0b2beaba75ba23a", "url": "https://github.com/apache/beam/commit/1e7220f32d70dd8a311a08cdb0b2beaba75ba23a", "message": "BEAM-10221: Add in four tests cases of base on the java equivalent for the kotlin cookbook examples.", "committedDate": "2020-06-14T07:47:02Z", "type": "commit"}, {"oid": "1e7220f32d70dd8a311a08cdb0b2beaba75ba23a", "url": "https://github.com/apache/beam/commit/1e7220f32d70dd8a311a08cdb0b2beaba75ba23a", "message": "BEAM-10221: Add in four tests cases of base on the java equivalent for the kotlin cookbook examples.", "committedDate": "2020-06-14T07:47:02Z", "type": "forcePushed"}]}