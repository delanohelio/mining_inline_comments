{"pr_number": 11128, "pr_title": "[BEAM-9524] Fix for ib.show() executing indefinitely", "pr_createdAt": "2020-03-13T21:50:39Z", "pr_url": "https://github.com/apache/beam/pull/11128", "timeline": [{"oid": "a9178bcc06e1570d608be5eb89f9b18b8aded88a", "url": "https://github.com/apache/beam/commit/a9178bcc06e1570d608be5eb89f9b18b8aded88a", "message": "Fix ib.show() spinning forever when rexecuting cells without kernel restart\n\nChange-Id: I53aa32a75645086efffa091a53880a076c3a689d", "committedDate": "2020-03-14T00:08:42Z", "type": "forcePushed"}, {"oid": "8f2efd8038eece48e1b023f619f92f240815dca9", "url": "https://github.com/apache/beam/commit/8f2efd8038eece48e1b023f619f92f240815dca9", "message": "Fix ib.show() spinning forever when rexecuting cells without kernel restart\n\nChange-Id: I53aa32a75645086efffa091a53880a076c3a689d", "committedDate": "2020-03-16T21:40:32Z", "type": "forcePushed"}, {"oid": "68f2c6d46d6ae343aeaaaed534079c776e425363", "url": "https://github.com/apache/beam/commit/68f2c6d46d6ae343aeaaaed534079c776e425363", "message": "Fix ib.show() spinning forever when rexecuting cells without kernel restart\n\nChange-Id: I53aa32a75645086efffa091a53880a076c3a689d", "committedDate": "2020-03-16T21:56:09Z", "type": "forcePushed"}, {"oid": "8cb62c1fc02a23c1f5ab6fbf7643d5b08e2189d6", "url": "https://github.com/apache/beam/commit/8cb62c1fc02a23c1f5ab6fbf7643d5b08e2189d6", "message": "Fix ib.show() spinning forever when rexecuting cells without kernel restart\n\nChange-Id: I53aa32a75645086efffa091a53880a076c3a689d", "committedDate": "2020-03-16T22:11:06Z", "type": "forcePushed"}, {"oid": "3e1d6065d824239802f5635b8e4685be7858fbd4", "url": "https://github.com/apache/beam/commit/3e1d6065d824239802f5635b8e4685be7858fbd4", "message": "Fix ib.show() spinning forever when rexecuting cells without kernel restart\n\nChange-Id: I53aa32a75645086efffa091a53880a076c3a689d", "committedDate": "2020-03-16T22:49:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NTcwOA==", "url": "https://github.com/apache/beam/pull/11128#discussion_r394495708", "bodyText": "what is a pipeline ID? Are you sure it's unique? I see elsewhere you're using the id(..) of the objects?", "author": "pabloem", "createdAt": "2020-03-18T16:51:48Z", "path": "sdks/python/apache_beam/runners/interactive/caching/streaming_cache.py", "diffHunk": "@@ -153,7 +153,8 @@ def __init__(\n     self._coder = coder\n     self._labels = labels\n     self._is_cache_complete = (\n-        is_cache_complete if is_cache_complete else lambda: True)\n+        is_cache_complete if is_cache_complete else lambda _: True)\n+    self._pipeline_id = labels[-1].split('_')[-1]", "originalCommit": "3e1d6065d824239802f5635b8e4685be7858fbd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY0ODkwNQ==", "url": "https://github.com/apache/beam/pull/11128#discussion_r394648905", "bodyText": "Will it come in as a label?\nthe ID will be unique for the pipeline object itself. I guess we will not be reusing it anywhere?", "author": "pabloem", "createdAt": "2020-03-18T21:25:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY1NTUyNA==", "url": "https://github.com/apache/beam/pull/11128#discussion_r394655524", "bodyText": "Yeah the pipeline id is just a pointer to the pipeline, which is guaranteed to be unique and constant.", "author": "rohdesamuel", "createdAt": "2020-03-18T21:40:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2MjgxMg==", "url": "https://github.com/apache/beam/pull/11128#discussion_r394662812", "bodyText": "This looks kinda like a hack, and if we change the format of the label, this will break.\nCan we at least put the code that encodes and decodes labels in one place, perhaps in a util module, and have this line call the decode function?", "author": "davidyan74", "createdAt": "2020-03-18T21:57:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIxODI0OQ==", "url": "https://github.com/apache/beam/pull/11128#discussion_r395218249", "bodyText": "Done, I added a CacheKey class that can handle the encoding/decoding", "author": "rohdesamuel", "createdAt": "2020-03-19T17:59:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NTcwOA=="}], "type": "inlineReview"}, {"oid": "2b253834668a2b8ea03ce199cfcbdbcd965be324", "url": "https://github.com/apache/beam/commit/2b253834668a2b8ea03ce199cfcbdbcd965be324", "message": "Fix ib.show() spinning forever when rexecuting cells without kernel restart\n\nChange-Id: I53aa32a75645086efffa091a53880a076c3a689d", "committedDate": "2020-03-19T00:58:04Z", "type": "commit"}, {"oid": "54a7e19cf7159841d4388bc9749c2083c0ee5c9b", "url": "https://github.com/apache/beam/commit/54a7e19cf7159841d4388bc9749c2083c0ee5c9b", "message": "Add CacheKey class\n\nChange-Id: I1ab6e7036172d7e2d07c774778a50e165df6bdca", "committedDate": "2020-03-19T00:58:04Z", "type": "commit"}, {"oid": "54a7e19cf7159841d4388bc9749c2083c0ee5c9b", "url": "https://github.com/apache/beam/commit/54a7e19cf7159841d4388bc9749c2083c0ee5c9b", "message": "Add CacheKey class\n\nChange-Id: I1ab6e7036172d7e2d07c774778a50e165df6bdca", "committedDate": "2020-03-19T00:58:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTEyMjk3MA==", "url": "https://github.com/apache/beam/pull/11128#discussion_r395122970", "bodyText": "Check length of the list?", "author": "davidyan74", "createdAt": "2020-03-19T15:40:41Z", "path": "sdks/python/apache_beam/runners/interactive/pipeline_instrument.py", "diffHunk": "@@ -63,6 +63,24 @@ def __hash__(self):\n         self.producer_version))\n \n \n+# TODO: turn this into a dataclass object when we finally get off of Python2.\n+class CacheKey:\n+  def __init__(self, var, version, producer_version, pipeline_id):\n+    self.var = var\n+    self.version = version\n+    self.producer_version = producer_version\n+    self.pipeline_id = pipeline_id\n+\n+  @staticmethod\n+  def from_str(r):\n+    split = r.split('|')", "originalCommit": "54a7e19cf7159841d4388bc9749c2083c0ee5c9b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMxODQwMw==", "url": "https://github.com/apache/beam/pull/11128#discussion_r395318403", "bodyText": "I think probably a better way is to do the following:\nvar, version, producer_version, pipeline_id = r.split('|')\nreturn CacheKey(var, version, producer_version, pipeline_id)", "author": "davidyan74", "createdAt": "2020-03-19T21:03:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTEyMjk3MA=="}], "type": "inlineReview"}, {"oid": "aa70b8c442b8fc0b29712d0edf7225e34a56fdac", "url": "https://github.com/apache/beam/commit/aa70b8c442b8fc0b29712d0edf7225e34a56fdac", "message": "fix dep loop\n\nChange-Id: I247f37cd7acffb6ad796ce0fa8b54b0feff400d1", "committedDate": "2020-03-19T22:11:27Z", "type": "commit"}]}