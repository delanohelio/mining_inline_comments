{"pr_number": 11856, "pr_title": "[BEAM-7505] SideInput Python Load Test job", "pr_createdAt": "2020-05-29T10:06:11Z", "pr_url": "https://github.com/apache/beam/pull/11856", "timeline": [{"oid": "44c71d4b48c66c597d45986b1dba72ba913c293c", "url": "https://github.com/apache/beam/commit/44c71d4b48c66c597d45986b1dba72ba913c293c", "message": "[BEAM-7505] SideInput Python Load Test job", "committedDate": "2020-05-29T10:31:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwNTkzMg==", "url": "https://github.com/apache/beam/pull/11856#discussion_r434705932", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-1key-percent-dict',\n          \n          \n            \n                            title          : 'SideInput Python Load test: 1gb-1kb-10workers-1window-1key-percent-dict',", "author": "tysonjh", "createdAt": "2020-06-03T16:38:54Z", "path": ".test-infra/jenkins/job_LoadTests_SideInput_Python.groovy", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import InfluxDBCredentialsHelper\n+\n+def now = new Date().format(\"MMddHHmmss\", TimeZone.getTimeZone('UTC'))\n+\n+def loadTestConfigurations = { datasetName -> [\n+        [\n+                title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-1key-percent-dict',", "originalCommit": "44c71d4b48c66c597d45986b1dba72ba913c293c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxNjE4Mg==", "url": "https://github.com/apache/beam/pull/11856#discussion_r434716182", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-99key-percent-dict',\n          \n          \n            \n                            title          : 'SideInput Python Load test: 1gb-1kb-10workers-1window-99key-percent-dict',", "author": "tysonjh", "createdAt": "2020-06-03T16:55:00Z", "path": ".test-infra/jenkins/job_LoadTests_SideInput_Python.groovy", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import InfluxDBCredentialsHelper\n+\n+def now = new Date().format(\"MMddHHmmss\", TimeZone.getTimeZone('UTC'))\n+\n+def loadTestConfigurations = { datasetName -> [\n+        [\n+                title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-1key-percent-dict',\n+                test           : 'apache_beam.testing.load_tests.sideinput_test',\n+                runner         : CommonTestProperties.Runner.DATAFLOW,\n+                pipelineOptions: [\n+                        job_name             : 'load-tests-python-dataflow-batch-sideinput-1-' + now,\n+                        project              : 'apache-beam-testing',\n+                        region               : 'us-central1',\n+                        temp_location        : 'gs://temp-storage-for-perf-tests/loadtests',\n+                        publish_to_big_query : true,\n+                        metrics_dataset      : datasetName,\n+                        metrics_table        : 'python_dataflow_batch_sideinput_1',\n+                        influx_measurement   : 'python_batch_sideinput_1',\n+                        input_options        : '\\'{' +\n+                                '\"num_records\": 2000000,' +\n+                                '\"key_size\": 100,' +\n+                                '\"value_size\": 900}\\'',\n+                        num_workers          : 5,\n+                        autoscaling_algorithm: 'NONE',\n+                        side_input_type      : 'dict',\n+                        access_percentage    : 1,\n+                ]\n+        ],\n+        [\n+                title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-99key-percent-dict',", "originalCommit": "44c71d4b48c66c597d45986b1dba72ba913c293c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxODA5Ng==", "url": "https://github.com/apache/beam/pull/11856#discussion_r434718096", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            title          : 'SideInput Python Load test: 20gb-1kb-5workers-1window-first-iterable',\n          \n          \n            \n                            title          : 'SideInput Python Load test: 10gb-1kb-10workers-1window-first-iterable',", "author": "tysonjh", "createdAt": "2020-06-03T16:57:53Z", "path": ".test-infra/jenkins/job_LoadTests_SideInput_Python.groovy", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import InfluxDBCredentialsHelper\n+\n+def now = new Date().format(\"MMddHHmmss\", TimeZone.getTimeZone('UTC'))\n+\n+def loadTestConfigurations = { datasetName -> [\n+        [\n+                title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-1key-percent-dict',\n+                test           : 'apache_beam.testing.load_tests.sideinput_test',\n+                runner         : CommonTestProperties.Runner.DATAFLOW,\n+                pipelineOptions: [\n+                        job_name             : 'load-tests-python-dataflow-batch-sideinput-1-' + now,\n+                        project              : 'apache-beam-testing',\n+                        region               : 'us-central1',\n+                        temp_location        : 'gs://temp-storage-for-perf-tests/loadtests',\n+                        publish_to_big_query : true,\n+                        metrics_dataset      : datasetName,\n+                        metrics_table        : 'python_dataflow_batch_sideinput_1',\n+                        influx_measurement   : 'python_batch_sideinput_1',\n+                        input_options        : '\\'{' +\n+                                '\"num_records\": 2000000,' +\n+                                '\"key_size\": 100,' +\n+                                '\"value_size\": 900}\\'',\n+                        num_workers          : 5,\n+                        autoscaling_algorithm: 'NONE',\n+                        side_input_type      : 'dict',\n+                        access_percentage    : 1,\n+                ]\n+        ],\n+        [\n+                title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-99key-percent-dict',\n+                test           : 'apache_beam.testing.load_tests.sideinput_test',\n+                runner         : CommonTestProperties.Runner.DATAFLOW,\n+                pipelineOptions: [\n+                        job_name             : 'load-tests-python-dataflow-batch-sideinput-2-' + now,\n+                        project              : 'apache-beam-testing',\n+                        region               : 'us-central1',\n+                        temp_location        : 'gs://temp-storage-for-perf-tests/loadtests',\n+                        publish_to_big_query : true,\n+                        metrics_dataset      : datasetName,\n+                        metrics_table        : 'python_dataflow_batch_sideinput_2',\n+                        influx_measurement   : 'python_batch_sideinput_2',\n+                        input_options        : '\\'{' +\n+                                '\"num_records\": 2000000,' +\n+                                '\"key_size\": 100,' +\n+                                '\"value_size\": 900}\\'',\n+                        num_workers          : 5,\n+                        autoscaling_algorithm: 'NONE',\n+                        side_input_type      : 'dict',\n+                        access_percentage    : 99,\n+                ]\n+        ],\n+        [\n+                title          : 'SideInput Python Load test: 20gb-1kb-5workers-1window-first-iterable',", "originalCommit": "44c71d4b48c66c597d45986b1dba72ba913c293c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxODUzMg==", "url": "https://github.com/apache/beam/pull/11856#discussion_r434718532", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            title          : 'SideInput Python Load test: 20gb-1kb-5workers-1window-iterable',\n          \n          \n            \n                            title          : 'SideInput Python Load test: 10gb-1kb-10workers-1window-iterable',", "author": "tysonjh", "createdAt": "2020-06-03T16:58:37Z", "path": ".test-infra/jenkins/job_LoadTests_SideInput_Python.groovy", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import InfluxDBCredentialsHelper\n+\n+def now = new Date().format(\"MMddHHmmss\", TimeZone.getTimeZone('UTC'))\n+\n+def loadTestConfigurations = { datasetName -> [\n+        [\n+                title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-1key-percent-dict',\n+                test           : 'apache_beam.testing.load_tests.sideinput_test',\n+                runner         : CommonTestProperties.Runner.DATAFLOW,\n+                pipelineOptions: [\n+                        job_name             : 'load-tests-python-dataflow-batch-sideinput-1-' + now,\n+                        project              : 'apache-beam-testing',\n+                        region               : 'us-central1',\n+                        temp_location        : 'gs://temp-storage-for-perf-tests/loadtests',\n+                        publish_to_big_query : true,\n+                        metrics_dataset      : datasetName,\n+                        metrics_table        : 'python_dataflow_batch_sideinput_1',\n+                        influx_measurement   : 'python_batch_sideinput_1',\n+                        input_options        : '\\'{' +\n+                                '\"num_records\": 2000000,' +\n+                                '\"key_size\": 100,' +\n+                                '\"value_size\": 900}\\'',\n+                        num_workers          : 5,\n+                        autoscaling_algorithm: 'NONE',\n+                        side_input_type      : 'dict',\n+                        access_percentage    : 1,\n+                ]\n+        ],\n+        [\n+                title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-99key-percent-dict',\n+                test           : 'apache_beam.testing.load_tests.sideinput_test',\n+                runner         : CommonTestProperties.Runner.DATAFLOW,\n+                pipelineOptions: [\n+                        job_name             : 'load-tests-python-dataflow-batch-sideinput-2-' + now,\n+                        project              : 'apache-beam-testing',\n+                        region               : 'us-central1',\n+                        temp_location        : 'gs://temp-storage-for-perf-tests/loadtests',\n+                        publish_to_big_query : true,\n+                        metrics_dataset      : datasetName,\n+                        metrics_table        : 'python_dataflow_batch_sideinput_2',\n+                        influx_measurement   : 'python_batch_sideinput_2',\n+                        input_options        : '\\'{' +\n+                                '\"num_records\": 2000000,' +\n+                                '\"key_size\": 100,' +\n+                                '\"value_size\": 900}\\'',\n+                        num_workers          : 5,\n+                        autoscaling_algorithm: 'NONE',\n+                        side_input_type      : 'dict',\n+                        access_percentage    : 99,\n+                ]\n+        ],\n+        [\n+                title          : 'SideInput Python Load test: 20gb-1kb-5workers-1window-first-iterable',\n+                test           : 'apache_beam.testing.load_tests.sideinput_test',\n+                runner         : CommonTestProperties.Runner.DATAFLOW,\n+                pipelineOptions: [\n+                        job_name             : 'load-tests-python-dataflow-batch-sideinput-3-' + now,\n+                        project              : 'apache-beam-testing',\n+                        region               : 'us-central1',\n+                        temp_location        : 'gs://temp-storage-for-perf-tests/loadtests',\n+                        publish_to_big_query : true,\n+                        metrics_dataset      : datasetName,\n+                        metrics_table        : 'python_dataflow_batch_sideinput_3',\n+                        influx_measurement   : 'python_batch_sideinput_3',\n+                        input_options        : '\\'{' +\n+                                '\"num_records\": 20000000,' +\n+                                '\"key_size\": 100,' +\n+                                '\"value_size\": 900}\\'',\n+                        num_workers          : 5,\n+                        autoscaling_algorithm: 'NONE',\n+                        side_input_type      : 'iter',\n+                        access_percentage    : 1,\n+                ]\n+        ],\n+        [\n+                title          : 'SideInput Python Load test: 20gb-1kb-5workers-1window-iterable',", "originalCommit": "44c71d4b48c66c597d45986b1dba72ba913c293c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxODg0Mw==", "url": "https://github.com/apache/beam/pull/11856#discussion_r434718843", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-first-list',\n          \n          \n            \n                            title          : 'SideInput Python Load test: 100gb-1kb-10workers-1window-first-list',", "author": "tysonjh", "createdAt": "2020-06-03T16:59:06Z", "path": ".test-infra/jenkins/job_LoadTests_SideInput_Python.groovy", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import InfluxDBCredentialsHelper\n+\n+def now = new Date().format(\"MMddHHmmss\", TimeZone.getTimeZone('UTC'))\n+\n+def loadTestConfigurations = { datasetName -> [\n+        [\n+                title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-1key-percent-dict',\n+                test           : 'apache_beam.testing.load_tests.sideinput_test',\n+                runner         : CommonTestProperties.Runner.DATAFLOW,\n+                pipelineOptions: [\n+                        job_name             : 'load-tests-python-dataflow-batch-sideinput-1-' + now,\n+                        project              : 'apache-beam-testing',\n+                        region               : 'us-central1',\n+                        temp_location        : 'gs://temp-storage-for-perf-tests/loadtests',\n+                        publish_to_big_query : true,\n+                        metrics_dataset      : datasetName,\n+                        metrics_table        : 'python_dataflow_batch_sideinput_1',\n+                        influx_measurement   : 'python_batch_sideinput_1',\n+                        input_options        : '\\'{' +\n+                                '\"num_records\": 2000000,' +\n+                                '\"key_size\": 100,' +\n+                                '\"value_size\": 900}\\'',\n+                        num_workers          : 5,\n+                        autoscaling_algorithm: 'NONE',\n+                        side_input_type      : 'dict',\n+                        access_percentage    : 1,\n+                ]\n+        ],\n+        [\n+                title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-99key-percent-dict',\n+                test           : 'apache_beam.testing.load_tests.sideinput_test',\n+                runner         : CommonTestProperties.Runner.DATAFLOW,\n+                pipelineOptions: [\n+                        job_name             : 'load-tests-python-dataflow-batch-sideinput-2-' + now,\n+                        project              : 'apache-beam-testing',\n+                        region               : 'us-central1',\n+                        temp_location        : 'gs://temp-storage-for-perf-tests/loadtests',\n+                        publish_to_big_query : true,\n+                        metrics_dataset      : datasetName,\n+                        metrics_table        : 'python_dataflow_batch_sideinput_2',\n+                        influx_measurement   : 'python_batch_sideinput_2',\n+                        input_options        : '\\'{' +\n+                                '\"num_records\": 2000000,' +\n+                                '\"key_size\": 100,' +\n+                                '\"value_size\": 900}\\'',\n+                        num_workers          : 5,\n+                        autoscaling_algorithm: 'NONE',\n+                        side_input_type      : 'dict',\n+                        access_percentage    : 99,\n+                ]\n+        ],\n+        [\n+                title          : 'SideInput Python Load test: 20gb-1kb-5workers-1window-first-iterable',\n+                test           : 'apache_beam.testing.load_tests.sideinput_test',\n+                runner         : CommonTestProperties.Runner.DATAFLOW,\n+                pipelineOptions: [\n+                        job_name             : 'load-tests-python-dataflow-batch-sideinput-3-' + now,\n+                        project              : 'apache-beam-testing',\n+                        region               : 'us-central1',\n+                        temp_location        : 'gs://temp-storage-for-perf-tests/loadtests',\n+                        publish_to_big_query : true,\n+                        metrics_dataset      : datasetName,\n+                        metrics_table        : 'python_dataflow_batch_sideinput_3',\n+                        influx_measurement   : 'python_batch_sideinput_3',\n+                        input_options        : '\\'{' +\n+                                '\"num_records\": 20000000,' +\n+                                '\"key_size\": 100,' +\n+                                '\"value_size\": 900}\\'',\n+                        num_workers          : 5,\n+                        autoscaling_algorithm: 'NONE',\n+                        side_input_type      : 'iter',\n+                        access_percentage    : 1,\n+                ]\n+        ],\n+        [\n+                title          : 'SideInput Python Load test: 20gb-1kb-5workers-1window-iterable',\n+                test           : 'apache_beam.testing.load_tests.sideinput_test',\n+                runner         : CommonTestProperties.Runner.DATAFLOW,\n+                pipelineOptions: [\n+                        job_name             : 'load-tests-python-dataflow-batch-sideinput-4-' + now,\n+                        project              : 'apache-beam-testing',\n+                        region               : 'us-central1',\n+                        temp_location        : 'gs://temp-storage-for-perf-tests/loadtests',\n+                        publish_to_big_query : true,\n+                        metrics_dataset      : datasetName,\n+                        metrics_table        : 'python_dataflow_batch_sideinput_4',\n+                        influx_measurement   : 'python_batch_sideinput_4',\n+                        input_options        : '\\'{' +\n+                                '\"num_records\": 20000000,' +\n+                                '\"key_size\": 100,' +\n+                                '\"value_size\": 900}\\'',\n+                        num_workers          : 5,\n+                        autoscaling_algorithm: 'NONE',\n+                        side_input_type      : 'iter',\n+                ]\n+        ],\n+        [\n+                title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-first-list',", "originalCommit": "44c71d4b48c66c597d45986b1dba72ba913c293c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcyMTAyMg==", "url": "https://github.com/apache/beam/pull/11856#discussion_r434721022", "bodyText": "Will 100gb be too much?", "author": "tysonjh", "createdAt": "2020-06-03T17:02:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxODg0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMwODI2NA==", "url": "https://github.com/apache/beam/pull/11856#discussion_r435308264", "bodyText": "Looks like even 10GB will be too much for lists. I get the following error:\nWorkflow failed. Causes: S03:Impulse+Collect start time metrics+ParDo(SequenceSideInputTestDoFn)/ParDo(SequenceSideInputTestDoFn)+Collect end time metrics failed., The job failed because a work item has failed 4 times. \n...\nRoot cause: The worker lost contact with the service.", "author": "kamilwu", "createdAt": "2020-06-04T14:35:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxODg0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcyMjc1NA==", "url": "https://github.com/apache/beam/pull/11856#discussion_r434722754", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-list',\n          \n          \n            \n                            title          : 'SideInput Python Load test: 10gb-1kb-10workers-1window-list',", "author": "tysonjh", "createdAt": "2020-06-03T17:05:51Z", "path": ".test-infra/jenkins/job_LoadTests_SideInput_Python.groovy", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import CommonJobProperties as commonJobProperties\n+import LoadTestsBuilder as loadTestsBuilder\n+import PhraseTriggeringPostCommitBuilder\n+import InfluxDBCredentialsHelper\n+\n+def now = new Date().format(\"MMddHHmmss\", TimeZone.getTimeZone('UTC'))\n+\n+def loadTestConfigurations = { datasetName -> [\n+        [\n+                title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-1key-percent-dict',\n+                test           : 'apache_beam.testing.load_tests.sideinput_test',\n+                runner         : CommonTestProperties.Runner.DATAFLOW,\n+                pipelineOptions: [\n+                        job_name             : 'load-tests-python-dataflow-batch-sideinput-1-' + now,\n+                        project              : 'apache-beam-testing',\n+                        region               : 'us-central1',\n+                        temp_location        : 'gs://temp-storage-for-perf-tests/loadtests',\n+                        publish_to_big_query : true,\n+                        metrics_dataset      : datasetName,\n+                        metrics_table        : 'python_dataflow_batch_sideinput_1',\n+                        influx_measurement   : 'python_batch_sideinput_1',\n+                        input_options        : '\\'{' +\n+                                '\"num_records\": 2000000,' +\n+                                '\"key_size\": 100,' +\n+                                '\"value_size\": 900}\\'',\n+                        num_workers          : 5,\n+                        autoscaling_algorithm: 'NONE',\n+                        side_input_type      : 'dict',\n+                        access_percentage    : 1,\n+                ]\n+        ],\n+        [\n+                title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-99key-percent-dict',\n+                test           : 'apache_beam.testing.load_tests.sideinput_test',\n+                runner         : CommonTestProperties.Runner.DATAFLOW,\n+                pipelineOptions: [\n+                        job_name             : 'load-tests-python-dataflow-batch-sideinput-2-' + now,\n+                        project              : 'apache-beam-testing',\n+                        region               : 'us-central1',\n+                        temp_location        : 'gs://temp-storage-for-perf-tests/loadtests',\n+                        publish_to_big_query : true,\n+                        metrics_dataset      : datasetName,\n+                        metrics_table        : 'python_dataflow_batch_sideinput_2',\n+                        influx_measurement   : 'python_batch_sideinput_2',\n+                        input_options        : '\\'{' +\n+                                '\"num_records\": 2000000,' +\n+                                '\"key_size\": 100,' +\n+                                '\"value_size\": 900}\\'',\n+                        num_workers          : 5,\n+                        autoscaling_algorithm: 'NONE',\n+                        side_input_type      : 'dict',\n+                        access_percentage    : 99,\n+                ]\n+        ],\n+        [\n+                title          : 'SideInput Python Load test: 20gb-1kb-5workers-1window-first-iterable',\n+                test           : 'apache_beam.testing.load_tests.sideinput_test',\n+                runner         : CommonTestProperties.Runner.DATAFLOW,\n+                pipelineOptions: [\n+                        job_name             : 'load-tests-python-dataflow-batch-sideinput-3-' + now,\n+                        project              : 'apache-beam-testing',\n+                        region               : 'us-central1',\n+                        temp_location        : 'gs://temp-storage-for-perf-tests/loadtests',\n+                        publish_to_big_query : true,\n+                        metrics_dataset      : datasetName,\n+                        metrics_table        : 'python_dataflow_batch_sideinput_3',\n+                        influx_measurement   : 'python_batch_sideinput_3',\n+                        input_options        : '\\'{' +\n+                                '\"num_records\": 20000000,' +\n+                                '\"key_size\": 100,' +\n+                                '\"value_size\": 900}\\'',\n+                        num_workers          : 5,\n+                        autoscaling_algorithm: 'NONE',\n+                        side_input_type      : 'iter',\n+                        access_percentage    : 1,\n+                ]\n+        ],\n+        [\n+                title          : 'SideInput Python Load test: 20gb-1kb-5workers-1window-iterable',\n+                test           : 'apache_beam.testing.load_tests.sideinput_test',\n+                runner         : CommonTestProperties.Runner.DATAFLOW,\n+                pipelineOptions: [\n+                        job_name             : 'load-tests-python-dataflow-batch-sideinput-4-' + now,\n+                        project              : 'apache-beam-testing',\n+                        region               : 'us-central1',\n+                        temp_location        : 'gs://temp-storage-for-perf-tests/loadtests',\n+                        publish_to_big_query : true,\n+                        metrics_dataset      : datasetName,\n+                        metrics_table        : 'python_dataflow_batch_sideinput_4',\n+                        influx_measurement   : 'python_batch_sideinput_4',\n+                        input_options        : '\\'{' +\n+                                '\"num_records\": 20000000,' +\n+                                '\"key_size\": 100,' +\n+                                '\"value_size\": 900}\\'',\n+                        num_workers          : 5,\n+                        autoscaling_algorithm: 'NONE',\n+                        side_input_type      : 'iter',\n+                ]\n+        ],\n+        [\n+                title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-first-list',\n+                test           : 'apache_beam.testing.load_tests.sideinput_test',\n+                runner         : CommonTestProperties.Runner.DATAFLOW,\n+                pipelineOptions: [\n+                        job_name             : 'load-tests-python-dataflow-batch-sideinput-5-' + now,\n+                        project              : 'apache-beam-testing',\n+                        region               : 'us-central1',\n+                        temp_location        : 'gs://temp-storage-for-perf-tests/loadtests',\n+                        publish_to_big_query : true,\n+                        metrics_dataset      : datasetName,\n+                        metrics_table        : 'python_dataflow_batch_sideinput_5',\n+                        influx_measurement   : 'python_batch_sideinput_5',\n+                        input_options        : '\\'{' +\n+                                '\"num_records\": 2000000,' +\n+                                '\"key_size\": 100,' +\n+                                '\"value_size\": 900}\\'',\n+                        num_workers          : 5,\n+                        autoscaling_algorithm: 'NONE',\n+                        side_input_type      : 'list',\n+                        access_percentage    : 1,\n+                ]\n+        ],\n+        [\n+                title          : 'SideInput Python Load test: 2gb-1kb-5workers-1window-list',", "originalCommit": "44c71d4b48c66c597d45986b1dba72ba913c293c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "37feeef2bb0456b5471bca968c4b4020db4ec228", "url": "https://github.com/apache/beam/commit/37feeef2bb0456b5471bca968c4b4020db4ec228", "message": "fix: fix 'Default values are not yet supported' error", "committedDate": "2020-06-08T13:41:32Z", "type": "forcePushed"}, {"oid": "f1210fd0a58b1dd12590f3d3ce689101c1ff7f40", "url": "https://github.com/apache/beam/commit/f1210fd0a58b1dd12590f3d3ce689101c1ff7f40", "message": "[BEAM-7505] SideInput Python Load tests job", "committedDate": "2020-09-28T09:15:19Z", "type": "forcePushed"}, {"oid": "cd6ba1486b029ec7f653126006979c48c40d401e", "url": "https://github.com/apache/beam/commit/cd6ba1486b029ec7f653126006979c48c40d401e", "message": "[BEAM-7505] SideInput Python Load tests job", "committedDate": "2020-09-28T16:22:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4Njg1OQ==", "url": "https://github.com/apache/beam/pull/11856#discussion_r497786859", "bodyText": "Add typehints here?", "author": "tysonjh", "createdAt": "2020-09-30T20:40:17Z", "path": "sdks/python/apache_beam/testing/load_tests/sideinput_test.py", "diffHunk": "@@ -122,85 +122,95 @@ def process(self, unused_element, side_input):\n             # No-op. We only make sure that the element is accessed.\n             next(it)\n           except StopIteration:\n-            return\n+            break\n \n     class MappingSideInputTestDoFn(beam.DoFn):", "originalCommit": "cd6ba1486b029ec7f653126006979c48c40d401e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODEzMzY0Mg==", "url": "https://github.com/apache/beam/pull/11856#discussion_r498133642", "bodyText": "Ok.\nSince we don't support Python 2 anymore, I decided to use Python 3 annotations which are slightly better than class decorators (@typehints.with_input_types and @typehints.with_output_types)", "author": "kamilwu", "createdAt": "2020-10-01T10:12:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc4Njg1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MDIyOA==", "url": "https://github.com/apache/beam/pull/11856#discussion_r497790228", "bodyText": "What does this do?", "author": "tysonjh", "createdAt": "2020-09-30T20:47:04Z", "path": "sdks/python/apache_beam/testing/load_tests/sideinput_test.py", "diffHunk": "@@ -122,85 +122,95 @@ def process(self, unused_element, side_input):\n             # No-op. We only make sure that the element is accessed.\n             next(it)\n           except StopIteration:\n-            return\n+            break\n \n     class MappingSideInputTestDoFn(beam.DoFn):\n-      \"\"\"Take a sequence of keys as an additional side input and for each\n-      key in the sequence checks the value for key in the dictionary.\"\"\"\n-      def process(self, unused_element, dict_side_input, keys_to_check):\n-        for key in keys_to_check:\n-          # No-op. We only make sure that the element is accessed.\n-          dict_side_input[key]\n-\n-    class GetRandomKeys(beam.DoFn):\n-      def __init__(self, n):\n-        self._n = n\n+      \"\"\"Iterates over first n keys in the dictionary and checks the value.\"\"\"\n+      def __init__(self, first_n):\n+        self._first_n = first_n\n \n       def process(self, unused_element, dict_side_input):\n-        import random\n-        n = min(self._n, len(dict_side_input))\n-        return random.sample(dict_side_input.keys(), n)\n+        i = 0\n+        for key in dict_side_input:\n+          if i == self._first_n:\n+            break\n+          # No-op. We only make sure that the element is accessed.\n+          dict_side_input[key]\n+          i += 1\n \n-    class AddEventTimestamps(beam.DoFn):\n-      \"\"\"Assign timestamp to each element of PCollection.\"\"\"\n-      def setup(self):\n-        self._timestamp = 0\n+    @typehints.with_input_types(int)\n+    @typehints.with_output_types(int)\n+    class AssignTimestamps(beam.DoFn):\n+      \"\"\"Produces timestamped values. Timestamps are equal to the value of the\n+      element.\"\"\"\n+      def __init__(self):\n+        # Avoid having to use save_main_session\n+        self.window = window", "originalCommit": "cd6ba1486b029ec7f653126006979c48c40d401e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE0MzQ1Nw==", "url": "https://github.com/apache/beam/pull/11856#discussion_r498143457", "bodyText": "Dataflow workers cannot use functions, classes and module imports defined in __main__ (the global scope) unless the --save_main_session pipeline option is specified. However, --save_main_session is likely to cause problems (for example: https://issues.apache.org/jira/browse/BEAM-6158) and I wanted to avoid using it. So this is a workaround. Thanks to it, I'm able to use window module without enabling  --save_main_session.", "author": "kamilwu", "createdAt": "2020-10-01T10:30:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MDIyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgwMDgzMg==", "url": "https://github.com/apache/beam/pull/11856#discussion_r497800832", "bodyText": "Add typehints here too?", "author": "tysonjh", "createdAt": "2020-09-30T21:07:09Z", "path": "sdks/python/apache_beam/testing/load_tests/sideinput_test.py", "diffHunk": "@@ -122,85 +122,95 @@ def process(self, unused_element, side_input):\n             # No-op. We only make sure that the element is accessed.\n             next(it)\n           except StopIteration:\n-            return\n+            break\n \n     class MappingSideInputTestDoFn(beam.DoFn):", "originalCommit": "cd6ba1486b029ec7f653126006979c48c40d401e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxMTUzMg==", "url": "https://github.com/apache/beam/pull/11856#discussion_r497811532", "bodyText": "Could you explain this a bit please? It seems like when there are <=1 windows it will result in the side_input having 1000 SDF sources but I don't really understand why.", "author": "tysonjh", "createdAt": "2020-09-30T21:29:22Z", "path": "sdks/python/apache_beam/testing/load_tests/sideinput_test.py", "diffHunk": "@@ -122,85 +122,95 @@ def process(self, unused_element, side_input):\n             # No-op. We only make sure that the element is accessed.\n             next(it)\n           except StopIteration:\n-            return\n+            break\n \n     class MappingSideInputTestDoFn(beam.DoFn):\n-      \"\"\"Take a sequence of keys as an additional side input and for each\n-      key in the sequence checks the value for key in the dictionary.\"\"\"\n-      def process(self, unused_element, dict_side_input, keys_to_check):\n-        for key in keys_to_check:\n-          # No-op. We only make sure that the element is accessed.\n-          dict_side_input[key]\n-\n-    class GetRandomKeys(beam.DoFn):\n-      def __init__(self, n):\n-        self._n = n\n+      \"\"\"Iterates over first n keys in the dictionary and checks the value.\"\"\"\n+      def __init__(self, first_n):\n+        self._first_n = first_n\n \n       def process(self, unused_element, dict_side_input):\n-        import random\n-        n = min(self._n, len(dict_side_input))\n-        return random.sample(dict_side_input.keys(), n)\n+        i = 0\n+        for key in dict_side_input:\n+          if i == self._first_n:\n+            break\n+          # No-op. We only make sure that the element is accessed.\n+          dict_side_input[key]\n+          i += 1\n \n-    class AddEventTimestamps(beam.DoFn):\n-      \"\"\"Assign timestamp to each element of PCollection.\"\"\"\n-      def setup(self):\n-        self._timestamp = 0\n+    @typehints.with_input_types(int)\n+    @typehints.with_output_types(int)\n+    class AssignTimestamps(beam.DoFn):\n+      \"\"\"Produces timestamped values. Timestamps are equal to the value of the\n+      element.\"\"\"\n+      def __init__(self):\n+        # Avoid having to use save_main_session\n+        self.window = window\n \n       def process(self, element):\n-        from apache_beam.transforms.combiners import window\n-        yield window.TimestampedValue(element, self._timestamp)\n-        self._timestamp += 1\n-\n-    input_pc = (\n-        self.pipeline\n-        | 'Read synthetic' >> beam.io.Read(\n-            SyntheticSource(self.parse_synthetic_source_options()))\n-        | 'Collect start time metrics' >> beam.ParDo(\n-            MeasureTime(self.metrics_namespace)))\n-\n-    if self.side_input_size != self.input_options.get('num_records'):\n-      side_input = (\n-          input_pc\n-          | 'Sample {} elements'.format(self.side_input_size) >>\n-          beam.combiners.Sample.FixedSizeGlobally(self.side_input_size)\n-          | 'Flatten a sequence' >> beam.FlatMap(lambda x: x))\n+        yield self.window.TimestampedValue(element, element)\n+\n+    @typehints.with_input_types(Any)\n+    @typehints.with_output_types(Dict[str, Union[int, str]])\n+    class GetSyntheticSDFOptions(beam.DoFn):\n+      def __init__(self, elements_per_record, key_size, value_size):\n+        self.elements_per_record = elements_per_record\n+        self.key_size = key_size\n+        self.value_size = value_size\n+\n+      def process(self, unused_element):\n+        yield {\n+            'num_records': self.elements_per_record,\n+            'key_size': self.key_size,\n+            'value_size': self.value_size,\n+            'initial_splitting_num_bundles': 0,\n+            'initial_splitting_desired_bundle_size': 0,\n+            'sleep_per_input_record_sec': 0,\n+            'initial_splitting': 'const'\n+        }\n+\n+    main_input = self.pipeline | 'Create' >> beam.Create(range(self.windows))\n+\n+    initial_elements = self.SDF_INITIAL_ELEMENTS\n+    if self.windows > 1:\n+      main_input = (\n+          main_input\n+          | 'Assign timestamps' >> beam.ParDo(AssignTimestamps())\n+          | 'Apply windows' >> beam.WindowInto(window.FixedWindows(1)))\n+      side_input = main_input\n+      initial_elements = self.windows\n     else:\n-      side_input = input_pc\n-\n-    if self.windows > 0:\n-      window_size = self.side_input_size / self.windows\n-      logging.info('Fixed windows of %s seconds will be applied', window_size)\n-      side_input = (\n-          side_input\n-          | 'Add event timestamps' >> beam.ParDo(AddEventTimestamps())\n-          | 'Apply windows' >> beam.WindowInto(\n-              beam.combiners.window.FixedWindows(window_size)))\n+      side_input = self.pipeline | 'Side input: create' >> beam.Create(\n+          range(initial_elements))", "originalCommit": "cd6ba1486b029ec7f653126006979c48c40d401e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE1MzE5Mg==", "url": "https://github.com/apache/beam/pull/11856#discussion_r498153192", "bodyText": "Generally speaking, initial_elements should be equal to the number of windows. But there is an edge case. By default, a global window is being used (so the number of windows is 1):\nself.get_option_or_default('window_count', default=1)\nI noticed the pipeline runs slower when the number of elements before SyntheticSDFAsSource step is 1. In other words, it's more efficient to generate a big load of data from, say, 1000 initial elements than from 1 element. More than a half of our test cases use only 1 window, so this is an important improvement.", "author": "kamilwu", "createdAt": "2020-10-01T10:49:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxMTUzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxMzA1Ng==", "url": "https://github.com/apache/beam/pull/11856#discussion_r497813056", "bodyText": "This should mention that by default the side_input will be subdivided into 1000 windows.", "author": "tysonjh", "createdAt": "2020-09-30T21:32:25Z", "path": "sdks/python/apache_beam/testing/load_tests/sideinput_test.py", "diffHunk": "@@ -27,11 +27,7 @@\n   * side_input_type (str) - Required. Specifies how the side input will be\n     materialized in ParDo operation. Choose from (dict, iter, list).\n   * window_count (int) - The number of fixed sized windows to subdivide the\n-    side input into. By default, no windows will be used.\n-  * side_input_size (int) - The size of the side input. Must be equal to or\n-    lower than the size of the main input. If lower, the side input will be\n-    created by applying a :class:`beam.combiners.Sample\n-    <apache_beam.transforms.combiners.Sample>` transform.\n+    side input into. By default, a global window will be used.", "originalCommit": "cd6ba1486b029ec7f653126006979c48c40d401e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE1NjgyNQ==", "url": "https://github.com/apache/beam/pull/11856#discussion_r498156825", "bodyText": "Isn't it the other way around? Take a look at the constructor, where we have:\nself.get_option_or_default('window_count', default=1)\nThis applies both to the main and the side inputs.", "author": "kamilwu", "createdAt": "2020-10-01T10:56:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxMzA1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg5MDg4OA==", "url": "https://github.com/apache/beam/pull/11856#discussion_r498890888", "bodyText": "Yes, I confused number of windows with the number of initial elements from the SyntheticSDFAsSource. Thanks!", "author": "tysonjh", "createdAt": "2020-10-02T15:24:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxMzA1Ng=="}], "type": "inlineReview"}, {"oid": "0e1228075546bca260c473a042a4bd79a8e08cd2", "url": "https://github.com/apache/beam/commit/0e1228075546bca260c473a042a4bd79a8e08cd2", "message": "[BEAM-7505] SideInput Python Load tests job", "committedDate": "2020-10-01T11:05:09Z", "type": "forcePushed"}, {"oid": "6e188d447b421c037715e52f4388913b923338ff", "url": "https://github.com/apache/beam/commit/6e188d447b421c037715e52f4388913b923338ff", "message": "[BEAM-7505] SideInput Python Load tests job", "committedDate": "2020-10-01T11:41:21Z", "type": "forcePushed"}, {"oid": "3e62f9778ec3078bb74c3589a0bf5f9994e295e2", "url": "https://github.com/apache/beam/commit/3e62f9778ec3078bb74c3589a0bf5f9994e295e2", "message": "[BEAM-7505] SideInput Python Load tests job", "committedDate": "2020-10-01T11:47:51Z", "type": "commit"}, {"oid": "3e62f9778ec3078bb74c3589a0bf5f9994e295e2", "url": "https://github.com/apache/beam/commit/3e62f9778ec3078bb74c3589a0bf5f9994e295e2", "message": "[BEAM-7505] SideInput Python Load tests job", "committedDate": "2020-10-01T11:47:51Z", "type": "forcePushed"}]}