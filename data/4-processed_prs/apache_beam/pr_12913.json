{"pr_number": 12913, "pr_title": "Minor fixes to the get-started/wordcount-example webpage.", "pr_createdAt": "2020-09-23T14:24:29Z", "pr_url": "https://github.com/apache/beam/pull/12913", "timeline": [{"oid": "c50f4a8de4d642d4f5c2e4324fb089f6624accad", "url": "https://github.com/apache/beam/commit/c50f4a8de4d642d4f5c2e4324fb089f6624accad", "message": "Minor fixes to the get-started/wordcount-example webpage.\n\n* Fixes incorrect parameters to the `AddTimestampFn` Python example.\n* Updates deprecated mention of ReadStringsFromPubSub / WriteStringsToPubSub", "committedDate": "2020-09-23T14:13:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA0ODY5OA==", "url": "https://github.com/apache/beam/pull/12913#discussion_r499048698", "bodyText": "An important difference is that ReadFromPubSub returns a bytes object (the raw message data).\nI would:\n\nrename lines to data\nadd an additional step below: lines = data | 'DecodeString' >> beam.Map(lambda d: d.decode('utf-8')))", "author": "udim", "createdAt": "2020-10-02T21:01:51Z", "path": "website/www/site/content/en/get-started/wordcount-example.md", "diffHunk": "@@ -1405,10 +1405,10 @@ messages from a Pub/Sub subscription or topic using\n {{< highlight py >}}\n   # Read from Pub/Sub into a PCollection.\n   if known_args.input_subscription:\n-    lines = p | beam.io.ReadStringsFromPubSub(\n+    lines = p | beam.io.ReadFromPubSub(", "originalCommit": "c50f4a8de4d642d4f5c2e4324fb089f6624accad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA1MDA2NQ==", "url": "https://github.com/apache/beam/pull/12913#discussion_r499050065", "bodyText": "Similarly here, assuming that strings are being written they would have to be converted to bytes first.\n_ = (output \n     | 'EncodeString' >> Map(lambda s: s.encode('utf-8'))\n     | beam.io.WriteToPubSub(known_args.output_topic))", "author": "udim", "createdAt": "2020-10-02T21:05:18Z", "path": "website/www/site/content/en/get-started/wordcount-example.md", "diffHunk": "@@ -1424,15 +1424,15 @@ outputs.\n \n This example uses an unbounded `PCollection` and streams the results to\n Google Pub/Sub. The code formats the results and writes them to a Pub/Sub topic\n-using [`beam.io.WriteStringsToPubSub`](https://beam.apache.org/releases/pydoc/{{< param release_latest >}}/apache_beam.io.gcp.pubsub.html#apache_beam.io.gcp.pubsub.WriteStringsToPubSub).\n+using [`beam.io.WriteToPubSub`](https://beam.apache.org/releases/pydoc/{{< param release_latest >}}/apache_beam.io.gcp.pubsub.html#apache_beam.io.gcp.pubsub.WriteToPubSub).\n \n {{< highlight java >}}\n   // This example is not currently available for the Beam SDK for Java.\n {{< /highlight >}}\n \n {{< highlight py >}}\n   # Write to Pub/Sub\n-  output | beam.io.WriteStringsToPubSub(known_args.output_topic)\n+  output | beam.io.WriteToPubSub(known_args.output_topic)", "originalCommit": "c50f4a8de4d642d4f5c2e4324fb089f6624accad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "74e65c0cf96561e0a520a6ea974f6446434e3358", "url": "https://github.com/apache/beam/commit/74e65c0cf96561e0a520a6ea974f6446434e3358", "message": "Decode/encode when reading/writing a string from/to PubSub", "committedDate": "2020-10-03T14:11:06Z", "type": "commit"}]}