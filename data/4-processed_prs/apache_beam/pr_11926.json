{"pr_number": 11926, "pr_title": "[BEAM-9615] Additional coder unit tests", "pr_createdAt": "2020-06-04T21:20:02Z", "pr_url": "https://github.com/apache/beam/pull/11926", "timeline": [{"oid": "d31285ff954c19bfd706eb96afb57b855938fa3c", "url": "https://github.com/apache/beam/commit/d31285ff954c19bfd706eb96afb57b855938fa3c", "message": "[BEAM-9615] Additional coder unit tests", "committedDate": "2020-06-04T21:17:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAxMjM4Mg==", "url": "https://github.com/apache/beam/pull/11926#discussion_r436012382", "bodyText": "Nit: data isn't an array but the error message presents it as one. I would have expected results[%d] there.", "author": "tysonjh", "createdAt": "2020-06-05T15:53:35Z", "path": "sdks/go/pkg/beam/coder_test.go", "diffHunk": "@@ -63,3 +64,57 @@ func TestJSONCoder(t *testing.T) {\n \t\t}\n \t}\n }\n+\n+func TestCoders(t *testing.T) {\n+\tptrString := \"test *string\"\n+\ttests := []interface{}{\n+\t\t43,\n+\t\t12431235,\n+\t\t-2,\n+\t\t0,\n+\t\t1,\n+\t\ttrue,\n+\t\t\"a string\",\n+\t\tmap[int64]string{1: \"one\", 11: \"oneone\", 21: \"twoone\", 1211: \"onetwooneone\"},\n+\t\tstruct {\n+\t\t\tA int\n+\t\t\tB *string\n+\t\t\tC bool\n+\t\t}{4, &ptrString, false},\n+\t\t[...]int64{1, 2, 3, 4, 5}, // array\n+\t\t[]int64{1, 2, 3, 4, 5},    // slice\n+\t\tstruct {\n+\t\t\tA []int\n+\t\t\tB [3]int\n+\t\t}{A: []int{1, 2, 3}, B: [...]int{4, 5, 6}},\n+\t}\n+\n+\tfor _, test := range tests {\n+\t\tvar results []string\n+\t\trt := reflect.TypeOf(test)\n+\t\tenc := NewElementEncoder(rt)\n+\t\tfor i := 0; i < 10; i++ {\n+\t\t\tvar buf bytes.Buffer\n+\t\t\tif err := enc.Encode(test, &buf); err != nil {\n+\t\t\t\tt.Fatalf(\"Failed to encode %v: %v\", tests, err)\n+\t\t\t}\n+\t\t\tresults = append(results, string(buf.Bytes()))\n+\t\t}\n+\t\tfor i, data := range results {\n+\t\t\tif data != results[0] {\n+\t\t\t\tt.Errorf(\"coder not deterministic: data[%d]: %v != %v \", i, data, results[0])", "originalCommit": "d31285ff954c19bfd706eb96afb57b855938fa3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAzMjI0MA==", "url": "https://github.com/apache/beam/pull/11926#discussion_r436032240", "bodyText": "Good catch! Fixed to make it clearer what the test is checking for.", "author": "lostluck", "createdAt": "2020-06-05T16:29:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAxMjM4Mg=="}], "type": "inlineReview"}, {"oid": "f2f917694cc2a0ff6f334b28e64642f97af2587b", "url": "https://github.com/apache/beam/commit/f2f917694cc2a0ff6f334b28e64642f97af2587b", "message": "!fixup make test output unambiguous", "committedDate": "2020-06-05T16:28:38Z", "type": "commit"}]}