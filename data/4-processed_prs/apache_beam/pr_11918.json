{"pr_number": 11918, "pr_title": "[BEAM-10188] Add instructions to programmatically publish release to Github", "pr_createdAt": "2020-06-04T06:05:40Z", "pr_url": "https://github.com/apache/beam/pull/11918", "timeline": [{"oid": "59b87d87c3cedf89fda11f5cf31c066c852064d6", "url": "https://github.com/apache/beam/commit/59b87d87c3cedf89fda11f5cf31c066c852064d6", "message": "Add instructions to programmatically publish release to Github\n\nFixes BEAM-10188", "committedDate": "2020-06-04T06:03:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0NjE3OA==", "url": "https://github.com/apache/beam/pull/11918#discussion_r435346178", "bodyText": "This should be apache/beam :)", "author": "TheNeuralBit", "createdAt": "2020-06-04T15:26:22Z", "path": "website/www/site/content/en/contribute/release-guide.md", "diffHunk": "@@ -1134,12 +1134,29 @@ Create and push a new signed tag for the released version by copying the tag for\n     git tag -s \"$VERSION_TAG\" \"$RC_TAG\"\n     git push upstream \"$VERSION_TAG\"\n \n-After the tag is uploaded, publish the release in the Github UI.\n-1. Navigate to `https://github.com/apache/beam/releases/tag/$VERSION_TAG`.\n-1. Click the \"Edit tag\" button.\n-1. Give the release a title, such as `Beam 2.21.0`.\n-1. For the release description, copy the current version's changes from `CHANGES.md`. (You may want to touch up the formatting a bit.)\n-1. Click the \"Publish release\" button.\n+After the tag is uploaded, publish the release by calling the Github API (Make sure that the `GITHUB_TOKEN` variable is set):\n+\n+    json_escape () {\n+        printf '%s' \"$1\" | python -c 'import json,sys; print(json.dumps(sys.stdin.read()))'\n+    }\n+    \n+    RELEASE_NOTES=$(sed -n '/^We are happy/,$p' website/www/site/content/en/blog/beam-${RELEASE}.md)\n+    ESCAPED_NOTES=$(json_escape ${RELEASE_NOTES})\n+    \n+    RELEASE_JSON=\"$(cat <<-EOF\n+    {\n+      \"tag_name\": \"${VERSION_TAG}\",\n+      \"name\": \"Beam ${RELEASE} release\",\n+      \"body\": ${ESCAPED_NOTES}\n+    }\n+    EOF\n+    )\"\n+    \n+    curl https://api.github.com/repos/jphalip/beam/releases \\", "originalCommit": "59b87d87c3cedf89fda11f5cf31c066c852064d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1MTA3MA==", "url": "https://github.com/apache/beam/pull/11918#discussion_r435351070", "bodyText": "There's an earlier step in the release guide that has us create a github token and write it to script.config. It would be nice if this were a script in release/src/main/scripts/ and could read the same token from script.config.", "author": "TheNeuralBit", "createdAt": "2020-06-04T15:33:09Z", "path": "website/www/site/content/en/contribute/release-guide.md", "diffHunk": "@@ -1134,12 +1134,29 @@ Create and push a new signed tag for the released version by copying the tag for\n     git tag -s \"$VERSION_TAG\" \"$RC_TAG\"\n     git push upstream \"$VERSION_TAG\"\n \n-After the tag is uploaded, publish the release in the Github UI.\n-1. Navigate to `https://github.com/apache/beam/releases/tag/$VERSION_TAG`.\n-1. Click the \"Edit tag\" button.\n-1. Give the release a title, such as `Beam 2.21.0`.\n-1. For the release description, copy the current version's changes from `CHANGES.md`. (You may want to touch up the formatting a bit.)\n-1. Click the \"Publish release\" button.\n+After the tag is uploaded, publish the release by calling the Github API (Make sure that the `GITHUB_TOKEN` variable is set):", "originalCommit": "59b87d87c3cedf89fda11f5cf31c066c852064d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2MjAxOA==", "url": "https://github.com/apache/beam/pull/11918#discussion_r435362018", "bodyText": "It could be more robust to look for the license comment, I'm not quite sure how this sed command works but if you can make it retrieve everything after a multiline match something like this could work: <!--.*Apache License, Version 2\\.0.*-->.\nI'd be fine leaving it as-is, but if we do there should be some kind of trap for when \"We are happy\" isn't matched so we don't unintentionally publish empty release notes.", "author": "TheNeuralBit", "createdAt": "2020-06-04T15:45:38Z", "path": "website/www/site/content/en/contribute/release-guide.md", "diffHunk": "@@ -1134,12 +1134,29 @@ Create and push a new signed tag for the released version by copying the tag for\n     git tag -s \"$VERSION_TAG\" \"$RC_TAG\"\n     git push upstream \"$VERSION_TAG\"\n \n-After the tag is uploaded, publish the release in the Github UI.\n-1. Navigate to `https://github.com/apache/beam/releases/tag/$VERSION_TAG`.\n-1. Click the \"Edit tag\" button.\n-1. Give the release a title, such as `Beam 2.21.0`.\n-1. For the release description, copy the current version's changes from `CHANGES.md`. (You may want to touch up the formatting a bit.)\n-1. Click the \"Publish release\" button.\n+After the tag is uploaded, publish the release by calling the Github API (Make sure that the `GITHUB_TOKEN` variable is set):\n+\n+    json_escape () {\n+        printf '%s' \"$1\" | python -c 'import json,sys; print(json.dumps(sys.stdin.read()))'\n+    }\n+    \n+    RELEASE_NOTES=$(sed -n '/^We are happy/,$p' website/www/site/content/en/blog/beam-${RELEASE}.md)", "originalCommit": "59b87d87c3cedf89fda11f5cf31c066c852064d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1Njc1NA==", "url": "https://github.com/apache/beam/pull/11918#discussion_r435356754", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                curl https://api.github.com/repos/jphalip/beam/releases \\\n          \n          \n            \n                curl https://api.github.com/repos/apache/beam/releases \\", "author": "ibzib", "createdAt": "2020-06-04T15:38:54Z", "path": "website/www/site/content/en/contribute/release-guide.md", "diffHunk": "@@ -1134,12 +1134,29 @@ Create and push a new signed tag for the released version by copying the tag for\n     git tag -s \"$VERSION_TAG\" \"$RC_TAG\"\n     git push upstream \"$VERSION_TAG\"\n \n-After the tag is uploaded, publish the release in the Github UI.\n-1. Navigate to `https://github.com/apache/beam/releases/tag/$VERSION_TAG`.\n-1. Click the \"Edit tag\" button.\n-1. Give the release a title, such as `Beam 2.21.0`.\n-1. For the release description, copy the current version's changes from `CHANGES.md`. (You may want to touch up the formatting a bit.)\n-1. Click the \"Publish release\" button.\n+After the tag is uploaded, publish the release by calling the Github API (Make sure that the `GITHUB_TOKEN` variable is set):\n+\n+    json_escape () {\n+        printf '%s' \"$1\" | python -c 'import json,sys; print(json.dumps(sys.stdin.read()))'\n+    }\n+    \n+    RELEASE_NOTES=$(sed -n '/^We are happy/,$p' website/www/site/content/en/blog/beam-${RELEASE}.md)\n+    ESCAPED_NOTES=$(json_escape ${RELEASE_NOTES})\n+    \n+    RELEASE_JSON=\"$(cat <<-EOF\n+    {\n+      \"tag_name\": \"${VERSION_TAG}\",\n+      \"name\": \"Beam ${RELEASE} release\",\n+      \"body\": ${ESCAPED_NOTES}\n+    }\n+    EOF\n+    )\"\n+    \n+    curl https://api.github.com/repos/jphalip/beam/releases \\", "originalCommit": "59b87d87c3cedf89fda11f5cf31c066c852064d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2MzYzMw==", "url": "https://github.com/apache/beam/pull/11918#discussion_r435363633", "bodyText": "Maybe instead we could just remove the webpage header. (We could probably keep the license, since it's in a comment.)", "author": "ibzib", "createdAt": "2020-06-04T15:48:05Z", "path": "website/www/site/content/en/contribute/release-guide.md", "diffHunk": "@@ -1134,12 +1134,29 @@ Create and push a new signed tag for the released version by copying the tag for\n     git tag -s \"$VERSION_TAG\" \"$RC_TAG\"\n     git push upstream \"$VERSION_TAG\"\n \n-After the tag is uploaded, publish the release in the Github UI.\n-1. Navigate to `https://github.com/apache/beam/releases/tag/$VERSION_TAG`.\n-1. Click the \"Edit tag\" button.\n-1. Give the release a title, such as `Beam 2.21.0`.\n-1. For the release description, copy the current version's changes from `CHANGES.md`. (You may want to touch up the formatting a bit.)\n-1. Click the \"Publish release\" button.\n+After the tag is uploaded, publish the release by calling the Github API (Make sure that the `GITHUB_TOKEN` variable is set):\n+\n+    json_escape () {\n+        printf '%s' \"$1\" | python -c 'import json,sys; print(json.dumps(sys.stdin.read()))'\n+    }\n+    \n+    RELEASE_NOTES=$(sed -n '/^We are happy/,$p' website/www/site/content/en/blog/beam-${RELEASE}.md)", "originalCommit": "59b87d87c3cedf89fda11f5cf31c066c852064d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2NDM5Nw==", "url": "https://github.com/apache/beam/pull/11918#discussion_r435364397", "bodyText": "Perhaps we should print the body and ask for user confirmation before uploading.", "author": "ibzib", "createdAt": "2020-06-04T15:49:16Z", "path": "website/www/site/content/en/contribute/release-guide.md", "diffHunk": "@@ -1134,12 +1134,29 @@ Create and push a new signed tag for the released version by copying the tag for\n     git tag -s \"$VERSION_TAG\" \"$RC_TAG\"\n     git push upstream \"$VERSION_TAG\"\n \n-After the tag is uploaded, publish the release in the Github UI.\n-1. Navigate to `https://github.com/apache/beam/releases/tag/$VERSION_TAG`.\n-1. Click the \"Edit tag\" button.\n-1. Give the release a title, such as `Beam 2.21.0`.\n-1. For the release description, copy the current version's changes from `CHANGES.md`. (You may want to touch up the formatting a bit.)\n-1. Click the \"Publish release\" button.\n+After the tag is uploaded, publish the release by calling the Github API (Make sure that the `GITHUB_TOKEN` variable is set):\n+\n+    json_escape () {\n+        printf '%s' \"$1\" | python -c 'import json,sys; print(json.dumps(sys.stdin.read()))'\n+    }\n+    \n+    RELEASE_NOTES=$(sed -n '/^We are happy/,$p' website/www/site/content/en/blog/beam-${RELEASE}.md)\n+    ESCAPED_NOTES=$(json_escape ${RELEASE_NOTES})\n+    \n+    RELEASE_JSON=\"$(cat <<-EOF\n+    {\n+      \"tag_name\": \"${VERSION_TAG}\",\n+      \"name\": \"Beam ${RELEASE} release\",\n+      \"body\": ${ESCAPED_NOTES}\n+    }\n+    EOF\n+    )\"\n+    \n+    curl https://api.github.com/repos/jphalip/beam/releases \\", "originalCommit": "59b87d87c3cedf89fda11f5cf31c066c852064d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4ac884167b95f3384bc01c477bf47da861e43056", "url": "https://github.com/apache/beam/commit/4ac884167b95f3384bc01c477bf47da861e43056", "message": "Move release notes commands to separate script", "committedDate": "2020-06-04T19:03:10Z", "type": "commit"}, {"oid": "352ff8567e1919d37d26000840f611e8886f91d5", "url": "https://github.com/apache/beam/commit/352ff8567e1919d37d26000840f611e8886f91d5", "message": "Add confirmation message to Github release notes script", "committedDate": "2020-06-04T19:15:47Z", "type": "commit"}, {"oid": "600c9bbb4e2a3a18450ab4b21bf66fdfb1796987", "url": "https://github.com/apache/beam/commit/600c9bbb4e2a3a18450ab4b21bf66fdfb1796987", "message": "Load env vars in Github release notes script", "committedDate": "2020-06-04T19:18:46Z", "type": "commit"}, {"oid": "4599418584775f6df2f44d88aa3ed856a2e7762b", "url": "https://github.com/apache/beam/commit/4599418584775f6df2f44d88aa3ed856a2e7762b", "message": "Small tweak to github release notes script", "committedDate": "2020-06-04T19:21:28Z", "type": "commit"}]}