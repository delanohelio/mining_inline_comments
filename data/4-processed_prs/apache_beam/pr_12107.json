{"pr_number": 12107, "pr_title": "Interactive Environment Inspector for messaging", "pr_createdAt": "2020-06-26T21:15:13Z", "pr_url": "https://github.com/apache/beam/pull/12107", "timeline": [{"oid": "e68e94cb1f3ff2a053cbe16fee79bd406c741cec", "url": "https://github.com/apache/beam/commit/e68e94cb1f3ff2a053cbe16fee79bd406c741cec", "message": "Interactive Environment Inspector for messaging\n\n1. Added messaging package to expose interactive environment state\n   through a singleton interactive environment inspector.\n2. Added a to_json util to convert native python objects to json string\n   for messaging.\n3. Applications can use the inspector's API to communicate with a\n   running kernel.", "committedDate": "2020-06-30T00:18:20Z", "type": "commit"}, {"oid": "e68e94cb1f3ff2a053cbe16fee79bd406c741cec", "url": "https://github.com/apache/beam/commit/e68e94cb1f3ff2a053cbe16fee79bd406c741cec", "message": "Interactive Environment Inspector for messaging\n\n1. Added messaging package to expose interactive environment state\n   through a singleton interactive environment inspector.\n2. Added a to_json util to convert native python objects to json string\n   for messaging.\n3. Applications can use the inspector's API to communicate with a\n   running kernel.", "committedDate": "2020-06-30T00:18:20Z", "type": "forcePushed"}, {"oid": "9bfa564050aa79580ae9b25b97afefc3e934acef", "url": "https://github.com/apache/beam/commit/9bfa564050aa79580ae9b25b97afefc3e934acef", "message": "Restrict the test environment constraint.", "committedDate": "2020-06-30T21:48:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExMjgyNg==", "url": "https://github.com/apache/beam/pull/12107#discussion_r448112826", "bodyText": "The callable returns string, right?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              # type: (Callable[..., Any]) -> Callable[..., Any]\n          \n          \n            \n              # type: (Callable[..., Any]) -> Callable[..., str]", "author": "pabloem", "createdAt": "2020-07-01T04:47:04Z", "path": "sdks/python/apache_beam/runners/interactive/utils.py", "diffHunk": "@@ -204,3 +205,23 @@ def run_within_progress_indicator(*args, **kwargs):\n       return func(*args, **kwargs)\n \n   return run_within_progress_indicator\n+\n+\n+def as_json(func):\n+  # type: (Callable[..., Any]) -> Callable[..., Any]", "originalCommit": "9bfa564050aa79580ae9b25b97afefc3e934acef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExNzY4NQ==", "url": "https://github.com/apache/beam/pull/12107#discussion_r448117685", "bodyText": "nit: you could do something like json.loads(dummy(), SAMPLE_DATA) instead of depending on the ordering.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    dummy(), '{\"a\": [1, 2, 3], \"b\": 4, \"c\": \"5\", \"d\": {\"e\": \"f\"}}')\n          \n          \n            \n                    json.loads(dummy()), {\"a\": [1, 2, 3], \"b\": 4, \"c\": \"5\", \"d\": {\"e\": \"f\"}})", "author": "pabloem", "createdAt": "2020-07-01T05:07:22Z", "path": "sdks/python/apache_beam/runners/interactive/utils_test.py", "diffHunk": "@@ -195,5 +195,25 @@ def progress_indicated_dummy():\n     mocked_javascript.assert_called_once()\n \n \n+@unittest.skipIf(\n+    not ie.current_env().is_interactive_ready,\n+    '[interactive] dependency is not installed.')\n+@unittest.skipIf(\n+    sys.version_info < (3, 6), 'The tests require at least Python 3.6 to work.')\n+class MessagingUtilTest(unittest.TestCase):\n+  def setUp(self):\n+    ie.new_env()\n+\n+  def test_as_json_decorator(self):\n+    @utils.as_json\n+    def dummy():\n+      return {'a': [1, 2, 3], 'b': 4, 'c': '5', 'd': {'e': 'f'}}\n+\n+    # As of Python 3.6, for the CPython implementation of Python,\n+    # dictionaries remember the order of items inserted.\n+    self.assertEqual(\n+        dummy(), '{\"a\": [1, 2, 3], \"b\": 4, \"c\": \"5\", \"d\": {\"e\": \"f\"}}')", "originalCommit": "9bfa564050aa79580ae9b25b97afefc3e934acef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5570688e376f73be12fb14c0100e72a701f7b7c9", "url": "https://github.com/apache/beam/commit/5570688e376f73be12fb14c0100e72a701f7b7c9", "message": "fix comments", "committedDate": "2020-07-07T23:36:40Z", "type": "commit"}]}