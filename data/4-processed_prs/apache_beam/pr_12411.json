{"pr_number": 12411, "pr_title": "[BEAM-10603] Add ElementLimiters which allows the cache to prematurely based on read elements.", "pr_createdAt": "2020-07-29T17:58:02Z", "pr_url": "https://github.com/apache/beam/pull/12411", "timeline": [{"oid": "0a25b7a0ce4d7547f0eaf8ffd31bf793fefecddb", "url": "https://github.com/apache/beam/commit/0a25b7a0ce4d7547f0eaf8ffd31bf793fefecddb", "message": "Add ElementLimiters which allows the cache to prematurely based on read elements.\n\nChange-Id: I9f7030999f2ce38073ca72512c71794dbdbc301e", "committedDate": "2020-07-29T17:48:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU2MTMwNg==", "url": "https://github.com/apache/beam/pull/12411#discussion_r462561306", "bodyText": "nit: would it be simpler if we default this to 0 rather than None? It would let us eliminate the None checks in the methods.", "author": "davidyan74", "createdAt": "2020-07-29T20:15:19Z", "path": "sdks/python/apache_beam/runners/interactive/options/capture_limiters.py", "diffHunk": "@@ -71,3 +87,62 @@ def _trigger(self):\n \n   def is_triggered(self):\n     return self._triggered\n+\n+\n+class CountLimiter(ElementLimiter):\n+  \"\"\"Limits by counting the number of elements seen.\"\"\"\n+  def __init__(self, max_count):\n+    self._max_count = max_count\n+    self._count = 0\n+\n+  def update(self, e):\n+    # A TestStreamFileRecord can contain many elements at once. If e is a file\n+    # record, then count the number of elements in the bundle.\n+    if isinstance(e, TestStreamFileRecord):\n+      if not e.recorded_event.element_event:\n+        return\n+      self._count += len(e.recorded_event.element_event.elements)\n+\n+    # Otherwise, count everything else but the header of the file since it is\n+    # not an element.\n+    elif not isinstance(e, TestStreamFileHeader):\n+      self._count += 1\n+\n+  def is_triggered(self):\n+    return self._count >= self._max_count\n+\n+\n+class ProcessingTimeLimiter(ElementLimiter):\n+  \"\"\"Limits by how long the ProcessingTime passed in the element stream.\n+\n+  This measures the duration from either a constructor argument or from the\n+  first element in the stream. Each subsequent element has a delta\n+  \"advance_duration\" that moves the internal clock forward. This triggers when\n+  the duration from the internal clock and the start exceeds the given duration.\n+  \"\"\"\n+  def __init__(self, max_duration_secs, start_secs=None):", "originalCommit": "0a25b7a0ce4d7547f0eaf8ffd31bf793fefecddb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYzNzI0Nw==", "url": "https://github.com/apache/beam/pull/12411#discussion_r462637247", "bodyText": "Ack. I looked around and I wasn't using the start parameter, so I removed it.", "author": "rohdesamuel", "createdAt": "2020-07-29T22:58:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU2MTMwNg=="}], "type": "inlineReview"}, {"oid": "e27c45de5b7c5749dec8ec2857dc68e044f8ecfa", "url": "https://github.com/apache/beam/commit/e27c45de5b7c5749dec8ec2857dc68e044f8ecfa", "message": "Remove start_secs parameter.\n\nChange-Id: I78bf74ed0a97b89a1965070d9bac6568c7ce1e22", "committedDate": "2020-07-29T22:57:23Z", "type": "commit"}]}