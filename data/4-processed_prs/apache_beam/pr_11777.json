{"pr_number": 11777, "pr_title": "[BEAM-10054] Fix watermark hold for on_time_pane", "pr_createdAt": "2020-05-21T16:05:52Z", "pr_url": "https://github.com/apache/beam/pull/11777", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3ODY5OA==", "url": "https://github.com/apache/beam/pull/11777#discussion_r428778698", "bodyText": "Note that this is the fix in question. Please check @rohdesamuel if that makes sense.", "author": "mxm", "createdAt": "2020-05-21T16:47:44Z", "path": "sdks/python/apache_beam/transforms/trigger.py", "diffHunk": "@@ -1368,7 +1368,7 @@ def _output(\n     if timestamp is None:\n       # If no watermark hold was set, output at end of window.\n       timestamp = window.max_timestamp()\n-    elif input_watermark < window.end and self.trigger_fn.has_ontime_pane():\n+    elif output_watermark < window.end and self.trigger_fn.has_ontime_pane():", "originalCommit": "e48e543788a076e916ed7151475d5b79fee6be9c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM0MTM2OA==", "url": "https://github.com/apache/beam/pull/11777#discussion_r431341368", "bodyText": "Yeah this looks good, thanks for thanks for the fix.", "author": "rohdesamuel", "createdAt": "2020-05-27T18:03:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3ODY5OA=="}], "type": "inlineReview"}, {"oid": "fa0e94af6fd3cbf70c91f5b8c53610b37307d0ab", "url": "https://github.com/apache/beam/commit/fa0e94af6fd3cbf70c91f5b8c53610b37307d0ab", "message": "[BEAM-10054] Add test which demonstrates a pipeline stall", "committedDate": "2020-06-03T11:44:17Z", "type": "commit"}, {"oid": "6f028463d4af086d97fbbe294e94592b9e59f131", "url": "https://github.com/apache/beam/commit/6f028463d4af086d97fbbe294e94592b9e59f131", "message": "[BEAM-10054] Fix watermark hold for on_time_pane to prevent pipeline stall\n\nWe have a test pipeline which runs with the DirectRunner. When upgrading from\n2.18.0 to 2.21.0 the test failed with the following exception:\n\n```\ntp = Exception('Monitor task detected a pipeline stall.',), value = None, tb = None\n\n    def raise_(tp, value=None, tb=None):\n        \"\"\"\n        A function that matches the Python 2.x ``raise`` statement. This\n        allows re-raising exceptions with the cls value and traceback on\n        Python 2 and 3.\n        \"\"\"\n        if value is not None and isinstance(tp, Exception):\n            raise TypeError(\"instance exception may not have a separate value\")\n        if value is not None:\n            exc = tp(value)\n        else:\n            exc = tp\n        if exc.__traceback__ is not tb:\n            raise exc.with_traceback(tb)\n>       raise exc\nE       Exception: Monitor task detected a pipeline stall.\n```\n\nI was able to bisect the error. This commit introduced the failure:\nea9b1f350b88c2996cafb4d24351869e82857731\n\nThe fix lets to the pipeline running correctly.", "committedDate": "2020-06-03T11:44:17Z", "type": "commit"}, {"oid": "fa0e94af6fd3cbf70c91f5b8c53610b37307d0ab", "url": "https://github.com/apache/beam/commit/fa0e94af6fd3cbf70c91f5b8c53610b37307d0ab", "message": "[BEAM-10054] Add test which demonstrates a pipeline stall", "committedDate": "2020-06-03T11:44:17Z", "type": "forcePushed"}, {"oid": "942115ae1273ec532b77fa52dc1e93e1dd078f9c", "url": "https://github.com/apache/beam/commit/942115ae1273ec532b77fa52dc1e93e1dd078f9c", "message": "linting", "committedDate": "2020-06-03T12:13:38Z", "type": "commit"}, {"oid": "942115ae1273ec532b77fa52dc1e93e1dd078f9c", "url": "https://github.com/apache/beam/commit/942115ae1273ec532b77fa52dc1e93e1dd078f9c", "message": "linting", "committedDate": "2020-06-03T12:13:38Z", "type": "forcePushed"}]}