{"pr_number": 12289, "pr_title": "[BEAM-10341] Support drain in Python SDK", "pr_createdAt": "2020-07-17T00:19:36Z", "pr_url": "https://github.com/apache/beam/pull/12289", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjcwNzk1MA==", "url": "https://github.com/apache/beam/pull/12289#discussion_r456707950", "bodyText": "Please fix the type, after #12275 it is:\nOptional[Tuple[Iterable[SdfSplitResultsPrimary], Iterable[SdfSplitResultsResidual]]", "author": "lukecwik", "createdAt": "2020-07-17T23:01:53Z", "path": "sdks/python/apache_beam/runners/worker/operations.py", "diffHunk": "@@ -743,6 +743,32 @@ def pcollection_count_monitoring_infos(self, tag_to_pcollection_id):\n     return infos\n \n \n+class SdfTruncateSizedRestrictions(DoOperation):\n+  def __init__(self, *args, **kwargs):\n+    super(SdfTruncateSizedRestrictions, self).__init__(*args, **kwargs)\n+    self.sdf_process_op = None\n+    self.consumers_count = 0\n+\n+  def current_element_progress(self):\n+    # type: () -> Optional[iobase.RestrictionProgress]\n+    if self.consumers_count == 1 and self.sdf_process_op is None:\n+      return None\n+    return self.sdf_process_op.current_element_progress()\n+\n+  def try_split(self, fraction_of_remainder):  # type: (...) -> Optional[Any]", "originalCommit": "85969b248b4dda63b094643fc8cddb38bf14eb24", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjcwODUyNg==", "url": "https://github.com/apache/beam/pull/12289#discussion_r456708526", "bodyText": "We shouldn't need to record which is the sdf_process_op, we should be able to use self.receivers[0].try_split and self.receivers[0].current_element_progress regardless. It will only forward the split/progress if there is exactly one consumer and it supports splitting.", "author": "lukecwik", "createdAt": "2020-07-17T23:04:26Z", "path": "sdks/python/apache_beam/runners/worker/operations.py", "diffHunk": "@@ -743,6 +743,32 @@ def pcollection_count_monitoring_infos(self, tag_to_pcollection_id):\n     return infos\n \n \n+class SdfTruncateSizedRestrictions(DoOperation):\n+  def __init__(self, *args, **kwargs):\n+    super(SdfTruncateSizedRestrictions, self).__init__(*args, **kwargs)\n+    self.sdf_process_op = None\n+    self.consumers_count = 0\n+\n+  def current_element_progress(self):\n+    # type: () -> Optional[iobase.RestrictionProgress]\n+    if self.consumers_count == 1 and self.sdf_process_op is None:\n+      return None\n+    return self.sdf_process_op.current_element_progress()\n+\n+  def try_split(self, fraction_of_remainder):  # type: (...) -> Optional[Any]\n+    if self.consumers_count == 1 and self.sdf_process_op is None:\n+      return None\n+    return self.sdf_process_op.try_split(fraction_of_remainder)\n+\n+  def add_receiver(self, operation, output_index=0):", "originalCommit": "85969b248b4dda63b094643fc8cddb38bf14eb24", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "03c640af93d9bfde6cbc2670eff42bbb6bc44971", "url": "https://github.com/apache/beam/commit/03c640af93d9bfde6cbc2670eff42bbb6bc44971", "message": "Address comments.", "committedDate": "2020-07-18T00:45:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc0NTA2Mw==", "url": "https://github.com/apache/beam/pull/12289#discussion_r456745063", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return self.consumers[0][0].current_element_progress()\n          \n          \n            \n                return self.receivers[0].current_element_progress()\n          \n      \n    \n    \n  \n\nWe should be relying on the ConsumerSet to properly forward the split/progress call. See:\n\n  \n    \n      beam/sdks/python/apache_beam/runners/worker/operations.py\n    \n    \n         Line 150\n      in\n      af2d6b0\n    \n    \n    \n    \n\n        \n          \n           def current_element_progress(self): \n        \n    \n  \n\n\n\n  \n    \n      beam/sdks/python/apache_beam/runners/worker/operations.py\n    \n    \n         Line 198\n      in\n      af2d6b0\n    \n    \n    \n    \n\n        \n          \n           def try_split(self, fraction_of_remainder):", "author": "lukecwik", "createdAt": "2020-07-18T03:57:52Z", "path": "sdks/python/apache_beam/runners/worker/operations.py", "diffHunk": "@@ -743,6 +743,20 @@ def pcollection_count_monitoring_infos(self, tag_to_pcollection_id):\n     return infos\n \n \n+class SdfTruncateSizedRestrictions(DoOperation):\n+  def __init__(self, *args, **kwargs):\n+    super(SdfTruncateSizedRestrictions, self).__init__(*args, **kwargs)\n+\n+  def current_element_progress(self):\n+    # type: () -> Optional[iobase.RestrictionProgress]\n+    return self.consumers[0][0].current_element_progress()", "originalCommit": "8e0c42fa89c0d6a53c9f53228b842bd5622e3764", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc0NTA3NQ==", "url": "https://github.com/apache/beam/pull/12289#discussion_r456745075", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return self.consumers[0][0].try_split(fraction_of_remainder)\n          \n          \n            \n                return self.receivers[0].try_split(fraction_of_remainder)\n          \n      \n    \n    \n  \n\nWe should be relying on the ConsumerSet to properly forward the split/progress call. See:\n\n  \n    \n      beam/sdks/python/apache_beam/runners/worker/operations.py\n    \n    \n         Line 150\n      in\n      af2d6b0\n    \n    \n    \n    \n\n        \n          \n           def current_element_progress(self): \n        \n    \n  \n\n\n\n  \n    \n      beam/sdks/python/apache_beam/runners/worker/operations.py\n    \n    \n         Line 198\n      in\n      af2d6b0\n    \n    \n    \n    \n\n        \n          \n           def try_split(self, fraction_of_remainder):", "author": "lukecwik", "createdAt": "2020-07-18T03:58:10Z", "path": "sdks/python/apache_beam/runners/worker/operations.py", "diffHunk": "@@ -743,6 +743,20 @@ def pcollection_count_monitoring_infos(self, tag_to_pcollection_id):\n     return infos\n \n \n+class SdfTruncateSizedRestrictions(DoOperation):\n+  def __init__(self, *args, **kwargs):\n+    super(SdfTruncateSizedRestrictions, self).__init__(*args, **kwargs)\n+\n+  def current_element_progress(self):\n+    # type: () -> Optional[iobase.RestrictionProgress]\n+    return self.consumers[0][0].current_element_progress()\n+\n+  def try_split(\n+      self, fraction_of_remainder\n+  ):  # type: (...) -> Optional[Tuple[Iterable[SdfSplitResultsPrimary], Iterable[SdfSplitResultsResidual]]]\n+    return self.consumers[0][0].try_split(fraction_of_remainder)", "originalCommit": "8e0c42fa89c0d6a53c9f53228b842bd5622e3764", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc0NTIwMw==", "url": "https://github.com/apache/beam/pull/12289#discussion_r456745203", "bodyText": "Lets not add this URN until we are sure with internal testing with Dataflow just in case we find that we need to fix/change something.", "author": "lukecwik", "createdAt": "2020-07-18T03:59:03Z", "path": "sdks/python/apache_beam/transforms/environments.py", "diffHunk": "@@ -595,6 +595,7 @@ def _python_sdk_capabilities_iter():\n   yield common_urns.protocols.LEGACY_PROGRESS_REPORTING.urn\n   yield common_urns.protocols.WORKER_STATUS.urn\n   yield 'beam:version:sdk_base:' + DockerEnvironment.default_docker_image()\n+  yield common_urns.sdf_components.TRUNCATE_SIZED_RESTRICTION.urn", "originalCommit": "8e0c42fa89c0d6a53c9f53228b842bd5622e3764", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4decedd9cb6e8e4eef3a41a349a44466eea50f06", "url": "https://github.com/apache/beam/commit/4decedd9cb6e8e4eef3a41a349a44466eea50f06", "message": "Insert TruncateSizedRestriction when pipeline starts to drain.", "committedDate": "2020-07-18T04:17:44Z", "type": "commit"}, {"oid": "4decedd9cb6e8e4eef3a41a349a44466eea50f06", "url": "https://github.com/apache/beam/commit/4decedd9cb6e8e4eef3a41a349a44466eea50f06", "message": "Insert TruncateSizedRestriction when pipeline starts to drain.", "committedDate": "2020-07-18T04:17:44Z", "type": "forcePushed"}]}