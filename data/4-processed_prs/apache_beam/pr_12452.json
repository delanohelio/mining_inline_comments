{"pr_number": 12452, "pr_title": "[BEAM-10623] Add workflow to run Beam python tests on Linux/Windows/Mac platforms", "pr_createdAt": "2020-08-03T13:08:57Z", "pr_url": "https://github.com/apache/beam/pull/12452", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNDE2OQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r464714169", "bodyText": "Given the size of this run, maybe we can limit this to 'schedule' only. Do you know how long it takes to run this?", "author": "aaltay", "createdAt": "2020-08-03T23:29:15Z", "path": ".github/workflows/python_tests.yml", "diffHunk": "@@ -0,0 +1,196 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+name: Python tests\n+\n+on:\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/python/**', 'model/**']\n+\n+\n+env:\n+  GCP_WHEELS_STAGING_PATH: \"gs://${{ secrets.GCP_BUCKET }}/${GITHUB_REF##*/}/${GITHUB_SHA}-${GITHUB_RUN_ID}/\"\n+  GCP_BUCKET: ${{ secrets.GCP_BUCKET }}  # beam-wheels-staging\n+  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}  # apache-beam-testing\n+  GCP_REGION: ${{ secrets.GCP_REGION}}  # us-central\n+\n+jobs:\n+\n+  build_python_sdk_source:\n+    name: 'Build Python SDK Source'\n+    if: github.repository_owner == 'apache' && (github.event_name == 'push' || github.event_name == 'schedule')", "originalCommit": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5MTE0NA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465191144", "bodyText": "Current schedule is once a day as per line 22.  How about we run it every 4 hours?", "author": "tvalentyn", "createdAt": "2020-08-04T16:51:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNDE2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyOTcxNw==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465229717", "bodyText": "Also, all actions workflow run in parallel, right? so it takes roughly the same time as running  a regular precommit? In such case we could consider running it on PR.", "author": "tvalentyn", "createdAt": "2020-08-04T17:57:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNDE2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5NDIwMQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465294201", "bodyText": "Does github impose any limits on how many workflow could run in parallel?", "author": "aaltay", "createdAt": "2020-08-04T19:54:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNDE2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUzNzEwNw==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465537107", "bodyText": "Full workflow run takes approximately 30min. check on PR ~15 minutes.\nIMHO It is not short, but also not too long.\nIf you thinks it is still too long, maybe we could keep schedule and push to master/release branch events only? WDYT?", "author": "TobKed", "createdAt": "2020-08-05T07:46:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNDE2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg0MDczOA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465840738", "bodyText": "Does github impose any limits on how many workflow could run in parallel?\n\nLimits for concurrent jobs are between 20-180 depends on the plan (docs).\nI heard that apache has Enterprise plan fot gh-actions but I am not sure about it. Do you have more information about it @gmcdonald ?", "author": "TobKed", "createdAt": "2020-08-05T16:11:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNDE2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNDgxNg==", "url": "https://github.com/apache/beam/pull/12452#discussion_r464714816", "bodyText": "does sdist require wheel? If sdist contains binaries, are they compatible with other python version?", "author": "aaltay", "createdAt": "2020-08-03T23:31:21Z", "path": ".github/workflows/python_tests.yml", "diffHunk": "@@ -0,0 +1,196 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+name: Python tests\n+\n+on:\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/python/**', 'model/**']\n+\n+\n+env:\n+  GCP_WHEELS_STAGING_PATH: \"gs://${{ secrets.GCP_BUCKET }}/${GITHUB_REF##*/}/${GITHUB_SHA}-${GITHUB_RUN_ID}/\"\n+  GCP_BUCKET: ${{ secrets.GCP_BUCKET }}  # beam-wheels-staging\n+  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}  # apache-beam-testing\n+  GCP_REGION: ${{ secrets.GCP_REGION}}  # us-central\n+\n+jobs:\n+\n+  build_python_sdk_source:\n+    name: 'Build Python SDK Source'\n+    if: github.repository_owner == 'apache' && (github.event_name == 'push' || github.event_name == 'schedule')\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      - name: Install python\n+        uses: actions/setup-python@v2\n+        with:\n+          python-version: 3.7\n+      - name: Get build dependencies\n+        working-directory: ./sdks/python\n+        run: pip install -r build-requirements.txt\n+      - name: Install wheels\n+        run: pip install wheel\n+      - name: Build source\n+        working-directory: ./sdks/python\n+        run: python setup.py sdist --formats=zip", "originalCommit": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0MTA0OQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465541049", "bodyText": "I checked it and sdist does not require wheel. Source distribution does not contain binaries and is not python/platform specific. I simplified both this job and passing source dist to dataflow job.", "author": "TobKed", "createdAt": "2020-08-05T07:53:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNDgxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjAzNw==", "url": "https://github.com/apache/beam/pull/12452#discussion_r464716037", "bodyText": "@KevinGG - assigned this jira to you.", "author": "aaltay", "createdAt": "2020-08-03T23:35:24Z", "path": "sdks/python/apache_beam/runners/interactive/interactive_runner_test.py", "diffHunk": "@@ -66,6 +66,7 @@ class InteractiveRunnerTest(unittest.TestCase):\n   def setUp(self):\n     ie.new_env()\n \n+  @unittest.skipIf(sys.platform == \"win32\", \"[BEAM-10627]\")", "originalCommit": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcyMTkxMA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r464721910", "bodyText": "Acked. It's a duplicate of BEAM-10514. The reason is the file system in test has a temp directory with a very long prefix, causing the file path exceeding windows default 260 character limit.\nA normal windows temp directory prefix: c:\\windows\\temp\\,\nIn the test: D:\\a\\beam\\beam\\sdks\\python\\target\\.tox\\py35-win\\tmp\\.\nThe length diff breaks the limit since usually Interactive Beam uses about 240 characters in path length.", "author": "KevinGG", "createdAt": "2020-08-03T23:55:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjAzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2MTgyNQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465561825", "bodyText": "Thanks @KevinGG . Should I put BEAM-10514 here or keep BEAM-10627?", "author": "TobKed", "createdAt": "2020-08-05T08:29:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjAzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjEyOQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r464716129", "bodyText": "@tvalentyn - - assigned this jira to you.", "author": "aaltay", "createdAt": "2020-08-03T23:35:40Z", "path": "sdks/python/apache_beam/runners/portability/portable_runner_test.py", "diffHunk": "@@ -284,6 +284,7 @@ def create_options(self):\n     return options\n \n \n+@pytest.mark.skipif(sys.platform == \"win32\", reason=\"[BEAM-10625]\")", "originalCommit": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNDIzOA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465224238", "bodyText": "Took a look and replied on the bug. It may be an issue in GRPC or the networking configuration of the Windows host that Github uses. I do not see this error in the test suite that we run internally (on Py2.7).\n@TobKed do you have a recommendation how Beam Devs could recreate the same environment as used by GitHub actions for the purposes of debugging a test  or run a single test via actions? It would be good to document this in our Actions users guide.\nThe goal is to minimize the feedback loop as much as possible.\nFeel free to reply on https://issues.apache.org/jira/browse/BEAM-10625 to keep this conversation in one place.", "author": "tvalentyn", "createdAt": "2020-08-04T17:47:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjEyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU3MDA0Ng==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465570046", "bodyText": "Sure, I added comment about specific environment in the Jira. I will add/extend documentation since #12405 is merged.", "author": "TobKed", "createdAt": "2020-08-05T08:43:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjEyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjE5Nw==", "url": "https://github.com/apache/beam/pull/12452#discussion_r464716197", "bodyText": "why are we using pytest here insted of unittest? @tvalentyn", "author": "aaltay", "createdAt": "2020-08-03T23:35:56Z", "path": "sdks/python/apache_beam/runners/portability/portable_runner_test.py", "diffHunk": "@@ -284,6 +284,7 @@ def create_options(self):\n     return options\n \n ", "originalCommit": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjM5MA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r464716390", "bodyText": "@TheNeuralBit - - assigned this jira to you.", "author": "aaltay", "createdAt": "2020-08-03T23:36:37Z", "path": "sdks/python/apache_beam/testing/datatype_inference_test.py", "diffHunk": "@@ -174,6 +175,7 @@ def test_infer_typehints_schema(self, _, data, schema):\n   @parameterized.expand([(d[\"name\"], d[\"data\"], d[\"pyarrow_schema\"])\n                          for d in TEST_DATA])\n   @unittest.skipIf(pa is None, \"PyArrow is not installed\")\n+  @unittest.skipIf(sys.platform == \"win32\", \"[BEAM-10624]\")", "originalCommit": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcyMTE5OA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r464721198", "bodyText": "Ack I'll take a look. It may just take a pyarrow upgrade, which will be unblocked once we drop python 2", "author": "TheNeuralBit", "createdAt": "2020-08-03T23:53:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjM5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNjA0NA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465226044", "bodyText": "Pyarrow upgrade can be decoupled from dropping py2, unless we need code changes in Beam: \n  \n    \n      beam/sdks/python/setup.py\n    \n    \n         Line 157\n      in\n      5ded4ae\n    \n    \n    \n    \n\n        \n          \n           ('pyarrow>=0.15.1,<0.18.0; python_version >= \"3.0\" or '", "author": "tvalentyn", "createdAt": "2020-08-04T17:51:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjM5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYzNTU5Mg==", "url": "https://github.com/apache/beam/pull/12452#discussion_r466635592", "bodyText": "Looks like it's not actually related to pyarrow version. I think we should fix it by making the dtype explicit for the numpy arrays created here: \n  \n    \n      beam/sdks/python/apache_beam/testing/datatype_inference_test.py\n    \n    \n         Line 57\n      in\n      8d03dc6\n    \n    \n    \n    \n\n        \n          \n           (\"d\", np.array([1, 2, 3])), \n        \n    \n  \n\n\nI have a personal Windows machine I could clone Beam on and verify, but it might be simpler to just test the fix as part of this PR.", "author": "TheNeuralBit", "createdAt": "2020-08-06T19:24:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjM5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0MzI2Nw==", "url": "https://github.com/apache/beam/pull/12452#discussion_r467243267", "bodyText": "@TheNeuralBit could take a look on 4004309 , please?\nIs it the solution you mentioned?\nI tested it on my local fork (run results here) and it seems to work.", "author": "TobKed", "createdAt": "2020-08-07T20:01:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjM5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI5MzY2MA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r467293660", "bodyText": "Yep that's what I was suggesting!", "author": "TheNeuralBit", "createdAt": "2020-08-07T21:47:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjM5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4MTc3NQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r467781775", "bodyText": "Thanks @TheNeuralBit.  I cherry-picked change to the PR.", "author": "TobKed", "createdAt": "2020-08-10T09:20:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxNjM5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5NTE2OA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465195168", "bodyText": "Is it possible to extract py versions into a constant on top of the file so that we have to modify them in one place when we add/remove a version?", "author": "tvalentyn", "createdAt": "2020-08-04T16:57:53Z", "path": ".github/workflows/python_tests.yml", "diffHunk": "@@ -0,0 +1,196 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+name: Python tests\n+\n+on:\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/python/**', 'model/**']\n+\n+\n+env:\n+  GCP_WHEELS_STAGING_PATH: \"gs://${{ secrets.GCP_BUCKET }}/${GITHUB_REF##*/}/${GITHUB_SHA}-${GITHUB_RUN_ID}/\"\n+  GCP_BUCKET: ${{ secrets.GCP_BUCKET }}  # beam-wheels-staging\n+  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}  # apache-beam-testing\n+  GCP_REGION: ${{ secrets.GCP_REGION}}  # us-central\n+\n+jobs:\n+\n+  build_python_sdk_source:\n+    name: 'Build Python SDK Source'\n+    if: github.repository_owner == 'apache' && (github.event_name == 'push' || github.event_name == 'schedule')\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      - name: Install python\n+        uses: actions/setup-python@v2\n+        with:\n+          python-version: 3.7\n+      - name: Get build dependencies\n+        working-directory: ./sdks/python\n+        run: pip install -r build-requirements.txt\n+      - name: Install wheels\n+        run: pip install wheel\n+      - name: Build source\n+        working-directory: ./sdks/python\n+        run: python setup.py sdist --formats=zip\n+      - name: Add checksums\n+        working-directory: ./sdks/python/dist\n+        run: |\n+          file=$(ls | grep .zip | head -n 1)\n+          sha512sum $file > ${file}.sha512\n+      - name: Unzip source\n+        working-directory: ./sdks/python\n+        run: unzip dist/$(ls dist | grep .zip | head -n 1)\n+      - name: Rename source directory\n+        working-directory: ./sdks/python\n+        run: mv $(ls | grep apache-beam) apache-beam-source\n+      - name: Upload compressed sources as artifacts\n+        uses: actions/upload-artifact@v2\n+        with:\n+          name: source_zip\n+          path: sdks/python/dist\n+\n+  python_unit_tests:\n+    name: 'Python Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+        params: [\n+          {\"py_ver\": \"3.5\", \"tox_env\": \"py35\"},\n+          {\"py_ver\": \"3.6\", \"tox_env\": \"py36\"},\n+          {\"py_ver\": \"3.7\", \"tox_env\": \"py37\"},\n+          {\"py_ver\": \"3.8\", \"tox_env\": \"py38\"},\n+        ]\n+        exclude:\n+          # TODO remove exclusion after issue with protobuf is solved\n+          # https://github.com/protocolbuffers/protobuf/issues/7765\n+          - os: windows-latest\n+            params: {\"py_ver\": \"3.8\", \"tox_env\": \"py38\"}\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      - name: Install python\n+        uses: actions/setup-python@v2\n+        with:\n+          python-version: ${{ matrix.params.py_ver }}\n+      - name: Get build dependencies\n+        working-directory: ./sdks/python\n+        run: pip install -r build-requirements.txt\n+      - name: Install tox\n+        run: pip install tox\n+      - name: Run tests basic unix\n+        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')\n+        working-directory: ./sdks/python\n+        run: tox -c tox.ini -e ${{ matrix.params.tox_env }}\n+      - name: Run tests basic windows\n+        if: startsWith(matrix.os, 'windows')\n+        working-directory: ./sdks/python\n+        run: tox -c tox.ini -e ${{ matrix.params.tox_env }}-win\n+\n+  python_wordcount_direct_runner:\n+    name: 'Python Wordcount Direct Runner'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+        python: [3.5, 3.6, 3.7, 3.8]", "originalCommit": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyNDgyMQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465724821", "bodyText": "Unfortunately it is not possible right now. At least not in convenient way, especially that in this workflow there are two two type of slightly different matrixes.", "author": "TobKed", "createdAt": "2020-08-05T13:26:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5NTE2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwMzYxOA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465203618", "bodyText": "Do actions allow to extract a common subroutine and call it from other actions? For example following steps seem to be repeated several times, and perhaps could be defined in one place:\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      - name: Install python\n        uses: actions/setup-python@v2\n        with:\n          python-version: ${{ matrix.python }}\n      - name: Get build dependencies\n        working-directory: ./sdks/python\n        run: pip install -r build-requirements.txt\n      - name: Install requirements\n        working-directory: ./sdks/python\n        run: pip install setuptools --upgrade && pip install -e .", "author": "tvalentyn", "createdAt": "2020-08-04T17:12:38Z", "path": ".github/workflows/python_tests.yml", "diffHunk": "@@ -0,0 +1,196 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+name: Python tests\n+\n+on:\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/python/**', 'model/**']\n+\n+\n+env:\n+  GCP_WHEELS_STAGING_PATH: \"gs://${{ secrets.GCP_BUCKET }}/${GITHUB_REF##*/}/${GITHUB_SHA}-${GITHUB_RUN_ID}/\"\n+  GCP_BUCKET: ${{ secrets.GCP_BUCKET }}  # beam-wheels-staging\n+  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}  # apache-beam-testing\n+  GCP_REGION: ${{ secrets.GCP_REGION}}  # us-central\n+\n+jobs:\n+\n+  build_python_sdk_source:\n+    name: 'Build Python SDK Source'\n+    if: github.repository_owner == 'apache' && (github.event_name == 'push' || github.event_name == 'schedule')\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      - name: Install python\n+        uses: actions/setup-python@v2\n+        with:\n+          python-version: 3.7\n+      - name: Get build dependencies\n+        working-directory: ./sdks/python\n+        run: pip install -r build-requirements.txt\n+      - name: Install wheels\n+        run: pip install wheel\n+      - name: Build source\n+        working-directory: ./sdks/python\n+        run: python setup.py sdist --formats=zip\n+      - name: Add checksums\n+        working-directory: ./sdks/python/dist\n+        run: |\n+          file=$(ls | grep .zip | head -n 1)\n+          sha512sum $file > ${file}.sha512\n+      - name: Unzip source\n+        working-directory: ./sdks/python\n+        run: unzip dist/$(ls dist | grep .zip | head -n 1)\n+      - name: Rename source directory\n+        working-directory: ./sdks/python\n+        run: mv $(ls | grep apache-beam) apache-beam-source\n+      - name: Upload compressed sources as artifacts\n+        uses: actions/upload-artifact@v2\n+        with:\n+          name: source_zip\n+          path: sdks/python/dist\n+\n+  python_unit_tests:\n+    name: 'Python Unit Tests'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+        params: [\n+          {\"py_ver\": \"3.5\", \"tox_env\": \"py35\"},\n+          {\"py_ver\": \"3.6\", \"tox_env\": \"py36\"},\n+          {\"py_ver\": \"3.7\", \"tox_env\": \"py37\"},\n+          {\"py_ver\": \"3.8\", \"tox_env\": \"py38\"},\n+        ]\n+        exclude:\n+          # TODO remove exclusion after issue with protobuf is solved\n+          # https://github.com/protocolbuffers/protobuf/issues/7765\n+          - os: windows-latest\n+            params: {\"py_ver\": \"3.8\", \"tox_env\": \"py38\"}\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+      - name: Install python\n+        uses: actions/setup-python@v2\n+        with:\n+          python-version: ${{ matrix.params.py_ver }}\n+      - name: Get build dependencies\n+        working-directory: ./sdks/python\n+        run: pip install -r build-requirements.txt\n+      - name: Install tox\n+        run: pip install tox\n+      - name: Run tests basic unix\n+        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')\n+        working-directory: ./sdks/python\n+        run: tox -c tox.ini -e ${{ matrix.params.tox_env }}\n+      - name: Run tests basic windows\n+        if: startsWith(matrix.os, 'windows')\n+        working-directory: ./sdks/python\n+        run: tox -c tox.ini -e ${{ matrix.params.tox_env }}-win\n+\n+  python_wordcount_direct_runner:\n+    name: 'Python Wordcount Direct Runner'\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+        python: [3.5, 3.6, 3.7, 3.8]\n+        exclude:\n+          # TODO remove exclusion after issue with protobuf is solved\n+          # https://github.com/protocolbuffers/protobuf/issues/7765\n+          - os: windows-latest\n+            python: 3.8\n+    steps:", "originalCommit": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTczMDI5Ng==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465730296", "bodyText": "Right know it is not possible, however GitHub Actions is evolving so fast it should available soon.\nRelated links about upcoming related feature:\nactions/runner#438\nactions/runner#554", "author": "TobKed", "createdAt": "2020-08-05T13:34:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwMzYxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwOTY5MQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465209691", "bodyText": "What is the context of these changes?\n(note: it's would be better to have them in a separate commit and tag a JIRA in that commit).\nWill #12150 (comment) work?", "author": "tvalentyn", "createdAt": "2020-08-04T17:23:08Z", "path": "sdks/python/apache_beam/io/parquetio_test.py", "diffHunk": "@@ -296,8 +296,10 @@ def test_sink_transform_int96(self):\n               path, self.SCHEMA96, num_shards=1, shard_name_template='')\n \n   def test_sink_transform(self):\n-    with tempfile.NamedTemporaryFile() as dst:\n-      path = dst.name\n+    fd, path = tempfile.mkstemp()", "originalCommit": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTczNjgyOA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465736828", "bodyText": "There was problem on windows since with tempfile.NamedTemporaryFile() as dst provide tempfile which is already opened. On windows any opened file seems to be read only which coused PermissionError. I know this workaround is ugly but it the best way I found to do it.\nIs separate commit with JIRA will not be lost after merging?", "author": "TobKed", "createdAt": "2020-08-05T13:44:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwOTY5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM0MjQ0OA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r467342448", "bodyText": "You can use  tempfile.TemporaryDirectory() to generate a fresh temp directory and use any name as a file name within this directory with the test.", "author": "tvalentyn", "createdAt": "2020-08-08T01:09:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwOTY5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk4NTIyNQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r467985225", "bodyText": "I updated it with tempfile.TemporaryDirectory(), looks much more better and intuitive now. Thanks a lot!", "author": "TobKed", "createdAt": "2020-08-10T15:28:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwOTY5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNDY4MA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465224680", "bodyText": "use os.sep", "author": "tvalentyn", "createdAt": "2020-08-04T17:48:48Z", "path": "sdks/python/apache_beam/runners/worker/log_handler_test.py", "diffHunk": "@@ -87,7 +87,8 @@ def _verify_fn_log_handler(self, num_log_entries):\n         self.assertEqual(\n             '%s: %s' % (msg, num_received_log_entries), log_entry.message)\n         self.assertTrue(\n-            re.match(r'.*/log_handler_test.py:\\d+', log_entry.log_location),\n+            re.match(\n+                r'.*(/|\\\\)log_handler_test.py:\\d+', log_entry.log_location),", "originalCommit": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc1MzMyNg==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465753326", "bodyText": "Added fix. Thanks.", "author": "TobKed", "createdAt": "2020-08-05T14:07:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNDY4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3NDY4MQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465774681", "bodyText": "I used rf'.*{os.sep}log_handler_test.py:\\d+' but it caused:\n   ....\n    raise source.error(\"bad escape %s\" % escape, len(escape))\n    sre_constants.error: bad escape \\l at position 2\n\nhttps://github.com/apache/beam/pull/12452/checks?check_run_id=949595653\nI reverted change.\nShould I use it somehow differently?", "author": "TobKed", "createdAt": "2020-08-05T14:36:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNDY4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM0NDkzNA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r467344934", "bodyText": "You could use re.escape(). Not a big deal since this is a test, feel free to leave as is or simplify to r'.*log_handler_test.py:\\d+'.", "author": "tvalentyn", "createdAt": "2020-08-08T01:30:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNDY4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk4NzA1Mw==", "url": "https://github.com/apache/beam/pull/12452#discussion_r467987053", "bodyText": "I had problems with re.escape() as well (escaped \\d as well). For the most clean solution I just simplified it as you suggested it.", "author": "TobKed", "createdAt": "2020-08-10T15:31:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNDY4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNjQ4Mg==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465226482", "bodyText": "Same comment as above - this approach is not intuitive.", "author": "tvalentyn", "createdAt": "2020-08-04T17:51:55Z", "path": "sdks/python/apache_beam/typehints/typecheck_test_py3.py", "diffHunk": "@@ -92,23 +93,29 @@ def test_wrapper_pass_through(self):\n     # We use a file to check the result because the MyDoFn instance passed is\n     # not the same one that actually runs in the pipeline (it is serialized\n     # here and deserialized in the worker).\n-    with tempfile.NamedTemporaryFile(mode='w+t') as f:\n-      dofn = MyDoFn(f.name)\n+\n+    fd, path = tempfile.mkstemp()\n+    try:\n+      os.close(fd)", "originalCommit": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc1MzcyNQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465753725", "bodyText": "WDYT about adding comment in such places with JIRA ? (as you mentioned creating JIRA in #12452 (comment))", "author": "TobKed", "createdAt": "2020-08-05T14:08:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNjQ4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM0NTYyNA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r467345624", "bodyText": "The reference to JIRA in #12452 (comment) was that you could make test changes in a separate commit such as:\n[BEAM-123456] Fix tests that don't pass on Windows\nand have another commit:\n[BEAM-10623] Add workflow to run Beam python tests on Linux/Windows/Mac platforms.\nIn this case the reason behind not obvious code would be easier to infer from commit history.", "author": "tvalentyn", "createdAt": "2020-08-08T01:37:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyNjQ4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIzMDE4NA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465230184", "bodyText": "Is this used anywhere?", "author": "tvalentyn", "createdAt": "2020-08-04T17:58:30Z", "path": ".github/workflows/python_tests.yml", "diffHunk": "@@ -0,0 +1,196 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+name: Python tests\n+\n+on:\n+  schedule:\n+    - cron: '10 2 * * *'\n+  push:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+  pull_request:\n+    branches: ['master', 'release-*']\n+    tags: 'v*'\n+    paths: ['sdks/python/**', 'model/**']\n+\n+\n+env:\n+  GCP_WHEELS_STAGING_PATH: \"gs://${{ secrets.GCP_BUCKET }}/${GITHUB_REF##*/}/${GITHUB_SHA}-${GITHUB_RUN_ID}/\"", "originalCommit": "7005cfcd8bde3902ad708594f4a1c2cbf1a65f53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc1NDM2OQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r465754369", "bodyText": "It is unnecessary copy-paste leftover. Deleted.", "author": "TobKed", "createdAt": "2020-08-05T14:09:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIzMDE4NA=="}], "type": "inlineReview"}, {"oid": "b7883ffed7544cb6387ce03aad9fb248925e005f", "url": "https://github.com/apache/beam/commit/b7883ffed7544cb6387ce03aad9fb248925e005f", "message": "Upload unit tests xml logs a artifacts", "committedDate": "2020-08-05T15:29:09Z", "type": "forcePushed"}, {"oid": "8ead399e48e62e65851122b778286a3cc0d8487e", "url": "https://github.com/apache/beam/commit/8ead399e48e62e65851122b778286a3cc0d8487e", "message": "Update documentation and workflow", "committedDate": "2020-08-10T18:48:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2MzQxOQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r468763419", "bodyText": "Suggestion: Consider using Checks that GCP variables are set or Check GCP variables throughout.", "author": "tvalentyn", "createdAt": "2020-08-11T17:58:20Z", "path": "CI.md", "diffHunk": "@@ -75,8 +75,28 @@ run categories. Here is a summary of the run categories with regards of the jobs\n Those jobs often have matrix run strategy which runs several different variations of the jobs\n (with different platform type / Python version to run for example)\n \n+### Google Cloud Platform Credentials\n+\n+Some of the jobs require variables stored as a [GitHub Secrets](https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets)\n+to perform operations on Google Cloud Platform. Currently these jobs are limited to Apache repository only.\n+These variables are:\n+ * `GCP_PROJECT_ID` - ID of the Google Cloud project. Apache/Beam repository has it set to `apache-beam-testing`.\n+ * `GCP_REGION` - Region of the bucket and dataflow jobs. Apache/Beam repository has it set to `us-central1`.\n+ * `GCP_TESTING_BUCKET` - Name of the bucket where temporary files for Dataflow tests will be stored. Apache/Beam repository has it set to `beam-github-actions-tests`.\n+ * `GCP_SA_EMAIL` - Service account email address. This is usually of the format `<name>@<project-id>.iam.gserviceaccount.com`.\n+ * `GCP_SA_KEY` - Service account key. This key should be created and encoded as a Base64 string (eg. `cat my-key.json | base64` on macOS).\n+\n+Service Account shall have following permissions:\n+ * Storage Admin (roles/storage.admin)\n+ * Dataflow Admin (roles/dataflow.admin)\n+\n+### Workflows\n+\n+#### Build python source distribution and wheels - [build_wheels.yml](.github/workflows/build_wheels.yml)\n+\n | Job                                             | Description                                                                                                                                                                                                                                                        | Pull Request Run | Direct Push/Merge Run | Scheduled Run | Requires GCP Credentials |\n |-------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------|-----------------------|---------------|--------------------------|\n+| Check are GCP variables set                     | Checks are GCP variables are set. Jobs which required them depends on the output of this job.                                                                                                                                                                      | Yes              | Yes                   | Yes           | Yes/No                   |", "originalCommit": "8ead399e48e62e65851122b778286a3cc0d8487e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3Njk2NQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r468876965", "bodyText": "I used Check GCP variables and also changed it in workflow itself. Looks much more cleaner and simpler.", "author": "TobKed", "createdAt": "2020-08-11T21:32:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2MzQxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2MzkwMg==", "url": "https://github.com/apache/beam/pull/12452#discussion_r468763902", "bodyText": "nit: depend", "author": "tvalentyn", "createdAt": "2020-08-11T17:59:11Z", "path": "CI.md", "diffHunk": "@@ -85,16 +105,15 @@ Those jobs often have matrix run strategy which runs several different variation\n | List files on Google Cloud Storage Bucket       | Lists files on GCS for verification purpose.                                                                                                                                                                                                                       | -                | Yes                   | Yes           | Yes                      |\n | Tag repo nightly                                | Tag repo with `nightly-master` tag if build python source distribution and python wheels finished successfully.                                                                                                                                                    | -                | -                     | Yes           | -                        |\n \n-### Google Cloud Platform Credentials\n-\n-Some of the jobs require variables stored as a [GitHub Secrets](https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets)\n-to perform operations on Google Cloud Platform. Currently these jobs are limited to Apache repository only.\n-These variables are:\n- * `GCP_SA_EMAIL` - Service account email address. This is usually of the format `<name>@<project-id>.iam.gserviceaccount.com`.\n- * `GCP_SA_KEY` - Service account key. This key should be created and encoded as a Base64 string (eg. `cat my-key.json | base64` on macOS).\n+#### Python tests - [python_tests.yml](.github/workflows/python_tests.yml)\n \n-Service Account shall have following permissions:\n- * Storage Object Admin (roles/storage.objectAdmin)\n+| Job                              | Description                                                                                                           | Pull Request Run | Direct Push/Merge Run | Scheduled Run | Requires GCP Credentials |\n+|----------------------------------|-----------------------------------------------------------------------------------------------------------------------|------------------|-----------------------|---------------|--------------------------|\n+| Check are GCP variables set      | Checks are GCP variables are set. Jobs which required them depends on the output of this job.                         | Yes              | Yes                   | Yes           | Yes/No                   |", "originalCommit": "8ead399e48e62e65851122b778286a3cc0d8487e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3NzAzNA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r468877034", "bodyText": "Fixed.", "author": "TobKed", "createdAt": "2020-08-11T21:32:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2MzkwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2ODI2NQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r468768265", "bodyText": "For my education, which repository we refer to here? Also, I would not hard code existing values in documentation, since the source-of-truth may be updated, and documentation may not. You could say: For example apache-beam-testing instead.", "author": "tvalentyn", "createdAt": "2020-08-11T18:06:51Z", "path": "CI.md", "diffHunk": "@@ -75,8 +75,28 @@ run categories. Here is a summary of the run categories with regards of the jobs\n Those jobs often have matrix run strategy which runs several different variations of the jobs\n (with different platform type / Python version to run for example)\n \n+### Google Cloud Platform Credentials\n+\n+Some of the jobs require variables stored as a [GitHub Secrets](https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets)\n+to perform operations on Google Cloud Platform. Currently these jobs are limited to Apache repository only.\n+These variables are:\n+ * `GCP_PROJECT_ID` - ID of the Google Cloud project. Apache/Beam repository has it set to `apache-beam-testing`.", "originalCommit": "8ead399e48e62e65851122b778286a3cc0d8487e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3NzUwMA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r468877500", "bodyText": "I agree. I changed it referring values as examples.", "author": "TobKed", "createdAt": "2020-08-11T21:33:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2ODI2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2ODY5MA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r468768690", "bodyText": "nit: as [GitHub Secrets]", "author": "tvalentyn", "createdAt": "2020-08-11T18:07:40Z", "path": "CI.md", "diffHunk": "@@ -75,8 +75,28 @@ run categories. Here is a summary of the run categories with regards of the jobs\n Those jobs often have matrix run strategy which runs several different variations of the jobs\n (with different platform type / Python version to run for example)\n \n+### Google Cloud Platform Credentials\n+\n+Some of the jobs require variables stored as a [GitHub Secrets](https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets)", "originalCommit": "8ead399e48e62e65851122b778286a3cc0d8487e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3NzU1Nw==", "url": "https://github.com/apache/beam/pull/12452#discussion_r468877557", "bodyText": "Fixed.", "author": "TobKed", "createdAt": "2020-08-11T21:33:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2ODY5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc3NjA3MA==", "url": "https://github.com/apache/beam/pull/12452#discussion_r468776070", "bodyText": "Thanks. I forgot we are still on Py2, but very soon we can start removing Py2 support.\nWe actually defined this at least twice already.\n\n  \n    \n      beam/sdks/python/apache_beam/utils/subprocess_server_test.py\n    \n    \n         Line 39\n      in\n      0098eb6\n    \n    \n    \n    \n\n        \n          \n           class TemporaryDirectory: \n        \n    \n  \n\n\n\n  \n    \n      beam/sdks/python/apache_beam/testing/test_utils.py\n    \n    \n         Line 43\n      in\n      0098eb6\n    \n    \n    \n    \n\n        \n          \n           class TempDir(object): \n        \n    \n  \n\n\nFeel free to reuse one of them and add a comment # TODO(BEAM-8371): Use tempfile.TemporaryDirectory.", "author": "tvalentyn", "createdAt": "2020-08-11T18:20:50Z", "path": "sdks/python/apache_beam/testing/util.py", "diffHunk": "@@ -334,3 +335,19 @@ def open_shards(glob_pattern, mode='rt', encoding='utf-8'):\n         out_file.write(in_file.read())\n     concatenated_file_name = out_file.name\n   return io.open(concatenated_file_name, mode, encoding=encoding)\n+\n+\n+class TemporaryDirectory(object):", "originalCommit": "b2ee132411253da4abae8b7bcab6b8751ce7fab2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg4NDg5MQ==", "url": "https://github.com/apache/beam/pull/12452#discussion_r468884891", "bodyText": "Thank you. I was not aware of them. I used this first one since it returns path on enter.", "author": "TobKed", "createdAt": "2020-08-11T21:50:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc3NjA3MA=="}], "type": "inlineReview"}, {"oid": "b2a88db50a86c5b0488e2005db4f923dbdf60bb8", "url": "https://github.com/apache/beam/commit/b2a88db50a86c5b0488e2005db4f923dbdf60bb8", "message": "[BEAM-10624] dtype explicit for the numpy arrays", "committedDate": "2020-08-11T21:54:11Z", "type": "forcePushed"}, {"oid": "6d56be74776b61436e4024d8b859279bd3fa2d41", "url": "https://github.com/apache/beam/commit/6d56be74776b61436e4024d8b859279bd3fa2d41", "message": "[BEAM-10624] dtype explicit for the numpy arrays", "committedDate": "2020-08-11T22:52:59Z", "type": "forcePushed"}, {"oid": "e7496028eec88e1f59489744266eb883a4dd7b03", "url": "https://github.com/apache/beam/commit/e7496028eec88e1f59489744266eb883a4dd7b03", "message": "[BEAM-10624] dtype explicit for the numpy arrays", "committedDate": "2020-08-11T22:58:36Z", "type": "forcePushed"}, {"oid": "ad8f04c18aadaf756d4b2960792ba45ea26c8161", "url": "https://github.com/apache/beam/commit/ad8f04c18aadaf756d4b2960792ba45ea26c8161", "message": "[BEAM-10624] dtype explicit for the numpy arrays", "committedDate": "2020-08-17T18:42:04Z", "type": "forcePushed"}, {"oid": "0501123dda092e3a48b8c0679932f6a6cbe7e464", "url": "https://github.com/apache/beam/commit/0501123dda092e3a48b8c0679932f6a6cbe7e464", "message": "[BEAM-10623] Add workflow to run python tests on Linux/Windows/Mac", "committedDate": "2020-08-18T15:10:49Z", "type": "commit"}, {"oid": "7b19dc5618969195d64d74d426fa904e23530619", "url": "https://github.com/apache/beam/commit/7b19dc5618969195d64d74d426fa904e23530619", "message": "[BEAM-10624] dtype explicit for the numpy arrays", "committedDate": "2020-08-18T15:10:53Z", "type": "commit"}, {"oid": "7b19dc5618969195d64d74d426fa904e23530619", "url": "https://github.com/apache/beam/commit/7b19dc5618969195d64d74d426fa904e23530619", "message": "[BEAM-10624] dtype explicit for the numpy arrays", "committedDate": "2020-08-18T15:10:53Z", "type": "forcePushed"}]}