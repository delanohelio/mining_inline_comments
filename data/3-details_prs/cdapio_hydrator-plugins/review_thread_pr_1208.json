{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NDM3NDU5", "number": 1208, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxOToyNjoxOFrOEp7L6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNTo0Mjo1MFrOEvJlWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzk2Nzc3OnYy", "diffSide": "RIGHT", "path": "database-plugins/src/main/java/io/cdap/plugin/DBUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxOToyNjoxOFrOHb5KoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxOToyNzoyNVrOHb5MPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAxMDIwOA==", "bodyText": "why the precision is 2?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1208#discussion_r499010208", "createdAt": "2020-10-02T19:26:18Z", "author": {"login": "CuriousVini"}, "path": "database-plugins/src/main/java/io/cdap/plugin/DBUtils.java", "diffHunk": "@@ -233,11 +233,7 @@ private static Schema getSchema(String typeName, int sqlType, int precision, int\n \n       case Types.NUMERIC:\n       case Types.DECIMAL:\n-        // if there are no digits after the point, use integer types\n-        type = scale != 0 ? Schema.Type.DOUBLE :\n-          // with 10 digits we can represent 2^32 and LONG is required\n-          precision > 9 ? Schema.Type.LONG : Schema.Type.INT;\n-        break;\n+        return  Schema.decimalOf(2,scale);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26b97560d880a7b451355f7dcd96c9279908ad9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAxMDYyMg==", "bodyText": "Has this been tested with any database? Please add a unit test", "url": "https://github.com/cdapio/hydrator-plugins/pull/1208#discussion_r499010622", "createdAt": "2020-10-02T19:27:25Z", "author": {"login": "CuriousVini"}, "path": "database-plugins/src/main/java/io/cdap/plugin/DBUtils.java", "diffHunk": "@@ -233,11 +233,7 @@ private static Schema getSchema(String typeName, int sqlType, int precision, int\n \n       case Types.NUMERIC:\n       case Types.DECIMAL:\n-        // if there are no digits after the point, use integer types\n-        type = scale != 0 ? Schema.Type.DOUBLE :\n-          // with 10 digits we can represent 2^32 and LONG is required\n-          precision > 9 ? Schema.Type.LONG : Schema.Type.INT;\n-        break;\n+        return  Schema.decimalOf(2,scale);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAxMDIwOA=="}, "originalCommit": {"oid": "c26b97560d880a7b451355f7dcd96c9279908ad9"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3ODc1NTQ3OnYy", "diffSide": "RIGHT", "path": "database-plugins/src/main/java/io/cdap/plugin/DBUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNTo0Mjo1MFrOHj-KXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNTo0Mjo1MFrOHj-KXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ4MDY2OA==", "bodyText": "Please move this logic here:\nhttps://github.com/cdapio/hydrator-plugins/blob/develop/database-plugins/src/main/java/io/cdap/plugin/DBRecord.java#L137", "url": "https://github.com/cdapio/hydrator-plugins/pull/1208#discussion_r507480668", "createdAt": "2020-10-19T05:42:50Z", "author": {"login": "CuriousVini"}, "path": "database-plugins/src/main/java/io/cdap/plugin/DBUtils.java", "diffHunk": "@@ -284,15 +280,7 @@ public static Object transformValue(int sqlType, int precision, int scale,\n         case Types.NUMERIC:\n         case Types.DECIMAL:\n           BigDecimal decimal = (BigDecimal) original;\n-          if (scale != 0) {\n-            // if there are digits after the point, use double types\n-            return decimal.doubleValue();\n-          } else if (precision > 9) {\n-            // with 10 digits we can represent 2^32 and LONG is required\n-            return decimal.longValue();\n-          } else {\n-            return decimal.intValue();\n-          }\n+          return decimal.unscaledValue().toByteArray();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90cdc730338aca0359e2600cd7b532e39f493ce"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2423, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}