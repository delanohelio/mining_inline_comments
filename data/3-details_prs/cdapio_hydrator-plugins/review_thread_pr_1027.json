{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NDI4MTc1", "number": 1027, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTowOTowMVrODh-3eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMTowNTowNVrODiDViw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTU5NjA4OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTowOTowMVrOFtBjMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMToxMzo0MVrOFtExdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1NTYzMg==", "bodyText": "nit: indentation", "url": "https://github.com/cdapio/hydrator-plugins/pull/1027#discussion_r382755632", "createdAt": "2020-02-21T19:09:01Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -177,9 +189,18 @@ private boolean isAliasPresent(Iterable<String> stageOldNameAliasPair) {\n   }\n \n   Set<String> getInputs() {\n-    if (!Strings.isNullOrEmpty(requiredInputs)) {\n+    if (!Strings.isNullOrEmpty(requiredInputs) && !containsMacro(JoinerConfig.REQUIRED_INPUTS)) {\n       return ImmutableSet.copyOf(Splitter.on(',').trimResults().omitEmptyStrings().split(requiredInputs));\n     }\n     return ImmutableSet.of();\n   }\n+\n+  void validateJoinKeySchemas(Map<String, Schema> inputSchemas, Map<String, List<String>> joinKeys,\n+        FailureCollector collector) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8f7ff7e55949453b9c643e363487736f6b8ecec"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgwODQzNw==", "bodyText": "fixed.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1027#discussion_r382808437", "createdAt": "2020-02-21T21:13:41Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -177,9 +189,18 @@ private boolean isAliasPresent(Iterable<String> stageOldNameAliasPair) {\n   }\n \n   Set<String> getInputs() {\n-    if (!Strings.isNullOrEmpty(requiredInputs)) {\n+    if (!Strings.isNullOrEmpty(requiredInputs) && !containsMacro(JoinerConfig.REQUIRED_INPUTS)) {\n       return ImmutableSet.copyOf(Splitter.on(',').trimResults().omitEmptyStrings().split(requiredInputs));\n     }\n     return ImmutableSet.of();\n   }\n+\n+  void validateJoinKeySchemas(Map<String, Schema> inputSchemas, Map<String, List<String>> joinKeys,\n+        FailureCollector collector) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1NTYzMg=="}, "originalCommit": {"oid": "d8f7ff7e55949453b9c643e363487736f6b8ecec"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTU5ODEzOnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTowOTo0MFrOFtBkcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMToxMzo0OVrOFtExnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1NTk1NQ==", "bodyText": "nit: indentation\nPlease import the settings jar and format the code.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1027#discussion_r382755955", "createdAt": "2020-02-21T19:09:40Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -177,9 +189,18 @@ private boolean isAliasPresent(Iterable<String> stageOldNameAliasPair) {\n   }\n \n   Set<String> getInputs() {\n-    if (!Strings.isNullOrEmpty(requiredInputs)) {\n+    if (!Strings.isNullOrEmpty(requiredInputs) && !containsMacro(JoinerConfig.REQUIRED_INPUTS)) {\n       return ImmutableSet.copyOf(Splitter.on(',').trimResults().omitEmptyStrings().split(requiredInputs));\n     }\n     return ImmutableSet.of();\n   }\n+\n+  void validateJoinKeySchemas(Map<String, Schema> inputSchemas, Map<String, List<String>> joinKeys,\n+        FailureCollector collector) {\n+      if (!containsMacro(JoinerConfig.JOIN_KEYS) && joinKeys.size() != inputSchemas.size()) {\n+        collector.addFailure(\"There should be join keys present from each stage.\",\n+            \"Ensure join keys are present from each stage.\")\n+            .withConfigProperty(JoinerConfig.JOIN_KEYS);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8f7ff7e55949453b9c643e363487736f6b8ecec"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgwODQ3Ng==", "bodyText": "fixed.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1027#discussion_r382808476", "createdAt": "2020-02-21T21:13:49Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -177,9 +189,18 @@ private boolean isAliasPresent(Iterable<String> stageOldNameAliasPair) {\n   }\n \n   Set<String> getInputs() {\n-    if (!Strings.isNullOrEmpty(requiredInputs)) {\n+    if (!Strings.isNullOrEmpty(requiredInputs) && !containsMacro(JoinerConfig.REQUIRED_INPUTS)) {\n       return ImmutableSet.copyOf(Splitter.on(',').trimResults().omitEmptyStrings().split(requiredInputs));\n     }\n     return ImmutableSet.of();\n   }\n+\n+  void validateJoinKeySchemas(Map<String, Schema> inputSchemas, Map<String, List<String>> joinKeys,\n+        FailureCollector collector) {\n+      if (!containsMacro(JoinerConfig.JOIN_KEYS) && joinKeys.size() != inputSchemas.size()) {\n+        collector.addFailure(\"There should be join keys present from each stage.\",\n+            \"Ensure join keys are present from each stage.\")\n+            .withConfigProperty(JoinerConfig.JOIN_KEYS);\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1NTk1NQ=="}, "originalCommit": {"oid": "d8f7ff7e55949453b9c643e363487736f6b8ecec"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTYwMzA5OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOToxMTozMVrOFtBnsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMToyNToxOFrOFtFCyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1Njc4Nw==", "bodyText": "do we need this?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1027#discussion_r382756787", "createdAt": "2020-02-21T19:11:31Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -170,11 +174,11 @@ public void prepareRun(BatchJoinerContext context) {\n   @Override\n   public void initialize(BatchJoinerRuntimeContext context) {\n     FailureCollector collector = context.getFailureCollector();\n-    init(context.getInputSchemas(), collector);\n-    collector.getOrThrowException();\n-\n     Map<String, Schema> inputSchemas = context.getInputSchemas();\n-    outputSchema = context.getOutputSchema();\n+    init(inputSchemas, collector);\n+    collector.getOrThrowException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8f7ff7e55949453b9c643e363487736f6b8ecec"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgxMjg3NA==", "bodyText": "It's needed to handle validation failures in join key validation failures.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1027#discussion_r382812874", "createdAt": "2020-02-21T21:25:18Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -170,11 +174,11 @@ public void prepareRun(BatchJoinerContext context) {\n   @Override\n   public void initialize(BatchJoinerRuntimeContext context) {\n     FailureCollector collector = context.getFailureCollector();\n-    init(context.getInputSchemas(), collector);\n-    collector.getOrThrowException();\n-\n     Map<String, Schema> inputSchemas = context.getInputSchemas();\n-    outputSchema = context.getOutputSchema();\n+    init(inputSchemas, collector);\n+    collector.getOrThrowException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1Njc4Nw=="}, "originalCommit": {"oid": "d8f7ff7e55949453b9c643e363487736f6b8ecec"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTYxODU2OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOToxNzowOVrOFtBxMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMToyMzowMlrOFtE_TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1OTIxOQ==", "bodyText": "does getOutputSchema handle null join keys and other configs?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1027#discussion_r382759219", "createdAt": "2020-02-21T19:17:09Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -82,7 +82,11 @@ public void configurePipeline(MultiInputPipelineConfigurer pipelineConfigurer) {\n     init(inputSchemas, collector);\n     collector.getOrThrowException();\n     //validate the input schema and get the output schema for it\n-    stageConfigurer.setOutputSchema(getOutputSchema(inputSchemas, collector));\n+    Schema outputSchema = getOutputSchema(inputSchemas, collector);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8f7ff7e55949453b9c643e363487736f6b8ecec"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgxMTk4MA==", "bodyText": "Yes.\nnull join keys (configured by macro) is handled by JoinerConfig.validateJoinKeySchemas().\nJoinerConfig.getInputs() returns empty set when requiredInputs is null.\ngetOutputSchema returns null if selectedFields is null.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1027#discussion_r382811980", "createdAt": "2020-02-21T21:23:02Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -82,7 +82,11 @@ public void configurePipeline(MultiInputPipelineConfigurer pipelineConfigurer) {\n     init(inputSchemas, collector);\n     collector.getOrThrowException();\n     //validate the input schema and get the output schema for it\n-    stageConfigurer.setOutputSchema(getOutputSchema(inputSchemas, collector));\n+    Schema outputSchema = getOutputSchema(inputSchemas, collector);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1OTIxOQ=="}, "originalCommit": {"oid": "d8f7ff7e55949453b9c643e363487736f6b8ecec"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTYyMzY1OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOToxOToxMVrOFtB0dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMToxNDowNlrOFtEyCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2MDA1Mg==", "bodyText": "shouldnt this return null?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1027#discussion_r382760052", "createdAt": "2020-02-21T19:19:11Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -279,7 +278,12 @@ Schema getOutputSchema(Map<String, Schema> inputSchemas, FailureCollector collec\n     requiredInputs = conf.getInputs();\n     perStageSelectedFields = conf.getPerStageSelectedFields();\n     duplicateFields = ArrayListMultimap.create();\n-    return Schema.recordOf(\"join.output\", getOutputFields(createOutputFieldInfos(inputSchemas, collector)));\n+    List<Schema.Field> outputFields = getOutputFields(createOutputFieldInfos(inputSchemas, collector));\n+    if (outputFields.isEmpty()) {\n+      return Schema.recordOf(\"join.output\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8f7ff7e55949453b9c643e363487736f6b8ecec"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgwODU4NQ==", "bodyText": "Fixed to return null.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1027#discussion_r382808585", "createdAt": "2020-02-21T21:14:06Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -279,7 +278,12 @@ Schema getOutputSchema(Map<String, Schema> inputSchemas, FailureCollector collec\n     requiredInputs = conf.getInputs();\n     perStageSelectedFields = conf.getPerStageSelectedFields();\n     duplicateFields = ArrayListMultimap.create();\n-    return Schema.recordOf(\"join.output\", getOutputFields(createOutputFieldInfos(inputSchemas, collector)));\n+    List<Schema.Field> outputFields = getOutputFields(createOutputFieldInfos(inputSchemas, collector));\n+    if (outputFields.isEmpty()) {\n+      return Schema.recordOf(\"join.output\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2MDA1Mg=="}, "originalCommit": {"oid": "d8f7ff7e55949453b9c643e363487736f6b8ecec"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDMyODQzOnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/aggregator/DedupConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMTowNTowNVrOFtIh5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMTowODowM1rOFtIjbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg2OTk5MA==", "bodyText": "are nulls handled for both the macro properties?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1027#discussion_r382869990", "createdAt": "2020-02-22T01:05:05Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/aggregator/DedupConfig.java", "diffHunk": "@@ -52,6 +54,7 @@\n     \"of field and function is allowed. If this property is not set, one random record will be chosen from the \" +\n     \"group of 'duplicate' records.\")\n   @Nullable\n+  @Macro", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f396d3debbfe03fe83f749abfd562a99ad931d1e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3MDM4Mg==", "bodyText": "Yes", "url": "https://github.com/cdapio/hydrator-plugins/pull/1027#discussion_r382870382", "createdAt": "2020-02-22T01:08:03Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/aggregator/DedupConfig.java", "diffHunk": "@@ -52,6 +54,7 @@\n     \"of field and function is allowed. If this property is not set, one random record will be chosen from the \" +\n     \"group of 'duplicate' records.\")\n   @Nullable\n+  @Macro", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg2OTk5MA=="}, "originalCommit": {"oid": "f396d3debbfe03fe83f749abfd562a99ad931d1e"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2477, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}