{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNTkwMTk0", "number": 1031, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODowODo0N1rODjjtEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMTozNzozMVrODk4jrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjExNzMxOnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODowODo0N1rOFvbtCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwMTozNTo1OFrOFwG4xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4MTI4OQ==", "bodyText": "nit: it's more readable in these situations to do:\nif (inputSchemas.isEmpty()) {\n  return;\n}\n\n// rest of logic\n\ndoesn't make much difference here, but is more true if the logic within the block is longer.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r385281289", "createdAt": "2020-02-27T18:08:47Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -95,11 +95,15 @@ public void prepareRun(BatchJoinerContext context) {\n       context.setNumPartitions(conf.getNumPartitions());\n     }\n     FailureCollector collector = context.getFailureCollector();\n-    init(context.getInputSchemas(), collector);\n-    collector.getOrThrowException();\n-    Collection<OutputFieldInfo> outputFieldInfos = createOutputFieldInfos(context.getInputSchemas(), collector);\n-    collector.getOrThrowException();\n-    context.record(createFieldOperations(outputFieldInfos, perStageJoinKeys));\n+    Map<String, Schema> inputSchemas = context.getInputSchemas();\n+    // inputSchemas will be empty if the output schema of the previous node is a macro\n+    if (!inputSchemas.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbbb20df9e6511822701a899f051b2247f4b5908"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4Mzk2Mg==", "bodyText": "the correct behavior for the app would not be to give an empty map, but to have a null value as the schema. Let's check for that scenario as well (there is at least one null in the map values), so that this doesn't need to be revisited once the getInputSchemas() method is fixed.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r385283962", "createdAt": "2020-02-27T18:14:03Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -95,11 +95,15 @@ public void prepareRun(BatchJoinerContext context) {\n       context.setNumPartitions(conf.getNumPartitions());\n     }\n     FailureCollector collector = context.getFailureCollector();\n-    init(context.getInputSchemas(), collector);\n-    collector.getOrThrowException();\n-    Collection<OutputFieldInfo> outputFieldInfos = createOutputFieldInfos(context.getInputSchemas(), collector);\n-    collector.getOrThrowException();\n-    context.record(createFieldOperations(outputFieldInfos, perStageJoinKeys));\n+    Map<String, Schema> inputSchemas = context.getInputSchemas();\n+    // inputSchemas will be empty if the output schema of the previous node is a macro\n+    if (!inputSchemas.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4MTI4OQ=="}, "originalCommit": {"oid": "bbbb20df9e6511822701a899f051b2247f4b5908"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk4ODgwNg==", "bodyText": "fixed.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r385988806", "createdAt": "2020-02-29T01:35:58Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -95,11 +95,15 @@ public void prepareRun(BatchJoinerContext context) {\n       context.setNumPartitions(conf.getNumPartitions());\n     }\n     FailureCollector collector = context.getFailureCollector();\n-    init(context.getInputSchemas(), collector);\n-    collector.getOrThrowException();\n-    Collection<OutputFieldInfo> outputFieldInfos = createOutputFieldInfos(context.getInputSchemas(), collector);\n-    collector.getOrThrowException();\n-    context.record(createFieldOperations(outputFieldInfos, perStageJoinKeys));\n+    Map<String, Schema> inputSchemas = context.getInputSchemas();\n+    // inputSchemas will be empty if the output schema of the previous node is a macro\n+    if (!inputSchemas.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4MTI4OQ=="}, "originalCommit": {"oid": "bbbb20df9e6511822701a899f051b2247f4b5908"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjEyMzg4OnYy", "diffSide": "RIGHT", "path": "core-plugins/widgets/Joiner-batchjoiner.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODoxMDo1NFrOFvbxQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwMTozNjoxNlrOFwG42w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4MjM2OQ==", "bodyText": "are these types needed? Do the logical types (timestamp, date, etc) show up in the UI with this configuration?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r385282369", "createdAt": "2020-02-27T18:10:54Z", "author": {"login": "albertshau"}, "path": "core-plugins/widgets/Joiner-batchjoiner.json", "diffHunk": "@@ -45,5 +45,24 @@\n       ]\n     }\n   ],\n-  \"outputs\": []\n+  \"outputs\": [\n+    {\n+      \"name\": \"schema\",\n+      \"widget-type\": \"schema\",\n+      \"widget-attributes\": {\n+        \"schema-types\": [\n+          \"boolean\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbbb20df9e6511822701a899f051b2247f4b5908"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk4ODgyNw==", "bodyText": "removed as it's not needed.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r385988827", "createdAt": "2020-02-29T01:36:16Z", "author": {"login": "rmstar"}, "path": "core-plugins/widgets/Joiner-batchjoiner.json", "diffHunk": "@@ -45,5 +45,24 @@\n       ]\n     }\n   ],\n-  \"outputs\": []\n+  \"outputs\": [\n+    {\n+      \"name\": \"schema\",\n+      \"widget-type\": \"schema\",\n+      \"widget-attributes\": {\n+        \"schema-types\": [\n+          \"boolean\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4MjM2OQ=="}, "originalCommit": {"oid": "bbbb20df9e6511822701a899f051b2247f4b5908"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjE0MDE2OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODoxNjowOFrOFvb7uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwMTozNjo1NlrOFwG5GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4NTA1MQ==", "bodyText": "this should never be null, it should be validated in the configurePipeline() method.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r385285051", "createdAt": "2020-02-27T18:16:08Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -178,6 +182,13 @@ public void initialize(BatchJoinerRuntimeContext context) {\n     init(inputSchemas, collector);\n     collector.getOrThrowException();\n     outputSchema = getOutputSchema(inputSchemas, collector);\n+    if (outputSchema == null) {\n+      // Could not derive output schema from input schema. Try to get output schema from config.\n+      outputSchema = conf.getOutputSchema(collector);\n+      if (outputSchema == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbbb20df9e6511822701a899f051b2247f4b5908"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4NTc4NQ==", "bodyText": "in configurePipeline(), you should validate that a valid output schema is provided if the input schemas are unknown.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r385285785", "createdAt": "2020-02-27T18:17:33Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -178,6 +182,13 @@ public void initialize(BatchJoinerRuntimeContext context) {\n     init(inputSchemas, collector);\n     collector.getOrThrowException();\n     outputSchema = getOutputSchema(inputSchemas, collector);\n+    if (outputSchema == null) {\n+      // Could not derive output schema from input schema. Try to get output schema from config.\n+      outputSchema = conf.getOutputSchema(collector);\n+      if (outputSchema == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4NTA1MQ=="}, "originalCommit": {"oid": "bbbb20df9e6511822701a899f051b2247f4b5908"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk4ODg4OQ==", "bodyText": "moved validation to configurePipeline()", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r385988889", "createdAt": "2020-02-29T01:36:56Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -178,6 +182,13 @@ public void initialize(BatchJoinerRuntimeContext context) {\n     init(inputSchemas, collector);\n     collector.getOrThrowException();\n     outputSchema = getOutputSchema(inputSchemas, collector);\n+    if (outputSchema == null) {\n+      // Could not derive output schema from input schema. Try to get output schema from config.\n+      outputSchema = conf.getOutputSchema(collector);\n+      if (outputSchema == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4NTA1MQ=="}, "originalCommit": {"oid": "bbbb20df9e6511822701a899f051b2247f4b5908"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTE5Mzk0OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTowNzozM1rOFwvRRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjozNDoyOVrOFxZGRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY1MDQzNw==", "bodyText": "can change this to a single line:\nreturn !inputSchemas.isEmpty() && ...", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r386650437", "createdAt": "2020-03-02T21:07:33Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -361,6 +362,13 @@ Schema getOutputSchema(Map<String, Schema> inputSchemas, FailureCollector collec\n \n     return outputFieldInfo.values();\n   }\n+  private boolean inputSchemasAvailable(Map<String, Schema> inputSchemas) {\n+    // TODO: Remove isEmpty() check when CDAP-16351 is fixed\n+    if (inputSchemas.isEmpty() || inputSchemas.values().stream().anyMatch(v -> v == null)) {\n+      return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e79bb0bd67d0f9f3f1613178274c4c9f7491284"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMzNTc1MQ==", "bodyText": "done.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r387335751", "createdAt": "2020-03-03T22:34:29Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -361,6 +362,13 @@ Schema getOutputSchema(Map<String, Schema> inputSchemas, FailureCollector collec\n \n     return outputFieldInfo.values();\n   }\n+  private boolean inputSchemasAvailable(Map<String, Schema> inputSchemas) {\n+    // TODO: Remove isEmpty() check when CDAP-16351 is fixed\n+    if (inputSchemas.isEmpty() || inputSchemas.values().stream().anyMatch(v -> v == null)) {\n+      return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY1MDQzNw=="}, "originalCommit": {"oid": "3e79bb0bd67d0f9f3f1613178274c4c9f7491284"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTI3ODUwOnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTozNDowM1rOFwwFAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjozNDoxM1rOFxZF4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2MzY4Mw==", "bodyText": "looks like duplicate code, can it be refactored so it's not in multiple places?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r386663683", "createdAt": "2020-03-02T21:34:03Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -217,7 +217,11 @@ private boolean isAliasPresent(Iterable<String> stageOldNameAliasPair) {\n \n   void validateJoinKeySchemas(Map<String, Schema> inputSchemas, Map<String, List<String>> joinKeys,\n                               FailureCollector collector) {\n-    if (!containsMacro(JoinerConfig.JOIN_KEYS) && inputSchemas.size() != 0 && joinKeys.size() != inputSchemas.size()) {\n+    // Skip validation if joinKeys is a macro, or if any input's output schema is a macro.\n+    if (!containsMacro(JoinerConfig.JOIN_KEYS) &&\n+      // TODO: Remove isEmpty() check when CDAP-16351 is fixed\n+      !inputSchemas.isEmpty() && !inputSchemas.values().stream().anyMatch(v -> v == null) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e79bb0bd67d0f9f3f1613178274c4c9f7491284"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMzNTY0OA==", "bodyText": "Refactored this into JoinerConfig.inputSchemasAvailable()", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r387335648", "createdAt": "2020-03-03T22:34:13Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -217,7 +217,11 @@ private boolean isAliasPresent(Iterable<String> stageOldNameAliasPair) {\n \n   void validateJoinKeySchemas(Map<String, Schema> inputSchemas, Map<String, List<String>> joinKeys,\n                               FailureCollector collector) {\n-    if (!containsMacro(JoinerConfig.JOIN_KEYS) && inputSchemas.size() != 0 && joinKeys.size() != inputSchemas.size()) {\n+    // Skip validation if joinKeys is a macro, or if any input's output schema is a macro.\n+    if (!containsMacro(JoinerConfig.JOIN_KEYS) &&\n+      // TODO: Remove isEmpty() check when CDAP-16351 is fixed\n+      !inputSchemas.isEmpty() && !inputSchemas.values().stream().anyMatch(v -> v == null) &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2MzY4Mw=="}, "originalCommit": {"oid": "3e79bb0bd67d0f9f3f1613178274c4c9f7491284"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTI4MDcxOnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTozNDo1MVrOFwwGXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjozNDo0OVrOFxZGwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2NDAzMQ==", "bodyText": "style: should have a newline separating methods", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r386664031", "createdAt": "2020-03-02T21:34:51Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -361,6 +362,13 @@ Schema getOutputSchema(Map<String, Schema> inputSchemas, FailureCollector collec\n \n     return outputFieldInfo.values();\n   }\n+  private boolean inputSchemasAvailable(Map<String, Schema> inputSchemas) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e79bb0bd67d0f9f3f1613178274c4c9f7491284"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMzNTg3Mg==", "bodyText": "code moved to JoinerConfig.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r387335872", "createdAt": "2020-03-03T22:34:49Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -361,6 +362,13 @@ Schema getOutputSchema(Map<String, Schema> inputSchemas, FailureCollector collec\n \n     return outputFieldInfo.values();\n   }\n+  private boolean inputSchemasAvailable(Map<String, Schema> inputSchemas) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2NDAzMQ=="}, "originalCommit": {"oid": "3e79bb0bd67d0f9f3f1613178274c4c9f7491284"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTI5MTIyOnYy", "diffSide": "RIGHT", "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTozODowM1rOFwwMyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMjoxMDowOFrOFxdsrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2NTY3Mw==", "bodyText": "is it an issue if the same name is used across runs?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r386665673", "createdAt": "2020-03-02T21:38:03Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "diffHunk": "@@ -77,37 +82,55 @@ public void testInnerJoin() throws Exception {\n      *\n      */\n \n+    ETLBatchConfig config = ETLBatchConfig.builder(\"* * * * *\")\n+      .addStage(filmStage)\n+      .addStage(filmActorStage)\n+      .addStage(filmCategoryStage)\n+      .addStage(joinStage)\n+      .addStage(joinSinkStage)\n+      .addConnection(filmStage.getName(), joinStage.getName())\n+      .addConnection(filmActorStage.getName(), joinStage.getName())\n+      .addConnection(filmCategoryStage.getName(), joinStage.getName())\n+      .addConnection(joinStage.getName(), joinSinkStage.getName())\n+      .build();\n+    ApplicationManager appManager = deployETL(config, \"joiner-test\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4577589072cc4702d942485cc90b4957c9c75c8b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4NjMxNg==", "bodyText": "Yes, I see this error when dataset name is reused:\nException in thread \"WorkflowDriver\" io.cdap.cdap.api.dataset.lib.PartitionAlreadyExistsException: Dataset 'innerjoin-output' already has a partition with the same key: {year=2020, month=3, day=2, hour=14, minute=17}", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r386686316", "createdAt": "2020-03-02T22:20:48Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "diffHunk": "@@ -77,37 +82,55 @@ public void testInnerJoin() throws Exception {\n      *\n      */\n \n+    ETLBatchConfig config = ETLBatchConfig.builder(\"* * * * *\")\n+      .addStage(filmStage)\n+      .addStage(filmActorStage)\n+      .addStage(filmCategoryStage)\n+      .addStage(joinStage)\n+      .addStage(joinSinkStage)\n+      .addConnection(filmStage.getName(), joinStage.getName())\n+      .addConnection(filmActorStage.getName(), joinStage.getName())\n+      .addConnection(filmCategoryStage.getName(), joinStage.getName())\n+      .addConnection(joinStage.getName(), joinSinkStage.getName())\n+      .build();\n+    ApplicationManager appManager = deployETL(config, \"joiner-test\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2NTY3Mw=="}, "originalCommit": {"oid": "4577589072cc4702d942485cc90b4957c9c75c8b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY5ODU1Nw==", "bodyText": "yes, so is it a problem if this same 'joiner-test' app name is used? does this need to be unique?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r386698557", "createdAt": "2020-03-02T22:48:56Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "diffHunk": "@@ -77,37 +82,55 @@ public void testInnerJoin() throws Exception {\n      *\n      */\n \n+    ETLBatchConfig config = ETLBatchConfig.builder(\"* * * * *\")\n+      .addStage(filmStage)\n+      .addStage(filmActorStage)\n+      .addStage(filmCategoryStage)\n+      .addStage(joinStage)\n+      .addStage(joinSinkStage)\n+      .addConnection(filmStage.getName(), joinStage.getName())\n+      .addConnection(filmActorStage.getName(), joinStage.getName())\n+      .addConnection(filmCategoryStage.getName(), joinStage.getName())\n+      .addConnection(joinStage.getName(), joinSinkStage.getName())\n+      .build();\n+    ApplicationManager appManager = deployETL(config, \"joiner-test\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2NTY3Mw=="}, "originalCommit": {"oid": "4577589072cc4702d942485cc90b4957c9c75c8b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMzNjkxNg==", "bodyText": "The test passes when the 'joiner-test' app name is reused. Is it incorrect reuse the app name? If yes, I can pass in app name as param to joinHelper", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r387336916", "createdAt": "2020-03-03T22:37:12Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "diffHunk": "@@ -77,37 +82,55 @@ public void testInnerJoin() throws Exception {\n      *\n      */\n \n+    ETLBatchConfig config = ETLBatchConfig.builder(\"* * * * *\")\n+      .addStage(filmStage)\n+      .addStage(filmActorStage)\n+      .addStage(filmCategoryStage)\n+      .addStage(joinStage)\n+      .addStage(joinSinkStage)\n+      .addConnection(filmStage.getName(), joinStage.getName())\n+      .addConnection(filmActorStage.getName(), joinStage.getName())\n+      .addConnection(filmCategoryStage.getName(), joinStage.getName())\n+      .addConnection(joinStage.getName(), joinSinkStage.getName())\n+      .build();\n+    ApplicationManager appManager = deployETL(config, \"joiner-test\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2NTY3Mw=="}, "originalCommit": {"oid": "4577589072cc4702d942485cc90b4957c9c75c8b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQwMjA4Ng==", "bodyText": "it's probably safer to generate UUID.\nwe've had bugs in the past where a test will start an app, then wait for at least one completed run. However, since the app name is re-used, and the app was started in a different test, it immediately finds a completed run and doesn't actually wait for the current one to complete.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r387402086", "createdAt": "2020-03-04T01:34:42Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "diffHunk": "@@ -77,37 +82,55 @@ public void testInnerJoin() throws Exception {\n      *\n      */\n \n+    ETLBatchConfig config = ETLBatchConfig.builder(\"* * * * *\")\n+      .addStage(filmStage)\n+      .addStage(filmActorStage)\n+      .addStage(filmCategoryStage)\n+      .addStage(joinStage)\n+      .addStage(joinSinkStage)\n+      .addConnection(filmStage.getName(), joinStage.getName())\n+      .addConnection(filmActorStage.getName(), joinStage.getName())\n+      .addConnection(filmCategoryStage.getName(), joinStage.getName())\n+      .addConnection(joinStage.getName(), joinSinkStage.getName())\n+      .build();\n+    ApplicationManager appManager = deployETL(config, \"joiner-test\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2NTY3Mw=="}, "originalCommit": {"oid": "4577589072cc4702d942485cc90b4957c9c75c8b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQxMTExOA==", "bodyText": "thanks, fixed to use UUID.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r387411118", "createdAt": "2020-03-04T02:10:08Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "diffHunk": "@@ -77,37 +82,55 @@ public void testInnerJoin() throws Exception {\n      *\n      */\n \n+    ETLBatchConfig config = ETLBatchConfig.builder(\"* * * * *\")\n+      .addStage(filmStage)\n+      .addStage(filmActorStage)\n+      .addStage(filmCategoryStage)\n+      .addStage(joinStage)\n+      .addStage(joinSinkStage)\n+      .addConnection(filmStage.getName(), joinStage.getName())\n+      .addConnection(filmActorStage.getName(), joinStage.getName())\n+      .addConnection(filmCategoryStage.getName(), joinStage.getName())\n+      .addConnection(joinStage.getName(), joinSinkStage.getName())\n+      .build();\n+    ApplicationManager appManager = deployETL(config, \"joiner-test\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2NTY3Mw=="}, "originalCommit": {"oid": "4577589072cc4702d942485cc90b4957c9c75c8b"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTMwMDA2OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTo0MDo0MlrOFwwSHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjozNzoyMVrOFxZLDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2NzAzOQ==", "bodyText": "this method is deprecated and shouldn't be used, there is a builder method that doesn't take any arguments.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r386667039", "createdAt": "2020-03-02T21:40:42Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "diffHunk": "@@ -77,37 +82,55 @@ public void testInnerJoin() throws Exception {\n      *\n      */\n \n+    ETLBatchConfig config = ETLBatchConfig.builder(\"* * * * *\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4577589072cc4702d942485cc90b4957c9c75c8b"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMzNjk3NQ==", "bodyText": "fixed.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r387336975", "createdAt": "2020-03-03T22:37:21Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "diffHunk": "@@ -77,37 +82,55 @@ public void testInnerJoin() throws Exception {\n      *\n      */\n \n+    ETLBatchConfig config = ETLBatchConfig.builder(\"* * * * *\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2NzAzOQ=="}, "originalCommit": {"oid": "4577589072cc4702d942485cc90b4957c9c75c8b"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTMwNjUxOnYy", "diffSide": "RIGHT", "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTo0MjozNFrOFwwV7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjozNzo1MFrOFxZL6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2ODAxNQ==", "bodyText": "the schemas are being set here, isn't this test supposed to be for null input schemas? You should be using the method that doesn't take a schema as an argument.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r386668015", "createdAt": "2020-03-02T21:42:34Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "diffHunk": "@@ -216,6 +228,30 @@ public void testOuterJoin() throws Exception {\n                                    \"requiredInputs\", \"film,filmActor\"),\n                                  null));\n \n+    ETLStage joinSinkStage = new ETLStage(\n+      \"sink\", new ETLPlugin(\"TPFSAvro\", BatchSink.PLUGIN_TYPE,\n+                            ImmutableMap.of(Properties.TimePartitionedFileSetDataset.SCHEMA, outputSchema.toString(),\n+                                            Properties.TimePartitionedFileSetDataset.TPFS_NAME, joinedDatasetName),\n+                            null));\n+\n+    joinHelper(filmStage, filmActorStage, filmCategoryStage, joinStage, joinSinkStage,\n+               filmDatasetName, filmActorDatasetName, filmCategoryDatasetName, joinedDatasetName,\n+               outputSchema, this::verifyOuterJoinOutput);\n+  }\n+\n+  @Test\n+  public void testOuterJoinWithUnknownInputSchemas() throws Exception {\n+    String filmDatasetName = \"film-outerjoin-unknown-inputschemas\";\n+    String filmCategoryDatasetName = \"film-category-outerjoin-unknown-inputschemas\";\n+    String filmActorDatasetName = \"film-actor-outerjoin-unknown-inputschemas\";\n+    String joinedDatasetName = \"outerjoin-output-unknown-inputschemas\";\n+\n+\n+    ETLStage filmStage = new ETLStage(\"film\", MockSource.getPlugin(filmDatasetName, FILM_SCHEMA));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4577589072cc4702d942485cc90b4957c9c75c8b"}, "originalPosition": 287}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMzNzE5NA==", "bodyText": "thanks for catching that! fixed.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r387337194", "createdAt": "2020-03-03T22:37:50Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "diffHunk": "@@ -216,6 +228,30 @@ public void testOuterJoin() throws Exception {\n                                    \"requiredInputs\", \"film,filmActor\"),\n                                  null));\n \n+    ETLStage joinSinkStage = new ETLStage(\n+      \"sink\", new ETLPlugin(\"TPFSAvro\", BatchSink.PLUGIN_TYPE,\n+                            ImmutableMap.of(Properties.TimePartitionedFileSetDataset.SCHEMA, outputSchema.toString(),\n+                                            Properties.TimePartitionedFileSetDataset.TPFS_NAME, joinedDatasetName),\n+                            null));\n+\n+    joinHelper(filmStage, filmActorStage, filmCategoryStage, joinStage, joinSinkStage,\n+               filmDatasetName, filmActorDatasetName, filmCategoryDatasetName, joinedDatasetName,\n+               outputSchema, this::verifyOuterJoinOutput);\n+  }\n+\n+  @Test\n+  public void testOuterJoinWithUnknownInputSchemas() throws Exception {\n+    String filmDatasetName = \"film-outerjoin-unknown-inputschemas\";\n+    String filmCategoryDatasetName = \"film-category-outerjoin-unknown-inputschemas\";\n+    String filmActorDatasetName = \"film-actor-outerjoin-unknown-inputschemas\";\n+    String joinedDatasetName = \"outerjoin-output-unknown-inputschemas\";\n+\n+\n+    ETLStage filmStage = new ETLStage(\"film\", MockSource.getPlugin(filmDatasetName, FILM_SCHEMA));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY2ODAxNQ=="}, "originalCommit": {"oid": "4577589072cc4702d942485cc90b4957c9c75c8b"}, "originalPosition": 287}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTMxOTU3OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMTo0Njo1NlrOFwweSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjozODo1M1rOFxZNvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY3MDE1Mg==", "bodyText": "empty required inputs means an outer join? We don't need to run a full pipeline in order to test this, it should be handled in the JoinerConfigTest with maybe some refactoring (these pipeline tests take a long time to run and are really more like integration tests).\nAlso, is this testing some behavior that you changed in this PR?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r386670152", "createdAt": "2020-03-02T21:46:56Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "diffHunk": "@@ -309,9 +310,32 @@ public void testOuterJoinWithoutRequiredInputs() throws Exception {\n                                    \"joinKeys\", \"film.film_id=filmActor.film_id=filmCategory.film_id&\" +\n                                      \"film.film_name=filmActor.film_name=filmCategory.film_name\",\n                                    \"selectedFields\", selectedFields,\n-                                   \"requiredInputs\", \"\"),\n+                                   \"requiredInputs\", \"\",\n+                                   \"schema\", outputSchema.toString()),\n                                  null));\n \n+    ETLStage joinSinkStage = new ETLStage(\n+      \"sink\", new ETLPlugin(\"TPFSAvro\", BatchSink.PLUGIN_TYPE,\n+                            ImmutableMap.of(Properties.TimePartitionedFileSetDataset.SCHEMA, outputSchema.toString(),\n+                                            Properties.TimePartitionedFileSetDataset.TPFS_NAME, joinedDatasetName),\n+                            null));\n+\n+    joinHelper(filmStage, filmActorStage, filmCategoryStage, joinStage, joinSinkStage,\n+               filmDatasetName, filmActorDatasetName, filmCategoryDatasetName, joinedDatasetName,\n+               outputSchema, this::verifyOuterJoinWithoutRequiredInputs);\n+  }\n+\n+  @Test\n+  public void testOuterJoinWithoutRequiredInputs() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4577589072cc4702d942485cc90b4957c9c75c8b"}, "originalPosition": 425}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMzNzY2MA==", "bodyText": "this PR isn't really changing outer join behavior. I've removed testOuterJoinWithoutRequiredInputsAndInputSchemas.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r387337660", "createdAt": "2020-03-03T22:38:53Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/test/java/io/cdap/plugin/batch/joiner/JoinerTestRun.java", "diffHunk": "@@ -309,9 +310,32 @@ public void testOuterJoinWithoutRequiredInputs() throws Exception {\n                                    \"joinKeys\", \"film.film_id=filmActor.film_id=filmCategory.film_id&\" +\n                                      \"film.film_name=filmActor.film_name=filmCategory.film_name\",\n                                    \"selectedFields\", selectedFields,\n-                                   \"requiredInputs\", \"\"),\n+                                   \"requiredInputs\", \"\",\n+                                   \"schema\", outputSchema.toString()),\n                                  null));\n \n+    ETLStage joinSinkStage = new ETLStage(\n+      \"sink\", new ETLPlugin(\"TPFSAvro\", BatchSink.PLUGIN_TYPE,\n+                            ImmutableMap.of(Properties.TimePartitionedFileSetDataset.SCHEMA, outputSchema.toString(),\n+                                            Properties.TimePartitionedFileSetDataset.TPFS_NAME, joinedDatasetName),\n+                            null));\n+\n+    joinHelper(filmStage, filmActorStage, filmCategoryStage, joinStage, joinSinkStage,\n+               filmDatasetName, filmActorDatasetName, filmCategoryDatasetName, joinedDatasetName,\n+               outputSchema, this::verifyOuterJoinWithoutRequiredInputs);\n+  }\n+\n+  @Test\n+  public void testOuterJoinWithoutRequiredInputs() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY3MDE1Mg=="}, "originalCommit": {"oid": "4577589072cc4702d942485cc90b4957c9c75c8b"}, "originalPosition": 425}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDAxNzk2OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMTozNjozMVrOFxdLiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMjowOTozOFrOFxdsMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQwMjYzNQ==", "bodyText": "collector isn't really needed in this scenario, just throw an exception directly. The collector is useful mostly at configure time, to collect more than one failure and display it to the user at once.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r387402635", "createdAt": "2020-03-04T01:36:31Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -198,10 +198,19 @@ public StructuredRecord joinOn(String stageName, StructuredRecord record) {\n     List<Schema.Field> fields = new ArrayList<>();\n     Schema schema = record.getSchema();\n \n+\n     List<String> joinKeys = perStageJoinKeys.get(stageName);\n     int i = 1;\n     for (String joinKey : joinKeys) {\n-      Schema.Field joinField = Schema.Field.of(String.valueOf(i++), schema.getField(joinKey).getSchema());\n+      Schema.Field field = schema.getField(joinKey);\n+      if (field == null) {\n+        collector.addFailure(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3e9ac84ef97efd48189197f6fda3e423bcc0852"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQxMDk5Mw==", "bodyText": "updated to throw IllegalArgumentException", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r387410993", "createdAt": "2020-03-04T02:09:38Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -198,10 +198,19 @@ public StructuredRecord joinOn(String stageName, StructuredRecord record) {\n     List<Schema.Field> fields = new ArrayList<>();\n     Schema schema = record.getSchema();\n \n+\n     List<String> joinKeys = perStageJoinKeys.get(stageName);\n     int i = 1;\n     for (String joinKey : joinKeys) {\n-      Schema.Field joinField = Schema.Field.of(String.valueOf(i++), schema.getField(joinKey).getSchema());\n+      Schema.Field field = schema.getField(joinKey);\n+      if (field == null) {\n+        collector.addFailure(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQwMjYzNQ=="}, "originalCommit": {"oid": "f3e9ac84ef97efd48189197f6fda3e423bcc0852"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDAxOTY1OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMTozNzozMVrOFxdMmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMjowOToxOVrOFxdr9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQwMjkwNg==", "bodyText": "Join key field '[field name]' does not exist in schema from '[stage name]'", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r387402906", "createdAt": "2020-03-04T01:37:31Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -198,10 +198,19 @@ public StructuredRecord joinOn(String stageName, StructuredRecord record) {\n     List<Schema.Field> fields = new ArrayList<>();\n     Schema schema = record.getSchema();\n \n+\n     List<String> joinKeys = perStageJoinKeys.get(stageName);\n     int i = 1;\n     for (String joinKey : joinKeys) {\n-      Schema.Field joinField = Schema.Field.of(String.valueOf(i++), schema.getField(joinKey).getSchema());\n+      Schema.Field field = schema.getField(joinKey);\n+      if (field == null) {\n+        collector.addFailure(\n+          String.format(\"Join key field '%s' is not present in input stage of '%s'.\", joinKey, stageName), null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3e9ac84ef97efd48189197f6fda3e423bcc0852"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQxMDkzNA==", "bodyText": "fixed.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1031#discussion_r387410934", "createdAt": "2020-03-04T02:09:19Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -198,10 +198,19 @@ public StructuredRecord joinOn(String stageName, StructuredRecord record) {\n     List<Schema.Field> fields = new ArrayList<>();\n     Schema schema = record.getSchema();\n \n+\n     List<String> joinKeys = perStageJoinKeys.get(stageName);\n     int i = 1;\n     for (String joinKey : joinKeys) {\n-      Schema.Field joinField = Schema.Field.of(String.valueOf(i++), schema.getField(joinKey).getSchema());\n+      Schema.Field field = schema.getField(joinKey);\n+      if (field == null) {\n+        collector.addFailure(\n+          String.format(\"Join key field '%s' is not present in input stage of '%s'.\", joinKey, stageName), null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQwMjkwNg=="}, "originalCommit": {"oid": "f3e9ac84ef97efd48189197f6fda3e423bcc0852"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2485, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}