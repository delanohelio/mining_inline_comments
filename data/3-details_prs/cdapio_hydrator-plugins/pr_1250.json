{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMjc1NTMy", "number": 1250, "title": "Bug fix for plugin 400 ", "bodyText": "FTP Batch Source - Error supporting complex Passwords in Path field\nJIRA TICKET: https://cdap.atlassian.net/browse/PLUGIN-400", "createdAt": "2020-11-18T15:42:27Z", "url": "https://github.com/cdapio/hydrator-plugins/pull/1250", "merged": true, "mergeCommit": {"oid": "6c6ef97e8ce2300c31f63ee3d4a6a8290ae36aa0"}, "closed": true, "closedAt": "2020-12-03T19:48:29Z", "author": {"login": "flakrimjusufi"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddwKPWABqjQwMTEzNzQyMTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh2ehigBqjQwNTYwNDc0MjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d68d65edf14c6439f995cc1fbcf7cd2ed383f73a", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/d68d65edf14c6439f995cc1fbcf7cd2ed383f73a", "committedDate": "2020-11-18T14:25:40Z", "message": "Working version"}, "afterCommit": {"oid": "a17ce50ab76ebb9d9f892bdfeb069968df56e07c", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/a17ce50ab76ebb9d9f892bdfeb069968df56e07c", "committedDate": "2020-11-18T15:44:40Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a17ce50ab76ebb9d9f892bdfeb069968df56e07c", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/a17ce50ab76ebb9d9f892bdfeb069968df56e07c", "committedDate": "2020-11-18T15:44:40Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters"}, "afterCommit": {"oid": "73f0c3cc640d8923e432bd4b6150412f0008204a", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/73f0c3cc640d8923e432bd4b6150412f0008204a", "committedDate": "2020-11-19T14:30:22Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b68eac5b248b98669e3ba7608cd12338092ed3a", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/5b68eac5b248b98669e3ba7608cd12338092ed3a", "committedDate": "2020-11-19T14:55:58Z", "message": "Added ftp and sftp as constants"}, "afterCommit": {"oid": "408afcbaa422239d1d37362a358aaecff651f54f", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/408afcbaa422239d1d37362a358aaecff651f54f", "committedDate": "2020-11-19T14:56:39Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "408afcbaa422239d1d37362a358aaecff651f54f", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/408afcbaa422239d1d37362a358aaecff651f54f", "committedDate": "2020-11-19T14:56:39Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters"}, "afterCommit": {"oid": "3cdf1ff12e0c12548f84226874849961e7bf1410", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/3cdf1ff12e0c12548f84226874849961e7bf1410", "committedDate": "2020-11-19T14:59:43Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3cdf1ff12e0c12548f84226874849961e7bf1410", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/3cdf1ff12e0c12548f84226874849961e7bf1410", "committedDate": "2020-11-19T14:59:43Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters"}, "afterCommit": {"oid": "f78e9dc8d2f96f408f0dab6de1ccf47a55fe4fbc", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/f78e9dc8d2f96f408f0dab6de1ccf47a55fe4fbc", "committedDate": "2020-11-19T15:01:02Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters in authentication"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f78e9dc8d2f96f408f0dab6de1ccf47a55fe4fbc", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/f78e9dc8d2f96f408f0dab6de1ccf47a55fe4fbc", "committedDate": "2020-11-19T15:01:02Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters in authentication"}, "afterCommit": {"oid": "6a06eceaa43e7446bce38f65aca5eb1b95d6b242", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/6a06eceaa43e7446bce38f65aca5eb1b95d6b242", "committedDate": "2020-11-19T15:14:42Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters in authentication"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a06eceaa43e7446bce38f65aca5eb1b95d6b242", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/6a06eceaa43e7446bce38f65aca5eb1b95d6b242", "committedDate": "2020-11-19T15:14:42Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters in authentication"}, "afterCommit": {"oid": "f9f420f82502ddf63f98ac7f61503f3d7639c5fe", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/f9f420f82502ddf63f98ac7f61503f3d7639c5fe", "committedDate": "2020-11-24T11:09:21Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters in authentication"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3OTU2ODU1", "url": "https://github.com/cdapio/hydrator-plugins/pull/1250#pullrequestreview-537956855", "createdAt": "2020-11-24T21:26:17Z", "commit": {"oid": "f9f420f82502ddf63f98ac7f61503f3d7639c5fe"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMTozNjoxNlrOH5WG9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMzowMjo1M1rOH5bTAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MzEwOA==", "bodyText": "No need for this if condition. if fileSystemProperties == null && !authContainsSpecialCharacters(), we'll return empty hashmap at the end of the function.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1250#discussion_r529893108", "createdAt": "2020-11-24T21:36:16Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/source/FTPBatchSource.java", "diffHunk": "@@ -181,15 +212,63 @@ public Schema getSchema() {\n       return SCHEMA;\n     }\n \n+    public String extractPasswordFromUrl() {\n+      int getLastIndexOfAtSign = path.lastIndexOf(\"@\");\n+      String authentication = path.substring(0, getLastIndexOfAtSign);\n+      return authentication.substring(authentication.lastIndexOf(\":\") + 1);\n+    }\n+\n+    public boolean authContainsSpecialCharacters() {\n+      Pattern regularPasswordWithoutSpecialCharacters = Pattern.compile(\"[^A-Za-z0-9]\");\n+      Matcher regularPassword = regularPasswordWithoutSpecialCharacters.matcher(extractPasswordFromUrl());\n+      return !regularPassword.matches();\n+    }\n+\n     Map<String, String> getFileSystemProperties() {\n-      if (fileSystemProperties == null) {\n+      if (fileSystemProperties == null && !authContainsSpecialCharacters()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9f420f82502ddf63f98ac7f61503f3d7639c5fe"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk2MzM0OQ==", "bodyText": "add comment indicating what the uri looks like", "url": "https://github.com/cdapio/hydrator-plugins/pull/1250#discussion_r529963349", "createdAt": "2020-11-24T22:48:33Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/source/FTPBatchSource.java", "diffHunk": "@@ -181,15 +212,63 @@ public Schema getSchema() {\n       return SCHEMA;\n     }\n \n+    public String extractPasswordFromUrl() {\n+      int getLastIndexOfAtSign = path.lastIndexOf(\"@\");\n+      String authentication = path.substring(0, getLastIndexOfAtSign);\n+      return authentication.substring(authentication.lastIndexOf(\":\") + 1);\n+    }\n+\n+    public boolean authContainsSpecialCharacters() {\n+      Pattern regularPasswordWithoutSpecialCharacters = Pattern.compile(\"[^A-Za-z0-9]\");\n+      Matcher regularPassword = regularPasswordWithoutSpecialCharacters.matcher(extractPasswordFromUrl());\n+      return !regularPassword.matches();\n+    }\n+\n     Map<String, String> getFileSystemProperties() {\n-      if (fileSystemProperties == null) {\n+      if (fileSystemProperties == null && !authContainsSpecialCharacters()) {\n         return new HashMap<>();\n       }\n+      HashMap<String, String> fileSystemPropertiesMap = new HashMap<>();\n+      if (fileSystemProperties != null) {\n+        fileSystemPropertiesMap.putAll(GSON.fromJson(fileSystemProperties, MAP_STRING_STRING_TYPE));\n+      }\n+\n       try {\n-        return GSON.fromJson(fileSystemProperties, MAP_STRING_STRING_TYPE);\n+        if (authContainsSpecialCharacters()) {\n+          Path urlInfo;\n+          String extractedPassword = extractPasswordFromUrl();\n+          String encodedPassword = URLEncoder.encode(extractedPassword);\n+          String validatePath = path.replace(extractedPassword, encodedPassword);\n+          try {\n+            urlInfo = new Path(validatePath);\n+          } catch (Exception e) {\n+            throw new IllegalArgumentException(String.format(\"Unable to parse url: %s %s\", e.getMessage(), e));\n+          }\n+          int port = urlInfo.toUri().getPort();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9f420f82502ddf63f98ac7f61503f3d7639c5fe"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk2Njg2Ng==", "bodyText": "Does this work as expected when  urlInfo.toUri().getPort() returns -1, i.e. port is undefined ?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1250#discussion_r529966866", "createdAt": "2020-11-24T22:51:54Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/source/FTPBatchSource.java", "diffHunk": "@@ -181,15 +212,63 @@ public Schema getSchema() {\n       return SCHEMA;\n     }\n \n+    public String extractPasswordFromUrl() {\n+      int getLastIndexOfAtSign = path.lastIndexOf(\"@\");\n+      String authentication = path.substring(0, getLastIndexOfAtSign);\n+      return authentication.substring(authentication.lastIndexOf(\":\") + 1);\n+    }\n+\n+    public boolean authContainsSpecialCharacters() {\n+      Pattern regularPasswordWithoutSpecialCharacters = Pattern.compile(\"[^A-Za-z0-9]\");\n+      Matcher regularPassword = regularPasswordWithoutSpecialCharacters.matcher(extractPasswordFromUrl());\n+      return !regularPassword.matches();\n+    }\n+\n     Map<String, String> getFileSystemProperties() {\n-      if (fileSystemProperties == null) {\n+      if (fileSystemProperties == null && !authContainsSpecialCharacters()) {\n         return new HashMap<>();\n       }\n+      HashMap<String, String> fileSystemPropertiesMap = new HashMap<>();\n+      if (fileSystemProperties != null) {\n+        fileSystemPropertiesMap.putAll(GSON.fromJson(fileSystemProperties, MAP_STRING_STRING_TYPE));\n+      }\n+\n       try {\n-        return GSON.fromJson(fileSystemProperties, MAP_STRING_STRING_TYPE);\n+        if (authContainsSpecialCharacters()) {\n+          Path urlInfo;\n+          String extractedPassword = extractPasswordFromUrl();\n+          String encodedPassword = URLEncoder.encode(extractedPassword);\n+          String validatePath = path.replace(extractedPassword, encodedPassword);\n+          try {\n+            urlInfo = new Path(validatePath);\n+          } catch (Exception e) {\n+            throw new IllegalArgumentException(String.format(\"Unable to parse url: %s %s\", e.getMessage(), e));\n+          }\n+          int port = urlInfo.toUri().getPort();\n+          String host = urlInfo.toUri().getAuthority().substring(urlInfo.toUri().getAuthority().lastIndexOf(\"@\") + 1);\n+          String user = urlInfo.toUri().getAuthority().split(\":\")[0];\n+          if (urlInfo.toUri().getScheme().equals(FTP_PROTOCOL)) {\n+            port = (port == -1) ? DEFAULT_FTP_PORT : port;\n+            String cleanHostFTP = host.replace(\":\" + port, \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9f420f82502ddf63f98ac7f61503f3d7639c5fe"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk3MTE5OQ==", "bodyText": "Why are we removing the port from the path here? Looks like we don't do that if the password doesn't contain special characters?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1250#discussion_r529971199", "createdAt": "2020-11-24T22:56:08Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/source/FTPBatchSource.java", "diffHunk": "@@ -130,6 +138,29 @@ public String getReferenceName() {\n \n     @Override\n     public String getPath() {\n+      if (authContainsSpecialCharacters()) {\n+        Path urlInfo;\n+        String extractedPassword = extractPasswordFromUrl();\n+        String encodedPassword = URLEncoder.encode(extractedPassword);\n+        String validatePath = path.replace(extractedPassword, encodedPassword);\n+        try {\n+          urlInfo = new Path(validatePath);\n+        } catch (Exception e) {\n+          throw new IllegalArgumentException(String.format(\"Unable to parse url: %s %s\", e.getMessage(), e));\n+        }\n+        String host = urlInfo.toUri().getAuthority().substring(urlInfo.toUri().getAuthority().lastIndexOf(\"@\") + 1);\n+        String user = urlInfo.toUri().getAuthority().split(\":\")[0];\n+        String protocol = urlInfo.toUri().getScheme();\n+        int port = urlInfo.toUri().getPort();\n+        if (port == -1 && protocol.equals(FTP_PROTOCOL)) {\n+          port = DEFAULT_FTP_PORT;\n+        }\n+        if (port == -1 && protocol.equals(SFTP_PROTOCOL)) {\n+          port = DEFAULT_SFTP_PORT;\n+        }\n+        String cleanHost = host.replace(\":\" + port, \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9f420f82502ddf63f98ac7f61503f3d7639c5fe"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk3NTQwOA==", "bodyText": "we can use extractedPassword here.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1250#discussion_r529975408", "createdAt": "2020-11-24T23:00:12Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/source/FTPBatchSource.java", "diffHunk": "@@ -181,15 +212,63 @@ public Schema getSchema() {\n       return SCHEMA;\n     }\n \n+    public String extractPasswordFromUrl() {\n+      int getLastIndexOfAtSign = path.lastIndexOf(\"@\");\n+      String authentication = path.substring(0, getLastIndexOfAtSign);\n+      return authentication.substring(authentication.lastIndexOf(\":\") + 1);\n+    }\n+\n+    public boolean authContainsSpecialCharacters() {\n+      Pattern regularPasswordWithoutSpecialCharacters = Pattern.compile(\"[^A-Za-z0-9]\");\n+      Matcher regularPassword = regularPasswordWithoutSpecialCharacters.matcher(extractPasswordFromUrl());\n+      return !regularPassword.matches();\n+    }\n+\n     Map<String, String> getFileSystemProperties() {\n-      if (fileSystemProperties == null) {\n+      if (fileSystemProperties == null && !authContainsSpecialCharacters()) {\n         return new HashMap<>();\n       }\n+      HashMap<String, String> fileSystemPropertiesMap = new HashMap<>();\n+      if (fileSystemProperties != null) {\n+        fileSystemPropertiesMap.putAll(GSON.fromJson(fileSystemProperties, MAP_STRING_STRING_TYPE));\n+      }\n+\n       try {\n-        return GSON.fromJson(fileSystemProperties, MAP_STRING_STRING_TYPE);\n+        if (authContainsSpecialCharacters()) {\n+          Path urlInfo;\n+          String extractedPassword = extractPasswordFromUrl();\n+          String encodedPassword = URLEncoder.encode(extractedPassword);\n+          String validatePath = path.replace(extractedPassword, encodedPassword);\n+          try {\n+            urlInfo = new Path(validatePath);\n+          } catch (Exception e) {\n+            throw new IllegalArgumentException(String.format(\"Unable to parse url: %s %s\", e.getMessage(), e));\n+          }\n+          int port = urlInfo.toUri().getPort();\n+          String host = urlInfo.toUri().getAuthority().substring(urlInfo.toUri().getAuthority().lastIndexOf(\"@\") + 1);\n+          String user = urlInfo.toUri().getAuthority().split(\":\")[0];\n+          if (urlInfo.toUri().getScheme().equals(FTP_PROTOCOL)) {\n+            port = (port == -1) ? DEFAULT_FTP_PORT : port;\n+            String cleanHostFTP = host.replace(\":\" + port, \"\");\n+            fileSystemPropertiesMap.put(\"fs.ftp.host\", cleanHostFTP);\n+            fileSystemPropertiesMap.put(String.format(\"fs.ftp.user.%s\", cleanHostFTP), user);\n+            fileSystemPropertiesMap.put(String.format(\"fs.ftp.password.%s\", cleanHostFTP), extractPasswordFromUrl());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9f420f82502ddf63f98ac7f61503f3d7639c5fe"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk3NTc1Mg==", "bodyText": "we can use extractedPassword here.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1250#discussion_r529975752", "createdAt": "2020-11-24T23:00:30Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/source/FTPBatchSource.java", "diffHunk": "@@ -181,15 +212,63 @@ public Schema getSchema() {\n       return SCHEMA;\n     }\n \n+    public String extractPasswordFromUrl() {\n+      int getLastIndexOfAtSign = path.lastIndexOf(\"@\");\n+      String authentication = path.substring(0, getLastIndexOfAtSign);\n+      return authentication.substring(authentication.lastIndexOf(\":\") + 1);\n+    }\n+\n+    public boolean authContainsSpecialCharacters() {\n+      Pattern regularPasswordWithoutSpecialCharacters = Pattern.compile(\"[^A-Za-z0-9]\");\n+      Matcher regularPassword = regularPasswordWithoutSpecialCharacters.matcher(extractPasswordFromUrl());\n+      return !regularPassword.matches();\n+    }\n+\n     Map<String, String> getFileSystemProperties() {\n-      if (fileSystemProperties == null) {\n+      if (fileSystemProperties == null && !authContainsSpecialCharacters()) {\n         return new HashMap<>();\n       }\n+      HashMap<String, String> fileSystemPropertiesMap = new HashMap<>();\n+      if (fileSystemProperties != null) {\n+        fileSystemPropertiesMap.putAll(GSON.fromJson(fileSystemProperties, MAP_STRING_STRING_TYPE));\n+      }\n+\n       try {\n-        return GSON.fromJson(fileSystemProperties, MAP_STRING_STRING_TYPE);\n+        if (authContainsSpecialCharacters()) {\n+          Path urlInfo;\n+          String extractedPassword = extractPasswordFromUrl();\n+          String encodedPassword = URLEncoder.encode(extractedPassword);\n+          String validatePath = path.replace(extractedPassword, encodedPassword);\n+          try {\n+            urlInfo = new Path(validatePath);\n+          } catch (Exception e) {\n+            throw new IllegalArgumentException(String.format(\"Unable to parse url: %s %s\", e.getMessage(), e));\n+          }\n+          int port = urlInfo.toUri().getPort();\n+          String host = urlInfo.toUri().getAuthority().substring(urlInfo.toUri().getAuthority().lastIndexOf(\"@\") + 1);\n+          String user = urlInfo.toUri().getAuthority().split(\":\")[0];\n+          if (urlInfo.toUri().getScheme().equals(FTP_PROTOCOL)) {\n+            port = (port == -1) ? DEFAULT_FTP_PORT : port;\n+            String cleanHostFTP = host.replace(\":\" + port, \"\");\n+            fileSystemPropertiesMap.put(\"fs.ftp.host\", cleanHostFTP);\n+            fileSystemPropertiesMap.put(String.format(\"fs.ftp.user.%s\", cleanHostFTP), user);\n+            fileSystemPropertiesMap.put(String.format(\"fs.ftp.password.%s\", cleanHostFTP), extractPasswordFromUrl());\n+            fileSystemPropertiesMap.put(\"fs.ftp.host.port\", String.valueOf(port));\n+          } else {\n+            port = (port == -1) ? DEFAULT_SFTP_PORT : port;\n+            String cleanHostSFTP = host.replace(\":\" + port, \"\");\n+            fileSystemPropertiesMap.put(String.format(\"fs.sftp.user.%s\", cleanHostSFTP), user);\n+            fileSystemPropertiesMap.put(String.format(\"fs.sftp.password.%s.%s\", cleanHostSFTP, user),\n+                                        extractPasswordFromUrl());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9f420f82502ddf63f98ac7f61503f3d7639c5fe"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk3ODExMw==", "bodyText": "why are we url encoding the password? seems like we just set the un-encoded password in filesystem property fs.(s)ftp.password..", "url": "https://github.com/cdapio/hydrator-plugins/pull/1250#discussion_r529978113", "createdAt": "2020-11-24T23:02:53Z", "author": {"login": "rmstar"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/source/FTPBatchSource.java", "diffHunk": "@@ -181,15 +212,63 @@ public Schema getSchema() {\n       return SCHEMA;\n     }\n \n+    public String extractPasswordFromUrl() {\n+      int getLastIndexOfAtSign = path.lastIndexOf(\"@\");\n+      String authentication = path.substring(0, getLastIndexOfAtSign);\n+      return authentication.substring(authentication.lastIndexOf(\":\") + 1);\n+    }\n+\n+    public boolean authContainsSpecialCharacters() {\n+      Pattern regularPasswordWithoutSpecialCharacters = Pattern.compile(\"[^A-Za-z0-9]\");\n+      Matcher regularPassword = regularPasswordWithoutSpecialCharacters.matcher(extractPasswordFromUrl());\n+      return !regularPassword.matches();\n+    }\n+\n     Map<String, String> getFileSystemProperties() {\n-      if (fileSystemProperties == null) {\n+      if (fileSystemProperties == null && !authContainsSpecialCharacters()) {\n         return new HashMap<>();\n       }\n+      HashMap<String, String> fileSystemPropertiesMap = new HashMap<>();\n+      if (fileSystemProperties != null) {\n+        fileSystemPropertiesMap.putAll(GSON.fromJson(fileSystemProperties, MAP_STRING_STRING_TYPE));\n+      }\n+\n       try {\n-        return GSON.fromJson(fileSystemProperties, MAP_STRING_STRING_TYPE);\n+        if (authContainsSpecialCharacters()) {\n+          Path urlInfo;\n+          String extractedPassword = extractPasswordFromUrl();\n+          String encodedPassword = URLEncoder.encode(extractedPassword);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9f420f82502ddf63f98ac7f61503f3d7639c5fe"}, "originalPosition": 97}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9f420f82502ddf63f98ac7f61503f3d7639c5fe", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/f9f420f82502ddf63f98ac7f61503f3d7639c5fe", "committedDate": "2020-11-24T11:09:21Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters in authentication"}, "afterCommit": {"oid": "e2e3758b595bc571137c7b646cfed589d869924a", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/e2e3758b595bc571137c7b646cfed589d869924a", "committedDate": "2020-11-25T12:25:33Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters in authentication"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjI4MzQx", "url": "https://github.com/cdapio/hydrator-plugins/pull/1250#pullrequestreview-541228341", "createdAt": "2020-11-30T19:34:06Z", "commit": {"oid": "25bd28ab24250cf376fb7d4d323bed2cd461796e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "016f0e7782a5cfa0d0ccd1d49988e549a628bb9d", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/016f0e7782a5cfa0d0ccd1d49988e549a628bb9d", "committedDate": "2020-12-01T09:24:30Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters in authentication"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "25bd28ab24250cf376fb7d4d323bed2cd461796e", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/25bd28ab24250cf376fb7d4d323bed2cd461796e", "committedDate": "2020-11-26T09:39:29Z", "message": "Removed an unnecessary condition from getFileSystemProperties"}, "afterCommit": {"oid": "016f0e7782a5cfa0d0ccd1d49988e549a628bb9d", "author": {"user": {"login": "flakrimjusufi", "name": "Flakrim"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/016f0e7782a5cfa0d0ccd1d49988e549a628bb9d", "committedDate": "2020-12-01T09:24:30Z", "message": "Bug fix for plugin-400, extracted file system properties from url when there are special characters in authentication"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1509, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}