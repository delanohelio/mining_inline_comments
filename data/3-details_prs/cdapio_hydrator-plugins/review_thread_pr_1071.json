{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMDU3MjEx", "number": 1071, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowNTowNFrODvqD9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDoxOToyOFrODvybVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjk4ODA0OnYy", "diffSide": "RIGHT", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowNTowNFrOGCNepQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowNTowNFrOGCNepQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MTE3Mw==", "bodyText": "nit - put a new line after this, the convention is to have a new line before the params", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r404971173", "createdAt": "2020-04-07T17:05:04Z", "author": {"login": "yaojiefeng"}, "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java", "diffHunk": "@@ -41,4 +46,24 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch sink plugins (WriteOperation). This method should be called from prepareRun of\n+   * any batch sink plugin.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad20a5d95609ee2ff452afaa6a858cccc5231c20"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjk5MTM2OnYy", "diffSide": "RIGHT", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowNTo1MVrOGCNg2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowNTo1MVrOGCNg2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MTczNw==", "bodyText": "it is better to check if the schema is null, if it is null or the fields is null, if that is true, we should log a message", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r404971737", "createdAt": "2020-04-07T17:05:51Z", "author": {"login": "yaojiefeng"}, "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java", "diffHunk": "@@ -41,4 +46,24 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch sink plugins (WriteOperation). This method should be called from prepareRun of\n+   * any batch sink plugin.\n+   * @param context BatchSinkContext from prepareRun\n+   * @param outputName name of output dataset\n+   * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n+   * not be null.\n+   * @param operationName name of the operation\n+   * @param description operation description; complete sentences preferred\n+   */\n+  protected void recordLineage(BatchSinkContext context, String outputName, Schema tableSchema, String operationName,\n+                               String description) {\n+    LineageRecorder lineageRecorder = new LineageRecorder(context, outputName);\n+    lineageRecorder.createExternalDataset(tableSchema);\n+    List<String> fieldNames = tableSchema.getFields().stream().map(Schema.Field::getName).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad20a5d95609ee2ff452afaa6a858cccc5231c20"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjk5MTg4OnYy", "diffSide": "RIGHT", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowNTo1OFrOGCNhKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowNTo1OFrOGCNhKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MTgxNg==", "bodyText": "schema can be null", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r404971816", "createdAt": "2020-04-07T17:05:58Z", "author": {"login": "yaojiefeng"}, "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java", "diffHunk": "@@ -41,4 +46,24 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch sink plugins (WriteOperation). This method should be called from prepareRun of\n+   * any batch sink plugin.\n+   * @param context BatchSinkContext from prepareRun\n+   * @param outputName name of output dataset\n+   * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n+   * not be null.\n+   * @param operationName name of the operation\n+   * @param description operation description; complete sentences preferred\n+   */\n+  protected void recordLineage(BatchSinkContext context, String outputName, Schema tableSchema, String operationName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad20a5d95609ee2ff452afaa6a858cccc5231c20"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjk5MzI1OnYy", "diffSide": "RIGHT", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowNjoxOVrOGCNiDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowNjoxOVrOGCNiDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MjA0NA==", "bodyText": "Same comment here as the ReferenceBatchSink", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r404972044", "createdAt": "2020-04-07T17:06:19Z", "author": {"login": "yaojiefeng"}, "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java", "diffHunk": "@@ -41,4 +46,24 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch source plugins (ReadOperation). This method should be called from prepareRun\n+   * of any batch source plugin.\n+   * @param context BatchSourceContext from prepareRun", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad20a5d95609ee2ff452afaa6a858cccc5231c20"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDI4OTIxOnYy", "diffSide": "RIGHT", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMzo0NDoxNlrOGCaDug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMzo0NDoxNlrOGCaDug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3NzI3NA==", "bodyText": "Don't use Precondition, if will fail the pipeline. Should just do a if check and log as a warn message that field lineage will be missing", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r405177274", "createdAt": "2020-04-07T23:44:16Z", "author": {"login": "yaojiefeng"}, "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java", "diffHunk": "@@ -41,4 +47,27 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch sink plugins (WriteOperation). This method should be called from prepareRun of\n+   * any batch sink plugin.\n+   *\n+   * @param context BatchSinkContext from prepareRun\n+   * @param outputName name of output dataset\n+   * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n+   * not be null.\n+   * @param operationName name of the operation\n+   * @param description operation description; complete sentences preferred\n+   */\n+  protected void recordLineage(BatchSinkContext context, String outputName, Schema tableSchema, String operationName,\n+                               String description) {\n+    Preconditions.checkNotNull(tableSchema, \"schema for output %s is null.\", outputName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f775cf8201de14f420cd81f9c4b0a3213b55dbf3"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDI4OTM0OnYy", "diffSide": "RIGHT", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMzo0NDoyMlrOGCaD1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMzo0NDoyMlrOGCaD1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3NzMwMg==", "bodyText": "same here", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r405177302", "createdAt": "2020-04-07T23:44:22Z", "author": {"login": "yaojiefeng"}, "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java", "diffHunk": "@@ -41,4 +47,27 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch source plugins (ReadOperation). This method should be called from prepareRun\n+   * of any batch source plugin.\n+   *\n+   * @param context BatchSourceContext from prepareRun\n+   * @param outputName name of output dataset\n+   * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n+   * not be null.\n+   * @param operationName name of the operation\n+   * @param description operation description; complete sentences preferred\n+   */\n+  protected void recordLineage(BatchSourceContext context, String outputName, Schema tableSchema, String operationName,\n+                               String description) {\n+    Preconditions.checkNotNull(tableSchema, \"schema for output %s is null.\", outputName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f775cf8201de14f420cd81f9c4b0a3213b55dbf3"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDM1ODQ2OnYy", "diffSide": "RIGHT", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDoxOToxOVrOGCas-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDoxOToxOVrOGCas-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NzgzNA==", "bodyText": "nit - just say schema fields is empty", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r405187834", "createdAt": "2020-04-08T00:19:19Z", "author": {"login": "yaojiefeng"}, "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSource.java", "diffHunk": "@@ -41,4 +50,33 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch source plugins (ReadOperation). This method should be called from prepareRun\n+   * of any batch source plugin.\n+   *\n+   * @param context BatchSourceContext from prepareRun\n+   * @param outputName name of output dataset\n+   * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n+   * not be null.\n+   * @param operationName name of the operation\n+   * @param description operation description; complete sentences preferred\n+   */\n+  protected void recordLineage(BatchSourceContext context, String outputName, Schema tableSchema, String operationName,\n+                               String description) {\n+    if (tableSchema == null) {\n+      LOG.warn(\"Schema for output %s is null. Field-level lineage will not be recorded.\", outputName);\n+      return;\n+    }\n+    if (tableSchema.getFields() == null) {\n+      LOG.warn(\"schema.getFields() for output %s is null. Field-level lineage will not be recorded.\", outputName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f277e092a3ee085af781a16acb4122c93b89675e"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDM1ODYzOnYy", "diffSide": "RIGHT", "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDoxOToyOFrOGCatGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDoxOToyOFrOGCatGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4Nzg2Nw==", "bodyText": "nit - just say schema fields is empty", "url": "https://github.com/cdapio/hydrator-plugins/pull/1071#discussion_r405187867", "createdAt": "2020-04-08T00:19:28Z", "author": {"login": "yaojiefeng"}, "path": "hydrator-common/src/main/java/io/cdap/plugin/common/ReferenceBatchSink.java", "diffHunk": "@@ -41,4 +50,33 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     IdUtils.validateReferenceName(config.referenceName, collector);\n     collector.getOrThrowException();\n   }\n+\n+  /**\n+   * Record field-level lineage for batch sink plugins (WriteOperation). This method should be called from prepareRun of\n+   * any batch sink plugin.\n+   *\n+   * @param context BatchSinkContext from prepareRun\n+   * @param outputName name of output dataset\n+   * @param tableSchema schema of fields. Also used to determine list of field names. Schema and schema.getFields() must\n+   * not be null.\n+   * @param operationName name of the operation\n+   * @param description operation description; complete sentences preferred\n+   */\n+  protected void recordLineage(BatchSinkContext context, String outputName, Schema tableSchema, String operationName,\n+                               String description) {\n+    if (tableSchema == null) {\n+      LOG.warn(\"Schema for output %s is null. Field-level lineage will not be recorded.\", outputName);\n+      return;\n+    }\n+    if (tableSchema.getFields() == null) {\n+      LOG.warn(\"schema.getFields() for output %s is null. Field-level lineage will not be recorded.\", outputName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f277e092a3ee085af781a16acb4122c93b89675e"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2517, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}