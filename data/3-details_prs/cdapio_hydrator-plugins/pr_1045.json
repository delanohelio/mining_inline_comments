{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxOTM2MTI3", "number": 1045, "title": "Cherry pick fixes to support macros in joiner plugin", "bodyText": "This cherry pick includes the following commits:\n\nSupport macro for Joiner, dedupe and distinct transform fields\nCDAP-16324) Improve macro support in Joiner plugin\nParts of Refactoring of the Joiner implementation\n\nThis commit in release/2.3 conflicts with the macro changes in develop. In particular, the performance optimization to cache join key schema is not compatible with the changes in develop, so it has been reverted.\n\n\nRe-implemented caching logic on develop #1047", "createdAt": "2020-03-22T00:23:25Z", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045", "merged": true, "mergeCommit": {"oid": "cd3d90813e2260bd538eb78a62cf8d9e18545110"}, "closed": true, "closedAt": "2020-03-25T06:09:36Z", "author": {"login": "rmstar"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQ680uABqjMxNjE4NDA5MzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRAIaZgBqjMxNjI0NjgwOTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e82e19ab2301ae3af73d77361ea0767ac639134", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/3e82e19ab2301ae3af73d77361ea0767ac639134", "committedDate": "2020-03-22T00:02:07Z", "message": "Cherry pick fixes to support macros in joiner plugin"}, "afterCommit": {"oid": "c08e21e077b35a9dac3203d08d51a5ec47ea29a6", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/c08e21e077b35a9dac3203d08d51a5ec47ea29a6", "committedDate": "2020-03-24T22:44:37Z", "message": "Cherry pick fixes to support macros in joiner plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNzU3MzIy", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#pullrequestreview-380757322", "createdAt": "2020-03-24T23:03:36Z", "commit": {"oid": "c08e21e077b35a9dac3203d08d51a5ec47ea29a6"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMzowMzozNlrOF7GUYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMzozMzowMVrOF7G9Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxMzgyNQ==", "bodyText": "unused?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#discussion_r397513825", "createdAt": "2020-03-24T23:03:36Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -68,11 +64,14 @@\n   static final String IDENTITY_OPERATION_DESCRIPTION = \"Unchanged as part of a join\";\n   static final String RENAME_OPERATION_DESCRIPTION = \"Renamed as a part of a join\";\n \n+\n   private final JoinerConfig conf;\n   private Schema outputSchema;\n-  private Map<String, StageKeyInfo> stageKeyInfos;\n+  private Map<String, List<String>> perStageJoinKeys;\n   private Table<String, String, String> perStageSelectedFields;\n+  private Multimap<String, String> duplicateFields = ArrayListMultimap.create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e21e077b35a9dac3203d08d51a5ec47ea29a6"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNDEyOA==", "bodyText": "nit: JoinerConfig.OUTPUT_SCHEMA", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#discussion_r397514128", "createdAt": "2020-03-24T23:04:24Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -82,24 +81,39 @@ public Joiner(JoinerConfig conf) {\n   public void configurePipeline(MultiInputPipelineConfigurer pipelineConfigurer) {\n     MultiInputStageConfigurer stageConfigurer = pipelineConfigurer.getMultiInputStageConfigurer();\n     Map<String, Schema> inputSchemas = stageConfigurer.getInputSchemas();\n-    FailureCollector collector = init(inputSchemas,\n-                                      pipelineConfigurer.getMultiInputStageConfigurer().getFailureCollector());\n+    FailureCollector collector = pipelineConfigurer.getMultiInputStageConfigurer().getFailureCollector();\n+    init(inputSchemas, collector);\n     collector.getOrThrowException();\n-    //validate the input schema and get the output schema for it\n-    stageConfigurer.setOutputSchema(getOutputSchema(inputSchemas, collector));\n+    if (!conf.inputSchemasAvailable(inputSchemas) && !conf.containsMacro(conf.OUTPUT_SCHEMA) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e21e077b35a9dac3203d08d51a5ec47ea29a6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNDIyMQ==", "bodyText": "same here: JoinerConfig.OUTPUT_SCHEMA", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#discussion_r397514221", "createdAt": "2020-03-24T23:04:40Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -82,24 +81,39 @@ public Joiner(JoinerConfig conf) {\n   public void configurePipeline(MultiInputPipelineConfigurer pipelineConfigurer) {\n     MultiInputStageConfigurer stageConfigurer = pipelineConfigurer.getMultiInputStageConfigurer();\n     Map<String, Schema> inputSchemas = stageConfigurer.getInputSchemas();\n-    FailureCollector collector = init(inputSchemas,\n-                                      pipelineConfigurer.getMultiInputStageConfigurer().getFailureCollector());\n+    FailureCollector collector = pipelineConfigurer.getMultiInputStageConfigurer().getFailureCollector();\n+    init(inputSchemas, collector);\n     collector.getOrThrowException();\n-    //validate the input schema and get the output schema for it\n-    stageConfigurer.setOutputSchema(getOutputSchema(inputSchemas, collector));\n+    if (!conf.inputSchemasAvailable(inputSchemas) && !conf.containsMacro(conf.OUTPUT_SCHEMA) &&\n+      conf.getOutputSchema(collector) == null) {\n+      // If input schemas are unknown, an output schema must be provided.\n+      collector.addFailure(\"Output schema must be specified\", null).withConfigProperty(conf.OUTPUT_SCHEMA);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e21e077b35a9dac3203d08d51a5ec47ea29a6"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNDQ5MA==", "bodyText": "nit: Mark this as @VisibleForTesting", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#discussion_r397514490", "createdAt": "2020-03-24T23:05:28Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -215,31 +259,57 @@ public StructuredRecord merge(StructuredRecord joinKey, Iterable<JoinElement<Str\n   }\n \n   FailureCollector init(Map<String, Schema> inputSchemas, FailureCollector failureCollector) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e21e077b35a9dac3203d08d51a5ec47ea29a6"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNDYxMA==", "bodyText": "we can make this method private", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#discussion_r397514610", "createdAt": "2020-03-24T23:05:50Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -215,31 +259,57 @@ public StructuredRecord merge(StructuredRecord joinKey, Iterable<JoinElement<Str\n   }\n \n   FailureCollector init(Map<String, Schema> inputSchemas, FailureCollector failureCollector) {\n-    Map<String, StageKeyInfo> keyInfos = new HashMap<>();\n-    StageKeyInfo prevKeyInfo = null;\n-    for (Map.Entry<String, List<String>> entry : conf.getPerStageJoinKeys().entrySet()) {\n+    validateJoinKeySchemas(inputSchemas, conf.getPerStageJoinKeys(), failureCollector);\n+    joinConfig = new JoinConfig(conf.getInputs());\n+    perStageSelectedFields = conf.getPerStageSelectedFields();\n+    return failureCollector;\n+  }\n+\n+  void validateJoinKeySchemas(Map<String, Schema> inputSchemas, Map<String, List<String>> joinKeys,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e21e077b35a9dac3203d08d51a5ec47ea29a6"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNDg1Mg==", "bodyText": "Annotate this with @VisibleForTesting", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#discussion_r397514852", "createdAt": "2020-03-24T23:06:38Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -215,31 +259,57 @@ public StructuredRecord merge(StructuredRecord joinKey, Iterable<JoinElement<Str\n   }\n \n   FailureCollector init(Map<String, Schema> inputSchemas, FailureCollector failureCollector) {\n-    Map<String, StageKeyInfo> keyInfos = new HashMap<>();\n-    StageKeyInfo prevKeyInfo = null;\n-    for (Map.Entry<String, List<String>> entry : conf.getPerStageJoinKeys().entrySet()) {\n+    validateJoinKeySchemas(inputSchemas, conf.getPerStageJoinKeys(), failureCollector);\n+    joinConfig = new JoinConfig(conf.getInputs());\n+    perStageSelectedFields = conf.getPerStageSelectedFields();\n+    return failureCollector;\n+  }\n+\n+  void validateJoinKeySchemas(Map<String, Schema> inputSchemas, Map<String, List<String>> joinKeys,\n+                              FailureCollector collector) {\n+    perStageJoinKeys = joinKeys;\n+    conf.validateJoinKeySchemas(inputSchemas, joinKeys, collector);\n+\n+    List<Schema> prevSchemaList = null;\n+    for (Map.Entry<String, List<String>> entry : perStageJoinKeys.entrySet()) {\n+      ArrayList<Schema> schemaList = new ArrayList<>();\n       String stageName = entry.getKey();\n-      StageKeyInfo keyInfo = new StageKeyInfo(stageName, inputSchemas.get(stageName),\n-                                              entry.getValue(), failureCollector);\n-      if (prevKeyInfo != null && !prevKeyInfo.getSchema().equals(keyInfo.getSchema())) {\n-        failureCollector.addFailure(\n+\n+      Schema schema = inputSchemas.get(stageName);\n+      if (schema == null) {\n+        // Input schema will be null if the output schema of the previous node is a macro\n+        return;\n+      }\n+\n+      for (String joinKey : entry.getValue()) {\n+        Schema.Field field = schema.getField(joinKey);\n+        if (field == null) {\n+          collector.addFailure(\n+            String.format(\"Join key field '%s' is not present in input stage of '%s'.\", joinKey, stageName), null)\n+            .withConfigProperty(conf.JOIN_KEYS);\n+        }\n+        schemaList.add(field.getSchema());\n+      }\n+      if (prevSchemaList != null && !prevSchemaList.equals(schemaList)) {\n+        collector.addFailure(\n           String.format(\"For stage '%s', Schemas of join keys '%s' are expected to be: '%s', but found: '%s'.\",\n-                        stageName, entry.getValue(), prevKeyInfo.getFieldSchemas(), keyInfo.getFieldSchemas()), null)\n-          .withConfigProperty(JoinerConfig.JOIN_KEYS);\n-      } else {\n-        prevKeyInfo = keyInfo;\n+                        stageName, entry.getValue(), prevSchemaList.toString(), schemaList.toString()), null)\n+          .withConfigProperty(conf.JOIN_KEYS);\n       }\n-      keyInfos.put(stageName, keyInfo);\n+      prevSchemaList = schemaList;\n     }\n-\n-    stageKeyInfos = Collections.unmodifiableMap(keyInfos);\n-    joinConfig = new JoinConfig(conf.getInputs());\n-    perStageSelectedFields = conf.getPerStageSelectedFields();\n-    return failureCollector;\n   }\n \n   Schema getOutputSchema(Map<String, Schema> inputSchemas, FailureCollector collector) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e21e077b35a9dac3203d08d51a5ec47ea29a6"}, "originalPosition": 205}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNTI4NQ==", "bodyText": "nit: JoinerConfig.JOIN_KEYS", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#discussion_r397515285", "createdAt": "2020-03-24T23:07:49Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -215,31 +259,57 @@ public StructuredRecord merge(StructuredRecord joinKey, Iterable<JoinElement<Str\n   }\n \n   FailureCollector init(Map<String, Schema> inputSchemas, FailureCollector failureCollector) {\n-    Map<String, StageKeyInfo> keyInfos = new HashMap<>();\n-    StageKeyInfo prevKeyInfo = null;\n-    for (Map.Entry<String, List<String>> entry : conf.getPerStageJoinKeys().entrySet()) {\n+    validateJoinKeySchemas(inputSchemas, conf.getPerStageJoinKeys(), failureCollector);\n+    joinConfig = new JoinConfig(conf.getInputs());\n+    perStageSelectedFields = conf.getPerStageSelectedFields();\n+    return failureCollector;\n+  }\n+\n+  void validateJoinKeySchemas(Map<String, Schema> inputSchemas, Map<String, List<String>> joinKeys,\n+                              FailureCollector collector) {\n+    perStageJoinKeys = joinKeys;\n+    conf.validateJoinKeySchemas(inputSchemas, joinKeys, collector);\n+\n+    List<Schema> prevSchemaList = null;\n+    for (Map.Entry<String, List<String>> entry : perStageJoinKeys.entrySet()) {\n+      ArrayList<Schema> schemaList = new ArrayList<>();\n       String stageName = entry.getKey();\n-      StageKeyInfo keyInfo = new StageKeyInfo(stageName, inputSchemas.get(stageName),\n-                                              entry.getValue(), failureCollector);\n-      if (prevKeyInfo != null && !prevKeyInfo.getSchema().equals(keyInfo.getSchema())) {\n-        failureCollector.addFailure(\n+\n+      Schema schema = inputSchemas.get(stageName);\n+      if (schema == null) {\n+        // Input schema will be null if the output schema of the previous node is a macro\n+        return;\n+      }\n+\n+      for (String joinKey : entry.getValue()) {\n+        Schema.Field field = schema.getField(joinKey);\n+        if (field == null) {\n+          collector.addFailure(\n+            String.format(\"Join key field '%s' is not present in input stage of '%s'.\", joinKey, stageName), null)\n+            .withConfigProperty(conf.JOIN_KEYS);\n+        }\n+        schemaList.add(field.getSchema());\n+      }\n+      if (prevSchemaList != null && !prevSchemaList.equals(schemaList)) {\n+        collector.addFailure(\n           String.format(\"For stage '%s', Schemas of join keys '%s' are expected to be: '%s', but found: '%s'.\",\n-                        stageName, entry.getValue(), prevKeyInfo.getFieldSchemas(), keyInfo.getFieldSchemas()), null)\n-          .withConfigProperty(JoinerConfig.JOIN_KEYS);\n-      } else {\n-        prevKeyInfo = keyInfo;\n+                        stageName, entry.getValue(), prevSchemaList.toString(), schemaList.toString()), null)\n+          .withConfigProperty(conf.JOIN_KEYS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e21e077b35a9dac3203d08d51a5ec47ea29a6"}, "originalPosition": 193}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNTMwMQ==", "bodyText": "nit: JoinerConfig.JOIN_KEYS", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#discussion_r397515301", "createdAt": "2020-03-24T23:07:53Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -215,31 +259,57 @@ public StructuredRecord merge(StructuredRecord joinKey, Iterable<JoinElement<Str\n   }\n \n   FailureCollector init(Map<String, Schema> inputSchemas, FailureCollector failureCollector) {\n-    Map<String, StageKeyInfo> keyInfos = new HashMap<>();\n-    StageKeyInfo prevKeyInfo = null;\n-    for (Map.Entry<String, List<String>> entry : conf.getPerStageJoinKeys().entrySet()) {\n+    validateJoinKeySchemas(inputSchemas, conf.getPerStageJoinKeys(), failureCollector);\n+    joinConfig = new JoinConfig(conf.getInputs());\n+    perStageSelectedFields = conf.getPerStageSelectedFields();\n+    return failureCollector;\n+  }\n+\n+  void validateJoinKeySchemas(Map<String, Schema> inputSchemas, Map<String, List<String>> joinKeys,\n+                              FailureCollector collector) {\n+    perStageJoinKeys = joinKeys;\n+    conf.validateJoinKeySchemas(inputSchemas, joinKeys, collector);\n+\n+    List<Schema> prevSchemaList = null;\n+    for (Map.Entry<String, List<String>> entry : perStageJoinKeys.entrySet()) {\n+      ArrayList<Schema> schemaList = new ArrayList<>();\n       String stageName = entry.getKey();\n-      StageKeyInfo keyInfo = new StageKeyInfo(stageName, inputSchemas.get(stageName),\n-                                              entry.getValue(), failureCollector);\n-      if (prevKeyInfo != null && !prevKeyInfo.getSchema().equals(keyInfo.getSchema())) {\n-        failureCollector.addFailure(\n+\n+      Schema schema = inputSchemas.get(stageName);\n+      if (schema == null) {\n+        // Input schema will be null if the output schema of the previous node is a macro\n+        return;\n+      }\n+\n+      for (String joinKey : entry.getValue()) {\n+        Schema.Field field = schema.getField(joinKey);\n+        if (field == null) {\n+          collector.addFailure(\n+            String.format(\"Join key field '%s' is not present in input stage of '%s'.\", joinKey, stageName), null)\n+            .withConfigProperty(conf.JOIN_KEYS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e21e077b35a9dac3203d08d51a5ec47ea29a6"}, "originalPosition": 181}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNjI2MA==", "bodyText": "better: return !inputSchemas.isEmpty() && inputSchemas.values().stream().noneMatch(Objects::isNull);", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#discussion_r397516260", "createdAt": "2020-03-24T23:10:31Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -108,11 +121,30 @@ public String getRequiredInputs() {\n     return requiredInputs;\n   }\n \n+  @Nullable\n+  public Schema getOutputSchema(FailureCollector collector) {\n+    try {\n+      return Strings.isNullOrEmpty(schema) ? null : Schema.parseJson(schema);\n+    } catch (IOException e) {\n+      collector.addFailure(\"Invalid schema: \" + e.getMessage(), null).withConfigProperty(OUTPUT_SCHEMA);\n+    }\n+    // if there was an error that was added, it will throw an exception, otherwise, this statement will not be executed\n+    throw collector.getOrThrowException();\n+  }\n+\n+  public boolean inputSchemasAvailable(Map<String, Schema> inputSchemas) {\n+    // TODO: Remove isEmpty() check when CDAP-16351 is fixed\n+    return !inputSchemas.isEmpty() && !inputSchemas.values().stream().anyMatch(v -> v == null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e21e077b35a9dac3203d08d51a5ec47ea29a6"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNjM1OA==", "bodyText": "the method can be package private", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#discussion_r397516358", "createdAt": "2020-03-24T23:10:51Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -108,11 +121,30 @@ public String getRequiredInputs() {\n     return requiredInputs;\n   }\n \n+  @Nullable\n+  public Schema getOutputSchema(FailureCollector collector) {\n+    try {\n+      return Strings.isNullOrEmpty(schema) ? null : Schema.parseJson(schema);\n+    } catch (IOException e) {\n+      collector.addFailure(\"Invalid schema: \" + e.getMessage(), null).withConfigProperty(OUTPUT_SCHEMA);\n+    }\n+    // if there was an error that was added, it will throw an exception, otherwise, this statement will not be executed\n+    throw collector.getOrThrowException();\n+  }\n+\n+  public boolean inputSchemasAvailable(Map<String, Schema> inputSchemas) {\n+    // TODO: Remove isEmpty() check when CDAP-16351 is fixed\n+    return !inputSchemas.isEmpty() && !inputSchemas.values().stream().anyMatch(v -> v == null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNjI2MA=="}, "originalCommit": {"oid": "c08e21e077b35a9dac3203d08d51a5ec47ea29a6"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUyMTYyNw==", "bodyText": "Can we move this check to init as well?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#discussion_r397521627", "createdAt": "2020-03-24T23:25:51Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -82,24 +81,39 @@ public Joiner(JoinerConfig conf) {\n   public void configurePipeline(MultiInputPipelineConfigurer pipelineConfigurer) {\n     MultiInputStageConfigurer stageConfigurer = pipelineConfigurer.getMultiInputStageConfigurer();\n     Map<String, Schema> inputSchemas = stageConfigurer.getInputSchemas();\n-    FailureCollector collector = init(inputSchemas,\n-                                      pipelineConfigurer.getMultiInputStageConfigurer().getFailureCollector());\n+    FailureCollector collector = pipelineConfigurer.getMultiInputStageConfigurer().getFailureCollector();\n+    init(inputSchemas, collector);\n     collector.getOrThrowException();\n-    //validate the input schema and get the output schema for it\n-    stageConfigurer.setOutputSchema(getOutputSchema(inputSchemas, collector));\n+    if (!conf.inputSchemasAvailable(inputSchemas) && !conf.containsMacro(conf.OUTPUT_SCHEMA) &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNDEyOA=="}, "originalCommit": {"oid": "c08e21e077b35a9dac3203d08d51a5ec47ea29a6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUyMzUzMw==", "bodyText": "!inputSchemas.isEmpty()  - this is same check as inputSchemasAvailable right?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#discussion_r397523533", "createdAt": "2020-03-24T23:30:59Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -477,7 +479,7 @@ public String toString() {\n \n   private void validateRequiredInputs(Map<String, Schema> inputSchemas, FailureCollector collector) {\n     for (String requiredInput : conf.getInputs()) {\n-      if (!inputSchemas.containsKey(requiredInput)) {\n+      if (!inputSchemas.isEmpty() && !inputSchemas.containsKey(requiredInput)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e21e077b35a9dac3203d08d51a5ec47ea29a6"}, "originalPosition": 334}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUyNDI2Nw==", "bodyText": "looks like inputSchemasAvailable is called at many places. can we centralize that check in this method?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#discussion_r397524267", "createdAt": "2020-03-24T23:33:01Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -215,31 +259,57 @@ public StructuredRecord merge(StructuredRecord joinKey, Iterable<JoinElement<Str\n   }\n \n   FailureCollector init(Map<String, Schema> inputSchemas, FailureCollector failureCollector) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNDQ5MA=="}, "originalCommit": {"oid": "c08e21e077b35a9dac3203d08d51a5ec47ea29a6"}, "originalPosition": 146}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODQ5NzU0", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#pullrequestreview-380849754", "createdAt": "2020-03-25T04:18:22Z", "commit": {"oid": "2dc61e037c1e02e154e90831a7f8a3f6027629f7"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNDoxODoyMlrOF7Lp1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNDo0MDo1N1rOF7L8og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYwMTIzNg==", "bodyText": "nit: extra line", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#discussion_r397601236", "createdAt": "2020-03-25T04:18:22Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -68,11 +64,13 @@\n   static final String IDENTITY_OPERATION_DESCRIPTION = \"Unchanged as part of a join\";\n   static final String RENAME_OPERATION_DESCRIPTION = \"Renamed as a part of a join\";\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dc61e037c1e02e154e90831a7f8a3f6027629f7"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYwNjA1MA==", "bodyText": "nit: indentation", "url": "https://github.com/cdapio/hydrator-plugins/pull/1045#discussion_r397606050", "createdAt": "2020-03-25T04:40:57Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -214,32 +257,59 @@ public StructuredRecord merge(StructuredRecord joinKey, Iterable<JoinElement<Str\n     return outRecordBuilder.build();\n   }\n \n+  @VisibleForTesting\n   FailureCollector init(Map<String, Schema> inputSchemas, FailureCollector failureCollector) {\n-    Map<String, StageKeyInfo> keyInfos = new HashMap<>();\n-    StageKeyInfo prevKeyInfo = null;\n-    for (Map.Entry<String, List<String>> entry : conf.getPerStageJoinKeys().entrySet()) {\n+    validateJoinKeySchemas(inputSchemas, conf.getPerStageJoinKeys(), failureCollector);\n+    joinConfig = new JoinConfig(conf.getInputs());\n+    perStageSelectedFields = conf.getPerStageSelectedFields();\n+    return failureCollector;\n+  }\n+\n+  private void validateJoinKeySchemas(Map<String, Schema> inputSchemas, Map<String, List<String>> joinKeys,\n+                              FailureCollector collector) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dc61e037c1e02e154e90831a7f8a3f6027629f7"}, "originalPosition": 158}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f79248b37829f0a26ead6bb961e8b9f7403c084", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/6f79248b37829f0a26ead6bb961e8b9f7403c084", "committedDate": "2020-03-25T04:51:42Z", "message": "Cherry pick fixes to support macros in joiner plugin"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2dc61e037c1e02e154e90831a7f8a3f6027629f7", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/2dc61e037c1e02e154e90831a7f8a3f6027629f7", "committedDate": "2020-03-25T01:08:11Z", "message": "inputSchemasAvailable in validateRequiredInputs"}, "afterCommit": {"oid": "6f79248b37829f0a26ead6bb961e8b9f7403c084", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/6f79248b37829f0a26ead6bb961e8b9f7403c084", "committedDate": "2020-03-25T04:51:42Z", "message": "Cherry pick fixes to support macros in joiner plugin"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1621, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}