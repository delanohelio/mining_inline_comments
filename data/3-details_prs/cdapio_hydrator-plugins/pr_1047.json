{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMjcxNzcy", "number": 1047, "title": "Cache key schemas in Joiner", "bodyText": "cache key schemas in joinOn.\nremoved unnecessary validateJoinKeySchemas  call in getOutputSchema (it's already called from init).", "createdAt": "2020-03-24T21:44:50Z", "url": "https://github.com/cdapio/hydrator-plugins/pull/1047", "merged": true, "mergeCommit": {"oid": "f1b28cfccac5e6366273aeb5f3be49fef9eeab20"}, "closed": true, "closedAt": "2020-03-24T22:14:20Z", "author": {"login": "rmstar"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQ6HhlgFqTM4MDcyMjY2Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQ6aL7ABqjMxNjE3NTIxODU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNzIyNjY3", "url": "https://github.com/cdapio/hydrator-plugins/pull/1047#pullrequestreview-380722667", "createdAt": "2020-03-24T21:50:05Z", "commit": {"oid": "a0299ab0472841373e9140186c4a356f1f0fb7a1"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMTo1MDowNVrOF7EbxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMTo1MTowOFrOF7EdqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ4Mjk0OQ==", "bodyText": "nit: indentation", "url": "https://github.com/cdapio/hydrator-plugins/pull/1047#discussion_r397482949", "createdAt": "2020-03-24T21:50:05Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -194,29 +195,37 @@ public void initialize(BatchJoinerRuntimeContext context) {\n \n   @Override\n   public StructuredRecord joinOn(String stageName, StructuredRecord record) {\n-    List<Schema.Field> fields = new ArrayList<>();\n-    Schema schema = record.getSchema();\n+    Schema keySchema;\n+    List<String> joinKeys = perStageJoinKeys.get(stageName);\n \n+    if (keySchemas.containsKey(stageName)) {\n+      keySchema = keySchemas.get(stageName);\n+    } else {\n+      List<Schema.Field> fields = new ArrayList<>();\n+      Schema schema = record.getSchema();\n \n-    List<String> joinKeys = perStageJoinKeys.get(stageName);\n-    int i = 1;\n-    for (String joinKey : joinKeys) {\n-      Schema.Field field = schema.getField(joinKey);\n-      if (field == null) {\n-        throw new IllegalArgumentException(String.format(\"Join key field '%s' does not exist in schema from '%s'.\",\n-                                                         joinKey, stageName));\n+      int i = 1;\n+      for (String joinKey : joinKeys) {\n+        Schema.Field field = schema.getField(joinKey);\n+        if (field == null) {\n+          throw new IllegalArgumentException(String.format(\"Join key field '%s' does not exist in schema from '%s'.\",\n+                  joinKey, stageName));\n+        }\n+        Schema.Field joinField = Schema.Field.of(String.valueOf(i++), field.getSchema());\n+        fields.add(joinField);\n       }\n-      Schema.Field joinField = Schema.Field.of(String.valueOf(i++), field.getSchema());\n-      fields.add(joinField);\n-    }\n-    Schema keySchema = Schema.recordOf(\"join.key\", fields);\n-    StructuredRecord.Builder keyRecordBuilder = StructuredRecord.builder(keySchema);\n-    i = 1;\n-    for (String joinKey : joinKeys) {\n-      keyRecordBuilder.set(String.valueOf(i++), record.get(joinKey));\n+      keySchema = Schema.recordOf(\"join.key\", fields);\n+      keySchemas.put(stageName, keySchema);\n     }\n+      StructuredRecord.Builder keyRecordBuilder = StructuredRecord.builder(keySchema);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0299ab0472841373e9140186c4a356f1f0fb7a1"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ4MzIyNQ==", "bodyText": "nit: return keyRecordBuilder.build();", "url": "https://github.com/cdapio/hydrator-plugins/pull/1047#discussion_r397483225", "createdAt": "2020-03-24T21:50:39Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -194,29 +195,37 @@ public void initialize(BatchJoinerRuntimeContext context) {\n \n   @Override\n   public StructuredRecord joinOn(String stageName, StructuredRecord record) {\n-    List<Schema.Field> fields = new ArrayList<>();\n-    Schema schema = record.getSchema();\n+    Schema keySchema;\n+    List<String> joinKeys = perStageJoinKeys.get(stageName);\n \n+    if (keySchemas.containsKey(stageName)) {\n+      keySchema = keySchemas.get(stageName);\n+    } else {\n+      List<Schema.Field> fields = new ArrayList<>();\n+      Schema schema = record.getSchema();\n \n-    List<String> joinKeys = perStageJoinKeys.get(stageName);\n-    int i = 1;\n-    for (String joinKey : joinKeys) {\n-      Schema.Field field = schema.getField(joinKey);\n-      if (field == null) {\n-        throw new IllegalArgumentException(String.format(\"Join key field '%s' does not exist in schema from '%s'.\",\n-                                                         joinKey, stageName));\n+      int i = 1;\n+      for (String joinKey : joinKeys) {\n+        Schema.Field field = schema.getField(joinKey);\n+        if (field == null) {\n+          throw new IllegalArgumentException(String.format(\"Join key field '%s' does not exist in schema from '%s'.\",\n+                  joinKey, stageName));\n+        }\n+        Schema.Field joinField = Schema.Field.of(String.valueOf(i++), field.getSchema());\n+        fields.add(joinField);\n       }\n-      Schema.Field joinField = Schema.Field.of(String.valueOf(i++), field.getSchema());\n-      fields.add(joinField);\n-    }\n-    Schema keySchema = Schema.recordOf(\"join.key\", fields);\n-    StructuredRecord.Builder keyRecordBuilder = StructuredRecord.builder(keySchema);\n-    i = 1;\n-    for (String joinKey : joinKeys) {\n-      keyRecordBuilder.set(String.valueOf(i++), record.get(joinKey));\n+      keySchema = Schema.recordOf(\"join.key\", fields);\n+      keySchemas.put(stageName, keySchema);\n     }\n+      StructuredRecord.Builder keyRecordBuilder = StructuredRecord.builder(keySchema);\n+      int i = 1;\n+      for (String joinKey : joinKeys) {\n+        keyRecordBuilder.set(String.valueOf(i++), record.get(joinKey));\n+      }\n+\n+      StructuredRecord keyRecord = keyRecordBuilder.build();\n+      return keyRecord;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0299ab0472841373e9140186c4a356f1f0fb7a1"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ4MzQzMg==", "bodyText": "why do we need to remove this? we still need this in case inputschemas are non-null right?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1047#discussion_r397483432", "createdAt": "2020-03-24T21:51:08Z", "author": {"login": "CuriousVini"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -291,7 +300,6 @@ void validateJoinKeySchemas(Map<String, Schema> inputSchemas, Map<String, List<S\n   }\n \n   Schema getOutputSchema(Map<String, Schema> inputSchemas, FailureCollector collector) {\n-    validateJoinKeySchemas(inputSchemas, conf.getPerStageJoinKeys(), collector);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0299ab0472841373e9140186c4a356f1f0fb7a1"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNzMzNzYy", "url": "https://github.com/cdapio/hydrator-plugins/pull/1047#pullrequestreview-380733762", "createdAt": "2020-03-24T22:10:58Z", "commit": {"oid": "3c74fd8bdc3f6721b734691e5bf419110a4fd223"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c6a15ea0d57aa8c2b33aa9dca2780e3b001e5bc", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/9c6a15ea0d57aa8c2b33aa9dca2780e3b001e5bc", "committedDate": "2020-03-24T22:11:44Z", "message": "Cache key schemas in Joiner"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c74fd8bdc3f6721b734691e5bf419110a4fd223", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/3c74fd8bdc3f6721b734691e5bf419110a4fd223", "committedDate": "2020-03-24T22:09:30Z", "message": "fixes"}, "afterCommit": {"oid": "9c6a15ea0d57aa8c2b33aa9dca2780e3b001e5bc", "author": {"user": {"login": "rmstar", "name": "Prashant Jaikumar"}}, "url": "https://github.com/cdapio/hydrator-plugins/commit/9c6a15ea0d57aa8c2b33aa9dca2780e3b001e5bc", "committedDate": "2020-03-24T22:11:44Z", "message": "Cache key schemas in Joiner"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1624, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}