{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1OTM1OTg0", "number": 1144, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOTozNTozMVrOESh1qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzozNjoyNVrOES6sgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODY0MjMzOnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOTozNTozMVrOG3wqTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDoxNzozOFrOG3yAWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyMjEyNw==", "bodyText": "nit: remove the 'currently' in parentheses to shorten the message a little.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461122127", "createdAt": "2020-07-27T19:35:31Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -144,25 +162,30 @@ public JoinDefinition define(AutoJoinerContext context) {\n   public void prepareRun(BatchJoinerContext context) {\n     if (conf.getNumPartitions() != null) {\n       context.setNumPartitions(conf.getNumPartitions());\n+      if (conf.getDistributionFactor() != null && conf.getDistributionFactor() < conf.getNumPartitions()) {\n+        LOG.warn(String.format(\n+          \"Number of partitions (currently %d) should be greater than or equal to distribution factor (currently %d) \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cfc6ccccb5336d3ce35b7b670b1126d8eb727f4"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0NDE1NA==", "bodyText": "done", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461144154", "createdAt": "2020-07-27T20:17:38Z", "author": {"login": "MEseifan"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -144,25 +162,30 @@ public JoinDefinition define(AutoJoinerContext context) {\n   public void prepareRun(BatchJoinerContext context) {\n     if (conf.getNumPartitions() != null) {\n       context.setNumPartitions(conf.getNumPartitions());\n+      if (conf.getDistributionFactor() != null && conf.getDistributionFactor() < conf.getNumPartitions()) {\n+        LOG.warn(String.format(\n+          \"Number of partitions (currently %d) should be greater than or equal to distribution factor (currently %d) \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyMjEyNw=="}, "originalCommit": {"oid": "0cfc6ccccb5336d3ce35b7b670b1126d8eb727f4"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODY0NTIyOnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOTozNjozMFrOG3wsIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDoyMToyOVrOG3yIqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyMjU5NA==", "bodyText": "distribution. The number", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461122594", "createdAt": "2020-07-27T19:36:30Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -67,6 +68,15 @@\n     \" Required input stages decide the type of the join. If all the input stages are present in required inputs, \" +\n     \"inner join will be performed. Otherwise, outer join will be performed considering non-required inputs as \" +\n     \"optional.\";\n+  private static final String DISTRIBUTION_STAGE_DESC =\n+    \"Name of the skewed input stage. The skewed input stage is the one that contains many rows that join \"\n+      + \"to the same row in the non-skewed stage. Ex. If stage A has 10 rows that join on the same row in stage B, then\"\n+      + \" stage A is the skewed input stage\";\n+  private static final String DISTRIBUTION_FACTOR_DESC =\n+    \"This controls the size of the salt that will be generated for distribution, the number of partitions \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cfc6ccccb5336d3ce35b7b670b1126d8eb727f4"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0NjI4Mg==", "bodyText": "done", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461146282", "createdAt": "2020-07-27T20:21:29Z", "author": {"login": "MEseifan"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -67,6 +68,15 @@\n     \" Required input stages decide the type of the join. If all the input stages are present in required inputs, \" +\n     \"inner join will be performed. Otherwise, outer join will be performed considering non-required inputs as \" +\n     \"optional.\";\n+  private static final String DISTRIBUTION_STAGE_DESC =\n+    \"Name of the skewed input stage. The skewed input stage is the one that contains many rows that join \"\n+      + \"to the same row in the non-skewed stage. Ex. If stage A has 10 rows that join on the same row in stage B, then\"\n+      + \" stage A is the skewed input stage\";\n+  private static final String DISTRIBUTION_FACTOR_DESC =\n+    \"This controls the size of the salt that will be generated for distribution, the number of partitions \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyMjU5NA=="}, "originalCommit": {"oid": "0cfc6ccccb5336d3ce35b7b670b1126d8eb727f4"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODY0Njc5OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOTozNjo1N1rOG3wtIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDoyMTo1MVrOG3yJYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyMjg1MQ==", "bodyText": "skewed. Enabling will increase the parallelism", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461122851", "createdAt": "2020-07-27T19:36:57Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -104,6 +114,22 @@\n     \"and this value is false, records with a null id from input stages A and B will not get joined together.\")\n   private Boolean joinNullKeys;\n \n+  @Nullable\n+  @Macro\n+  @Description(DISTRIBUTION_FACTOR_DESC)\n+  private Integer distributionFactor;\n+\n+  @Nullable\n+  @Macro\n+  @Description(DISTRIBUTION_STAGE_DESC)\n+  private String distributionStageName;\n+\n+  @Macro\n+  @Nullable\n+  @Description(\"Distribution is useful when the input data is skewed, enabling distribution will allow you to \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cfc6ccccb5336d3ce35b7b670b1126d8eb727f4"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0NjQ2Nw==", "bodyText": "done", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461146467", "createdAt": "2020-07-27T20:21:51Z", "author": {"login": "MEseifan"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -104,6 +114,22 @@\n     \"and this value is false, records with a null id from input stages A and B will not get joined together.\")\n   private Boolean joinNullKeys;\n \n+  @Nullable\n+  @Macro\n+  @Description(DISTRIBUTION_FACTOR_DESC)\n+  private Integer distributionFactor;\n+\n+  @Nullable\n+  @Macro\n+  @Description(DISTRIBUTION_STAGE_DESC)\n+  private String distributionStageName;\n+\n+  @Macro\n+  @Nullable\n+  @Description(\"Distribution is useful when the input data is skewed, enabling distribution will allow you to \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyMjg1MQ=="}, "originalCommit": {"oid": "0cfc6ccccb5336d3ce35b7b670b1126d8eb727f4"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODY1MTY4OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOTozODozMVrOG3wwLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMTo1Njo1MVrOG31C1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyMzYyOA==", "bodyText": "if there is some error with the distribution values (ex: not an inner or left outer join), they should be handled here, with the proper property highlighted. This will require some more specific error in your other CDAP PR.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461123628", "createdAt": "2020-07-27T19:38:31Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -113,6 +116,21 @@ public JoinDefinition define(AutoJoinerContext context) {\n       } else {\n         joinBuilder.setOutputSchemaName(\"join.output\");\n       }\n+\n+      if (conf.isDistributionEnabled()) {\n+        if (!Strings.isNullOrEmpty(conf.getDistributionStageName()) && conf.getDistributionFactor() != null) {\n+          joinBuilder.setDistributionFactor(conf.getDistributionFactor(), conf.getDistributionStageName());\n+        } else {\n+          if (conf.getDistributionFactor() == null) {\n+            collector.addFailure(\"Distribution Size is a required value if distribution is enabled.\", \"\")\n+              .withConfigProperty(\"distributionFactor\");\n+          }\n+          if (Strings.isNullOrEmpty(conf.getDistributionStageName())) {\n+            collector.addFailure(\"Skewed Stage name is a required value if distribution is enabled.\", \"\")\n+              .withConfigProperty(\"distributionStageName\");\n+          }\n+        }\n+      }\n       return joinBuilder.build();\n     } catch (InvalidJoinException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cfc6ccccb5336d3ce35b7b670b1126d8eb727f4"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MzYwNw==", "bodyText": "Noted", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461143607", "createdAt": "2020-07-27T20:16:37Z", "author": {"login": "MEseifan"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -113,6 +116,21 @@ public JoinDefinition define(AutoJoinerContext context) {\n       } else {\n         joinBuilder.setOutputSchemaName(\"join.output\");\n       }\n+\n+      if (conf.isDistributionEnabled()) {\n+        if (!Strings.isNullOrEmpty(conf.getDistributionStageName()) && conf.getDistributionFactor() != null) {\n+          joinBuilder.setDistributionFactor(conf.getDistributionFactor(), conf.getDistributionStageName());\n+        } else {\n+          if (conf.getDistributionFactor() == null) {\n+            collector.addFailure(\"Distribution Size is a required value if distribution is enabled.\", \"\")\n+              .withConfigProperty(\"distributionFactor\");\n+          }\n+          if (Strings.isNullOrEmpty(conf.getDistributionStageName())) {\n+            collector.addFailure(\"Skewed Stage name is a required value if distribution is enabled.\", \"\")\n+              .withConfigProperty(\"distributionStageName\");\n+          }\n+        }\n+      }\n       return joinBuilder.build();\n     } catch (InvalidJoinException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyMzYyOA=="}, "originalCommit": {"oid": "0cfc6ccccb5336d3ce35b7b670b1126d8eb727f4"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5Mzk0Mw==", "bodyText": "Added new error types and handling for error types", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461193943", "createdAt": "2020-07-27T21:56:51Z", "author": {"login": "MEseifan"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -113,6 +116,21 @@ public JoinDefinition define(AutoJoinerContext context) {\n       } else {\n         joinBuilder.setOutputSchemaName(\"join.output\");\n       }\n+\n+      if (conf.isDistributionEnabled()) {\n+        if (!Strings.isNullOrEmpty(conf.getDistributionStageName()) && conf.getDistributionFactor() != null) {\n+          joinBuilder.setDistributionFactor(conf.getDistributionFactor(), conf.getDistributionStageName());\n+        } else {\n+          if (conf.getDistributionFactor() == null) {\n+            collector.addFailure(\"Distribution Size is a required value if distribution is enabled.\", \"\")\n+              .withConfigProperty(\"distributionFactor\");\n+          }\n+          if (Strings.isNullOrEmpty(conf.getDistributionStageName())) {\n+            collector.addFailure(\"Skewed Stage name is a required value if distribution is enabled.\", \"\")\n+              .withConfigProperty(\"distributionStageName\");\n+          }\n+        }\n+      }\n       return joinBuilder.build();\n     } catch (InvalidJoinException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyMzYyOA=="}, "originalCommit": {"oid": "0cfc6ccccb5336d3ce35b7b670b1126d8eb727f4"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODY1NzYzOnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOTo0MDoyN1rOG3wzyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDoxNjoxNVrOG3x9jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyNDU1Mg==", "bodyText": "there's a lot of nesting here which makes it hard to read. Can you pull this out into a separate method?", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461124552", "createdAt": "2020-07-27T19:40:27Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -113,6 +116,21 @@ public JoinDefinition define(AutoJoinerContext context) {\n       } else {\n         joinBuilder.setOutputSchemaName(\"join.output\");\n       }\n+\n+      if (conf.isDistributionEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cfc6ccccb5336d3ce35b7b670b1126d8eb727f4"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MzQzNw==", "bodyText": "done", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461143437", "createdAt": "2020-07-27T20:16:15Z", "author": {"login": "MEseifan"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -113,6 +116,21 @@ public JoinDefinition define(AutoJoinerContext context) {\n       } else {\n         joinBuilder.setOutputSchemaName(\"join.output\");\n       }\n+\n+      if (conf.isDistributionEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyNDU1Mg=="}, "originalCommit": {"oid": "0cfc6ccccb5336d3ce35b7b670b1126d8eb727f4"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTE5ODY0OnYy", "diffSide": "RIGHT", "path": "core-plugins/docs/Joiner-batchjoiner.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozNDoxNFrOG318Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMzoyNzoxNFrOG33FXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwODYzOA==", "bodyText": "not sure why the numbers here are a different color. Are they part of the file or being added by github? Should make sure it doesn't render as a bunch of 1.s", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461208638", "createdAt": "2020-07-27T22:34:14Z", "author": {"login": "albertshau"}, "path": "core-plugins/docs/Joiner-batchjoiner.md", "diffHunk": "@@ -74,6 +74,23 @@ Setting it to true can cause a large drop in performance if there are a lot of n\n **Number of Partitions:** Number of partitions to use when grouping fields. If not specified, the execution\n framework will decide on the number to use.\n \n+**Distribution:** Enabling distribution will increase the level of parallelism when joining skewed data. A \n+skewed join is when multiple records from one stage (the skewed stage) join to a single record in\n+another stage. Distribution is possible when the following conditions are met:\n+1. There are exactly two input stages. \n+1. Broadcast is not enabled for either stage.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a81c23076416509454e3d9575f757827e3b951"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIyNzM1Ng==", "bodyText": "I've confirmed it looks correct in the UI, probably just Github highlighting:", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461227356", "createdAt": "2020-07-27T23:27:14Z", "author": {"login": "MEseifan"}, "path": "core-plugins/docs/Joiner-batchjoiner.md", "diffHunk": "@@ -74,6 +74,23 @@ Setting it to true can cause a large drop in performance if there are a lot of n\n **Number of Partitions:** Number of partitions to use when grouping fields. If not specified, the execution\n framework will decide on the number to use.\n \n+**Distribution:** Enabling distribution will increase the level of parallelism when joining skewed data. A \n+skewed join is when multiple records from one stage (the skewed stage) join to a single record in\n+another stage. Distribution is possible when the following conditions are met:\n+1. There are exactly two input stages. \n+1. Broadcast is not enabled for either stage.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwODYzOA=="}, "originalCommit": {"oid": "26a81c23076416509454e3d9575f757827e3b951"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTIwMjQyOnYy", "diffSide": "RIGHT", "path": "core-plugins/docs/Joiner-batchjoiner.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozNTo0MVrOG31-dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODoyNjozMFrOG5Ez4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwOTIwNQ==", "bodyText": "Seeing how many issues we see with skew in user pipelines, I think it's worth having a separate section after the example section that talks about what skew is and how to handle it.\nWe should start by defining what skew is, use an example to illustrate, and explain why it results in slowness. The first approach to deal with it is to load the smaller side of the join in memory. If that isn't possible, use the distribution properties.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461209205", "createdAt": "2020-07-27T22:35:41Z", "author": {"login": "albertshau"}, "path": "core-plugins/docs/Joiner-batchjoiner.md", "diffHunk": "@@ -74,6 +74,23 @@ Setting it to true can cause a large drop in performance if there are a lot of n\n **Number of Partitions:** Number of partitions to use when grouping fields. If not specified, the execution\n framework will decide on the number to use.\n \n+**Distribution:** Enabling distribution will increase the level of parallelism when joining skewed data. A \n+skewed join is when multiple records from one stage (the skewed stage) join to a single record in\n+another stage. Distribution is possible when the following conditions are met:\n+1. There are exactly two input stages. \n+1. Broadcast is not enabled for either stage.\n+1. The skewed input is marked as `required`.\n+\n+\n+Distribution requires two parameters:\n+1. **Distribution Size:** This controls the size of the salt that will be generated for distribution. The **Number of Partitions** \n+property should be greater than or equal to this number for optimal results. A larger value will lead to more \n+parallelism but it will also grow the size of the non-skewed dataset by this factor.\n+1. **Skewed Input Stage:**  Name of the skewed input stage. The skewed input stage is the one that contains many rows that join \n+to the same row in the non-skewed stage. Ex. If stage A has 10 rows that join on the same row in stage B, then\n+stage A is the skewed input stage.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a81c23076416509454e3d9575f757827e3b951"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUwMDgzMw==", "bodyText": "done", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r462500833", "createdAt": "2020-07-29T18:26:30Z", "author": {"login": "MEseifan"}, "path": "core-plugins/docs/Joiner-batchjoiner.md", "diffHunk": "@@ -74,6 +74,23 @@ Setting it to true can cause a large drop in performance if there are a lot of n\n **Number of Partitions:** Number of partitions to use when grouping fields. If not specified, the execution\n framework will decide on the number to use.\n \n+**Distribution:** Enabling distribution will increase the level of parallelism when joining skewed data. A \n+skewed join is when multiple records from one stage (the skewed stage) join to a single record in\n+another stage. Distribution is possible when the following conditions are met:\n+1. There are exactly two input stages. \n+1. Broadcast is not enabled for either stage.\n+1. The skewed input is marked as `required`.\n+\n+\n+Distribution requires two parameters:\n+1. **Distribution Size:** This controls the size of the salt that will be generated for distribution. The **Number of Partitions** \n+property should be greater than or equal to this number for optimal results. A larger value will lead to more \n+parallelism but it will also grow the size of the non-skewed dataset by this factor.\n+1. **Skewed Input Stage:**  Name of the skewed input stage. The skewed input stage is the one that contains many rows that join \n+to the same row in the non-skewed stage. Ex. If stage A has 10 rows that join on the same row in stage B, then\n+stage A is the skewed input stage.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwOTIwNQ=="}, "originalCommit": {"oid": "26a81c23076416509454e3d9575f757827e3b951"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTIxNDQ0OnYy", "diffSide": "RIGHT", "path": "core-plugins/docs/Joiner-batchjoiner.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo0MDozOVrOG32FtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODoyNjoyNlrOG5Ezsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMTA2MQ==", "bodyText": "skew is a little different than this. It is possible to have multiple records joining to a single record and still be unskewed. I think it's better to say something like:\nA skewed join happens when a significant percentage of input records have the same key.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461211061", "createdAt": "2020-07-27T22:40:39Z", "author": {"login": "albertshau"}, "path": "core-plugins/docs/Joiner-batchjoiner.md", "diffHunk": "@@ -74,6 +74,23 @@ Setting it to true can cause a large drop in performance if there are a lot of n\n **Number of Partitions:** Number of partitions to use when grouping fields. If not specified, the execution\n framework will decide on the number to use.\n \n+**Distribution:** Enabling distribution will increase the level of parallelism when joining skewed data. A \n+skewed join is when multiple records from one stage (the skewed stage) join to a single record in", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a81c23076416509454e3d9575f757827e3b951"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUwMDc4Ng==", "bodyText": "done", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r462500786", "createdAt": "2020-07-29T18:26:26Z", "author": {"login": "MEseifan"}, "path": "core-plugins/docs/Joiner-batchjoiner.md", "diffHunk": "@@ -74,6 +74,23 @@ Setting it to true can cause a large drop in performance if there are a lot of n\n **Number of Partitions:** Number of partitions to use when grouping fields. If not specified, the execution\n framework will decide on the number to use.\n \n+**Distribution:** Enabling distribution will increase the level of parallelism when joining skewed data. A \n+skewed join is when multiple records from one stage (the skewed stage) join to a single record in", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMTA2MQ=="}, "originalCommit": {"oid": "26a81c23076416509454e3d9575f757827e3b951"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTIyNjU2OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo0NTozMFrOG32MzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMzozMzo0OVrOG33NPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMjg3Nw==", "bodyText": "nit: extra newline", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461212877", "createdAt": "2020-07-27T22:45:30Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -238,4 +266,47 @@ boolean isNullSafe() {\n     }\n     return set;\n   }\n+\n+  @Nullable\n+  public Integer getDistributionFactor() {\n+    return distributionFactor;\n+  }\n+\n+  @Nullable\n+  public String getDistributionStageName() {\n+    return distributionStageName;\n+  }\n+\n+  public boolean isDistributionValid(FailureCollector collector) {\n+    int startFailures = collector.getValidationFailures().size();\n+\n+    //If distribution is disabled then no need to validate further\n+    if (!containsMacro(\"distributionEnabled\") && !distributionEnabled) {\n+      return false;\n+    }\n+\n+    if (!containsMacro(DISTRIBUTION_FACTOR) && distributionFactor == null) {\n+      collector.addFailure(\"Distribution Size is a required value if distribution is enabled.\", \"\")\n+        .withConfigProperty(DISTRIBUTION_FACTOR);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a81c23076416509454e3d9575f757827e3b951"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIyOTM3NQ==", "bodyText": "done", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461229375", "createdAt": "2020-07-27T23:33:49Z", "author": {"login": "MEseifan"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -238,4 +266,47 @@ boolean isNullSafe() {\n     }\n     return set;\n   }\n+\n+  @Nullable\n+  public Integer getDistributionFactor() {\n+    return distributionFactor;\n+  }\n+\n+  @Nullable\n+  public String getDistributionStageName() {\n+    return distributionStageName;\n+  }\n+\n+  public boolean isDistributionValid(FailureCollector collector) {\n+    int startFailures = collector.getValidationFailures().size();\n+\n+    //If distribution is disabled then no need to validate further\n+    if (!containsMacro(\"distributionEnabled\") && !distributionEnabled) {\n+      return false;\n+    }\n+\n+    if (!containsMacro(DISTRIBUTION_FACTOR) && distributionFactor == null) {\n+      collector.addFailure(\"Distribution Size is a required value if distribution is enabled.\", \"\")\n+        .withConfigProperty(DISTRIBUTION_FACTOR);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMjg3Nw=="}, "originalCommit": {"oid": "26a81c23076416509454e3d9575f757827e3b951"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTIyNzQ3OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo0NTo1N1rOG32Nbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMzozMzo1NVrOG33NWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMzAzOQ==", "bodyText": "nit: extra newline", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461213039", "createdAt": "2020-07-27T22:45:57Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -238,4 +266,47 @@ boolean isNullSafe() {\n     }\n     return set;\n   }\n+\n+  @Nullable\n+  public Integer getDistributionFactor() {\n+    return distributionFactor;\n+  }\n+\n+  @Nullable\n+  public String getDistributionStageName() {\n+    return distributionStageName;\n+  }\n+\n+  public boolean isDistributionValid(FailureCollector collector) {\n+    int startFailures = collector.getValidationFailures().size();\n+\n+    //If distribution is disabled then no need to validate further\n+    if (!containsMacro(\"distributionEnabled\") && !distributionEnabled) {\n+      return false;\n+    }\n+\n+    if (!containsMacro(DISTRIBUTION_FACTOR) && distributionFactor == null) {\n+      collector.addFailure(\"Distribution Size is a required value if distribution is enabled.\", \"\")\n+        .withConfigProperty(DISTRIBUTION_FACTOR);\n+\n+    }\n+    if (!containsMacro(DISTRIBUTION_STAGE) && Strings.isNullOrEmpty(distributionStageName)) {\n+      collector.addFailure(\"Skewed Stage name is a required value if distribution is enabled.\", \"\")\n+        .withConfigProperty(DISTRIBUTION_STAGE);\n+    }\n+\n+    // If there are still macro values then this config is not valid\n+    if (distributionContainsMacro()) {\n+      return false;\n+    }\n+\n+    return startFailures == collector.getValidationFailures().size();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a81c23076416509454e3d9575f757827e3b951"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIyOTQwMQ==", "bodyText": "done", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461229401", "createdAt": "2020-07-27T23:33:55Z", "author": {"login": "MEseifan"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/JoinerConfig.java", "diffHunk": "@@ -238,4 +266,47 @@ boolean isNullSafe() {\n     }\n     return set;\n   }\n+\n+  @Nullable\n+  public Integer getDistributionFactor() {\n+    return distributionFactor;\n+  }\n+\n+  @Nullable\n+  public String getDistributionStageName() {\n+    return distributionStageName;\n+  }\n+\n+  public boolean isDistributionValid(FailureCollector collector) {\n+    int startFailures = collector.getValidationFailures().size();\n+\n+    //If distribution is disabled then no need to validate further\n+    if (!containsMacro(\"distributionEnabled\") && !distributionEnabled) {\n+      return false;\n+    }\n+\n+    if (!containsMacro(DISTRIBUTION_FACTOR) && distributionFactor == null) {\n+      collector.addFailure(\"Distribution Size is a required value if distribution is enabled.\", \"\")\n+        .withConfigProperty(DISTRIBUTION_FACTOR);\n+\n+    }\n+    if (!containsMacro(DISTRIBUTION_STAGE) && Strings.isNullOrEmpty(distributionStageName)) {\n+      collector.addFailure(\"Skewed Stage name is a required value if distribution is enabled.\", \"\")\n+        .withConfigProperty(DISTRIBUTION_STAGE);\n+    }\n+\n+    // If there are still macro values then this config is not valid\n+    if (distributionContainsMacro()) {\n+      return false;\n+    }\n+\n+    return startFailures == collector.getValidationFailures().size();\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMzAzOQ=="}, "originalCommit": {"oid": "26a81c23076416509454e3d9575f757827e3b951"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTIyOTI4OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo0Njo0M1rOG32OgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMzozNDoxNVrOG33Nug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMzMxMw==", "bodyText": "add one case for the broadcast error", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461213313", "createdAt": "2020-07-27T22:46:43Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -134,6 +140,13 @@ public JoinDefinition define(AutoJoinerContext context) {\n           case OUTPUT_SCHEMA:\n             OutputSchemaError schemaError = (OutputSchemaError) error;\n             failure.withOutputSchemaField(schemaError.getField());\n+            break;\n+          case DISTRIBUTION_SIZE:\n+            failure.withConfigProperty(JoinerConfig.DISTRIBUTION_FACTOR);\n+            break;\n+          case DISTRIBUTION_STAGE:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a81c23076416509454e3d9575f757827e3b951"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIyOTQ5OA==", "bodyText": "whoops, forgot to push my changes..its there now", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461229498", "createdAt": "2020-07-27T23:34:15Z", "author": {"login": "MEseifan"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -134,6 +140,13 @@ public JoinDefinition define(AutoJoinerContext context) {\n           case OUTPUT_SCHEMA:\n             OutputSchemaError schemaError = (OutputSchemaError) error;\n             failure.withOutputSchemaField(schemaError.getField());\n+            break;\n+          case DISTRIBUTION_SIZE:\n+            failure.withConfigProperty(JoinerConfig.DISTRIBUTION_FACTOR);\n+            break;\n+          case DISTRIBUTION_STAGE:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMzMxMw=="}, "originalCommit": {"oid": "26a81c23076416509454e3d9575f757827e3b951"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTIzMjY3OnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo0ODoxOVrOG32QiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNjo1NToyMlrOG4VzHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMzgzMg==", "bodyText": "this is an existing problem, but we should have a default case to make sure other types of errors (like the generic join error) are collected.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461213832", "createdAt": "2020-07-27T22:48:19Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -134,6 +140,13 @@ public JoinDefinition define(AutoJoinerContext context) {\n           case OUTPUT_SCHEMA:\n             OutputSchemaError schemaError = (OutputSchemaError) error;\n             failure.withOutputSchemaField(schemaError.getField());\n+            break;\n+          case DISTRIBUTION_SIZE:\n+            failure.withConfigProperty(JoinerConfig.DISTRIBUTION_FACTOR);\n+            break;\n+          case DISTRIBUTION_STAGE:\n+            failure.withConfigProperty(JoinerConfig.DISTRIBUTION_STAGE);\n+            break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a81c23076416509454e3d9575f757827e3b951"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzMTIxMA==", "bodyText": "The first line before the switch-case handles all the errors:\nValidationFailure failure = collector.addFailure(error.getMessage(), error.getCorrectiveAction());\nIts just that the errors with types get modified to target a particular property. So the generic errors are captured, they just appear at the top of the plugin instead of underneath a given property", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461231210", "createdAt": "2020-07-27T23:39:44Z", "author": {"login": "MEseifan"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -134,6 +140,13 @@ public JoinDefinition define(AutoJoinerContext context) {\n           case OUTPUT_SCHEMA:\n             OutputSchemaError schemaError = (OutputSchemaError) error;\n             failure.withOutputSchemaField(schemaError.getField());\n+            break;\n+          case DISTRIBUTION_SIZE:\n+            failure.withConfigProperty(JoinerConfig.DISTRIBUTION_FACTOR);\n+            break;\n+          case DISTRIBUTION_STAGE:\n+            failure.withConfigProperty(JoinerConfig.DISTRIBUTION_STAGE);\n+            break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMzgzMg=="}, "originalCommit": {"oid": "26a81c23076416509454e3d9575f757827e3b951"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTczMDU5MQ==", "bodyText": "ah ok, makes sense", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461730591", "createdAt": "2020-07-28T16:55:22Z", "author": {"login": "albertshau"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -134,6 +140,13 @@ public JoinDefinition define(AutoJoinerContext context) {\n           case OUTPUT_SCHEMA:\n             OutputSchemaError schemaError = (OutputSchemaError) error;\n             failure.withOutputSchemaField(schemaError.getField());\n+            break;\n+          case DISTRIBUTION_SIZE:\n+            failure.withConfigProperty(JoinerConfig.DISTRIBUTION_FACTOR);\n+            break;\n+          case DISTRIBUTION_STAGE:\n+            failure.withConfigProperty(JoinerConfig.DISTRIBUTION_STAGE);\n+            break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMzgzMg=="}, "originalCommit": {"oid": "26a81c23076416509454e3d9575f757827e3b951"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDY2MjAzOnYy", "diffSide": "RIGHT", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOTowNjoyMlrOG4DjSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzoyMToyNlrOG4WwGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQzMTYyNA==", "bodyText": "Use please holder {} instead of String.format when using Logger.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461431624", "createdAt": "2020-07-28T09:06:22Z", "author": {"login": "chtyim"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -144,25 +160,30 @@ public JoinDefinition define(AutoJoinerContext context) {\n   public void prepareRun(BatchJoinerContext context) {\n     if (conf.getNumPartitions() != null) {\n       context.setNumPartitions(conf.getNumPartitions());\n+      if (conf.getDistributionFactor() != null && conf.getDistributionFactor() < conf.getNumPartitions()) {\n+        LOG.warn(String.format(\n+          \"Number of partitions (%d) should be greater than or equal to distribution factor (currently %d) \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6078a6abb0d786ec5eb8297b398461ac167c0fb"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc0NjIwMg==", "bodyText": "done", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461746202", "createdAt": "2020-07-28T17:21:26Z", "author": {"login": "MEseifan"}, "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -144,25 +160,30 @@ public JoinDefinition define(AutoJoinerContext context) {\n   public void prepareRun(BatchJoinerContext context) {\n     if (conf.getNumPartitions() != null) {\n       context.setNumPartitions(conf.getNumPartitions());\n+      if (conf.getDistributionFactor() != null && conf.getDistributionFactor() < conf.getNumPartitions()) {\n+        LOG.warn(String.format(\n+          \"Number of partitions (%d) should be greater than or equal to distribution factor (currently %d) \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQzMTYyNA=="}, "originalCommit": {"oid": "c6078a6abb0d786ec5eb8297b398461ac167c0fb"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjcwODUzOnYy", "diffSide": "RIGHT", "path": "core-plugins/docs/Joiner-batchjoiner.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzozNDo0MlrOG4XP7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODoxMjowN1rOG4YndA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc1NDM0OA==", "bodyText": "nit: rest, which", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461754348", "createdAt": "2020-07-28T17:34:42Z", "author": {"login": "albertshau"}, "path": "core-plugins/docs/Joiner-batchjoiner.md", "diffHunk": "@@ -74,6 +74,95 @@ Setting it to true can cause a large drop in performance if there are a lot of n\n **Number of Partitions:** Number of partitions to use when grouping fields. If not specified, the execution\n framework will decide on the number to use.\n \n+**Distribution:** Enabling distribution will increase the level of parallelism when joining skewed data. \n+A skewed join happens when a significant percentage of input records have the same key. Distribution is\n+ possible when the following conditions are met:\n+1. There are exactly two input stages. \n+1. Broadcast is not enabled for either stage.\n+1. The skewed input is marked as `required`.\n+\n+\n+Distribution requires two parameters:\n+1. **Distribution Size:** This controls the size of the salt that will be generated for distribution. The **Number of Partitions** \n+property should be greater than or equal to this number for optimal results. A larger value will lead to more \n+parallelism but it will also grow the size of the non-skewed dataset by this factor.\n+1. **Skewed Input Stage:**  Name of the skewed input stage. The skewed input stage is the one that contains many rows that join \n+to the same row in the non-skewed stage. Ex. If stage A has 10 rows that join on the same row in stage B, then\n+stage A is the skewed input stage.\n+\n+For more information about Distribution and data skew, please see the **Skew** section of this documentation.\n+\n+Skew\n+----------\n+### Problem\n+Data skew is an important characteristic to consider when implementing joins. A skewed join happens\n+when a significant percentage of input records in one dataset have the same key and therefore join to\n+the same record in the second dataset. This is problematic due to the way the execution framework handles\n+joins. At a high level, all records with matching keys are grouped into a partition, these partitions \n+are distributed across the nodes in a cluster to perform the join operation. In a skewed join, one \n+or more of these partitions will be significantly larger than the rest which will result in a majority ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d5819ba2bcecb5d608ffba4cfa13c8b0b8fd3d5"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3Njc1Ng==", "bodyText": "done", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461776756", "createdAt": "2020-07-28T18:12:07Z", "author": {"login": "MEseifan"}, "path": "core-plugins/docs/Joiner-batchjoiner.md", "diffHunk": "@@ -74,6 +74,95 @@ Setting it to true can cause a large drop in performance if there are a lot of n\n **Number of Partitions:** Number of partitions to use when grouping fields. If not specified, the execution\n framework will decide on the number to use.\n \n+**Distribution:** Enabling distribution will increase the level of parallelism when joining skewed data. \n+A skewed join happens when a significant percentage of input records have the same key. Distribution is\n+ possible when the following conditions are met:\n+1. There are exactly two input stages. \n+1. Broadcast is not enabled for either stage.\n+1. The skewed input is marked as `required`.\n+\n+\n+Distribution requires two parameters:\n+1. **Distribution Size:** This controls the size of the salt that will be generated for distribution. The **Number of Partitions** \n+property should be greater than or equal to this number for optimal results. A larger value will lead to more \n+parallelism but it will also grow the size of the non-skewed dataset by this factor.\n+1. **Skewed Input Stage:**  Name of the skewed input stage. The skewed input stage is the one that contains many rows that join \n+to the same row in the non-skewed stage. Ex. If stage A has 10 rows that join on the same row in stage B, then\n+stage A is the skewed input stage.\n+\n+For more information about Distribution and data skew, please see the **Skew** section of this documentation.\n+\n+Skew\n+----------\n+### Problem\n+Data skew is an important characteristic to consider when implementing joins. A skewed join happens\n+when a significant percentage of input records in one dataset have the same key and therefore join to\n+the same record in the second dataset. This is problematic due to the way the execution framework handles\n+joins. At a high level, all records with matching keys are grouped into a partition, these partitions \n+are distributed across the nodes in a cluster to perform the join operation. In a skewed join, one \n+or more of these partitions will be significantly larger than the rest which will result in a majority ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc1NDM0OA=="}, "originalCommit": {"oid": "1d5819ba2bcecb5d608ffba4cfa13c8b0b8fd3d5"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjcxNDg4OnYy", "diffSide": "RIGHT", "path": "core-plugins/docs/Joiner-batchjoiner.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzozNjoyNVrOG4XT8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODoxMjo0MVrOG4Yorw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc1NTM3OA==", "bodyText": "total size of broadcast data does not exceed", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461755378", "createdAt": "2020-07-28T17:36:25Z", "author": {"login": "albertshau"}, "path": "core-plugins/docs/Joiner-batchjoiner.md", "diffHunk": "@@ -74,6 +74,95 @@ Setting it to true can cause a large drop in performance if there are a lot of n\n **Number of Partitions:** Number of partitions to use when grouping fields. If not specified, the execution\n framework will decide on the number to use.\n \n+**Distribution:** Enabling distribution will increase the level of parallelism when joining skewed data. \n+A skewed join happens when a significant percentage of input records have the same key. Distribution is\n+ possible when the following conditions are met:\n+1. There are exactly two input stages. \n+1. Broadcast is not enabled for either stage.\n+1. The skewed input is marked as `required`.\n+\n+\n+Distribution requires two parameters:\n+1. **Distribution Size:** This controls the size of the salt that will be generated for distribution. The **Number of Partitions** \n+property should be greater than or equal to this number for optimal results. A larger value will lead to more \n+parallelism but it will also grow the size of the non-skewed dataset by this factor.\n+1. **Skewed Input Stage:**  Name of the skewed input stage. The skewed input stage is the one that contains many rows that join \n+to the same row in the non-skewed stage. Ex. If stage A has 10 rows that join on the same row in stage B, then\n+stage A is the skewed input stage.\n+\n+For more information about Distribution and data skew, please see the **Skew** section of this documentation.\n+\n+Skew\n+----------\n+### Problem\n+Data skew is an important characteristic to consider when implementing joins. A skewed join happens\n+when a significant percentage of input records in one dataset have the same key and therefore join to\n+the same record in the second dataset. This is problematic due to the way the execution framework handles\n+joins. At a high level, all records with matching keys are grouped into a partition, these partitions \n+are distributed across the nodes in a cluster to perform the join operation. In a skewed join, one \n+or more of these partitions will be significantly larger than the rest which will result in a majority \n+of the workers in the cluster remaining idle while a couple workers process the large partitions. This\n+results in poor performance since the cluster is being under utilized.\n+\n+### Solution 1: In-Memory Join (Spark only)\n+*This option is only available if the Spark engine is used, MapReduce \n+does not support In-Memory joins.*\n+\n+The first approach for increasing performance of skewed joins is using an In-Memory join. An in-memory\n+join is a performance improvement when a large dataset is being joined with a small dataset. In this\n+approach, the small dataset is loaded into memory and broadcast to workers and loaded into \n+workers memory. Once it is in memory, a join is performed by iterating through the elements of the\n+large dataset. With this approach, data from the large dataset is NEVER shuffled. Data with the \n+same key can be joined in parallel across the cluster instead of handled only by a single worker \n+providing optimal performance. Data sets that have a small size can be used for in-memory joins. \n+Make sure the total size of broadcast across and join does not exceed **2GB.**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d5819ba2bcecb5d608ffba4cfa13c8b0b8fd3d5"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc3NzA3MQ==", "bodyText": "done", "url": "https://github.com/cdapio/hydrator-plugins/pull/1144#discussion_r461777071", "createdAt": "2020-07-28T18:12:41Z", "author": {"login": "MEseifan"}, "path": "core-plugins/docs/Joiner-batchjoiner.md", "diffHunk": "@@ -74,6 +74,95 @@ Setting it to true can cause a large drop in performance if there are a lot of n\n **Number of Partitions:** Number of partitions to use when grouping fields. If not specified, the execution\n framework will decide on the number to use.\n \n+**Distribution:** Enabling distribution will increase the level of parallelism when joining skewed data. \n+A skewed join happens when a significant percentage of input records have the same key. Distribution is\n+ possible when the following conditions are met:\n+1. There are exactly two input stages. \n+1. Broadcast is not enabled for either stage.\n+1. The skewed input is marked as `required`.\n+\n+\n+Distribution requires two parameters:\n+1. **Distribution Size:** This controls the size of the salt that will be generated for distribution. The **Number of Partitions** \n+property should be greater than or equal to this number for optimal results. A larger value will lead to more \n+parallelism but it will also grow the size of the non-skewed dataset by this factor.\n+1. **Skewed Input Stage:**  Name of the skewed input stage. The skewed input stage is the one that contains many rows that join \n+to the same row in the non-skewed stage. Ex. If stage A has 10 rows that join on the same row in stage B, then\n+stage A is the skewed input stage.\n+\n+For more information about Distribution and data skew, please see the **Skew** section of this documentation.\n+\n+Skew\n+----------\n+### Problem\n+Data skew is an important characteristic to consider when implementing joins. A skewed join happens\n+when a significant percentage of input records in one dataset have the same key and therefore join to\n+the same record in the second dataset. This is problematic due to the way the execution framework handles\n+joins. At a high level, all records with matching keys are grouped into a partition, these partitions \n+are distributed across the nodes in a cluster to perform the join operation. In a skewed join, one \n+or more of these partitions will be significantly larger than the rest which will result in a majority \n+of the workers in the cluster remaining idle while a couple workers process the large partitions. This\n+results in poor performance since the cluster is being under utilized.\n+\n+### Solution 1: In-Memory Join (Spark only)\n+*This option is only available if the Spark engine is used, MapReduce \n+does not support In-Memory joins.*\n+\n+The first approach for increasing performance of skewed joins is using an In-Memory join. An in-memory\n+join is a performance improvement when a large dataset is being joined with a small dataset. In this\n+approach, the small dataset is loaded into memory and broadcast to workers and loaded into \n+workers memory. Once it is in memory, a join is performed by iterating through the elements of the\n+large dataset. With this approach, data from the large dataset is NEVER shuffled. Data with the \n+same key can be joined in parallel across the cluster instead of handled only by a single worker \n+providing optimal performance. Data sets that have a small size can be used for in-memory joins. \n+Make sure the total size of broadcast across and join does not exceed **2GB.**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc1NTM3OA=="}, "originalCommit": {"oid": "1d5819ba2bcecb5d608ffba4cfa13c8b0b8fd3d5"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2468, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}