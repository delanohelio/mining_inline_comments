{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNDcyNTE3", "number": 1072, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMTozOTowMFrODwLOdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo1MjozMFrODx2dbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODQyMTY3OnYy", "diffSide": "RIGHT", "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMTozOTowMFrOGDB8pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTo1MTowMFrOGDnGpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgzMDgyMQ==", "bodyText": "are there any format properties that are required by some formats and optional for others? If so, this can run into errors", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r405830821", "createdAt": "2020-04-08T21:39:00Z", "author": {"login": "albertshau"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "diffHunk": "@@ -64,10 +64,20 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     // invalid\n     collector.getOrThrowException();\n \n+    if (config.containsMacro(NAME_FORMAT)) {\n+      // Deploy all format plugins. This ensures that the required plugin is available when\n+      // the format macro is evaluated in prepareRun,\n+      for (FileFormat f: FileFormat.values()) {\n+        pipelineConfigurer.usePlugin(ValidatingOutputFormat.PLUGIN_TYPE, f.name().toLowerCase(), f.name().toLowerCase(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec914a3cb4a276aff0411626a209abb05399648d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQzOTU4OA==", "bodyText": "Thanks for pointing this out. Handled InvalidPluginConfigException as discussed offline.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r406439588", "createdAt": "2020-04-09T19:51:00Z", "author": {"login": "rmstar"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "diffHunk": "@@ -64,10 +64,20 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     // invalid\n     collector.getOrThrowException();\n \n+    if (config.containsMacro(NAME_FORMAT)) {\n+      // Deploy all format plugins. This ensures that the required plugin is available when\n+      // the format macro is evaluated in prepareRun,\n+      for (FileFormat f: FileFormat.values()) {\n+        pipelineConfigurer.usePlugin(ValidatingOutputFormat.PLUGIN_TYPE, f.name().toLowerCase(), f.name().toLowerCase(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgzMDgyMQ=="}, "originalCommit": {"oid": "ec914a3cb4a276aff0411626a209abb05399648d"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTExODE5OnYy", "diffSide": "RIGHT", "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzo0MzoyNlrOGEBJrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzo0MzoyNlrOGEBJrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2NjM0OA==", "bodyText": "error messages should inform the reader about the implications. Something like:\nFailed to register format '{}', which means it cannot be used when the pipeline is run. Missing properties ...", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r406866348", "createdAt": "2020-04-10T17:43:26Z", "author": {"login": "albertshau"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "diffHunk": "@@ -64,10 +68,25 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     // invalid\n     collector.getOrThrowException();\n \n+    if (config.containsMacro(NAME_FORMAT)) {\n+      // Deploy all format plugins. This ensures that the required plugin is available when\n+      // the format macro is evaluated in prepareRun,\n+      for (FileFormat f: FileFormat.values()) {\n+        try {\n+          pipelineConfigurer.usePlugin(ValidatingOutputFormat.PLUGIN_TYPE, f.name().toLowerCase(),\n+                                       f.name().toLowerCase(), config.getRawProperties());\n+        } catch (InvalidPluginConfigException e) {\n+          LOG.warn(\"Failed to configure {}, missing properties: {}, invalid properties: {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8ab12865187d47c4609d7622a12a83ad967d17"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTEzMzk1OnYy", "diffSide": "RIGHT", "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzo0OTo1OFrOGEBTlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzo0OTo1OFrOGEBTlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2ODg4Ng==", "bodyText": "In general, avoid this type of pattern where an exception is caught, logged, and then re-thrown. What ends up happening is that the error gets logged here and then later on by the caller, generating extra logs and confusing the user.\nInstead, you can wrap the exception with a more specific error message and propagate it up. Something like:\nthrow new IllegalArgumentException(\"...\", e);\n\nThe message should also give more information to the user about what they should do to fix the problem. This particular case can only happen when the format was a macro, otherwise it would have caused an error in configurePipeline. So a better message would be:\nFormat '{}' cannot be used because properties {} were not provided or were invalid when the pipeline was deployed. Set the format to a different value, or re-create the pipeline with all required properties.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r406868886", "createdAt": "2020-04-10T17:49:58Z", "author": {"login": "albertshau"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "diffHunk": "@@ -76,8 +95,15 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n   public void prepareRun(BatchSinkContext context) throws Exception {\n     FailureCollector collector = context.getFailureCollector();\n     config.validate(collector);\n-    ValidatingOutputFormat validatingOutputFormat = context.newPluginInstance(FORMAT_PLUGIN_ID);\n     FileFormat fileFormat = config.getFormat();\n+    ValidatingOutputFormat validatingOutputFormat;\n+    try {\n+      validatingOutputFormat = context.newPluginInstance(fileFormat.name().toLowerCase());\n+    } catch (InvalidPluginConfigException e) {\n+      LOG.error(\"Failed to create config for {} plugin missing properties: {} invalid properties: {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8ab12865187d47c4609d7622a12a83ad967d17"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTE2NDIwOnYy", "diffSide": "RIGHT", "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMToxMzowOFrOGE1iZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMzowNToxNlrOGE4Rqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyNDY0Ng==", "bodyText": "properties in the message should include both the missing and the invalid. Otherwise if it was from just invalid, the message will look weird.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r407724646", "createdAt": "2020-04-13T21:13:08Z", "author": {"login": "albertshau"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "diffHunk": "@@ -76,8 +96,17 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n   public void prepareRun(BatchSinkContext context) throws Exception {\n     FailureCollector collector = context.getFailureCollector();\n     config.validate(collector);\n-    ValidatingOutputFormat validatingOutputFormat = context.newPluginInstance(FORMAT_PLUGIN_ID);\n     FileFormat fileFormat = config.getFormat();\n+    ValidatingOutputFormat validatingOutputFormat;\n+    try {\n+      validatingOutputFormat = context.newPluginInstance(fileFormat.name().toLowerCase());\n+    } catch (InvalidPluginConfigException e) {\n+      String errorMessage = String.format(\"Format '%s' cannot be used because properties %s were not provided or \" +\n+                                          \"were invalid when the pipeline was deployed. Set the format to a \" +\n+                                          \"different value, or re-create the pipeline with all required properties.\",\n+                                          fileFormat.name(), e.getMissingProperties());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "587a61e9b8905250b541ea460df2f780342c599b"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc2OTUxNA==", "bodyText": "Added invalid properties in error msg.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r407769514", "createdAt": "2020-04-13T23:05:16Z", "author": {"login": "rmstar"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "diffHunk": "@@ -76,8 +96,17 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n   public void prepareRun(BatchSinkContext context) throws Exception {\n     FailureCollector collector = context.getFailureCollector();\n     config.validate(collector);\n-    ValidatingOutputFormat validatingOutputFormat = context.newPluginInstance(FORMAT_PLUGIN_ID);\n     FileFormat fileFormat = config.getFormat();\n+    ValidatingOutputFormat validatingOutputFormat;\n+    try {\n+      validatingOutputFormat = context.newPluginInstance(fileFormat.name().toLowerCase());\n+    } catch (InvalidPluginConfigException e) {\n+      String errorMessage = String.format(\"Format '%s' cannot be used because properties %s were not provided or \" +\n+                                          \"were invalid when the pipeline was deployed. Set the format to a \" +\n+                                          \"different value, or re-create the pipeline with all required properties.\",\n+                                          fileFormat.name(), e.getMissingProperties());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyNDY0Ng=="}, "originalCommit": {"oid": "587a61e9b8905250b541ea460df2f780342c599b"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTE2OTM2OnYy", "diffSide": "RIGHT", "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMToxNDo0NFrOGE1lpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMzowNTozMlrOGE4R9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyNTQ3OQ==", "bodyText": "we should have similar error handling here in the source if there is an error at configure or prepare time.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r407725479", "createdAt": "2020-04-13T21:14:44Z", "author": {"login": "albertshau"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSource.java", "diffHunk": "@@ -79,11 +79,21 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     // invalid\n     collector.getOrThrowException();\n \n+    if (config.containsMacro(NAME_FORMAT)) {\n+      // Deploy all format plugins. This ensures that the required plugin is available when\n+      // the format macro is evaluated in prepareRun,\n+      for (FileFormat f: FileFormat.values()) {\n+        pipelineConfigurer.usePlugin(ValidatingInputFormat.PLUGIN_TYPE, f.name().toLowerCase(), f.name().toLowerCase(),\n+          config.getRawProperties());\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "587a61e9b8905250b541ea460df2f780342c599b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc2OTU5MQ==", "bodyText": "fixed", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r407769591", "createdAt": "2020-04-13T23:05:32Z", "author": {"login": "rmstar"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSource.java", "diffHunk": "@@ -79,11 +79,21 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     // invalid\n     collector.getOrThrowException();\n \n+    if (config.containsMacro(NAME_FORMAT)) {\n+      // Deploy all format plugins. This ensures that the required plugin is available when\n+      // the format macro is evaluated in prepareRun,\n+      for (FileFormat f: FileFormat.values()) {\n+        pipelineConfigurer.usePlugin(ValidatingInputFormat.PLUGIN_TYPE, f.name().toLowerCase(), f.name().toLowerCase(),\n+          config.getRawProperties());\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyNTQ3OQ=="}, "originalCommit": {"oid": "587a61e9b8905250b541ea460df2f780342c599b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTE3NTQyOnYy", "diffSide": "RIGHT", "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSourceConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMToxNjozNlrOGE1pag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMzowNjoxM1rOGE4Syg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyNjQ0Mg==", "bodyText": "have we tested a pipeline where all of these are macros? Have seen bugs introduced in the past where the property is assumed to not be a macro and a null pointer exception is generated at configure time.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r407726442", "createdAt": "2020-04-13T21:16:36Z", "author": {"login": "albertshau"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSourceConfig.java", "diffHunk": "@@ -60,28 +61,33 @@\n   @Macro\n   private Long maxSplitSize;\n \n+  @Macro\n   @Nullable\n   @Description(\"Whether to allow an input that does not exist. When false, the source will fail the run if the input \"\n     + \"does not exist. When true, the run will not fail and the source will not generate any output. \"\n     + \"The default value is false.\")\n   private Boolean ignoreNonExistingFolders;\n \n+  @Macro\n   @Nullable\n   @Description(\"Whether to recursively read directories within the input directory. The default is false.\")\n   private Boolean recursive;\n \n   @Name(PATH_FIELD)\n+  @Macro\n   @Nullable\n   @Description(\"Output field to place the path of the file that the record was read from. \"\n     + \"If not specified, the file path will not be included in output records. \"\n     + \"If specified, the field must exist in the output schema as a string.\")\n   private String pathField;\n \n+  @Macro", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "587a61e9b8905250b541ea460df2f780342c599b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc2OTgwMg==", "bodyText": "yes, I tested a File source -> File sink pipeline where all these fields are macros.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r407769802", "createdAt": "2020-04-13T23:06:13Z", "author": {"login": "rmstar"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSourceConfig.java", "diffHunk": "@@ -60,28 +61,33 @@\n   @Macro\n   private Long maxSplitSize;\n \n+  @Macro\n   @Nullable\n   @Description(\"Whether to allow an input that does not exist. When false, the source will fail the run if the input \"\n     + \"does not exist. When true, the run will not fail and the source will not generate any output. \"\n     + \"The default value is false.\")\n   private Boolean ignoreNonExistingFolders;\n \n+  @Macro\n   @Nullable\n   @Description(\"Whether to recursively read directories within the input directory. The default is false.\")\n   private Boolean recursive;\n \n   @Name(PATH_FIELD)\n+  @Macro\n   @Nullable\n   @Description(\"Output field to place the path of the file that the record was read from. \"\n     + \"If not specified, the file path will not be included in output records. \"\n     + \"If specified, the field must exist in the output schema as a string.\")\n   private String pathField;\n \n+  @Macro", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyNjQ0Mg=="}, "originalCommit": {"oid": "587a61e9b8905250b541ea460df2f780342c599b"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTk4OTEwOnYy", "diffSide": "RIGHT", "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo1MTo0M1rOGFjvJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNToxMDoxMFrOGFp_-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTU3Mg==", "bodyText": "e.getInvalidProperties() is a set of objects, not property names. It will not display nicely. The location of that third '%s' is also awkward, it won't be a good sentence.\nLet's remove that last %s\ninvalid %s -> invalid\nand create a union of the property names from missing properties and invalid properties.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r408481572", "createdAt": "2020-04-14T22:51:43Z", "author": {"login": "albertshau"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "diffHunk": "@@ -76,8 +96,17 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n   public void prepareRun(BatchSinkContext context) throws Exception {\n     FailureCollector collector = context.getFailureCollector();\n     config.validate(collector);\n-    ValidatingOutputFormat validatingOutputFormat = context.newPluginInstance(FORMAT_PLUGIN_ID);\n     FileFormat fileFormat = config.getFormat();\n+    ValidatingOutputFormat validatingOutputFormat;\n+    try {\n+      validatingOutputFormat = context.newPluginInstance(fileFormat.name().toLowerCase());\n+    } catch (InvalidPluginConfigException e) {\n+      String errorMessage = String.format(\"Format '%s' cannot be used because properties %s were not provided or \" +\n+                                          \"were invalid %s when the pipeline was deployed. Set the format to a \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fab1056fc6b18cccbc8556096b08e39c406791aa"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MjU1Nw==", "bodyText": "also, indentation here is inconsistent. Continuing a statement on the next line should be a 2 space indent, not aligned with the previous line. alignment is used when there are multiple arguments for a single method call spread out across multiple lines.\nformat(\"message '%s' \" + \n         \"wraps \",\n       arg);\n\nplease see rest of the project for examples, and update your IDE accordingly.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r408482557", "createdAt": "2020-04-14T22:54:29Z", "author": {"login": "albertshau"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "diffHunk": "@@ -76,8 +96,17 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n   public void prepareRun(BatchSinkContext context) throws Exception {\n     FailureCollector collector = context.getFailureCollector();\n     config.validate(collector);\n-    ValidatingOutputFormat validatingOutputFormat = context.newPluginInstance(FORMAT_PLUGIN_ID);\n     FileFormat fileFormat = config.getFormat();\n+    ValidatingOutputFormat validatingOutputFormat;\n+    try {\n+      validatingOutputFormat = context.newPluginInstance(fileFormat.name().toLowerCase());\n+    } catch (InvalidPluginConfigException e) {\n+      String errorMessage = String.format(\"Format '%s' cannot be used because properties %s were not provided or \" +\n+                                          \"were invalid %s when the pipeline was deployed. Set the format to a \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTU3Mg=="}, "originalCommit": {"oid": "fab1056fc6b18cccbc8556096b08e39c406791aa"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU4NDE4Nw==", "bodyText": "fixed indentation and error msg.", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r408584187", "createdAt": "2020-04-15T05:10:10Z", "author": {"login": "rmstar"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSink.java", "diffHunk": "@@ -76,8 +96,17 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n   public void prepareRun(BatchSinkContext context) throws Exception {\n     FailureCollector collector = context.getFailureCollector();\n     config.validate(collector);\n-    ValidatingOutputFormat validatingOutputFormat = context.newPluginInstance(FORMAT_PLUGIN_ID);\n     FileFormat fileFormat = config.getFormat();\n+    ValidatingOutputFormat validatingOutputFormat;\n+    try {\n+      validatingOutputFormat = context.newPluginInstance(fileFormat.name().toLowerCase());\n+    } catch (InvalidPluginConfigException e) {\n+      String errorMessage = String.format(\"Format '%s' cannot be used because properties %s were not provided or \" +\n+                                          \"were invalid %s when the pipeline was deployed. Set the format to a \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTU3Mg=="}, "originalCommit": {"oid": "fab1056fc6b18cccbc8556096b08e39c406791aa"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTk5MDYyOnYy", "diffSide": "RIGHT", "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo1MjoyM1rOGFjwAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNToxMToyMFrOGFqBKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTc5NA==", "bodyText": "indentation should be 2 spaces not 4", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r408481794", "createdAt": "2020-04-14T22:52:23Z", "author": {"login": "albertshau"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSource.java", "diffHunk": "@@ -79,11 +83,27 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     // invalid\n     collector.getOrThrowException();\n \n+    if (config.containsMacro(NAME_FORMAT)) {\n+      // Deploy all format plugins. This ensures that the required plugin is available when\n+      // the format macro is evaluated in prepareRun,\n+      for (FileFormat f: FileFormat.values()) {\n+        try {\n+          pipelineConfigurer.usePlugin(ValidatingInputFormat.PLUGIN_TYPE, f.name().toLowerCase(),\n+                                       f.name().toLowerCase(), config.getRawProperties());\n+        } catch (InvalidPluginConfigException e) {\n+          LOG.warn(\"Failed to register format '{}', which means it cannot be used when the pipeline is run.\" +\n+              \"Missing properties: {}, invalid properties: {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fab1056fc6b18cccbc8556096b08e39c406791aa"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU4NDQ4OQ==", "bodyText": "fixed", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r408584489", "createdAt": "2020-04-15T05:11:20Z", "author": {"login": "rmstar"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSource.java", "diffHunk": "@@ -79,11 +83,27 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n     // invalid\n     collector.getOrThrowException();\n \n+    if (config.containsMacro(NAME_FORMAT)) {\n+      // Deploy all format plugins. This ensures that the required plugin is available when\n+      // the format macro is evaluated in prepareRun,\n+      for (FileFormat f: FileFormat.values()) {\n+        try {\n+          pipelineConfigurer.usePlugin(ValidatingInputFormat.PLUGIN_TYPE, f.name().toLowerCase(),\n+                                       f.name().toLowerCase(), config.getRawProperties());\n+        } catch (InvalidPluginConfigException e) {\n+          LOG.warn(\"Failed to register format '{}', which means it cannot be used when the pipeline is run.\" +\n+              \"Missing properties: {}, invalid properties: {}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTc5NA=="}, "originalCommit": {"oid": "fab1056fc6b18cccbc8556096b08e39c406791aa"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTk5MDg3OnYy", "diffSide": "RIGHT", "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSource.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo1MjozMFrOGFjwKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNToxMTo0NlrOGFqBlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTgzMg==", "bodyText": "indentation", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r408481832", "createdAt": "2020-04-14T22:52:30Z", "author": {"login": "albertshau"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSource.java", "diffHunk": "@@ -99,8 +119,18 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n   public void prepareRun(BatchSourceContext context) throws Exception {\n     FailureCollector collector = context.getFailureCollector();\n     config.validate(collector);\n-    ValidatingInputFormat validatingInputFormat = context.newPluginInstance(FORMAT_PLUGIN_ID);\n     FileFormat fileFormat = config.getFormat();\n+    ValidatingInputFormat validatingInputFormat;\n+    try {\n+      validatingInputFormat = context.newPluginInstance(fileFormat.name().toLowerCase());\n+    } catch (InvalidPluginConfigException e) {\n+      String errorMessage = String.format(\"Format '%s' cannot be used because properties %s were not provided or \" +\n+          \"were invalid %s when the pipeline was deployed. Set the format to a \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fab1056fc6b18cccbc8556096b08e39c406791aa"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MjAwMA==", "bodyText": "same comment as above about the error message", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r408482000", "createdAt": "2020-04-14T22:52:57Z", "author": {"login": "albertshau"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSource.java", "diffHunk": "@@ -99,8 +119,18 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n   public void prepareRun(BatchSourceContext context) throws Exception {\n     FailureCollector collector = context.getFailureCollector();\n     config.validate(collector);\n-    ValidatingInputFormat validatingInputFormat = context.newPluginInstance(FORMAT_PLUGIN_ID);\n     FileFormat fileFormat = config.getFormat();\n+    ValidatingInputFormat validatingInputFormat;\n+    try {\n+      validatingInputFormat = context.newPluginInstance(fileFormat.name().toLowerCase());\n+    } catch (InvalidPluginConfigException e) {\n+      String errorMessage = String.format(\"Format '%s' cannot be used because properties %s were not provided or \" +\n+          \"were invalid %s when the pipeline was deployed. Set the format to a \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTgzMg=="}, "originalCommit": {"oid": "fab1056fc6b18cccbc8556096b08e39c406791aa"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU4NDU5OA==", "bodyText": "fixed indent and error msg", "url": "https://github.com/cdapio/hydrator-plugins/pull/1072#discussion_r408584598", "createdAt": "2020-04-15T05:11:46Z", "author": {"login": "rmstar"}, "path": "format-common/src/main/java/io/cdap/plugin/format/plugin/AbstractFileSource.java", "diffHunk": "@@ -99,8 +119,18 @@ public void configurePipeline(PipelineConfigurer pipelineConfigurer) {\n   public void prepareRun(BatchSourceContext context) throws Exception {\n     FailureCollector collector = context.getFailureCollector();\n     config.validate(collector);\n-    ValidatingInputFormat validatingInputFormat = context.newPluginInstance(FORMAT_PLUGIN_ID);\n     FileFormat fileFormat = config.getFormat();\n+    ValidatingInputFormat validatingInputFormat;\n+    try {\n+      validatingInputFormat = context.newPluginInstance(fileFormat.name().toLowerCase());\n+    } catch (InvalidPluginConfigException e) {\n+      String errorMessage = String.format(\"Format '%s' cannot be used because properties %s were not provided or \" +\n+          \"were invalid %s when the pipeline was deployed. Set the format to a \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTgzMg=="}, "originalCommit": {"oid": "fab1056fc6b18cccbc8556096b08e39c406791aa"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2519, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}