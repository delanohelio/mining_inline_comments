{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MjIyMTA2", "number": 8651, "title": "MULE-18064: Subscription context not propagated to error handlers", "bodyText": "Add coverage of context propagation to most routers/scopes\npiggyback minor perf improvements", "createdAt": "2020-02-17T16:21:33Z", "url": "https://github.com/mulesoft/mule/pull/8651", "merged": true, "mergeCommit": {"oid": "e4e97a92b23831d924f273622321343618263b79"}, "closed": true, "closedAt": "2020-02-18T00:10:56Z", "author": {"login": "elrodro83"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFQ2D5AFqTM1OTg1NjQ5Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFUIKLgFqTM1OTk3MDQwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5ODU2NDk3", "url": "https://github.com/mulesoft/mule/pull/8651#pullrequestreview-359856497", "createdAt": "2020-02-17T16:29:25Z", "commit": {"oid": "0985cbd912d7e884b46ca4b3548f8fe5e532bee4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNjoyOToyNVrOFqqRCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNzoyOTozNlrOFqr3vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI3NzAwMw==", "bodyText": "jdoc", "url": "https://github.com/mulesoft/mule/pull/8651#discussion_r380277003", "createdAt": "2020-02-17T16:29:25Z", "author": {"login": "fsgonz"}, "path": "tests/unit/src/main/java/org/mule/tck/processor/ContextPropagationChecker.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.tck.processor;\n+\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.fail;\n+import static reactor.core.publisher.Flux.from;\n+import static reactor.core.publisher.Mono.subscriberContext;\n+\n+import org.mule.runtime.api.exception.MuleException;\n+import org.mule.runtime.core.api.event.CoreEvent;\n+import org.mule.runtime.core.api.processor.Processor;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Publisher;\n+\n+import reactor.util.context.Context;\n+\n+public class ContextPropagationChecker implements Processor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0985cbd912d7e884b46ca4b3548f8fe5e532bee4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI3NzYwMg==", "bodyText": "use a constant", "url": "https://github.com/mulesoft/mule/pull/8651#discussion_r380277602", "createdAt": "2020-02-17T16:30:28Z", "author": {"login": "fsgonz"}, "path": "tests/unit/src/main/java/org/mule/tck/processor/ContextPropagationChecker.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.tck.processor;\n+\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.fail;\n+import static reactor.core.publisher.Flux.from;\n+import static reactor.core.publisher.Mono.subscriberContext;\n+\n+import org.mule.runtime.api.exception.MuleException;\n+import org.mule.runtime.core.api.event.CoreEvent;\n+import org.mule.runtime.core.api.processor.Processor;\n+\n+import java.util.function.Function;\n+\n+import org.reactivestreams.Publisher;\n+\n+import reactor.util.context.Context;\n+\n+public class ContextPropagationChecker implements Processor {\n+\n+  @Override\n+  public CoreEvent process(CoreEvent event) throws MuleException {\n+    fail(\"Need `apply` to be called instead of `process`.\");\n+    return event;\n+  }\n+\n+  @Override\n+  public Publisher<CoreEvent> apply(Publisher<CoreEvent> publisher) {\n+    return subscriberContext()\n+        .flatMapMany(ctx -> from(publisher)\n+            .doOnNext(e -> assertThat(ctx.getOrEmpty(\"ctxPropagated\").orElse(false), is(true))));\n+  }\n+\n+  public Function<Context, Context> contextPropagationFlag() {\n+    return ctx -> ctx.put(\"ctxPropagated\", true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0985cbd912d7e884b46ca4b3548f8fe5e532bee4"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5NTMwMQ==", "bodyText": "verify that the throwRef.get() is the appropriate mock exception.", "url": "https://github.com/mulesoft/mule/pull/8651#discussion_r380295301", "createdAt": "2020-02-17T17:08:54Z", "author": {"login": "fsgonz"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/exception/OnErrorPropagateHandlerTestCase.java", "diffHunk": "@@ -221,6 +231,29 @@ public void testMessageToStringNotCalledOnFailure() throws Exception {\n     onErrorPropagateHandler.handleException(mockException, muleEvent);\n   }\n \n+  @Test\n+  public void subscriberContextPropagation() throws MuleException {\n+    final ContextPropagationChecker contextPropagationChecker = new ContextPropagationChecker();\n+\n+    onErrorPropagateHandler\n+        .setMessageProcessors(singletonList(contextPropagationChecker));\n+\n+    initialiseIfNeeded(onErrorPropagateHandler, muleContext);\n+\n+    AtomicReference<Throwable> thownRef = new AtomicReference<>();\n+    final Consumer<Exception> router = onErrorPropagateHandler\n+        .router(pub -> Flux.from(pub)\n+            .subscriberContext(contextPropagationChecker.contextPropagationFlag()),\n+                e -> {\n+                },\n+                t -> thownRef.set(t));\n+\n+    when(mockException.getEvent()).thenReturn(muleEvent);\n+    router.accept(mockException);\n+\n+    assertThat(thownRef.get().getCause(), not(instanceOf(AssertionError.class)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0985cbd912d7e884b46ca4b3548f8fe5e532bee4"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5Nzk2MQ==", "bodyText": "Add a comment indicating why this was left (subscriber context is not propagated in the case of async)", "url": "https://github.com/mulesoft/mule/pull/8651#discussion_r380297961", "createdAt": "2020-02-17T17:15:36Z", "author": {"login": "fsgonz"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessorTestCase.java", "diffHunk": "@@ -145,6 +150,26 @@ public void processWithTx() throws Exception {\n     }\n   }\n \n+  @Test\n+  @Ignore(\"Does this case actually make sense?\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0985cbd912d7e884b46ca4b3548f8fe5e532bee4"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMwMzI5Mg==", "bodyText": "duplicated code. Maybe this assertion should be unified. Verify if this can be done in all the tests.", "url": "https://github.com/mulesoft/mule/pull/8651#discussion_r380303292", "createdAt": "2020-02-17T17:29:36Z", "author": {"login": "fsgonz"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ChoiceRouterTestCase.java", "diffHunk": "@@ -144,6 +149,39 @@ public void failingRoute() throws Exception {\n     process(choiceRouter, zapEvent());\n   }\n \n+  @Test\n+  public void subscriberContextPropagation() throws MuleException {\n+    final ContextPropagationChecker contextPropagationChecker = new ContextPropagationChecker();\n+\n+    MessageProcessorChain mp = newChain(empty(), contextPropagationChecker);\n+    choiceRouter.addRoute(payloadZapExpression(), mp);\n+    initialise();\n+\n+    final CoreEvent result = just(zapEvent())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0985cbd912d7e884b46ca4b3548f8fe5e532bee4"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbbce637b764bb5977fdf4cde4cf124c0488fccd", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/bbbce637b764bb5977fdf4cde4cf124c0488fccd", "committedDate": "2020-02-17T21:02:50Z", "message": "basic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a5de1866a63cc417f9f7a66d9aef24a5662499c", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/5a5de1866a63cc417f9f7a66d9aef24a5662499c", "committedDate": "2020-02-17T21:02:51Z", "message": "more error handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "491bfea377c3f2913bb5e8e781e8150b0c3e2e5c", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/491bfea377c3f2913bb5e8e781e8150b0c3e2e5c", "committedDate": "2020-02-17T21:02:52Z", "message": "more error handling 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e49fdfb01ee3c4e4cf95d4b6219acf5966aafc59", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/e49fdfb01ee3c4e4cf95d4b6219acf5966aafc59", "committedDate": "2020-02-17T21:02:54Z", "message": "MULE-XXXXX: Subscription context not propagated to error handlers\n\n* Also, add coverage for context propagation for routers/scopes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92bde00b4a27cf42a5220788feffaf3316686c65", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/92bde00b4a27cf42a5220788feffaf3316686c65", "committedDate": "2020-02-17T21:02:55Z", "message": "self-review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdfd804db28755186256dfa062cf84a120ad1f89", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/bdfd804db28755186256dfa062cf84a120ad1f89", "committedDate": "2020-02-17T21:20:48Z", "message": "review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0985cbd912d7e884b46ca4b3548f8fe5e532bee4", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/0985cbd912d7e884b46ca4b3548f8fe5e532bee4", "committedDate": "2020-02-17T16:20:47Z", "message": "self-review"}, "afterCommit": {"oid": "bdfd804db28755186256dfa062cf84a120ad1f89", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/bdfd804db28755186256dfa062cf84a120ad1f89", "committedDate": "2020-02-17T21:20:48Z", "message": "review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5OTcwNDA5", "url": "https://github.com/mulesoft/mule/pull/8651#pullrequestreview-359970409", "createdAt": "2020-02-17T21:22:43Z", "commit": {"oid": "bdfd804db28755186256dfa062cf84a120ad1f89"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 971, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}