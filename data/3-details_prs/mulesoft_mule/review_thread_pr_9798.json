{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MjU4NDk3", "number": 9798, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMjozMjo0MlrOE_ITCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMjozMjo0MlrOE_ITCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjMxNjg5OnYy", "diffSide": "RIGHT", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/forkjoin/AbstractForkJoinStrategyTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMjozMjo0MlrOH8qjEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMjozMjo0MlrOH8qjEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM3MzcxNA==", "bodyText": "Please use static imports", "url": "https://github.com/mulesoft/mule/pull/9798#discussion_r533373714", "createdAt": "2020-12-01T12:32:42Z", "author": {"login": "szaffarano"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/forkjoin/AbstractForkJoinStrategyTestCase.java", "diffHunk": "@@ -347,15 +357,17 @@ private void setupConcurrentProcessingStrategy() {\n   private CompositeRoutingException assertCompositeRoutingException(Throwable throwable, int errors) {\n     assertThat(throwable, instanceOf(CompositeRoutingException.class));\n     CompositeRoutingException compositeRoutingException = (CompositeRoutingException) throwable;\n-    assertThat(compositeRoutingException.getErrors().size(), is(errors));\n+    assertThat(compositeRoutingException.getErrors().size(), greaterThanOrEqualTo(errors));\n+\n     return compositeRoutingException;\n   }\n \n   private RoutingResult assertRoutingResult(CompositeRoutingException compositeRoutingException, int results, int errors) {\n     assertThat(compositeRoutingException.getErrorMessage().getPayload().getValue(), instanceOf(RoutingResult.class));\n     RoutingResult routingResult = (RoutingResult) compositeRoutingException.getErrorMessage().getPayload().getValue();\n-    assertThat(routingResult.getResults().size(), is(results));\n-    assertThat(routingResult.getFailures().size(), is(errors));\n+    assertThat(routingResult.getResults().size(), Matchers.lessThanOrEqualTo(results));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feae2fd9d132def5c1d9e9fbc259280cfb9e51cd"}, "originalPosition": 87}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4560, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}