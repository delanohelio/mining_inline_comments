{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMzk1NTg4", "number": 8641, "title": "MULE-18051: Improve SDK performance by using generated bytecode instead of reflection", "bodyText": "", "createdAt": "2020-02-10T22:56:11Z", "url": "https://github.com/mulesoft/mule/pull/8641", "merged": true, "mergeCommit": {"oid": "e08004b1e8d4cf87faaa2c3796e5cc4828c974b8"}, "closed": true, "closedAt": "2020-02-11T21:55:04Z", "author": {"login": "marianogonzalez"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDEQeMAH2gAyMzczMzk1NTg4OjQ0NzgxMTAzNzAxNDcxYTZlOTIxODExY2ZkYmU5NzkyMGM0M2FjY2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDYYRIgFqTM1Njk5Nzc0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "44781103701471a6e921811cfdbe97920c43accc", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/44781103701471a6e921811cfdbe97920c43accc", "committedDate": "2020-02-10T21:45:28Z", "message": "hell yeah!"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "657b77ade7f327cbd7bd3c6922028bf462cb00e1", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/657b77ade7f327cbd7bd3c6922028bf462cb00e1", "committedDate": "2020-02-10T21:45:28Z", "message": "update dependency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "121ee3ad1d254313d44ce2d3966fad96f4cf74b9", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/121ee3ad1d254313d44ce2d3966fad96f4cf74b9", "committedDate": "2020-02-10T21:45:28Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b5d62148446014ff69d297baeeb0400fd3f5682", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/3b5d62148446014ff69d297baeeb0400fd3f5682", "committedDate": "2020-02-10T21:45:28Z", "message": "curated prototype"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ac073057cf859eeea259451b5e91205048bc660", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/5ac073057cf859eeea259451b5e91205048bc660", "committedDate": "2020-02-10T21:45:28Z", "message": "rename and clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "065c2ad044b08667130715b95ea049cc166a89fe", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/065c2ad044b08667130715b95ea049cc166a89fe", "committedDate": "2020-02-10T21:45:28Z", "message": "bug fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "362111e0957c9667f9d8fdcc7cbd5ef318bb5026", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/362111e0957c9667f9d8fdcc7cbd5ef318bb5026", "committedDate": "2020-02-10T21:45:28Z", "message": "bybye autoboxing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b42a0d80062c20649b8b96c90b29187d0786486", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/7b42a0d80062c20649b8b96c90b29187d0786486", "committedDate": "2020-02-10T21:45:28Z", "message": "format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea2dbd36d345d4adb7bd3f8dc1fbba3942b03919", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/ea2dbd36d345d4adb7bd3f8dc1fbba3942b03919", "committedDate": "2020-02-10T21:45:29Z", "message": "debug tools"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13d1b113911c9f602ca95368a80db9c7129a0f02", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/13d1b113911c9f602ca95368a80db9c7129a0f02", "committedDate": "2020-02-10T21:45:29Z", "message": "working"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a35923044087ead42da665f04e34bbb13c3896f1", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/a35923044087ead42da665f04e34bbb13c3896f1", "committedDate": "2020-02-10T21:58:41Z", "message": "format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f327d802f845db4e9e023b934928112a0e922e8", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/1f327d802f845db4e9e023b934928112a0e922e8", "committedDate": "2020-02-10T22:55:19Z", "message": "MULE-18051: Improve SDK performance by using generated bytecode instead of reflection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NjMzOTA3", "url": "https://github.com/mulesoft/mule/pull/8641#pullrequestreview-356633907", "createdAt": "2020-02-11T12:57:34Z", "commit": {"oid": "1f327d802f845db4e9e023b934928112a0e922e8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMjo1NzozNFrOFoH7iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMzoxMTowN1rOFoIUiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYxNzI5MQ==", "bodyText": "extract this version to a constant and add it as dependency managemnt", "url": "https://github.com/mulesoft/mule/pull/8641#discussion_r377617291", "createdAt": "2020-02-11T12:57:34Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-support/pom.xml", "diffHunk": "@@ -73,6 +73,12 @@\n             <groupId>io.projectreactor</groupId>\n             <artifactId>reactor-core</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>net.bytebuddy</groupId>\n+            <artifactId>byte-buddy</artifactId>\n+            <version>1.10.7</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f327d802f845db4e9e023b934928112a0e922e8"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYxNzc0Mg==", "bodyText": "add serialVersion uuid", "url": "https://github.com/mulesoft/mule/pull/8641#discussion_r377617742", "createdAt": "2020-02-11T12:58:27Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/exception/SdkMethodInvocationException.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.runtime.exception;\n+\n+import org.mule.runtime.api.exception.MuleRuntimeException;\n+\n+/**\n+ * Signals that the SDK invoked an extension's method which threw an exception. The exception thrown will be available as\n+ * the cause.\n+ * <p>\n+ * Because this is a {@link MuleRuntimeException}, it will not automatically fill the stack trace, providing a performance\n+ * boost.\n+ *\n+ * @since 4.3.0\n+ */\n+public class SdkMethodInvocationException extends MuleRuntimeException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f327d802f845db4e9e023b934928112a0e922e8"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYxODE0Nw==", "bodyText": "this is true also for MuleException. Did you make it a MuleRuntimeException because of this or do you actually need this to be a runtime exception?", "url": "https://github.com/mulesoft/mule/pull/8641#discussion_r377618147", "createdAt": "2020-02-11T12:59:15Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/exception/SdkMethodInvocationException.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.runtime.exception;\n+\n+import org.mule.runtime.api.exception.MuleRuntimeException;\n+\n+/**\n+ * Signals that the SDK invoked an extension's method which threw an exception. The exception thrown will be available as\n+ * the cause.\n+ * <p>\n+ * Because this is a {@link MuleRuntimeException}, it will not automatically fill the stack trace, providing a performance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f327d802f845db4e9e023b934928112a0e922e8"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYxODI4MA==", "bodyText": "is this removal related to this change?", "url": "https://github.com/mulesoft/mule/pull/8641#discussion_r377618280", "createdAt": "2020-02-11T12:59:34Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/exception/TooManyConfigsException.java", "diffHunk": "@@ -1,45 +0,0 @@\n-/*\n- * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n- * The software in this package is published under the terms of the CPAL v1.0\n- * license, a copy of which has been included with this distribution in the\n- * LICENSE.txt file.\n- */\n-package org.mule.runtime.module.extension.internal.runtime.exception;\n-\n-import static org.mule.runtime.api.i18n.I18nMessageFactory.createStaticMessage;\n-import org.mule.runtime.api.exception.MuleRuntimeException;\n-import org.mule.runtime.api.meta.model.ExtensionModel;\n-import org.mule.runtime.api.meta.model.config.ConfigurationModel;\n-\n-/**\n- * Exception to signal that too many configs are eligible for executing a component and thus the user should manually select one\n- *\n- * @since 4.0\n- */\n-public class TooManyConfigsException extends MuleRuntimeException {\n-\n-  private final ExtensionModel extensionModel;\n-  private final ConfigurationModel configurationModel;\n-  private final int configsCount;\n-\n-  public TooManyConfigsException(String message, ExtensionModel extensionModel, ConfigurationModel configurationModel,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f327d802f845db4e9e023b934928112a0e922e8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYyMDY1Ng==", "bodyText": "the file should only be generated if a certain troubleshooting flag is enabled", "url": "https://github.com/mulesoft/mule/pull/8641#discussion_r377620656", "createdAt": "2020-02-11T13:04:43Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/execution/GeneratedClass.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.runtime.execution;\n+\n+import java.io.File;\n+\n+/**\n+ * Represents a class that was dynamically generated at runtime\n+ *\n+ * @param <T> the generic type of the generated class\n+ * @since 4.3.0\n+ */\n+public final class GeneratedClass<T> {\n+\n+  private final Class<T> generatedClass;\n+  private final File byteCodeFile;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f327d802f845db4e9e023b934928112a0e922e8"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYyMDgzNw==", "bodyText": "what's the point of this?", "url": "https://github.com/mulesoft/mule/pull/8641#discussion_r377620837", "createdAt": "2020-02-11T13:05:08Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/execution/GeneratedInstance.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.runtime.execution;\n+\n+/**\n+ * Represents an instance of a {@link GeneratedClass}\n+ *\n+ * @param <T> the generic type of the generated instance\n+ * @since 4.3.0\n+ */\n+public final class GeneratedInstance<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f327d802f845db4e9e023b934928112a0e922e8"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYyMjk1NA==", "bodyText": "this seems to be called concurrently. Replace the map with a ConcurrentHashMap", "url": "https://github.com/mulesoft/mule/pull/8641#discussion_r377622954", "createdAt": "2020-02-11T13:09:30Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/execution/executor/MethodExecutorGenerator.java", "diffHunk": "@@ -0,0 +1,265 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.runtime.execution.executor;\n+\n+import static java.lang.System.identityHashCode;\n+import static java.util.Arrays.asList;\n+import static net.bytebuddy.description.modifier.FieldManifestation.FINAL;\n+import static net.bytebuddy.description.modifier.Visibility.PRIVATE;\n+import static net.bytebuddy.description.modifier.Visibility.PUBLIC;\n+import static net.bytebuddy.description.type.TypeDescription.Generic.Builder.parameterizedType;\n+import static net.bytebuddy.dynamic.loading.ClassLoadingStrategy.Default.INJECTION;\n+import static net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy.Default.NO_CONSTRUCTORS;\n+import static net.bytebuddy.implementation.bytecode.member.FieldAccess.forField;\n+import static net.bytebuddy.implementation.bytecode.member.MethodReturn.VOID;\n+import static net.bytebuddy.matcher.ElementMatchers.isConstructor;\n+import static net.bytebuddy.matcher.ElementMatchers.named;\n+import static net.bytebuddy.matcher.ElementMatchers.takesArguments;\n+import static org.mule.runtime.api.i18n.I18nMessageFactory.createStaticMessage;\n+import static org.mule.runtime.core.api.util.FileUtils.TEMP_DIR;\n+\n+import org.mule.runtime.api.exception.MuleRuntimeException;\n+import org.mule.runtime.core.internal.util.CompositeClassLoader;\n+import org.mule.runtime.extension.api.runtime.operation.ExecutionContext;\n+import org.mule.runtime.module.extension.internal.runtime.execution.ArgumentResolverDelegate;\n+import org.mule.runtime.module.extension.internal.runtime.execution.GeneratedClass;\n+import org.mule.runtime.module.extension.internal.runtime.execution.GeneratedInstance;\n+import org.mule.runtime.module.extension.internal.runtime.resolver.ArgumentResolver;\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Parameter;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import net.bytebuddy.ByteBuddy;\n+import net.bytebuddy.description.field.FieldDescription;\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.description.type.TypeDescription.ForLoadedType;\n+import net.bytebuddy.dynamic.DynamicType;\n+import net.bytebuddy.dynamic.DynamicType.Builder.MethodDefinition.ParameterDefinition.Annotatable;\n+import net.bytebuddy.dynamic.DynamicType.Unloaded;\n+import net.bytebuddy.dynamic.scaffold.InstrumentedType;\n+import net.bytebuddy.implementation.Implementation;\n+import net.bytebuddy.implementation.MethodCall;\n+import net.bytebuddy.implementation.MethodCall.ArgumentLoader;\n+import net.bytebuddy.implementation.bytecode.ByteCodeAppender;\n+import net.bytebuddy.implementation.bytecode.StackManipulation;\n+import net.bytebuddy.implementation.bytecode.assign.Assigner;\n+import net.bytebuddy.implementation.bytecode.member.FieldAccess;\n+import net.bytebuddy.implementation.bytecode.member.MethodInvocation;\n+import net.bytebuddy.implementation.bytecode.member.MethodVariableAccess;\n+\n+/**\n+ * Uses bytecode manipulation to dynamically generate {@link MethodExecutor} classes that invoke a given method.\n+ *\n+ * @since 4.3.0\n+ */\n+public class MethodExecutorGenerator {\n+\n+  private static final String TARGET_INSTANCE_FIELD_NAME = \"__targetInstance\";\n+  private final Map<String, GeneratedClass<MethodExecutor>> executorClasses = new HashMap<>();\n+  private final int instanceId = identityHashCode(this);\n+\n+  /**\n+   * Creates a {@link GeneratedInstance} pointing to a dynamic {@link MethodExecutor} that executes the given {@code method}.\n+   * <p>\n+   * Each invocation to this method will return a new {@link GeneratedInstance} pointing to unique instances. However, all\n+   * invocations pointing to the same {@code method} will share the same underlying {@link GeneratedClass}\n+   *\n+   * @param targetInstance           the instance on which the method is to be executed\n+   * @param method                   the method to be invoked\n+   * @param argumentResolverDelegate the {@link ArgumentResolverDelegate} that provides the {@link ArgumentResolver resolvers}\n+   * @return a {@link GeneratedInstance}\n+   * @throws Exception if the instance cannot be generated\n+   */\n+  public GeneratedInstance<MethodExecutor> generate(Object targetInstance,\n+                                                    Method method,\n+                                                    ArgumentResolverDelegate argumentResolverDelegate)\n+      throws Exception {\n+\n+    GeneratedClass<MethodExecutor> generatedClass = getExecutorClass(method, targetInstance);\n+    List<Object> args = new ArrayList<>();\n+    args.add(targetInstance);\n+    args.addAll(asList(argumentResolverDelegate.getArgumentResolvers()));\n+\n+    MethodExecutor instance = (MethodExecutor) generatedClass.getGeneratedClass().getConstructors()[0]\n+        .newInstance(args.toArray(new Object[args.size()]));\n+\n+    return new GeneratedInstance<>(instance, generatedClass);\n+  }\n+\n+  private GeneratedClass<MethodExecutor> getExecutorClass(Method method, Object targetInstance) {\n+    String generatorName = getGeneratorName(method);\n+    return executorClasses.computeIfAbsent(generatorName, key -> generateExecutorClass(key, method, targetInstance));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f327d802f845db4e9e023b934928112a0e922e8"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYyMzY5MQ==", "bodyText": "constant", "url": "https://github.com/mulesoft/mule/pull/8641#discussion_r377623691", "createdAt": "2020-02-11T13:11:07Z", "author": {"login": "elrodro83"}, "path": "tests/performance/pom.xml", "diffHunk": "@@ -54,6 +54,11 @@\n     </build>\n \n     <dependencies>\n+        <dependency>\n+            <groupId>net.bytebuddy</groupId>\n+            <artifactId>byte-buddy</artifactId>\n+            <version>1.10.7</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f327d802f845db4e9e023b934928112a0e922e8"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d74846fbb35d20ffc91084b60c9740247567f59d", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/d74846fbb35d20ffc91084b60c9740247567f59d", "committedDate": "2020-02-11T14:29:43Z", "message": "feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2458c912939cd5f0ca86bb319b2a8397a8dd6208", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/2458c912939cd5f0ca86bb319b2a8397a8dd6208", "committedDate": "2020-02-11T14:52:30Z", "message": "sonar feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3be93bac2ca7e0710f9e77b325275190014bffb", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/a3be93bac2ca7e0710f9e77b325275190014bffb", "committedDate": "2020-02-11T15:22:27Z", "message": "more feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a909026c4c400af129aca214915aae487373e47", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/2a909026c4c400af129aca214915aae487373e47", "committedDate": "2020-02-11T16:54:32Z", "message": "dependency management"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38b4ab1f34b3ed3ba10435adb75ab305c8371847", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/38b4ab1f34b3ed3ba10435adb75ab305c8371847", "committedDate": "2020-02-11T16:56:21Z", "message": "jdooc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ec1ce2f88d10e61428c50e55b02cfb58dd063fc", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/6ec1ce2f88d10e61428c50e55b02cfb58dd063fc", "committedDate": "2020-02-11T16:57:12Z", "message": "empty line"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODM5MDQ2", "url": "https://github.com/mulesoft/mule/pull/8641#pullrequestreview-356839046", "createdAt": "2020-02-11T17:11:55Z", "commit": {"oid": "6ec1ce2f88d10e61428c50e55b02cfb58dd063fc"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "154d82373bd3a57c136e88e9cc843d282796736c", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/154d82373bd3a57c136e88e9cc843d282796736c", "committedDate": "2020-02-11T20:24:13Z", "message": "salvenme de esta"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2OTk3NzQ0", "url": "https://github.com/mulesoft/mule/pull/8641#pullrequestreview-356997744", "createdAt": "2020-02-11T21:12:05Z", "commit": {"oid": "154d82373bd3a57c136e88e9cc843d282796736c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 959, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}