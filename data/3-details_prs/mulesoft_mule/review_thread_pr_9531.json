{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMTU5Njg4", "number": 9531, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMDowNjo1MVrOEr1m5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODo0NDoyMVrOEwI6JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDAyNTMzOnYy", "diffSide": "RIGHT", "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/AbstractParameterResolverExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMDowNjo1MVrOHe1AZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMDowNjo1MVrOHe1AZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA4Nzc4MA==", "bodyText": "I just realized that I should first check if the parameterModel.isSupportExpression() == true before checking the String content.", "url": "https://github.com/mulesoft/mule/pull/9531#discussion_r502087780", "createdAt": "2020-10-09T00:06:51Z", "author": {"login": "gsfernandes"}, "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/AbstractParameterResolverExecutor.java", "diffHunk": "@@ -87,9 +93,13 @@ protected ParameterValueResolver parameterValueResolver(ParameterizedElementDecl\n         final ParameterModel parameterModel = parameterGroupModel.getParameter(parameterName)\n             .orElseThrow(() -> new MuleRuntimeException(createStaticMessage(\"Could not find parameter with name: '%s' in parameter group: '%s'\",\n                                                                             parameterName, parameterGroupName)));\n-        parametersMap.put(parameterName,\n-                          extractValue(parameterElement.getValue(),\n-                                       artifactHelper.getParameterClass(parameterModel, parameterizedElementDeclaration)));\n+        Object value = extractValue(parameterElement.getValue(),\n+                                    artifactHelper.getParameterClass(parameterModel, parameterizedElementDeclaration));\n+        if (isExpression(value)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4ea9a1ad10b73de737c77676b16e93a48131741"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDAyNTc1OnYy", "diffSide": "RIGHT", "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/metadata/MetadataKeyDeclarationResolver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMDowNzowMlrOHe1AoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMDowNzowMlrOHe1AoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA4Nzg0MA==", "bodyText": "Same here. I just realized that I should first check if the parameterModel.isSupportExpression() == true before checking the String content.", "url": "https://github.com/mulesoft/mule/pull/9531#discussion_r502087840", "createdAt": "2020-10-09T00:07:02Z", "author": {"login": "gsfernandes"}, "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/metadata/MetadataKeyDeclarationResolver.java", "diffHunk": "@@ -150,7 +152,12 @@ public MetadataKeyResult resolveKeyResult() {\n             .orElseThrow(() -> new MuleRuntimeException(createStaticMessage(\"Could not find parameter with name: %s in parameter group: %s\",\n                                                                             parameterName, parameterGroupName)));\n         if (parameterModel.getModelProperty(MetadataKeyPartModelProperty.class).isPresent()) {\n-          parametersMap.put(parameterName, extractSimpleValue(parameterElement.getValue()));\n+          String value = extractSimpleValue(parameterElement.getValue());\n+          if (isExpression(value)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4ea9a1ad10b73de737c77676b16e93a48131741"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4OTEyOTcyOnYy", "diffSide": "RIGHT", "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/AbstractParameterResolverExecutor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODo0NDoxMFrOHlg6fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDoyMTowNFrOHlvCWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA5ODYyMw==", "bodyText": "Even if the parameterModel supportExpressions. Shouldn't we fail? I mean, we won't be able to process them anyways.", "url": "https://github.com/mulesoft/mule/pull/9531#discussion_r509098623", "createdAt": "2020-10-21T08:44:10Z", "author": {"login": "lucianoRM"}, "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/AbstractParameterResolverExecutor.java", "diffHunk": "@@ -87,9 +94,13 @@ protected ParameterValueResolver parameterValueResolver(ParameterizedElementDecl\n         final ParameterModel parameterModel = parameterGroupModel.getParameter(parameterName)\n             .orElseThrow(() -> new MuleRuntimeException(createStaticMessage(\"Could not find parameter with name: '%s' in parameter group: '%s'\",\n                                                                             parameterName, parameterGroupName)));\n-        parametersMap.put(parameterName,\n-                          extractValue(parameterElement.getValue(),\n-                                       artifactHelper.getParameterClass(parameterModel, parameterizedElementDeclaration)));\n+        Object value = extractValue(parameterElement.getValue(),\n+                                    artifactHelper.getParameterClass(parameterModel, parameterizedElementDeclaration));\n+        if (!parameterModel.getExpressionSupport().equals(NOT_SUPPORTED) && isExpression(value)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d808a82d7f501b375b51ecf2720f862a78b24612"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMzMDAxMQ==", "bodyText": "Well, in that case the \"value\" is handled as String and it is up to the resolver to handle it. I added this in order to prevent doing the parsing of the String for each parameter as it has impact in performance.", "url": "https://github.com/mulesoft/mule/pull/9531#discussion_r509330011", "createdAt": "2020-10-21T14:21:04Z", "author": {"login": "gsfernandes"}, "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/AbstractParameterResolverExecutor.java", "diffHunk": "@@ -87,9 +94,13 @@ protected ParameterValueResolver parameterValueResolver(ParameterizedElementDecl\n         final ParameterModel parameterModel = parameterGroupModel.getParameter(parameterName)\n             .orElseThrow(() -> new MuleRuntimeException(createStaticMessage(\"Could not find parameter with name: '%s' in parameter group: '%s'\",\n                                                                             parameterName, parameterGroupName)));\n-        parametersMap.put(parameterName,\n-                          extractValue(parameterElement.getValue(),\n-                                       artifactHelper.getParameterClass(parameterModel, parameterizedElementDeclaration)));\n+        Object value = extractValue(parameterElement.getValue(),\n+                                    artifactHelper.getParameterClass(parameterModel, parameterizedElementDeclaration));\n+        if (!parameterModel.getExpressionSupport().equals(NOT_SUPPORTED) && isExpression(value)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA5ODYyMw=="}, "originalCommit": {"oid": "d808a82d7f501b375b51ecf2720f862a78b24612"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4OTEzMDYxOnYy", "diffSide": "RIGHT", "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/metadata/MetadataKeyDeclarationResolver.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODo0NDoyMVrOHlg7Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODo0NDoyMVrOHlg7Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA5ODc2Mw==", "bodyText": "The same here", "url": "https://github.com/mulesoft/mule/pull/9531#discussion_r509098763", "createdAt": "2020-10-21T08:44:21Z", "author": {"login": "lucianoRM"}, "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/metadata/MetadataKeyDeclarationResolver.java", "diffHunk": "@@ -150,7 +153,12 @@ public MetadataKeyResult resolveKeyResult() {\n             .orElseThrow(() -> new MuleRuntimeException(createStaticMessage(\"Could not find parameter with name: %s in parameter group: %s\",\n                                                                             parameterName, parameterGroupName)));\n         if (parameterModel.getModelProperty(MetadataKeyPartModelProperty.class).isPresent()) {\n-          parametersMap.put(parameterName, extractSimpleValue(parameterElement.getValue()));\n+          String value = extractSimpleValue(parameterElement.getValue());\n+          if (!parameterModel.getExpressionSupport().equals(NOT_SUPPORTED) && isExpression(value)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d808a82d7f501b375b51ecf2720f862a78b24612"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4683, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}