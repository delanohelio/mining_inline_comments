{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMzgwMDYw", "number": 9545, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODowOTowNFrOEtmiaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODoxMjoxNlrOEtmm4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjUyNzc2OnYy", "diffSide": "RIGHT", "path": "transports/jms/src/test/java/org/mule/transport/jms/vendors/ActiveMQXaJmsConnectorTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODowOTowNFrOHhfFRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODowOTowNFrOHhfFRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3NDMxMA==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9545#discussion_r504874310", "createdAt": "2020-10-14T18:09:04Z", "author": {"login": "fsgonz"}, "path": "transports/jms/src/test/java/org/mule/transport/jms/vendors/ActiveMQXaJmsConnectorTestCase.java", "diffHunk": "@@ -37,9 +38,12 @@ public void testReflectiveXaCleanup() throws Exception\n         assertNotNull(c);\n         \n         ConnectionFactory cf = c.getConnectionFactory();\n-        assertTrue(cf instanceof DefaultXAConnectionFactoryWrapper);\n+        assertTrue(cf instanceof ActiveMQXAConnectionFactory);\n+\n+        DefaultXAConnectionFactoryWrapper wrapper = new DefaultXAConnectionFactoryWrapper(cf);\n+        // can be a proxy\n+        Connection connection = wrapper.createConnection();\n \n-        Connection connection = cf.createConnection();\n         assertNotNull(connection);\n         assertTrue(Proxy.isProxyClass(connection.getClass()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "019769d5ad9c4f920c3473743f7cc06a292e9b5d"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjUzOTIxOnYy", "diffSide": "RIGHT", "path": "transports/jms/src/main/java/org/mule/transport/jms/DefaultConnectionFactoryDecorator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODoxMjoxNlrOHhfMeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODoxMjoxNlrOHhfMeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3NjE1NA==", "bodyText": "I think you can use java.lang.reflect.Proxy.isProxyClass.", "url": "https://github.com/mulesoft/mule/pull/9545#discussion_r504876154", "createdAt": "2020-10-14T18:12:16Z", "author": {"login": "fsgonz"}, "path": "transports/jms/src/main/java/org/mule/transport/jms/DefaultConnectionFactoryDecorator.java", "diffHunk": "@@ -32,7 +32,8 @@ public boolean appliesTo(ConnectionFactory connectionFactory, MuleContext muleCo\n \n     private boolean isConnectionFactoryXaAndThereIsATxManager(ConnectionFactory connectionFactory, MuleContext muleContext)\n     {\n-        return (isXaConnectionFactory(connectionFactory) && muleContext.getTransactionManager() != null);\n+        return (isXaConnectionFactory(connectionFactory) && muleContext.getTransactionManager() != null &&\n+                !muleContext.getTransactionManager().getClass().getName().startsWith(\"com.sun.proxy.$Proxy\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "019769d5ad9c4f920c3473743f7cc06a292e9b5d"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4688, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}