{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxODM5ODM4", "number": 8906, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo0NTozNlrOED6lmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo0Njo1N1rOED6oTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTQxMDgzOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/util/MuleExtensionUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo0NTozNlrOGhNsMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo0NTozNlrOGhNsMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4MDQ5Nw==", "bodyText": "use StringUtils", "url": "https://github.com/mulesoft/mule/pull/8906#discussion_r437480497", "createdAt": "2020-06-09T14:45:36Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/util/MuleExtensionUtils.java", "diffHunk": "@@ -473,12 +475,33 @@ public static String getImplicitConfigurationProviderName(ExtensionModel extensi\n   public static boolean isExpression(Object value) {\n     if (value instanceof String) {\n       String trim = ((String) value).trim();\n-      return trim.startsWith(\"#[\") && trim.endsWith(\"]\");\n+      return trim.startsWith(DEFAULT_EXPRESSION_PREFIX) && trim.endsWith(DEFAULT_EXPRESSION_POSTFIX);\n     } else {\n       return false;\n     }\n   }\n \n+  /**\n+   * Parse the given value and remove expression markers if it is considered as an expression.\n+   *\n+   * @param value Value to parse\n+   * @return a String containing the expression without markers or null if the value is not an expression.\n+   */\n+  public static Optional<String> extractExpression(Object value) {\n+    Optional<String> result = Optional.empty();\n+    if (isExpression(value)) {\n+      String expression = (String) value;\n+      if (expression != null && !expression.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d0967b3204b8a376eab7dfbba6202d5a24b0f8"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTQxMTM4OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/util/MuleExtensionUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo0NTo0MVrOGhNsfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo0NTo0MVrOGhNsfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4MDU3NA==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/8906#discussion_r437480574", "createdAt": "2020-06-09T14:45:41Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/util/MuleExtensionUtils.java", "diffHunk": "@@ -473,12 +475,33 @@ public static String getImplicitConfigurationProviderName(ExtensionModel extensi\n   public static boolean isExpression(Object value) {\n     if (value instanceof String) {\n       String trim = ((String) value).trim();\n-      return trim.startsWith(\"#[\") && trim.endsWith(\"]\");\n+      return trim.startsWith(DEFAULT_EXPRESSION_PREFIX) && trim.endsWith(DEFAULT_EXPRESSION_POSTFIX);\n     } else {\n       return false;\n     }\n   }\n \n+  /**\n+   * Parse the given value and remove expression markers if it is considered as an expression.\n+   *\n+   * @param value Value to parse\n+   * @return a String containing the expression without markers or null if the value is not an expression.\n+   */\n+  public static Optional<String> extractExpression(Object value) {\n+    Optional<String> result = Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d0967b3204b8a376eab7dfbba6202d5a24b0f8"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTQxMjU3OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/util/MuleExtensionUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo0NTo1MVrOGhNtMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo0NTo1MVrOGhNtMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4MDc1Mw==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/8906#discussion_r437480753", "createdAt": "2020-06-09T14:45:51Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/util/MuleExtensionUtils.java", "diffHunk": "@@ -473,12 +475,33 @@ public static String getImplicitConfigurationProviderName(ExtensionModel extensi\n   public static boolean isExpression(Object value) {\n     if (value instanceof String) {\n       String trim = ((String) value).trim();\n-      return trim.startsWith(\"#[\") && trim.endsWith(\"]\");\n+      return trim.startsWith(DEFAULT_EXPRESSION_PREFIX) && trim.endsWith(DEFAULT_EXPRESSION_POSTFIX);\n     } else {\n       return false;\n     }\n   }\n \n+  /**\n+   * Parse the given value and remove expression markers if it is considered as an expression.\n+   *\n+   * @param value Value to parse\n+   * @return a String containing the expression without markers or null if the value is not an expression.\n+   */\n+  public static Optional<String> extractExpression(Object value) {\n+    Optional<String> result = Optional.empty();\n+    if (isExpression(value)) {\n+      String expression = (String) value;\n+      if (expression != null && !expression.isEmpty()) {\n+        String trimmedText = expression.trim();\n+        result =\n+            Optional.of(trimmedText.substring(DEFAULT_EXPRESSION_PREFIX.length(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d0967b3204b8a376eab7dfbba6202d5a24b0f8"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTQxNzQ3OnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/DefaultComponentParameterAst.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo0Njo1NFrOGhNwVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo0Njo1NFrOGhNwVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4MTU1OA==", "bodyText": "check for optional presense before setting: extractExpression(rawValue).ifPresent(expression::set)", "url": "https://github.com/mulesoft/mule/pull/8906#discussion_r437481558", "createdAt": "2020-06-09T14:46:54Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/DefaultComponentParameterAst.java", "diffHunk": "@@ -138,7 +139,7 @@ protected void defaultVisit(MetadataType metadataType) {\n             } else if (!NOT_SUPPORTED.equals(getModel().getExpressionSupport())) {\n               if (isExpression(rawValue)) {\n                 // For complex types that may be the result of an expression, just return the expression\n-                expression.set(rawValue);\n+                expression.set(extractExpression(rawValue).get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d0967b3204b8a376eab7dfbba6202d5a24b0f8"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTQxNzc0OnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/DefaultComponentParameterAst.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo0Njo1N1rOGhNwfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo0Njo1N1rOGhNwfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4MTU5OQ==", "bodyText": "check for optional presense before setting: extractExpression(rawValue).ifPresent(expression::set)", "url": "https://github.com/mulesoft/mule/pull/8906#discussion_r437481599", "createdAt": "2020-06-09T14:46:57Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/DefaultComponentParameterAst.java", "diffHunk": "@@ -64,7 +65,7 @@ private DefaultComponentParameterAst(String rawValue, Object complexValue, Suppl\n       } else if (isEmpty(rawValue)) {\n         final Object defaultValue = getModel().getDefaultValue();\n         if (isExpression(defaultValue)) {\n-          return left((String) defaultValue);\n+          return left(extractExpression(defaultValue).get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d0967b3204b8a376eab7dfbba6202d5a24b0f8"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4924, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}