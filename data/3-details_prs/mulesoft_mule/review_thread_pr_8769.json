{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MTg2NjI0", "number": 8769, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDoxNzo0NVrODuZZ2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDoxOTowOVrODuZcHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTc3MzA2OnYy", "diffSide": "RIGHT", "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/builder/OAuthPlatformManagedDancerBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDoxNzo0NVrOGAXetw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNzowNzowOFrOGAelCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAzNzg3OQ==", "bodyText": "this method should be introduced in 4.4.0 only. 4.3.x should deal with sys prop only", "url": "https://github.com/mulesoft/mule/pull/8769#discussion_r403037879", "createdAt": "2020-04-03T14:17:45Z", "author": {"login": "marianogonzalez"}, "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/builder/OAuthPlatformManagedDancerBuilder.java", "diffHunk": "@@ -47,6 +47,17 @@\n    */\n   OAuthPlatformManagedDancerBuilder platformUrl(String platformUrl);\n \n+  /**\n+   * Sets the platform API version to a specific one.\n+   *\n+   * @param apiVersion the platform API version\n+   * @return {@code this} builder\n+   * @since 4.3.1 4.4.0\n+   */\n+  default OAuthPlatformManagedDancerBuilder apiVersion(String apiVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8175bbc2a35e996afa4d38e9fb4233c899259d13"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE1NDE4NA==", "bodyText": "Done", "url": "https://github.com/mulesoft/mule/pull/8769#discussion_r403154184", "createdAt": "2020-04-03T17:07:08Z", "author": {"login": "ndinu"}, "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/builder/OAuthPlatformManagedDancerBuilder.java", "diffHunk": "@@ -47,6 +47,17 @@\n    */\n   OAuthPlatformManagedDancerBuilder platformUrl(String platformUrl);\n \n+  /**\n+   * Sets the platform API version to a specific one.\n+   *\n+   * @param apiVersion the platform API version\n+   * @return {@code this} builder\n+   * @since 4.3.1 4.4.0\n+   */\n+  default OAuthPlatformManagedDancerBuilder apiVersion(String apiVersion) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAzNzg3OQ=="}, "originalCommit": {"oid": "8175bbc2a35e996afa4d38e9fb4233c899259d13"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTc3ODg0OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/connectivity/oauth/ocs/PlatformManagedOAuthConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDoxOTowOVrOGAXiVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNzowNjo1MVrOGAekPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAzODgwNQ==", "bodyText": "default value should be v1", "url": "https://github.com/mulesoft/mule/pull/8769#discussion_r403038805", "createdAt": "2020-04-03T14:19:09Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/connectivity/oauth/ocs/PlatformManagedOAuthConfig.java", "diffHunk": "@@ -62,16 +64,26 @@ public static PlatformManagedOAuthConfig from(String ownerConfigName,\n                                           getProperty(configurationProperties, OCS_CLIENT_ID),\n                                           getProperty(configurationProperties, OCS_CLIENT_SECRET),\n                                           getProperty(configurationProperties, OCS_ORG_ID),\n+                                          getProperty(configurationProperties, OCS_API_VERSION, false),\n                                           UTF_8,\n                                           grantType,\n                                           extensionModel,\n                                           delegateConnectionProviderModel,\n                                           delegateGrantType);\n   }\n \n+  private static String getProperty(ConfigurationProperties configurationProperties, String key, boolean isRequired) {\n+    if (isRequired) {\n+      return configurationProperties.resolveStringProperty(key)\n+          .orElseThrow(() -> new IllegalArgumentException(format(\"OCS property '%s' has not been set\", key)));\n+    } else {\n+      return configurationProperties.resolveStringProperty(key)\n+          .orElse(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8175bbc2a35e996afa4d38e9fb4233c899259d13"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE1Mzk4Mw==", "bodyText": "discussed privately", "url": "https://github.com/mulesoft/mule/pull/8769#discussion_r403153983", "createdAt": "2020-04-03T17:06:51Z", "author": {"login": "ndinu"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/connectivity/oauth/ocs/PlatformManagedOAuthConfig.java", "diffHunk": "@@ -62,16 +64,26 @@ public static PlatformManagedOAuthConfig from(String ownerConfigName,\n                                           getProperty(configurationProperties, OCS_CLIENT_ID),\n                                           getProperty(configurationProperties, OCS_CLIENT_SECRET),\n                                           getProperty(configurationProperties, OCS_ORG_ID),\n+                                          getProperty(configurationProperties, OCS_API_VERSION, false),\n                                           UTF_8,\n                                           grantType,\n                                           extensionModel,\n                                           delegateConnectionProviderModel,\n                                           delegateGrantType);\n   }\n \n+  private static String getProperty(ConfigurationProperties configurationProperties, String key, boolean isRequired) {\n+    if (isRequired) {\n+      return configurationProperties.resolveStringProperty(key)\n+          .orElseThrow(() -> new IllegalArgumentException(format(\"OCS property '%s' has not been set\", key)));\n+    } else {\n+      return configurationProperties.resolveStringProperty(key)\n+          .orElse(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAzODgwNQ=="}, "originalCommit": {"oid": "8175bbc2a35e996afa4d38e9fb4233c899259d13"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4964, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}