{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NTUwMDQx", "number": 9182, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOTozMzowM1rOEW7tIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOTozMzowM1rOEW7tIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDgyMzM3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/api/management/stats/AllStatistics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOTozMzowM1rOG-cqhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOTozNjo0NVrOG-cxmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEzNDUzNQ==", "bodyText": "It should be better to receive a Component instead of a String and do the transformation (component.getLocation().getLocation()) inside this method to be consistent with computePayloadStatisticsIfAbsent", "url": "https://github.com/mulesoft/mule/pull/9182#discussion_r468134535", "createdAt": "2020-08-10T19:33:03Z", "author": {"login": "szaffarano"}, "path": "core/src/main/java/org/mule/runtime/core/api/management/stats/AllStatistics.java", "diffHunk": "@@ -86,4 +94,36 @@ public synchronized void remove(FlowConstructStatistics stat) {\n   public FlowConstructStatistics getApplicationStatistics() {\n     return appStats;\n   }\n+\n+  /**\n+   * @return the available payload statistics for all components.\n+   * @since 4.4, 4.3.1\n+   */\n+  public Collection<PayloadStatistics> getPayloadStatistics() {\n+    return payloadStatistics.values();\n+  }\n+\n+  /**\n+   * @param component the component to get the statistics for.\n+   * @return the statistics for the provided {@code component}.\n+   * @since 4.4, 4.3.1\n+   */\n+  public PayloadStatistics computePayloadStatisticsIfAbsent(Component component) {\n+    return payloadStatistics.computeIfAbsent(component.getLocation().getLocation(),\n+                                             loc -> {\n+                                               final PayloadStatistics statistics =\n+                                                   new PayloadStatistics(loc, component.getIdentifier().toString());\n+                                               statistics.setEnabled(isEnabled());\n+                                               return statistics;\n+                                             });\n+  }\n+\n+  /**\n+   * @param componentLocation the location of the component to get the statistics for.\n+   * @return the statistics for the component with the provided {@code componentLocation}.\n+   * @since 4.4, 4.3.1\n+   */\n+  public PayloadStatistics getPayloadStatistics(String componentLocation) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9766d91de66ae8c628cbc811091b362752111dd4"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEzNjM0NA==", "bodyText": "This is on purpose, i don't need this method to be consistent because this method is to be used within ARM, and i don't want to force them to obtain a proper Component, when the may already know the location they want.", "url": "https://github.com/mulesoft/mule/pull/9182#discussion_r468136344", "createdAt": "2020-08-10T19:36:45Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/api/management/stats/AllStatistics.java", "diffHunk": "@@ -86,4 +94,36 @@ public synchronized void remove(FlowConstructStatistics stat) {\n   public FlowConstructStatistics getApplicationStatistics() {\n     return appStats;\n   }\n+\n+  /**\n+   * @return the available payload statistics for all components.\n+   * @since 4.4, 4.3.1\n+   */\n+  public Collection<PayloadStatistics> getPayloadStatistics() {\n+    return payloadStatistics.values();\n+  }\n+\n+  /**\n+   * @param component the component to get the statistics for.\n+   * @return the statistics for the provided {@code component}.\n+   * @since 4.4, 4.3.1\n+   */\n+  public PayloadStatistics computePayloadStatisticsIfAbsent(Component component) {\n+    return payloadStatistics.computeIfAbsent(component.getLocation().getLocation(),\n+                                             loc -> {\n+                                               final PayloadStatistics statistics =\n+                                                   new PayloadStatistics(loc, component.getIdentifier().toString());\n+                                               statistics.setEnabled(isEnabled());\n+                                               return statistics;\n+                                             });\n+  }\n+\n+  /**\n+   * @param componentLocation the location of the component to get the statistics for.\n+   * @return the statistics for the component with the provided {@code componentLocation}.\n+   * @since 4.4, 4.3.1\n+   */\n+  public PayloadStatistics getPayloadStatistics(String componentLocation) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEzNDUzNQ=="}, "originalCommit": {"oid": "9766d91de66ae8c628cbc811091b362752111dd4"}, "originalPosition": 85}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4799, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}