{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NTU0OTQw", "number": 8544, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNDoxOToyNFrODV_AJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjowNTo0MVrODWA1xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0Mzc4OTE4OnYy", "diffSide": "RIGHT", "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/OAuthService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNDoxOToyNFrOFaeyug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNDoxOToyNFrOFaeyug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMxMTgwMg==", "bodyText": "an -> a", "url": "https://github.com/mulesoft/mule/pull/8544#discussion_r363311802", "createdAt": "2020-01-06T14:19:24Z", "author": {"login": "elrodro83"}, "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/OAuthService.java", "diffHunk": "@@ -46,16 +47,35 @@\n   /**\n    * Creates a builder for an {@link AuthorizationCodeOAuthDancer} for authorization code grant type. The dancer will use the\n    * given {@code lockProvider} and {@code tokensStore} to manage its internal state.\n-   * \n-   * @param lockProvider a factory for {@link Lock}s, uniquely identified by the {@code name} passed to\n-   *        {@link LockFactory#createLock(String)}.\n-   * @param tokensStore the repository for the tokens for the returned {@link AuthorizationCodeOAuthDancer dancer}.\n+   *\n+   * @param lockProvider        a factory for {@link Lock}s, uniquely identified by the {@code name} passed to\n+   *                            {@link LockFactory#createLock(String)}.\n+   * @param tokensStore         the repository for the tokens for the returned {@link AuthorizationCodeOAuthDancer dancer}.\n    * @param expressionEvaluator the object used to evaluate expressions.\n-   * \n    * @return a builder for an authorization-code grant type dancer.\n    */\n   <T> OAuthAuthorizationCodeDancerBuilder authorizationCodeGrantTypeDancerBuilder(LockFactory lockProvider,\n                                                                                   Map<String, T> tokensStore,\n                                                                                   MuleExpressionLanguage expressionEvaluator);\n \n+  /**\n+   * Creates a builder for an {@link PlatformManagedOAuthDancer} that obtains access tokens that are provisioned and managed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d29f351445a58e6585a3ca3c7770d18bef9033b6"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0Mzc5MzI0OnYy", "diffSide": "RIGHT", "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/PlatformManagedOAuthDancer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNDoyMTo0M1rOFae1Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNDoyNTo0NFrOFae7wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMxMjQzNQ==", "bodyText": "won't this implementation be in the service artifact?", "url": "https://github.com/mulesoft/mule/pull/8544#discussion_r363312435", "createdAt": "2020-01-06T14:21:43Z", "author": {"login": "elrodro83"}, "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/PlatformManagedOAuthDancer.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.oauth.api;\n+\n+import org.mule.api.annotation.Experimental;\n+import org.mule.api.annotation.NoImplement;\n+import org.mule.runtime.oauth.api.builder.OAuthPlatformManagedDancerBuilder;\n+import org.mule.runtime.oauth.api.listener.PlatformManagedOAuthStateListener;\n+import org.mule.runtime.oauth.api.state.ResourceOwnerOAuthContext;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * Allows to manipulate access and refresh tokens that are obtained and managed by the Anypoint Platform. Each instance is\n+ * preconfigured by an {@link OAuthPlatformManagedDancerBuilder} to point to a specific connection id.\n+ * <p>\n+ * Since the authorizations are performed by the platform, this dancer remains agnostic of the grant type that was used to\n+ * obtain them.\n+ * <p>\n+ * Platform Managed OAuth is an experimental feature. It will only be enabled on selected environments and scenarios.\n+ * Backwards compatibility is not guaranteed.\n+ *\n+ * @since 4.3.0\n+ */\n+@NoImplement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d29f351445a58e6585a3ca3c7770d18bef9033b6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMxNDExMg==", "bodyText": "Yes, on the EE one.", "url": "https://github.com/mulesoft/mule/pull/8544#discussion_r363314112", "createdAt": "2020-01-06T14:25:44Z", "author": {"login": "marianogonzalez"}, "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/PlatformManagedOAuthDancer.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.oauth.api;\n+\n+import org.mule.api.annotation.Experimental;\n+import org.mule.api.annotation.NoImplement;\n+import org.mule.runtime.oauth.api.builder.OAuthPlatformManagedDancerBuilder;\n+import org.mule.runtime.oauth.api.listener.PlatformManagedOAuthStateListener;\n+import org.mule.runtime.oauth.api.state.ResourceOwnerOAuthContext;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * Allows to manipulate access and refresh tokens that are obtained and managed by the Anypoint Platform. Each instance is\n+ * preconfigured by an {@link OAuthPlatformManagedDancerBuilder} to point to a specific connection id.\n+ * <p>\n+ * Since the authorizations are performed by the platform, this dancer remains agnostic of the grant type that was used to\n+ * obtain them.\n+ * <p>\n+ * Platform Managed OAuth is an experimental feature. It will only be enabled on selected environments and scenarios.\n+ * Backwards compatibility is not guaranteed.\n+ *\n+ * @since 4.3.0\n+ */\n+@NoImplement", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMxMjQzNQ=="}, "originalCommit": {"oid": "d29f351445a58e6585a3ca3c7770d18bef9033b6"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0Mzc5NDUzOnYy", "diffSide": "RIGHT", "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/builder/OAuthPlatformManagedDancerBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNDoyMjoxNFrOFae2FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNDoyNTo1MVrOFae8AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMxMjY2MQ==", "bodyText": "won't this implementation be in the service artifact?", "url": "https://github.com/mulesoft/mule/pull/8544#discussion_r363312661", "createdAt": "2020-01-06T14:22:14Z", "author": {"login": "elrodro83"}, "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/builder/OAuthPlatformManagedDancerBuilder.java", "diffHunk": "@@ -0,0 +1,155 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.oauth.api.builder;\n+\n+import org.mule.api.annotation.Experimental;\n+import org.mule.api.annotation.NoImplement;\n+import org.mule.runtime.api.tls.TlsContextFactory;\n+import org.mule.runtime.http.api.client.HttpClient;\n+import org.mule.runtime.http.api.client.proxy.ProxyConfig;\n+import org.mule.runtime.oauth.api.PlatformManagedOAuthDancer;\n+import org.mule.runtime.oauth.api.listener.PlatformManagedOAuthStateListener;\n+\n+import java.nio.charset.Charset;\n+import java.util.function.Function;\n+\n+/**\n+ * Builder that allows to configure the attributes for the {@link PlatformManagedOAuthDancer}\n+ * <p>\n+ * Because the actual OAuth authorization is not performed by Mule but the Anypoint Platform, some of the methods in the base\n+ * {@link OAuthDancerBuilder} do not apply and will throw an {@link UnsupportedOperationException}. The the javadocs of all\n+ * methods defined and overridden in this interface to know which ones are valid.\n+ * <p>\n+ * Platform Managed OAuth is an experimental feature. It will only be enabled on selected environments and scenarios.\n+ * Backwards compatibility is not guaranteed.\n+ *\n+ * @since 4.3.0\n+ */\n+@NoImplement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d29f351445a58e6585a3ca3c7770d18bef9033b6"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMxNDE3Ng==", "bodyText": "on the EE one", "url": "https://github.com/mulesoft/mule/pull/8544#discussion_r363314176", "createdAt": "2020-01-06T14:25:51Z", "author": {"login": "marianogonzalez"}, "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/builder/OAuthPlatformManagedDancerBuilder.java", "diffHunk": "@@ -0,0 +1,155 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.oauth.api.builder;\n+\n+import org.mule.api.annotation.Experimental;\n+import org.mule.api.annotation.NoImplement;\n+import org.mule.runtime.api.tls.TlsContextFactory;\n+import org.mule.runtime.http.api.client.HttpClient;\n+import org.mule.runtime.http.api.client.proxy.ProxyConfig;\n+import org.mule.runtime.oauth.api.PlatformManagedOAuthDancer;\n+import org.mule.runtime.oauth.api.listener.PlatformManagedOAuthStateListener;\n+\n+import java.nio.charset.Charset;\n+import java.util.function.Function;\n+\n+/**\n+ * Builder that allows to configure the attributes for the {@link PlatformManagedOAuthDancer}\n+ * <p>\n+ * Because the actual OAuth authorization is not performed by Mule but the Anypoint Platform, some of the methods in the base\n+ * {@link OAuthDancerBuilder} do not apply and will throw an {@link UnsupportedOperationException}. The the javadocs of all\n+ * methods defined and overridden in this interface to know which ones are valid.\n+ * <p>\n+ * Platform Managed OAuth is an experimental feature. It will only be enabled on selected environments and scenarios.\n+ * Backwards compatibility is not guaranteed.\n+ *\n+ * @since 4.3.0\n+ */\n+@NoImplement", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMxMjY2MQ=="}, "originalCommit": {"oid": "d29f351445a58e6585a3ca3c7770d18bef9033b6"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0Mzc5NjI0OnYy", "diffSide": "RIGHT", "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/listener/PlatformManagedOAuthStateListener.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNDoyMjo0OFrOFae3HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNDoyNjowM1rOFae8UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMxMjkyNA==", "bodyText": "won't this implementation be in the service artifact?", "url": "https://github.com/mulesoft/mule/pull/8544#discussion_r363312924", "createdAt": "2020-01-06T14:22:48Z", "author": {"login": "elrodro83"}, "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/listener/PlatformManagedOAuthStateListener.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.oauth.api.listener;\n+\n+import org.mule.api.annotation.Experimental;\n+import org.mule.api.annotation.NoImplement;\n+import org.mule.runtime.oauth.api.state.ResourceOwnerOAuthContext;\n+\n+/**\n+ * Allows to get notified about certain events related to Platform Managed OAuth tokens\n+ * <p>\n+ * Platform Managed OAuth is an experimental feature. It will only be enabled on selected environments and scenarios. Backwards compatibility is\n+ * not guaranteed.\n+ *\n+ * @since 4.3.0\n+ */\n+@Experimental\n+@NoImplement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d29f351445a58e6585a3ca3c7770d18bef9033b6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMxNDI1Ng==", "bodyText": "yes, on the EE one", "url": "https://github.com/mulesoft/mule/pull/8544#discussion_r363314256", "createdAt": "2020-01-06T14:26:03Z", "author": {"login": "marianogonzalez"}, "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/listener/PlatformManagedOAuthStateListener.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.oauth.api.listener;\n+\n+import org.mule.api.annotation.Experimental;\n+import org.mule.api.annotation.NoImplement;\n+import org.mule.runtime.oauth.api.state.ResourceOwnerOAuthContext;\n+\n+/**\n+ * Allows to get notified about certain events related to Platform Managed OAuth tokens\n+ * <p>\n+ * Platform Managed OAuth is an experimental feature. It will only be enabled on selected environments and scenarios. Backwards compatibility is\n+ * not guaranteed.\n+ *\n+ * @since 4.3.0\n+ */\n+@Experimental\n+@NoImplement", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMxMjkyNA=="}, "originalCommit": {"oid": "d29f351445a58e6585a3ca3c7770d18bef9033b6"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NDA4OTY5OnYy", "diffSide": "RIGHT", "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/builder/OAuthPlatformManagedDancerBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjowNToyN1rOFahsaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjowNToyN1rOFahsaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM1OTMzNw==", "bodyText": "4.2.1 or 4.3.0?", "url": "https://github.com/mulesoft/mule/pull/8544#discussion_r363359337", "createdAt": "2020-01-06T16:05:27Z", "author": {"login": "eze210"}, "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/builder/OAuthPlatformManagedDancerBuilder.java", "diffHunk": "@@ -0,0 +1,155 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.oauth.api.builder;\n+\n+import org.mule.api.annotation.Experimental;\n+import org.mule.api.annotation.NoImplement;\n+import org.mule.runtime.api.tls.TlsContextFactory;\n+import org.mule.runtime.http.api.client.HttpClient;\n+import org.mule.runtime.http.api.client.proxy.ProxyConfig;\n+import org.mule.runtime.oauth.api.PlatformManagedOAuthDancer;\n+import org.mule.runtime.oauth.api.listener.PlatformManagedOAuthStateListener;\n+\n+import java.nio.charset.Charset;\n+import java.util.function.Function;\n+\n+/**\n+ * Builder that allows to configure the attributes for the {@link PlatformManagedOAuthDancer}\n+ * <p>\n+ * Because the actual OAuth authorization is not performed by Mule but the Anypoint Platform, some of the methods in the base\n+ * {@link OAuthDancerBuilder} do not apply and will throw an {@link UnsupportedOperationException}. The the javadocs of all\n+ * methods defined and overridden in this interface to know which ones are valid.\n+ * <p>\n+ * Platform Managed OAuth is an experimental feature. It will only be enabled on selected environments and scenarios.\n+ * Backwards compatibility is not guaranteed.\n+ *\n+ * @since 4.3.0\n+ */\n+@NoImplement\n+@Experimental\n+public interface OAuthPlatformManagedDancerBuilder extends OAuthDancerBuilder<PlatformManagedOAuthDancer> {\n+\n+  /**\n+   * Sets the ID of the connection that is defined in the Anypoint Platform\n+   *\n+   * @param connectionId the id of the connection which token we want to obtain\n+   * @return {@code this} builder\n+   */\n+  OAuthPlatformManagedDancerBuilder connectionId(String connectionId);\n+\n+  /**\n+   * Adds the {@code listener}. Listeners will be invoked in the same order as they were added\n+   *\n+   * @param listener the {@link PlatformManagedOAuthStateListener} to be added\n+   * @throws IllegalArgumentException if the {@code listener} is {@code null}\n+   * @since 4.2.1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b85dba968d5add158f21dc9a054c3ed81c1b3a"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NDA5MDI4OnYy", "diffSide": "RIGHT", "path": "modules/http-api/src/main/java/org/mule/runtime/http/api/client/ManagedLifecycleHttpClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjowNTo0MVrOFahsyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjowNTo0MVrOFahsyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM1OTQzMw==", "bodyText": "hte -> the", "url": "https://github.com/mulesoft/mule/pull/8544#discussion_r363359433", "createdAt": "2020-01-06T16:05:41Z", "author": {"login": "eze210"}, "path": "modules/http-api/src/main/java/org/mule/runtime/http/api/client/ManagedLifecycleHttpClient.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.http.api.client;\n+\n+import org.mule.runtime.http.api.domain.message.request.HttpRequest;\n+import org.mule.runtime.http.api.domain.message.response.HttpResponse;\n+\n+import java.io.IOException;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.TimeoutException;\n+\n+/**\n+ * Decorates a {@link HttpClient} so that invocations to {@link HttpClient#start()} and {@link HttpClient#stop()} have no effect.\n+ * <p>\n+ * This is useful (and recommended) for cases in which a given component owns an {@link HttpClient} but needs to expose said\n+ * client to other consumers. Since hte lifecycle of the client should only be handled by the owner, it is good practice to use", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b85dba968d5add158f21dc9a054c3ed81c1b3a"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 112, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}