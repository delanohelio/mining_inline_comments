{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NDM1NjQ3", "number": 8710, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxOTozNDoyMVrODljlrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxOTozNDoyMVrODljlrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNzA2OTg5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/internal/exception/ExceptionRouter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxOTozNDoyMVrOFyhKsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxOTo0ODo0NlrOFyhqAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUxNjUyOQ==", "bodyText": "Is this method being overridden because of clarity?", "url": "https://github.com/mulesoft/mule/pull/8710#discussion_r388516529", "createdAt": "2020-03-05T19:34:21Z", "author": {"login": "fsgonz"}, "path": "core/src/main/java/org/mule/runtime/core/internal/exception/ExceptionRouter.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.exception;\n+\n+import org.mule.runtime.api.lifecycle.Disposable;\n+import org.mule.runtime.core.api.exception.FlowExceptionHandler;\n+\n+import java.util.function.Consumer;\n+\n+/**\n+ * Refer to {@link FlowExceptionHandler#router(java.util.function.Function, Consumer, Consumer)}.\n+ *\n+ * @since 4.3\n+ */\n+public interface ExceptionRouter extends Consumer<Exception>, Disposable {\n+\n+  @Override\n+  void accept(Exception t);\n+\n+  @Override\n+  void dispose();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "532dfb7bb593c17cac7952fa275060a16ccace31"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUyNDU0NA==", "bodyText": "yeah, i will remove both methods, since they are inherited", "url": "https://github.com/mulesoft/mule/pull/8710#discussion_r388524544", "createdAt": "2020-03-05T19:48:46Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/exception/ExceptionRouter.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.exception;\n+\n+import org.mule.runtime.api.lifecycle.Disposable;\n+import org.mule.runtime.core.api.exception.FlowExceptionHandler;\n+\n+import java.util.function.Consumer;\n+\n+/**\n+ * Refer to {@link FlowExceptionHandler#router(java.util.function.Function, Consumer, Consumer)}.\n+ *\n+ * @since 4.3\n+ */\n+public interface ExceptionRouter extends Consumer<Exception>, Disposable {\n+\n+  @Override\n+  void accept(Exception t);\n+\n+  @Override\n+  void dispose();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUxNjUyOQ=="}, "originalCommit": {"oid": "532dfb7bb593c17cac7952fa275060a16ccace31"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 59, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}