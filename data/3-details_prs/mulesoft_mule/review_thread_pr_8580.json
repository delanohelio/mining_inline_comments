{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyODAxNjkx", "number": 8580, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxOTozMzo0MlrODX9thw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzoxOTowOVrODYQDmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NDU0OTE5OnYy", "diffSide": "RIGHT", "path": "modules/extensions-soap-support/src/main/java/org/mule/runtime/module/extension/soap/internal/loader/SoapInvokeOperationDeclarer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxOTozMzo0MlrOFdjWcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxOTozMzo0MlrOFdjWcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzMjIwOQ==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/8580#discussion_r366532209", "createdAt": "2020-01-14T19:33:42Z", "author": {"login": "lucianoRM"}, "path": "modules/extensions-soap-support/src/main/java/org/mule/runtime/module/extension/soap/internal/loader/SoapInvokeOperationDeclarer.java", "diffHunk": "@@ -108,17 +113,39 @@ void declare(ConfigurationDeclarer configDeclarer, ClassTypeLoader loader, Set<E\n   }\n \n   private void declareMetadata(OperationDeclarer operation, ClassTypeLoader loader) {\n-    ImmutableMap.Builder<String, Supplier<? extends InputTypeResolver>> inputResolver = ImmutableMap.builder();\n-    inputResolver.put(BODY_PARAM, InvokeRequestTypeResolver::new);\n-    inputResolver.put(HEADERS_PARAM, InvokeInputHeadersTypeResolver::new);\n-    inputResolver.put(ATTACHMENTS_PARAM, InvokeInputAttachmentsTypeResolver::new);\n-    DefaultMetadataResolverFactory factory = new DefaultMetadataResolverFactory(InvokeKeysResolver::new,\n-                                                                                inputResolver.build(),\n-                                                                                InvokeOutputTypeResolver::new,\n+    Map<String, Supplier<? extends InputTypeResolver>> inputResolver =\n+        ImmutableMap.<String, Supplier<? extends InputTypeResolver>>builder()\n+            .put(BODY_PARAM, InvokeRequestTypeResolver::new)\n+            .put(HEADERS_PARAM, InvokeInputHeadersTypeResolver::new)\n+            .put(ATTACHMENTS_PARAM, InvokeInputAttachmentsTypeResolver::new)\n+            .build();\n+    Supplier<TypeKeysResolver> keysResolverSupplier = InvokeKeysResolver::new;\n+    Supplier<OutputTypeResolver> outputResolverSupplier = InvokeOutputTypeResolver::new;\n+    DefaultMetadataResolverFactory factory = new DefaultMetadataResolverFactory(keysResolverSupplier,\n+                                                                                inputResolver,\n+                                                                                outputResolverSupplier,\n                                                                                 NullMetadataResolver::new);\n     operation.withModelProperty(new MetadataResolverFactoryModelProperty(() -> factory));\n     operation.withModelProperty(new MetadataKeyIdModelProperty(loader.load(WebServiceTypeKey.class), KEYS_GROUP,\n                                                                SOAP_INVOKE_METADATA_CATEGORY));\n+\n+    Map<String, String> inputResolversByParam = inputResolver\n+        .entrySet().stream()\n+        .collect(Collectors.toImmutableMap(Map.Entry::getKey,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd0a5cda61e81492de32daeba7e9ab3d33be12c6"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzU1NDgxOnYy", "diffSide": "RIGHT", "path": "modules/extensions-soap-support/src/main/java/org/mule/runtime/module/extension/soap/internal/loader/SoapInvokeOperationDeclarer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzoxOTowOVrOFeAFwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzoxOTowOVrOFeAFwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwMzA3Mg==", "bodyText": "@alegmarra the value hardcoded here was added when the metadata cache was implemented but didn't match the getCategoryName() returned by the InvokeKeysResolver. Therefore I have also fixed that.", "url": "https://github.com/mulesoft/mule/pull/8580#discussion_r367003072", "createdAt": "2020-01-15T17:19:09Z", "author": {"login": "gsfernandes"}, "path": "modules/extensions-soap-support/src/main/java/org/mule/runtime/module/extension/soap/internal/loader/SoapInvokeOperationDeclarer.java", "diffHunk": "@@ -108,17 +113,36 @@ void declare(ConfigurationDeclarer configDeclarer, ClassTypeLoader loader, Set<E\n   }\n \n   private void declareMetadata(OperationDeclarer operation, ClassTypeLoader loader) {\n-    ImmutableMap.Builder<String, Supplier<? extends InputTypeResolver>> inputResolver = ImmutableMap.builder();\n-    inputResolver.put(BODY_PARAM, InvokeRequestTypeResolver::new);\n-    inputResolver.put(HEADERS_PARAM, InvokeInputHeadersTypeResolver::new);\n-    inputResolver.put(ATTACHMENTS_PARAM, InvokeInputAttachmentsTypeResolver::new);\n-    DefaultMetadataResolverFactory factory = new DefaultMetadataResolverFactory(InvokeKeysResolver::new,\n-                                                                                inputResolver.build(),\n-                                                                                InvokeOutputTypeResolver::new,\n+    Map<String, Supplier<? extends InputTypeResolver>> inputResolver =\n+        ImmutableMap.<String, Supplier<? extends InputTypeResolver>>builder()\n+            .put(BODY_PARAM, InvokeRequestTypeResolver::new)\n+            .put(HEADERS_PARAM, InvokeInputHeadersTypeResolver::new)\n+            .put(ATTACHMENTS_PARAM, InvokeInputAttachmentsTypeResolver::new)\n+            .build();\n+    TypeKeysResolver keysResolver = new InvokeKeysResolver();\n+    OutputTypeResolver outputResolver = new InvokeOutputTypeResolver();\n+    DefaultMetadataResolverFactory factory = new DefaultMetadataResolverFactory(() -> keysResolver,\n+                                                                                inputResolver,\n+                                                                                () -> outputResolver,\n                                                                                 NullMetadataResolver::new);\n     operation.withModelProperty(new MetadataResolverFactoryModelProperty(() -> factory));\n     operation.withModelProperty(new MetadataKeyIdModelProperty(loader.load(WebServiceTypeKey.class), KEYS_GROUP,\n-                                                               SOAP_INVOKE_METADATA_CATEGORY));\n+                                                               keysResolver.getCategoryName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df08cccfdafafc67df91828859a69248c95a438f"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 130, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}