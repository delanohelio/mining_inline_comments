{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNDMxMTk1", "number": 8573, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMjozMjoxMVrODX1Nag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMjozMjo0MFrODX1N5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MzE1NjI2OnYy", "diffSide": "RIGHT", "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/PlatformManagedConnectionDescriptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMjozMjoxMlrOFdV57g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMjozMjoxMlrOFdV57g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMxMTkxOA==", "bodyText": "tha the -> that the", "url": "https://github.com/mulesoft/mule/pull/8573#discussion_r366311918", "createdAt": "2020-01-14T12:32:12Z", "author": {"login": "elrodro83"}, "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/PlatformManagedConnectionDescriptor.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.oauth.api;\n+\n+import org.mule.api.annotation.Experimental;\n+import org.mule.api.annotation.NoExtend;\n+\n+import java.util.Map;\n+\n+/**\n+ * Describes the configuration of an OAuth connection managed by the Anypoint Platform.\n+ * <p>\n+ * Platform Managed OAuth is an experimental feature. It will only be enabled on selected environments and scenarios.\n+ * Backwards compatibility is not guaranteed.\n+ *\n+ * @since 4.3.0\n+ */\n+@NoExtend\n+@Experimental\n+public interface PlatformManagedConnectionDescriptor {\n+\n+  /**\n+   * @return the connection's unique id in the Anypoint Platform\n+   */\n+  String getId();\n+\n+  /**\n+   * @return the URI that identifies this connection in the Anypoint Platform\n+   */\n+  String getUri();\n+\n+  /**\n+   * @return The name that the user has given this connection in the Anypoint Platform\n+   */\n+  String getName();\n+\n+  /**\n+   * Returns parameters additional to the standard OAuth ones that the user has configured for this connection. These usually\n+   * correspond to custom parameters tha the service provider accepts or requires on its requests, but may contain other", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3584d0bde43d56583e3f6ef742f5b272c8be1520"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MzE1NzQ4OnYy", "diffSide": "RIGHT", "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/PlatformManagedConnectionDescriptor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMjozMjo0MFrOFdV6oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMjo0MDo1MVrOFdWIag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMxMjA5Ng==", "bodyText": "parameters is to generic. Can this be renamed to getCustomParameters or getUserParameters?", "url": "https://github.com/mulesoft/mule/pull/8573#discussion_r366312096", "createdAt": "2020-01-14T12:32:40Z", "author": {"login": "elrodro83"}, "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/PlatformManagedConnectionDescriptor.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.oauth.api;\n+\n+import org.mule.api.annotation.Experimental;\n+import org.mule.api.annotation.NoExtend;\n+\n+import java.util.Map;\n+\n+/**\n+ * Describes the configuration of an OAuth connection managed by the Anypoint Platform.\n+ * <p>\n+ * Platform Managed OAuth is an experimental feature. It will only be enabled on selected environments and scenarios.\n+ * Backwards compatibility is not guaranteed.\n+ *\n+ * @since 4.3.0\n+ */\n+@NoExtend\n+@Experimental\n+public interface PlatformManagedConnectionDescriptor {\n+\n+  /**\n+   * @return the connection's unique id in the Anypoint Platform\n+   */\n+  String getId();\n+\n+  /**\n+   * @return the URI that identifies this connection in the Anypoint Platform\n+   */\n+  String getUri();\n+\n+  /**\n+   * @return The name that the user has given this connection in the Anypoint Platform\n+   */\n+  String getName();\n+\n+  /**\n+   * Returns parameters additional to the standard OAuth ones that the user has configured for this connection. These usually\n+   * correspond to custom parameters tha the service provider accepts or requires on its requests, but may contain other\n+   * parameters as well.\n+   *\n+   * @return A {@link Map} which keys are the parameter names\n+   */\n+  Map<String, Object> getParameters();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3584d0bde43d56583e3f6ef742f5b272c8be1520"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMxNTYyNg==", "bodyText": "it's actually intentional. I didn't want it to be too specific as this might have unknown uses in the future. It's the same logic I asked you to follow yesterday on your PR's. If I change it as you ask, I not only risk having an API naming problem in the future, I also risk you asking me the same things I ask of you yesterday.", "url": "https://github.com/mulesoft/mule/pull/8573#discussion_r366315626", "createdAt": "2020-01-14T12:40:51Z", "author": {"login": "marianogonzalez"}, "path": "modules/oauth-api/src/main/java/org/mule/runtime/oauth/api/PlatformManagedConnectionDescriptor.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.oauth.api;\n+\n+import org.mule.api.annotation.Experimental;\n+import org.mule.api.annotation.NoExtend;\n+\n+import java.util.Map;\n+\n+/**\n+ * Describes the configuration of an OAuth connection managed by the Anypoint Platform.\n+ * <p>\n+ * Platform Managed OAuth is an experimental feature. It will only be enabled on selected environments and scenarios.\n+ * Backwards compatibility is not guaranteed.\n+ *\n+ * @since 4.3.0\n+ */\n+@NoExtend\n+@Experimental\n+public interface PlatformManagedConnectionDescriptor {\n+\n+  /**\n+   * @return the connection's unique id in the Anypoint Platform\n+   */\n+  String getId();\n+\n+  /**\n+   * @return the URI that identifies this connection in the Anypoint Platform\n+   */\n+  String getUri();\n+\n+  /**\n+   * @return The name that the user has given this connection in the Anypoint Platform\n+   */\n+  String getName();\n+\n+  /**\n+   * Returns parameters additional to the standard OAuth ones that the user has configured for this connection. These usually\n+   * correspond to custom parameters tha the service provider accepts or requires on its requests, but may contain other\n+   * parameters as well.\n+   *\n+   * @return A {@link Map} which keys are the parameter names\n+   */\n+  Map<String, Object> getParameters();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMxMjA5Ng=="}, "originalCommit": {"oid": "3584d0bde43d56583e3f6ef742f5b272c8be1520"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 125, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}