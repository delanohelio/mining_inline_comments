{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NjA4MjM3", "number": 8619, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNjo0MjowMFrODcSwKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNjo0MjowMFrODcSwKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwOTkzOTYyOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNjo0MjowMFrOFkRM6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODozMToxM1rOFkUE4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU3NDg4OA==", "bodyText": "Remove this", "url": "https://github.com/mulesoft/mule/pull/8619#discussion_r373574888", "createdAt": "2020-01-31T16:42:00Z", "author": {"login": "gabrieldalborgo"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "diffHunk": "@@ -77,16 +87,19 @@ public int getSize() {\n    * @return\n    */\n   private <R> R performWithConnection(Function<Object, R> function) {\n-    ConnectionSupplier connectionSupplier = null;\n+    ConnectionSupplier connectionSupplier = getConnectionSupplier();\n+    Object connection = getConnection(connectionSupplier);\n     try {\n-      connectionSupplier = connectionSupplierFactory.getConnectionSupplier();\n-      return function.apply(connectionSupplier.getConnection());\n-    } catch (MuleException e) {\n-      throw new MuleRuntimeException(createStaticMessage(COULD_NOT_OBTAIN_A_CONNECTION), e);\n-    } finally {\n-      if (connectionSupplier != null) {\n-        connectionSupplier.close();\n+      R result = function.apply(connection);\n+      connectionSupplier.close();\n+      return result;\n+    } catch (Exception e) {\n+      if (isFirstPage) {\n+        closeDelegate(connection);\n       }\n+      extractConnectionException(e).ifPresent(ex -> connectionSupplier.invalidateConnection());\n+      connectionSupplier.invalidateConnection();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f0892b8908117ebd7225ddc3ccd8267d81aaeae"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMTk4Ng==", "bodyText": "thanks, fixed", "url": "https://github.com/mulesoft/mule/pull/8619#discussion_r373621986", "createdAt": "2020-01-31T18:31:13Z", "author": {"login": "SebaElizalde"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "diffHunk": "@@ -77,16 +87,19 @@ public int getSize() {\n    * @return\n    */\n   private <R> R performWithConnection(Function<Object, R> function) {\n-    ConnectionSupplier connectionSupplier = null;\n+    ConnectionSupplier connectionSupplier = getConnectionSupplier();\n+    Object connection = getConnection(connectionSupplier);\n     try {\n-      connectionSupplier = connectionSupplierFactory.getConnectionSupplier();\n-      return function.apply(connectionSupplier.getConnection());\n-    } catch (MuleException e) {\n-      throw new MuleRuntimeException(createStaticMessage(COULD_NOT_OBTAIN_A_CONNECTION), e);\n-    } finally {\n-      if (connectionSupplier != null) {\n-        connectionSupplier.close();\n+      R result = function.apply(connection);\n+      connectionSupplier.close();\n+      return result;\n+    } catch (Exception e) {\n+      if (isFirstPage) {\n+        closeDelegate(connection);\n       }\n+      extractConnectionException(e).ifPresent(ex -> connectionSupplier.invalidateConnection());\n+      connectionSupplier.invalidateConnection();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU3NDg4OA=="}, "originalCommit": {"oid": "6f0892b8908117ebd7225ddc3ccd8267d81aaeae"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 154, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}