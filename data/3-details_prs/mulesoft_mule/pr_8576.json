{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNjg1MDg2", "number": 8576, "title": "MULE-17939: Operation considers applied policies regarding thread switches", "bodyText": "Fix tests", "createdAt": "2020-01-14T15:09:25Z", "url": "https://github.com/mulesoft/mule/pull/8576", "merged": true, "mergeCommit": {"oid": "c69288b97af68e10ceb2d840bf1be01bd3ba1983"}, "closed": true, "closedAt": "2020-01-14T19:56:10Z", "author": {"login": "elrodro83"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6RuD5AH2gAyMzYyNjg1MDg2Ojk2NzcyOTc5YzYwOGJhMzdlYTNjODBjMWRlZDMyZWEzYzBlNzVhMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6V0krAFqTM0Mjc3MDI1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "96772979c608ba37ea3c80c1ded32ea3c0e75a33", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/96772979c608ba37ea3c80c1ded32ea3c0e75a33", "committedDate": "2020-01-14T14:21:14Z", "message": "fixes after review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bf9eb654e808f6c39caf12e370b91fa7a2639b7", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/8bf9eb654e808f6c39caf12e370b91fa7a2639b7", "committedDate": "2020-01-14T15:08:17Z", "message": "MULE-17939: Operation considers applied policies regarding thread\nswitches\n\n* Fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNjEyODMz", "url": "https://github.com/mulesoft/mule/pull/8576#pullrequestreview-342612833", "createdAt": "2020-01-14T15:21:25Z", "commit": {"oid": "8bf9eb654e808f6c39caf12e370b91fa7a2639b7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNToyMToyNVrOFdbQhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNToyMToyNVrOFdbQhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5OTYyMg==", "bodyText": "Potencial NPE if the map has no such entry", "url": "https://github.com/mulesoft/mule/pull/8576#discussion_r366399622", "createdAt": "2020-01-14T15:21:25Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/execution/SdkInternalContext.java", "diffHunk": "@@ -39,69 +41,122 @@ public static SdkInternalContext from(CoreEvent event) {\n     return (SdkInternalContext) ((InternalEvent) event).<SdkInternalContext>getSdkInternalContext();\n   }\n \n-  private OperationExecutionParams operationExecutionParams;\n+  /*\n+   * SDK components may be nested within each other, so some of the context must be kept separately for the component it belongs\n+   * to.\n+   */\n+  private final Map<String, LocationSpecificSdkInternalContext> locationSpecificContext = new SmallMap<>();\n \n   private Function<Context, Context> innerChainSubscriberContextMapping = identity();\n \n-  private Optional<ConfigurationInstance> configuration;\n-\n-  private Map<String, Object> resolutionResult;\n+  public void clearContextForLocation(ComponentLocation location) {\n+    locationSpecificContext.remove(resolveLocation(location));\n+  }\n \n-  private OperationPolicy policyToApply;\n+  public void setConfiguration(ComponentLocation location, Optional<ConfigurationInstance> configuration) {\n+    final LocationSpecificSdkInternalContext ctx = new LocationSpecificSdkInternalContext();\n+    ctx.setConfiguration(configuration);\n+    locationSpecificContext.put(resolveLocation(location), ctx);\n+  }\n \n-  /**\n-   * @return {@code true} if the policy to be applied is a no-op, {@code false} if a policy is actually applied.\n-   */\n-  public boolean isNoPolicyOperation() {\n-    return DefaultPolicyManager.isNoPolicyOperation(getPolicyToApply());\n+  public Optional<ConfigurationInstance> getConfiguration(ComponentLocation location) {\n+    return locationSpecificContext.get(resolveLocation(location)).getConfiguration();\n   }\n \n-  public OperationExecutionParams getOperationExecutionParams() {\n-    return operationExecutionParams;\n+  public void setOperationExecutionParams(ComponentLocation location, Optional<ConfigurationInstance> configuration,\n+                                          Map<String, Object> parameters, CoreEvent operationEvent, ExecutorCallback callback) {\n+    locationSpecificContext.get(resolveLocation(location)).setOperationExecutionParams(configuration, parameters, operationEvent,\n+                                                                                       callback);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bf9eb654e808f6c39caf12e370b91fa7a2639b7"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ac494ec530594a7b88769e00d6ce7a2438be3f1", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/8ac494ec530594a7b88769e00d6ce7a2438be3f1", "committedDate": "2020-01-14T15:26:36Z", "message": "review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40ab3c20a28c2133f6bfe9b69ad82efae3985d75", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/40ab3c20a28c2133f6bfe9b69ad82efae3985d75", "committedDate": "2020-01-14T19:03:59Z", "message": "stack instead of map"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNzcwMjU3", "url": "https://github.com/mulesoft/mule/pull/8576#pullrequestreview-342770257", "createdAt": "2020-01-14T19:07:58Z", "commit": {"oid": "40ab3c20a28c2133f6bfe9b69ad82efae3985d75"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1347, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}