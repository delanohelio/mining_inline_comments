{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NzI2ODc4", "number": 8852, "title": "MULE-17419: XML SDK: macroexpansion while keeping AST immutable", "bodyText": "", "createdAt": "2020-05-12T13:30:07Z", "url": "https://github.com/mulesoft/mule/pull/8852", "merged": true, "mergeCommit": {"oid": "20d849489b9035be01d89bfdd1239d13509eeb79"}, "closed": true, "closedAt": "2020-05-12T23:33:51Z", "author": {"login": "elrodro83"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgj-ixgH2gAyNDE2NzI2ODc4OjU3NzUwN2QzZDUzY2UwYzI4OGQwNDI1NmUzMjQwNTRlNWRkOGE0NjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgq86KAFqTQxMDQyNzEyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "577507d3d53ce0c288d04256e324054e5dd8a463", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/577507d3d53ce0c288d04256e324054e5dd8a463", "committedDate": "2020-05-12T13:06:39Z", "message": "MULE-17419: XML SDK: macroexpansion while keeping AST immutable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37da04f95d4340320d6c2ad4a5f6226547bad2c8", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/37da04f95d4340320d6c2ad4a5f6226547bad2c8", "committedDate": "2020-05-12T13:28:04Z", "message": "self-review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26705202ab390d8e7ac08ddd80d072ba64229277", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/26705202ab390d8e7ac08ddd80d072ba64229277", "committedDate": "2020-05-12T15:58:00Z", "message": "format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMjcxMzY0", "url": "https://github.com/mulesoft/mule/pull/8852#pullrequestreview-410271364", "createdAt": "2020-05-12T17:35:11Z", "commit": {"oid": "26705202ab390d8e7ac08ddd80d072ba64229277"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzozNToxMlrOGURl6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNzozNToxMlrOGURl6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkxMjkzNw==", "bodyText": "Meantime, would this break anything? I guess it was just a matter of performance to have them indexed, right?", "url": "https://github.com/mulesoft/mule/pull/8852#discussion_r423912937", "createdAt": "2020-05-12T17:35:12Z", "author": {"login": "gsfernandes"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "diffHunk": "@@ -331,35 +323,67 @@ public ApplicationModel(ArtifactConfig artifactConfig, ArtifactDeclaration artif\n     this.componentBuildingDefinitionRegistry = componentBuildingDefinitionRegistry;\n     this.externalResourceProvider = externalResourceProvider;\n     createConfigurationAttributeResolver(artifactConfig, parentConfigurationProperties, deploymentProperties);\n-    convertConfigFileToComponentModel(artifactConfig);\n-    convertArtifactDeclarationToComponentModel(extensionModels, artifactDeclaration);\n+\n+    List<ComponentAst> muleComponentModels = new LinkedList<>();\n+    convertConfigFileToComponentModel(artifactConfig, muleComponentModels);\n+    convertArtifactDeclarationToComponentModel(extensionModels, artifactDeclaration, muleComponentModels);\n+    this.muleComponentModels = muleComponentModels;\n+    this.ast = new ArtifactAst() {\n+\n+      @Override\n+      public Stream<ComponentAst> recursiveStream() {\n+        return topLevelComponentsStream()\n+            .flatMap(cm -> cm.recursiveStream());\n+      }\n+\n+      @Override\n+      public Spliterator<ComponentAst> recursiveSpliterator() {\n+        return recursiveStream().spliterator();\n+      }\n+\n+      @Override\n+      public Stream<ComponentAst> topLevelComponentsStream() {\n+        return muleComponentModels.stream();\n+      }\n+\n+      @Override\n+      public Spliterator<ComponentAst> topLevelComponentsSpliterator() {\n+        return topLevelComponentsStream().spliterator();\n+      }\n+    };\n+\n     createEffectiveModel();\n     indexComponentModels();\n     validateModel(componentBuildingDefinitionRegistry);\n     extensionModelHelper = new ExtensionModelHelper(extensionModels);\n     // TODO MULE-13894 do this only on runtimeMode=true once unified extensionModel names to use camelCase (see smart connectors\n     // and crafted declared extension models)\n     resolveComponentTypes();\n+    resolveMetadataTypes(extensionModelHelper, recursiveStream());\n     topLevelComponentsStream()\n         .forEach(componentModel -> ((ComponentModel) componentModel).resolveTypedComponentIdentifier(extensionModelHelper,\n                                                                                                      runtimeMode));\n     recursiveStreamWithHierarchy(this).forEach(new ComponentLocationVisitor());\n   }\n \n+  /**\n+   * We force the current instance of {@link ApplicationModel} to be highly cohesive with {@link MacroExpansionModulesModel} as\n+   * it's responsibility of this object to properly initialize and expand every global element/operation into the concrete set of\n+   * message processors\n+   *\n+   * @param extensionModels Set of {@link ExtensionModel extensionModels} that will be used to check if the element has to be\n+   *        expanded.\n+   * @param postProcess a closure to be executed after the macroexpansion of an extension.\n+   */\n   public void macroExpandXmlSdkComponents(Set<ExtensionModel> extensionModels) {\n-    expandModules(extensionModels, () -> {\n-      // TODO MULE-13894 do this only on runtimeMode=true once unified extensionModel names to use camelCase (see smart connectors\n-      // connectors and crafted declared extension models)\n-\n-      // TODO MULE-17419 (AST) Remove these 2 actions\n-      resolveComponentTypes();\n-      topLevelComponentsStream()\n-          .forEach(componentModel -> ((ComponentModel) componentModel).resolveTypedComponentIdentifier(extensionModelHelper,\n-                                                                                                       runtimeMode));\n+    final ArtifactAst previousAst = ast;\n+    ast = new MacroExpansionModulesModel(previousAst, extensionModels).expand();\n \n+    if (ast != previousAst) {\n       // Have to index again the component models with macro expanded ones\n-      indexComponentModels();\n-    });\n+      // TODO MULE-17197 (AST) uncomment this\n+      // indexComponentModels();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26705202ab390d8e7ac08ddd80d072ba64229277"}, "originalPosition": 142}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMjcxNDQ3", "url": "https://github.com/mulesoft/mule/pull/8852#pullrequestreview-410271447", "createdAt": "2020-05-12T17:35:17Z", "commit": {"oid": "26705202ab390d8e7ac08ddd80d072ba64229277"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c5e9f057e64d47f01373edb15976c4441febb0b", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/9c5e9f057e64d47f01373edb15976c4441febb0b", "committedDate": "2020-05-12T18:37:29Z", "message": "review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDI3MTI5", "url": "https://github.com/mulesoft/mule/pull/8852#pullrequestreview-410427129", "createdAt": "2020-05-12T21:14:12Z", "commit": {"oid": "9c5e9f057e64d47f01373edb15976c4441febb0b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 875, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}