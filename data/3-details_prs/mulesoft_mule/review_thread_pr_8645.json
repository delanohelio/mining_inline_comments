{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NDU3ODY3", "number": 8645, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODozOTo0MVrODfSh_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo1ODowNVrODgAFog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTM2MDYyOnYy", "diffSide": "RIGHT", "path": "modules/http-api/src/main/java/org/mule/runtime/http/api/domain/AbstractCaseInsensitiveMultiMap.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODozOTo0MVrOFo6Fcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODozOTo0MVrOFo6Fcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQzOTAyNw==", "bodyText": "should this be wrapped as well?", "url": "https://github.com/mulesoft/mule/pull/8645#discussion_r378439027", "createdAt": "2020-02-12T18:39:41Z", "author": {"login": "elrodro83"}, "path": "modules/http-api/src/main/java/org/mule/runtime/http/api/domain/AbstractCaseInsensitiveMultiMap.java", "diffHunk": "@@ -0,0 +1,218 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+\n+package org.mule.runtime.http.api.domain;\n+\n+import org.mule.runtime.api.el.DataTypeAware;\n+import org.mule.runtime.api.metadata.DataType;\n+import org.mule.runtime.api.util.MultiMap;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.BiConsumer;\n+import java.util.function.BiFunction;\n+import java.util.function.Function;\n+\n+import static java.util.Collections.unmodifiableCollection;\n+import static java.util.Collections.unmodifiableList;\n+import static java.util.Collections.unmodifiableSet;\n+\n+public abstract class AbstractCaseInsensitiveMultiMap extends MultiMap<String, String> implements DataTypeAware {\n+\n+  protected static final DataType dataType = DataType.builder()\n+      .mapType(CaseInsensitiveMultiMap.class)\n+      .keyType(String.class)\n+      .valueType(String.class)\n+      .build();\n+\n+  @Override\n+  public DataType getDataType() {\n+    return dataType;\n+  }\n+\n+  @Override\n+  public abstract AbstractCaseInsensitiveMultiMap toImmutableMultiMap();\n+\n+  public static class UnmodifiableCaseInsensitiveMultiMap extends AbstractCaseInsensitiveMultiMap {\n+\n+    private static final long serialVersionUID = 6798199484376351419L;\n+\n+    private final CaseInsensitiveMultiMap m;\n+\n+    public UnmodifiableCaseInsensitiveMultiMap(CaseInsensitiveMultiMap m) {\n+      this.m = m;\n+    }\n+\n+    @Override\n+    public AbstractCaseInsensitiveMultiMap toImmutableMultiMap() {\n+      return m.toImmutableMultiMap();\n+    }\n+\n+    @Override\n+    public int size() {\n+      return m.size();\n+    }\n+\n+    @Override\n+    public boolean isEmpty() {\n+      return m.isEmpty();\n+    }\n+\n+    @Override\n+    public boolean containsKey(Object key) {\n+      return m.containsKey(key);\n+    }\n+\n+    @Override\n+    public boolean containsValue(Object value) {\n+      return m.containsValue(value);\n+    }\n+\n+    @Override\n+    public String get(Object key) {\n+      return m.get(key);\n+    }\n+\n+    @Override\n+    public List<String> getAll(Object key) {\n+      return m.getAll(key);\n+    }\n+\n+    @Override\n+    public String put(String key, String value) {\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public void put(String key, Collection<String> values) {\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public String remove(Object key) {\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public List<String> removeAll(Object key) {\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public void putAll(Map<? extends String, ? extends String> aMap) {\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public void putAll(MultiMap<? extends String, ? extends String> aMultiMap) {\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public void clear() {\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public Set<String> keySet() {\n+      return unmodifiableSet(m.keySet());\n+    }\n+\n+    @Override\n+    public Collection<String> values() {\n+      return unmodifiableCollection(m.values());\n+    }\n+\n+    @Override\n+    public Set<Entry<String, String>> entrySet() {\n+      return unmodifiableSet(m.entrySet());\n+    }\n+\n+    @Override\n+    public List<Entry<String, String>> entryList() {\n+      return unmodifiableList(m.entryList());\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+      return m.equals(o);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+      return m.hashCode();\n+    }\n+\n+    @Override\n+    public Map<String, ? extends List<String>> toListValuesMap() {\n+      return m.toListValuesMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d53cc437d4f1b9d0f5a109cdd9ffd339032df875"}, "originalPosition": 154}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODc0MTIwOnYy", "diffSide": "RIGHT", "path": "modules/http-api/src/main/java/org/mule/runtime/http/api/domain/CaseInsensitiveMultiMap.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOToyNjo1OFrOFqBPzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOToyNjo1OFrOFqBPzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwNDk0Mg==", "bodyText": "use braces even for one line blocks", "url": "https://github.com/mulesoft/mule/pull/8645#discussion_r379604942", "createdAt": "2020-02-14T19:26:58Z", "author": {"login": "elrodro83"}, "path": "modules/http-api/src/main/java/org/mule/runtime/http/api/domain/CaseInsensitiveMultiMap.java", "diffHunk": "@@ -107,4 +121,18 @@ public CaseInsensitiveMultiMap toImmutableMultiMap() {\n   public DataType getDataType() {\n     return dataType;\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "615a3b7a9bb9e0ff3af5b708302caf2e6c117057"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODgyNDMzOnYy", "diffSide": "RIGHT", "path": "modules/http-api/src/main/java/org/mule/runtime/http/api/domain/CaseInsensitiveMultiMap.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo1Nzo1OFrOFqCDDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo1Nzo1OFrOFqCDDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxODA2MQ==", "bodyText": "here", "url": "https://github.com/mulesoft/mule/pull/8645#discussion_r379618061", "createdAt": "2020-02-14T19:57:58Z", "author": {"login": "elrodro83"}, "path": "modules/http-api/src/main/java/org/mule/runtime/http/api/domain/CaseInsensitiveMultiMap.java", "diffHunk": "@@ -124,9 +124,13 @@ public DataType getDataType() {\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (!(o instanceof CaseInsensitiveMultiMap)) return false;\n-    if (!super.equals(o)) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (!(o instanceof CaseInsensitiveMultiMap))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12275f28c8a8004ffe37c604388a463d88d89de6"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODgyNDY2OnYy", "diffSide": "RIGHT", "path": "modules/http-api/src/main/java/org/mule/runtime/http/api/domain/CaseInsensitiveMultiMap.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo1ODowNlrOFqCDSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTo1ODowNlrOFqCDSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxODEyMg==", "bodyText": "and here :)", "url": "https://github.com/mulesoft/mule/pull/8645#discussion_r379618122", "createdAt": "2020-02-14T19:58:06Z", "author": {"login": "elrodro83"}, "path": "modules/http-api/src/main/java/org/mule/runtime/http/api/domain/CaseInsensitiveMultiMap.java", "diffHunk": "@@ -124,9 +124,13 @@ public DataType getDataType() {\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (!(o instanceof CaseInsensitiveMultiMap)) return false;\n-    if (!super.equals(o)) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (!(o instanceof CaseInsensitiveMultiMap))\n+      return false;\n+    if (!super.equals(o))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12275f28c8a8004ffe37c604388a463d88d89de6"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 93, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}