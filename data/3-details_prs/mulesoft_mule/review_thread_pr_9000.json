{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMDM3ODA2", "number": 9000, "reviewThreads": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMzo0NzoyMlrOEKGvgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODo0MjoxNFrOEUt5Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDMxNjgwOnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/test/java/org/mule/runtime/module/artifact/classloader/ResourceReleaserTestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMzo0NzoyMlrOGq9Lvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDozNzo0NlrOGq_kIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY5NTgwNg==", "bodyText": "this test in inherently flaky.", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r447695806", "createdAt": "2020-06-30T13:47:22Z", "author": {"login": "marianogonzalez"}, "path": "modules/artifact/src/test/java/org/mule/runtime/module/artifact/classloader/ResourceReleaserTestCase.java", "diffHunk": "@@ -171,6 +176,33 @@ public void createsInstanceOnlyOnce() throws IOException {\n     }\n   }\n \n+  @Test\n+  public void stopOracleDriverLeakyThreads() throws Exception {\n+    JdbcResourceReleaser resourceReleaser = new JdbcResourceReleaser();\n+\n+    Method killOracleThreadsMethod = resourceReleaser.getClass().getDeclaredMethod(\"disposeOracleDriverThreads\");\n+    killOracleThreadsMethod.setAccessible(true);\n+\n+    Timer timerThread = new Timer();\n+    TimerTask task = new TimerTask() {\n+\n+      @Override\n+      public void run() {\n+        System.out.println(\"Timer\");\n+      }\n+    };\n+    timerThread.schedule(task, 10, 1000);\n+    killOracleThreadsMethod.invoke(resourceReleaser);\n+\n+    sleep(1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7adcef363be5c01bcbf277df6e896bb4f602e806"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNDgxNg==", "bodyText": "Use a PollingProber", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r447734816", "createdAt": "2020-06-30T14:37:46Z", "author": {"login": "fsgonz"}, "path": "modules/artifact/src/test/java/org/mule/runtime/module/artifact/classloader/ResourceReleaserTestCase.java", "diffHunk": "@@ -171,6 +176,33 @@ public void createsInstanceOnlyOnce() throws IOException {\n     }\n   }\n \n+  @Test\n+  public void stopOracleDriverLeakyThreads() throws Exception {\n+    JdbcResourceReleaser resourceReleaser = new JdbcResourceReleaser();\n+\n+    Method killOracleThreadsMethod = resourceReleaser.getClass().getDeclaredMethod(\"disposeOracleDriverThreads\");\n+    killOracleThreadsMethod.setAccessible(true);\n+\n+    Timer timerThread = new Timer();\n+    TimerTask task = new TimerTask() {\n+\n+      @Override\n+      public void run() {\n+        System.out.println(\"Timer\");\n+      }\n+    };\n+    timerThread.schedule(task, 10, 1000);\n+    killOracleThreadsMethod.invoke(resourceReleaser);\n+\n+    sleep(1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY5NTgwNg=="}, "originalCommit": {"oid": "7adcef363be5c01bcbf277df6e896bb4f602e806"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDU2MzI2OnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/test/java/org/mule/runtime/module/artifact/classloader/ResourceReleaserTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDozODowM1rOGq_k-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDozODowM1rOGq_k-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNTAzNA==", "bodyText": "use a constant for the prefix of the Thread", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r447735034", "createdAt": "2020-06-30T14:38:03Z", "author": {"login": "fsgonz"}, "path": "modules/artifact/src/test/java/org/mule/runtime/module/artifact/classloader/ResourceReleaserTestCase.java", "diffHunk": "@@ -171,6 +176,33 @@ public void createsInstanceOnlyOnce() throws IOException {\n     }\n   }\n \n+  @Test\n+  public void stopOracleDriverLeakyThreads() throws Exception {\n+    JdbcResourceReleaser resourceReleaser = new JdbcResourceReleaser();\n+\n+    Method killOracleThreadsMethod = resourceReleaser.getClass().getDeclaredMethod(\"disposeOracleDriverThreads\");\n+    killOracleThreadsMethod.setAccessible(true);\n+\n+    Timer timerThread = new Timer();\n+    TimerTask task = new TimerTask() {\n+\n+      @Override\n+      public void run() {\n+        System.out.println(\"Timer\");\n+      }\n+    };\n+    timerThread.schedule(task, 10, 1000);\n+    killOracleThreadsMethod.invoke(resourceReleaser);\n+\n+    sleep(1000);\n+\n+    Thread[] threads = new Thread[Thread.activeCount()];\n+    enumerate(threads);\n+    for (Thread thread : threads) {\n+      assertThat(thread.getName(), not(containsString(\"Timer-\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7adcef363be5c01bcbf277df6e896bb4f602e806"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDU2NDA0OnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/test/java/org/mule/runtime/module/artifact/classloader/ResourceReleaserTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDozODoxM1rOGq_lfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDozODoxM1rOGq_lfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNTE2NA==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r447735164", "createdAt": "2020-06-30T14:38:13Z", "author": {"login": "fsgonz"}, "path": "modules/artifact/src/test/java/org/mule/runtime/module/artifact/classloader/ResourceReleaserTestCase.java", "diffHunk": "@@ -171,6 +176,33 @@ public void createsInstanceOnlyOnce() throws IOException {\n     }\n   }\n \n+  @Test\n+  public void stopOracleDriverLeakyThreads() throws Exception {\n+    JdbcResourceReleaser resourceReleaser = new JdbcResourceReleaser();\n+\n+    Method killOracleThreadsMethod = resourceReleaser.getClass().getDeclaredMethod(\"disposeOracleDriverThreads\");\n+    killOracleThreadsMethod.setAccessible(true);\n+\n+    Timer timerThread = new Timer();\n+    TimerTask task = new TimerTask() {\n+\n+      @Override\n+      public void run() {\n+        System.out.println(\"Timer\");\n+      }\n+    };\n+    timerThread.schedule(task, 10, 1000);\n+    killOracleThreadsMethod.invoke(resourceReleaser);\n+\n+    sleep(1000);\n+\n+    Thread[] threads = new Thread[Thread.activeCount()];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7adcef363be5c01bcbf277df6e896bb4f602e806"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDU3MjI3OnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDozOTozN1rOGq_qNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDozOTozN1rOGq_qNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNjM3Mg==", "bodyText": "move this to a field so that the property is not read every time a it is used.", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r447736372", "createdAt": "2020-06-30T14:39:37Z", "author": {"login": "fsgonz"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -264,4 +266,37 @@ private void shutdownMySqlConnectionCleanupThreads(Class<?> classAbandonedConnec\n     throw new ClassNotFoundException(\"No MySql's AbandonedConnectionCleanupThread class was found\");\n   }\n \n+  private void disposeOracleDriverThreads() {\n+    try {\n+      String avoidThreadDisposal = System.getProperty(\"avoid.dispose.oracle.threads\");\n+      if (Boolean.valueOf(avoidThreadDisposal)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7adcef363be5c01bcbf277df6e896bb4f602e806"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDU3Nzc0OnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0MDozNFrOGq_teA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0MDozNFrOGq_teA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNzIwOA==", "bodyText": "static import.", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r447737208", "createdAt": "2020-06-30T14:40:34Z", "author": {"login": "fsgonz"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -264,4 +266,37 @@ private void shutdownMySqlConnectionCleanupThreads(Class<?> classAbandonedConnec\n     throw new ClassNotFoundException(\"No MySql's AbandonedConnectionCleanupThread class was found\");\n   }\n \n+  private void disposeOracleDriverThreads() {\n+    try {\n+      String avoidThreadDisposal = System.getProperty(\"avoid.dispose.oracle.threads\");\n+      if (Boolean.valueOf(avoidThreadDisposal)) {\n+        return;\n+      }\n+\n+      Thread[] threads = new Thread[Thread.activeCount()];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7adcef363be5c01bcbf277df6e896bb4f602e806"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDU4NzUxOnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0MjozM1rOGq_zXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjowNzo0MVrOGrDs0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczODcxOA==", "bodyText": "Are we sure this will be the only threads that are stopped in every kind of app? Isn't there a less intrusive way to shutdown the timer threads?", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r447738718", "createdAt": "2020-06-30T14:42:33Z", "author": {"login": "fsgonz"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -45,6 +45,7 @@\n public class JdbcResourceReleaser implements ResourceReleaser {\n \n   public static final String DIAGNOSABILITY_BEAN_NAME = \"diagnosability\";\n+  public static final String ORACLE_DRIVER_TIMER_THREAD_NAME = \"Timer\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7adcef363be5c01bcbf277df6e896bb4f602e806"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc1Njk2MQ==", "bodyText": "I've looked into this, but threads do not appear to have any references to the driver once spawned. The only thing we could possibly check would be the class-loader type... other than that, the only way I found to make this less intrusive was to set that system property to disable killing of the threads.", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r447756961", "createdAt": "2020-06-30T15:05:32Z", "author": {"login": "emariotti3"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -45,6 +45,7 @@\n public class JdbcResourceReleaser implements ResourceReleaser {\n \n   public static final String DIAGNOSABILITY_BEAN_NAME = \"diagnosability\";\n+  public static final String ORACLE_DRIVER_TIMER_THREAD_NAME = \"Timer\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczODcxOA=="}, "originalCommit": {"oid": "7adcef363be5c01bcbf277df6e896bb4f602e806"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgwMjU3Nw==", "bodyText": "Maybe we should check if there a way to ask the driver to remove this threads on disposal. Timer is too generic a name. Not sure if there is a way for this. Maybe verifying how the driver behaves on shutdown regarding those threads and attempt to replicate that behavior on redeployment.", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r447802577", "createdAt": "2020-06-30T16:07:41Z", "author": {"login": "fsgonz"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -45,6 +45,7 @@\n public class JdbcResourceReleaser implements ResourceReleaser {\n \n   public static final String DIAGNOSABILITY_BEAN_NAME = \"diagnosability\";\n+  public static final String ORACLE_DRIVER_TIMER_THREAD_NAME = \"Timer\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczODcxOA=="}, "originalCommit": {"oid": "7adcef363be5c01bcbf277df6e896bb4f602e806"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTIxNDI4OnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo0MDo1NFrOGsS5LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo0MDo1NFrOGsS5LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEwMDA3Ng==", "bodyText": "refactor this as a method.", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r449100076", "createdAt": "2020-07-02T15:40:54Z", "author": {"login": "fsgonz"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -264,4 +273,61 @@ private void shutdownMySqlConnectionCleanupThreads(Class<?> classAbandonedConnec\n     throw new ClassNotFoundException(\"No MySql's AbandonedConnectionCleanupThread class was found\");\n   }\n \n+  private void disposeOracleDriverThreads() {\n+    try {\n+      if (Boolean.valueOf(avoidThreadDisposal)) {\n+        return;\n+      }\n+\n+      Thread[] threads = new Thread[activeCount()];\n+      try {\n+        enumerate(threads);\n+      } catch (Throwable t) {\n+        logger\n+            .debug(\"An error occurred trying to obtain available Threads. Thread cleanup will be skipped.\", t);\n+        return;\n+      }\n+\n+      for (Thread thread : threads) {\n+        if (thread.getClass().getSimpleName().equals(ORACLE_DRIVER_TIMER_THREAD_CLASS_NAME)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8af1a918c9e688a5e7df013ac6c028d844828444"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTIzOTA1OnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo0NDozOFrOGsTKhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo0NDozOFrOGsTKhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEwNDUxNg==", "bodyText": "use Boolean.getBoolean which verifies if there exists a system property, otherwise it assigns a default.\nUse a constant for the string and rename this as jdb.resource.releaser.avoid.dispose.oracle.threads", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r449104516", "createdAt": "2020-07-02T15:44:38Z", "author": {"login": "fsgonz"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -44,7 +48,11 @@\n  */\n public class JdbcResourceReleaser implements ResourceReleaser {\n \n+  private static final String avoidThreadDisposal = getProperty(\"avoid.dispose.oracle.threads\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8af1a918c9e688a5e7df013ac6c028d844828444"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTgxNjY0OnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODoyNTo1NVrOGsYyeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODoyNTo1NVrOGsYyeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE5NjY2NQ==", "bodyText": "You should only use getBoolean without the getProperty\ngetBoolean(AVOID_DISPOSE_ORACLE_THREADS_PROPERTY_NAME)\nReturn true if and only if the system property is true.", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r449196665", "createdAt": "2020-07-02T18:25:55Z", "author": {"login": "fsgonz"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -48,7 +49,9 @@\n  */\n public class JdbcResourceReleaser implements ResourceReleaser {\n \n-  private static final String avoidThreadDisposal = getProperty(\"avoid.dispose.oracle.threads\");\n+  private static final String AVOID_DISPOSE_ORACLE_THREADS_PROPERTY_NAME = \"avoid.dispose.oracle.threads\";\n+  private static final boolean JDBC_RESOURCE_RELEASER_AVOID_DISPOSE_ORACLE_THREADS =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bec6c75050827dbc00affa996b1a1f877634b09d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTgxOTIxOnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODoyNjo0N1rOGsY0Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODoyNjo0N1rOGsY0Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE5NzA3OQ==", "bodyText": "Add a comment to explain why this has to be done and that the timer cannot be cancelled by reflection (some users may use only the ojdbc jar)", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r449197079", "createdAt": "2020-07-02T18:26:47Z", "author": {"login": "fsgonz"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -264,4 +276,65 @@ private void shutdownMySqlConnectionCleanupThreads(Class<?> classAbandonedConnec\n     throw new ClassNotFoundException(\"No MySql's AbandonedConnectionCleanupThread class was found\");\n   }\n \n+  private void disposeOracleDriverThreads() {\n+    try {\n+      if (JDBC_RESOURCE_RELEASER_AVOID_DISPOSE_ORACLE_THREADS) {\n+        return;\n+      }\n+\n+      Thread[] threads = new Thread[activeCount()];\n+      try {\n+        enumerate(threads);\n+      } catch (Throwable t) {\n+        logger\n+            .debug(\"An error occurred trying to obtain available Threads. Thread cleanup will be skipped.\", t);\n+        return;\n+      }\n+\n+      for (Thread thread : threads) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bec6c75050827dbc00affa996b1a1f877634b09d"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzQ2NDQ5OnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo0MDowMlrOGtcuag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo0MDowMlrOGtcuag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMwOTczOA==", "bodyText": "HAManger-> HAManager", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r450309738", "createdAt": "2020-07-06T15:40:02Z", "author": {"login": "marianogonzalez"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -264,4 +276,71 @@ private void shutdownMySqlConnectionCleanupThreads(Class<?> classAbandonedConnec\n     throw new ClassNotFoundException(\"No MySql's AbandonedConnectionCleanupThread class was found\");\n   }\n \n+  private void disposeOracleDriverThreads() {\n+    try {\n+      if (JDBC_RESOURCE_RELEASER_AVOID_DISPOSE_ORACLE_THREADS) {\n+        return;\n+      }\n+\n+      Thread[] threads = new Thread[activeCount()];\n+      try {\n+        enumerate(threads);\n+      } catch (Throwable t) {\n+        logger\n+            .debug(\"An error occurred trying to obtain available Threads. Thread cleanup will be skipped.\", t);\n+        return;\n+      }\n+\n+      /* IMPORTANT: this is done to avoid metaspace OOM caused by oracle driver\n+      thread leak. This is only meant to stop TimerThread threads spawned\n+      by oracle driver's HAManger class. This timer cannot be fetched", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29da11e5d25031981b8351051ba8610eddb6c22e"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzQ2NTc1OnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo0MDoyMFrOGtcvNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo0MDoyMFrOGtcvNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMwOTk0MQ==", "bodyText": "WARN", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r450309941", "createdAt": "2020-07-06T15:40:20Z", "author": {"login": "marianogonzalez"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -264,4 +276,71 @@ private void shutdownMySqlConnectionCleanupThreads(Class<?> classAbandonedConnec\n     throw new ClassNotFoundException(\"No MySql's AbandonedConnectionCleanupThread class was found\");\n   }\n \n+  private void disposeOracleDriverThreads() {\n+    try {\n+      if (JDBC_RESOURCE_RELEASER_AVOID_DISPOSE_ORACLE_THREADS) {\n+        return;\n+      }\n+\n+      Thread[] threads = new Thread[activeCount()];\n+      try {\n+        enumerate(threads);\n+      } catch (Throwable t) {\n+        logger\n+            .debug(\"An error occurred trying to obtain available Threads. Thread cleanup will be skipped.\", t);\n+        return;\n+      }\n+\n+      /* IMPORTANT: this is done to avoid metaspace OOM caused by oracle driver\n+      thread leak. This is only meant to stop TimerThread threads spawned\n+      by oracle driver's HAManger class. This timer cannot be fetched\n+      by reflection because, in order to do so, other oracle dependencies\n+      would be required.\n+      * */\n+      for (Thread thread : threads) {\n+        if (isThreadApplicationTimerThread(thread)) {\n+          try {\n+            thread.stop();\n+            thread.interrupt();\n+          } catch (Throwable e) {\n+            logger\n+                .debug(\"An error occurred trying to close the '\" + thread.getName() + \"' Thread. This might cause memory leaks.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29da11e5d25031981b8351051ba8610eddb6c22e"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzQ2OTEwOnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo0MTowOVrOGtcxTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo0MTowOVrOGtcxTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMxMDQ3Nw==", "bodyText": "this should log not only the message, but the context in which it happened and the entire exception", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r450310477", "createdAt": "2020-07-06T15:41:09Z", "author": {"login": "marianogonzalez"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -264,4 +276,71 @@ private void shutdownMySqlConnectionCleanupThreads(Class<?> classAbandonedConnec\n     throw new ClassNotFoundException(\"No MySql's AbandonedConnectionCleanupThread class was found\");\n   }\n \n+  private void disposeOracleDriverThreads() {\n+    try {\n+      if (JDBC_RESOURCE_RELEASER_AVOID_DISPOSE_ORACLE_THREADS) {\n+        return;\n+      }\n+\n+      Thread[] threads = new Thread[activeCount()];\n+      try {\n+        enumerate(threads);\n+      } catch (Throwable t) {\n+        logger\n+            .debug(\"An error occurred trying to obtain available Threads. Thread cleanup will be skipped.\", t);\n+        return;\n+      }\n+\n+      /* IMPORTANT: this is done to avoid metaspace OOM caused by oracle driver\n+      thread leak. This is only meant to stop TimerThread threads spawned\n+      by oracle driver's HAManger class. This timer cannot be fetched\n+      by reflection because, in order to do so, other oracle dependencies\n+      would be required.\n+      * */\n+      for (Thread thread : threads) {\n+        if (isThreadApplicationTimerThread(thread)) {\n+          try {\n+            thread.stop();\n+            thread.interrupt();\n+          } catch (Throwable e) {\n+            logger\n+                .debug(\"An error occurred trying to close the '\" + thread.getName() + \"' Thread. This might cause memory leaks.\",\n+                       e);\n+          }\n+        }\n+      }\n+    } catch (Exception e) {\n+      logger.debug(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29da11e5d25031981b8351051ba8610eddb6c22e"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzQ3ODc2OnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo0MzoyOVrOGtc3Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo0MzoyOVrOGtc3Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMxMTk5NQ==", "bodyText": "this doesn't make sense. If this is a concern, then the two while loops should be nested and this one should be the master iteration", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r450311995", "createdAt": "2020-07-06T15:43:29Z", "author": {"login": "marianogonzalez"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -264,4 +276,71 @@ private void shutdownMySqlConnectionCleanupThreads(Class<?> classAbandonedConnec\n     throw new ClassNotFoundException(\"No MySql's AbandonedConnectionCleanupThread class was found\");\n   }\n \n+  private void disposeOracleDriverThreads() {\n+    try {\n+      if (JDBC_RESOURCE_RELEASER_AVOID_DISPOSE_ORACLE_THREADS) {\n+        return;\n+      }\n+\n+      Thread[] threads = new Thread[activeCount()];\n+      try {\n+        enumerate(threads);\n+      } catch (Throwable t) {\n+        logger\n+            .debug(\"An error occurred trying to obtain available Threads. Thread cleanup will be skipped.\", t);\n+        return;\n+      }\n+\n+      /* IMPORTANT: this is done to avoid metaspace OOM caused by oracle driver\n+      thread leak. This is only meant to stop TimerThread threads spawned\n+      by oracle driver's HAManger class. This timer cannot be fetched\n+      by reflection because, in order to do so, other oracle dependencies\n+      would be required.\n+      * */\n+      for (Thread thread : threads) {\n+        if (isThreadApplicationTimerThread(thread)) {\n+          try {\n+            thread.stop();\n+            thread.interrupt();\n+          } catch (Throwable e) {\n+            logger\n+                .debug(\"An error occurred trying to close the '\" + thread.getName() + \"' Thread. This might cause memory leaks.\",\n+                       e);\n+          }\n+        }\n+      }\n+    } catch (Exception e) {\n+      logger.debug(e.getMessage());\n+    }\n+  }\n+\n+  private boolean isThreadApplicationTimerThread(Thread thread) {\n+    return thread.getClass().getSimpleName().equals(ORACLE_DRIVER_TIMER_THREAD_CLASS_NAME)\n+        && thread.getName().contains(ORACLE_DRIVER_TIMER_THREAD_NAME)\n+        && isThreadLoadedByThisClassLoader(thread.getContextClassLoader());\n+  }\n+\n+  private boolean isThreadLoadedByThisClassLoader(ClassLoader threadBaseClassLoader) {\n+    ClassLoader threadClassLoader = threadBaseClassLoader;\n+    ClassLoader lastClassLoader = null;\n+    ClassLoader resourceReleaserClassLoader = this.getClass().getClassLoader();\n+\n+    while (threadClassLoader != null) {\n+      lastClassLoader = threadClassLoader;\n+      // It has to be the same reference not equals to\n+      if (threadClassLoader == resourceReleaserClassLoader) {\n+        return true;\n+      }\n+      threadClassLoader = threadClassLoader.getParent();\n+    }\n+\n+    while (resourceReleaserClassLoader != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29da11e5d25031981b8351051ba8610eddb6c22e"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzQ4MzAwOnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo0NDoyOFrOGtc5vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo0NDoyOFrOGtc5vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMxMjYzNg==", "bodyText": "this doesn't look correct. By doing this, you're completely bypassing the lookup policies. Why is this needed? In which case would the driver not be loaded by the extension classloader?", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r450312636", "createdAt": "2020-07-06T15:44:28Z", "author": {"login": "marianogonzalez"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -264,4 +276,71 @@ private void shutdownMySqlConnectionCleanupThreads(Class<?> classAbandonedConnec\n     throw new ClassNotFoundException(\"No MySql's AbandonedConnectionCleanupThread class was found\");\n   }\n \n+  private void disposeOracleDriverThreads() {\n+    try {\n+      if (JDBC_RESOURCE_RELEASER_AVOID_DISPOSE_ORACLE_THREADS) {\n+        return;\n+      }\n+\n+      Thread[] threads = new Thread[activeCount()];\n+      try {\n+        enumerate(threads);\n+      } catch (Throwable t) {\n+        logger\n+            .debug(\"An error occurred trying to obtain available Threads. Thread cleanup will be skipped.\", t);\n+        return;\n+      }\n+\n+      /* IMPORTANT: this is done to avoid metaspace OOM caused by oracle driver\n+      thread leak. This is only meant to stop TimerThread threads spawned\n+      by oracle driver's HAManger class. This timer cannot be fetched\n+      by reflection because, in order to do so, other oracle dependencies\n+      would be required.\n+      * */\n+      for (Thread thread : threads) {\n+        if (isThreadApplicationTimerThread(thread)) {\n+          try {\n+            thread.stop();\n+            thread.interrupt();\n+          } catch (Throwable e) {\n+            logger\n+                .debug(\"An error occurred trying to close the '\" + thread.getName() + \"' Thread. This might cause memory leaks.\",\n+                       e);\n+          }\n+        }\n+      }\n+    } catch (Exception e) {\n+      logger.debug(e.getMessage());\n+    }\n+  }\n+\n+  private boolean isThreadApplicationTimerThread(Thread thread) {\n+    return thread.getClass().getSimpleName().equals(ORACLE_DRIVER_TIMER_THREAD_CLASS_NAME)\n+        && thread.getName().contains(ORACLE_DRIVER_TIMER_THREAD_NAME)\n+        && isThreadLoadedByThisClassLoader(thread.getContextClassLoader());\n+  }\n+\n+  private boolean isThreadLoadedByThisClassLoader(ClassLoader threadBaseClassLoader) {\n+    ClassLoader threadClassLoader = threadBaseClassLoader;\n+    ClassLoader lastClassLoader = null;\n+    ClassLoader resourceReleaserClassLoader = this.getClass().getClassLoader();\n+\n+    while (threadClassLoader != null) {\n+      lastClassLoader = threadClassLoader;\n+      // It has to be the same reference not equals to\n+      if (threadClassLoader == resourceReleaserClassLoader) {\n+        return true;\n+      }\n+      threadClassLoader = threadClassLoader.getParent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29da11e5d25031981b8351051ba8610eddb6c22e"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzUwMDcxOnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo0ODo0M1rOGtdEqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo0ODo0M1rOGtdEqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMxNTQzMg==", "bodyText": "this logger should be static", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r450315432", "createdAt": "2020-07-06T15:48:43Z", "author": {"login": "marianogonzalez"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -44,7 +49,13 @@\n  */\n public class JdbcResourceReleaser implements ResourceReleaser {\n \n+  private static final String AVOID_DISPOSE_ORACLE_THREADS_PROPERTY_NAME = \"avoid.dispose.oracle.threads\";\n+  private static final boolean JDBC_RESOURCE_RELEASER_AVOID_DISPOSE_ORACLE_THREADS =\n+      getBoolean(AVOID_DISPOSE_ORACLE_THREADS_PROPERTY_NAME);\n+\n   public static final String DIAGNOSABILITY_BEAN_NAME = \"diagnosability\";\n+  public static final String ORACLE_DRIVER_TIMER_THREAD_NAME = \"Timer-\";\n+  public static final String ORACLE_DRIVER_TIMER_THREAD_CLASS_NAME = \"TimerThread\";\n   private final transient Logger logger = LoggerFactory.getLogger(getClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29da11e5d25031981b8351051ba8610eddb6c22e"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzUxNjI3OnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo1MjoyNlrOGtdOMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo1MjoyNlrOGtdOMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMxNzg3Mg==", "bodyText": "this looks incorrect. You need to check that the thread was started by the application being disposed, not by the classloader that loaded this class. Also, have you considered domains here?", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r450317872", "createdAt": "2020-07-06T15:52:26Z", "author": {"login": "marianogonzalez"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -264,4 +276,71 @@ private void shutdownMySqlConnectionCleanupThreads(Class<?> classAbandonedConnec\n     throw new ClassNotFoundException(\"No MySql's AbandonedConnectionCleanupThread class was found\");\n   }\n \n+  private void disposeOracleDriverThreads() {\n+    try {\n+      if (JDBC_RESOURCE_RELEASER_AVOID_DISPOSE_ORACLE_THREADS) {\n+        return;\n+      }\n+\n+      Thread[] threads = new Thread[activeCount()];\n+      try {\n+        enumerate(threads);\n+      } catch (Throwable t) {\n+        logger\n+            .debug(\"An error occurred trying to obtain available Threads. Thread cleanup will be skipped.\", t);\n+        return;\n+      }\n+\n+      /* IMPORTANT: this is done to avoid metaspace OOM caused by oracle driver\n+      thread leak. This is only meant to stop TimerThread threads spawned\n+      by oracle driver's HAManger class. This timer cannot be fetched\n+      by reflection because, in order to do so, other oracle dependencies\n+      would be required.\n+      * */\n+      for (Thread thread : threads) {\n+        if (isThreadApplicationTimerThread(thread)) {\n+          try {\n+            thread.stop();\n+            thread.interrupt();\n+          } catch (Throwable e) {\n+            logger\n+                .debug(\"An error occurred trying to close the '\" + thread.getName() + \"' Thread. This might cause memory leaks.\",\n+                       e);\n+          }\n+        }\n+      }\n+    } catch (Exception e) {\n+      logger.debug(e.getMessage());\n+    }\n+  }\n+\n+  private boolean isThreadApplicationTimerThread(Thread thread) {\n+    return thread.getClass().getSimpleName().equals(ORACLE_DRIVER_TIMER_THREAD_CLASS_NAME)\n+        && thread.getName().contains(ORACLE_DRIVER_TIMER_THREAD_NAME)\n+        && isThreadLoadedByThisClassLoader(thread.getContextClassLoader());\n+  }\n+\n+  private boolean isThreadLoadedByThisClassLoader(ClassLoader threadBaseClassLoader) {\n+    ClassLoader threadClassLoader = threadBaseClassLoader;\n+    ClassLoader lastClassLoader = null;\n+    ClassLoader resourceReleaserClassLoader = this.getClass().getClassLoader();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29da11e5d25031981b8351051ba8610eddb6c22e"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzUxNzkxOnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo1Mjo1MVrOGtdPTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo1Mjo1MVrOGtdPTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMxODE1Ng==", "bodyText": "same as before. Doesn't look like you're asserting the correct thing", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r450318156", "createdAt": "2020-07-06T15:52:51Z", "author": {"login": "marianogonzalez"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -264,4 +276,71 @@ private void shutdownMySqlConnectionCleanupThreads(Class<?> classAbandonedConnec\n     throw new ClassNotFoundException(\"No MySql's AbandonedConnectionCleanupThread class was found\");\n   }\n \n+  private void disposeOracleDriverThreads() {\n+    try {\n+      if (JDBC_RESOURCE_RELEASER_AVOID_DISPOSE_ORACLE_THREADS) {\n+        return;\n+      }\n+\n+      Thread[] threads = new Thread[activeCount()];\n+      try {\n+        enumerate(threads);\n+      } catch (Throwable t) {\n+        logger\n+            .debug(\"An error occurred trying to obtain available Threads. Thread cleanup will be skipped.\", t);\n+        return;\n+      }\n+\n+      /* IMPORTANT: this is done to avoid metaspace OOM caused by oracle driver\n+      thread leak. This is only meant to stop TimerThread threads spawned\n+      by oracle driver's HAManger class. This timer cannot be fetched\n+      by reflection because, in order to do so, other oracle dependencies\n+      would be required.\n+      * */\n+      for (Thread thread : threads) {\n+        if (isThreadApplicationTimerThread(thread)) {\n+          try {\n+            thread.stop();\n+            thread.interrupt();\n+          } catch (Throwable e) {\n+            logger\n+                .debug(\"An error occurred trying to close the '\" + thread.getName() + \"' Thread. This might cause memory leaks.\",\n+                       e);\n+          }\n+        }\n+      }\n+    } catch (Exception e) {\n+      logger.debug(e.getMessage());\n+    }\n+  }\n+\n+  private boolean isThreadApplicationTimerThread(Thread thread) {\n+    return thread.getClass().getSimpleName().equals(ORACLE_DRIVER_TIMER_THREAD_CLASS_NAME)\n+        && thread.getName().contains(ORACLE_DRIVER_TIMER_THREAD_NAME)\n+        && isThreadLoadedByThisClassLoader(thread.getContextClassLoader());\n+  }\n+\n+  private boolean isThreadLoadedByThisClassLoader(ClassLoader threadBaseClassLoader) {\n+    ClassLoader threadClassLoader = threadBaseClassLoader;\n+    ClassLoader lastClassLoader = null;\n+    ClassLoader resourceReleaserClassLoader = this.getClass().getClassLoader();\n+\n+    while (threadClassLoader != null) {\n+      lastClassLoader = threadClassLoader;\n+      // It has to be the same reference not equals to\n+      if (threadClassLoader == resourceReleaserClassLoader) {\n+        return true;\n+      }\n+      threadClassLoader = threadClassLoader.getParent();\n+    }\n+\n+    while (resourceReleaserClassLoader != null) {\n+      if (lastClassLoader == resourceReleaserClassLoader) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29da11e5d25031981b8351051ba8610eddb6c22e"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzUyMTUwOnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/test/java/org/mule/runtime/module/artifact/classloader/ResourceReleaserTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo1Mzo0NFrOGtdRcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo1Mzo0NFrOGtdRcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMxODcwNg==", "bodyText": "don't do this. The runtime will use this by calling the release() method. Therefore, simply call the release method", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r450318706", "createdAt": "2020-07-06T15:53:44Z", "author": {"login": "marianogonzalez"}, "path": "modules/artifact/src/test/java/org/mule/runtime/module/artifact/classloader/ResourceReleaserTestCase.java", "diffHunk": "@@ -171,6 +178,36 @@ public void createsInstanceOnlyOnce() throws IOException {\n     }\n   }\n \n+  @Test\n+  public void stopOracleDriverLeakyThreads() throws Exception {\n+    JdbcResourceReleaser resourceReleaser = new JdbcResourceReleaser();\n+\n+    Method killOracleThreadsMethod = resourceReleaser.getClass().getDeclaredMethod(\"disposeOracleDriverThreads\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29da11e5d25031981b8351051ba8610eddb6c22e"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzUyMjc2OnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/test/java/org/mule/runtime/module/artifact/classloader/ResourceReleaserTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo1NDowNFrOGtdSRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo1NDowNFrOGtdSRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMxODkxNw==", "bodyText": "no System.out in tests", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r450318917", "createdAt": "2020-07-06T15:54:04Z", "author": {"login": "marianogonzalez"}, "path": "modules/artifact/src/test/java/org/mule/runtime/module/artifact/classloader/ResourceReleaserTestCase.java", "diffHunk": "@@ -171,6 +178,36 @@ public void createsInstanceOnlyOnce() throws IOException {\n     }\n   }\n \n+  @Test\n+  public void stopOracleDriverLeakyThreads() throws Exception {\n+    JdbcResourceReleaser resourceReleaser = new JdbcResourceReleaser();\n+\n+    Method killOracleThreadsMethod = resourceReleaser.getClass().getDeclaredMethod(\"disposeOracleDriverThreads\");\n+    killOracleThreadsMethod.setAccessible(true);\n+\n+    Timer timerThread = new Timer();\n+    TimerTask task = new TimerTask() {\n+\n+      @Override\n+      public void run() {\n+        System.out.println(\"Timer\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29da11e5d25031981b8351051ba8610eddb6c22e"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzUzMDcwOnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/test/java/org/mule/runtime/module/artifact/classloader/ResourceReleaserTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo1NjowNVrOGtdXUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo1NjowNVrOGtdXUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMyMDIwOQ==", "bodyText": "this is testing nothing:\n\nYou're not testing the classloading navigation part. This doesn't give any indication on wether this actually works with the DB connector\nYou're starting a timer, but at no point you gave it the correct name\nYou're not considering the possibility of the thread not being found and the check() never taking place.", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r450320209", "createdAt": "2020-07-06T15:56:05Z", "author": {"login": "marianogonzalez"}, "path": "modules/artifact/src/test/java/org/mule/runtime/module/artifact/classloader/ResourceReleaserTestCase.java", "diffHunk": "@@ -171,6 +178,36 @@ public void createsInstanceOnlyOnce() throws IOException {\n     }\n   }\n \n+  @Test\n+  public void stopOracleDriverLeakyThreads() throws Exception {\n+    JdbcResourceReleaser resourceReleaser = new JdbcResourceReleaser();\n+\n+    Method killOracleThreadsMethod = resourceReleaser.getClass().getDeclaredMethod(\"disposeOracleDriverThreads\");\n+    killOracleThreadsMethod.setAccessible(true);\n+\n+    Timer timerThread = new Timer();\n+    TimerTask task = new TimerTask() {\n+\n+      @Override\n+      public void run() {\n+        System.out.println(\"Timer\");\n+      }\n+    };\n+\n+    timerThread.schedule(task, 10, 100000);\n+\n+    Thread[] threads = new Thread[activeCount()];\n+    enumerate(threads);\n+\n+    killOracleThreadsMethod.invoke(resourceReleaser);\n+\n+    for (Thread thread : threads) {\n+      if (thread.getName().contains(ORACLE_DRIVER_TIMER_THREAD_NAME)) {\n+        check(15000, 100, () -> TERMINATED.equals(thread.getState()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29da11e5d25031981b8351051ba8610eddb6c22e"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTYxNTk0OnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxODoxNDozOVrOG6Roow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxODoxNDozOVrOG6Roow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1OTUyMw==", "bodyText": "https://stackoverflow.com/questions/16504140/thread-stop-deprecated", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r463759523", "createdAt": "2020-07-31T18:14:39Z", "author": {"login": "elrodro83"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -264,4 +280,98 @@ private void shutdownMySqlConnectionCleanupThreads(Class<?> classAbandonedConnec\n     throw new ClassNotFoundException(\"No MySql's AbandonedConnectionCleanupThread class was found\");\n   }\n \n+  private void disposeOracleDriverThreads() {\n+    try {\n+      if (JDBC_RESOURCE_RELEASER_AVOID_DISPOSE_ORACLE_THREADS) {\n+        return;\n+      }\n+\n+      Thread[] threads = new Thread[activeCount()];\n+      try {\n+        enumerate(threads);\n+      } catch (Throwable t) {\n+        logger\n+            .debug(\"An error occurred trying to obtain available Threads. Thread cleanup will be skipped.\", t);\n+        return;\n+      }\n+\n+      ClassLoader undeployedArtifactClassLoader = this.getClass().getClassLoader();\n+\n+      /* IMPORTANT: this is done to avoid metaspace OOM caused by oracle driver\n+      thread leak. This is only meant to stop TimerThread threads spawned\n+      by oracle driver's HAManager class. This timer cannot be fetched\n+      by reflection because, in order to do so, other oracle dependencies\n+      would be required.\n+      * */\n+      for (Thread thread : threads) {\n+        if (isOracleTimerThread(undeployedArtifactClassLoader, thread)) {\n+          try {\n+            thread.stop();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2d37ff23f2bbf9cafef5abd88a73d65f443c20b"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTYxODk3OnYy", "diffSide": "RIGHT", "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxODoxNTozNlrOG6Rqfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxODoxNTozNlrOG6Rqfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1OTk5OQ==", "bodyText": "this method should not finish return until all the interrupted threads are dead, because they may take a while in actually finishing", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r463759999", "createdAt": "2020-07-31T18:15:36Z", "author": {"login": "elrodro83"}, "path": "modules/artifact/src/main/java/org/mule/module/artifact/classloader/JdbcResourceReleaser.java", "diffHunk": "@@ -264,4 +280,98 @@ private void shutdownMySqlConnectionCleanupThreads(Class<?> classAbandonedConnec\n     throw new ClassNotFoundException(\"No MySql's AbandonedConnectionCleanupThread class was found\");\n   }\n \n+  private void disposeOracleDriverThreads() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2d37ff23f2bbf9cafef5abd88a73d65f443c20b"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTU4ODU5OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DbDriverThreadLeakTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODo0MjoxNFrOG7EqDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODo0MjoxNFrOG7EqDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU5NTQ3MA==", "bodyText": "@Issue", "url": "https://github.com/mulesoft/mule/pull/9000#discussion_r464595470", "createdAt": "2020-08-03T18:42:14Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DbDriverThreadLeakTestCase.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+\n+package org.mule.runtime.module.deployment.internal;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.Matchers.greaterThanOrEqualTo;\n+import static org.junit.Assert.assertThat;\n+import static org.mule.runtime.module.deployment.internal.DeploymentDirectoryWatcher.CHANGE_CHECK_INTERVAL_PROPERTY;\n+\n+import org.mule.runtime.deployment.model.api.application.Application;\n+import org.mule.runtime.module.artifact.api.classloader.ArtifactClassLoader;\n+import org.mule.runtime.module.deployment.api.DeploymentListener;\n+import org.mule.runtime.module.deployment.impl.internal.builder.ApplicationFileBuilder;\n+import org.mule.tck.junit4.rule.SystemProperty;\n+import org.mule.tck.probe.JUnitLambdaProbe;\n+import org.mule.tck.probe.PollingProber;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import java.lang.ref.PhantomReference;\n+import java.lang.ref.ReferenceQueue;\n+\n+public abstract class DbDriverThreadLeakTestCase extends AbstractDeploymentTestCase {\n+\n+  @Rule\n+  public SystemProperty directoryWatcherChangeCheckInterval = new SystemProperty(CHANGE_CHECK_INTERVAL_PROPERTY, \"5\");\n+\n+  private static final int PROBER_POLLING_INTERVAL = 500;\n+  private static final int PROBER_POLLING_TIMEOUT = 8000;\n+  public static final String ORACLE_DRIVER_TIMER_THREAD_NAME = \"Timer-\";\n+  public static final String ORACLE_DRIVER_TIMER_THREAD_CLASS_NAME = \"TimerThread\";\n+\n+  private final String xmlFile;\n+  private final String appName;\n+\n+  private TestDeploymentListener deploymentListener;\n+\n+  public DbDriverThreadLeakTestCase(boolean parallellDeployment, String appName, String xmlFile) {\n+    super(parallellDeployment);\n+    this.appName = appName;\n+    this.xmlFile = xmlFile;\n+  }\n+\n+  @Test\n+  public void oracleDriverTimerThreadsReleasedOnUndeploy() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51903361a93913dc4118c9869e72e44e1a661e39"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4874, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}