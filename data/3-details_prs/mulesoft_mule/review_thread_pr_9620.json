{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3ODY4NjE3", "number": 9620, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMjo1NjoyMVrOEwwL1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMjo1Nzo1MlrOEwwOhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NTU2NTY1OnYy", "diffSide": "RIGHT", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/processor/LoggerBlockingCategoriesTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMjo1NjoyMVrOHmgWeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMjo1NjoyMVrOHmgWeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEzNzk3Ng==", "bodyText": "@Issue(\"MULE-16414\")", "url": "https://github.com/mulesoft/mule/pull/9620#discussion_r510137976", "createdAt": "2020-10-22T12:56:21Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/processor/LoggerBlockingCategoriesTestCase.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.processor;\n+\n+import static java.util.Collections.singletonMap;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mule.runtime.api.component.AbstractComponent.LOCATION_KEY;\n+import static org.mule.runtime.core.api.processor.ReactiveProcessor.ProcessingType.BLOCKING;\n+import static org.mule.runtime.core.api.processor.ReactiveProcessor.ProcessingType.CPU_LITE;\n+import static org.mule.runtime.core.internal.processor.LoggerMessageProcessor.MULE_LOGGING_BLOCKING_CATEGORIES;\n+import static org.mule.test.allure.AllureConstants.Logging.LOGGING;\n+import static org.mule.test.allure.AllureConstants.Logging.LoggingStory.PROCESSING_TYPE;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.mule.runtime.core.api.processor.ReactiveProcessor.ProcessingType;\n+import org.mule.tck.junit4.AbstractMuleTestCase;\n+import org.mule.tck.junit4.rule.SystemProperty;\n+import org.slf4j.Logger;\n+\n+import io.qameta.allure.Description;\n+import io.qameta.allure.Feature;\n+import io.qameta.allure.Story;\n+\n+@Feature(LOGGING)\n+@Story(PROCESSING_TYPE)\n+public class LoggerBlockingCategoriesTestCase extends AbstractMuleTestCase {\n+\n+  @Rule\n+  public SystemProperty muleEnableStatistics =\n+      new SystemProperty(MULE_LOGGING_BLOCKING_CATEGORIES, \"some.category\");\n+\n+  @Test\n+  @Description(\"Blocking category type results in blocking processing type\")\n+  public void processTypeOfBlockingCategoryIsBlocking() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51bd9ef2a70c8c261e173967589606b74719126f"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NTU3MjUzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/internal/processor/LoggerMessageProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMjo1Nzo1MlrOHmgatQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMjo1Nzo1MlrOHmgatQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEzOTA2MQ==", "bodyText": "move this to MuleSystemProperties in mule-api with the proper documentation, since this property is intended for users to tune/configure", "url": "https://github.com/mulesoft/mule/pull/9620#discussion_r510139061", "createdAt": "2020-10-22T12:57:52Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/processor/LoggerMessageProcessor.java", "diffHunk": "@@ -32,13 +34,15 @@\n /**\n  * MessageProcessor implementation that logs the current element of a value evaluated from it using an expression evaluator. By\n  * default the current messages is logged using the {@link Level#INFO} level to the\n- * 'org.mule.runtime.core.internal.processor.LoggerMessageProcessor' category. The level and category can both be configured to suit\n- * your needs.\n+ * 'org.mule.runtime.core.internal.processor.LoggerMessageProcessor' category. The level and category can both be configured to\n+ * suit your needs.\n  */\n public class LoggerMessageProcessor extends AbstractComponent implements Processor, Initialisable, MuleContextAware {\n \n+  public static final String MULE_LOGGING_BLOCKING_CATEGORIES = SYSTEM_PROPERTY_PREFIX + \"logging.blockingCategories\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51bd9ef2a70c8c261e173967589606b74719126f"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4652, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}