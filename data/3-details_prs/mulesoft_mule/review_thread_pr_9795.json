{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MjI3MDY5", "number": 9795, "reviewThreads": {"totalCount": 39, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoyMjo0OVrOE-rQ_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNjoxMTozOFrOFGRgQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTU2MDMwOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/DefaultMutableConfigurationStats.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoyMjo0OVrOH79T3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzozMzozMFrOH8suSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzMjU0Mw==", "bodyText": "I would implement these deprecated methods as, for example:\naddActiveComponent();\nreturn runningSources.incrementAndGet();", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r532632543", "createdAt": "2020-11-30T14:22:49Z", "author": {"login": "ndinu"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/DefaultMutableConfigurationStats.java", "diffHunk": "@@ -89,6 +100,7 @@ public int discountInflightOperation() {\n   @Override\n   public int addRunningSource() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a94680aa854e7ffa4768bb4e18ebc5e1e9fd608"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwOTM1Mg==", "bodyText": "sure", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533409352", "createdAt": "2020-12-01T13:33:30Z", "author": {"login": "SebaElizalde"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/DefaultMutableConfigurationStats.java", "diffHunk": "@@ -89,6 +100,7 @@ public int discountInflightOperation() {\n   @Override\n   public int addRunningSource() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzMjU0Mw=="}, "originalCommit": {"oid": "0a94680aa854e7ffa4768bb4e18ebc5e1e9fd608"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTU2NDUzOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/MutableConfigurationStats.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoyMzo1NlrOH79Wqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoyMzo1NlrOH79Wqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzMzI1OA==", "bodyText": "addActiveComponent instead of discount", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r532633258", "createdAt": "2020-11-30T14:23:56Z", "author": {"login": "ndinu"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/MutableConfigurationStats.java", "diffHunk": "@@ -26,29 +26,57 @@\n    * Increments the return value of {@link #getInflightOperations()} by one\n    *\n    * @return the new value\n+   *\n+   * @deprecated Use {@link #discountActiveComponent()} instead.\n    */\n+  @Deprecated\n   int addInflightOperation();\n \n   /**\n    * Decrements the return value of {@link #getInflightOperations()} by one\n    *\n    * @return the new value\n+   *\n+   * @deprecated Use {@link #discountActiveComponent()} instead.\n    */\n+  @Deprecated\n   int discountInflightOperation();\n \n   /**\n    * Increments the return value of {@link #getRunningSources()} by one\n    *\n    * @return the new value\n    * @since 4.1.6 4.2.2 4.3.0\n+   *\n+   * @deprecated Use {@link #discountActiveComponent()} instead.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a94680aa854e7ffa4768bb4e18ebc5e1e9fd608"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTU2NjI5OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/MutableConfigurationStats.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoyNDoxN1rOH79XwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoyNDoxN1rOH79XwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzMzUzNw==", "bodyText": "addActiveComponent instead of discount", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r532633537", "createdAt": "2020-11-30T14:24:17Z", "author": {"login": "ndinu"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/MutableConfigurationStats.java", "diffHunk": "@@ -26,29 +26,57 @@\n    * Increments the return value of {@link #getInflightOperations()} by one\n    *\n    * @return the new value\n+   *\n+   * @deprecated Use {@link #discountActiveComponent()} instead.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a94680aa854e7ffa4768bb4e18ebc5e1e9fd608"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTU4NTgzOnYy", "diffSide": "RIGHT", "path": "tests/test-extensions/heisenberg-extension/src/main/java/org/mule/test/heisenberg/extension/HeisenbergOperations.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoyODo0MFrOH79jqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzo0NzowMFrOH8tQyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzNjU4NQ==", "bodyText": "Why do we remove the old operation?", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r532636585", "createdAt": "2020-11-30T14:28:40Z", "author": {"login": "ndinu"}, "path": "tests/test-extensions/heisenberg-extension/src/main/java/org/mule/test/heisenberg/extension/HeisenbergOperations.java", "diffHunk": "@@ -611,10 +609,25 @@ public void close(HeisenbergConnection connection) throws MuleException {\n     };\n   }\n \n-  public HeisenbergExtension getConfig(@Config HeisenbergExtension config, @Optional(defaultValue = \"false\") boolean fail) {\n-    if (fail) {\n-      throw new MuleRuntimeException(createStaticMessage(\"Failed returning the config\"));\n-    }\n-    return config;\n+  @MediaType(value = TEXT_PLAIN, strict = false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a94680aa854e7ffa4768bb4e18ebc5e1e9fd608"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQxODE4NA==", "bodyText": "I added to test https://www.mulesoft.org/jira/browse/MULE-18984 and get the config used. But this cannot be done for a streamed operation and also I found another way of getting the config during the tests config = (HeisenbergExtension) muleContext.getExtensionManager().getConfiguration(\"heisenbergWithShortExpiration\", event).getValue(); making this operation unnecessary. So I removed it to prevent the connector from getting even more bloated with operations and stuff.", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533418184", "createdAt": "2020-12-01T13:47:00Z", "author": {"login": "SebaElizalde"}, "path": "tests/test-extensions/heisenberg-extension/src/main/java/org/mule/test/heisenberg/extension/HeisenbergOperations.java", "diffHunk": "@@ -611,10 +609,25 @@ public void close(HeisenbergConnection connection) throws MuleException {\n     };\n   }\n \n-  public HeisenbergExtension getConfig(@Config HeisenbergExtension config, @Optional(defaultValue = \"false\") boolean fail) {\n-    if (fail) {\n-      throw new MuleRuntimeException(createStaticMessage(\"Failed returning the config\"));\n-    }\n-    return config;\n+  @MediaType(value = TEXT_PLAIN, strict = false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzNjU4NQ=="}, "originalCommit": {"oid": "0a94680aa854e7ffa4768bb4e18ebc5e1e9fd608"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTU5NDY5OnYy", "diffSide": "RIGHT", "path": "tests/test-extensions/heisenberg-extension/src/main/java/org/mule/test/heisenberg/extension/MoneyLaunderingOperation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDozMDozNFrOH79pJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzo0NzoyNFrOH8tR7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzNzk5MA==", "bodyText": "We have to be careful with this, are we sure we are not impacting other tests?", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r532637990", "createdAt": "2020-11-30T14:30:34Z", "author": {"login": "ndinu"}, "path": "tests/test-extensions/heisenberg-extension/src/main/java/org/mule/test/heisenberg/extension/MoneyLaunderingOperation.java", "diffHunk": "@@ -232,7 +234,7 @@ public void close(HeisenbergConnection heisenbergConnection) throws MuleExceptio\n         if (getPageCalls == failOn) {\n           throw new ModuleException(CONNECTIVITY, new ConnectionException(\"Failed to retrieve Page\"));\n         }\n-        if (getPageCalls > 2) {\n+        if (getPageCalls > 3) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a94680aa854e7ffa4768bb4e18ebc5e1e9fd608"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQxODQ3OQ==", "bodyText": "yeah checked it", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533418479", "createdAt": "2020-12-01T13:47:24Z", "author": {"login": "SebaElizalde"}, "path": "tests/test-extensions/heisenberg-extension/src/main/java/org/mule/test/heisenberg/extension/MoneyLaunderingOperation.java", "diffHunk": "@@ -232,7 +234,7 @@ public void close(HeisenbergConnection heisenbergConnection) throws MuleExceptio\n         if (getPageCalls == failOn) {\n           throw new ModuleException(CONNECTIVITY, new ConnectionException(\"Failed to retrieve Page\"));\n         }\n-        if (getPageCalls > 2) {\n+        if (getPageCalls > 3) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzNzk5MA=="}, "originalCommit": {"oid": "0a94680aa854e7ffa4768bb4e18ebc5e1e9fd608"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTYzMTI2OnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/DynamicConfigExpirationTestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDozODozOFrOH79_wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzo1ODowNlrOH8tvUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY0Mzc3Nw==", "bodyText": "Can we make the tests run faster? it seems unnecessary for them to take more than 20 seconds.", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r532643777", "createdAt": "2020-11-30T14:38:38Z", "author": {"login": "ndinu"}, "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/DynamicConfigExpirationTestCase.java", "diffHunk": "@@ -31,7 +35,7 @@\n \n public class DynamicConfigExpirationTestCase extends AbstractExtensionFunctionalTestCase {\n \n-  private static final int PROBER_TIMEOUT = 20000;\n+  private static final int PROBER_TIMEOUT = 30000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a94680aa854e7ffa4768bb4e18ebc5e1e9fd608"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQyNjAwMg==", "bodyText": "sure", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533426002", "createdAt": "2020-12-01T13:58:06Z", "author": {"login": "SebaElizalde"}, "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/DynamicConfigExpirationTestCase.java", "diffHunk": "@@ -31,7 +35,7 @@\n \n public class DynamicConfigExpirationTestCase extends AbstractExtensionFunctionalTestCase {\n \n-  private static final int PROBER_TIMEOUT = 20000;\n+  private static final int PROBER_TIMEOUT = 30000;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY0Mzc3Nw=="}, "originalCommit": {"oid": "0a94680aa854e7ffa4768bb4e18ebc5e1e9fd608"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTY0NzI4OnYy", "diffSide": "RIGHT", "path": "tests/test-extensions/heisenberg-extension/src/main/java/org/mule/test/heisenberg/extension/MoneyLaunderingOperation.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDo0MTo0OVrOH7-JWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1ODo1MFrOH82nYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY0NjIzNA==", "bodyText": "By changing the old operation, you had to change all the tests that used it, why not create a new one?", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r532646234", "createdAt": "2020-11-30T14:41:49Z", "author": {"login": "ndinu"}, "path": "tests/test-extensions/heisenberg-extension/src/main/java/org/mule/test/heisenberg/extension/MoneyLaunderingOperation.java", "diffHunk": "@@ -223,7 +223,9 @@ public void close(HeisenbergConnection heisenbergConnection) throws MuleExceptio\n     };\n   }\n \n-  public PagingProvider<HeisenbergConnection, Integer> failAtClosePagedOperation(Integer failOn) {\n+  public PagingProvider<HeisenbergConnection, Integer> failingConnectivityPagedOperation(Integer failOn,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a94680aa854e7ffa4768bb4e18ebc5e1e9fd608"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQyMzU4Nw==", "bodyText": "For reuse because the new operation I needed was almost identical to this one and I was trying to reduce the bloat on the heisenberg connector, and it was easy to change the tests that used it.", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533423587", "createdAt": "2020-12-01T13:54:40Z", "author": {"login": "SebaElizalde"}, "path": "tests/test-extensions/heisenberg-extension/src/main/java/org/mule/test/heisenberg/extension/MoneyLaunderingOperation.java", "diffHunk": "@@ -223,7 +223,9 @@ public void close(HeisenbergConnection heisenbergConnection) throws MuleExceptio\n     };\n   }\n \n-  public PagingProvider<HeisenbergConnection, Integer> failAtClosePagedOperation(Integer failOn) {\n+  public PagingProvider<HeisenbergConnection, Integer> failingConnectivityPagedOperation(Integer failOn,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY0NjIzNA=="}, "originalCommit": {"oid": "0a94680aa854e7ffa4768bb4e18ebc5e1e9fd608"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU3MTQyNw==", "bodyText": "revert this change. You're adding tests at the expense of others. These are not the same scenario", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533571427", "createdAt": "2020-12-01T16:58:50Z", "author": {"login": "marianogonzalez"}, "path": "tests/test-extensions/heisenberg-extension/src/main/java/org/mule/test/heisenberg/extension/MoneyLaunderingOperation.java", "diffHunk": "@@ -223,7 +223,9 @@ public void close(HeisenbergConnection heisenbergConnection) throws MuleExceptio\n     };\n   }\n \n-  public PagingProvider<HeisenbergConnection, Integer> failAtClosePagedOperation(Integer failOn) {\n+  public PagingProvider<HeisenbergConnection, Integer> failingConnectivityPagedOperation(Integer failOn,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY0NjIzNA=="}, "originalCommit": {"oid": "0a94680aa854e7ffa4768bb4e18ebc5e1e9fd608"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTY4MTg3OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDo0ODo1M1rOH7-egw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzo1Nzo0NVrOH8tubw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY1MTY1MQ==", "bodyText": "This still needs to be decorated by the componentDecoratorFactory", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r532651651", "createdAt": "2020-11-30T14:48:53Z", "author": {"login": "ndinu"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "diffHunk": "@@ -145,10 +149,10 @@ protected Message toMessage(Object value, ExecutionContextAdapter operationConte\n       if (resultValue.getOutput() instanceof InputStream) {\n         ConnectionHandler connectionHandler = (ConnectionHandler) operationContext.getVariable(CONNECTION_PARAM);\n         if (connectionHandler != null && supportsStreaming(operationContext.getComponentModel())) {\n-          resultValue = resultValue.copy()\n-              .output(componentDecoratorFactory\n-                  .decorateOutput(new ConnectedInputStreamWrapper((InputStream) resultValue.getOutput(), connectionHandler),\n-                                  event.getCorrelationId()))\n+          resultValue = resultValue\n+              .copy().output(new ConnectedInputStreamWrapper((InputStream) resultValue.getOutput(), connectionHandler,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a94680aa854e7ffa4768bb4e18ebc5e1e9fd608"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQyNTc3NQ==", "bodyText": "right, my bad", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533425775", "createdAt": "2020-12-01T13:57:45Z", "author": {"login": "SebaElizalde"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "diffHunk": "@@ -145,10 +149,10 @@ protected Message toMessage(Object value, ExecutionContextAdapter operationConte\n       if (resultValue.getOutput() instanceof InputStream) {\n         ConnectionHandler connectionHandler = (ConnectionHandler) operationContext.getVariable(CONNECTION_PARAM);\n         if (connectionHandler != null && supportsStreaming(operationContext.getComponentModel())) {\n-          resultValue = resultValue.copy()\n-              .output(componentDecoratorFactory\n-                  .decorateOutput(new ConnectedInputStreamWrapper((InputStream) resultValue.getOutput(), connectionHandler),\n-                                  event.getCorrelationId()))\n+          resultValue = resultValue\n+              .copy().output(new ConnectedInputStreamWrapper((InputStream) resultValue.getOutput(), connectionHandler,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY1MTY1MQ=="}, "originalCommit": {"oid": "0a94680aa854e7ffa4768bb4e18ebc5e1e9fd608"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Njk2NDQ0OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/DefaultMutableConfigurationStats.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo1NjoyNVrOH8wxeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzowOToyMFrOH9lTJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ3NTcwNQ==", "bodyText": "There is no need to call the \"updateLastUsed\" method on all the deprecated methods, since the add/discount activeComponente will end up updating it anyway.", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533475705", "createdAt": "2020-12-01T14:56:25Z", "author": {"login": "ndinu"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/DefaultMutableConfigurationStats.java", "diffHunk": "@@ -80,7 +80,7 @@ public int getActiveComponents() {\n   @Override\n   public int addInflightOperation() {\n     updateLastUsed();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU3MDQzMA==", "bodyText": "I thought the intention behind calling the add/discount method directly was to abstract from its implementation, but here we are using the knowledge that it also calls updateLastUsed. Also if I delete the line updateLastUsed it will be just like before de PR review only that we shifted some code around.", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533570430", "createdAt": "2020-12-01T16:57:31Z", "author": {"login": "SebaElizalde"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/DefaultMutableConfigurationStats.java", "diffHunk": "@@ -80,7 +80,7 @@ public int getActiveComponents() {\n   @Override\n   public int addInflightOperation() {\n     updateLastUsed();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ3NTcwNQ=="}, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNjI5NQ==", "bodyText": "I don't understand what you mean. This method needs to delegate to addActiveComponent() which will update the timestamp. I see no reason why updateLastUsed() should be called from here", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r534336295", "createdAt": "2020-12-02T17:09:20Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/DefaultMutableConfigurationStats.java", "diffHunk": "@@ -80,7 +80,7 @@ public int getActiveComponents() {\n   @Override\n   public int addInflightOperation() {\n     updateLastUsed();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ3NTcwNQ=="}, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzQ3NzcyOnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/DynamicConfigExpirationTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjozOTo1MFrOH81wig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjozOTo1MFrOH81wig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU1NzM4Ng==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533557386", "createdAt": "2020-12-01T16:39:50Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/DynamicConfigExpirationTestCase.java", "diffHunk": "@@ -127,14 +132,38 @@ public void expirationWorksAfterRestartingSource() throws Exception {\n \n   @Test\n   public void dynamicConfigIsExpiredBeforeFlowEnds() throws Exception {\n-    flowRunner(\"dynamicConfigIsExpiredBeforeFlowEnds\").withPayload(\"Walter Blanco\").run();\n-    assertDisposedStatuses();\n+    flowRunner(\"dynamicConfigIsExpiredBeforeFlowEnds\").run();\n+    assertDisposedStatuses(Arrays.asList(0, 1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzQ4MzQ0OnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/resources/dynamic-config-expiration.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo0MDo1OVrOH810Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzoxOToyOVrOH83f4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU1ODI5NA==", "bodyText": "why reduce this? Can't this make the test flaky when running in jenkins?", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533558294", "createdAt": "2020-12-01T16:40:59Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/resources/dynamic-config-expiration.xml", "diffHunk": "@@ -8,7 +8,7 @@\n       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd\">\n \n     <configuration>\n-        <dynamic-config-expiration frequency=\"1000\" timeUnit=\"MILLISECONDS\">\n+        <dynamic-config-expiration frequency=\"500\" timeUnit=\"MILLISECONDS\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU4NTg5MQ==", "bodyText": "It is done to detect expired configs faster, otherwise expiration times need to be longer in order to accomodate for the case where it just polled and it needs to wait another full second for the re-check (this in turn makes the whole test suite take longer). Pretty sure it does not affect any test, and even if it does it would mean that the test was wrong or flaky.", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533585891", "createdAt": "2020-12-01T17:19:29Z", "author": {"login": "SebaElizalde"}, "path": "modules/extensions-spring-support/src/test/resources/dynamic-config-expiration.xml", "diffHunk": "@@ -8,7 +8,7 @@\n       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd\">\n \n     <configuration>\n-        <dynamic-config-expiration frequency=\"1000\" timeUnit=\"MILLISECONDS\">\n+        <dynamic-config-expiration frequency=\"500\" timeUnit=\"MILLISECONDS\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU1ODI5NA=="}, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzQ4NDQ3OnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/PagedOperationExecutionTestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo0MToxNVrOH8102w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzoyODo0MFrOH834XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU1ODQ5MQ==", "bodyText": "why this change? Weird that no other assertion changed", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533558491", "createdAt": "2020-12-01T16:41:15Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/PagedOperationExecutionTestCase.java", "diffHunk": "@@ -121,7 +121,7 @@ public void pagingProviderIsClosedSafelyDuringExceptionOnFirstPage() throws Exce\n   @Test\n   public void pagingProviderIsClosedSafelyAfterDataSourceIsFullyConsumed() throws Exception {\n     resetCounters();\n-    flowRunner(\"consumeFailAtClosePagedOperation\").withPayload(4).run();\n+    flowRunner(\"consumeFailAtClosePagedOperation\").withPayload(-1).run();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU5MjE1Nw==", "bodyText": "The 4 is a parameter indicating that on the 4th page it would fail, but on the 3rd page everything is consumed and there are no more pages, thus it does not fail. I think the -1 is more explicit of the intention \"to never fail\". I can revert it tho", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533592157", "createdAt": "2020-12-01T17:28:40Z", "author": {"login": "SebaElizalde"}, "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/PagedOperationExecutionTestCase.java", "diffHunk": "@@ -121,7 +121,7 @@ public void pagingProviderIsClosedSafelyDuringExceptionOnFirstPage() throws Exce\n   @Test\n   public void pagingProviderIsClosedSafelyAfterDataSourceIsFullyConsumed() throws Exception {\n     resetCounters();\n-    flowRunner(\"consumeFailAtClosePagedOperation\").withPayload(4).run();\n+    flowRunner(\"consumeFailAtClosePagedOperation\").withPayload(-1).run();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU1ODQ5MQ=="}, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzQ4OTU2OnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/resources/dynamic-config-expiration.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo0MjoyMVrOH814Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo0MjoyMVrOH814Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU1OTMxMA==", "bodyText": "remove?", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533559310", "createdAt": "2020-12-01T16:42:21Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/resources/dynamic-config-expiration.xml", "diffHunk": "@@ -140,4 +166,42 @@\n         <logger level=\"ERROR\" message=\"#[ import * from dw::Runtime --- 'Waiting for 10000ms' wait 10000]\"/>\n     </flow>\n \n+    <flow name=\"dynamicWithShortExpirationForPagedOperation\">\n+        <heisenberg:failing-connectivity-paged-operation failOn=\"#[vars.failOn]\" failAtClose=\"false\" config-ref=\"heisenbergWithShortExpiration\"/>\n+        <test:processor class=\"org.mule.test.module.extension.DynamicConfigExpirationTestCase$CaptureProcessor\"/>\n+        <foreach collection=\"#[payload]\">\n+            <logger level=\"ERROR\" message=\"#[payload]\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzUxMjc0OnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/resources/dynamic-config-expiration.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo0NzoyNFrOH82Glg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzowNjo0MVrOH9lLzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MzAzMA==", "bodyText": "this is unnecesary. The test:processor operation has a waitTime parameter which automatically sleeps", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533563030", "createdAt": "2020-12-01T16:47:24Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/resources/dynamic-config-expiration.xml", "diffHunk": "@@ -140,4 +166,42 @@\n         <logger level=\"ERROR\" message=\"#[ import * from dw::Runtime --- 'Waiting for 10000ms' wait 10000]\"/>\n     </flow>\n \n+    <flow name=\"dynamicWithShortExpirationForPagedOperation\">\n+        <heisenberg:failing-connectivity-paged-operation failOn=\"#[vars.failOn]\" failAtClose=\"false\" config-ref=\"heisenbergWithShortExpiration\"/>\n+        <test:processor class=\"org.mule.test.module.extension.DynamicConfigExpirationTestCase$CaptureProcessor\"/>\n+        <foreach collection=\"#[payload]\">\n+            <logger level=\"ERROR\" message=\"#[payload]\" />\n+            <test:processor class=\"org.mule.test.module.extension.DynamicConfigExpirationTestCase$CaptureProcessor\"/>\n+            <logger level=\"ERROR\" message=\"#[%dw 2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMyOTc5OA==", "bodyText": "yes but waitTime is not applied when you use a custom processor due to how FunctionalTestProcessor is coded, nor can you access the waitTime variable in the custom processor :/\nI can replace the dataweave sleeps with <test:processor waitTime=\"1000\"> but I think it is too much overhead maybe?", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r534329798", "createdAt": "2020-12-02T17:00:11Z", "author": {"login": "SebaElizalde"}, "path": "modules/extensions-spring-support/src/test/resources/dynamic-config-expiration.xml", "diffHunk": "@@ -140,4 +166,42 @@\n         <logger level=\"ERROR\" message=\"#[ import * from dw::Runtime --- 'Waiting for 10000ms' wait 10000]\"/>\n     </flow>\n \n+    <flow name=\"dynamicWithShortExpirationForPagedOperation\">\n+        <heisenberg:failing-connectivity-paged-operation failOn=\"#[vars.failOn]\" failAtClose=\"false\" config-ref=\"heisenbergWithShortExpiration\"/>\n+        <test:processor class=\"org.mule.test.module.extension.DynamicConfigExpirationTestCase$CaptureProcessor\"/>\n+        <foreach collection=\"#[payload]\">\n+            <logger level=\"ERROR\" message=\"#[payload]\" />\n+            <test:processor class=\"org.mule.test.module.extension.DynamicConfigExpirationTestCase$CaptureProcessor\"/>\n+            <logger level=\"ERROR\" message=\"#[%dw 2.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MzAzMA=="}, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNDQxNQ==", "bodyText": "on the contrary... using DW for sleeping is the overkill thing", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r534334415", "createdAt": "2020-12-02T17:06:41Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/resources/dynamic-config-expiration.xml", "diffHunk": "@@ -140,4 +166,42 @@\n         <logger level=\"ERROR\" message=\"#[ import * from dw::Runtime --- 'Waiting for 10000ms' wait 10000]\"/>\n     </flow>\n \n+    <flow name=\"dynamicWithShortExpirationForPagedOperation\">\n+        <heisenberg:failing-connectivity-paged-operation failOn=\"#[vars.failOn]\" failAtClose=\"false\" config-ref=\"heisenbergWithShortExpiration\"/>\n+        <test:processor class=\"org.mule.test.module.extension.DynamicConfigExpirationTestCase$CaptureProcessor\"/>\n+        <foreach collection=\"#[payload]\">\n+            <logger level=\"ERROR\" message=\"#[payload]\" />\n+            <test:processor class=\"org.mule.test.module.extension.DynamicConfigExpirationTestCase$CaptureProcessor\"/>\n+            <logger level=\"ERROR\" message=\"#[%dw 2.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MzAzMA=="}, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzUxMzQ0OnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/resources/dynamic-config-expiration.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo0NzozM1rOH82G_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo0NzozM1rOH82G_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MzEzMw==", "bodyText": "same... remove", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533563133", "createdAt": "2020-12-01T16:47:33Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/resources/dynamic-config-expiration.xml", "diffHunk": "@@ -140,4 +166,42 @@\n         <logger level=\"ERROR\" message=\"#[ import * from dw::Runtime --- 'Waiting for 10000ms' wait 10000]\"/>\n     </flow>\n \n+    <flow name=\"dynamicWithShortExpirationForPagedOperation\">\n+        <heisenberg:failing-connectivity-paged-operation failOn=\"#[vars.failOn]\" failAtClose=\"false\" config-ref=\"heisenbergWithShortExpiration\"/>\n+        <test:processor class=\"org.mule.test.module.extension.DynamicConfigExpirationTestCase$CaptureProcessor\"/>\n+        <foreach collection=\"#[payload]\">\n+            <logger level=\"ERROR\" message=\"#[payload]\" />\n+            <test:processor class=\"org.mule.test.module.extension.DynamicConfigExpirationTestCase$CaptureProcessor\"/>\n+            <logger level=\"ERROR\" message=\"#[%dw 2.0\n+                            import * from dw::Runtime\n+                            output application/json\n+                            ---\n+                            'Waiting for 5000 milliseconds' wait 4000]\"/>\n+        </foreach>\n+        <logger level=\"ERROR\" message=\"#[%dw 2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzUxNDUyOnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/resources/dynamic-config-expiration.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo0Nzo0OVrOH82Htg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo0Nzo0OVrOH82Htg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MzMxOA==", "bodyText": "remove these sleeps all over the place", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533563318", "createdAt": "2020-12-01T16:47:49Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/resources/dynamic-config-expiration.xml", "diffHunk": "@@ -140,4 +166,42 @@\n         <logger level=\"ERROR\" message=\"#[ import * from dw::Runtime --- 'Waiting for 10000ms' wait 10000]\"/>\n     </flow>\n \n+    <flow name=\"dynamicWithShortExpirationForPagedOperation\">\n+        <heisenberg:failing-connectivity-paged-operation failOn=\"#[vars.failOn]\" failAtClose=\"false\" config-ref=\"heisenbergWithShortExpiration\"/>\n+        <test:processor class=\"org.mule.test.module.extension.DynamicConfigExpirationTestCase$CaptureProcessor\"/>\n+        <foreach collection=\"#[payload]\">\n+            <logger level=\"ERROR\" message=\"#[payload]\" />\n+            <test:processor class=\"org.mule.test.module.extension.DynamicConfigExpirationTestCase$CaptureProcessor\"/>\n+            <logger level=\"ERROR\" message=\"#[%dw 2.0\n+                            import * from dw::Runtime\n+                            output application/json\n+                            ---\n+                            'Waiting for 5000 milliseconds' wait 4000]\"/>\n+        </foreach>\n+        <logger level=\"ERROR\" message=\"#[%dw 2.0\n+                            import * from dw::Runtime\n+                            output application/json\n+                            ---\n+                            'Waiting for 5000 milliseconds' wait 4000]\"/>\n+        <test:processor class=\"org.mule.test.module.extension.DynamicConfigExpirationTestCase$CaptureProcessor\"/>\n+    </flow>\n+\n+    <flow name=\"dynamicWithShortExpirationForStreamingOperation\">\n+        <heisenberg:name-as-stream-connected config-ref=\"heisenbergWithShortExpiration\" />\n+        <test:processor class=\"org.mule.test.module.extension.DynamicConfigExpirationTestCase$CaptureProcessor\"/>\n+        <logger level=\"ERROR\" message=\"#[%dw 2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzUxNzU2OnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/resources/heisenberg-paged-operation-config.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo0ODozMlrOH82Jvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMjoyOTowMVrOH9YrEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MzgzOA==", "bodyText": "isn't this changing the test condition? You should leave these as they are and add new ones instead", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533563838", "createdAt": "2020-12-01T16:48:32Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/resources/heisenberg-paged-operation-config.xml", "diffHunk": "@@ -53,16 +53,16 @@\n     </flow>\n \n     <flow name=\"consumeFailAtClosePagedOperation\">\n-        <heisenberg:fail-at-close-paged-operation failOn=\"#[payload]\" config-ref=\"heisenberg\"/>\n+        <heisenberg:failing-connectivity-paged-operation failOn=\"#[payload]\" config-ref=\"heisenberg\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDEyOTQyNA==", "bodyText": "okay", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r534129424", "createdAt": "2020-12-02T12:29:01Z", "author": {"login": "SebaElizalde"}, "path": "modules/extensions-spring-support/src/test/resources/heisenberg-paged-operation-config.xml", "diffHunk": "@@ -53,16 +53,16 @@\n     </flow>\n \n     <flow name=\"consumeFailAtClosePagedOperation\">\n-        <heisenberg:fail-at-close-paged-operation failOn=\"#[payload]\" config-ref=\"heisenberg\"/>\n+        <heisenberg:failing-connectivity-paged-operation failOn=\"#[payload]\" config-ref=\"heisenberg\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MzgzOA=="}, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzUxODAyOnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/resources/heisenberg-paged-operation-config.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo0ODo0MFrOH82KFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo0ODo0MFrOH82KFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MzkyNA==", "bodyText": "same", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533563924", "createdAt": "2020-12-01T16:48:40Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/resources/heisenberg-paged-operation-config.xml", "diffHunk": "@@ -53,16 +53,16 @@\n     </flow>\n \n     <flow name=\"consumeFailAtClosePagedOperation\">\n-        <heisenberg:fail-at-close-paged-operation failOn=\"#[payload]\" config-ref=\"heisenberg\"/>\n+        <heisenberg:failing-connectivity-paged-operation failOn=\"#[payload]\" config-ref=\"heisenberg\"/>\n         <foreach collection=\"#[payload]\">\n             <logger level=\"ERROR\" message=\"#[payload]\"/>\n         </foreach>\n     </flow>\n \n     <flow name=\"failAtClosePagedOperation\">\n-        <heisenberg:fail-at-close-paged-operation failOn=\"#[payload]\" config-ref=\"heisenberg\">\n+        <heisenberg:failing-connectivity-paged-operation failOn=\"#[payload]\" config-ref=\"heisenberg\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzUyNjkwOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1MDozMlrOH82PgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMjoyOTo1N1rOH9YtOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2NTMxMg==", "bodyText": "what's changed here? if it's only formatting then revert", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533565312", "createdAt": "2020-12-01T16:50:32Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "diffHunk": "@@ -255,7 +263,10 @@ private Object streamingContent(Object value,\n       ConnectionHandler connectionHandler = (ConnectionHandler) operationContext.getVariable(CONNECTION_PARAM);\n       if (connectionHandler != null && supportsStreaming(operationContext.getComponentModel())) {\n         value = componentDecoratorFactory\n-            .decorateOutput(new ConnectedInputStreamWrapper((InputStream) value, connectionHandler), correlationId);\n+            .decorateOutput(new ConnectedInputStreamWrapper((InputStream) value, connectionHandler,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDEyOTk3Ng==", "bodyText": "there is change", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r534129976", "createdAt": "2020-12-02T12:29:57Z", "author": {"login": "SebaElizalde"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "diffHunk": "@@ -255,7 +263,10 @@ private Object streamingContent(Object value,\n       ConnectionHandler connectionHandler = (ConnectionHandler) operationContext.getVariable(CONNECTION_PARAM);\n       if (connectionHandler != null && supportsStreaming(operationContext.getComponentModel())) {\n         value = componentDecoratorFactory\n-            .decorateOutput(new ConnectedInputStreamWrapper((InputStream) value, connectionHandler), correlationId);\n+            .decorateOutput(new ConnectedInputStreamWrapper((InputStream) value, connectionHandler,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2NTMxMg=="}, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzUzNDA3OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1MTo1OFrOH82TxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1MTo1OFrOH82TxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2NjQwNQ==", "bodyText": "refactor per comments in ConnectedInputStreamWrapper", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533566405", "createdAt": "2020-12-01T16:51:58Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "diffHunk": "@@ -293,13 +304,36 @@ protected MediaType resolveMediaType(Object value, MediaType contextMimeType, Ch\n     return contextMimeType.withCharset(contextEncoding);\n   }\n \n+  private Runnable getIncrementActiveComponent(ExecutionContextAdapter executionContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzUzNTIzOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1MjoxM1rOH82UgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1MjoxM1rOH82UgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2NjU5Mg==", "bodyText": "rename: getDecrementActiveComponentTask", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533566592", "createdAt": "2020-12-01T16:52:13Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "diffHunk": "@@ -293,13 +304,36 @@ protected MediaType resolveMediaType(Object value, MediaType contextMimeType, Ch\n     return contextMimeType.withCharset(contextEncoding);\n   }\n \n+  private Runnable getIncrementActiveComponent(ExecutionContextAdapter executionContext) {\n+    Optional<ConfigurationInstance> config = executionContext.getConfiguration();\n+    if (config.isPresent()) {\n+      return () -> tryToMutateConfigurationStats(config.get(), (MutableConfigurationStats::addActiveComponent));\n+    }\n+    return null;\n+  }\n+\n+  private Runnable getDecrementActiveComponent(ExecutionContextAdapter executionContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzU0MTY4OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1Mzo0OFrOH82Ykg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1Mzo0OFrOH82Ykg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2NzYzNA==", "bodyText": "this doesn't make sense. If you want this task executed when the instance is created, then call it after doing the new... This should not be the constructor's responsibility", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533567634", "createdAt": "2020-12-01T16:53:48Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "diffHunk": "@@ -293,13 +304,36 @@ protected MediaType resolveMediaType(Object value, MediaType contextMimeType, Ch\n     return contextMimeType.withCharset(contextEncoding);\n   }\n \n+  private Runnable getIncrementActiveComponent(ExecutionContextAdapter executionContext) {\n+    Optional<ConfigurationInstance> config = executionContext.getConfiguration();\n+    if (config.isPresent()) {\n+      return () -> tryToMutateConfigurationStats(config.get(), (MutableConfigurationStats::addActiveComponent));\n+    }\n+    return null;\n+  }\n+\n+  private Runnable getDecrementActiveComponent(ExecutionContextAdapter executionContext) {\n+    Optional<ConfigurationInstance> config = executionContext.getConfiguration();\n+    if (config.isPresent()) {\n+      return () -> tryToMutateConfigurationStats(config.get(), (MutableConfigurationStats::discountActiveComponent));\n+    }\n+    return null;\n+  }\n+\n   protected class ConnectedInputStreamWrapper extends ProxyInputStream {\n \n     private final ConnectionHandler<?> connectionHandler;\n+    private final Runnable onClose;\n+    private AtomicBoolean alreadyClosed = new AtomicBoolean(false);\n \n-    private ConnectedInputStreamWrapper(InputStream delegate, ConnectionHandler<?> connectionHandler) {\n+    private ConnectedInputStreamWrapper(InputStream delegate, ConnectionHandler<?> connectionHandler, Runnable onCreate,\n+                                        Runnable onClose) {\n       super(delegate);\n       this.connectionHandler = connectionHandler;\n+      this.onClose = onClose;\n+      if (onCreate != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzU0Njk2OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1NDo1M1rOH82b4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1NDo1M1rOH82b4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2ODQ4MQ==", "bodyText": "this should be a try.finally of it's own.. .this needs to happen even if connectionHandler.release() fails", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533568481", "createdAt": "2020-12-01T16:54:53Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "diffHunk": "@@ -322,6 +356,9 @@ public void close() throws IOException {\n         in = new ClosedInputStream();\n       } finally {\n         connectionHandler.release();\n+        if (onClose != null && alreadyClosed.compareAndSet(false, true)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzU1MzEzOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1NjoxNFrOH82fwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1NjoxNFrOH82fwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2OTQ3Mg==", "bodyText": "this tryToMutateConfigurationStats is overkill. Just extract the the stats object in the constructor and make sure it's mutable there. No need to extract it, test it and instantiate a lamba every time", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533569472", "createdAt": "2020-12-01T16:56:14Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "diffHunk": "@@ -83,6 +88,7 @@ public PagingProviderProducer(PagingProvider<Object, T> delegate,\n     this.supportsOAuth = supportsOAuth;\n     retryPolicy = (RetryPolicyTemplate) executionContext.getRetryPolicyTemplate().orElseGet(NoRetryPolicyTemplate::new);\n     connectionSupplierFactory = createConnectionSupplierFactory();\n+    tryToMutateConfigurationStats(config, (MutableConfigurationStats::addActiveComponent));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzU1MzcyOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/util/MuleExtensionUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1NjoyMVrOH82gJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1NjoyMVrOH82gJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2OTU3Mw==", "bodyText": "delete", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533569573", "createdAt": "2020-12-01T16:56:21Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/util/MuleExtensionUtils.java", "diffHunk": "@@ -550,4 +553,20 @@ public static MutableConfigurationStats getMutableConfigurationStats(ExecutionCo\n       return null;\n     }\n   }\n+\n+  /**\n+   * Calls a consumer of the {@link MutableConfigurationStats} for a given {@link ConfigurationInstance}\n+   *\n+   * @param configurationInstance the {@link ConfigurationInstance} from where to extract the stats\n+   * @param mutableConfigurationStatsConsumer the {@link MutableConfigurationStats} consumer\n+   *\n+   * @since 4.2.3 4.3.1 4.4.0\n+   */\n+  public static void tryToMutateConfigurationStats(ConfigurationInstance configurationInstance,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzU2MTU2OnYy", "diffSide": "RIGHT", "path": "tests/test-extensions/heisenberg-extension/src/main/java/org/mule/test/heisenberg/extension/HeisenbergOperations.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1ODoxMFrOH82lOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1ODoxMFrOH82lOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU3MDg3Mg==", "bodyText": "timesRead -> bytesRead", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533570872", "createdAt": "2020-12-01T16:58:10Z", "author": {"login": "marianogonzalez"}, "path": "tests/test-extensions/heisenberg-extension/src/main/java/org/mule/test/heisenberg/extension/HeisenbergOperations.java", "diffHunk": "@@ -611,10 +609,25 @@ public void close(HeisenbergConnection connection) throws MuleException {\n     };\n   }\n \n-  public HeisenbergExtension getConfig(@Config HeisenbergExtension config, @Optional(defaultValue = \"false\") boolean fail) {\n-    if (fail) {\n-      throw new MuleRuntimeException(createStaticMessage(\"Failed returning the config\"));\n-    }\n-    return config;\n+  @MediaType(value = TEXT_PLAIN, strict = false)\n+  public InputStream nameAsStreamConnected(@Config HeisenbergExtension config, @Connection HeisenbergConnection connection) {\n+    return new InputStream() {\n+\n+      private int timesRead = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzU2Njg0OnYy", "diffSide": "RIGHT", "path": "tests/test-extensions/heisenberg-extension/src/main/java/org/mule/test/heisenberg/extension/MoneyLaunderingOperation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1OToxM1rOH82olw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNjo1OToxM1rOH82olw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU3MTczNQ==", "bodyText": "why from 2 to 3?", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r533571735", "createdAt": "2020-12-01T16:59:13Z", "author": {"login": "marianogonzalez"}, "path": "tests/test-extensions/heisenberg-extension/src/main/java/org/mule/test/heisenberg/extension/MoneyLaunderingOperation.java", "diffHunk": "@@ -232,7 +234,7 @@ public void close(HeisenbergConnection heisenbergConnection) throws MuleExceptio\n         if (getPageCalls == failOn) {\n           throw new ModuleException(CONNECTIVITY, new ConnectionException(\"Failed to retrieve Page\"));\n         }\n-        if (getPageCalls > 2) {\n+        if (getPageCalls > 3) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cda0b35badaf19764513051264b2388f6a11415"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjUyMjQ3OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/DefaultMutableConfigurationStats.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzowOTozOFrOH9lUIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzowOTozOFrOH9lUIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNjU0NQ==", "bodyText": "remove", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r534336545", "createdAt": "2020-12-02T17:09:38Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/DefaultMutableConfigurationStats.java", "diffHunk": "@@ -80,6 +90,7 @@ public int addInflightOperation() {\n   @Override\n   public int discountInflightOperation() {\n     updateLastUsed();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be4e39b623e4195387b4819a2ee1305d3bd8ba76"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjUyMzA0OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/DefaultMutableConfigurationStats.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzowOTo0OFrOH9lUfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzowOTo0OFrOH9lUfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNjYzNg==", "bodyText": "remove", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r534336636", "createdAt": "2020-12-02T17:09:48Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/DefaultMutableConfigurationStats.java", "diffHunk": "@@ -89,6 +100,7 @@ public int discountInflightOperation() {\n   @Override\n   public int addRunningSource() {\n     updateLastUsed();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be4e39b623e4195387b4819a2ee1305d3bd8ba76"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjUyMzQ1OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/DefaultMutableConfigurationStats.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzowOTo1NFrOH9lUww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzowOTo1NFrOH9lUww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNjcwNw==", "bodyText": "remove", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r534336707", "createdAt": "2020-12-02T17:09:54Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/config/DefaultMutableConfigurationStats.java", "diffHunk": "@@ -98,6 +110,25 @@ public int addRunningSource() {\n   @Override\n   public int discountRunningSource() {\n     updateLastUsed();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be4e39b623e4195387b4819a2ee1305d3bd8ba76"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjUzNzY5OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzoxMzoxNlrOH9ldnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODoyMjo1NFrOH9oTzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzODk3Mw==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r534338973", "createdAt": "2020-12-02T17:13:16Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "diffHunk": "@@ -228,13 +226,13 @@ protected Message toMessage(Object value, ExecutionContextAdapter operationConte\n       if (result.getOutput() instanceof InputStream) {\n         ConnectionHandler connectionHandler = (ConnectionHandler) operationContext.getVariable(CONNECTION_PARAM);\n         if (connectionHandler != null && supportsStreaming(operationContext.getComponentModel())) {\n-          result = result.copy()\n-              .output(StreamingUtils.streamingContent(new ConnectedInputStreamWrapper(componentDecoratorFactory\n-                  .decorateOutput((InputStream) result.getOutput(), event.getCorrelationId()), connectionHandler,\n-                                                                                      getIncrementActiveComponent(operationContext),\n-                                                                                      getDecrementActiveComponent(operationContext)),\n-                                                      cursorProviderFactory, event,\n-                                                      operationContext.getComponent().getLocation()))\n+          ConnectedInputStreamWrapper streamWrapper =\n+              new ConnectedInputStreamWrapper(componentDecoratorFactory.decorateOutput((InputStream) result.getOutput(),\n+                                                                                       event.getCorrelationId()),\n+                                              connectionHandler, getDecrementActiveComponentTask(operationContext));\n+          incrementActiveComponent(operationContext);\n+          result = result.copy().output(StreamingUtils.streamingContent(streamWrapper, cursorProviderFactory, event,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be4e39b623e4195387b4819a2ee1305d3bd8ba76"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM4NTYxMw==", "bodyText": "there is another streamingContent method in this class.", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r534385613", "createdAt": "2020-12-02T18:22:54Z", "author": {"login": "SebaElizalde"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "diffHunk": "@@ -228,13 +226,13 @@ protected Message toMessage(Object value, ExecutionContextAdapter operationConte\n       if (result.getOutput() instanceof InputStream) {\n         ConnectionHandler connectionHandler = (ConnectionHandler) operationContext.getVariable(CONNECTION_PARAM);\n         if (connectionHandler != null && supportsStreaming(operationContext.getComponentModel())) {\n-          result = result.copy()\n-              .output(StreamingUtils.streamingContent(new ConnectedInputStreamWrapper(componentDecoratorFactory\n-                  .decorateOutput((InputStream) result.getOutput(), event.getCorrelationId()), connectionHandler,\n-                                                                                      getIncrementActiveComponent(operationContext),\n-                                                                                      getDecrementActiveComponent(operationContext)),\n-                                                      cursorProviderFactory, event,\n-                                                      operationContext.getComponent().getLocation()))\n+          ConnectedInputStreamWrapper streamWrapper =\n+              new ConnectedInputStreamWrapper(componentDecoratorFactory.decorateOutput((InputStream) result.getOutput(),\n+                                                                                       event.getCorrelationId()),\n+                                              connectionHandler, getDecrementActiveComponentTask(operationContext));\n+          incrementActiveComponent(operationContext);\n+          result = result.copy().output(StreamingUtils.streamingContent(streamWrapper, cursorProviderFactory, event,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzODk3Mw=="}, "originalCommit": {"oid": "be4e39b623e4195387b4819a2ee1305d3bd8ba76"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Mjc1NjY1OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODowMzozMVrOH9nkTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODowMzozMVrOH9nkTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM3MzQ1Mw==", "bodyText": "incrementing this is not the return delegate's responsibility:\n\nthis class is used in other context to transform results to messages, and those shouldn't mess with the counters\nIf something fails AFTER the return delegate execution, nobody decrements it\n\nThe incrementing needs to happen in some other place, probably an interceptor which decrements it if the operation fails.", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r534373453", "createdAt": "2020-12-02T18:03:31Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/result/AbstractReturnDelegate.java", "diffHunk": "@@ -149,13 +148,12 @@ protected Message toMessage(Object value, ExecutionContextAdapter operationConte\n       if (resultValue.getOutput() instanceof InputStream) {\n         ConnectionHandler connectionHandler = (ConnectionHandler) operationContext.getVariable(CONNECTION_PARAM);\n         if (connectionHandler != null && supportsStreaming(operationContext.getComponentModel())) {\n-          resultValue = resultValue\n-              .copy().output(componentDecoratorFactory\n-                  .decorateOutput(new ConnectedInputStreamWrapper((InputStream) resultValue.getOutput(), connectionHandler,\n-                                                                  getIncrementActiveComponent(operationContext),\n-                                                                  getDecrementActiveComponent(operationContext)),\n-                                  event.getCorrelationId()))\n-              .build();\n+          ConnectedInputStreamWrapper streamWrapper =\n+              new ConnectedInputStreamWrapper((InputStream) resultValue.getOutput(), connectionHandler,\n+                                              getDecrementActiveComponentTask(operationContext));\n+          incrementActiveComponent(operationContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be4e39b623e4195387b4819a2ee1305d3bd8ba76"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTkzMjUxOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/operation/ComponentMessageProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxOToyOTo1M1rOIGcZAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjo0MjoyNlrOIHDdpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYyNzUyMg==", "bodyText": "feels like all of this should be happening inside the mediator. Actually, if you look at the mediators implementation, it will obtain the stats again and call addInfightOperation. That should not happen anymore. Move this into the mediator implementation and avoid unnecesary interactions with the stats object", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r543627522", "createdAt": "2020-12-15T19:29:53Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/operation/ComponentMessageProcessor.java", "diffHunk": "@@ -569,7 +574,42 @@ private boolean shouldUsePrecalculatedContext(CoreEvent event) {\n   }\n \n   protected void executeOperation(ExecutionContextAdapter<T> operationContext, ExecutorCallback callback) {\n-    executionMediator.execute(componentExecutor, operationContext, callback);\n+    final MutableConfigurationStats stats = getMutableConfigurationStats(operationContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6296fb4c05f642643ebfadd508a6a54ea8654c3"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI2NzY4Nw==", "bodyText": "Moved it to the mediator, but the call to addInfightOperation is still necessary there to avoid breaking the api.", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r544267687", "createdAt": "2020-12-16T12:42:26Z", "author": {"login": "SebaElizalde"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/operation/ComponentMessageProcessor.java", "diffHunk": "@@ -569,7 +574,42 @@ private boolean shouldUsePrecalculatedContext(CoreEvent event) {\n   }\n \n   protected void executeOperation(ExecutionContextAdapter<T> operationContext, ExecutorCallback callback) {\n-    executionMediator.execute(componentExecutor, operationContext, callback);\n+    final MutableConfigurationStats stats = getMutableConfigurationStats(operationContext);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYyNzUyMg=="}, "originalCommit": {"oid": "e6296fb4c05f642643ebfadd508a6a54ea8654c3"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTk1MTYwOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/operation/ComponentMessageProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxOTozNDoyM1rOIGckQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxOTozNDoyM1rOIGckQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYzMDQwMA==", "bodyText": "move this to org.mule.runtime.module.extension.internal.util.MuleExtensionUtils", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r543630400", "createdAt": "2020-12-15T19:34:23Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/operation/ComponentMessageProcessor.java", "diffHunk": "@@ -569,7 +574,42 @@ private boolean shouldUsePrecalculatedContext(CoreEvent event) {\n   }\n \n   protected void executeOperation(ExecutionContextAdapter<T> operationContext, ExecutorCallback callback) {\n-    executionMediator.execute(componentExecutor, operationContext, callback);\n+    final MutableConfigurationStats stats = getMutableConfigurationStats(operationContext);\n+    if (stats != null) {\n+      stats.addActiveComponent();\n+      executionMediator.execute(componentExecutor, operationContext, trackable(callback, stats));\n+    } else {\n+      executionMediator.execute(componentExecutor, operationContext, callback);\n+    }\n+  }\n+\n+  private ExecutorCallback trackable(ExecutorCallback callback, MutableConfigurationStats stats) {\n+    return new ExecutorCallback() {\n+\n+      @Override\n+      public void complete(Object value) {\n+        if (!isConnectedStreamingOperation()) {\n+          stats.discountActiveComponent();\n+        }\n+        callback.complete(value);\n+      }\n+\n+      @Override\n+      public void error(Throwable e) {\n+        stats.discountActiveComponent();\n+        callback.error(e);\n+      }\n+    };\n+  }\n+\n+  private Boolean isConnectedStreamingOperation() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6296fb4c05f642643ebfadd508a6a54ea8654c3"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjA1NTEwOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxOTo1ODozMVrOIGdhhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxOTo1ODozMVrOIGdhhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY0NjA4Ng==", "bodyText": "this ternary (or something very similar) is showing up in a lot of places. Extract to org.mule.runtime.module.extension.internal.util.MuleExtensionUtils", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r543646086", "createdAt": "2020-12-15T19:58:31Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "diffHunk": "@@ -83,6 +88,9 @@ public PagingProviderProducer(PagingProvider<Object, T> delegate,\n     this.supportsOAuth = supportsOAuth;\n     retryPolicy = (RetryPolicyTemplate) executionContext.getRetryPolicyTemplate().orElseGet(NoRetryPolicyTemplate::new);\n     connectionSupplierFactory = createConnectionSupplierFactory();\n+    ConfigurationStats configurationStats = config.getStatistics();\n+    mutableStats =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6296fb4c05f642643ebfadd508a6a54ea8654c3"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMTIyMTg4OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/operation/DefaultExecutionMediator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNjoxMDo1NlrOIHNJlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNjoxODo0MFrOIHNiYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQyNjM4OQ==", "bodyText": "Shouldn't this be removed? You already counted the active component. Why count twice?", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r544426389", "createdAt": "2020-12-16T16:10:56Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/operation/DefaultExecutionMediator.java", "diffHunk": "@@ -101,6 +103,7 @@ public void execute(CompletableComponentExecutor<M> executor,\n \n     final MutableConfigurationStats stats = getMutableConfigurationStats(context);\n     if (stats != null) {\n+      stats.addActiveComponent();\n       stats.addInflightOperation();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac64e5f2de22f361b4f5708c4c815b34d3ee28a6"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQzMjczNg==", "bodyText": "They count different things, I left the old one to preserve the ConfigurationStats api which states:\n/**\n\n@return How many currently executing operations are making use of the referenced configuration\n\n@deprecated Use {@link #getActiveComponents()} instead.\n*/\n@deprecated\nint getInflightOperations();", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r544432736", "createdAt": "2020-12-16T16:18:40Z", "author": {"login": "SebaElizalde"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/operation/DefaultExecutionMediator.java", "diffHunk": "@@ -101,6 +103,7 @@ public void execute(CompletableComponentExecutor<M> executor,\n \n     final MutableConfigurationStats stats = getMutableConfigurationStats(context);\n     if (stats != null) {\n+      stats.addActiveComponent();\n       stats.addInflightOperation();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQyNjM4OQ=="}, "originalCommit": {"oid": "ac64e5f2de22f361b4f5708c4c815b34d3ee28a6"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMTIyMjcwOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/operation/DefaultExecutionMediator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNjoxMTowOFrOIHNKIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNjoxMTowOFrOIHNKIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQyNjUzMA==", "bodyText": "same here. This line should go", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r544426530", "createdAt": "2020-12-16T16:11:08Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/operation/DefaultExecutionMediator.java", "diffHunk": "@@ -152,6 +155,9 @@ public void complete(Object value) {\n         // after() method cannot be invoked in the finally. Needs to be explicitly called before completing the callback.\n         // Race conditions appear otherwise, specially in connection pooling scenarios.\n         if (stats != null) {\n+          if (!isConnectedStreamingOperation(operationModel)) {\n+            stats.discountActiveComponent();\n+          }\n           stats.discountInflightOperation();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac64e5f2de22f361b4f5708c4c815b34d3ee28a6"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMTIyMzM2OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/operation/DefaultExecutionMediator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNjoxMToxNFrOIHNKew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNjoxMToxNFrOIHNKew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQyNjYxOQ==", "bodyText": "same", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r544426619", "createdAt": "2020-12-16T16:11:14Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/operation/DefaultExecutionMediator.java", "diffHunk": "@@ -173,6 +179,7 @@ public void error(Throwable t) {\n         } finally {\n           if (stats != null) {\n             stats.discountInflightOperation();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac64e5f2de22f361b4f5708c4c815b34d3ee28a6"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMTIyNTYyOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/util/MuleExtensionUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNjoxMTozOFrOIHNLwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNjoxMTozOFrOIHNLwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQyNjk0NA==", "bodyText": "don't use boxed boolean", "url": "https://github.com/mulesoft/mule/pull/9795#discussion_r544426944", "createdAt": "2020-12-16T16:11:38Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/util/MuleExtensionUtils.java", "diffHunk": "@@ -550,4 +554,19 @@ public static MutableConfigurationStats getMutableConfigurationStats(ExecutionCo\n       return null;\n     }\n   }\n+\n+  /**\n+   * @return whether the {@link ComponentModel} defines a streaming operation that uses a connection.\n+   *\n+   * @since 4.2.3 - 4.3.0\n+   */\n+  public static Boolean isConnectedStreamingOperation(ComponentModel componentModel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac64e5f2de22f361b4f5708c4c815b34d3ee28a6"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4557, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}