{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2OTY5MDA2", "number": 8603, "title": "MULE-17924: Optimize error handling performance", "bodyText": "", "createdAt": "2020-01-24T18:52:32Z", "url": "https://github.com/mulesoft/mule/pull/8603", "merged": true, "mergeCommit": {"oid": "95de64cb4949e1b212c8be489d4bbf0f0c372107"}, "closed": true, "closedAt": "2020-01-27T16:18:08Z", "author": {"login": "elrodro83"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9cwWqAH2gAyMzY2OTY5MDA2OjdmZjQ0OGUyZGE0ZDFiNWRlYjVmMzNlNzhkOTZmZjhkZGY5MGI2ZGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-eJKyAFqTM0ODczMTI2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7ff448e2da4d1b5deb5f33e78d96ff8ddf90b6da", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/7ff448e2da4d1b5deb5f33e78d96ff8ddf90b6da", "committedDate": "2020-01-24T10:54:28Z", "message": "MULE-17924: Optimize error handling performance\nMULE-XXXXX: Optimize service method calls when not augmented"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e33b58bbe1b5eab197387652eadde6e4f7545d19", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/e33b58bbe1b5eab197387652eadde6e4f7545d19", "committedDate": "2020-01-24T10:54:30Z", "message": "second pass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8132e39ddf97607810a8add70841e26d5402fdc", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/c8132e39ddf97607810a8add70841e26d5402fdc", "committedDate": "2020-01-24T10:54:32Z", "message": "third pass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7cab794a1b471f80cbaab627604b75ba2f4ea36", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/d7cab794a1b471f80cbaab627604b75ba2f4ea36", "committedDate": "2020-01-24T10:54:34Z", "message": "improve exeption info enrichment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6665429f276a2c8e08650c1abf0c8ed49f966fe0", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/6665429f276a2c8e08650c1abf0c8ed49f966fe0", "committedDate": "2020-01-24T10:54:36Z", "message": "termination...."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8984cd87dc4b731a08e1912410d007fcf79e68dc", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/8984cd87dc4b731a08e1912410d007fcf79e68dc", "committedDate": "2020-01-24T10:54:38Z", "message": "termination addendum"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e8ff963843ec1e85c81e0ba655c250a3e444fb5", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/7e8ff963843ec1e85c81e0ba655c250a3e444fb5", "committedDate": "2020-01-24T10:54:40Z", "message": "free 4 all"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbf2c2b97c4c84fc7a84ea7ffea48a5cea957c3b", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/fbf2c2b97c4c84fc7a84ea7ffea48a5cea957c3b", "committedDate": "2020-01-24T10:54:41Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09a7c0b5c98839a8d30be51ab21398df2b35ae5b", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/09a7c0b5c98839a8d30be51ab21398df2b35ae5b", "committedDate": "2020-01-24T10:54:43Z", "message": "info begin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "654e702b23c93a1d807100419d5dfef2b0126ff8", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/654e702b23c93a1d807100419d5dfef2b0126ff8", "committedDate": "2020-01-24T10:54:44Z", "message": "info, revapi stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af1a4caec7d5d1b10c107aefe7448caf14e5658f", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/af1a4caec7d5d1b10c107aefe7448caf14e5658f", "committedDate": "2020-01-24T13:53:32Z", "message": "final info + avoid double error creation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48d615c98c5ce48dd51311b148bec922c5186ee4", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/48d615c98c5ce48dd51311b148bec922c5186ee4", "committedDate": "2020-01-24T18:39:50Z", "message": "asdf"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NjY1NDQ4", "url": "https://github.com/mulesoft/mule/pull/8603#pullrequestreview-348665448", "createdAt": "2020-01-27T13:37:18Z", "commit": {"oid": "48d615c98c5ce48dd51311b148bec922c5186ee4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMzozNzoxOFrOFiC3cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNDo0Njo0NVrOFiFNvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI0Mjg2Nw==", "bodyText": "comment", "url": "https://github.com/mulesoft/mule/pull/8603#discussion_r371242867", "createdAt": "2020-01-27T13:37:18Z", "author": {"login": "JuLuzzi"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/notification/DefaultFlowCallStack.java", "diffHunk": "@@ -41,9 +41,8 @@ public DefaultFlowCallStack() {\n   }\n \n   private DefaultFlowCallStack(final Deque<FlowStackElement> innerStack) {\n-    synchronized (innerStack) {\n-      this.innerStack = new ArrayDeque<>(innerStack);\n-    }\n+    // this.innerStack = new ArrayDeque<>(innerStack);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d615c98c5ce48dd51311b148bec922c5186ee4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI1NzE5Nw==", "bodyText": "comments", "url": "https://github.com/mulesoft/mule/pull/8603#discussion_r371257197", "createdAt": "2020-01-27T14:05:42Z", "author": {"login": "JuLuzzi"}, "path": "core/src/main/java/org/mule/runtime/core/internal/util/MessagingExceptionResolver.java", "diffHunk": "@@ -78,72 +80,104 @@ public MessagingException resolve(final MessagingException me, ErrorTypeLocator\n     }\n \n     Throwable root = rootCause.get().getFirst();\n-    ErrorType rootErrorType = rootCause.get().getSecond();\n     Component failingComponent = getFailingProcessor(me, root).orElse(component);\n \n-    ErrorType errorType = getErrorMappings(component)\n-        .stream()\n-        .filter(m -> m.match(rootErrorType))\n-        .findFirst()\n-        .map(ErrorMapping::getTarget)\n-        .orElse(rootErrorType);\n+    CoreEvent event = resolveEvent(me, root, resolveErrorType(rootCause.get().getSecond()));\n+    MessagingException result = resolveResultException(me, root, failingComponent, event);\n \n-    Error error = ErrorBuilder.builder(getMessagingExceptionCause(root)).errorType(errorType).build();\n-    CoreEvent event = CoreEvent.builder(me.getEvent()).error(error).build();\n+    propagateAlreadyLogged(me, result);\n+    return enrich(result, failingComponent, component, event, exceptionContextProviders);\n+  }\n \n+  private MessagingException resolveResultException(final MessagingException me, Throwable root, Component failingComponent,\n+                                                    CoreEvent event) {\n     MessagingException result;\n     if (root instanceof MessagingException) {\n       ((MessagingException) root).setProcessedEvent(event);\n       result = ((MessagingException) root);\n     } else {\n-      result = me instanceof FlowExecutionException ? new FlowExecutionException(event, root, failingComponent)\n+      result = me instanceof FlowExecutionException\n+          ? new FlowExecutionException(event, root, failingComponent)\n           : new MessagingException(event, root, failingComponent);\n     }\n-    propagateAlreadyLogged(me, result);\n-    return enrich(result, failingComponent, component, event, exceptionContextProviders);\n+    return result;\n   }\n \n-  private void propagateAlreadyLogged(MessagingException origin, MuleException result) {\n-    if (origin.getInfo().containsKey(INFO_ALREADY_LOGGED_KEY)) {\n-      result.addInfo(INFO_ALREADY_LOGGED_KEY, origin.getInfo().get(INFO_ALREADY_LOGGED_KEY));\n+  private CoreEvent resolveEvent(final MessagingException me, Throwable root, ErrorType errorType) {\n+    final Throwable messagingExceptionCause = getMessagingExceptionCause(root);\n+    // if (!me.getEvent()\n+    // .getError()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d615c98c5ce48dd51311b148bec922c5186ee4"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI4MTM0MA==", "bodyText": "comment", "url": "https://github.com/mulesoft/mule/pull/8603#discussion_r371281340", "createdAt": "2020-01-27T14:46:45Z", "author": {"login": "JuLuzzi"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "diffHunk": "@@ -529,9 +529,11 @@ public String getDescription() {\n                                                                        OptionalInt.of(configLine.getLineNumber()),\n                                                                        OptionalInt.of(configLine.getStartColumn()));\n                   providerComponent.setAnnotations(ImmutableMap.<QName, Object>builder()\n-                      .put(AbstractComponent.LOCATION_KEY,\n+                      .put(LOCATION_KEY,\n                            new DefaultComponentLocation(of(componentIdentifier.getName()),\n                                                         singletonList(locationPart)))\n+\n+                      // beanAnnotations.put(REPRESENTATION_ANNOTATION_KEY, resolveProcessorRepresentation(artifactId, \"\", null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d615c98c5ce48dd51311b148bec922c5186ee4"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a797558cd7be7a129a27399bf8f22b291f68231", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/2a797558cd7be7a129a27399bf8f22b291f68231", "committedDate": "2020-01-27T14:49:42Z", "message": "review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NzMxMjYy", "url": "https://github.com/mulesoft/mule/pull/8603#pullrequestreview-348731262", "createdAt": "2020-01-27T15:05:24Z", "commit": {"oid": "2a797558cd7be7a129a27399bf8f22b291f68231"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1373, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}