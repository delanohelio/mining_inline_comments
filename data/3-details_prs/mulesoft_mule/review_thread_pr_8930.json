{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NDY0NDI0", "number": 8930, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxMTo0M1rOEGHEEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNjoyNzo0MlrOEGbMKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODQyNjQxOnYy", "diffSide": "RIGHT", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessorBackPressureTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxMTo0M1rOGktVsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxMTo0M1rOGktVsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NDc1NQ==", "bodyText": "add story annotation", "url": "https://github.com/mulesoft/mule/pull/8930#discussion_r441144755", "createdAt": "2020-06-16T21:11:43Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessorBackPressureTestCase.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.processor;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.doAnswer;\n+import static org.mockito.Mockito.mock;\n+import static org.mule.tck.MuleTestUtils.APPLE_FLOW;\n+import static org.mule.tck.MuleTestUtils.createAndRegisterFlow;\n+\n+import io.qameta.allure.Issue;\n+import org.mule.runtime.api.scheduler.Scheduler;\n+import org.mule.runtime.api.scheduler.SchedulerConfig;\n+import org.mule.runtime.core.api.construct.FlowConstruct;\n+import org.mule.runtime.core.api.event.CoreEvent;\n+import org.mule.runtime.core.api.processor.ReactiveProcessor;\n+import org.mule.runtime.core.api.processor.Sink;\n+import org.mule.runtime.core.api.processor.strategy.ProcessingStrategy;\n+import org.mule.runtime.core.internal.construct.FromFlowRejectedExecutionException;\n+import org.mule.runtime.core.internal.processor.strategy.StreamPerEventSink;\n+import org.mule.tck.SimpleUnitTestSupportSchedulerService;\n+\n+import java.util.concurrent.RejectedExecutionException;\n+\n+@Issue(\"MULE-18431\")\n+public class AsyncDelegateMessageProcessorBackPressureTestCase extends AbstractAsyncDelegateMessageProcessorTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43e963f55055740c82cd60ef3ae259a536a3b4f1"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODQzMTUxOnYy", "diffSide": "RIGHT", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessorBackPressureTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxMzoyNFrOGktY0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxMzoyNFrOGktY0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NTU1Mw==", "bodyText": "if you override createAsyncDelegateMessageProcessor and move this line and 39 there, you can move this doSetUp back to the superclass", "url": "https://github.com/mulesoft/mule/pull/8930#discussion_r441145553", "createdAt": "2020-06-16T21:13:24Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessorBackPressureTestCase.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.processor;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.doAnswer;\n+import static org.mockito.Mockito.mock;\n+import static org.mule.tck.MuleTestUtils.APPLE_FLOW;\n+import static org.mule.tck.MuleTestUtils.createAndRegisterFlow;\n+\n+import io.qameta.allure.Issue;\n+import org.mule.runtime.api.scheduler.Scheduler;\n+import org.mule.runtime.api.scheduler.SchedulerConfig;\n+import org.mule.runtime.core.api.construct.FlowConstruct;\n+import org.mule.runtime.core.api.event.CoreEvent;\n+import org.mule.runtime.core.api.processor.ReactiveProcessor;\n+import org.mule.runtime.core.api.processor.Sink;\n+import org.mule.runtime.core.api.processor.strategy.ProcessingStrategy;\n+import org.mule.runtime.core.internal.construct.FromFlowRejectedExecutionException;\n+import org.mule.runtime.core.internal.processor.strategy.StreamPerEventSink;\n+import org.mule.tck.SimpleUnitTestSupportSchedulerService;\n+\n+import java.util.concurrent.RejectedExecutionException;\n+\n+@Issue(\"MULE-18431\")\n+public class AsyncDelegateMessageProcessorBackPressureTestCase extends AbstractAsyncDelegateMessageProcessorTestCase {\n+\n+  public AsyncDelegateMessageProcessorBackPressureTestCase(Mode mode) {\n+    super(mode);\n+  }\n+\n+  @Override\n+  protected void doSetUp() throws Exception {\n+    super.doSetUp();\n+    BackPressureGeneratorProcessingStrategy strategy = new BackPressureGeneratorProcessingStrategy();\n+    flow = createAndRegisterFlow(muleContext, APPLE_FLOW, componentLocator, (ctx, n) -> strategy);\n+    async = createAsyncDelegateMessageProcessor(target, flow);\n+    async.setSchedulerService(new FixingBackPressureSchedulerService(strategy));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43e963f55055740c82cd60ef3ae259a536a3b4f1"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODQzNTA3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxNDo0MFrOGktbKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxNDo0MFrOGktbKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NjE1Mg==", "bodyText": "this doesn't belong here", "url": "https://github.com/mulesoft/mule/pull/8930#discussion_r441146152", "createdAt": "2020-06-16T21:14:40Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java", "diffHunk": "@@ -365,4 +368,10 @@ public void stop() {\n       asyncQueue.clear();\n     }\n   }\n+\n+  public void setSchedulerService(SchedulerService schedulerService) throws InitialisationException {\n+    this.schedulerService = schedulerService;\n+    initialise();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43e963f55055740c82cd60ef3ae259a536a3b4f1"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTcyMTMxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNjoyNzowMlrOGlNkFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNjoyNzowMlrOGlNkFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3MjcyNw==", "bodyText": "&&?", "url": "https://github.com/mulesoft/mule/pull/8930#discussion_r441672727", "createdAt": "2020-06-17T16:27:02Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java", "diffHunk": "@@ -358,11 +355,34 @@ public void handleBackpressure(CoreEvent event) {\n       });\n     }\n \n+    public void handleBackpressure(CoreEvent event) {\n+      asyncQueue.offer(event);\n+\n+      synchronized (asyncQueue) {\n+        asyncQueue.notify();\n+      }\n+\n+      synchronized (executing) {\n+        if (executing.get() != null) {\n+          if (!executing.get().isDone()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c01b9512829dc3bc5a15ad00d11438ee643c84a9"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTcyMzkzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNjoyNzo0MlrOGlNlxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNjoyNzo0MlrOGlNlxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3MzE1OA==", "bodyText": "negate the if above and put this inside", "url": "https://github.com/mulesoft/mule/pull/8930#discussion_r441673158", "createdAt": "2020-06-17T16:27:42Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java", "diffHunk": "@@ -358,11 +355,34 @@ public void handleBackpressure(CoreEvent event) {\n       });\n     }\n \n+    public void handleBackpressure(CoreEvent event) {\n+      asyncQueue.offer(event);\n+\n+      synchronized (asyncQueue) {\n+        asyncQueue.notify();\n+      }\n+\n+      synchronized (executing) {\n+        if (executing.get() != null) {\n+          if (!executing.get().isDone()) {\n+            return;\n+          }\n+        }\n+        executing.set(dispatchTask());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c01b9512829dc3bc5a15ad00d11438ee643c84a9"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4947, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}