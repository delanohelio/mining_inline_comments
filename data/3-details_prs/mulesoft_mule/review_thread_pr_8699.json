{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMDU1Mjc4", "number": 8699, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjo0MDoxN1rODkurxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjo0MDoxN1rODkurxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODQwMTk4OnYy", "diffSide": "LEFT", "path": "core/src/main/java/org/mule/runtime/core/internal/util/queue/TransactionalQueueManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjo0MDoxN1rOFxNp4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjo0MDoxN1rOFxNp4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE0ODI1Ng==", "bodyText": "nice", "url": "https://github.com/mulesoft/mule/pull/8699#discussion_r387148256", "createdAt": "2020-03-03T16:40:17Z", "author": {"login": "marianogonzalez"}, "path": "core/src/main/java/org/mule/runtime/core/internal/util/queue/TransactionalQueueManager.java", "diffHunk": "@@ -31,23 +31,24 @@\n   private LocalTxQueueTransactionRecoverer localTxQueueTransactionRecoverer;\n   private XaTxQueueTransactionJournal xaTransactionJournal;\n   private XaTransactionRecoverer xaTransactionRecoverer;\n-  private QueueXaResourceManager queueXaResourceManager = new QueueXaResourceManager();\n+  private final QueueXaResourceManager queueXaResourceManager = new QueueXaResourceManager();\n   // Due to current VMConnector and TransactionQueueManager relationship we must close all the recovered queues\n   // since queue configuration is applied after recovery and not taking into consideration once queues are created\n   // for recovery. See https://www.mulesoft.org/jira/browse/MULE-7420\n-  private Map<String, RecoverableQueueStore> queuesAccessedForRecovery = new HashMap<>();\n+  private final Map<String, RecoverableQueueStore> queuesAccessedForRecovery = new HashMap<>();\n \n   /**\n    * {@inheritDoc}\n    *\n    * @return an instance of {@link TransactionalQueueSession}\n    */\n   @Override\n-  public synchronized QueueSession getQueueSession() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e307a885c9508f95c63b17b42cc4bcc9bb1a3ace"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 57, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}