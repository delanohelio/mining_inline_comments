{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNjk4OTkx", "number": 9663, "title": "EE-7459: Migrate ClassloadingTroubleshootingTestCase as DeploymentTestCase", "bodyText": "", "createdAt": "2020-11-01T21:48:40Z", "url": "https://github.com/mulesoft/mule/pull/9663", "merged": true, "mergeCommit": {"oid": "165e02d817f76187306808bb186e4352dbcf7d24"}, "closed": true, "closedAt": "2020-11-03T12:15:55Z", "author": {"login": "mlischetti"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXroyrAH2gAyNTEzNjk4OTkxOmY2ZTM4MzYxM2IyY2U5MzZmZDE5ZjcyMmU5YWRkYTQxZTA4Nzg2ZWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYqpnQgFqTUyMTk3MTgzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f6e383613b2ce936fd19f722e9adda41e08786ec", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/f6e383613b2ce936fd19f722e9adda41e08786ec", "committedDate": "2020-10-30T19:07:58Z", "message": "EE-7459: Migrate ClassloadingTroubleshootingTestCase as DeploymentTestCase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ea45621c8405d88c01f3660d4599d394d88054c", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/0ea45621c8405d88c01f3660d4599d394d88054c", "committedDate": "2020-10-30T19:07:58Z", "message": "Set domain dependency correctly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ece93c45be31eab0ba517bc179723f3db90213e6", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/ece93c45be31eab0ba517bc179723f3db90213e6", "committedDate": "2020-10-30T19:07:59Z", "message": "fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f30a647e1a4927ce0afc0cfead10a2efe8c1f20d", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/f30a647e1a4927ce0afc0cfead10a2efe8c1f20d", "committedDate": "2020-10-30T19:07:59Z", "message": "Test against lightweight classloader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f8285306c164d2489d96299cfa84c321bbb276e", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/4f8285306c164d2489d96299cfa84c321bbb276e", "committedDate": "2020-10-30T21:12:54Z", "message": "Reset logger after test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "726a62f2f160a16d13893c94cd451fe6ca9128ad", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/726a62f2f160a16d13893c94cd451fe6ca9128ad", "committedDate": "2020-10-30T21:14:41Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "579b74449069b9cb6cc80eacaad8636aba9a1efb", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/579b74449069b9cb6cc80eacaad8636aba9a1efb", "committedDate": "2020-11-01T20:40:53Z", "message": "Memory appender"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ceefb7e34962b97b7fcb6a0c54577bf8858c325", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/8ceefb7e34962b97b7fcb6a0c54577bf8858c325", "committedDate": "2020-11-01T21:32:37Z", "message": "minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fad9795db676e3358116b6ae870f1bb62a9785e5", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/fad9795db676e3358116b6ae870f1bb62a9785e5", "committedDate": "2020-11-02T14:23:55Z", "message": "Fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODU1Nzkz", "url": "https://github.com/mulesoft/mule/pull/9663#pullrequestreview-521855793", "createdAt": "2020-11-02T17:38:47Z", "commit": {"oid": "fad9795db676e3358116b6ae870f1bb62a9785e5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzozODo0N1rOHsPCbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzo0Njo1NlrOHsPWOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE0NTc3NA==", "bodyText": "this is not a classifier", "url": "https://github.com/mulesoft/mule/pull/9663#discussion_r516145774", "createdAt": "2020-11-02T17:38:47Z", "author": {"login": "elrodro83"}, "path": "modules/artifact/src/test/java/org/mule/runtime/module/artifact/builder/AbstractDependencyFileBuilder.java", "diffHunk": "@@ -210,6 +213,15 @@ public T withClassifier(String classifier) {\n     return getThis();\n   }\n \n+  /**\n+   * @param scope the maven classifier", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fad9795db676e3358116b6ae870f1bb62a9785e5"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE0NjEwNw==", "bodyText": "what's the point of this?", "url": "https://github.com/mulesoft/mule/pull/9663#discussion_r516146107", "createdAt": "2020-11-02T17:39:20Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/test/java/org/mule/runtime/module/deployment/impl/internal/builder/DeployableFileBuilder.java", "diffHunk": "@@ -221,10 +224,24 @@ private File getClassLoaderModelFile() {\n   private Artifact getArtifact(AbstractDependencyFileBuilder builder, boolean shared) {\n     ArtifactCoordinates artifactCoordinates =\n         new ArtifactCoordinates(builder.getGroupId(), builder.getArtifactId(), builder.getVersion(), builder.getType(),\n-                                builder.getClassifier());\n-    final Artifact artifact = new Artifact(artifactCoordinates, builder.getArtifactFile().toURI());\n+                                builder.getClassifier(), builder.getScope());\n+    URI uri;\n+    if (MULE_DOMAIN_CLASSIFIER.equals(builder.getClassifier())) {\n+      try {\n+        uri = new URI(\"\");\n+      } catch (URISyntaxException e) {\n+        throw new RuntimeException(e);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fad9795db676e3358116b6ae870f1bb62a9785e5"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE0NzY5Mw==", "bodyText": "why not ask for the classifier directly here?", "url": "https://github.com/mulesoft/mule/pull/9663#discussion_r516147693", "createdAt": "2020-11-02T17:42:00Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/test/java/org/mule/runtime/module/deployment/impl/internal/builder/DeployableFileBuilder.java", "diffHunk": "@@ -221,10 +224,24 @@ private File getClassLoaderModelFile() {\n   private Artifact getArtifact(AbstractDependencyFileBuilder builder, boolean shared) {\n     ArtifactCoordinates artifactCoordinates =\n         new ArtifactCoordinates(builder.getGroupId(), builder.getArtifactId(), builder.getVersion(), builder.getType(),\n-                                builder.getClassifier());\n-    final Artifact artifact = new Artifact(artifactCoordinates, builder.getArtifactFile().toURI());\n+                                builder.getClassifier(), builder.getScope());\n+    URI uri;\n+    if (MULE_DOMAIN_CLASSIFIER.equals(builder.getClassifier())) {\n+      try {\n+        uri = new URI(\"\");\n+      } catch (URISyntaxException e) {\n+        throw new RuntimeException(e);\n+      }\n+    } else {\n+      uri = builder.getArtifactFile().toURI();\n+    }\n+    final Artifact artifact = new Artifact(artifactCoordinates, uri);\n     // mule-maven-plugin (packager) will not include packages/resources for mule-plugin dependencies\n-    if (isSupportingPackagesResourcesInformation() && !MULE_PLUGIN_CLASSIFIER.equals(builder.getClassifier())) {\n+    boolean shouldAddPackagesAndResources = !MULE_PLUGIN_CLASSIFIER.equals(artifact.getArtifactCoordinates().getClassifier())\n+        && artifact.getUri() != null\n+        // mule-domain are set with a \"\" URI\n+        && isNotBlank(artifact.getUri().getPath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fad9795db676e3358116b6ae870f1bb62a9785e5"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE0ODE5NQ==", "bodyText": "Use java.util.Objects.requireNonNull(T, String) instead of guava", "url": "https://github.com/mulesoft/mule/pull/9663#discussion_r516148195", "createdAt": "2020-11-02T17:42:45Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/test/java/org/mule/runtime/module/deployment/impl/internal/builder/DomainFileBuilder.java", "diffHunk": "@@ -76,6 +85,26 @@ public String getClassifier() {\n     return MULE_DOMAIN_CLASSIFIER;\n   }\n \n+  @Override\n+  public String getScope() {\n+    return PROVIDED_SCOPE;\n+  }\n+\n+  /**\n+   * Adds a property into the plugin properties file.\n+   *\n+   * @param propertyName name fo the property to add. Non empty\n+   * @param propertyValue value of the property to add. Non null.\n+   * @return the same builder instance\n+   */\n+  public DomainFileBuilder configuredWith(String propertyName, String propertyValue) {\n+    checkImmutable();\n+    Preconditions.checkArgument(!isEmpty(propertyName), \"Property name cannot be empty\");\n+    Preconditions.checkArgument(propertyValue != null, \"Property value cannot be null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fad9795db676e3358116b6ae870f1bb62a9785e5"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE0ODY5Mw==", "bodyText": "remove {} block (applies to code above as well)", "url": "https://github.com/mulesoft/mule/pull/9663#discussion_r516148693", "createdAt": "2020-11-02T17:43:31Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/test/java/org/mule/runtime/module/deployment/impl/internal/builder/DomainFileBuilder.java", "diffHunk": "@@ -142,6 +175,10 @@ private File createDomainJsonDescriptorFile(Optional<Boolean> redeploymentEnable\n     exportedResources.ifPresent(resources -> {\n       muleArtifactClassLoaderDescriptorBuilder.addProperty(EXPORTED_RESOURCES, resources.split(\",\"));\n     });\n+\n+    exportedClassPackages.ifPresent(packages -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fad9795db676e3358116b6ae870f1bb62a9785e5"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE0OTIyNg==", "bodyText": "mule modules should not depend on actual connectors. Options are: Use a test extension or move the test that requires this to integration", "url": "https://github.com/mulesoft/mule/pull/9663#discussion_r516149226", "createdAt": "2020-11-02T17:44:19Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/pom.xml", "diffHunk": "@@ -16,6 +16,8 @@\n \n     <properties>\n         <formatterConfigPath>../../formatter.xml</formatterConfigPath>\n+        <!-- Mule Connectors and Modules -->\n+        <muleJavaModuleVersion>1.3.0-SNAPSHOT</muleJavaModuleVersion>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fad9795db676e3358116b6ae870f1bb62a9785e5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE1MDg0MQ==", "bodyText": "change this to use some custom code or DW to avoid adding the dependency to the java module", "url": "https://github.com/mulesoft/mule/pull/9663#discussion_r516150841", "createdAt": "2020-11-02T17:46:56Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/resources/classloading-troubleshooting/app-classloading-troubleshooting-config.xml", "diffHunk": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<mule xmlns=\"http://www.mulesoft.org/schema/mule/core\"\n+      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+      xmlns:java=\"http://www.mulesoft.org/schema/mule/java\"\n+      xsi:schemaLocation=\"\n+            http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd\n+            http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd\">\n+\n+    <configuration-properties file=\"jms.properties\"/>\n+\n+    <object name=\"overrideMe2\" class=\"OverrideMe2\"/>\n+\n+    <flow name=\"classloading-appFlow\" >\n+        <scheduler>\n+            <scheduling-strategy >\n+                <fixed-frequency frequency=\"100\" timeUnit=\"MILLISECONDS\" />\n+            </scheduling-strategy>\n+        </scheduler>\n+        <java:new class=\"test.OverrideMe\" constructor=\"OverrideMe()\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fad9795db676e3358116b6ae870f1bb62a9785e5"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4712a35bb6bd647f920d890e3274a76a50df6fe8", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/4712a35bb6bd647f920d890e3274a76a50df6fe8", "committedDate": "2020-11-02T20:31:05Z", "message": "review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxOTcxODMw", "url": "https://github.com/mulesoft/mule/pull/9663#pullrequestreview-521971830", "createdAt": "2020-11-02T20:32:53Z", "commit": {"oid": "4712a35bb6bd647f920d890e3274a76a50df6fe8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1120, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}