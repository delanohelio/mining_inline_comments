{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NzkyNzAw", "number": 9280, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODoyMTo1NFrOEdVjGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODoyMTo1NFrOEdVjGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTk3MjEwOnYy", "diffSide": "RIGHT", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/streaming/AbstractTroubleshootCursorProviderTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODoyMTo1NFrOHIcGHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxOTowODo0MVrOHIdnUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxMDk3Mw==", "bodyText": "use a SystemProperty rule instead", "url": "https://github.com/mulesoft/mule/pull/9280#discussion_r478610973", "createdAt": "2020-08-27T18:21:54Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/streaming/AbstractTroubleshootCursorProviderTestCase.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+\n+package org.mule.runtime.core.internal.streaming;\n+\n+import static java.lang.System.setProperty;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.hamcrest.CoreMatchers.nullValue;\n+import static org.hamcrest.core.StringContains.containsString;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.rules.ExpectedException.none;\n+import static org.junit.runners.Parameterized.Parameter;\n+import static org.junit.runners.Parameterized.Parameters;\n+import static org.mule.runtime.api.util.MuleSystemProperties.TRACK_CURSOR_PROVIDER_CLOSE_PROPERTY;\n+import static org.mule.runtime.dsl.api.component.config.DefaultComponentLocation.fromSingleComponent;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.mule.runtime.api.component.location.ComponentLocation;\n+import org.mule.runtime.api.streaming.CursorProvider;\n+import org.mule.tck.junit4.AbstractMuleTestCase;\n+\n+import io.qameta.allure.Description;\n+import io.qameta.allure.Issue;\n+\n+@RunWith(Parameterized.class)\n+public abstract class AbstractTroubleshootCursorProviderTestCase extends AbstractMuleTestCase {\n+\n+  @Rule\n+  public ExpectedException expectedException = none();\n+\n+  @Parameter\n+  public Boolean trackStackTrace;\n+\n+  @Parameter(1)\n+  public boolean setComponentLocation;\n+\n+  private CursorProvider cursorProvider;\n+\n+  protected ComponentLocation componentLocation;\n+\n+  @Parameters(name = \"Track StackTrace: {0}, set ComponentLocation: {1}\")\n+  public static Object[] getParameters() {\n+    return new Object[][] {\n+        {false, false},\n+        {false, true},\n+        {true, false},\n+        {true, true}\n+    };\n+  }\n+\n+  @Before\n+  public void before() throws NoSuchFieldException, IllegalAccessException {\n+    setProperty(TRACK_CURSOR_PROVIDER_CLOSE_PROPERTY, trackStackTrace.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e585e4481353d5f1a1b2eaac573b48c721b8f8d2"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYzNTg1Nw==", "bodyText": "This was an old code that wasn't removed by mistake.  The cursor provider is set with this flag when instantiated (eg https://github.com/mulesoft/mule/blob/fix/MULE-18047/core-tests/src/test/java/org/mule/runtime/core/internal/streaming/bytes/TroubleshootCursorStreamProviderTestCase.java#L53)", "url": "https://github.com/mulesoft/mule/pull/9280#discussion_r478635857", "createdAt": "2020-08-27T19:08:41Z", "author": {"login": "szaffarano"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/streaming/AbstractTroubleshootCursorProviderTestCase.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+\n+package org.mule.runtime.core.internal.streaming;\n+\n+import static java.lang.System.setProperty;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.hamcrest.CoreMatchers.nullValue;\n+import static org.hamcrest.core.StringContains.containsString;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.rules.ExpectedException.none;\n+import static org.junit.runners.Parameterized.Parameter;\n+import static org.junit.runners.Parameterized.Parameters;\n+import static org.mule.runtime.api.util.MuleSystemProperties.TRACK_CURSOR_PROVIDER_CLOSE_PROPERTY;\n+import static org.mule.runtime.dsl.api.component.config.DefaultComponentLocation.fromSingleComponent;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.mule.runtime.api.component.location.ComponentLocation;\n+import org.mule.runtime.api.streaming.CursorProvider;\n+import org.mule.tck.junit4.AbstractMuleTestCase;\n+\n+import io.qameta.allure.Description;\n+import io.qameta.allure.Issue;\n+\n+@RunWith(Parameterized.class)\n+public abstract class AbstractTroubleshootCursorProviderTestCase extends AbstractMuleTestCase {\n+\n+  @Rule\n+  public ExpectedException expectedException = none();\n+\n+  @Parameter\n+  public Boolean trackStackTrace;\n+\n+  @Parameter(1)\n+  public boolean setComponentLocation;\n+\n+  private CursorProvider cursorProvider;\n+\n+  protected ComponentLocation componentLocation;\n+\n+  @Parameters(name = \"Track StackTrace: {0}, set ComponentLocation: {1}\")\n+  public static Object[] getParameters() {\n+    return new Object[][] {\n+        {false, false},\n+        {false, true},\n+        {true, false},\n+        {true, true}\n+    };\n+  }\n+\n+  @Before\n+  public void before() throws NoSuchFieldException, IllegalAccessException {\n+    setProperty(TRACK_CURSOR_PROVIDER_CLOSE_PROPERTY, trackStackTrace.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxMDk3Mw=="}, "originalCommit": {"oid": "e585e4481353d5f1a1b2eaac573b48c721b8f8d2"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4775, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}