{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMTgwODk2", "number": 9152, "title": "MULE-18619: Component models not set for infrastructure types in AST", "bodyText": "", "createdAt": "2020-08-03T13:34:06Z", "url": "https://github.com/mulesoft/mule/pull/9152", "merged": true, "mergeCommit": {"oid": "a61a03cc569efe83c9d8d59eb7687a5ef626e540"}, "closed": true, "closedAt": "2020-08-04T15:14:36Z", "author": {"login": "elrodro83"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6c3pogH2gAyNDYyMTgwODk2OjJiYjYwYTgyMGU0NDU0MmM5MmViMjMyYmZlMjcyNDNiNTM4ZjgxZmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7oBQFgFqTQ2MDkwNDEyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2bb60a820e44542c92eb232bfe27243b538f81fe", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/2bb60a820e44542c92eb232bfe27243b538f81fe", "committedDate": "2020-07-31T23:31:49Z", "message": "move infra mapping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e1789427d03a15aec86420b73645b1b1e94db49", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/1e1789427d03a15aec86420b73645b1b1e94db49", "committedDate": "2020-08-02T15:50:05Z", "message": "further fix for infra"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b3e2e9a3616fe234053c76ded1902481b6e414c", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/9b3e2e9a3616fe234053c76ded1902481b6e414c", "committedDate": "2020-08-02T15:50:13Z", "message": "tls union types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b644ab8a74d569ac69f176f6aae6f4ae552d58a2", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/b644ab8a74d569ac69f176f6aae6f4ae552d58a2", "committedDate": "2020-08-02T15:52:37Z", "message": "constants"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMzIyNTYy", "url": "https://github.com/mulesoft/mule/pull/9152#pullrequestreview-460322562", "createdAt": "2020-08-03T20:34:42Z", "commit": {"oid": "b644ab8a74d569ac69f176f6aae6f4ae552d58a2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMDozNDo0M1rOG7H1YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMDozNjozNlrOG7H5EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY0NzUyMQ==", "bodyText": "should this be called depedencyExtensions or something like that? The intent of the parameter is now lost", "url": "https://github.com/mulesoft/mule/pull/9152#discussion_r464647521", "createdAt": "2020-08-03T20:34:43Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-xml-support/src/test/java/org/mule/runtime/extension/internal/loader/validation/DefaultModelValidatorTestCase.java", "diffHunk": "@@ -220,17 +221,17 @@ private ExtensionModel getExtensionModelFrom(String modulePath, Set<ExtensionMod\n   private Set<ExtensionModel> getDependencyExtensions() {\n     ExtensionModel petstore = loadExtension(PetStoreConnector.class, emptySet());\n     ExtensionModel heisenberg = loadExtension(HeisenbergExtension.class, emptySet());\n-    return ImmutableSet.<ExtensionModel>builder().add(petstore, heisenberg).build();\n+    return ImmutableSet.<ExtensionModel>builder().add(petstore, heisenberg, getExtensionModel()).build();\n   }\n \n-  private ExtensionModel loadExtension(Class extension, Set<ExtensionModel> deps) {\n+  private ExtensionModel loadExtension(Class extension, Set<ExtensionModel> extensions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b644ab8a74d569ac69f176f6aae6f4ae552d58a2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY0NzkwMw==", "bodyText": "seems like nothing change here other than formatting? Is taht the case? Can it be reverted then?", "url": "https://github.com/mulesoft/mule/pull/9152#discussion_r464647903", "createdAt": "2020-08-03T20:35:28Z", "author": {"login": "marianogonzalez"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/type/ApplicationModelTypeUtils.java", "diffHunk": "@@ -236,38 +238,65 @@ private static void handleNestedParameters(ComponentModel componentModel, Stream\n                                              Multimap<ComponentIdentifier, ComponentModel> nestedComponents,\n                                              ExtensionModelHelper extensionModelHelper,\n                                              ParameterizedModel model, Predicate<ParameterModel> parameterModelFilter) {\n-    childrenComponentModels\n-        .forEach(childComp -> extensionModelHelper.findParameterModel(childComp.getIdentifier(), model)\n-            .filter(parameterModelFilter::test)\n-            // do not handle the callback parameters from the sources\n-            .filter(paramModel -> {\n-              if (model instanceof SourceModel) {\n-                return !(((SourceModel) model).getSuccessCallback()\n-                    .map(sc -> sc.getAllParameterModels().contains(paramModel))\n-                    .orElse(false) ||\n-                    ((SourceModel) model).getErrorCallback()\n-                        .map(ec -> ec.getAllParameterModels().contains(paramModel))\n-                        .orElse(false));\n-              } else {\n-                return true;\n-              }\n-            })\n-            .filter(paramModel -> paramModel.getDslConfiguration().allowsInlineDefinition())\n-            .ifPresent(paramModel -> {\n-              if (isContent(paramModel)) {\n-                componentModel.setParameter(paramModel,\n-                                            new DefaultComponentParameterAst(trim(((ComponentModel) childComp)\n-                                                .getTextContent()),\n-                                                                             () -> paramModel, childComp.getMetadata()));\n-              } else {\n-                enrichComponentModels(componentModel, nestedComponents,\n-                                      of(extensionModelHelper.resolveDslElementModel(paramModel,\n-                                                                                     componentModel\n-                                                                                         .getIdentifier())),\n-                                      paramModel, extensionModelHelper);\n-              }\n-\n-            }));\n+    model.getAllParameterModels()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b644ab8a74d569ac69f176f6aae6f4ae552d58a2"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY0ODQ2NQ==", "bodyText": "the flatMaps in a row?? ufff...", "url": "https://github.com/mulesoft/mule/pull/9152#discussion_r464648465", "createdAt": "2020-08-03T20:36:36Z", "author": {"login": "marianogonzalez"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/type/ApplicationModelTypeUtils.java", "diffHunk": "@@ -309,26 +334,46 @@ private static void enrichComponentModels(ComponentModel componentModel,\n   }\n \n   private static void handleWrappedElement(ComponentModel componentModel, ComponentModel wrappedComponent,\n-                                           ParameterModel paramModel, ExtensionModelHelper extensionModelHelper) {\n+                                           ParameterModel paramModel, DslElementSyntax paramDsl,\n+                                           ExtensionModelHelper extensionModelHelper) {\n     Multimap<ComponentIdentifier, ComponentModel> nestedWrappedComponents = getNestedComponents(wrappedComponent);\n \n-    Map<ObjectType, Optional<DslElementSyntax>> objectTypeOptionalMap =\n-        extensionModelHelper.resolveSubTypes((ObjectType) paramModel.getType());\n+    paramModel.getType().accept(new MetadataTypeVisitor() {\n \n-    objectTypeOptionalMap.entrySet().stream().filter(entry -> {\n-      if (entry.getValue().isPresent()) {\n-        return getSingleComponentModel(nestedWrappedComponents, getIdentifier(entry.getValue().get())) != null;\n+      @Override\n+      public void visitObject(ObjectType objectType) {\n+        Map<ObjectType, Optional<DslElementSyntax>> objectTypeOptionalMap =\n+            extensionModelHelper.resolveSubTypes((ObjectType) paramModel.getType());\n+\n+        objectTypeOptionalMap.entrySet().stream().filter(entry -> {\n+          if (entry.getValue().isPresent()) {\n+            return getSingleComponentModel(nestedWrappedComponents, getIdentifier(entry.getValue().get())) != null;\n+          }\n+          return false;\n+        }).findFirst().ifPresent(wrappedEntryType -> {\n+          DslElementSyntax wrappedDsl = wrappedEntryType.getValue().get();\n+          wrappedEntryType.getKey()\n+              .accept(getComponentChildVisitor(componentModel,\n+                                               paramModel,\n+                                               wrappedDsl,\n+                                               getSingleComponentModel(nestedWrappedComponents, getIdentifier(wrappedDsl)),\n+                                               extensionModelHelper));\n+        });\n+      }\n+\n+      @Override\n+      public void visitUnion(UnionType unionType) {\n+        unionType.getTypes()\n+            .forEach(type -> getTypeId(type)\n+                .flatMap(paramDsl::getChild)\n+                .flatMap(childDsl -> getIdentifier(childDsl))\n+                .flatMap(childComponentId -> ofNullable(nestedWrappedComponents.get(childComponentId)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b644ab8a74d569ac69f176f6aae6f4ae552d58a2"}, "originalPosition": 227}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4eb380aa3149dba29c24532224ce9a23623a7599", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/4eb380aa3149dba29c24532224ce9a23623a7599", "committedDate": "2020-08-03T20:57:14Z", "message": "review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46c5dfd2b2220e125a80571d3609aa64c4a8910f", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/46c5dfd2b2220e125a80571d3609aa64c4a8910f", "committedDate": "2020-08-04T13:00:49Z", "message": "formatter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwOTA0MTI0", "url": "https://github.com/mulesoft/mule/pull/9152#pullrequestreview-460904124", "createdAt": "2020-08-04T15:05:11Z", "commit": {"oid": "46c5dfd2b2220e125a80571d3609aa64c4a8910f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 597, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}