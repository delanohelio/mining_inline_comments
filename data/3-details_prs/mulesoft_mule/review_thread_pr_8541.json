{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NTE0NDY0", "number": 8541, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMjozMjo1NVrODV9hgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMzoyNjozOFrODV-MIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MzU0NjkwOnYy", "diffSide": "RIGHT", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMjozMjo1NVrOFacjFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMjozMjo1NVrOFacjFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI3NTAzMA==", "bodyText": "no * imports", "url": "https://github.com/mulesoft/mule/pull/8541#discussion_r363275030", "createdAt": "2020-01-06T12:32:55Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "diffHunk": "@@ -9,15 +9,14 @@\n import static java.util.Arrays.asList;\n import static java.util.Collections.emptyList;\n import static java.util.Collections.singletonMap;\n+import static java.util.stream.Collectors.*;\n import static java.util.stream.Collectors.toList;\n import static org.hamcrest.CoreMatchers.instanceOf;\n import static org.hamcrest.CoreMatchers.is;\n import static org.hamcrest.Matchers.equalTo;\n import static org.hamcrest.Matchers.hasItems;\n import static org.hamcrest.Matchers.hasSize;\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertThat;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "273a6dc87559e2be2fd9dffe4cbd9aab67a28ca2"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MzU0NzA1OnYy", "diffSide": "RIGHT", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMjozMjo1OVrOFacjKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMjozMjo1OVrOFacjKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI3NTA1MQ==", "bodyText": "no * imports", "url": "https://github.com/mulesoft/mule/pull/8541#discussion_r363275051", "createdAt": "2020-01-06T12:32:59Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "diffHunk": "@@ -56,11 +56,8 @@\n import org.slf4j.Logger;\n \n import java.nio.BufferOverflowException;\n-import java.util.ArrayList;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Optional;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "273a6dc87559e2be2fd9dffe4cbd9aab67a28ca2"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MzU1MDY4OnYy", "diffSide": "RIGHT", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMjozNDo0NFrOFaclTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMjozNDo0NFrOFaclTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI3NTU5Nw==", "bodyText": "add allure annotations", "url": "https://github.com/mulesoft/mule/pull/8541#discussion_r363275597", "createdAt": "2020-01-06T12:34:44Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "diffHunk": "@@ -422,6 +421,25 @@ public void empty() throws Exception {\n     assertThat(processedEvents, hasSize(0));\n   }\n \n+  @Test\n+  public void testItemSequences() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "273a6dc87559e2be2fd9dffe4cbd9aab67a28ca2"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MzU1MTM4OnYy", "diffSide": "RIGHT", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMjozNTowN1rOFaclqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMjozNTowN1rOFaclqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI3NTY5MA==", "bodyText": "use hamcrest matchers for assertions", "url": "https://github.com/mulesoft/mule/pull/8541#discussion_r363275690", "createdAt": "2020-01-06T12:35:07Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "diffHunk": "@@ -422,6 +421,25 @@ public void empty() throws Exception {\n     assertThat(processedEvents, hasSize(0));\n   }\n \n+  @Test\n+  public void testItemSequences() throws Exception {\n+    List<String> arrayList = new ArrayList<>();\n+    arrayList.add(\"one\");\n+    arrayList.add(\"two\");\n+    arrayList.add(\"three\");\n+    arrayList.add(\"four\");\n+\n+    CoreEvent in = eventBuilder(muleContext).message(of(arrayList)).build();\n+    process(simpleForeach, in);\n+\n+    Set<ItemSequenceInfo> sequences = processedEvents.stream()\n+        .map(e -> e.getItemSequenceInfo().orElse(null))\n+        .collect(toSet());\n+\n+    assertFalse(ERR_INVALID_ITEM_SEQUENCE, sequences.contains(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "273a6dc87559e2be2fd9dffe4cbd9aab67a28ca2"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MzU1Mjc5OnYy", "diffSide": "RIGHT", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMjozNTo0N1rOFacmlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMjozNTo0N1rOFacmlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI3NTkyNQ==", "bodyText": "This should be a list and its exact contents asserted", "url": "https://github.com/mulesoft/mule/pull/8541#discussion_r363275925", "createdAt": "2020-01-06T12:35:47Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "diffHunk": "@@ -422,6 +421,25 @@ public void empty() throws Exception {\n     assertThat(processedEvents, hasSize(0));\n   }\n \n+  @Test\n+  public void testItemSequences() throws Exception {\n+    List<String> arrayList = new ArrayList<>();\n+    arrayList.add(\"one\");\n+    arrayList.add(\"two\");\n+    arrayList.add(\"three\");\n+    arrayList.add(\"four\");\n+\n+    CoreEvent in = eventBuilder(muleContext).message(of(arrayList)).build();\n+    process(simpleForeach, in);\n+\n+    Set<ItemSequenceInfo> sequences = processedEvents.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "273a6dc87559e2be2fd9dffe4cbd9aab67a28ca2"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MzU2Mjk3OnYy", "diffSide": "RIGHT", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMjo0MToxNFrOFacsvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMjo0MToxNFrOFacsvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI3NzUwMw==", "bodyText": "rename variable to something more meaningful, like payload", "url": "https://github.com/mulesoft/mule/pull/8541#discussion_r363277503", "createdAt": "2020-01-06T12:41:14Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "diffHunk": "@@ -422,6 +421,25 @@ public void empty() throws Exception {\n     assertThat(processedEvents, hasSize(0));\n   }\n \n+  @Test\n+  public void testItemSequences() throws Exception {\n+    List<String> arrayList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "273a6dc87559e2be2fd9dffe4cbd9aab67a28ca2"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MzY1NTU4OnYy", "diffSide": "RIGHT", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMzoyNjozMVrOFadjnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMzoyNjozMVrOFadjnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI5MTU1MQ==", "bodyText": "you can use the optional map/orElse here", "url": "https://github.com/mulesoft/mule/pull/8541#discussion_r363291551", "createdAt": "2020-01-06T13:26:31Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "diffHunk": "@@ -422,22 +431,29 @@ public void empty() throws Exception {\n   }\n \n   @Test\n+  @Issue(\"MULE-16764\")\n+  @io.qameta.allure.Description(\"ForEach is not setting itemSequenceInfo\")\n   public void testItemSequences() throws Exception {\n-    List<String> arrayList = new ArrayList<>();\n-    arrayList.add(\"one\");\n-    arrayList.add(\"two\");\n-    arrayList.add(\"three\");\n-    arrayList.add(\"four\");\n+    List<String> payload = new ArrayList<>();\n+    payload.add(\"one\");\n+    payload.add(\"two\");\n+    payload.add(\"three\");\n+    payload.add(\"four\");\n \n-    CoreEvent in = eventBuilder(muleContext).message(of(arrayList)).build();\n+    CoreEvent in = eventBuilder(muleContext).message(of(payload)).build();\n     process(simpleForeach, in);\n \n-    Set<ItemSequenceInfo> sequences = processedEvents.stream()\n-        .map(e -> e.getItemSequenceInfo().orElse(null))\n-        .collect(toSet());\n-\n-    assertFalse(ERR_INVALID_ITEM_SEQUENCE, sequences.contains(null));\n-    assertEquals(ERR_NUMBER_ITEM_SEQUENCE, arrayList.size(), sequences.size());\n+    List<Integer> sequences = processedEvents.stream()\n+        .map(e -> {\n+          if (e.getItemSequenceInfo().isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a666bebc8e328519da1fec1e6b3e75232197a37"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MzY1NjAwOnYy", "diffSide": "RIGHT", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMzoyNjozOFrOFadj2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMzoyNjozOFrOFadj2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI5MTYxMQ==", "bodyText": "remove unused imports", "url": "https://github.com/mulesoft/mule/pull/8541#discussion_r363291611", "createdAt": "2020-01-06T13:26:38Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/internal/routing/ForeachTestCase.java", "diffHunk": "@@ -9,14 +9,15 @@\n import static java.util.Arrays.asList;\n import static java.util.Collections.emptyList;\n import static java.util.Collections.singletonMap;\n-import static java.util.stream.Collectors.*;\n import static java.util.stream.Collectors.toList;\n import static org.hamcrest.CoreMatchers.instanceOf;\n import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n import static org.hamcrest.Matchers.hasItems;\n import static org.hamcrest.Matchers.hasSize;\n-import static org.junit.Assert.*;\n+import static org.junit.Assert.assertEquals;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a666bebc8e328519da1fec1e6b3e75232197a37"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 109, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}