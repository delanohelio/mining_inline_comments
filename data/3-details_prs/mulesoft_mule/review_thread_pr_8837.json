{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMTM0NTA2", "number": 8837, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyMzowNlrOD5IXCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyNTo0MlrOD5Iang==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjMyMzkyOnYy", "diffSide": "RIGHT", "path": "modules/http/src/main/java/org/mule/module/http/internal/listener/grizzly/GrizzlyServer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyMzowNlrOGQOtmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyOTo0NFrOGQO8hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3MTQ1MQ==", "bodyText": "Is this the only case where this method is used?", "url": "https://github.com/mulesoft/mule/pull/8837#discussion_r419671451", "createdAt": "2020-05-04T19:23:06Z", "author": {"login": "fsgonz"}, "path": "modules/http/src/main/java/org/mule/module/http/internal/listener/grizzly/GrizzlyServer.java", "diffHunk": "@@ -90,8 +125,8 @@ public RequestHandlerManager addRequestHandler(ListenerRequestMatcher listenerRe\n         return this.listenerRegistry.addRequestHandler(this, requestHandler, listenerRequestMatcher);\n     }\n \n-    public void cleanIdleConnections()\n+    public void setCleanIdleConnections()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "100baa66a8d3766fdaf230f320bbb4a9695344c5"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3NTI3MA==", "bodyText": "Added in previous commit for this feature. So ignore the question.", "url": "https://github.com/mulesoft/mule/pull/8837#discussion_r419675270", "createdAt": "2020-05-04T19:29:44Z", "author": {"login": "fsgonz"}, "path": "modules/http/src/main/java/org/mule/module/http/internal/listener/grizzly/GrizzlyServer.java", "diffHunk": "@@ -90,8 +125,8 @@ public RequestHandlerManager addRequestHandler(ListenerRequestMatcher listenerRe\n         return this.listenerRegistry.addRequestHandler(this, requestHandler, listenerRequestMatcher);\n     }\n \n-    public void cleanIdleConnections()\n+    public void setCleanIdleConnections()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3MTQ1MQ=="}, "originalCommit": {"oid": "100baa66a8d3766fdaf230f320bbb4a9695344c5"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjMyNjYyOnYy", "diffSide": "RIGHT", "path": "modules/http/src/main/java/org/mule/module/http/internal/listener/grizzly/GrizzlyServer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyMzo1M1rOGQOvUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyOToyMlrOGQO7TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3MTg4OQ==", "bodyText": "maybe an AtomicInteger with a decrementAndGet would suffice. Is that correct?", "url": "https://github.com/mulesoft/mule/pull/8837#discussion_r419671889", "createdAt": "2020-05-04T19:23:53Z", "author": {"login": "fsgonz"}, "path": "modules/http/src/main/java/org/mule/module/http/internal/listener/grizzly/GrizzlyServer.java", "diffHunk": "@@ -45,6 +50,22 @@ public synchronized void start() throws IOException\n             public void onAcceptEvent(Connection serverConnection, Connection clientConnection)\n             {\n                 clientConnection.getAttributes().setAttribute(\"Server Connection\", serverConnection);\n+                synchronized (openConnectionsSync) {\n+                    openConnections += 1;\n+                }\n+                clientConnection.getMonitoringConfig().addProbes(new ConnectionProbe.Adapter()\n+                {\n+                    @Override\n+                    public void onCloseEvent(Connection connection)\n+                    {\n+                        synchronized (openConnectionsSync) {\n+                            openConnections -= 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "100baa66a8d3766fdaf230f320bbb4a9695344c5"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3NDk1Ng==", "bodyText": "It's ok. Maybe it's clearer this way.", "url": "https://github.com/mulesoft/mule/pull/8837#discussion_r419674956", "createdAt": "2020-05-04T19:29:22Z", "author": {"login": "fsgonz"}, "path": "modules/http/src/main/java/org/mule/module/http/internal/listener/grizzly/GrizzlyServer.java", "diffHunk": "@@ -45,6 +50,22 @@ public synchronized void start() throws IOException\n             public void onAcceptEvent(Connection serverConnection, Connection clientConnection)\n             {\n                 clientConnection.getAttributes().setAttribute(\"Server Connection\", serverConnection);\n+                synchronized (openConnectionsSync) {\n+                    openConnections += 1;\n+                }\n+                clientConnection.getMonitoringConfig().addProbes(new ConnectionProbe.Adapter()\n+                {\n+                    @Override\n+                    public void onCloseEvent(Connection connection)\n+                    {\n+                        synchronized (openConnectionsSync) {\n+                            openConnections -= 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3MTg4OQ=="}, "originalCommit": {"oid": "100baa66a8d3766fdaf230f320bbb4a9695344c5"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjMyODE4OnYy", "diffSide": "RIGHT", "path": "modules/http/src/main/java/org/mule/module/http/internal/listener/grizzly/GrizzlyServer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyNDoxNVrOGQOwOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyNDoxNVrOGQOwOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3MjEyMw==", "bodyText": "maybe there's the possibility to use an atomicInteger.", "url": "https://github.com/mulesoft/mule/pull/8837#discussion_r419672123", "createdAt": "2020-05-04T19:24:15Z", "author": {"login": "fsgonz"}, "path": "modules/http/src/main/java/org/mule/module/http/internal/listener/grizzly/GrizzlyServer.java", "diffHunk": "@@ -45,6 +50,22 @@ public synchronized void start() throws IOException\n             public void onAcceptEvent(Connection serverConnection, Connection clientConnection)\n             {\n                 clientConnection.getAttributes().setAttribute(\"Server Connection\", serverConnection);\n+                synchronized (openConnectionsSync) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "100baa66a8d3766fdaf230f320bbb4a9695344c5"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjMzMzEwOnYy", "diffSide": "RIGHT", "path": "modules/http/src/main/java/org/mule/module/http/internal/listener/DefaultHttpListenerConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyNTo0MlrOGQOzYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToyNTo0MlrOGQOzYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3MjkzMA==", "bodyText": "I would not use setCleanIdleConnections as the name of the function without parmeters. Maybe add a parameter.", "url": "https://github.com/mulesoft/mule/pull/8837#discussion_r419672930", "createdAt": "2020-05-04T19:25:42Z", "author": {"login": "fsgonz"}, "path": "modules/http/src/main/java/org/mule/module/http/internal/listener/DefaultHttpListenerConfig.java", "diffHunk": "@@ -320,11 +320,11 @@ public synchronized void stop() throws MuleException\n \n     public void stopServer()\n     {\n-        server.stop();\n         if (server instanceof GrizzlyServer)\n         {\n-            ((GrizzlyServer) server).cleanIdleConnections();\n+            ((GrizzlyServer) server).setCleanIdleConnections();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "100baa66a8d3766fdaf230f320bbb4a9695344c5"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 24, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}