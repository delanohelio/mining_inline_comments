{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MTcyMjg2", "number": 9400, "title": "MULE-18753: Add live Sample Data fetching capabilities", "bodyText": "", "createdAt": "2020-09-11T15:08:10Z", "url": "https://github.com/mulesoft/mule/pull/9400", "merged": true, "mergeCommit": {"oid": "7f52ccb67737c55449567a87316c1eeed1a92a8d"}, "closed": true, "closedAt": "2020-09-11T21:56:19Z", "author": {"login": "marianogonzalez"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHmQTHAH2gAyNDg1MTcyMjg2OmEwMjhhYWUwMzQ0OWNjYTE4Mjk4MDNjZDYxNWQ4YzRkNTUxNTM0ZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdH64eUgFqTQ4NzA4MjU5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a028aae03449cca1829803cd615d8c4d551534fc", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/a028aae03449cca1829803cd615d8c4d551534fc", "committedDate": "2020-09-10T19:48:54Z", "message": "model checkpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dbc5b5a292dc8428df256a540a3566328ef9979", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/2dbc5b5a292dc8428df256a540a3566328ef9979", "committedDate": "2020-09-10T19:48:55Z", "message": "model checkpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42b07e07b9ab942cd917d8269620d6a5f8d9784b", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/42b07e07b9ab942cd917d8269620d6a5f8d9784b", "committedDate": "2020-09-10T19:48:55Z", "message": "need result support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c2d3db8d97f97cf2b12d9c0e4e4780c2bd740e1", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/0c2d3db8d97f97cf2b12d9c0e4e4780c2bd740e1", "committedDate": "2020-09-10T19:48:55Z", "message": "need result support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e71fa88e5f379971b4e13d4cbb7cc7541a2f8a0d", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/e71fa88e5f379971b4e13d4cbb7cc7541a2f8a0d", "committedDate": "2020-09-10T19:48:55Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ac0f1c840ff3f11be9c8643d2100391da8cf3e0", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/1ac0f1c840ff3f11be9c8643d2100391da8cf3e0", "committedDate": "2020-09-10T19:48:55Z", "message": "going full circle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe458219ef9dddaf1ca15aacfded053109fea5da", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/fe458219ef9dddaf1ca15aacfded053109fea5da", "committedDate": "2020-09-10T19:48:55Z", "message": "details"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a778de5cfc84495fda8bfac219c8a6a4d4db5ef", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/0a778de5cfc84495fda8bfac219c8a6a4d4db5ef", "committedDate": "2020-09-10T19:48:55Z", "message": "validator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7784e4d20be98855229bcf942c6dfc99a3393fb5", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/7784e4d20be98855229bcf942c6dfc99a3393fb5", "committedDate": "2020-09-10T19:48:55Z", "message": "tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06e5e8cb4efff8db4e93a3c222dbc97459e65f56", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/06e5e8cb4efff8db4e93a3c222dbc97459e65f56", "committedDate": "2020-09-10T19:48:55Z", "message": "catch forward issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd1f5985b472af126d7f6bbcb20ec779ba41afe6", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/fd1f5985b472af126d7f6bbcb20ec779ba41afe6", "committedDate": "2020-09-10T19:48:55Z", "message": "success"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60c0c77353f27e856d2a1388b7fff906b8734d09", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/60c0c77353f27e856d2a1388b7fff906b8734d09", "committedDate": "2020-09-10T19:48:55Z", "message": "location tests all green"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7da71a6c9ca7aa44563a6045742ad0540b69eec", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/d7da71a6c9ca7aa44563a6045742ad0540b69eec", "committedDate": "2020-09-10T19:48:55Z", "message": "location tests all green"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "771ac4ed2f7ad535c48afbdcfda4798ca5f6bf59", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/771ac4ed2f7ad535c48afbdcfda4798ca5f6bf59", "committedDate": "2020-09-10T19:48:55Z", "message": "more tests and allure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c392063469c6fd659cd5d858c9380828ca0850b6", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/c392063469c6fd659cd5d858c9380828ca0850b6", "committedDate": "2020-09-10T19:48:55Z", "message": "api tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4da68ef5ef20fdf74d28aff70340c8f47dccd469", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/4da68ef5ef20fdf74d28aff70340c8f47dccd469", "committedDate": "2020-09-10T19:48:55Z", "message": "api resolution tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cac7184c59c19ad55fee3e0111db35285d53f6d", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/5cac7184c59c19ad55fee3e0111db35285d53f6d", "committedDate": "2020-09-10T19:48:55Z", "message": "source tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30a551ceb71c2584cf2e33901a0e9793b81360bb", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/30a551ceb71c2584cf2e33901a0e9793b81360bb", "committedDate": "2020-09-10T19:48:55Z", "message": "model json test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed82fdee26d1977a5d8e2f0a658e6cc660b310e0", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/ed82fdee26d1977a5d8e2f0a658e6cc660b310e0", "committedDate": "2020-09-10T21:02:05Z", "message": "revert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d53c53f88c008cd2ae415739ca28266f67122ff7", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/d53c53f88c008cd2ae415739ca28266f67122ff7", "committedDate": "2020-09-11T15:07:28Z", "message": "self review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9751391a95444fe1084921bd61d9c2b6d1b74220", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/9751391a95444fe1084921bd61d9c2b6d1b74220", "committedDate": "2020-09-11T18:31:43Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2OTQ2MjYz", "url": "https://github.com/mulesoft/mule/pull/9400#pullrequestreview-486946263", "createdAt": "2020-09-11T16:19:48Z", "commit": {"oid": "d53c53f88c008cd2ae415739ca28266f67122ff7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoxODoyMVrOHQpGDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODo0Mzo1OVrOHQp19Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxMjU1OA==", "bodyText": "Should we take this into account? only operation and sources locations are valid here.", "url": "https://github.com/mulesoft/mule/pull/9400#discussion_r487212558", "createdAt": "2020-09-11T18:18:21Z", "author": {"login": "ndinu"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/MuleSampleDataService.java", "diffHunk": "@@ -0,0 +1,191 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.data.sample;\n+\n+import static java.lang.String.format;\n+import static org.mule.runtime.api.util.Preconditions.checkArgument;\n+import static org.mule.runtime.core.api.util.StringUtils.isBlank;\n+import static org.mule.runtime.core.internal.util.LocationUtils.deleteLastPartFromLocation;\n+import static org.mule.runtime.core.internal.util.LocationUtils.isConnection;\n+import static org.mule.runtime.module.extension.internal.util.IntrospectionUtils.getImplementingName;\n+import static org.mule.sdk.api.data.sample.SampleDataException.INVALID_LOCATION;\n+import static org.mule.sdk.api.data.sample.SampleDataException.INVALID_TARGET_EXTENSION;\n+import static org.mule.sdk.api.data.sample.SampleDataException.NOT_SUPPORTED;\n+import static org.mule.sdk.api.data.sample.SampleDataException.NO_DATA_AVAILABLE;\n+\n+import org.mule.runtime.api.component.AbstractComponent;\n+import org.mule.runtime.api.component.location.ComponentLocation;\n+import org.mule.runtime.api.component.location.ConfigurationComponentLocator;\n+import org.mule.runtime.api.component.location.Location;\n+import org.mule.runtime.api.message.Message;\n+import org.mule.runtime.api.meta.model.ComponentModel;\n+import org.mule.runtime.api.meta.model.ExtensionModel;\n+import org.mule.runtime.core.api.MuleContext;\n+import org.mule.runtime.core.api.connector.ConnectionManager;\n+import org.mule.runtime.core.api.data.sample.SampleDataService;\n+import org.mule.runtime.core.api.extension.ExtensionManager;\n+import org.mule.runtime.core.api.streaming.StreamingManager;\n+import org.mule.runtime.core.api.util.func.CheckedSupplier;\n+import org.mule.runtime.dsl.api.component.config.DefaultComponentLocation;\n+import org.mule.runtime.extension.api.data.sample.ComponentSampleDataProvider;\n+import org.mule.runtime.extension.api.runtime.config.ConfigurationInstance;\n+import org.mule.runtime.module.extension.internal.ExtensionResolvingContext;\n+import org.mule.runtime.module.extension.internal.runtime.resolver.StaticParameterValueResolver;\n+import org.mule.runtime.module.extension.internal.util.ReflectionCache;\n+import org.mule.sdk.api.data.sample.SampleDataException;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.function.Supplier;\n+\n+import javax.inject.Inject;\n+\n+/**\n+ * Default implementation of {@link SampleDataService}\n+ *\n+ * @since 4.4.0\n+ */\n+public class MuleSampleDataService implements SampleDataService {\n+\n+  private ConfigurationComponentLocator componentLocator;\n+  private ExtensionManager extensionManager;\n+  private MuleContext muleContext;\n+  private StreamingManager streamingManager;\n+  private ConnectionManager connectionManager;\n+\n+  /**\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public Message getSampleData(Location location) throws SampleDataException {\n+    boolean isConnection = isConnection(location);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d53c53f88c008cd2ae415739ca28266f67122ff7"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxNDYyMQ==", "bodyText": "injectSampleDataProviderFields?", "url": "https://github.com/mulesoft/mule/pull/9400#discussion_r487214621", "createdAt": "2020-09-11T18:22:37Z", "author": {"login": "ndinu"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderFactory.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.data.sample;\n+\n+import static org.mule.runtime.core.api.lifecycle.LifecycleUtils.initialiseIfNeeded;\n+import static org.mule.runtime.core.api.util.ClassUtils.instantiateClass;\n+import static org.mule.runtime.module.extension.internal.util.IntrospectionUtils.setValueIntoField;\n+import static org.mule.sdk.api.data.sample.SampleDataException.CONNECTION_FAILURE;\n+import static org.mule.sdk.api.data.sample.SampleDataException.MISSING_REQUIRED_PARAMETERS;\n+import static org.mule.sdk.api.data.sample.SampleDataException.UNKNOWN;\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import org.mule.runtime.core.api.MuleContext;\n+import org.mule.runtime.module.extension.internal.loader.java.property.InjectableParameterInfo;\n+import org.mule.runtime.module.extension.internal.loader.java.property.SampleDataProviderFactoryModelProperty;\n+import org.mule.runtime.module.extension.internal.runtime.ValueResolvingException;\n+import org.mule.runtime.module.extension.internal.runtime.resolver.ParameterValueResolver;\n+import org.mule.runtime.module.extension.internal.util.ReflectionCache;\n+import org.mule.sdk.api.data.sample.SampleDataException;\n+import org.mule.sdk.api.data.sample.SampleDataProvider;\n+\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Supplier;\n+\n+import org.slf4j.Logger;\n+\n+/**\n+ * Provides instances of {@link SampleDataProvider}\n+ *\n+ * @since 4.4.0\n+ */\n+public class SampleDataProviderFactory {\n+\n+  private static final Logger LOGGER = getLogger(SampleDataProviderFactory.class);\n+\n+  private final SampleDataProviderFactoryModelProperty factoryModelProperty;\n+  private final ParameterValueResolver parameterValueResolver;\n+  private final Supplier<Object> connectionSupplier;\n+  private final Supplier<Object> configurationSupplier;\n+  private final Field connectionField;\n+  private final Field configField;\n+  private final ReflectionCache reflectionCache;\n+  private final MuleContext muleContext;\n+\n+  public SampleDataProviderFactory(SampleDataProviderFactoryModelProperty factoryModelProperty,\n+                                   ParameterValueResolver parameterValueResolver,\n+                                   Supplier<Object> connectionSupplier,\n+                                   Supplier<Object> configurationSupplier,\n+                                   Field connectionField,\n+                                   Field configField,\n+                                   ReflectionCache reflectionCache,\n+                                   MuleContext muleContext) {\n+    this.factoryModelProperty = factoryModelProperty;\n+    this.parameterValueResolver = parameterValueResolver;\n+    this.connectionSupplier = connectionSupplier;\n+    this.configurationSupplier = configurationSupplier;\n+    this.connectionField = connectionField;\n+    this.configField = configField;\n+    this.reflectionCache = reflectionCache;\n+    this.muleContext = muleContext;\n+  }\n+\n+  <T, A> SampleDataProvider<T, A> createSampleDataProvider() throws SampleDataException {\n+    Class<? extends SampleDataProvider<T, A>> providerClass = factoryModelProperty.getSampleDataProviderClass();\n+\n+    try {\n+      SampleDataProvider<T, A> resolver = instantiateClass(providerClass);\n+      initialiseIfNeeded(resolver, true, muleContext);\n+\n+      injectValueProviderFields(resolver);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d53c53f88c008cd2ae415739ca28266f67122ff7"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxNTAwMw==", "bodyText": "delete SampleDataDeclarationEnricher", "url": "https://github.com/mulesoft/mule/pull/9400#discussion_r487215003", "createdAt": "2020-09-11T18:23:28Z", "author": {"login": "ndinu"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.data.sample;\n+\n+import static java.lang.String.format;\n+import static java.util.Collections.emptyMap;\n+import static java.util.Optional.empty;\n+import static java.util.Optional.ofNullable;\n+import static org.mule.runtime.core.internal.event.NullEventFactory.getNullEvent;\n+import static org.mule.runtime.core.internal.management.stats.NoOpCursorComponentDecoratorFactory.NO_OP_INSTANCE;\n+import static org.mule.runtime.core.internal.util.rx.ImmediateScheduler.IMMEDIATE_SCHEDULER;\n+import static org.mule.sdk.api.data.sample.SampleDataException.NOT_SUPPORTED;\n+import static org.mule.sdk.api.data.sample.SampleDataException.UNKNOWN;\n+\n+import org.mule.runtime.api.component.Component;\n+import org.mule.runtime.api.message.Message;\n+import org.mule.runtime.api.meta.model.ComponentModel;\n+import org.mule.runtime.api.meta.model.EnrichableModel;\n+import org.mule.runtime.api.meta.model.ExtensionModel;\n+import org.mule.runtime.api.meta.model.parameter.ParameterizedModel;\n+import org.mule.runtime.core.api.MuleContext;\n+import org.mule.runtime.core.api.retry.policy.NoRetryPolicyTemplate;\n+import org.mule.runtime.core.api.streaming.CursorProviderFactory;\n+import org.mule.runtime.core.api.streaming.NullCursorProviderFactory;\n+import org.mule.runtime.core.api.streaming.StreamingManager;\n+import org.mule.runtime.module.extension.api.runtime.privileged.ExecutionContextAdapter;\n+import org.mule.runtime.module.extension.internal.loader.java.property.SampleDataProviderFactoryModelProperty;\n+import org.mule.runtime.module.extension.internal.runtime.DefaultExecutionContext;\n+import org.mule.runtime.module.extension.internal.runtime.resolver.ParameterValueResolver;\n+import org.mule.runtime.module.extension.internal.runtime.result.ReturnDelegate;\n+import org.mule.runtime.module.extension.internal.runtime.result.ValueReturnDelegate;\n+import org.mule.runtime.module.extension.internal.util.ReflectionCache;\n+import org.mule.sdk.api.data.sample.SampleDataException;\n+import org.mule.sdk.api.data.sample.SampleDataProvider;\n+import org.mule.sdk.api.runtime.operation.Result;\n+\n+import java.util.function.Supplier;\n+\n+/**\n+ * Coordinates all the moving parts necessary to provision and execute a {@link SampleDataProvider},\n+ * handling possible errors and transforming the output into a {@link Message}\n+ *\n+ * @since 4.4.0SampleDataDeclarationEnricher", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d53c53f88c008cd2ae415739ca28266f67122ff7"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIyNDgyMQ==", "bodyText": "Creates", "url": "https://github.com/mulesoft/mule/pull/9400#discussion_r487224821", "createdAt": "2020-09-11T18:43:59Z", "author": {"login": "ndinu"}, "path": "modules/extensions-support/src/test/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataTestUtils.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.data.sample;\n+\n+import org.mule.sdk.api.data.sample.SampleDataException;\n+import org.mule.sdk.api.data.sample.SampleDataProvider;\n+\n+import org.hamcrest.BaseMatcher;\n+import org.hamcrest.Description;\n+import org.hamcrest.Matcher;\n+\n+/**\n+ * Utilities for testing {@link SampleDataProvider} functionalities\n+ *\n+ * @since 4.4.0\n+ */\n+public final class SampleDataTestUtils {\n+\n+  private SampleDataTestUtils() {}\n+\n+  /**\n+   * Creaes a matcher that tests that a {@link SampleDataException} has the given {@code failureCode}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d53c53f88c008cd2ae415739ca28266f67122ff7"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc8d5406a6264a5bfa4a792b202984c3cb19c798", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/bc8d5406a6264a5bfa4a792b202984c3cb19c798", "committedDate": "2020-09-11T19:37:41Z", "message": "feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9efc0944b69d7feafc2d42e582469f77b7472753", "author": {"user": {"login": "marianogonzalez", "name": "Mariano Gonzalez"}}, "url": "https://github.com/mulesoft/mule/commit/9efc0944b69d7feafc2d42e582469f77b7472753", "committedDate": "2020-09-11T19:43:37Z", "message": "revert"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MDgyNTkw", "url": "https://github.com/mulesoft/mule/pull/9400#pullrequestreview-487082590", "createdAt": "2020-09-11T19:50:53Z", "commit": {"oid": "9efc0944b69d7feafc2d42e582469f77b7472753"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1189, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}