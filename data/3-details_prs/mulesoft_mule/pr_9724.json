{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNjU1NzMw", "number": 9724, "title": "MULE-18985: ValueProvider and Metadata should return a failureErrorCo\u2026", "bodyText": "\u2026de=CONNECTION_FAILURE when a connection cannot be established/created from the context", "createdAt": "2020-11-13T15:40:55Z", "url": "https://github.com/mulesoft/mule/pull/9724", "merged": true, "mergeCommit": {"oid": "316dbe2e8d6154ce0fd383b3f3b019988d71a076"}, "closed": true, "closedAt": "2020-11-17T19:06:44Z", "author": {"login": "gsfernandes"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddA0j7gFqTUzMTA5MzQ1Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABddcgSjgFqTUzMjU3OTU0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMDkzNDUz", "url": "https://github.com/mulesoft/mule/pull/9724#pullrequestreview-531093453", "createdAt": "2020-11-16T08:37:46Z", "commit": {"oid": "107fe6e4850b05baa4d64bd4b1095a72e381c2b5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODozNzo0N1rOHzsukA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODozODoxOFrOHzsvtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3MjI0MA==", "bodyText": "shouldn't this be onComponent()? since we are resolving input metadata? I think the onKeys() should be used only when resolving metadata keys.", "url": "https://github.com/mulesoft/mule/pull/9724#discussion_r523972240", "createdAt": "2020-11-16T08:37:47Z", "author": {"login": "lucianoRM"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/metadata/MetadataInputDelegate.java", "diffHunk": "@@ -136,14 +138,16 @@ NamedTypeResolver getParameterResolver(String parameterName) {\n           .withReason(NULL_TYPE_ERROR)\n           .onParameter(parameter.getName());\n       return failure(parameter.getType(), failure);\n+    } catch (ConnectionException e) {\n+      return failure(newFailure(e).withMessage(\"Failed to establish connection: \" + ExceptionUtils.getMessage(e))\n+          .withFailureCode(CONNECTION_FAILURE).onKeys());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107fe6e4850b05baa4d64bd4b1095a72e381c2b5"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3MjQ0OA==", "bodyText": "same here", "url": "https://github.com/mulesoft/mule/pull/9724#discussion_r523972448", "createdAt": "2020-11-16T08:38:10Z", "author": {"login": "lucianoRM"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/metadata/MetadataOutputDelegate.java", "diffHunk": "@@ -140,6 +143,9 @@\n           .withReason(NULL_TYPE_ERROR)\n           .onOutputPayload();\n       return failure(output.getType(), failure);\n+    } catch (ConnectionException e) {\n+      return failure(newFailure(e).withMessage(\"Failed to establish connection: \" + ExceptionUtils.getMessage(e))\n+          .withFailureCode(CONNECTION_FAILURE).onKeys());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107fe6e4850b05baa4d64bd4b1095a72e381c2b5"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3MjUzNQ==", "bodyText": "and here", "url": "https://github.com/mulesoft/mule/pull/9724#discussion_r523972535", "createdAt": "2020-11-16T08:38:18Z", "author": {"login": "lucianoRM"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/metadata/MetadataOutputDelegate.java", "diffHunk": "@@ -175,6 +181,9 @@\n           .withReason(NULL_TYPE_ERROR)\n           .onOutputAttributes();\n       return failure(failure);\n+    } catch (ConnectionException e) {\n+      return failure(newFailure(e).withMessage(\"Failed to establish connection: \" + ExceptionUtils.getMessage(e))\n+          .withFailureCode(CONNECTION_FAILURE).onKeys());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107fe6e4850b05baa4d64bd4b1095a72e381c2b5"}, "originalPosition": 47}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "107fe6e4850b05baa4d64bd4b1095a72e381c2b5", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/107fe6e4850b05baa4d64bd4b1095a72e381c2b5", "committedDate": "2020-11-13T15:38:07Z", "message": "MULE-18985: ValueProvider and Metadata should return a failureErrorCode=CONNECTION_FAILURE when a connection cannot be established/created from the context"}, "afterCommit": {"oid": "b4794fe647a2804d0496f742a72813824a72fc04", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/b4794fe647a2804d0496f742a72813824a72fc04", "committedDate": "2020-11-16T21:09:15Z", "message": "Handle OAuth Service exceptions to propagate a CONNECTION_FAILURE error on each service"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMTUyMjIy", "url": "https://github.com/mulesoft/mule/pull/9724#pullrequestreview-532152222", "createdAt": "2020-11-17T09:06:09Z", "commit": {"oid": "bbb076213d9ef8a9aef8d9323ff4c0986f175d71"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f81332f2a5ebb4039047518112f892e92896063", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/4f81332f2a5ebb4039047518112f892e92896063", "committedDate": "2020-11-17T16:17:29Z", "message": "MULE-18985: ValueProvider and Metadata should return a failureErrorCode=CONNECTION_FAILURE when a connection cannot be established/created from the context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22834bec195e0e50a4492f8bf8d2918d8c460794", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/22834bec195e0e50a4492f8bf8d2918d8c460794", "committedDate": "2020-11-17T16:17:29Z", "message": "PR feedback. Make connections lazy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc860927d20735f08ed9181008dacda917683268", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/fc860927d20735f08ed9181008dacda917683268", "committedDate": "2020-11-17T16:17:29Z", "message": "Handle OAuth Service exceptions to propagate a CONNECTION_FAILURE error on each service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6452d9738e163eae6576d4385f8fda1d7337ab22", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/6452d9738e163eae6576d4385f8fda1d7337ab22", "committedDate": "2020-11-17T16:17:29Z", "message": "Adding logs for OAuth Service errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5844270072fd3aaf22ab7b9167475cc7e574a07f", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/5844270072fd3aaf22ab7b9167475cc7e574a07f", "committedDate": "2020-11-17T16:21:18Z", "message": "No need to use lazy connection as they are already lazy. The challenge is to make configurationInstances lazy"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bbb076213d9ef8a9aef8d9323ff4c0986f175d71", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/bbb076213d9ef8a9aef8d9323ff4c0986f175d71", "committedDate": "2020-11-16T21:31:55Z", "message": "Adding logs for OAuth Service errors"}, "afterCommit": {"oid": "5844270072fd3aaf22ab7b9167475cc7e574a07f", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/5844270072fd3aaf22ab7b9167475cc7e574a07f", "committedDate": "2020-11-17T16:21:18Z", "message": "No need to use lazy connection as they are already lazy. The challenge is to make configurationInstances lazy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNTY1ODEx", "url": "https://github.com/mulesoft/mule/pull/9724#pullrequestreview-532565811", "createdAt": "2020-11-17T16:39:43Z", "commit": {"oid": "5844270072fd3aaf22ab7b9167475cc7e574a07f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNTc5NTQ0", "url": "https://github.com/mulesoft/mule/pull/9724#pullrequestreview-532579544", "createdAt": "2020-11-17T16:53:39Z", "commit": {"oid": "5844270072fd3aaf22ab7b9167475cc7e574a07f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1067, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}