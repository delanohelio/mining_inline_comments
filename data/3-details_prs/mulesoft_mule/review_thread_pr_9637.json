{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MTcyNDI2", "number": 9637, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDozMjoyNFrOEzU3Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDoyMzowM1rOE0Zf0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjU0NjE0OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/source/poll/PollingSourceWrapper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDozMjoyNFrOHqesIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDozMjoyNFrOHqesIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwNTA1OA==", "bodyText": "You are never comparing the item watermark to the updated watermark.\nLet's say that currentWatermark is 5, and updatedWatermark is 10.\nMaybe recentlyProcessed has the items with id A and watermark 5, and the same item A but with id 7 comes for processing, you are changing the updated watermark to 7. In the next poll, an item of watermark 8 would be accepted.", "url": "https://github.com/mulesoft/mule/pull/9637#discussion_r514305058", "createdAt": "2020-10-29T14:32:24Z", "author": {"login": "ndinu"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/source/poll/PollingSourceWrapper.java", "diffHunk": "@@ -351,31 +358,34 @@ private boolean passesWatermark(DefaultPollItem pollItem) {\n               Serializable previousItemWatermark = recentlyProcessedIds.retrieve(itemId);\n               if (compareWatermarks(itemWatermark, previousItemWatermark, watermarkComparator) <= 0) {\n                 accept = false;\n+              } else {\n+                recentlyProcessedIds.remove(itemId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c5d0a1eedfc91d78022f74a5ac8152fcab22232"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzc5MTU0OnYy", "diffSide": "RIGHT", "path": "tests/test-extensions/petstore-extension/src/main/java/org/mule/test/petstore/extension/WatermarkingPetAdoptionSource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDoyMzowM1rOHsGbOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDoyMzowM1rOHsGbOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAwNDY2Ng==", "bodyText": "I think index and polls should not be static fields.", "url": "https://github.com/mulesoft/mule/pull/9637#discussion_r516004666", "createdAt": "2020-11-02T14:23:03Z", "author": {"login": "ndinu"}, "path": "tests/test-extensions/petstore-extension/src/main/java/org/mule/test/petstore/extension/WatermarkingPetAdoptionSource.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.test.petstore.extension;\n+\n+import static java.util.Comparator.naturalOrder;\n+import static org.mule.runtime.extension.api.annotation.param.MediaType.TEXT_PLAIN;\n+\n+import org.mule.runtime.api.exception.MuleException;\n+import org.mule.runtime.extension.api.annotation.execution.OnError;\n+import org.mule.runtime.extension.api.annotation.execution.OnSuccess;\n+import org.mule.runtime.extension.api.annotation.execution.OnTerminate;\n+import org.mule.runtime.extension.api.annotation.metadata.MetadataScope;\n+import org.mule.runtime.extension.api.annotation.param.MediaType;\n+import org.mule.runtime.extension.api.annotation.param.Parameter;\n+import org.mule.runtime.extension.api.runtime.operation.Result;\n+import org.mule.runtime.extension.api.runtime.source.PollContext;\n+import org.mule.runtime.extension.api.runtime.source.PollingSource;\n+import org.mule.runtime.extension.api.runtime.source.SourceCallbackContext;\n+\n+import java.util.List;\n+\n+@MetadataScope(outputResolver = PollingSourceMetadataResolver.class)\n+@MediaType(TEXT_PLAIN)\n+public class WatermarkingPetAdoptionSource extends PollingSource<String, Void> {\n+\n+  public static int STARTED_POLLS;\n+  private static int index;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5318f33a09297e4d9e8f9cb4c31c3f48da62c5df"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4654, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}