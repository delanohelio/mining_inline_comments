{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ3MDYwNjA2", "number": 9905, "title": "MULE-19040: Allow apps to be redeployed without being started", "bodyText": "", "createdAt": "2020-12-30T19:26:44Z", "url": "https://github.com/mulesoft/mule/pull/9905", "merged": true, "mergeCommit": {"oid": "887b71b617472914df85164373e93747ece8203d"}, "closed": true, "closedAt": "2021-01-26T13:41:18Z", "author": {"login": "sofiamorseletto"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdwKTBvAFqTU2ODU5ODg1Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdzs-QoAFqTU3NTc4MzQ2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4NTk4ODUz", "url": "https://github.com/mulesoft/mule/pull/9905#pullrequestreview-568598853", "createdAt": "2021-01-14T20:25:26Z", "commit": {"oid": "e5c5df46987d7895696236a9878ac37ef1a2acc9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY5MzMzMjI4", "url": "https://github.com/mulesoft/mule/pull/9905#pullrequestreview-569333228", "createdAt": "2021-01-15T14:58:45Z", "commit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNDo1ODo0NVrOIUfuGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNToxMDozMlrOIUgMgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2MjEzNw==", "bodyText": "add javadoc", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558362137", "createdAt": "2021-01-15T14:58:45Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/ArtifactStoppedListener.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.context;\n+\n+public interface ArtifactStoppedListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2MjUwOA==", "bodyText": "is this called before or after the start itself has happened? MAke this clear in the javadoc", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558362508", "createdAt": "2021-01-15T14:59:18Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/ArtifactStoppedListener.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.context;\n+\n+public interface ArtifactStoppedListener {\n+\n+  /**\n+   * Notifies the starting of an artifact.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2MjY2Mg==", "bodyText": "is this called before or after the stop itself has happened? MAke this clear in the javadoc", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558362662", "createdAt": "2021-01-15T14:59:29Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/ArtifactStoppedListener.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.context;\n+\n+public interface ArtifactStoppedListener {\n+\n+  /**\n+   * Notifies the starting of an artifact.\n+   */\n+  void onStart();\n+\n+  /**\n+   * Notifies the stopping of an artifact.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2MzA2MA==", "bodyText": "this wording is odd. Rephrase for clarity.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558363060", "createdAt": "2021-01-15T15:00:05Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/ArtifactStoppedListener.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.context;\n+\n+public interface ArtifactStoppedListener {\n+\n+  /**\n+   * Notifies the starting of an artifact.\n+   */\n+  void onStart();\n+\n+  /**\n+   * Notifies the stopping of an artifact.\n+   */\n+  void onStop();\n+\n+  /**\n+   * Selects persistance of the artifact's state", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2MzY4OQ==", "bodyText": "the presence of the mustPersist method in this interface makes me think that its name is more generic than the intended usage.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558363689", "createdAt": "2021-01-15T15:00:56Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/ArtifactStoppedListener.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.context;\n+\n+public interface ArtifactStoppedListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2Mzg4Mg==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558363882", "createdAt": "2021-01-15T15:01:14Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/DefaultMuleContext.java", "diffHunk": "@@ -357,6 +358,9 @@ public void start() throws MuleException {\n       fireNotification(new MuleContextNotification(this, CONTEXT_STARTED));\n       final org.mule.runtime.api.artifact.Registry apiRegistry = getApiRegistry();\n       listeners.forEach(l -> l.onStart(this, apiRegistry));\n+      Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+          Optional.ofNullable(getRegistry().lookupObject(ARTIFACT_STOPPED_LISTENER));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NDM1Ng==", "bodyText": "no need to use the intermediate Optional just for this. a simple null check will do.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558364356", "createdAt": "2021-01-15T15:02:01Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/DefaultMuleContext.java", "diffHunk": "@@ -357,6 +358,9 @@ public void start() throws MuleException {\n       fireNotification(new MuleContextNotification(this, CONTEXT_STARTED));\n       final org.mule.runtime.api.artifact.Registry apiRegistry = getApiRegistry();\n       listeners.forEach(l -> l.onStart(this, apiRegistry));\n+      Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+          Optional.ofNullable(getRegistry().lookupObject(ARTIFACT_STOPPED_LISTENER));\n+      optionalArtifactStoppedListener.ifPresent(ArtifactStoppedListener::onStart);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NDM4OA==", "bodyText": "no need to use the intermediate Optional just for this. a simple null check will do.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558364388", "createdAt": "2021-01-15T15:02:04Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/DefaultMuleContext.java", "diffHunk": "@@ -414,6 +418,9 @@ public void stop() throws MuleException {\n \n       final org.mule.runtime.api.artifact.Registry apiRegistry = getApiRegistry();\n       listeners.forEach(l -> l.onStop(this, apiRegistry));\n+      Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+          Optional.ofNullable(getRegistry().lookupObject(ARTIFACT_STOPPED_LISTENER));\n+      optionalArtifactStoppedListener.ifPresent(ArtifactStoppedListener::onStop);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NDc0OA==", "bodyText": "there doesn't seem to be any change in this class to add this import for", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558364748", "createdAt": "2021-01-15T15:02:40Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/application/DefaultMuleApplication.java", "diffHunk": "@@ -43,6 +43,7 @@\n import org.mule.runtime.core.api.context.notification.MuleContextListener;\n import org.mule.runtime.core.api.context.notification.MuleContextNotification;\n import org.mule.runtime.core.api.context.notification.MuleContextNotificationListener;\n+import org.mule.runtime.core.internal.context.DefaultMuleContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NTAzMQ==", "bodyText": "is this something that can really happen?", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558365031", "createdAt": "2021-01-15T15:03:07Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/artifact/ArtifactFactoryUtils.java", "diffHunk": "@@ -96,7 +96,7 @@ public static void withArtifactMuleContext(DeployableArtifact artifact, CheckedC\n    * @since 4.2\n    */\n   public static Optional<MuleContext> getMuleContext(DeployableArtifact artifact) {\n-    return artifact != null ? artifact.getRegistry().lookupByType(MuleContext.class) : empty();\n+    return artifact != null && artifact.getRegistry() != null ? artifact.getRegistry().lookupByType(MuleContext.class) : empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NTExNQ==", "bodyText": "there doesn't seem to be any change in this class to add this import for", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558365115", "createdAt": "2021-01-15T15:03:16Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/domain/DefaultMuleDomain.java", "diffHunk": "@@ -31,6 +31,7 @@\n import org.mule.runtime.api.service.ServiceRepository;\n import org.mule.runtime.api.value.ValueProviderService;\n import org.mule.runtime.core.api.context.notification.MuleContextListener;\n+import org.mule.runtime.core.internal.context.DefaultMuleContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NTkwOA==", "bodyText": "use the interface (ArtifactStoppedListener) in the var declaration, not the impl", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558365908", "createdAt": "2021-01-15T15:04:35Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArtifactDeployer.java", "diffHunk": "@@ -29,9 +36,16 @@ public void deploy(T artifact, boolean startArtifact) {\n     try {\n       artifact.install();\n       doInit(artifact);\n-      if (startArtifact) {\n+      if (startArtifact && shouldStartArtifact(artifact)) {\n         artifact.start();\n       }\n+\n+      ArtifactStoppedDeploymentListener artifactStoppedDeploymentListener =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NTk2OA==", "bodyText": "use the interface (ArtifactStoppedListener) in the var declaration, not the impl", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558365968", "createdAt": "2021-01-15T15:04:42Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "diffHunk": "@@ -80,28 +83,27 @@\n    * Property used to change the deployment mode to deploy only the indicated applications with no redeployment.\n    * mule -M-Dmule.deploy.applications=app1:app2:app3\n    * This can also be done passing an additional command line option (deprecated) like:\n-   *  mule -app app1:app2:app3 will restrict deployment only to those specified apps.\n+   * mule -app app1:app2:app3 will restrict deployment only to those specified apps.\n    */\n   public static final String DEPLOYMENT_APPLICATION_PROPERTY = \"mule.deploy.applications\";\n \n   protected static final int DEFAULT_CHANGES_CHECK_INTERVAL_MS = 5000;\n \n   protected transient final Logger logger = LoggerFactory.getLogger(getClass());\n-\n-  private final ReentrantLock deploymentLock;\n-  private final ArchiveDeployer<Domain> domainArchiveDeployer;\n   protected final ArchiveDeployer<Application> applicationArchiveDeployer;\n   protected final Supplier<SchedulerService> schedulerServiceSupplier;\n+  private final ReentrantLock deploymentLock;\n+  private final ArchiveDeployer<Domain> domainArchiveDeployer;\n   private final ArtifactTimestampListener<Application> applicationTimestampListener;\n   private final ArtifactTimestampListener<Domain> domainTimestampListener;\n   private final ObservableList<Application> applications;\n   private final ObservableList<Domain> domains;\n   private final DomainBundleArchiveDeployer domainBundleDeployer;\n   private final File appsDir;\n   private final File domainsDir;\n-  private ScheduledExecutorService artifactDirMonitorTimer;\n-\n+  private final List<ArtifactStoppedDeploymentListener> artifactStoppedDeploymentListeners;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NjE2Mw==", "bodyText": "use package visibility", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558366163", "createdAt": "2021-01-15T15:05:02Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentListener.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedListener;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.util.Optional;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+public class ArtifactStoppedDeploymentListener implements ArtifactStoppedListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NjI4Mg==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558366282", "createdAt": "2021-01-15T15:05:16Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentListener.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedListener;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.util.Optional;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+public class ArtifactStoppedDeploymentListener implements ArtifactStoppedListener {\n+\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());\n+  private AtomicBoolean shouldPersist;\n+  private String artifactName;\n+\n+  public ArtifactStoppedDeploymentListener(String artifactName) {\n+    this.artifactName = artifactName;\n+    shouldPersist = new AtomicBoolean(true);\n+  }\n+\n+  @Override\n+  public void onStart() {\n+    Properties properties = new Properties();\n+    properties.setProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, String.valueOf(true));\n+    try {\n+      resolveDeploymentProperties(artifactName, Optional.of(properties));\n+    } catch (IOException e) {\n+      logger.error(\"ApplicationStoppedDeploymentListener failed to process notification onArtifactStopped for artifact \"\n+          + artifactName, e);\n+    }\n+  }\n+\n+  @Override\n+  public void onStop() {\n+    if (!shouldPersist.get()) {\n+      return;\n+    }\n+    Properties properties = new Properties();\n+    properties.setProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, String.valueOf(false));\n+    try {\n+      resolveDeploymentProperties(artifactName, Optional.of(properties));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NjMzMQ==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558366331", "createdAt": "2021-01-15T15:05:21Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentListener.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedListener;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.util.Optional;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+public class ArtifactStoppedDeploymentListener implements ArtifactStoppedListener {\n+\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());\n+  private AtomicBoolean shouldPersist;\n+  private String artifactName;\n+\n+  public ArtifactStoppedDeploymentListener(String artifactName) {\n+    this.artifactName = artifactName;\n+    shouldPersist = new AtomicBoolean(true);\n+  }\n+\n+  @Override\n+  public void onStart() {\n+    Properties properties = new Properties();\n+    properties.setProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, String.valueOf(true));\n+    try {\n+      resolveDeploymentProperties(artifactName, Optional.of(properties));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2Njg1Mg==", "bodyText": "static imports go first", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558366852", "createdAt": "2021-01-15T15:06:12Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "diffHunk": "@@ -44,10 +34,22 @@\n import java.util.Optional;\n import java.util.Properties;\n \n-import org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate;\n-import org.apache.commons.beanutils.BeanToPropertyValueTransformer;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import static java.lang.Boolean.valueOf;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NzI0Mg==", "bodyText": "no need to use the intermediate Optional just for this. a simple null check will do.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558367242", "createdAt": "2021-01-15T15:06:51Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "diffHunk": "@@ -188,6 +193,13 @@ public void undeployArtifactWithoutUninstall(T artifact) {\n     logRequestToUndeployArtifact(artifact);\n     try {\n       deploymentListener.onUndeploymentStart(artifact.getArtifactName());\n+      Optional<Registry> optionalRegistry = ofNullable(artifact.getRegistry());\n+\n+      optionalRegistry.ifPresent(artifactRegistry -> {\n+        Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+            artifactRegistry.lookupByName(ARTIFACT_STOPPED_LISTENER);\n+        optionalArtifactStoppedListener.ifPresent(artifactStoppedListener -> artifactStoppedListener.mustPersist(false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NzMwMA==", "bodyText": "no need to use the intermediate Optional just for this. a simple null check will do.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558367300", "createdAt": "2021-01-15T15:06:55Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "diffHunk": "@@ -297,6 +309,13 @@ private void undeploy(T artifact, boolean removeData) {\n       deploymentListener.onUndeploymentStart(artifact.getArtifactName());\n \n       artifacts.remove(artifact);\n+      Optional<Registry> optionalRegistry = ofNullable(artifact.getRegistry());\n+\n+      optionalRegistry.ifPresent(artifactRegistry -> {\n+        Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+            artifactRegistry.lookupByName(ARTIFACT_STOPPED_LISTENER);\n+        optionalArtifactStoppedListener.ifPresent(artifactStoppedListener -> artifactStoppedListener.mustPersist(false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2Nzc1MQ==", "bodyText": "no need to use the intermediate Optional just for this. a simple null check will do.How can it be null, anyway?", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558367751", "createdAt": "2021-01-15T15:07:29Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "diffHunk": "@@ -297,6 +309,13 @@ private void undeploy(T artifact, boolean removeData) {\n       deploymentListener.onUndeploymentStart(artifact.getArtifactName());\n \n       artifacts.remove(artifact);\n+      Optional<Registry> optionalRegistry = ofNullable(artifact.getRegistry());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NzgzMg==", "bodyText": "no need to use the intermediate Optional just for this. a simple null check will do.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558367832", "createdAt": "2021-01-15T15:07:35Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "diffHunk": "@@ -405,8 +393,13 @@ public void redeploy(String artifactName, Optional<Properties> deploymentPropert\n \n     deploymentTemplate.preRedeploy(artifact);\n \n+    Optional<Registry> optionalRegistry = ofNullable(artifact.getRegistry());\n+    Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+        optionalRegistry.isPresent() ? optionalRegistry.get().lookupByName(ARTIFACT_STOPPED_LISTENER) : Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 167}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2Nzg2OQ==", "bodyText": "no need to use the intermediate Optional just for this. a simple null check will do.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558367869", "createdAt": "2021-01-15T15:07:39Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "diffHunk": "@@ -405,8 +393,13 @@ public void redeploy(String artifactName, Optional<Properties> deploymentPropert\n \n     deploymentTemplate.preRedeploy(artifact);\n \n+    Optional<Registry> optionalRegistry = ofNullable(artifact.getRegistry());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2ODA3OQ==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558368079", "createdAt": "2021-01-15T15:07:54Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArtifactDeployer.java", "diffHunk": "@@ -29,9 +36,16 @@ public void deploy(T artifact, boolean startArtifact) {\n     try {\n       artifact.install();\n       doInit(artifact);\n-      if (startArtifact) {\n+      if (startArtifact && shouldStartArtifact(artifact)) {\n         artifact.start();\n       }\n+\n+      ArtifactStoppedDeploymentListener artifactStoppedDeploymentListener =\n+          new ArtifactStoppedDeploymentListener(artifact.getArtifactName());\n+      ArtifactFactoryUtils.withArtifactMuleContext(artifact, muleContext -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2ODE1NQ==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558368155", "createdAt": "2021-01-15T15:08:00Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArtifactDeployer.java", "diffHunk": "@@ -105,4 +119,15 @@ private void tryToStopArtifact(T artifact) {\n     }\n   }\n \n+  private Boolean shouldStartArtifact(T artifact) {\n+    Properties deploymentProperties = null;\n+    try {\n+      deploymentProperties = DeploymentPropertiesUtils.resolveDeploymentProperties(artifact.getArtifactName(), Optional.empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2ODIzNQ==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558368235", "createdAt": "2021-01-15T15:08:06Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArtifactDeployer.java", "diffHunk": "@@ -105,4 +119,15 @@ private void tryToStopArtifact(T artifact) {\n     }\n   }\n \n+  private Boolean shouldStartArtifact(T artifact) {\n+    Properties deploymentProperties = null;\n+    try {\n+      deploymentProperties = DeploymentPropertiesUtils.resolveDeploymentProperties(artifact.getArtifactName(), Optional.empty());\n+    } catch (IOException e) {\n+      logger.error(\"Failed to load deployment property for artifact \"\n+          + artifact.getArtifactName(), e);\n+    }\n+    return deploymentProperties != null\n+        && Boolean.parseBoolean(deploymentProperties.getProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, \"true\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2ODU3MQ==", "bodyText": "format code properly in the javadoc", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558368571", "createdAt": "2021-01-15T15:08:36Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "diffHunk": "@@ -80,28 +83,27 @@\n    * Property used to change the deployment mode to deploy only the indicated applications with no redeployment.\n    * mule -M-Dmule.deploy.applications=app1:app2:app3\n    * This can also be done passing an additional command line option (deprecated) like:\n-   *  mule -app app1:app2:app3 will restrict deployment only to those specified apps.\n+   * mule -app app1:app2:app3 will restrict deployment only to those specified apps.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2OTEyNg==", "bodyText": "Use Integer.getInteger to read the system property.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558369126", "createdAt": "2021-01-15T15:09:25Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "diffHunk": "@@ -135,6 +137,16 @@ public DeploymentDirectoryWatcher(DomainBundleArchiveDeployer domainBundleDeploy\n     this.schedulerServiceSupplier = schedulerServiceSupplier;\n     this.applicationTimestampListener = new ArtifactTimestampListener(applications);\n     this.domainTimestampListener = new ArtifactTimestampListener(domains);\n+    this.artifactStoppedDeploymentListeners = new ArrayList<>();\n+  }\n+\n+  private static int getChangesCheckIntervalMs() {\n+    try {\n+      String value = System.getProperty(CHANGE_CHECK_INTERVAL_PROPERTY);\n+      return Integer.parseInt(value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2OTU3OQ==", "bodyText": "optional hell", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558369579", "createdAt": "2021-01-15T15:10:04Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "diffHunk": "@@ -217,12 +230,18 @@ private void stopArtifacts(List<? extends DeployableArtifact> artifacts) {\n     }\n   }\n \n-  private static int getChangesCheckIntervalMs() {\n-    try {\n-      String value = System.getProperty(CHANGE_CHECK_INTERVAL_PROPERTY);\n-      return Integer.parseInt(value);\n-    } catch (NumberFormatException e) {\n-      return DEFAULT_CHANGES_CHECK_INTERVAL_MS;\n+  private void notifyStopListeners() {\n+    for (Application application : applications) {\n+      Optional<Registry> optionalRegistry = ofNullable(application.getRegistry());\n+      Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+          optionalRegistry.isPresent() ? optionalRegistry.get().lookupByName(ARTIFACT_STOPPED_LISTENER) : Optional.empty();\n+      optionalArtifactStoppedListener.ifPresent(artifactStoppedListener -> artifactStoppedListener.mustPersist(false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2OTYyNQ==", "bodyText": "optional hell", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558369625", "createdAt": "2021-01-15T15:10:07Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "diffHunk": "@@ -217,12 +230,18 @@ private void stopArtifacts(List<? extends DeployableArtifact> artifacts) {\n     }\n   }\n \n-  private static int getChangesCheckIntervalMs() {\n-    try {\n-      String value = System.getProperty(CHANGE_CHECK_INTERVAL_PROPERTY);\n-      return Integer.parseInt(value);\n-    } catch (NumberFormatException e) {\n-      return DEFAULT_CHANGES_CHECK_INTERVAL_MS;\n+  private void notifyStopListeners() {\n+    for (Application application : applications) {\n+      Optional<Registry> optionalRegistry = ofNullable(application.getRegistry());\n+      Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+          optionalRegistry.isPresent() ? optionalRegistry.get().lookupByName(ARTIFACT_STOPPED_LISTENER) : Optional.empty();\n+      optionalArtifactStoppedListener.ifPresent(artifactStoppedListener -> artifactStoppedListener.mustPersist(false));\n+    }\n+    for (Domain domain : domains) {\n+      Optional<Registry> optionalRegistry = ofNullable(domain.getRegistry());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2OTkyMA==", "bodyText": "why move this?", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558369920", "createdAt": "2021-01-15T15:10:32Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DomainArchiveDeployer.java", "diffHunk": "@@ -21,20 +24,15 @@\n import java.util.Optional;\n import java.util.Properties;\n \n-import org.apache.commons.lang3.NotImplementedException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n /**\n  * Archive deployer for domains.\n  * <p/>\n  * Knows how to deploy / undeploy a domain and a domain bundle (zip with domain + domains apps).\n  */\n public class DomainArchiveDeployer implements ArchiveDeployer<Domain> {\n \n-  private transient final Logger logger = LoggerFactory.getLogger(getClass());\n-\n   public static final String DOMAIN_BUNDLE_APPS_FOLDER = \"apps\";\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6ddadd940e70adce526aad5d3984cb9246bd498", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/b6ddadd940e70adce526aad5d3984cb9246bd498", "committedDate": "2021-01-19T13:38:37Z", "message": "Created and set listener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a3bc1eca69a8b0bb929e3de50aeb23114da09c0", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/3a3bc1eca69a8b0bb929e3de50aeb23114da09c0", "committedDate": "2021-01-19T13:38:38Z", "message": "Added deployment property load procedure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dce61d74b230adad476f76a72d4133a0dc4fd7c", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/9dce61d74b230adad476f76a72d4133a0dc4fd7c", "committedDate": "2021-01-19T13:38:38Z", "message": "Adapting domain restart"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe90e4439d9f45074713b1b8ce10aa35baca549d", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/fe90e4439d9f45074713b1b8ce10aa35baca549d", "committedDate": "2021-01-19T13:38:38Z", "message": "Changed approach to use Mule Context registry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b372365542cc65623f82be45a7d0deb83ccd675f", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/b372365542cc65623f82be45a7d0deb83ccd675f", "committedDate": "2021-01-19T13:38:38Z", "message": "Added tests and fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da3f0338614ee61280dd21cc351d12b621b3e48a", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/da3f0338614ee61280dd21cc351d12b621b3e48a", "committedDate": "2021-01-19T13:38:38Z", "message": "Refactoring where to add listener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7e7b60c4b8f2ba281bf90dcc554ba4ddca965f7", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/f7e7b60c4b8f2ba281bf90dcc554ba4ddca965f7", "committedDate": "2021-01-19T13:38:38Z", "message": "Cleaning unused classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "029142247b21023cc6f10e48a86d1fbe9263ffff", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/029142247b21023cc6f10e48a86d1fbe9263ffff", "committedDate": "2021-01-19T13:38:38Z", "message": "Reformatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d7035469fbc02d2acc611bce8569bc15998dd65", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/4d7035469fbc02d2acc611bce8569bc15998dd65", "committedDate": "2021-01-19T13:38:38Z", "message": "Cleaning unused classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "253a923c2945c05f2173f261e78807afcdcf4f5c", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/253a923c2945c05f2173f261e78807afcdcf4f5c", "committedDate": "2021-01-19T13:38:38Z", "message": "Reformatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3358ff596829eb4a088cff13906bdd39de525b52", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/3358ff596829eb4a088cff13906bdd39de525b52", "committedDate": "2021-01-19T13:38:38Z", "message": "Fixes according to PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c4d1b725116f16eb5c829b19cef3e2aef5e8600", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/8c4d1b725116f16eb5c829b19cef3e2aef5e8600", "committedDate": "2021-01-19T13:38:38Z", "message": "Cleaning unused classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f22cdeaa2bb2d0987e93228c9e30209b1e53abf", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/1f22cdeaa2bb2d0987e93228c9e30209b1e53abf", "committedDate": "2021-01-19T13:38:38Z", "message": "Reformatted"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0450651d182a21324447dd8f77886ecda82b65c6", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/0450651d182a21324447dd8f77886ecda82b65c6", "committedDate": "2021-01-19T12:52:28Z", "message": "Reformatted"}, "afterCommit": {"oid": "1f22cdeaa2bb2d0987e93228c9e30209b1e53abf", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/1f22cdeaa2bb2d0987e93228c9e30209b1e53abf", "committedDate": "2021-01-19T13:38:38Z", "message": "Reformatted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2449d984f9229528cbc7e78765e6acd68c20103", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/a2449d984f9229528cbc7e78765e6acd68c20103", "committedDate": "2021-01-19T14:35:02Z", "message": "Reformatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82574688fb663998972f9156fdee5fc7a0106bb2", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/82574688fb663998972f9156fdee5fc7a0106bb2", "committedDate": "2021-01-19T15:10:36Z", "message": "Another reformat"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "129e1ecb0f273950c19df88e9fba98f178dd3619", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/129e1ecb0f273950c19df88e9fba98f178dd3619", "committedDate": "2021-01-19T18:23:02Z", "message": "Removing intellij formatter changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0556a956ca1662c8417f80f5dfe4245eca76c2b", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/a0556a956ca1662c8417f80f5dfe4245eca76c2b", "committedDate": "2021-01-20T12:31:39Z", "message": "Log fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b", "committedDate": "2021-01-21T13:25:33Z", "message": "Refactor: moved doNotPersist method to DefaultArtifactDeployer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0MjcxNzAy", "url": "https://github.com/mulesoft/mule/pull/9905#pullrequestreview-574271702", "createdAt": "2021-01-22T13:46:44Z", "commit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo0Njo0NFrOIYk3Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NTo1NFrOIYlOsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MDczMQ==", "bodyText": "still open", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562640731", "createdAt": "2021-01-22T13:46:44Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/artifact/ArtifactFactoryUtils.java", "diffHunk": "@@ -96,7 +96,7 @@ public static void withArtifactMuleContext(DeployableArtifact artifact, CheckedC\n    * @since 4.2\n    */\n   public static Optional<MuleContext> getMuleContext(DeployableArtifact artifact) {\n-    return artifact != null ? artifact.getRegistry().lookupByType(MuleContext.class) : empty();\n+    return artifact != null && artifact.getRegistry() != null ? artifact.getRegistry().lookupByType(MuleContext.class) : empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NTAzMQ=="}, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MTEzOA==", "bodyText": "add <p> for proer formatting of the javadoc", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562641138", "createdAt": "2021-01-22T13:47:22Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactDeployer.java", "diffHunk": "@@ -46,4 +46,12 @@ default void deploy(final T artifact) {\n    */\n   void undeploy(final T artifact);\n \n+  /**\n+   * Cancels the persistence of a stop of an artifact.\n+   *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MTY5MQ==", "bodyText": "make final", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562641691", "createdAt": "2021-01-22T13:48:08Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import static java.lang.String.valueOf;\n+import static java.util.Optional.of;\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedPersistenceListener;\n+\n+import java.io.IOException;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+class ArtifactStoppedDeploymentPersistenceListener implements ArtifactStoppedPersistenceListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MTgwNA==", "bodyText": "this should be static", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562641804", "createdAt": "2021-01-22T13:48:17Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import static java.lang.String.valueOf;\n+import static java.util.Optional.of;\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedPersistenceListener;\n+\n+import java.io.IOException;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+class ArtifactStoppedDeploymentPersistenceListener implements ArtifactStoppedPersistenceListener {\n+\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MzM4Mg==", "bodyText": "who calls this method?", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562643382", "createdAt": "2021-01-22T13:50:39Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import static java.lang.String.valueOf;\n+import static java.util.Optional.of;\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedPersistenceListener;\n+\n+import java.io.IOException;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+class ArtifactStoppedDeploymentPersistenceListener implements ArtifactStoppedPersistenceListener {\n+\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());\n+  private AtomicBoolean shouldPersist;\n+  private String artifactName;\n+\n+  public ArtifactStoppedDeploymentPersistenceListener(String artifactName) {\n+    this.artifactName = artifactName;\n+    shouldPersist = new AtomicBoolean(true);\n+  }\n+\n+  @Override\n+  public void onStart() {\n+    Properties properties = new Properties();\n+    properties.setProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, valueOf(true));\n+    try {\n+      resolveDeploymentProperties(artifactName, of(properties));\n+    } catch (IOException e) {\n+      logger.error(\"ArtifactStoppedDeploymentPersistenceListener failed to process notification onStart for artifact \"\n+          + artifactName, e);\n+    }\n+  }\n+\n+  @Override\n+  public void onStop() {\n+    if (!shouldPersist.get()) {\n+      return;\n+    }\n+    Properties properties = new Properties();\n+    properties.setProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, valueOf(false));\n+    try {\n+      resolveDeploymentProperties(artifactName, of(properties));\n+    } catch (IOException e) {\n+      logger.error(\"ArtifactStoppedDeploymentPersistenceListener failed to process notification onStop for artifact \"\n+          + artifactName, e);\n+    }\n+  }\n+\n+  @Override\n+  public void doNotPersist() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MzYzMw==", "bodyText": "where can this be used concurrently?", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562643633", "createdAt": "2021-01-22T13:51:04Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import static java.lang.String.valueOf;\n+import static java.util.Optional.of;\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedPersistenceListener;\n+\n+import java.io.IOException;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+class ArtifactStoppedDeploymentPersistenceListener implements ArtifactStoppedPersistenceListener {\n+\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());\n+  private AtomicBoolean shouldPersist;\n+  private String artifactName;\n+\n+  public ArtifactStoppedDeploymentPersistenceListener(String artifactName) {\n+    this.artifactName = artifactName;\n+    shouldPersist = new AtomicBoolean(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NDE1Mg==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562644152", "createdAt": "2021-01-22T13:51:51Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArtifactDeployer.java", "diffHunk": "@@ -105,4 +124,25 @@ private void tryToStopArtifact(T artifact) {\n     }\n   }\n \n+  private Boolean shouldStartArtifact(T artifact) {\n+    Properties deploymentProperties = null;\n+    try {\n+      deploymentProperties = resolveDeploymentProperties(artifact.getArtifactName(), Optional.empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NDYwNA==", "bodyText": "keep this separation", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562644604", "createdAt": "2021-01-22T13:52:31Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -96,7 +104,6 @@\n \n   @Rule\n   public SystemProperty systemProperty = new SystemProperty(OVERWRITTEN_PROPERTY, OVERWRITTEN_PROPERTY_SYSTEM_VALUE);\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NDc2MQ==", "bodyText": "add @Issue annotation", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562644761", "createdAt": "2021-01-22T13:52:47Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NDg3Mw==", "bodyText": "add @Issue annotation", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562644873", "createdAt": "2021-01-22T13:52:59Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test\n+  public void whenAppIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyAppFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+  }\n+\n+  @Test\n+  public void whenAppIsStoppedByUndeploymentStateIsNotPersistedAsDeploymentProperty() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NDkwNQ==", "bodyText": "add @Issue annotation", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562644905", "createdAt": "2021-01-22T13:53:02Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -696,6 +735,79 @@ public void undeploysStoppedApp() throws Exception {\n     deploymentService.undeploy(app);\n   }\n \n+  @Test\n+  public void undeploysStoppedAppAndDoesNotStartItOnDeploy() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NDkzOQ==", "bodyText": "add @Issue annotation", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562644939", "createdAt": "2021-01-22T13:53:06Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -696,6 +735,79 @@ public void undeploysStoppedApp() throws Exception {\n     deploymentService.undeploy(app);\n   }\n \n+  @Test\n+  public void undeploysStoppedAppAndDoesNotStartItOnDeploy() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+    assertStatus(app, STOPPED);\n+\n+    serviceManager.stop();\n+    extensionModelLoaderManager.stop();\n+    deploymentService.stop();\n+\n+    reset(applicationDeploymentListener);\n+\n+    MuleArtifactResourcesRegistry muleArtifactResourcesRegistry =\n+        new MuleArtifactResourcesRegistry.Builder().moduleRepository(moduleRepository).build();\n+\n+    serviceManager = muleArtifactResourcesRegistry.getServiceManager();\n+    serviceManager.start();\n+\n+    extensionModelLoaderManager = muleArtifactResourcesRegistry.getExtensionModelLoaderManager();\n+    extensionModelLoaderManager.start();\n+\n+    deploymentService = new TestMuleDeploymentService(muleArtifactResourcesRegistry.getDomainFactory(),\n+                                                      muleArtifactResourcesRegistry.getApplicationFactory(),\n+                                                      () -> findSchedulerService(serviceManager));\n+    configureDeploymentService();\n+    deploymentService.start();\n+\n+    assertDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app_2 = findApp(emptyAppFileBuilder.getId(), 1);\n+    assertStatus(app_2, CREATED);\n+  }\n+\n+  @Test\n+  public void undeploysNotStoppedAppAndStartsItOnDeploy() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NTI5Ng==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562645296", "createdAt": "2021-01-22T13:53:42Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test\n+  public void whenAppIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyAppFileBuilder.getId(), Optional.empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NTQ4Mw==", "bodyText": "use hamcrest matchers", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562645483", "createdAt": "2021-01-22T13:54:03Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test\n+  public void whenAppIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NTUzNw==", "bodyText": "use hamcrest matchers", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562645537", "createdAt": "2021-01-22T13:54:07Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test\n+  public void whenAppIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyAppFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NTU5Mw==", "bodyText": "use hamcrest matchers", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562645593", "createdAt": "2021-01-22T13:54:11Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test\n+  public void whenAppIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyAppFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NTc3Mg==", "bodyText": "use hamcrest matchers", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562645772", "createdAt": "2021-01-22T13:54:30Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test\n+  public void whenAppIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyAppFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+  }\n+\n+  @Test\n+  public void whenAppIsStoppedByUndeploymentStateIsNotPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NTgwNg==", "bodyText": "use hamcrest matchers", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562645806", "createdAt": "2021-01-22T13:54:32Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test\n+  public void whenAppIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyAppFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+  }\n+\n+  @Test\n+  public void whenAppIsStoppedByUndeploymentStateIsNotPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+    deploymentService.undeploy(app);\n+\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyAppFileBuilder.getId(), Optional.empty());\n+    assertNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjA4MQ==", "bodyText": "allure", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646081", "createdAt": "2021-01-22T13:55:01Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -623,6 +630,34 @@ public void redeploysDomainZipRefreshesApps() throws Exception {\n     assertApplicationDeploymentSuccess(applicationDeploymentListener, dummyDomainApp1FileBuilder.getId());\n   }\n \n+  @Test\n+  public void redeploysDomainZipRefreshesAppsButIfTheyWereStoppedTheyDoNotStart() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjE1OQ==", "bodyText": "allure", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646159", "createdAt": "2021-01-22T13:55:07Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1096,6 +1131,39 @@ public void undeploysStoppedDomain() throws Exception {\n     deploymentService.undeploy(domain);\n   }\n \n+  @Test\n+  public void whenDomainIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjIyNw==", "bodyText": "hamcerst", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646227", "createdAt": "2021-01-22T13:55:12Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1096,6 +1131,39 @@ public void undeploysStoppedDomain() throws Exception {\n     deploymentService.undeploy(domain);\n   }\n \n+  @Test\n+  public void whenDomainIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedDomainFromBuilder(emptyDomainFileBuilder);\n+\n+    startDeployment();\n+\n+    assertDeploymentSuccess(domainDeploymentListener, emptyDomainFileBuilder.getId());\n+    final Domain domain = findADomain(emptyDomainFileBuilder.getId());\n+    domain.stop();\n+\n+    assertNotNull(domain.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjMzNQ==", "bodyText": "hamcrest", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646335", "createdAt": "2021-01-22T13:55:21Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1096,6 +1131,39 @@ public void undeploysStoppedDomain() throws Exception {\n     deploymentService.undeploy(domain);\n   }\n \n+  @Test\n+  public void whenDomainIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedDomainFromBuilder(emptyDomainFileBuilder);\n+\n+    startDeployment();\n+\n+    assertDeploymentSuccess(domainDeploymentListener, emptyDomainFileBuilder.getId());\n+    final Domain domain = findADomain(emptyDomainFileBuilder.getId());\n+    domain.stop();\n+\n+    assertNotNull(domain.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyDomainFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjM2Mg==", "bodyText": "allure", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646362", "createdAt": "2021-01-22T13:55:24Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1096,6 +1131,39 @@ public void undeploysStoppedDomain() throws Exception {\n     deploymentService.undeploy(domain);\n   }\n \n+  @Test\n+  public void whenDomainIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedDomainFromBuilder(emptyDomainFileBuilder);\n+\n+    startDeployment();\n+\n+    assertDeploymentSuccess(domainDeploymentListener, emptyDomainFileBuilder.getId());\n+    final Domain domain = findADomain(emptyDomainFileBuilder.getId());\n+    domain.stop();\n+\n+    assertNotNull(domain.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyDomainFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+  }\n+\n+  @Test\n+  public void whenDomainIsStoppedByUndeploymentStateIsNotfedAsDeploymentProperty() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjQxNg==", "bodyText": "hamcrest", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646416", "createdAt": "2021-01-22T13:55:29Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1096,6 +1131,39 @@ public void undeploysStoppedDomain() throws Exception {\n     deploymentService.undeploy(domain);\n   }\n \n+  @Test\n+  public void whenDomainIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedDomainFromBuilder(emptyDomainFileBuilder);\n+\n+    startDeployment();\n+\n+    assertDeploymentSuccess(domainDeploymentListener, emptyDomainFileBuilder.getId());\n+    final Domain domain = findADomain(emptyDomainFileBuilder.getId());\n+    domain.stop();\n+\n+    assertNotNull(domain.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyDomainFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+  }\n+\n+  @Test\n+  public void whenDomainIsStoppedByUndeploymentStateIsNotfedAsDeploymentProperty() throws Exception {\n+    addPackedDomainFromBuilder(emptyDomainFileBuilder);\n+\n+    startDeployment();\n+\n+    assertDeploymentSuccess(domainDeploymentListener, emptyDomainFileBuilder.getId());\n+    final Domain domain = findADomain(emptyDomainFileBuilder.getId());\n+\n+    assertNotNull(domain.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjU0Nw==", "bodyText": "allure", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646547", "createdAt": "2021-01-22T13:55:40Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1303,6 +1371,33 @@ public void deployAndRedeployDomainWithDeploymentProperties() throws Exception {\n                                             .get() instanceof TestComponentOnRedeploy);\n   }\n \n+  @Test\n+  public void redeployDomainWithStoppedAppsShouldPersistStoppedStateAndDoNotStartApps() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjYwMQ==", "bodyText": "hamcrest", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646601", "createdAt": "2021-01-22T13:55:46Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1303,6 +1371,33 @@ public void deployAndRedeployDomainWithDeploymentProperties() throws Exception {\n                                             .get() instanceof TestComponentOnRedeploy);\n   }\n \n+  @Test\n+  public void redeployDomainWithStoppedAppsShouldPersistStoppedStateAndDoNotStartApps() throws Exception {\n+    addPackedDomainFromBuilder(dummyDomainFileBuilder);\n+    File dummyDomainFile = new File(domainsDir, dummyDomainFileBuilder.getZipPath());\n+    long firstFileTimestamp = dummyDomainFile.lastModified();\n+\n+    addPackedAppFromBuilder(dummyDomainApp1FileBuilder);\n+\n+    startDeployment();\n+\n+    assertDeploymentSuccess(domainDeploymentListener, dummyDomainFileBuilder.getId());\n+    final Domain domain = findADomain(dummyDomainFileBuilder.getId());\n+    assertNotNull(domain.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjcwNw==", "bodyText": "hamcrest", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646707", "createdAt": "2021-01-22T13:55:54Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1303,6 +1371,33 @@ public void deployAndRedeployDomainWithDeploymentProperties() throws Exception {\n                                             .get() instanceof TestComponentOnRedeploy);\n   }\n \n+  @Test\n+  public void redeployDomainWithStoppedAppsShouldPersistStoppedStateAndDoNotStartApps() throws Exception {\n+    addPackedDomainFromBuilder(dummyDomainFileBuilder);\n+    File dummyDomainFile = new File(domainsDir, dummyDomainFileBuilder.getZipPath());\n+    long firstFileTimestamp = dummyDomainFile.lastModified();\n+\n+    addPackedAppFromBuilder(dummyDomainApp1FileBuilder);\n+\n+    startDeployment();\n+\n+    assertDeploymentSuccess(domainDeploymentListener, dummyDomainFileBuilder.getId());\n+    final Domain domain = findADomain(dummyDomainFileBuilder.getId());\n+    assertNotNull(domain.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, dummyDomainApp1FileBuilder.getId());\n+\n+    final Application app = findApp(dummyDomainApp1FileBuilder.getId(), 1);\n+    app.stop();\n+\n+    redeployId(dummyDomainFileBuilder.getId(), null);\n+\n+    Properties deploymentProperties = resolveDeploymentProperties(dummyDomainApp1FileBuilder.getId(), Optional.empty());\n+    assertStatus(dummyDomainApp1FileBuilder.getId(), CREATED);\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 137}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fd04e429649fd590ab1bac03ada7a6dccf9b75e", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/4fd04e429649fd590ab1bac03ada7a6dccf9b75e", "committedDate": "2021-01-25T13:48:48Z", "message": "Fixing PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e5600bcfdafc1d83fc9367f68cfa5d3929714f3", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/5e5600bcfdafc1d83fc9367f68cfa5d3929714f3", "committedDate": "2021-01-25T19:00:51Z", "message": "Adding comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc1NzIzMTYw", "url": "https://github.com/mulesoft/mule/pull/9905#pullrequestreview-575723160", "createdAt": "2021-01-25T19:10:09Z", "commit": {"oid": "5e5600bcfdafc1d83fc9367f68cfa5d3929714f3"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca93cac612eb9d94fd241076f72498c36ebb7df5", "author": {"user": {"login": "sofiamorseletto", "name": null}}, "url": "https://github.com/mulesoft/mule/commit/ca93cac612eb9d94fd241076f72498c36ebb7df5", "committedDate": "2021-01-25T19:51:41Z", "message": "Adding TODO"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc1NzU3MTg5", "url": "https://github.com/mulesoft/mule/pull/9905#pullrequestreview-575757189", "createdAt": "2021-01-25T19:54:44Z", "commit": {"oid": "ca93cac612eb9d94fd241076f72498c36ebb7df5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc1NzgzNDY1", "url": "https://github.com/mulesoft/mule/pull/9905#pullrequestreview-575783465", "createdAt": "2021-01-25T20:31:12Z", "commit": {"oid": "ca93cac612eb9d94fd241076f72498c36ebb7df5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 997, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}