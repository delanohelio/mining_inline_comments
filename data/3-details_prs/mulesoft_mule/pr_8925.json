{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0ODEyNDgx", "number": 8925, "title": "MULE-18492: Classloader for policy plugin used for serialization is not the actual classloader", "bodyText": "", "createdAt": "2020-06-15T21:28:31Z", "url": "https://github.com/mulesoft/mule/pull/8925", "merged": true, "mergeCommit": {"oid": "931bcbe39ad67f7e2598c5604180b25c8e5e324e"}, "closed": true, "closedAt": "2020-06-16T14:42:04Z", "author": {"login": "elrodro83"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrhf1iAH2gAyNDM0ODEyNDgxOjlkMmQ4YmZkMjgxM2M4NWY1NDVmZDFlMzFiZDU4OWYyNzk2MTRkODk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcr1Dg9AFqTQzMTQ4Nzc5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9d2d8bfd2813c85f545fd1e31bd589f279614d89", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/9d2d8bfd2813c85f545fd1e31bd589f279614d89", "committedDate": "2020-06-15T14:26:28Z", "message": "test case to reproduce bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffb3edb8b439a00554405becc421d86579bfbf28", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/ffb3edb8b439a00554405becc421d86579bfbf28", "committedDate": "2020-06-15T21:01:46Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e650e289ad91ef792f4de8a374fea7b1a8ab72c", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/5e650e289ad91ef792f4de8a374fea7b1a8ab72c", "committedDate": "2020-06-15T21:18:09Z", "message": "improve tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDgxNzY2", "url": "https://github.com/mulesoft/mule/pull/8925#pullrequestreview-431481766", "createdAt": "2020-06-16T13:06:50Z", "commit": {"oid": "5e650e289ad91ef792f4de8a374fea7b1a8ab72c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzowNjo1MFrOGkaYHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzowNjo1MFrOGkaYHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzNDA3OA==", "bodyText": "Remove unused parameters: application, descriptor and policyClassLoader", "url": "https://github.com/mulesoft/mule/pull/8925#discussion_r440834078", "createdAt": "2020-06-16T13:06:50Z", "author": {"login": "mlischetti"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/policy/DefaultPolicyTemplateFactory.java", "diffHunk": "@@ -62,51 +62,64 @@ public DefaultPolicyTemplateFactory(PolicyTemplateClassLoaderBuilderFactory poli\n \n   @Override\n   public PolicyTemplate createArtifact(Application application, PolicyTemplateDescriptor descriptor) {\n+    MuleDeployableArtifactClassLoader ownPolicyClassLoader;\n     MuleDeployableArtifactClassLoader policyClassLoader;\n \n-    List<ArtifactPluginDescriptor> resolvedPolicyPluginsDescriptors = resolvePolicyPluginDescriptors(application, descriptor);\n+    final List<ArtifactPluginDescriptor> resolvedPolicyPluginsDescriptors =\n+        resolvePolicyPluginDescriptors(application, descriptor);\n+    final List<ArtifactPluginDescriptor> ownResolvedPluginDescriptors =\n+        pluginDependenciesResolver.resolve(emptySet(), new ArrayList<>(descriptor.getPlugins()), false);\n \n     try {\n+      ownPolicyClassLoader = policyTemplateClassLoaderBuilderFactory.createArtifactClassLoaderBuilder()\n+          .addArtifactPluginDescriptors(ownResolvedPluginDescriptors\n+              .toArray(new ArtifactPluginDescriptor[ownResolvedPluginDescriptors.size()]))\n+          .setParentClassLoader(application.getRegionClassLoader()).setArtifactDescriptor(descriptor).build();\n+\n+      // This classloader needs to be created after ownPolicyClassLoader so its inner classloaders override the entries in the\n+      // ClassLoaderRepository for the application\n       policyClassLoader = policyTemplateClassLoaderBuilderFactory.createArtifactClassLoaderBuilder()\n           .addArtifactPluginDescriptors(resolvedPolicyPluginsDescriptors\n               .toArray(new ArtifactPluginDescriptor[resolvedPolicyPluginsDescriptors.size()]))\n           .setParentClassLoader(application.getRegionClassLoader()).setArtifactDescriptor(descriptor).build();\n     } catch (IOException e) {\n       throw new PolicyTemplateCreationException(createPolicyTemplateCreationErrorMessage(descriptor.getName()), e);\n     }\n+\n     application.getRegionClassLoader().addClassLoader(policyClassLoader, NULL_CLASSLOADER_FILTER);\n \n     List<ArtifactPlugin> artifactPlugins = createArtifactPluginList(policyClassLoader, resolvedPolicyPluginsDescriptors);\n+\n+    validateArtifactLicense(policyClassLoader.getClassLoader(), artifactPlugins, licenseValidator);\n+\n     return new DefaultPolicyTemplate(policyClassLoader.getArtifactId(), descriptor, policyClassLoader,\n                                      artifactPlugins,\n-                                     resolveOwnArtifactPlugins(application, descriptor, policyClassLoader, artifactPlugins));\n+                                     resolveOwnArtifactPlugins(application, descriptor, policyClassLoader, artifactPlugins,\n+                                                               ownResolvedPluginDescriptors, ownPolicyClassLoader));\n   }\n \n   // Need all the plugins that the policy itself depends on, while keeping a relationship with the appropriate classloader.\n   private List<ArtifactPlugin> resolveOwnArtifactPlugins(Application application, PolicyTemplateDescriptor descriptor,\n                                                          MuleDeployableArtifactClassLoader policyClassLoader,\n-                                                         List<ArtifactPlugin> artifactPlugins) {\n+                                                         List<ArtifactPlugin> artifactPlugins,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e650e289ad91ef792f4de8a374fea7b1a8ab72c"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "870f8fa952f573737b2e87fdcd50df9aca89a33e", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/870f8fa952f573737b2e87fdcd50df9aca89a33e", "committedDate": "2020-06-16T13:12:21Z", "message": "review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDg3Nzk5", "url": "https://github.com/mulesoft/mule/pull/8925#pullrequestreview-431487799", "createdAt": "2020-06-16T13:13:38Z", "commit": {"oid": "870f8fa952f573737b2e87fdcd50df9aca89a33e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 729, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}