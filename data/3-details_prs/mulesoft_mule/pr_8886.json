{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNDAxNDQw", "number": 8886, "title": "MULE-18041: Extension error handling improvements", "bodyText": "This changes aim to fix error type issues where the error thrown by an extension gets replaced by a different one. Prior to this fix, if an extension makes a call to a second one and wraps the potential exception, that error thrown by the \"child\" extension will replace the one that the \"parent\" extension is throwing.\nCause has been reduced to the existence of a nested MessagingException due to the repeated processing of the exception by the core. Logic has been added in order to suppress that nested exception. It's message is stored as a new MuleExceptionInfo property (\"Caused By\"), that will be logged as part of the error only if it has a value.", "createdAt": "2020-05-26T19:13:23Z", "url": "https://github.com/mulesoft/mule/pull/8886", "merged": true, "mergeCommit": {"oid": "d69783aa4cad798bc1e705c823a79c6477294d69"}, "closed": true, "closedAt": "2020-07-07T17:34:01Z", "author": {"login": "IvanAndresFritzler"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclYqncgFqTQxOTE0NDAzOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyUyODgFqTQ0MzI3OTQxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MTQ0MDM4", "url": "https://github.com/mulesoft/mule/pull/8886#pullrequestreview-419144038", "createdAt": "2020-05-27T12:32:14Z", "commit": {"oid": "04acebcefd925e12cb77494c6d175577d24d423f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjozMjoxNFrOGbHDwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjo0NDozN1rOGbHhPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4MDM4Ng==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r431080386", "createdAt": "2020-05-27T12:32:14Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/api/util/MessagingExceptionResolverTestCase.java", "diffHunk": "@@ -53,8 +57,10 @@\n \n import org.junit.Before;\n import org.junit.Test;\n+import org.mule.test.allure.AllureConstants;\n \n @SmallTest\n+@Feature(AllureConstants.ErrorHandlingFeature.ERROR_HANDLING)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04acebcefd925e12cb77494c6d175577d24d423f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NDQ0Mg==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r431084442", "createdAt": "2020-05-27T12:38:43Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/api/util/MessagingExceptionResolverTestCase.java", "diffHunk": "@@ -197,15 +203,50 @@ public void resolveCorrectConnectionException() {\n   }\n \n   @Test\n+  @Issue(\"MULE-18041\")\n   public void resolveSuppressedMuleException() {\n     ErrorType expected = DISPATCH;\n     Throwable exception = new DispatchException(createStaticMessage(\"DISPATCH PROBLEM\"), new ValidateResponse(),\n-                                                new SuppressedMuleException(CONNECTION_EXCEPTION));\n+                                                suppressIfPresent(CONNECTION_EXCEPTION,\n+                                                                  CONNECTION_EXCEPTION.getClass(),\n+                                                                  false));\n     MessagingException me = newMessagingException(exception, event, processor);\n     MessagingExceptionResolver anotherResolver = new MessagingExceptionResolver(new TestProcessor());\n     MessagingException resolved = anotherResolver.resolve(me, locator, emptyList());\n     assertExceptionErrorType(resolved, expected);\n     assertExceptionMessage(resolved.getMessage(), \"DISPATCH PROBLEM\");\n+    assertThat(resolved.getInfo().get(MuleExceptionInfo.INFO_CAUSED_BY_KEY), is(nullValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04acebcefd925e12cb77494c6d175577d24d423f"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NDQ5MQ==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r431084491", "createdAt": "2020-05-27T12:38:49Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/api/util/MessagingExceptionResolverTestCase.java", "diffHunk": "@@ -197,15 +203,50 @@ public void resolveCorrectConnectionException() {\n   }\n \n   @Test\n+  @Issue(\"MULE-18041\")\n   public void resolveSuppressedMuleException() {\n     ErrorType expected = DISPATCH;\n     Throwable exception = new DispatchException(createStaticMessage(\"DISPATCH PROBLEM\"), new ValidateResponse(),\n-                                                new SuppressedMuleException(CONNECTION_EXCEPTION));\n+                                                suppressIfPresent(CONNECTION_EXCEPTION,\n+                                                                  CONNECTION_EXCEPTION.getClass(),\n+                                                                  false));\n     MessagingException me = newMessagingException(exception, event, processor);\n     MessagingExceptionResolver anotherResolver = new MessagingExceptionResolver(new TestProcessor());\n     MessagingException resolved = anotherResolver.resolve(me, locator, emptyList());\n     assertExceptionErrorType(resolved, expected);\n     assertExceptionMessage(resolved.getMessage(), \"DISPATCH PROBLEM\");\n+    assertThat(resolved.getInfo().get(MuleExceptionInfo.INFO_CAUSED_BY_KEY), is(nullValue()));\n+  }\n+\n+  @Test\n+  @Issue(\"MULE-18041\")\n+  public void resolveSuppressedMuleExceptionLoggingCause() {\n+    ErrorType expected = DISPATCH;\n+    Throwable exception = new DispatchException(createStaticMessage(\"DISPATCH PROBLEM\"), new ValidateResponse(),\n+                                                suppressIfPresent(CONNECTION_EXCEPTION,\n+                                                                  CONNECTION_EXCEPTION.getClass(), true));\n+    MessagingException me = newMessagingException(exception, event, processor);\n+    MessagingExceptionResolver anotherResolver = new MessagingExceptionResolver(new TestProcessor());\n+    MessagingException resolved = anotherResolver.resolve(me, locator, emptyList());\n+    assertExceptionErrorType(resolved, expected);\n+    assertExceptionMessage(resolved.getMessage(), \"DISPATCH PROBLEM\");\n+    assertExceptionMessage(resolved.getInfo().get(MuleExceptionInfo.INFO_CAUSED_BY_KEY).toString(), \"CONNECTION PROBLEM\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04acebcefd925e12cb77494c6d175577d24d423f"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NDUyNw==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r431084527", "createdAt": "2020-05-27T12:38:53Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/api/util/MessagingExceptionResolverTestCase.java", "diffHunk": "@@ -197,15 +203,50 @@ public void resolveCorrectConnectionException() {\n   }\n \n   @Test\n+  @Issue(\"MULE-18041\")\n   public void resolveSuppressedMuleException() {\n     ErrorType expected = DISPATCH;\n     Throwable exception = new DispatchException(createStaticMessage(\"DISPATCH PROBLEM\"), new ValidateResponse(),\n-                                                new SuppressedMuleException(CONNECTION_EXCEPTION));\n+                                                suppressIfPresent(CONNECTION_EXCEPTION,\n+                                                                  CONNECTION_EXCEPTION.getClass(),\n+                                                                  false));\n     MessagingException me = newMessagingException(exception, event, processor);\n     MessagingExceptionResolver anotherResolver = new MessagingExceptionResolver(new TestProcessor());\n     MessagingException resolved = anotherResolver.resolve(me, locator, emptyList());\n     assertExceptionErrorType(resolved, expected);\n     assertExceptionMessage(resolved.getMessage(), \"DISPATCH PROBLEM\");\n+    assertThat(resolved.getInfo().get(MuleExceptionInfo.INFO_CAUSED_BY_KEY), is(nullValue()));\n+  }\n+\n+  @Test\n+  @Issue(\"MULE-18041\")\n+  public void resolveSuppressedMuleExceptionLoggingCause() {\n+    ErrorType expected = DISPATCH;\n+    Throwable exception = new DispatchException(createStaticMessage(\"DISPATCH PROBLEM\"), new ValidateResponse(),\n+                                                suppressIfPresent(CONNECTION_EXCEPTION,\n+                                                                  CONNECTION_EXCEPTION.getClass(), true));\n+    MessagingException me = newMessagingException(exception, event, processor);\n+    MessagingExceptionResolver anotherResolver = new MessagingExceptionResolver(new TestProcessor());\n+    MessagingException resolved = anotherResolver.resolve(me, locator, emptyList());\n+    assertExceptionErrorType(resolved, expected);\n+    assertExceptionMessage(resolved.getMessage(), \"DISPATCH PROBLEM\");\n+    assertExceptionMessage(resolved.getInfo().get(MuleExceptionInfo.INFO_CAUSED_BY_KEY).toString(), \"CONNECTION PROBLEM\");\n+  }\n+\n+  @Test\n+  @Issue(\"MULE-18041\")\n+  public void resolveSuppressedMessagingExceptionLoggingCause() {\n+    ErrorType expected = DISPATCH;\n+    Throwable exception = new DispatchException(createStaticMessage(\"DISPATCH PROBLEM\"), new ValidateResponse(),\n+                                                suppressIfPresent(new MessagingException(createStaticMessage(\"CONNECTION PROBLEM\"),\n+                                                                                         event),\n+                                                                  MessagingException.class, true));\n+    MessagingException me = newMessagingException(exception, event, processor);\n+    MessagingExceptionResolver anotherResolver = new MessagingExceptionResolver(new TestProcessor());\n+    MessagingException resolved = anotherResolver.resolve(me, locator, emptyList());\n+    assertExceptionErrorType(resolved, expected);\n+    assertExceptionMessage(resolved.getMessage(), \"DISPATCH PROBLEM\");\n+    assertExceptionMessage(resolved.getInfo().get(MuleExceptionInfo.INFO_CAUSED_BY_KEY).toString(), \"CONNECTION PROBLEM\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04acebcefd925e12cb77494c6d175577d24d423f"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4NzkzNA==", "bodyText": "the cause should be logged in this case to help in troubleshooting.", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r431087934", "createdAt": "2020-05-27T12:44:37Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/routing/UntilSuccessfulRouter.java", "diffHunk": "@@ -273,15 +274,19 @@ private CoreEvent eventWithCurrentContextDeleted(CoreEvent event) {\n \n   private Function<Throwable, Throwable> getThrowableFunction(CoreEvent event) {\n     return throwable -> {\n-      Throwable cause = getMessagingExceptionCause(throwable);\n       CoreEvent exceptionEvent = event;\n+      Throwable retryPolicyExhaustionCause = getMessagingExceptionCause(throwable);\n+      // ConnectionException is treated in a way that prioritize it's error type over any other (see ErrorTypeLocator#getErrorTypeFromException)\n+      retryPolicyExhaustionCause =\n+          suppressIfPresent(retryPolicyExhaustionCause, ConnectionException.class, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04acebcefd925e12cb77494c6d175577d24d423f"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f07ccb1d080acac0c5a427a9228f5f1d4e815b78", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/f07ccb1d080acac0c5a427a9228f5f1d4e815b78", "committedDate": "2020-05-28T13:56:12Z", "message": "MULE-18041: Code review improvements"}, "afterCommit": {"oid": "88af7e5c4e88cad4890c874fec9432ca66e93e34", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/88af7e5c4e88cad4890c874fec9432ca66e93e34", "committedDate": "2020-06-09T12:16:36Z", "message": "MULE-18041: Code review improvements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMDg5OTg1", "url": "https://github.com/mulesoft/mule/pull/8886#pullrequestreview-430089985", "createdAt": "2020-06-13T00:07:00Z", "commit": {"oid": "88af7e5c4e88cad4890c874fec9432ca66e93e34"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNjQ4MzMw", "url": "https://github.com/mulesoft/mule/pull/8886#pullrequestreview-431648330", "createdAt": "2020-06-16T15:47:25Z", "commit": {"oid": "88af7e5c4e88cad4890c874fec9432ca66e93e34"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNTo0NzoyNVrOGkh1ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNTo1NzowOFrOGkiRnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk1NjM0Ng==", "bodyText": "very unperformant. You should add an addAll() kind of method", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r440956346", "createdAt": "2020-06-16T15:47:25Z", "author": {"login": "marianogonzalez"}, "path": "core/src/main/java/org/mule/runtime/core/internal/exception/MessagingException.java", "diffHunk": "@@ -97,6 +97,9 @@ public MessagingException(CoreEvent event, Throwable cause, Component failingCom\n     extractMuleMessage(event);\n     this.failingComponent = failingComponent;\n     setMessage(generateMessage(getI18nMessage(), null));\n+    if (cause instanceof MuleException) {\n+      ((MuleException) cause).getInfo().forEach(this::addInfo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88af7e5c4e88cad4890c874fec9432ca66e93e34"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk1NzA1Nw==", "bodyText": "this doesn't look correct. You're doing this ONLY when the exception is a ModuleException. You're ignoring all subclasses (which is what's more frequently used).", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r440957057", "createdAt": "2020-06-16T15:48:20Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/exception/ModuleExceptionHandler.java", "diffHunk": "@@ -117,10 +118,11 @@ private Throwable getExceptionCause(Throwable throwable) {\n     // For subclasses of ModuleException, we use it as it already contains additional information\n     if (throwable.getClass().equals(ModuleException.class)) {\n       return throwable.getCause() != null\n-          ? throwable.getCause()\n+          ? suppressIfPresent(throwable.getCause(), MessagingException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88af7e5c4e88cad4890c874fec9432ca66e93e34"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk2MzQ4NA==", "bodyText": "remove", "url": "https://github.com/mulesoft/mule/pull/8886#discussion_r440963484", "createdAt": "2020-06-16T15:57:08Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/exception/ModuleExceptionHandler.java", "diffHunk": "@@ -117,10 +118,11 @@ private Throwable getExceptionCause(Throwable throwable) {\n     // For subclasses of ModuleException, we use it as it already contains additional information\n     if (throwable.getClass().equals(ModuleException.class)) {\n       return throwable.getCause() != null\n-          ? throwable.getCause()\n+          ? suppressIfPresent(throwable.getCause(), MessagingException.class)\n           : new MuleRuntimeException(createStaticMessage(throwable.getMessage()));\n     } else {\n       return throwable;\n     }\n   }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88af7e5c4e88cad4890c874fec9432ca66e93e34"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNjU4NTM5", "url": "https://github.com/mulesoft/mule/pull/8886#pullrequestreview-431658539", "createdAt": "2020-06-16T15:58:07Z", "commit": {"oid": "88af7e5c4e88cad4890c874fec9432ca66e93e34"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f25cc9410dc86fe8f8ff0e8515c47080f575959e", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/f25cc9410dc86fe8f8ff0e8515c47080f575959e", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Extending SuppressedMuleException in order to suppress a deeper cause"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa128d2b01f54a8b57cd430c9f7bea3018096b91", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/fa128d2b01f54a8b57cd430c9f7bea3018096b91", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Code format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "685bcc5eb531bc69c596645deb2305c97db11ff8", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/685bcc5eb531bc69c596645deb2305c97db11ff8", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: UntilSuccessful changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "514ef6e972f3f477ec0d37ce9aad8528b31a084f", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/514ef6e972f3f477ec0d37ce9aad8528b31a084f", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Adding Caused By to MuleExceptionInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d390883a5a9dcfba96502111d42127892c18a1c", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/4d390883a5a9dcfba96502111d42127892c18a1c", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Adding Caused By to MuleExceptionInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aeb752eecc75ac00cafc74ffb446e6c7eae0665", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/2aeb752eecc75ac00cafc74ffb446e6c7eae0665", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Code format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c7924328ee7d2d64d6dbc92989a1687d87554d6", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/4c7924328ee7d2d64d6dbc92989a1687d87554d6", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Static imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72997e1aa6d0ec3d5b50f25ac0f2ca0054cf5cbb", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/72997e1aa6d0ec3d5b50f25ac0f2ca0054cf5cbb", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Static imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e28a5e2168ba0f01547db4ebfcc9473f5ac1ad96", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/e28a5e2168ba0f01547db4ebfcc9473f5ac1ad96", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Code format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52c73db81ad9c2ffdd8e7d81a86d6ff6b56e9f3f", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/52c73db81ad9c2ffdd8e7d81a86d6ff6b56e9f3f", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041 Code review improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dda8abf8d6e69524faaabe576bcd58b2320d91cf", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/dda8abf8d6e69524faaabe576bcd58b2320d91cf", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Code review improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "810f6b1e95eba653430d13c029515968b72730d6", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/810f6b1e95eba653430d13c029515968b72730d6", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Code review improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b097cc9af50be0ee1a956e190b30d1bb9c689f49", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/b097cc9af50be0ee1a956e190b30d1bb9c689f49", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Code review improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e4c3a8a00346efd2b7a322296d0b74cb17e7a45", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/9e4c3a8a00346efd2b7a322296d0b74cb17e7a45", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Code review improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67ba48f37011bda9e0cb0b853b5e063e23d5bcd1", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/67ba48f37011bda9e0cb0b853b5e063e23d5bcd1", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Changes for multiple suppressions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51b8b73b860da6795b7b18e46883fdda0e59371e", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/51b8b73b860da6795b7b18e46883fdda0e59371e", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Code review improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b611d777b134ca485800f3ff42c8654c38787fe", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/7b611d777b134ca485800f3ff42c8654c38787fe", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Code review changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "040ac7076ee027f98e12900254335e2066a0fbd0", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/040ac7076ee027f98e12900254335e2066a0fbd0", "committedDate": "2020-06-30T01:59:14Z", "message": "MULE-18041: Code review changes"}, "afterCommit": {"oid": "7b611d777b134ca485800f3ff42c8654c38787fe", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/7b611d777b134ca485800f3ff42c8654c38787fe", "committedDate": "2020-06-30T03:11:34Z", "message": "MULE-18041: Code review changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMzk3NDcy", "url": "https://github.com/mulesoft/mule/pull/8886#pullrequestreview-442397472", "createdAt": "2020-07-03T13:00:42Z", "commit": {"oid": "7b611d777b134ca485800f3ff42c8654c38787fe"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49869fb7439dc382b009e2974c5c30d0827a86b6", "author": {"user": {"login": "IvanAndresFritzler", "name": "Ivan Fritzler"}}, "url": "https://github.com/mulesoft/mule/commit/49869fb7439dc382b009e2974c5c30d0827a86b6", "committedDate": "2020-07-03T15:41:27Z", "message": "MULE-18041: Code review changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNDk2NDMw", "url": "https://github.com/mulesoft/mule/pull/8886#pullrequestreview-442496430", "createdAt": "2020-07-03T16:13:28Z", "commit": {"oid": "49869fb7439dc382b009e2974c5c30d0827a86b6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMjc5NDE3", "url": "https://github.com/mulesoft/mule/pull/8886#pullrequestreview-443279417", "createdAt": "2020-07-06T17:35:15Z", "commit": {"oid": "49869fb7439dc382b009e2974c5c30d0827a86b6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 683, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}