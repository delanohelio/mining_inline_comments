{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MTcyMjg2", "number": 9400, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoxODoyMVrOEipPpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODo0Mzo1OVrOEiptvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzYyNzg4OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/MuleSampleDataService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoxODoyMVrOHQpGDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoxODoyMVrOHQpGDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxMjU1OA==", "bodyText": "Should we take this into account? only operation and sources locations are valid here.", "url": "https://github.com/mulesoft/mule/pull/9400#discussion_r487212558", "createdAt": "2020-09-11T18:18:21Z", "author": {"login": "ndinu"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/MuleSampleDataService.java", "diffHunk": "@@ -0,0 +1,191 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.data.sample;\n+\n+import static java.lang.String.format;\n+import static org.mule.runtime.api.util.Preconditions.checkArgument;\n+import static org.mule.runtime.core.api.util.StringUtils.isBlank;\n+import static org.mule.runtime.core.internal.util.LocationUtils.deleteLastPartFromLocation;\n+import static org.mule.runtime.core.internal.util.LocationUtils.isConnection;\n+import static org.mule.runtime.module.extension.internal.util.IntrospectionUtils.getImplementingName;\n+import static org.mule.sdk.api.data.sample.SampleDataException.INVALID_LOCATION;\n+import static org.mule.sdk.api.data.sample.SampleDataException.INVALID_TARGET_EXTENSION;\n+import static org.mule.sdk.api.data.sample.SampleDataException.NOT_SUPPORTED;\n+import static org.mule.sdk.api.data.sample.SampleDataException.NO_DATA_AVAILABLE;\n+\n+import org.mule.runtime.api.component.AbstractComponent;\n+import org.mule.runtime.api.component.location.ComponentLocation;\n+import org.mule.runtime.api.component.location.ConfigurationComponentLocator;\n+import org.mule.runtime.api.component.location.Location;\n+import org.mule.runtime.api.message.Message;\n+import org.mule.runtime.api.meta.model.ComponentModel;\n+import org.mule.runtime.api.meta.model.ExtensionModel;\n+import org.mule.runtime.core.api.MuleContext;\n+import org.mule.runtime.core.api.connector.ConnectionManager;\n+import org.mule.runtime.core.api.data.sample.SampleDataService;\n+import org.mule.runtime.core.api.extension.ExtensionManager;\n+import org.mule.runtime.core.api.streaming.StreamingManager;\n+import org.mule.runtime.core.api.util.func.CheckedSupplier;\n+import org.mule.runtime.dsl.api.component.config.DefaultComponentLocation;\n+import org.mule.runtime.extension.api.data.sample.ComponentSampleDataProvider;\n+import org.mule.runtime.extension.api.runtime.config.ConfigurationInstance;\n+import org.mule.runtime.module.extension.internal.ExtensionResolvingContext;\n+import org.mule.runtime.module.extension.internal.runtime.resolver.StaticParameterValueResolver;\n+import org.mule.runtime.module.extension.internal.util.ReflectionCache;\n+import org.mule.sdk.api.data.sample.SampleDataException;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.function.Supplier;\n+\n+import javax.inject.Inject;\n+\n+/**\n+ * Default implementation of {@link SampleDataService}\n+ *\n+ * @since 4.4.0\n+ */\n+public class MuleSampleDataService implements SampleDataService {\n+\n+  private ConfigurationComponentLocator componentLocator;\n+  private ExtensionManager extensionManager;\n+  private MuleContext muleContext;\n+  private StreamingManager streamingManager;\n+  private ConnectionManager connectionManager;\n+\n+  /**\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public Message getSampleData(Location location) throws SampleDataException {\n+    boolean isConnection = isConnection(location);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d53c53f88c008cd2ae415739ca28266f67122ff7"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzY0MDc4OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoyMjozN1rOHQpOHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoyMjozN1rOHQpOHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxNDYyMQ==", "bodyText": "injectSampleDataProviderFields?", "url": "https://github.com/mulesoft/mule/pull/9400#discussion_r487214621", "createdAt": "2020-09-11T18:22:37Z", "author": {"login": "ndinu"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderFactory.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.data.sample;\n+\n+import static org.mule.runtime.core.api.lifecycle.LifecycleUtils.initialiseIfNeeded;\n+import static org.mule.runtime.core.api.util.ClassUtils.instantiateClass;\n+import static org.mule.runtime.module.extension.internal.util.IntrospectionUtils.setValueIntoField;\n+import static org.mule.sdk.api.data.sample.SampleDataException.CONNECTION_FAILURE;\n+import static org.mule.sdk.api.data.sample.SampleDataException.MISSING_REQUIRED_PARAMETERS;\n+import static org.mule.sdk.api.data.sample.SampleDataException.UNKNOWN;\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import org.mule.runtime.core.api.MuleContext;\n+import org.mule.runtime.module.extension.internal.loader.java.property.InjectableParameterInfo;\n+import org.mule.runtime.module.extension.internal.loader.java.property.SampleDataProviderFactoryModelProperty;\n+import org.mule.runtime.module.extension.internal.runtime.ValueResolvingException;\n+import org.mule.runtime.module.extension.internal.runtime.resolver.ParameterValueResolver;\n+import org.mule.runtime.module.extension.internal.util.ReflectionCache;\n+import org.mule.sdk.api.data.sample.SampleDataException;\n+import org.mule.sdk.api.data.sample.SampleDataProvider;\n+\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Supplier;\n+\n+import org.slf4j.Logger;\n+\n+/**\n+ * Provides instances of {@link SampleDataProvider}\n+ *\n+ * @since 4.4.0\n+ */\n+public class SampleDataProviderFactory {\n+\n+  private static final Logger LOGGER = getLogger(SampleDataProviderFactory.class);\n+\n+  private final SampleDataProviderFactoryModelProperty factoryModelProperty;\n+  private final ParameterValueResolver parameterValueResolver;\n+  private final Supplier<Object> connectionSupplier;\n+  private final Supplier<Object> configurationSupplier;\n+  private final Field connectionField;\n+  private final Field configField;\n+  private final ReflectionCache reflectionCache;\n+  private final MuleContext muleContext;\n+\n+  public SampleDataProviderFactory(SampleDataProviderFactoryModelProperty factoryModelProperty,\n+                                   ParameterValueResolver parameterValueResolver,\n+                                   Supplier<Object> connectionSupplier,\n+                                   Supplier<Object> configurationSupplier,\n+                                   Field connectionField,\n+                                   Field configField,\n+                                   ReflectionCache reflectionCache,\n+                                   MuleContext muleContext) {\n+    this.factoryModelProperty = factoryModelProperty;\n+    this.parameterValueResolver = parameterValueResolver;\n+    this.connectionSupplier = connectionSupplier;\n+    this.configurationSupplier = configurationSupplier;\n+    this.connectionField = connectionField;\n+    this.configField = configField;\n+    this.reflectionCache = reflectionCache;\n+    this.muleContext = muleContext;\n+  }\n+\n+  <T, A> SampleDataProvider<T, A> createSampleDataProvider() throws SampleDataException {\n+    Class<? extends SampleDataProvider<T, A>> providerClass = factoryModelProperty.getSampleDataProviderClass();\n+\n+    try {\n+      SampleDataProvider<T, A> resolver = instantiateClass(providerClass);\n+      initialiseIfNeeded(resolver, true, muleContext);\n+\n+      injectValueProviderFields(resolver);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d53c53f88c008cd2ae415739ca28266f67122ff7"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzY0MzIwOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoyMzoyOFrOHQpPmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoyMzoyOFrOHQpPmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxNTAwMw==", "bodyText": "delete SampleDataDeclarationEnricher", "url": "https://github.com/mulesoft/mule/pull/9400#discussion_r487215003", "createdAt": "2020-09-11T18:23:28Z", "author": {"login": "ndinu"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.data.sample;\n+\n+import static java.lang.String.format;\n+import static java.util.Collections.emptyMap;\n+import static java.util.Optional.empty;\n+import static java.util.Optional.ofNullable;\n+import static org.mule.runtime.core.internal.event.NullEventFactory.getNullEvent;\n+import static org.mule.runtime.core.internal.management.stats.NoOpCursorComponentDecoratorFactory.NO_OP_INSTANCE;\n+import static org.mule.runtime.core.internal.util.rx.ImmediateScheduler.IMMEDIATE_SCHEDULER;\n+import static org.mule.sdk.api.data.sample.SampleDataException.NOT_SUPPORTED;\n+import static org.mule.sdk.api.data.sample.SampleDataException.UNKNOWN;\n+\n+import org.mule.runtime.api.component.Component;\n+import org.mule.runtime.api.message.Message;\n+import org.mule.runtime.api.meta.model.ComponentModel;\n+import org.mule.runtime.api.meta.model.EnrichableModel;\n+import org.mule.runtime.api.meta.model.ExtensionModel;\n+import org.mule.runtime.api.meta.model.parameter.ParameterizedModel;\n+import org.mule.runtime.core.api.MuleContext;\n+import org.mule.runtime.core.api.retry.policy.NoRetryPolicyTemplate;\n+import org.mule.runtime.core.api.streaming.CursorProviderFactory;\n+import org.mule.runtime.core.api.streaming.NullCursorProviderFactory;\n+import org.mule.runtime.core.api.streaming.StreamingManager;\n+import org.mule.runtime.module.extension.api.runtime.privileged.ExecutionContextAdapter;\n+import org.mule.runtime.module.extension.internal.loader.java.property.SampleDataProviderFactoryModelProperty;\n+import org.mule.runtime.module.extension.internal.runtime.DefaultExecutionContext;\n+import org.mule.runtime.module.extension.internal.runtime.resolver.ParameterValueResolver;\n+import org.mule.runtime.module.extension.internal.runtime.result.ReturnDelegate;\n+import org.mule.runtime.module.extension.internal.runtime.result.ValueReturnDelegate;\n+import org.mule.runtime.module.extension.internal.util.ReflectionCache;\n+import org.mule.sdk.api.data.sample.SampleDataException;\n+import org.mule.sdk.api.data.sample.SampleDataProvider;\n+import org.mule.sdk.api.runtime.operation.Result;\n+\n+import java.util.function.Supplier;\n+\n+/**\n+ * Coordinates all the moving parts necessary to provision and execute a {@link SampleDataProvider},\n+ * handling possible errors and transforming the output into a {@link Message}\n+ *\n+ * @since 4.4.0SampleDataDeclarationEnricher", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d53c53f88c008cd2ae415739ca28266f67122ff7"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzcwNDkyOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/test/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataTestUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODo0Mzo1OVrOHQp19Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODo0Mzo1OVrOHQp19Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIyNDgyMQ==", "bodyText": "Creates", "url": "https://github.com/mulesoft/mule/pull/9400#discussion_r487224821", "createdAt": "2020-09-11T18:43:59Z", "author": {"login": "ndinu"}, "path": "modules/extensions-support/src/test/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataTestUtils.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.data.sample;\n+\n+import org.mule.sdk.api.data.sample.SampleDataException;\n+import org.mule.sdk.api.data.sample.SampleDataProvider;\n+\n+import org.hamcrest.BaseMatcher;\n+import org.hamcrest.Description;\n+import org.hamcrest.Matcher;\n+\n+/**\n+ * Utilities for testing {@link SampleDataProvider} functionalities\n+ *\n+ * @since 4.4.0\n+ */\n+public final class SampleDataTestUtils {\n+\n+  private SampleDataTestUtils() {}\n+\n+  /**\n+   * Creaes a matcher that tests that a {@link SampleDataException} has the given {@code failureCode}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d53c53f88c008cd2ae415739ca28266f67122ff7"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4704, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}