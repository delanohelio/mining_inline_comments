{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MjQ4ODc1", "number": 9188, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxODoyNzoyOVrOEXVJDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxODozMDo0NlrOEXVNNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyODk5MDg3OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/value/ValueProviderFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxODoyNzoyOVrOG_ECrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxODoyNzoyOVrOG_ECrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc3OTY5NQ==", "bodyText": "Create a task on CMTS side to also do this validation on MTS side. If the resolver defines that requires a configuration/connection we should check first if the parameterizableElementDeclaration has the configRef value set and the configRef is part of the session. This should also apply for metadataTypes resolution.", "url": "https://github.com/mulesoft/mule/pull/9188#discussion_r468779695", "createdAt": "2020-08-11T18:27:29Z", "author": {"login": "gsfernandes"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/value/ValueProviderFactory.java", "diffHunk": "@@ -71,10 +72,20 @@ ValueProvider createValueProvider() throws ValueResolvingException {\n       injectValueProviderFields(resolver);\n \n       if (factoryModelProperty.usesConnection()) {\n+        Object connection = connectionSupplier.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9657b30861083ed10278af8907ab0b788c457576"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTAwMTUwOnYy", "diffSide": "RIGHT", "path": "modules/tooling-support-parent/functional-tests/src/test/java/org/mule/runtime/module/tooling/ComponentValueProviderTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxODozMDo0NlrOG_EJlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMjo0MTo1OFrOG_fhUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc4MTQ2Mg==", "bodyText": "We have agreed on not supporting default values when resolving metadata keys or valueProviders. Change the code and test to assert the error here.", "url": "https://github.com/mulesoft/mule/pull/9188#discussion_r468781462", "createdAt": "2020-08-11T18:30:46Z", "author": {"login": "gsfernandes"}, "path": "modules/tooling-support-parent/functional-tests/src/test/java/org/mule/runtime/module/tooling/ComponentValueProviderTestCase.java", "diffHunk": "@@ -48,24 +86,96 @@ public void actingParameterGroup() {\n     final List<String> listValue = asList(\"one\", \"two\", \"three\");\n     ComponentElementDeclaration elementDeclaration =\n         actingParameterGroupOPDeclaration(CONFIG_NAME, stringValue, intValue, listValue);\n-    getResultAndValidate(session, elementDeclaration, PROVIDED_PARAMETER_NAME, \"stringValue-0-one-two-three\");\n+    validateValuesSuccess(session, elementDeclaration, PROVIDED_PARAMETER_NAME, \"stringValue-0-one-two-three\");\n   }\n \n   @Test\n-  public void complexActingParameter() {\n+  public void actingParameterGroupWithDefaultValue() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9657b30861083ed10278af8907ab0b788c457576"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIyOTkwNw==", "bodyText": "Added TODO in MTS", "url": "https://github.com/mulesoft/mule/pull/9188#discussion_r469229907", "createdAt": "2020-08-12T12:41:58Z", "author": {"login": "lucianoRM"}, "path": "modules/tooling-support-parent/functional-tests/src/test/java/org/mule/runtime/module/tooling/ComponentValueProviderTestCase.java", "diffHunk": "@@ -48,24 +86,96 @@ public void actingParameterGroup() {\n     final List<String> listValue = asList(\"one\", \"two\", \"three\");\n     ComponentElementDeclaration elementDeclaration =\n         actingParameterGroupOPDeclaration(CONFIG_NAME, stringValue, intValue, listValue);\n-    getResultAndValidate(session, elementDeclaration, PROVIDED_PARAMETER_NAME, \"stringValue-0-one-two-three\");\n+    validateValuesSuccess(session, elementDeclaration, PROVIDED_PARAMETER_NAME, \"stringValue-0-one-two-three\");\n   }\n \n   @Test\n-  public void complexActingParameter() {\n+  public void actingParameterGroupWithDefaultValue() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc4MTQ2Mg=="}, "originalCommit": {"oid": "9657b30861083ed10278af8907ab0b788c457576"}, "originalPosition": 96}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4809, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}