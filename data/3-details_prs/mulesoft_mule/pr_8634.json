{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMDg2MTQ0", "number": 8634, "title": "MULE-17710: Add field metadata on ComponentAst for Object MetadataType", "bodyText": "", "createdAt": "2020-02-06T20:02:47Z", "url": "https://github.com/mulesoft/mule/pull/8634", "merged": true, "mergeCommit": {"oid": "3c90acc5a83bbb8179fe3ce5ebc3514e0366ecb7"}, "closed": true, "closedAt": "2020-02-18T14:30:25Z", "author": {"login": "gsfernandes"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcCCKy-ABqjMwMTgzMzc4MjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFh9u8AFqTM2MDMzNjMxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a1bd8516e86a74cf395a0df2fdda119ffbffe497", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/a1bd8516e86a74cf395a0df2fdda119ffbffe497", "committedDate": "2020-02-06T19:44:07Z", "message": "Move filter for source callback parameters"}, "afterCommit": {"oid": "1a471d8dbb6504277684d45beac2c1daab9f0008", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/1a471d8dbb6504277684d45beac2c1daab9f0008", "committedDate": "2020-02-07T16:45:15Z", "message": "Move filter for source callback parameters"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "385163efb0f680bc19769db0a0eb90a94476420f", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/385163efb0f680bc19769db0a0eb90a94476420f", "committedDate": "2020-02-07T18:53:16Z", "message": "Fix importedTypes tests for vegan, subtTypes and always look for subtypes and the current type for maps"}, "afterCommit": {"oid": "8d6598e6e0d405d8349663ad317dba78424ce5d9", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/8d6598e6e0d405d8349663ad317dba78424ce5d9", "committedDate": "2020-02-10T17:56:50Z", "message": "runtimeMode and also remove coupled code to SDK parsers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "52f71cb07539869ba0c4d977b6ae2887fda26906", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/52f71cb07539869ba0c4d977b6ae2887fda26906", "committedDate": "2020-02-11T13:55:32Z", "message": "Formatter"}, "afterCommit": {"oid": "436fbd6e6862d6a6c48a25a429a071711602f096", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/436fbd6e6862d6a6c48a25a429a071711602f096", "committedDate": "2020-02-11T16:37:33Z", "message": "Formatter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "436fbd6e6862d6a6c48a25a429a071711602f096", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/436fbd6e6862d6a6c48a25a429a071711602f096", "committedDate": "2020-02-11T16:37:33Z", "message": "Formatter"}, "afterCommit": {"oid": "d21b580ce54cf4d5b540be5671f9c5c328b52afd", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/d21b580ce54cf4d5b540be5671f9c5c328b52afd", "committedDate": "2020-02-12T15:05:57Z", "message": "comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d21b580ce54cf4d5b540be5671f9c5c328b52afd", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/d21b580ce54cf4d5b540be5671f9c5c328b52afd", "committedDate": "2020-02-12T15:05:57Z", "message": "comment"}, "afterCommit": {"oid": "6cf0b0742bcd61890c22239c4f3fca5819fe9238", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/6cf0b0742bcd61890c22239c4f3fca5819fe9238", "committedDate": "2020-02-12T22:46:08Z", "message": "comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4OTY4NzIw", "url": "https://github.com/mulesoft/mule/pull/8634#pullrequestreview-358968720", "createdAt": "2020-02-14T14:15:48Z", "commit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoxNTo0OFrOFp35rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoyNzowOFrOFp4Q6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1MTgyMg==", "bodyText": "javadoc", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379451822", "createdAt": "2020-02-14T14:15:48Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/MuleArtifactContext.java", "diffHunk": "@@ -314,14 +314,18 @@ public EntityResolver getEntityResolver() {\n       return new ApplicationModel(artifactConfig, artifactDeclaration, getExtensions(),\n                                   artifactProperties, parentConfigurationProperties,\n                                   of(componentBuildingDefinitionRegistry),\n-                                  externalResourceProvider);\n+                                  externalResourceProvider, isRuntimeMode());\n     } catch (MuleRuntimeException e) {\n       throw e;\n     } catch (Exception e) {\n       throw new MuleRuntimeException(e);\n     }\n   }\n \n+  protected boolean isRuntimeMode() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1MTk1NA==", "bodyText": "?", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379451954", "createdAt": "2020-02-14T14:16:04Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/dsl/model/ExtensionModelHelper.java", "diffHunk": "@@ -261,7 +270,9 @@ protected void onConnectionProvider(HasConnectionProviderModels owner, Connectio\n                 if (dslSyntaxResolver.resolve(model).getElementName().equals(componentIdentifier.getName())) {\n                   modelRef.set(model);\n                 }\n-              };\n+              }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1MTk4Mg==", "bodyText": "?", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379451982", "createdAt": "2020-02-14T14:16:08Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/dsl/model/ExtensionModelHelper.java", "diffHunk": "@@ -344,7 +355,9 @@ protected void onConnectionProvider(org.mule.runtime.api.meta.model.connection.H\n                 delegate.onConnectionProvider(model);\n                 stop();\n               }\n-            };\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1MjU4OA==", "bodyText": "extract common stuff between this method and the one above", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379452588", "createdAt": "2020-02-14T14:17:21Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/dsl/model/ExtensionModelHelper.java", "diffHunk": "@@ -398,6 +411,58 @@ protected void onNestable(ComposableModel owner, NestableElementModel model) {\n         .findFirst();\n   }\n \n+  public DslElementSyntax resolveDslElementModel(NamedObject component, ComponentIdentifier componentIdentifier) {\n+    Optional<ExtensionModel> optionalExtensionModel = lookupExtensionModelFor(componentIdentifier);\n+    ExtensionModel extensionModel = optionalExtensionModel\n+        .orElseThrow(() -> new IllegalStateException(\"Extension Model in context not present for componentIdentifier: \"\n+            + componentIdentifier));\n+\n+    final DslSyntaxResolver dslSyntaxResolver = dslSyntaxResolversByExtension.get(extensionModel);\n+\n+    return dslSyntaxResolver.resolve(component);\n+  }\n+\n+  public Optional<DslElementSyntax> resolveDslElementModel(MetadataType metadataType, ExtensionModel extensionModel) {\n+    return dslSyntaxResolversByExtension.get(extensionModel).resolve(metadataType);\n+  }\n+\n+  public DslElementSyntax resolveDslElementModel(ParameterModel parameterModel, ComponentIdentifier componentIdentifier) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1NDQ5NA==", "bodyText": "can this be made more readable? extract methods, for instance", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379454494", "createdAt": "2020-02-14T14:20:58Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/dsl/model/ExtensionModelHelper.java", "diffHunk": "@@ -398,6 +411,58 @@ protected void onNestable(ComposableModel owner, NestableElementModel model) {\n         .findFirst();\n   }\n \n+  public DslElementSyntax resolveDslElementModel(NamedObject component, ComponentIdentifier componentIdentifier) {\n+    Optional<ExtensionModel> optionalExtensionModel = lookupExtensionModelFor(componentIdentifier);\n+    ExtensionModel extensionModel = optionalExtensionModel\n+        .orElseThrow(() -> new IllegalStateException(\"Extension Model in context not present for componentIdentifier: \"\n+            + componentIdentifier));\n+\n+    final DslSyntaxResolver dslSyntaxResolver = dslSyntaxResolversByExtension.get(extensionModel);\n+\n+    return dslSyntaxResolver.resolve(component);\n+  }\n+\n+  public Optional<DslElementSyntax> resolveDslElementModel(MetadataType metadataType, ExtensionModel extensionModel) {\n+    return dslSyntaxResolversByExtension.get(extensionModel).resolve(metadataType);\n+  }\n+\n+  public DslElementSyntax resolveDslElementModel(ParameterModel parameterModel, ComponentIdentifier componentIdentifier) {\n+    Optional<ExtensionModel> optionalExtensionModel = lookupExtensionModelFor(componentIdentifier);\n+    ExtensionModel extensionModel = optionalExtensionModel\n+        .orElseThrow(() -> new IllegalStateException(\"Extension Model in context not present for componentIdentifier: \"\n+            + componentIdentifier));\n+\n+    final DslSyntaxResolver dslSyntaxResolver = dslSyntaxResolversByExtension.get(extensionModel);\n+\n+    return dslSyntaxResolver.resolve(parameterModel);\n+  }\n+\n+  public Map<ObjectType, Optional<DslElementSyntax>> resolveSubTypes(ObjectType type) {\n+    ImmutableMap.Builder<ObjectType, Optional<DslElementSyntax>> mapBuilder = ImmutableMap.builder();\n+    for (ObjectType subType : dslResolvingContext.getTypeCatalog().getSubTypes(type)) {\n+      subType.getAnnotation(TypeIdAnnotation.class).map(TypeIdAnnotation::getValue).ifPresent(\n+                                                                                              typeId -> dslResolvingContext", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1NzM3Nw==", "bodyText": "missing a space?", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379457377", "createdAt": "2020-02-14T14:26:24Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "diffHunk": "@@ -324,17 +345,19 @@ public ApplicationModel(ArtifactConfig artifactConfig, ArtifactDeclaration artif\n     // TODO MULE-13894 do this only on runtimeMode=true once unified extensionModel names to use camelCase (see smart connectors\n     // and crafted declared extension models)\n     resolveComponentTypes();\n-    muleComponentModels.forEach(componentModel -> componentModel.resolveTypedComponentIdentifier(extensionModelHelper));\n+    muleComponentModels\n+        .forEach(componentModel -> componentModel.resolveTypedComponentIdentifier(extensionModelHelper, runtimeMode));\n     final ComponentLocationVisitor clv = new ComponentLocationVisitor();\n     recursiveStreamWithHierarchy().forEach(clv);\n   }\n \n   public void macroExpandXmlSdkComponents(Set<ExtensionModel> extensionModels) {\n     expandModules(extensionModels, () -> {\n-      // TODO MULE-13894 do this only on runtimeMode=true once unified extensionModel names to use camelCase (see smart\n+      // TODO MULE-13894 do this onorg.springframework.beans.ConversionNotSupportedExceptionly on runtimeMode=true once unified extensionModel names to use camelCase (see smart", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1NzYzNg==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379457636", "createdAt": "2020-02-14T14:26:52Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "diffHunk": "@@ -608,8 +615,90 @@ public void onFixedValue(Object value) {\n         });\n       });\n     });\n+\n+    // Use ExtensionModel to register top level and subTypes elements\n+    ReflectionCache reflectionCache = new ReflectionCache();\n+    Map<ComponentIdentifier, MetadataTypeModelAdapter> registry = new HashMap();\n+    extensionModelHelper.getExtensionsModels().stream().forEach(extensionModel -> extensionModel.getTypes().stream()\n+        .filter(p -> IntrospectionUtils.isInstantiable(p, reflectionCache))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1Nzc2OQ==", "bodyText": "remove {}", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379457769", "createdAt": "2020-02-14T14:27:08Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "diffHunk": "@@ -608,8 +615,90 @@ public void onFixedValue(Object value) {\n         });\n       });\n     });\n+\n+    // Use ExtensionModel to register top level and subTypes elements\n+    ReflectionCache reflectionCache = new ReflectionCache();\n+    Map<ComponentIdentifier, MetadataTypeModelAdapter> registry = new HashMap();\n+    extensionModelHelper.getExtensionsModels().stream().forEach(extensionModel -> extensionModel.getTypes().stream()\n+        .filter(p -> IntrospectionUtils.isInstantiable(p, reflectionCache))\n+        .forEach(parameterType -> {\n+          registerTopLevelParameter(parameterType, reflectionCache, registry, extensionModel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 181}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3918aec04ad5a4a29958ba34f56dc6bc183cbeec", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/3918aec04ad5a4a29958ba34f56dc6bc183cbeec", "committedDate": "2020-02-17T14:21:21Z", "message": "PR feedback, second round"}, "afterCommit": {"oid": "8548c9965c115810efcffe507b5cb92798ce1b66", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/8548c9965c115810efcffe507b5cb92798ce1b66", "committedDate": "2020-02-17T15:37:41Z", "message": "PR feedback, second round"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5OTE0OTQ3", "url": "https://github.com/mulesoft/mule/pull/8634#pullrequestreview-359914947", "createdAt": "2020-02-17T18:37:32Z", "commit": {"oid": "3e0b15ac82054101e443eefa9ec8ff0f9fb42d5c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxODozNzozMlrOFqtMzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxODozNzozMlrOFqtMzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMyNTA2OQ==", "bodyText": "add @since", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r380325069", "createdAt": "2020-02-17T18:37:32Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/MuleArtifactContext.java", "diffHunk": "@@ -322,6 +322,10 @@ public EntityResolver getEntityResolver() {\n     }\n   }\n \n+  /**\n+   * Defines if the context should be created for Runtime (execution) o not. This has impact on how the AST\n+   * will be populated and created.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e0b15ac82054101e443eefa9ec8ff0f9fb42d5c"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80e6a47f8ee2f33ef27aa2ab71fee7ec7ba5df4d", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/80e6a47f8ee2f33ef27aa2ab71fee7ec7ba5df4d", "committedDate": "2020-02-17T18:45:14Z", "message": "MULE-17710: Add field metadata on ComponentAst for Object MetadataType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "301f47d2bf22829f7bb280bda291a3ab67d3fd44", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/301f47d2bf22829f7bb280bda291a3ab67d3fd44", "committedDate": "2020-02-17T18:45:14Z", "message": "Suppor for Map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "406fa5854e7426390c9bcb380ced1414ae3011ec", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/406fa5854e7426390c9bcb380ced1414ae3011ec", "committedDate": "2020-02-17T18:45:14Z", "message": "Map support for POJOs as values, wrapped elements etc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba7ef44c06784e63db152f1ecefe37ccf3963c93", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/ba7ef44c06784e63db152f1ecefe37ccf3963c93", "committedDate": "2020-02-17T18:45:14Z", "message": "Handle Null with wrapped elements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67579c61ca3460584a1d8a2b91a0f7fe3ff3bd42", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/67579c61ca3460584a1d8a2b91a0f7fe3ff3bd42", "committedDate": "2020-02-17T18:45:14Z", "message": "More changes, maps are evil...DSL and maps is the worst thing that I have faced so far..."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab7dd14b9888eb2b9f8c249327f39167404d5059", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/ab7dd14b9888eb2b9f8c249327f39167404d5059", "committedDate": "2020-02-17T18:45:14Z", "message": "Move filter for source callback parameters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fb13c249ec5fe38be866c1f9e7ecf16f296e648", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/3fb13c249ec5fe38be866c1f9e7ecf16f296e648", "committedDate": "2020-02-17T18:45:14Z", "message": "Fix importedTypes tests for vegan, subtTypes and always look for subtypes and the current type for maps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90920cfd514120dfc02f1b65ec8712ffecec0dda", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/90920cfd514120dfc02f1b65ec8712ffecec0dda", "committedDate": "2020-02-17T18:45:14Z", "message": "runtimeMode and also remove coupled code to SDK parsers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7f533928b3d62e1e160880a28cdbd6443060d24", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/a7f533928b3d62e1e160880a28cdbd6443060d24", "committedDate": "2020-02-17T18:45:14Z", "message": "Formatter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db4c016be14218b349648b63265a2960fbec36dd", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/db4c016be14218b349648b63265a2960fbec36dd", "committedDate": "2020-02-17T18:45:14Z", "message": "comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f54dc7196236e4a8bd450f018d6801caab22825", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/9f54dc7196236e4a8bd450f018d6801caab22825", "committedDate": "2020-02-17T18:45:14Z", "message": "Fix logic for registering top level elements or subTypes with its metadata type model adapter to enabling stereotypes dependencies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12be777150c24c3dc191358a277f62649982afe9", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/12be777150c24c3dc191358a277f62649982afe9", "committedDate": "2020-02-17T18:45:14Z", "message": "PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28278724e2065e47baea6522b8ef4f49651e1db2", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/28278724e2065e47baea6522b8ef4f49651e1db2", "committedDate": "2020-02-17T18:45:14Z", "message": "PR feedback, second round"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ceed0667c0e10231cf19a1b9317329169be5d8c", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/8ceed0667c0e10231cf19a1b9317329169be5d8c", "committedDate": "2020-02-17T19:44:37Z", "message": "Sonar feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8548c9965c115810efcffe507b5cb92798ce1b66", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/8548c9965c115810efcffe507b5cb92798ce1b66", "committedDate": "2020-02-17T15:37:41Z", "message": "PR feedback, second round"}, "afterCommit": {"oid": "8ceed0667c0e10231cf19a1b9317329169be5d8c", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/8ceed0667c0e10231cf19a1b9317329169be5d8c", "committedDate": "2020-02-17T19:44:37Z", "message": "Sonar feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d29b23378700d83c4002202ff82f1b19b538f47b", "author": {"user": {"login": "gsfernandes", "name": "Guillermo Fernandes"}}, "url": "https://github.com/mulesoft/mule/commit/d29b23378700d83c4002202ff82f1b19b538f47b", "committedDate": "2020-02-17T20:58:13Z", "message": "Sonar round 2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMzM2MzE4", "url": "https://github.com/mulesoft/mule/pull/8634#pullrequestreview-360336318", "createdAt": "2020-02-18T13:30:00Z", "commit": {"oid": "d29b23378700d83c4002202ff82f1b19b538f47b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1405, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}