{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMzA5NjEy", "number": 8917, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxOTozMVrOEGHM9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMjo1MDoxN1rOEGvHmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODQ0OTE4OnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/test/java/org/mule/runtime/config/model/ComponentModelTestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxOTozMVrOGktkLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMjozMTo0MlrOGlDhJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0ODQ2MQ==", "bodyText": "remove", "url": "https://github.com/mulesoft/mule/pull/8917#discussion_r441148461", "createdAt": "2020-06-16T21:19:31Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/test/java/org/mule/runtime/config/model/ComponentModelTestCase.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.config.model;\n+\n+import static java.util.Optional.empty;\n+import static java.util.stream.Collectors.toList;\n+import static org.junit.Assert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.not;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import static org.mule.test.allure.AllureConstants.ArtifactAst.ARTIFACT_AST;\n+import static org.mule.test.allure.AllureConstants.ArtifactAst.ParameterAst.PARAMETER_AST;\n+\n+import io.qameta.allure.Feature;\n+import io.qameta.allure.Story;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mule.metadata.api.ClassTypeLoader;\n+import org.mule.runtime.api.meta.NamedObject;\n+import org.mule.runtime.api.meta.model.parameter.ParameterModel;\n+import org.mule.runtime.ast.api.ComponentParameterAst;\n+import org.mule.runtime.config.internal.model.ComponentModel;\n+import org.mule.runtime.config.internal.model.DefaultComponentParameterAst;\n+import org.mule.runtime.extension.api.declaration.type.ExtensionsTypeLoaderFactory;\n+import org.mule.tck.junit4.AbstractMuleTestCase;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+@Feature(ARTIFACT_AST)\n+@Story(PARAMETER_AST)\n+public class ComponentModelTestCase extends AbstractMuleTestCase {\n+\n+  private static final String PARAMETER_A = \"a\";\n+  private static final String PARAMETER_B = \"b\";\n+  private static final String PARAMETER_C = \"c\";\n+  private ClassTypeLoader TYPE_LOADER = ExtensionsTypeLoaderFactory.getDefault().createTypeLoader();\n+\n+  @Before\n+  public void before() {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98a01d9cd40092f290d6347bf3febcfc0129b833"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUwODEzMg==", "bodyText": "done", "url": "https://github.com/mulesoft/mule/pull/8917#discussion_r441508132", "createdAt": "2020-06-17T12:31:42Z", "author": {"login": "mlischetti"}, "path": "modules/spring-config/src/test/java/org/mule/runtime/config/model/ComponentModelTestCase.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.config.model;\n+\n+import static java.util.Optional.empty;\n+import static java.util.stream.Collectors.toList;\n+import static org.junit.Assert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.not;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import static org.mule.test.allure.AllureConstants.ArtifactAst.ARTIFACT_AST;\n+import static org.mule.test.allure.AllureConstants.ArtifactAst.ParameterAst.PARAMETER_AST;\n+\n+import io.qameta.allure.Feature;\n+import io.qameta.allure.Story;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mule.metadata.api.ClassTypeLoader;\n+import org.mule.runtime.api.meta.NamedObject;\n+import org.mule.runtime.api.meta.model.parameter.ParameterModel;\n+import org.mule.runtime.ast.api.ComponentParameterAst;\n+import org.mule.runtime.config.internal.model.ComponentModel;\n+import org.mule.runtime.config.internal.model.DefaultComponentParameterAst;\n+import org.mule.runtime.extension.api.declaration.type.ExtensionsTypeLoaderFactory;\n+import org.mule.tck.junit4.AbstractMuleTestCase;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+@Feature(ARTIFACT_AST)\n+@Story(PARAMETER_AST)\n+public class ComponentModelTestCase extends AbstractMuleTestCase {\n+\n+  private static final String PARAMETER_A = \"a\";\n+  private static final String PARAMETER_B = \"b\";\n+  private static final String PARAMETER_C = \"c\";\n+  private ClassTypeLoader TYPE_LOADER = ExtensionsTypeLoaderFactory.getDefault().createTypeLoader();\n+\n+  @Before\n+  public void before() {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0ODQ2MQ=="}, "originalCommit": {"oid": "98a01d9cd40092f290d6347bf3febcfc0129b833"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODQ1NDIyOnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ComponentModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToyMToxMVrOGktnXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDoyNToxMFrOGlITQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0OTI3Nw==", "bodyText": "initialize this as Collections.emptyMap()", "url": "https://github.com/mulesoft/mule/pull/8917#discussion_r441149277", "createdAt": "2020-06-16T21:21:11Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ComponentModel.java", "diffHunk": "@@ -83,7 +84,7 @@\n   private ComponentIdentifier identifier;\n   private String componentId;\n   private final Map<String, String> parameters = new HashMap<>();\n-  private final Map<String, ComponentParameterAst> parameterAsts = new HashMap<>();\n+  private Map<String, ComponentParameterAst> parameterAsts = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98a01d9cd40092f290d6347bf3febcfc0129b833"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU4NjQ5OA==", "bodyText": "replaced by map + list", "url": "https://github.com/mulesoft/mule/pull/8917#discussion_r441586498", "createdAt": "2020-06-17T14:25:10Z", "author": {"login": "mlischetti"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ComponentModel.java", "diffHunk": "@@ -83,7 +84,7 @@\n   private ComponentIdentifier identifier;\n   private String componentId;\n   private final Map<String, String> parameters = new HashMap<>();\n-  private final Map<String, ComponentParameterAst> parameterAsts = new HashMap<>();\n+  private Map<String, ComponentParameterAst> parameterAsts = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0OTI3Nw=="}, "originalCommit": {"oid": "98a01d9cd40092f290d6347bf3febcfc0129b833"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDk4OTA2OnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/test/java/org/mule/runtime/config/model/ComponentModelTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMjo1MDoxN1rOGltzhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMjo1MDoxN1rOGltzhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIwMDk2Nw==", "bodyText": "rename to ComponentAstParametersTestCase", "url": "https://github.com/mulesoft/mule/pull/8917#discussion_r442200967", "createdAt": "2020-06-18T12:50:17Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/test/java/org/mule/runtime/config/model/ComponentModelTestCase.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.config.model;\n+\n+import static java.util.Optional.empty;\n+import static java.util.stream.Collectors.toList;\n+import static org.hamcrest.CoreMatchers.instanceOf;\n+import static org.hamcrest.Matchers.containsString;\n+import static org.junit.Assert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.not;\n+import static org.junit.rules.ExpectedException.none;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import static org.mule.test.allure.AllureConstants.ArtifactAst.ARTIFACT_AST;\n+import static org.mule.test.allure.AllureConstants.ArtifactAst.ParameterAst.PARAMETER_AST;\n+\n+import io.qameta.allure.Feature;\n+import io.qameta.allure.Story;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import org.mule.metadata.api.ClassTypeLoader;\n+import org.mule.runtime.api.component.ComponentIdentifier;\n+import org.mule.runtime.api.meta.NamedObject;\n+import org.mule.runtime.api.meta.model.parameter.ParameterModel;\n+import org.mule.runtime.ast.api.ComponentParameterAst;\n+import org.mule.runtime.config.internal.dsl.model.config.ConfigurationPropertiesException;\n+import org.mule.runtime.config.internal.model.ComponentModel;\n+import org.mule.runtime.config.internal.model.DefaultComponentParameterAst;\n+import org.mule.runtime.extension.api.declaration.type.ExtensionsTypeLoaderFactory;\n+import org.mule.tck.junit4.AbstractMuleTestCase;\n+import org.yaml.snakeyaml.parser.ParserException;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+@Feature(ARTIFACT_AST)\n+@Story(PARAMETER_AST)\n+public class ComponentModelTestCase extends AbstractMuleTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f0e2596667140b8f87000175a00136c8fc6964d"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4938, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}