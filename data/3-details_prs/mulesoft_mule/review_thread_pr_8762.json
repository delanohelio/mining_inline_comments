{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NTk2NjUz", "number": 8762, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMjozMTowNFrODvidow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMjozMjoyNFrODvifhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTc0MzA3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/internal/lifecycle/phases/DefaultLifecycleObjectSorter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMjozMTowNFrOGCBNqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMjozNjozOVrOGCBa7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc3MDIxOA==", "bodyText": "what's the point of doing this?", "url": "https://github.com/mulesoft/mule/pull/8762#discussion_r404770218", "createdAt": "2020-04-07T12:31:04Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/lifecycle/phases/DefaultLifecycleObjectSorter.java", "diffHunk": "@@ -75,13 +80,13 @@ protected int doAddObject(String name, Object object, List<Object> bucket) {\n    */\n   @Override\n   public List<Object> getSortedObjects() {\n-    List<Object> sorted = new ArrayList<>(objectCount);\n+    Set<Object> sorted = newSetFromMap(new LinkedHashMap<>(objectCount));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "245dbafe044b1a7dbcb460d903a734150e63a7dc"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc3MzYxNA==", "bodyText": "It was supposed to be an IdentityHashMap to avoid returning the same object instance in the list more that once.\nChanging it...", "url": "https://github.com/mulesoft/mule/pull/8762#discussion_r404773614", "createdAt": "2020-04-07T12:36:39Z", "author": {"login": "lucianoRM"}, "path": "core/src/main/java/org/mule/runtime/core/internal/lifecycle/phases/DefaultLifecycleObjectSorter.java", "diffHunk": "@@ -75,13 +80,13 @@ protected int doAddObject(String name, Object object, List<Object> bucket) {\n    */\n   @Override\n   public List<Object> getSortedObjects() {\n-    List<Object> sorted = new ArrayList<>(objectCount);\n+    Set<Object> sorted = newSetFromMap(new LinkedHashMap<>(objectCount));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc3MDIxOA=="}, "originalCommit": {"oid": "245dbafe044b1a7dbcb460d903a734150e63a7dc"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTc0Nzg5OnYy", "diffSide": "RIGHT", "path": "modules/extensions-xml-support/src/test/java/org/mule/runtime/extension/internal/config/dsl/XmlSdkConfigurationProviderLifecycleTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMjozMjoyNFrOGCBQug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMjozMjoyNFrOGCBQug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc3MTAwMg==", "bodyText": "allure annotations", "url": "https://github.com/mulesoft/mule/pull/8762#discussion_r404771002", "createdAt": "2020-04-07T12:32:24Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-xml-support/src/test/java/org/mule/runtime/extension/internal/config/dsl/XmlSdkConfigurationProviderLifecycleTestCase.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.extension.internal.config.dsl;\n+\n+import static java.util.Collections.emptyList;\n+import static java.util.Collections.emptyMap;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.withSettings;\n+import static org.mule.runtime.core.api.lifecycle.LifecycleUtils.disposeIfNeeded;\n+import static org.mule.runtime.core.api.lifecycle.LifecycleUtils.initialiseIfNeeded;\n+import static org.mule.runtime.core.api.lifecycle.LifecycleUtils.startIfNeeded;\n+import static org.mule.runtime.core.api.lifecycle.LifecycleUtils.stopIfNeeded;\n+import org.mule.runtime.api.lifecycle.Disposable;\n+import org.mule.runtime.api.lifecycle.Initialisable;\n+import org.mule.runtime.api.lifecycle.Lifecycle;\n+import org.mule.runtime.api.lifecycle.Startable;\n+import org.mule.runtime.api.lifecycle.Stoppable;\n+import org.mule.runtime.api.meta.model.ExtensionModel;\n+import org.mule.runtime.api.meta.model.config.ConfigurationModel;\n+import org.mule.runtime.core.api.Injector;\n+import org.mule.runtime.core.api.MuleContext;\n+import org.mule.runtime.core.api.config.MuleConfiguration;\n+import org.mule.runtime.extension.api.runtime.config.ConfigurationProvider;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+public class XmlSdkConfigurationProviderLifecycleTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "245dbafe044b1a7dbcb460d903a734150e63a7dc"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4959, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}