{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NjU0MTEx", "number": 9347, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTo0NjowNVrOEgDSIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTo1MjozMVrOEgDclA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDQzNjgxOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/objectbuilder/DefaultObjectBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTo0NjowNVrOHMsylw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTo0NjowNVrOHMsylw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA3ODgwNw==", "bodyText": "Maybe in the future we should add a kind of visitor of a class that uses double dispatch so we can unify the uses of the decoration here and in ParameterGroupBuilder and possibly in the case of the output decorators. Two many ifs.", "url": "https://github.com/mulesoft/mule/pull/9347#discussion_r483078807", "createdAt": "2020-09-03T15:46:05Z", "author": {"login": "fsgonz"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/objectbuilder/DefaultObjectBuilder.java", "diffHunk": "@@ -114,10 +120,34 @@ public boolean isDynamic() {\n   public T build(ValueResolvingContext context) throws MuleException {\n     T object = createInstance(prototypeClass);\n \n+    final CursorComponentDecoratorFactory componentDecoratorFactory =\n+        context != null\n+            ? (CursorComponentDecoratorFactory) context.getProperty(COMPONENT_DECORATOR_FACTORY_KEY)\n+            : null;\n+\n     for (Map.Entry<FieldSetter, ValueResolver<Object>> entry : resolvers.entrySet()) {\n+      final Object resolvedValue = resolveValue(entry.getValue(), context);\n       entry.getKey().set(object,\n-                         context == null || context.resolveCursors() ? resolveCursor(resolveValue(entry.getValue(), context))\n-                             : resolveValue(entry.getValue(), context));\n+                         context == null || context.resolveCursors()\n+                             ? resolveCursor(resolvedValue,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "575a3ef41ab320ea5ed84e9b6cf3d64a5de2bc7d"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDQ0MDkwOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/objectbuilder/ParameterGroupObjectBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTo0Njo1OVrOHMs1JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTo0Njo1OVrOHMs1JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA3OTQ2MA==", "bodyText": "same comment as before. Not sure if appropriate to do this now of wait for that refactor till the input and output decorations are merged.", "url": "https://github.com/mulesoft/mule/pull/9347#discussion_r483079460", "createdAt": "2020-09-03T15:46:59Z", "author": {"login": "fsgonz"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/objectbuilder/ParameterGroupObjectBuilder.java", "diffHunk": "@@ -83,15 +99,31 @@ public T build(ResolverSetResult result) throws MuleException {\n     }\n   }\n \n-  private T doBuild(Predicate<String> hasParameter, Function<String, Object> parameters, ValueResolvingContext context)\n+  private T doBuild(Predicate<String> hasParameter, Function<String, Object> parameters, ValueResolvingContext context,\n+                    CursorComponentDecoratorFactory componentDecoratorFactory)\n       throws MuleException {\n     T object = createInstance(prototypeClass);\n \n     for (FieldElement field : groupDescriptorFields) {\n       String name = field.getName();\n       if (hasParameter.test(name)) {\n-        Object resolvedValue = resolveValue(new StaticValueResolver<>(parameters.apply(name)), context);\n-        Object value = context == null || context.resolveCursors() ? resolveCursor(resolvedValue) : resolvedValue;\n+        final boolean isContent = field.isAnnotatedWith(Content.class)\n+            || field.isAnnotatedWith(org.mule.sdk.api.annotation.param.Content.class);\n+        Object resolvedValue = resolveValue(new StaticValueResolver<>(parameters", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "575a3ef41ab320ea5ed84e9b6cf3d64a5de2bc7d"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDQ1Mjk4OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/execution/MethodArgumentResolverDelegate.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTo0OTo1NFrOHMs8pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTo0OTo1NFrOHMs8pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA4MTM4MQ==", "bodyText": "mark this in case the refactor is needed after all the needed merged.", "url": "https://github.com/mulesoft/mule/pull/9347#discussion_r483081381", "createdAt": "2020-09-03T15:49:54Z", "author": {"login": "fsgonz"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/execution/MethodArgumentResolverDelegate.java", "diffHunk": "@@ -380,31 +401,91 @@ public String toString() {\n     }\n   }\n \n-  private class TypedValueCursorArgumentResolverDecorator extends ArgumentResolverDecorator {\n+  private static class TypedValueCursorArgumentResolverDecorator extends ArgumentResolverDecorator {\n \n-    public TypedValueCursorArgumentResolverDecorator(ArgumentResolver<Object> decoratee) {\n+    private final CursorComponentDecoratorFactory componentDecoratorFactory;\n+\n+    public TypedValueCursorArgumentResolverDecorator(ArgumentResolver<Object> decoratee,\n+                                                     CursorComponentDecoratorFactory componentDecoratorFactory) {\n       super(decoratee);\n+      this.componentDecoratorFactory = componentDecoratorFactory;\n     }\n \n     @Override\n-    protected Object decorate(Object value) {\n-      return resolveCursor((TypedValue) value);\n+    protected Object decorate(Object value, String eventCorrelationId) {\n+      return resolveCursor((TypedValue) value, v -> {\n+        if (v instanceof InputStream) {\n+          return componentDecoratorFactory.decorateInput((InputStream) v, eventCorrelationId);\n+        } else if (v instanceof Collection) {\n+          return componentDecoratorFactory.decorateInput((Collection) v, eventCorrelationId);\n+        } else if (v instanceof Iterator) {\n+          return componentDecoratorFactory.decorateInput((Iterator) v, eventCorrelationId);\n+        } else {\n+          return v;\n+        }\n+      });\n     }\n   }\n \n-  private class ObjectArgumentResolverDecorator extends ArgumentResolverDecorator {\n+  private static class TypedValueArgumentResolverDecorator extends ArgumentResolverDecorator {\n+\n+    private final CursorComponentDecoratorFactory componentDecoratorFactory;\n \n-    public ObjectArgumentResolverDecorator(ArgumentResolver<Object> decoratee) {\n+    public TypedValueArgumentResolverDecorator(ArgumentResolver<Object> decoratee,\n+                                               CursorComponentDecoratorFactory componentDecoratorFactory) {\n       super(decoratee);\n+      this.componentDecoratorFactory = componentDecoratorFactory;\n     }\n \n     @Override\n-    protected Object decorate(Object value) {\n-      return resolveCursor(value);\n+    protected Object decorate(Object value, String eventCorrelationId) {\n+      Object v = ((TypedValue) value).getValue();\n+\n+      if (v instanceof InputStream) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "575a3ef41ab320ea5ed84e9b6cf3d64a5de2bc7d"}, "originalPosition": 208}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDQ2MzU2OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/execution/MethodArgumentResolverDelegate.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTo1MjozMVrOHMtDRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTo1MjozMVrOHMtDRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA4MzA3Nw==", "bodyText": "mark this", "url": "https://github.com/mulesoft/mule/pull/9347#discussion_r483083077", "createdAt": "2020-09-03T15:52:31Z", "author": {"login": "fsgonz"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/execution/MethodArgumentResolverDelegate.java", "diffHunk": "@@ -380,31 +401,91 @@ public String toString() {\n     }\n   }\n \n-  private class TypedValueCursorArgumentResolverDecorator extends ArgumentResolverDecorator {\n+  private static class TypedValueCursorArgumentResolverDecorator extends ArgumentResolverDecorator {\n \n-    public TypedValueCursorArgumentResolverDecorator(ArgumentResolver<Object> decoratee) {\n+    private final CursorComponentDecoratorFactory componentDecoratorFactory;\n+\n+    public TypedValueCursorArgumentResolverDecorator(ArgumentResolver<Object> decoratee,\n+                                                     CursorComponentDecoratorFactory componentDecoratorFactory) {\n       super(decoratee);\n+      this.componentDecoratorFactory = componentDecoratorFactory;\n     }\n \n     @Override\n-    protected Object decorate(Object value) {\n-      return resolveCursor((TypedValue) value);\n+    protected Object decorate(Object value, String eventCorrelationId) {\n+      return resolveCursor((TypedValue) value, v -> {\n+        if (v instanceof InputStream) {\n+          return componentDecoratorFactory.decorateInput((InputStream) v, eventCorrelationId);\n+        } else if (v instanceof Collection) {\n+          return componentDecoratorFactory.decorateInput((Collection) v, eventCorrelationId);\n+        } else if (v instanceof Iterator) {\n+          return componentDecoratorFactory.decorateInput((Iterator) v, eventCorrelationId);\n+        } else {\n+          return v;\n+        }\n+      });\n     }\n   }\n \n-  private class ObjectArgumentResolverDecorator extends ArgumentResolverDecorator {\n+  private static class TypedValueArgumentResolverDecorator extends ArgumentResolverDecorator {\n+\n+    private final CursorComponentDecoratorFactory componentDecoratorFactory;\n \n-    public ObjectArgumentResolverDecorator(ArgumentResolver<Object> decoratee) {\n+    public TypedValueArgumentResolverDecorator(ArgumentResolver<Object> decoratee,\n+                                               CursorComponentDecoratorFactory componentDecoratorFactory) {\n       super(decoratee);\n+      this.componentDecoratorFactory = componentDecoratorFactory;\n     }\n \n     @Override\n-    protected Object decorate(Object value) {\n-      return resolveCursor(value);\n+    protected Object decorate(Object value, String eventCorrelationId) {\n+      Object v = ((TypedValue) value).getValue();\n+\n+      if (v instanceof InputStream) {\n+        v = componentDecoratorFactory.decorateInput((InputStream) v, eventCorrelationId);\n+      } else if (v instanceof Collection) {\n+        v = componentDecoratorFactory.decorateInput((Collection) v, eventCorrelationId);\n+      } else if (v instanceof Iterator) {\n+        v = componentDecoratorFactory.decorateInput((Iterator) v, eventCorrelationId);\n+      }\n+\n+      if (v != ((TypedValue) value).getValue()) {\n+        return new TypedValue<>(v, DataType.builder()\n+            .type(v.getClass())\n+            .mediaType(((TypedValue) value).getDataType().getMediaType())\n+            .build(), ((TypedValue) value).getByteLength());\n+      } else {\n+        return value;\n+      }\n+    }\n+  }\n+\n+  private static class ObjectArgumentResolverDecorator extends ArgumentResolverDecorator {\n+\n+    private final CursorComponentDecoratorFactory componentDecoratorFactory;\n+\n+    public ObjectArgumentResolverDecorator(ArgumentResolver<Object> decoratee,\n+                                           CursorComponentDecoratorFactory componentDecoratorFactory) {\n+      super(decoratee);\n+      this.componentDecoratorFactory = componentDecoratorFactory;\n+    }\n+\n+    @Override\n+    protected Object decorate(Object value, String eventCorrelationId) {\n+      final Object resolved = resolveCursor(value);\n+      if (resolved instanceof InputStream) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "575a3ef41ab320ea5ed84e9b6cf3d64a5de2bc7d"}, "originalPosition": 240}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4765, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}