{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5ODEzNTQ0", "number": 8546, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMjozNDowOFrODWPEVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMjozNDowOFrODWPEVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NjQyMTMzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/internal/routing/UntilSuccessfulRouter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMjozNDowOFrOFa4J0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzowOTowNVrOFa44xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcyNzMxMg==", "bodyText": "should this be done internally by RetryPolicyExhaustedException? What other uses are there for it?", "url": "https://github.com/mulesoft/mule/pull/8546#discussion_r363727312", "createdAt": "2020-01-07T12:34:08Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/routing/UntilSuccessfulRouter.java", "diffHunk": "@@ -274,10 +274,12 @@ private CoreEvent eventWithCurrentContextDeleted(CoreEvent event) {\n       if (throwable instanceof MessagingException) {\n         exceptionEvent = ((MessagingException) throwable).getEvent();\n       }\n+      // MessagingException cause is set to null in order to avoid RETRY:EXHAUSTED ErrorType replacement\n+      // during ErrorType resolution (see ChainErrorHandlingUtils and MessagingExceptionResolver)\n       return new MessagingException(exceptionEvent,\n                                     new RetryPolicyExhaustedException(createStaticMessage(UNTIL_SUCCESSFUL_MSG_PREFIX,\n                                                                                           cause.getMessage()),\n-                                                                      cause, owner),\n+                                                                      null, owner),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dfff03a874958f3373af5728d1b6254a33155cb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczOTMzNQ==", "bodyText": "Excellent observation. I will check for the uses and make the change if possible.", "url": "https://github.com/mulesoft/mule/pull/8546#discussion_r363739335", "createdAt": "2020-01-07T13:09:05Z", "author": {"login": "IvanAndresFritzler"}, "path": "core/src/main/java/org/mule/runtime/core/internal/routing/UntilSuccessfulRouter.java", "diffHunk": "@@ -274,10 +274,12 @@ private CoreEvent eventWithCurrentContextDeleted(CoreEvent event) {\n       if (throwable instanceof MessagingException) {\n         exceptionEvent = ((MessagingException) throwable).getEvent();\n       }\n+      // MessagingException cause is set to null in order to avoid RETRY:EXHAUSTED ErrorType replacement\n+      // during ErrorType resolution (see ChainErrorHandlingUtils and MessagingExceptionResolver)\n       return new MessagingException(exceptionEvent,\n                                     new RetryPolicyExhaustedException(createStaticMessage(UNTIL_SUCCESSFUL_MSG_PREFIX,\n                                                                                           cause.getMessage()),\n-                                                                      cause, owner),\n+                                                                      null, owner),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcyNzMxMg=="}, "originalCommit": {"oid": "9dfff03a874958f3373af5728d1b6254a33155cb"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 114, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}