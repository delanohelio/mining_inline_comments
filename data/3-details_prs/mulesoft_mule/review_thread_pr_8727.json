{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2ODgwMTYw", "number": 8727, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDo1ODoyOVrODnn_8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjozMjo0N1rODn5cZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODc2NDAxOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/connectivity/oauth/ocs/PlatformManagedOAuthConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDo1ODoyOVrOF1vFEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDo1ODoyOVrOF1vFEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MDE5NQ==", "bodyText": "this already exists at com.mulesoft.service.oauth.internal.platform.OCSSettings#sanitizeUrl. Move to a shared Utils class that both classes can reuse", "url": "https://github.com/mulesoft/mule/pull/8727#discussion_r391890195", "createdAt": "2020-03-12T20:58:29Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/connectivity/oauth/ocs/PlatformManagedOAuthConfig.java", "diffHunk": "@@ -142,4 +156,13 @@ public PlatformManagedOAuthGrantType getGrantType() {\n   public ExtensionModel getExtensionModel() {\n     return extensionModel;\n   }\n+\n+  private static String sanitizeUrl(String url) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f429e5a299e62b587737ee7286b6823051ddfe7"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODc2NTU5OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/connectivity/oauth/ocs/PlatformManagedOAuthConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDo1OTowMVrOF1vGCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDo1OTowMVrOF1vGCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MDQ0MA==", "bodyText": "this method should only receive the entire configurationProperties object and encapsulate all the inner resolution", "url": "https://github.com/mulesoft/mule/pull/8727#discussion_r391890440", "createdAt": "2020-03-12T20:59:01Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/connectivity/oauth/ocs/PlatformManagedOAuthConfig.java", "diffHunk": "@@ -71,6 +77,14 @@ private static String getProperty(ConfigurationProperties configurationPropertie\n         .orElseThrow(() -> new IllegalArgumentException(format(\"OCS property '%s' has not been set\", key)));\n   }\n \n+  private static String getProperty(ConfigurationProperties configurationProperties, String key, String def) {\n+    return configurationProperties.resolveStringProperty(key).orElse(def);\n+  }\n+\n+  private static String resolvePlatformAuthUrl(String url, String suffix) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f429e5a299e62b587737ee7286b6823051ddfe7"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODc2ODc0OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/test/java/org/mule/runtime/module/extension/internal/runtime/connectivity/oauth/ocs/PlatformManagedOAuthConfigTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMTowMDoxMlrOF1vIIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMTowMDoxMlrOF1vIIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MDk3Nw==", "bodyText": "PLATFORM_URL -> PLATFORM_AUTH_URL", "url": "https://github.com/mulesoft/mule/pull/8727#discussion_r391890977", "createdAt": "2020-03-12T21:00:12Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/test/java/org/mule/runtime/module/extension/internal/runtime/connectivity/oauth/ocs/PlatformManagedOAuthConfigTestCase.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.runtime.connectivity.oauth.ocs;\n+\n+import static java.util.Optional.of;\n+import static org.hamcrest.CoreMatchers.*;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.mule.runtime.extension.internal.ocs.OCSConstants.*;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.mule.runtime.api.component.ConfigurationProperties;\n+import org.mule.tck.junit4.AbstractMuleTestCase;\n+import org.mule.tck.size.SmallTest;\n+\n+@SmallTest\n+@RunWith(MockitoJUnitRunner.class)\n+public class PlatformManagedOAuthConfigTestCase extends AbstractMuleTestCase {\n+\n+  private static final String CLIENT_ID = \"a\";\n+  private static final String SECRET_ID = \"b\";\n+  private static final String ORG_ID = \"b\";\n+  private static final String SERVICE_URL = \"c\";\n+  private static final String PLATFORM_URL = \"http://localhost/accounts\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f429e5a299e62b587737ee7286b6823051ddfe7"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODc3MTE4OnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/connectivity/oauth/ocs/PlatformManagedOAuthConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMTowMTowNVrOF1vJlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMTowMTowNVrOF1vJlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MTM1MQ==", "bodyText": "should be defined in the same place as OCS_PLATFORM_AUTH_URL is", "url": "https://github.com/mulesoft/mule/pull/8727#discussion_r391891351", "createdAt": "2020-03-12T21:01:05Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/connectivity/oauth/ocs/PlatformManagedOAuthConfig.java", "diffHunk": "@@ -33,6 +34,8 @@\n  */\n public class PlatformManagedOAuthConfig extends OAuthConfig<PlatformManagedOAuthGrantType> {\n \n+  private static final String DEFAULT_PLATFORM_AUTH_URL_SUFFIX = \"/oauth2/token\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f429e5a299e62b587737ee7286b6823051ddfe7"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTYyMjEyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/api/util/StringUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjozMjo0N1rOF2Kc3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjozMjo0N1rOF2Kc3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMzODY1Mw==", "bodyText": "add @since 4.3.0", "url": "https://github.com/mulesoft/mule/pull/8727#discussion_r392338653", "createdAt": "2020-03-13T16:32:47Z", "author": {"login": "marianogonzalez"}, "path": "core/src/main/java/org/mule/runtime/core/api/util/StringUtils.java", "diffHunk": "@@ -169,5 +169,17 @@ public static String trim(String str) {\n     return org.apache.commons.lang3.StringUtils.trim(str);\n   }\n \n+  /**\n+   * Remove trailing slash from {@code url}\n+   *\n+   * @param url    an url", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c37b9179d8e66fd4c8e118f398ad7955f4cce42"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 78, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}