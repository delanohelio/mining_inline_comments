{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxOTcxNDk4", "number": 9737, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzo1ODo0NFrOE7LOYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzozMDo1MVrOE7ioVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDg1MzQ2OnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/DynamicConfigExpirationTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzo1ODo0NFrOH2q6BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzo1ODo0NFrOH2q6BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA4ODEzMw==", "bodyText": "do this on the tearDown() as well, so that you're sure you're not accidentally leaking any classloaders or something like that", "url": "https://github.com/mulesoft/mule/pull/9737#discussion_r527088133", "createdAt": "2020-11-19T17:58:44Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/DynamicConfigExpirationTestCase.java", "diffHunk": "@@ -33,6 +43,29 @@ protected String getConfigFile() {\n     return \"dynamic-config-expiration.xml\";\n   }\n \n+  private static List<Integer> disposedStatuses;\n+  private static HeisenbergExtension config;\n+\n+  public static class CaptureProcessor implements Processor {\n+\n+    @Override\n+    public CoreEvent process(CoreEvent event) throws MuleException {\n+      synchronized (disposedStatuses) {\n+        if (config == null) {\n+          config = (HeisenbergExtension) event.getMessage().getPayload().getValue();\n+        }\n+        disposedStatuses.add(config.getDispose());\n+      }\n+      return event;\n+    }\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    disposedStatuses = new ArrayList<>();\n+    config = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb845a8735f57161734b6207d732a00b3f645005"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDg1NjAxOnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/DynamicConfigExpirationTestCase.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzo1OToyM1rOH2q7wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzoxODoyN1rOH3PSpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA4ODU3Nw==", "bodyText": "=", "url": "https://github.com/mulesoft/mule/pull/9737#discussion_r527088577", "createdAt": "2020-11-19T17:59:23Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/DynamicConfigExpirationTestCase.java", "diffHunk": "@@ -85,6 +118,28 @@ public void expirationWorksAfterRestartingSource() throws Exception {\n     doNotExpireDynamicConfigWithCustomExpirationUsedBySource();\n   }\n \n+  @Test\n+  public void dynamicConfigIsExpiredBeforeFlowEnds() throws Exception {\n+    flowRunner(\"dynamicConfigIsExpiredBeforeFlowEnds\").withPayload(\"Walter Blanco\").run();\n+    check(PROBER_TIMEOUT, POLLING_FREQUENCY, () -> {\n+      synchronized (disposedStatuses) {\n+        return disposedStatuses.size() == 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb845a8735f57161734b6207d732a00b3f645005"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NDUxNQ==", "bodyText": "What do you mean? Can you elaborate?", "url": "https://github.com/mulesoft/mule/pull/9737#discussion_r527674515", "createdAt": "2020-11-20T12:58:55Z", "author": {"login": "SebaElizalde"}, "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/DynamicConfigExpirationTestCase.java", "diffHunk": "@@ -85,6 +118,28 @@ public void expirationWorksAfterRestartingSource() throws Exception {\n     doNotExpireDynamicConfigWithCustomExpirationUsedBySource();\n   }\n \n+  @Test\n+  public void dynamicConfigIsExpiredBeforeFlowEnds() throws Exception {\n+    flowRunner(\"dynamicConfigIsExpiredBeforeFlowEnds\").withPayload(\"Walter Blanco\").run();\n+    check(PROBER_TIMEOUT, POLLING_FREQUENCY, () -> {\n+      synchronized (disposedStatuses) {\n+        return disposedStatuses.size() == 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA4ODU3Nw=="}, "originalCommit": {"oid": "fb845a8735f57161734b6207d732a00b3f645005"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY4NDI2MA==", "bodyText": "the condition should be >= but asciidoc attacked", "url": "https://github.com/mulesoft/mule/pull/9737#discussion_r527684260", "createdAt": "2020-11-20T13:18:27Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/DynamicConfigExpirationTestCase.java", "diffHunk": "@@ -85,6 +118,28 @@ public void expirationWorksAfterRestartingSource() throws Exception {\n     doNotExpireDynamicConfigWithCustomExpirationUsedBySource();\n   }\n \n+  @Test\n+  public void dynamicConfigIsExpiredBeforeFlowEnds() throws Exception {\n+    flowRunner(\"dynamicConfigIsExpiredBeforeFlowEnds\").withPayload(\"Walter Blanco\").run();\n+    check(PROBER_TIMEOUT, POLLING_FREQUENCY, () -> {\n+      synchronized (disposedStatuses) {\n+        return disposedStatuses.size() == 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA4ODU3Nw=="}, "originalCommit": {"oid": "fb845a8735f57161734b6207d732a00b3f645005"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDg1NjY3OnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/DynamicConfigExpirationTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzo1OTozM1rOH2q8Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzo1OTozM1rOH2q8Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA4ODY5MQ==", "bodyText": "repeated code. reuse", "url": "https://github.com/mulesoft/mule/pull/9737#discussion_r527088691", "createdAt": "2020-11-19T17:59:33Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/DynamicConfigExpirationTestCase.java", "diffHunk": "@@ -85,6 +118,28 @@ public void expirationWorksAfterRestartingSource() throws Exception {\n     doNotExpireDynamicConfigWithCustomExpirationUsedBySource();\n   }\n \n+  @Test\n+  public void dynamicConfigIsExpiredBeforeFlowEnds() throws Exception {\n+    flowRunner(\"dynamicConfigIsExpiredBeforeFlowEnds\").withPayload(\"Walter Blanco\").run();\n+    check(PROBER_TIMEOUT, POLLING_FREQUENCY, () -> {\n+      synchronized (disposedStatuses) {\n+        return disposedStatuses.size() == 2;\n+      }\n+    });\n+    assertThat(disposedStatuses, contains(0, 1));\n+  }\n+\n+  @Test\n+  public void dynamicConfigIsExpiredBeforeFlowEndsWhenOperationFails() throws Exception {\n+    flowRunner(\"dynamicConfigIsExpiredBeforeFlowEndsWhenOperationFails\").run();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb845a8735f57161734b6207d732a00b3f645005"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODY4ODIzOnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/DynamicConfigExpirationTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzozMDo1MVrOH3PuaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzozMDo1MVrOH3PuaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY5MTM2OA==", "bodyText": "null", "url": "https://github.com/mulesoft/mule/pull/9737#discussion_r527691368", "createdAt": "2020-11-20T13:30:51Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/DynamicConfigExpirationTestCase.java", "diffHunk": "@@ -66,6 +66,13 @@ public void setUp() {\n     config = null;\n   }\n \n+  @Override\n+  protected void doTearDown() throws Exception {\n+    disposedStatuses = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5ac836ab90bd3b0e1469094dc19ece5f09a71f7"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4633, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}