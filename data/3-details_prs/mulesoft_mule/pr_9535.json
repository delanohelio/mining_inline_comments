{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMTc1MTky", "number": 9535, "title": "MULE-18883: PipelineMessageNotification PROCESS_COMPLETE lost when propagate errors", "bodyText": "", "createdAt": "2020-10-13T10:25:21Z", "url": "https://github.com/mulesoft/mule/pull/9535", "merged": true, "mergeCommit": {"oid": "a70072e3bbe7e3dbb10b4ed96ca44eb7443593f9"}, "closed": true, "closedAt": "2020-10-15T09:47:23Z", "author": {"login": "szaffarano"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSF8IygH2gAyNTAyMTc1MTkyOjQwN2IxYTEwNzU4NTg2Zjc1YjNlNzU1NDY2NWIxMjg4MWI1MWViMzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSkQ9rgFqTUwODc4ODI5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "407b1a10758586f75b3e7554665b12881b51eb35", "author": {"user": {"login": "szaffarano", "name": "Sebasti\u00e1n Zaffarano"}}, "url": "https://github.com/mulesoft/mule/commit/407b1a10758586f75b3e7554665b12881b51eb35", "committedDate": "2020-10-13T10:23:05Z", "message": "MULE-18883: PipelineMessageNotification PROCESS_COMPLETE lost when propagate errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzY4NjU2", "url": "https://github.com/mulesoft/mule/pull/9535#pullrequestreview-507768656", "createdAt": "2020-10-13T19:39:32Z", "commit": {"oid": "407b1a10758586f75b3e7554665b12881b51eb35"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOTozOTozMlrOHg2gCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOTozOTo1MVrOHg2guA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIwOTQxOQ==", "bodyText": "use an ArrayDeque instead of Stack", "url": "https://github.com/mulesoft/mule/pull/9535#discussion_r504209419", "createdAt": "2020-10-13T19:39:32Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/privileged/processor/MessageProcessors.java", "diffHunk": "@@ -529,7 +530,20 @@ private static void childContextResponseHandler(CoreEvent eventChildCtx,\n             if (currentStackEntry != null) {\n               // For flow-ref to flows, avoid creating a second MessagingException, an instead mutate the thrown on so it has the\n               // proper state when is bubbled.\n-              ((DefaultFlowCallStack) parentContextEvent.getFlowCallStack()).push(currentStackEntry);\n+              DefaultFlowCallStack parentCallStack = (DefaultFlowCallStack) parentContextEvent.getFlowCallStack();\n+              List<FlowStackElement> childFlowStacks = eventChildCtx.getFlowCallStack().getElements();\n+              Stack<FlowStackElement> remaining = new Stack();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "407b1a10758586f75b3e7554665b12881b51eb35"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIwOTU5Mg==", "bodyText": "Add comments explainig what this is doing and why it is doing it", "url": "https://github.com/mulesoft/mule/pull/9535#discussion_r504209592", "createdAt": "2020-10-13T19:39:51Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/privileged/processor/MessageProcessors.java", "diffHunk": "@@ -529,7 +530,20 @@ private static void childContextResponseHandler(CoreEvent eventChildCtx,\n             if (currentStackEntry != null) {\n               // For flow-ref to flows, avoid creating a second MessagingException, an instead mutate the thrown on so it has the\n               // proper state when is bubbled.\n-              ((DefaultFlowCallStack) parentContextEvent.getFlowCallStack()).push(currentStackEntry);\n+              DefaultFlowCallStack parentCallStack = (DefaultFlowCallStack) parentContextEvent.getFlowCallStack();\n+              List<FlowStackElement> childFlowStacks = eventChildCtx.getFlowCallStack().getElements();\n+              Stack<FlowStackElement> remaining = new Stack();\n+\n+              for (FlowStackElement e : childFlowStacks) {\n+                if (parentCallStack.peek().equals(e)) {\n+                  break;\n+                }\n+                remaining.push(e);\n+              }\n+\n+              while (!remaining.isEmpty()) {\n+                parentCallStack.push(remaining.pop());\n+              }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "407b1a10758586f75b3e7554665b12881b51eb35"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a91e78cdedd97c9693e88cf58e4a0691aa91ecd3", "author": {"user": {"login": "szaffarano", "name": "Sebasti\u00e1n Zaffarano"}}, "url": "https://github.com/mulesoft/mule/commit/a91e78cdedd97c9693e88cf58e4a0691aa91ecd3", "committedDate": "2020-10-14T21:35:49Z", "message": "Changes after PR review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NzgyNTQz", "url": "https://github.com/mulesoft/mule/pull/9535#pullrequestreview-508782543", "createdAt": "2020-10-14T21:39:50Z", "commit": {"oid": "a91e78cdedd97c9693e88cf58e4a0691aa91ecd3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTozOTo1MFrOHhmAXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTozOTo1NVrOHhmAig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk4Nzc0Mw==", "bodyText": "remove", "url": "https://github.com/mulesoft/mule/pull/9535#discussion_r504987743", "createdAt": "2020-10-14T21:39:50Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/privileged/processor/MessageProcessorsTestCase.java", "diffHunk": "@@ -321,6 +326,70 @@ public void processWithChildContextErrorInChainMantainsChildContext() throws Exc\n     assertThat(context.getParentContext().get(), is(input.getContext()));\n   }\n \n+  @Test\n+  @Issue(\"MULE-16892\")\n+  public void handleErrorWithChildAndParentStack() throws Exception {\n+\n+    List<FlowStackElement> parentStack = asList(new FlowStackElement(\"flow\", \"processor\"));\n+\n+    List<FlowStackElement> childStack = asList(\n+                                               new FlowStackElement(\"sub-flow-1\", \"processor-1\"),\n+                                               new FlowStackElement(\"sub-flow-2\", \"processor-2\"));\n+\n+    assertHandleErrorWithStack(parentStack, childStack);\n+  }\n+\n+  @Test\n+  @Issue(\"MULE-16892\")\n+  public void handleErrorWithEmptyParentStack() throws Exception {\n+\n+    List<FlowStackElement> childStack = asList(\n+                                               new FlowStackElement(\"sub-flow-1\", \"processor-1\"),\n+                                               new FlowStackElement(\"sub-flow-2\", \"processor-2\"));\n+\n+    assertHandleErrorWithStack(EMPTY_LIST, childStack);\n+  }\n+\n+  @Test\n+  @Issue(\"MULE-16892\")\n+  public void handleErrorWithEmptyStack() throws Exception {\n+    assertHandleErrorWithStack(EMPTY_LIST, EMPTY_LIST);\n+  }\n+\n+  private void assertHandleErrorWithStack(List<FlowStackElement> parentStack, List<FlowStackElement> childStack)\n+      throws InitialisationException {\n+\n+    thrown.expectCause(isA(MessagingException.class));\n+\n+    final DefaultFlowCallStack inputFlowCallStack = (DefaultFlowCallStack) input.getFlowCallStack();\n+    Reference<DefaultFlowCallStack> childFlowCallStack = new Reference<>();\n+\n+    try {\n+      parentStack.stream().forEachOrdered(inputFlowCallStack::push);\n+      // inputFlowCallStack.push(new FlowStackElement(\"flow\", \"processor\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a91e78cdedd97c9693e88cf58e4a0691aa91ecd3"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk4Nzc4Ng==", "bodyText": "remove", "url": "https://github.com/mulesoft/mule/pull/9535#discussion_r504987786", "createdAt": "2020-10-14T21:39:55Z", "author": {"login": "elrodro83"}, "path": "core-tests/src/test/java/org/mule/runtime/core/privileged/processor/MessageProcessorsTestCase.java", "diffHunk": "@@ -321,6 +326,70 @@ public void processWithChildContextErrorInChainMantainsChildContext() throws Exc\n     assertThat(context.getParentContext().get(), is(input.getContext()));\n   }\n \n+  @Test\n+  @Issue(\"MULE-16892\")\n+  public void handleErrorWithChildAndParentStack() throws Exception {\n+\n+    List<FlowStackElement> parentStack = asList(new FlowStackElement(\"flow\", \"processor\"));\n+\n+    List<FlowStackElement> childStack = asList(\n+                                               new FlowStackElement(\"sub-flow-1\", \"processor-1\"),\n+                                               new FlowStackElement(\"sub-flow-2\", \"processor-2\"));\n+\n+    assertHandleErrorWithStack(parentStack, childStack);\n+  }\n+\n+  @Test\n+  @Issue(\"MULE-16892\")\n+  public void handleErrorWithEmptyParentStack() throws Exception {\n+\n+    List<FlowStackElement> childStack = asList(\n+                                               new FlowStackElement(\"sub-flow-1\", \"processor-1\"),\n+                                               new FlowStackElement(\"sub-flow-2\", \"processor-2\"));\n+\n+    assertHandleErrorWithStack(EMPTY_LIST, childStack);\n+  }\n+\n+  @Test\n+  @Issue(\"MULE-16892\")\n+  public void handleErrorWithEmptyStack() throws Exception {\n+    assertHandleErrorWithStack(EMPTY_LIST, EMPTY_LIST);\n+  }\n+\n+  private void assertHandleErrorWithStack(List<FlowStackElement> parentStack, List<FlowStackElement> childStack)\n+      throws InitialisationException {\n+\n+    thrown.expectCause(isA(MessagingException.class));\n+\n+    final DefaultFlowCallStack inputFlowCallStack = (DefaultFlowCallStack) input.getFlowCallStack();\n+    Reference<DefaultFlowCallStack> childFlowCallStack = new Reference<>();\n+\n+    try {\n+      parentStack.stream().forEachOrdered(inputFlowCallStack::push);\n+      // inputFlowCallStack.push(new FlowStackElement(\"flow\", \"processor\"));\n+\n+      ReactiveProcessor childWithStack = p -> from(p).flatMap(e -> {\n+        DefaultFlowCallStack stack = (DefaultFlowCallStack) e.getFlowCallStack();\n+\n+        childStack.stream().forEachOrdered(stack::push);\n+        // stack.push(new FlowStackElement(\"sub-flow-1\", \"processor-1\"));\n+        // stack.push(new FlowStackElement(\"sub-flow-2\", \"processor-2\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a91e78cdedd97c9693e88cf58e4a0691aa91ecd3"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d4ef5be46d63413cbac8af13ae38f8d68fc449e", "author": {"user": {"login": "szaffarano", "name": "Sebasti\u00e1n Zaffarano"}}, "url": "https://github.com/mulesoft/mule/commit/8d4ef5be46d63413cbac8af13ae38f8d68fc449e", "committedDate": "2020-10-14T21:41:51Z", "message": "Remove unused code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4Nzg4Mjk2", "url": "https://github.com/mulesoft/mule/pull/9535#pullrequestreview-508788296", "createdAt": "2020-10-14T21:42:59Z", "commit": {"oid": "8d4ef5be46d63413cbac8af13ae38f8d68fc449e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1162, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}