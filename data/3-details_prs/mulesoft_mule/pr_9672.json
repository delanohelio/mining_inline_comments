{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MzUwMzg4", "number": 9672, "title": "MULE-18926: Decouple ComponentBuildingDefinitionRegistry creation from MuleArtifactContext", "bodyText": "", "createdAt": "2020-11-04T12:22:46Z", "url": "https://github.com/mulesoft/mule/pull/9672", "merged": true, "mergeCommit": {"oid": "5ad47ef2b42b4b19abed5a2eed107905869cf9f7"}, "closed": true, "closedAt": "2020-11-06T19:28:47Z", "author": {"login": "mlischetti"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZMfcigH2gAyNTE1MzUwMzg4OjZkNDcyODg5M2ExNWI5NDg0N2MwODk5MjI2ZDFmNmMxNmE4YzA4OGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZ6RUQgFqTUyNTM0Njk1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6d4728893a15b94847c0899226d1f6c16a8c088f", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/6d4728893a15b94847c0899226d1f6c16a8c088f", "committedDate": "2020-11-04T11:58:33Z", "message": "MULE-18926: Decouple ComponentBuildingDefinitionRegistry creation from MuleArtifactContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7492079d618332f383092f6c666e8796fda026c", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/f7492079d618332f383092f6c666e8796fda026c", "committedDate": "2020-11-04T12:20:09Z", "message": "minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/fa0d9d05845937bead08498a37bb876352d98470", "committedDate": "2020-11-04T14:01:48Z", "message": "fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNjE5MDA2", "url": "https://github.com/mulesoft/mule/pull/9672#pullrequestreview-523619006", "createdAt": "2020-11-04T18:15:57Z", "commit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxNTo1N1rOHtkJUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoyMDozNlrOHtkTgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MDE3Nw==", "bodyText": "should this be deprecated? are there any remaining usages of this method?", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517540177", "createdAt": "2020-11-04T18:15:57Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/application/DefaultApplicationFactory.java", "diffHunk": "@@ -125,6 +126,12 @@ public ApplicationDescriptor createArtifactDescriptor(File artifactLocation, Opt\n   }\n \n   public Application createArtifact(ApplicationDescriptor descriptor) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MDY1OQ==", "bodyText": "missing description", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517540659", "createdAt": "2020-11-04T18:16:48Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/artifact/ArtifactContextBuilder.java", "diffHunk": "@@ -374,6 +376,18 @@ public ArtifactContextBuilder setRuntimeLockFactory(LockFactory runtimeLockFacto\n     return this;\n   }\n \n+  /**\n+   * Allows the usage of {@link ComponentBuildingDefinitionRegistryFactory} to create a {@link org.mule.runtime.dsl.api.component.ComponentBuildingDefinitionRegistry}.\n+   * \n+   * @param componentBuildingDefinitionRegistryFactory the {@link ComponentBuildingDefinitionRegistryFactory} factory\n+   *                                                   used to create a {@link org.mule.runtime.dsl.api.component.ComponentBuildingDefinitionRegistry}\n+   * @return", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MTQ1Nw==", "bodyText": "what's the purpose of this split? where is this new method called?", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517541457", "createdAt": "2020-11-04T18:18:21Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/domain/DefaultDomainFactory.java", "diffHunk": "@@ -134,6 +134,12 @@ public void start(DomainWrapper domainWrapper) {\n \n   @Override\n   protected Domain doCreateArtifact(File domainLocation, Optional<Properties> deploymentProperties) throws IOException {\n+    return createArtifact(domainLocation, deploymentProperties, null);\n+  }\n+\n+  public Domain createArtifact(File domainLocation, Optional<Properties> deploymentProperties,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MTg5NA==", "bodyText": "add a comment explaining why this is needed", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517541894", "createdAt": "2020-11-04T18:19:07Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-xml-support/src/test/java/org/mule/test/functional/ModuleCallingOperationsWithinModuleTestCase.java", "diffHunk": "@@ -195,4 +195,9 @@ private CoreEvent runFlowWithContentAndDefaultVariables(String flowName) throws\n         .withVariable(\"secondPart\", SECOND_PART)\n         .run();\n   }\n+\n+  @Override\n+  public boolean mustRegenerateExtensionModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MTk3NA==", "bodyText": "add a comment explaining why this is needed", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517541974", "createdAt": "2020-11-04T18:19:16Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-xml-support/src/test/java/org/mule/test/functional/ModuleGlobalElementTestCase.java", "diffHunk": "@@ -87,5 +87,9 @@ private void assertGetClient(String flow) throws Exception {\n     assertThat(client.getPassword(), is(\"notDoe\"));\n   }\n \n+  @Override\n+  public boolean mustRegenerateExtensionModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MTk4MA==", "bodyText": "add a comment explaining why this is needed", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517541980", "createdAt": "2020-11-04T18:19:16Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-xml-support/src/test/java/org/mule/test/functional/ModuleSimpleTestCase.java", "diffHunk": "@@ -202,4 +202,9 @@ public void testSetPayloadHardcodedFlowThruSubflowWithNestedElements() throws Ex\n     CoreEvent event = flowRunner(\"testSetPayloadHardcodedFlowThruSubflowWithNestedElements\").run();\n     assertThat(event.getMessage().getPayload().getValue(), is(\"hardcoded value\"));\n   }\n+\n+  @Override\n+  public boolean mustRegenerateExtensionModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MjAyNA==", "bodyText": "add a comment explaining why this is needed", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517542024", "createdAt": "2020-11-04T18:19:20Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-xml-support/src/test/java/org/mule/test/functional/ModuleTestConnectionTestCase.java", "diffHunk": "@@ -71,4 +71,9 @@ private void assertConnectionOn(String beanName) throws MuleException {\n     assertThat(connectionValidationResult.isValid(), is(true));\n     connectionProvider.disconnect(connect);\n   }\n+\n+  @Override\n+  public boolean mustRegenerateExtensionModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0Mjc4NQ==", "bodyText": "inline extensions", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517542785", "createdAt": "2020-11-04T18:20:36Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/MuleArtifactContext.java", "diffHunk": "@@ -227,21 +207,12 @@ public MuleArtifactContext(MuleContext muleContext, ConfigResource[] artifactCon\n     this.resourceLocator = new DefaultResourceLocator();\n     originalRegistry = ((MuleRegistryHelper) getMuleRegistry()).getDelegate();\n \n-    getRuntimeComponentBuildingDefinitionProvider().getComponentBuildingDefinitions()\n-        .forEach(componentBuildingDefinitionRegistry::register);\n-\n     extensionManager = muleContext.getExtensionManager();\n     final Set<ExtensionModel> extensions = getExtensions();\n-    getExtensionModelsComponentBuildingDefinitions(extensions, DslResolvingContext.getDefault(extensions))\n-        .forEach(componentBuildingDefinitionRegistry::register);\n-\n-    for (ClassLoader pluginArtifactClassLoader : pluginsClassLoaders) {\n-      getArtifactComponentBuildingDefinitions(pluginArtifactClassLoader)\n-          .forEach(componentBuildingDefinitionRegistry::register);\n-    }\n \n     this.beanDefinitionFactory =\n-        new BeanDefinitionFactory(muleContext.getConfiguration().getId(), componentBuildingDefinitionRegistry);\n+        new BeanDefinitionFactory(muleContext.getConfiguration().getId(),\n+                                  componentBuildingDefinitionRegistryFactory.create(extensions));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 105}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b15a6cfa9010e2d9946a2a2bcb2f1e73a96e9b2", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/0b15a6cfa9010e2d9946a2a2bcb2f1e73a96e9b2", "committedDate": "2020-11-04T20:00:37Z", "message": "review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29352a24e1cf0fb737f2356b6993a691f3ad529f", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/29352a24e1cf0fb737f2356b6993a691f3ad529f", "committedDate": "2020-11-05T14:01:24Z", "message": "review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NTM3MTI1", "url": "https://github.com/mulesoft/mule/pull/9672#pullrequestreview-524537125", "createdAt": "2020-11-05T18:13:08Z", "commit": {"oid": "29352a24e1cf0fb737f2356b6993a691f3ad529f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb182d27f0c9ef10f90785048a9836206b0e9dad", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/eb182d27f0c9ef10f90785048a9836206b0e9dad", "committedDate": "2020-11-06T17:06:00Z", "message": "changes\n\n(cherry picked from commit 718f38bb9b20cf0d902b6a7c1efdb8c734712933)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "629b4e7d7c3fd1284a2ceebb03dbd1a666ae2514", "author": {"user": {"login": "mlischetti", "name": "Mariano Lischetti"}}, "url": "https://github.com/mulesoft/mule/commit/629b4e7d7c3fd1284a2ceebb03dbd1a666ae2514", "committedDate": "2020-11-06T17:13:43Z", "message": "more changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MzQ2OTU1", "url": "https://github.com/mulesoft/mule/pull/9672#pullrequestreview-525346955", "createdAt": "2020-11-06T17:18:45Z", "commit": {"oid": "629b4e7d7c3fd1284a2ceebb03dbd1a666ae2514"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1132, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}