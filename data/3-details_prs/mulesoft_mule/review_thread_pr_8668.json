{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3OTU3NTY0", "number": 8668, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTozMzoyNVrODhr7dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTozMzoyNVrODhr7dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjQ5MzMzOnYy", "diffSide": "RIGHT", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/connectivity/oauth/ocs/PlatformManagedOAuthConnectionProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTozMzoyNVrOFsj41g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTozMzoyNVrOFsj41g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI2OTY1NA==", "bodyText": "This breaks liskov principle. You should use the NullObject pattern here instead", "url": "https://github.com/mulesoft/mule/pull/8668#discussion_r382269654", "createdAt": "2020-02-20T21:33:25Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/connectivity/oauth/ocs/PlatformManagedOAuthConnectionProvider.java", "diffHunk": "@@ -355,4 +360,44 @@ public ConnectionManagementType getConnectionManagementType() {\n     return oauthConfig.getDelegateConnectionProviderModel().getConnectionManagementType();\n   }\n \n+  @Override\n+  public void onBorrow(C connection) {\n+    delegatePoolingListener.onBorrow(connection);\n+  }\n+\n+  @Override\n+  public void onReturn(C connection) {\n+    delegatePoolingListener.onReturn(connection);\n+  }\n+\n+  private PoolingListener<C> getDelegatePoolingListener() {\n+    if (unwrappedDelegate instanceof PoolingListener) {\n+      return new PoolingListener<C>() {\n+\n+        @Override\n+        public void onBorrow(C connection) {\n+          ((PoolingListener) unwrappedDelegate).onBorrow(connection);\n+        }\n+\n+        @Override\n+        public void onReturn(C connection) {\n+          ((PoolingListener) unwrappedDelegate).onReturn(connection);\n+        }\n+      };\n+    } else {\n+      return new PoolingListener<C>() {\n+\n+        @Override\n+        public void onBorrow(C connection) {\n+          throw new UnsupportedOperationException(\"The delegate connection provider does not support Pooling\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62bd4a6e3198bc7826cc408fe385136ecf7a0f09"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 41, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}