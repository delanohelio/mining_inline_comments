{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMDg2MTQ0", "number": 8634, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoxNTo0OFrODf5xxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxODozNzozMlrODgeo_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0Nzc5MDc3OnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/MuleArtifactContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoxNTo0OFrOFp35rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoxNTo0OFrOFp35rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1MTgyMg==", "bodyText": "javadoc", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379451822", "createdAt": "2020-02-14T14:15:48Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/MuleArtifactContext.java", "diffHunk": "@@ -314,14 +314,18 @@ public EntityResolver getEntityResolver() {\n       return new ApplicationModel(artifactConfig, artifactDeclaration, getExtensions(),\n                                   artifactProperties, parentConfigurationProperties,\n                                   of(componentBuildingDefinitionRegistry),\n-                                  externalResourceProvider);\n+                                  externalResourceProvider, isRuntimeMode());\n     } catch (MuleRuntimeException e) {\n       throw e;\n     } catch (Exception e) {\n       throw new MuleRuntimeException(e);\n     }\n   }\n \n+  protected boolean isRuntimeMode() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0Nzc5MTYwOnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/dsl/model/ExtensionModelHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoxNjowNFrOFp36Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoxNjowNFrOFp36Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1MTk1NA==", "bodyText": "?", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379451954", "createdAt": "2020-02-14T14:16:04Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/dsl/model/ExtensionModelHelper.java", "diffHunk": "@@ -261,7 +270,9 @@ protected void onConnectionProvider(HasConnectionProviderModels owner, Connectio\n                 if (dslSyntaxResolver.resolve(model).getElementName().equals(componentIdentifier.getName())) {\n                   modelRef.set(model);\n                 }\n-              };\n+              }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0Nzc5MTgwOnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/dsl/model/ExtensionModelHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoxNjowOFrOFp36Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoxNjowOFrOFp36Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1MTk4Mg==", "bodyText": "?", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379451982", "createdAt": "2020-02-14T14:16:08Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/dsl/model/ExtensionModelHelper.java", "diffHunk": "@@ -344,7 +355,9 @@ protected void onConnectionProvider(org.mule.runtime.api.meta.model.connection.H\n                 delegate.onConnectionProvider(model);\n                 stop();\n               }\n-            };\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0Nzc5NTYxOnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/dsl/model/ExtensionModelHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoxNzoyMVrOFp38rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoxNzoyMVrOFp38rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1MjU4OA==", "bodyText": "extract common stuff between this method and the one above", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379452588", "createdAt": "2020-02-14T14:17:21Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/dsl/model/ExtensionModelHelper.java", "diffHunk": "@@ -398,6 +411,58 @@ protected void onNestable(ComposableModel owner, NestableElementModel model) {\n         .findFirst();\n   }\n \n+  public DslElementSyntax resolveDslElementModel(NamedObject component, ComponentIdentifier componentIdentifier) {\n+    Optional<ExtensionModel> optionalExtensionModel = lookupExtensionModelFor(componentIdentifier);\n+    ExtensionModel extensionModel = optionalExtensionModel\n+        .orElseThrow(() -> new IllegalStateException(\"Extension Model in context not present for componentIdentifier: \"\n+            + componentIdentifier));\n+\n+    final DslSyntaxResolver dslSyntaxResolver = dslSyntaxResolversByExtension.get(extensionModel);\n+\n+    return dslSyntaxResolver.resolve(component);\n+  }\n+\n+  public Optional<DslElementSyntax> resolveDslElementModel(MetadataType metadataType, ExtensionModel extensionModel) {\n+    return dslSyntaxResolversByExtension.get(extensionModel).resolve(metadataType);\n+  }\n+\n+  public DslElementSyntax resolveDslElementModel(ParameterModel parameterModel, ComponentIdentifier componentIdentifier) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzgwNzA1OnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/dsl/model/ExtensionModelHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoyMDo1OFrOFp4EHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoyMDo1OFrOFp4EHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1NDQ5NA==", "bodyText": "can this be made more readable? extract methods, for instance", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379454494", "createdAt": "2020-02-14T14:20:58Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/dsl/model/ExtensionModelHelper.java", "diffHunk": "@@ -398,6 +411,58 @@ protected void onNestable(ComposableModel owner, NestableElementModel model) {\n         .findFirst();\n   }\n \n+  public DslElementSyntax resolveDslElementModel(NamedObject component, ComponentIdentifier componentIdentifier) {\n+    Optional<ExtensionModel> optionalExtensionModel = lookupExtensionModelFor(componentIdentifier);\n+    ExtensionModel extensionModel = optionalExtensionModel\n+        .orElseThrow(() -> new IllegalStateException(\"Extension Model in context not present for componentIdentifier: \"\n+            + componentIdentifier));\n+\n+    final DslSyntaxResolver dslSyntaxResolver = dslSyntaxResolversByExtension.get(extensionModel);\n+\n+    return dslSyntaxResolver.resolve(component);\n+  }\n+\n+  public Optional<DslElementSyntax> resolveDslElementModel(MetadataType metadataType, ExtensionModel extensionModel) {\n+    return dslSyntaxResolversByExtension.get(extensionModel).resolve(metadataType);\n+  }\n+\n+  public DslElementSyntax resolveDslElementModel(ParameterModel parameterModel, ComponentIdentifier componentIdentifier) {\n+    Optional<ExtensionModel> optionalExtensionModel = lookupExtensionModelFor(componentIdentifier);\n+    ExtensionModel extensionModel = optionalExtensionModel\n+        .orElseThrow(() -> new IllegalStateException(\"Extension Model in context not present for componentIdentifier: \"\n+            + componentIdentifier));\n+\n+    final DslSyntaxResolver dslSyntaxResolver = dslSyntaxResolversByExtension.get(extensionModel);\n+\n+    return dslSyntaxResolver.resolve(parameterModel);\n+  }\n+\n+  public Map<ObjectType, Optional<DslElementSyntax>> resolveSubTypes(ObjectType type) {\n+    ImmutableMap.Builder<ObjectType, Optional<DslElementSyntax>> mapBuilder = ImmutableMap.builder();\n+    for (ObjectType subType : dslResolvingContext.getTypeCatalog().getSubTypes(type)) {\n+      subType.getAnnotation(TypeIdAnnotation.class).map(TypeIdAnnotation::getValue).ifPresent(\n+                                                                                              typeId -> dslResolvingContext", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzgyNTM5OnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoyNjoyNFrOFp4PYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoyNjoyNFrOFp4PYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1NzM3Nw==", "bodyText": "missing a space?", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379457377", "createdAt": "2020-02-14T14:26:24Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "diffHunk": "@@ -324,17 +345,19 @@ public ApplicationModel(ArtifactConfig artifactConfig, ArtifactDeclaration artif\n     // TODO MULE-13894 do this only on runtimeMode=true once unified extensionModel names to use camelCase (see smart connectors\n     // and crafted declared extension models)\n     resolveComponentTypes();\n-    muleComponentModels.forEach(componentModel -> componentModel.resolveTypedComponentIdentifier(extensionModelHelper));\n+    muleComponentModels\n+        .forEach(componentModel -> componentModel.resolveTypedComponentIdentifier(extensionModelHelper, runtimeMode));\n     final ComponentLocationVisitor clv = new ComponentLocationVisitor();\n     recursiveStreamWithHierarchy().forEach(clv);\n   }\n \n   public void macroExpandXmlSdkComponents(Set<ExtensionModel> extensionModels) {\n     expandModules(extensionModels, () -> {\n-      // TODO MULE-13894 do this only on runtimeMode=true once unified extensionModel names to use camelCase (see smart\n+      // TODO MULE-13894 do this onorg.springframework.beans.ConversionNotSupportedExceptionly on runtimeMode=true once unified extensionModel names to use camelCase (see smart", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzgyNzI2OnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoyNjo1MlrOFp4QZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoyNjo1MlrOFp4QZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1NzYzNg==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379457636", "createdAt": "2020-02-14T14:26:52Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "diffHunk": "@@ -608,8 +615,90 @@ public void onFixedValue(Object value) {\n         });\n       });\n     });\n+\n+    // Use ExtensionModel to register top level and subTypes elements\n+    ReflectionCache reflectionCache = new ReflectionCache();\n+    Map<ComponentIdentifier, MetadataTypeModelAdapter> registry = new HashMap();\n+    extensionModelHelper.getExtensionsModels().stream().forEach(extensionModel -> extensionModel.getTypes().stream()\n+        .filter(p -> IntrospectionUtils.isInstantiable(p, reflectionCache))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 179}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzgyODA4OnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoyNzowOFrOFp4Q6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoyNzowOFrOFp4Q6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1Nzc2OQ==", "bodyText": "remove {}", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r379457769", "createdAt": "2020-02-14T14:27:08Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "diffHunk": "@@ -608,8 +615,90 @@ public void onFixedValue(Object value) {\n         });\n       });\n     });\n+\n+    // Use ExtensionModel to register top level and subTypes elements\n+    ReflectionCache reflectionCache = new ReflectionCache();\n+    Map<ComponentIdentifier, MetadataTypeModelAdapter> registry = new HashMap();\n+    extensionModelHelper.getExtensionsModels().stream().forEach(extensionModel -> extensionModel.getTypes().stream()\n+        .filter(p -> IntrospectionUtils.isInstantiable(p, reflectionCache))\n+        .forEach(parameterType -> {\n+          registerTopLevelParameter(parameterType, reflectionCache, registry, extensionModel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff74c83532d969496604c58fcb4d9aea356d2fe"}, "originalPosition": 181}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzgzMDM2OnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/MuleArtifactContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxODozNzozMlrOFqtMzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxODozNzozMlrOFqtMzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMyNTA2OQ==", "bodyText": "add @since", "url": "https://github.com/mulesoft/mule/pull/8634#discussion_r380325069", "createdAt": "2020-02-17T18:37:32Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/MuleArtifactContext.java", "diffHunk": "@@ -322,6 +322,10 @@ public EntityResolver getEntityResolver() {\n     }\n   }\n \n+  /**\n+   * Defines if the context should be created for Runtime (execution) o not. This has impact on how the AST\n+   * will be populated and created.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e0b15ac82054101e443eefa9ec8ff0f9fb42d5c"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 164, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}