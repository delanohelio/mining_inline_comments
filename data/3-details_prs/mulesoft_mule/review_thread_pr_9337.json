{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3Mzg2MDcz", "number": 9337, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjowMzo0NlrOEfbCJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjowNToxM1rOEfbD3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzg0MjMxOnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/typed/value/TypedValueParameterOperationExecutionTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjowMzo0NlrOHLr6FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjowMzo0NlrOHLr6FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAxNTc2NA==", "bodyText": "use constants", "url": "https://github.com/mulesoft/mule/pull/9337#discussion_r482015764", "createdAt": "2020-09-02T12:03:46Z", "author": {"login": "fsgonz"}, "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/typed/value/TypedValueParameterOperationExecutionTestCase.java", "diffHunk": "@@ -126,16 +142,20 @@ public void typedValueForDoorMapAsChild() throws Exception {\n   @Test\n   public void typedValueOperationStringMapListParameter() throws Exception {\n     Map<Object, Object> mapStringList = new LinkedHashMap<>();\n-    mapStringList.put(\"key\", Collections.singletonList(\"string\"));\n+    mapStringList.put(\"key\", singletonList(\"string\"));\n     runAndAssertTypedValue(\"typedValueOperationStringMapListParameter\", mapStringList, ANY, null);\n   }\n \n   @Test\n   public void typedValueForStringOnSourceOnSuccess() throws Exception {\n     Flow flow = (Flow) getFlowConstruct(\"typedValueForStringOnSourceOnSuccess\");\n     flow.start();\n-    new PollingProber(100000, 100).check(new JUnitLambdaProbe(() -> TypedValueSource.onSuccessValue != null));\n-    assertTypedValue(TypedValueSource.onSuccessValue, STRING_VALUE, WILDCARD, null);\n+    try {\n+      new PollingProber(100000, 100).check(new JUnitLambdaProbe(() -> TypedValueSource.onSuccessValue != null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa78fe46c4c7cc4c8ebcf62b0798f76053aff9fc"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzg0NDgyOnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/streaming/ObjectStreamingExtensionTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjowNDozNFrOHLr7jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjowNDozNFrOHLr7jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAxNjE0MA==", "bodyText": "I would set the comment before the annotation.", "url": "https://github.com/mulesoft/mule/pull/9337#discussion_r482016140", "createdAt": "2020-09-02T12:04:34Z", "author": {"login": "fsgonz"}, "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/streaming/ObjectStreamingExtensionTestCase.java", "diffHunk": "@@ -45,6 +48,10 @@\n   @Rule\n   public ExpectedException expectedException = none();\n \n+  @Rule\n+  // This test asserts internals that are modified when statistics are enabled", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa78fe46c4c7cc4c8ebcf62b0798f76053aff9fc"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzg0NjY5OnYy", "diffSide": "RIGHT", "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/typed/value/TypedValueParameterOperationExecutionTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjowNToxM1rOHLr8tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjowNToxM1rOHLr8tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAxNjQzNg==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9337#discussion_r482016436", "createdAt": "2020-09-02T12:05:13Z", "author": {"login": "fsgonz"}, "path": "modules/extensions-spring-support/src/test/java/org/mule/test/module/extension/typed/value/TypedValueParameterOperationExecutionTestCase.java", "diffHunk": "@@ -126,16 +142,20 @@ public void typedValueForDoorMapAsChild() throws Exception {\n   @Test\n   public void typedValueOperationStringMapListParameter() throws Exception {\n     Map<Object, Object> mapStringList = new LinkedHashMap<>();\n-    mapStringList.put(\"key\", Collections.singletonList(\"string\"));\n+    mapStringList.put(\"key\", singletonList(\"string\"));\n     runAndAssertTypedValue(\"typedValueOperationStringMapListParameter\", mapStringList, ANY, null);\n   }\n \n   @Test\n   public void typedValueForStringOnSourceOnSuccess() throws Exception {\n     Flow flow = (Flow) getFlowConstruct(\"typedValueForStringOnSourceOnSuccess\");\n     flow.start();\n-    new PollingProber(100000, 100).check(new JUnitLambdaProbe(() -> TypedValueSource.onSuccessValue != null));\n-    assertTypedValue(TypedValueSource.onSuccessValue, STRING_VALUE, WILDCARD, null);\n+    try {\n+      new PollingProber(100000, 100).check(new JUnitLambdaProbe(() -> TypedValueSource.onSuccessValue != null));\n+      assertTypedValue(TypedValueSource.onSuccessValue, STRING_VALUE, WILDCARD, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa78fe46c4c7cc4c8ebcf62b0798f76053aff9fc"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4758, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}