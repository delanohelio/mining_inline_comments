{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjI4NTc0", "number": 8741, "title": "MULE-18200: 4.3.0: expression errors hang MUnit test execution", "bodyText": "present", "createdAt": "2020-03-18T19:40:42Z", "url": "https://github.com/mulesoft/mule/pull/8741", "merged": true, "mergeCommit": {"oid": "854c25278ee0a1c70c06909d7c80233a8e115a34"}, "closed": true, "closedAt": "2020-03-18T21:13:17Z", "author": {"login": "elrodro83"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcO8nY8gH2gAyMzkwNjI4NTc0OjI0N2FjMGI0MTUwNDI0NDVkNDRiN2RiYmQzZjQyMThkZjE3YjQwNGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcO8w_NAFqTM3NzE4NDgyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "247ac0b415042445d44b7dbbd3f4218df17b404d", "author": {"user": {"login": "elrodro83", "name": "Rodrigo Merino"}}, "url": "https://github.com/mulesoft/mule/commit/247ac0b415042445d44b7dbbd3f4218df17b404d", "committedDate": "2020-03-18T19:38:21Z", "message": "MULE-18200: 4.3.0: readUrl getting blocked when file resource is not\npresent"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTgwNjUx", "url": "https://github.com/mulesoft/mule/pull/8741#pullrequestreview-377180651", "createdAt": "2020-03-18T19:42:33Z", "commit": {"oid": "247ac0b415042445d44b7dbbd3f4218df17b404d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOTo0MjozM1rOF4UPlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOTo0MjozM1rOF4UPlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU5NjI0NA==", "bodyText": "is it correct to throw the exception even if the if resolved to true and the errorSink received the next() call?", "url": "https://github.com/mulesoft/mule/pull/8741#discussion_r394596244", "createdAt": "2020-03-18T19:42:33Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/operation/ComponentMessageProcessor.java", "diffHunk": "@@ -311,8 +311,25 @@ public CoreEvent process(CoreEvent event) throws MuleException {\n             .map(event -> {\n               try {\n                 return addContextToEvent(event, ctx);\n-              } catch (MuleException t) {\n-                throw propagateWrappingFatal(localOperatorErrorHook.apply(t, event));\n+              } catch (Exception t) {\n+                // Force the error mapper from the chain to be used.\n+                // When using Mono.create with sink.error, the error mapper from the\n+                // context is ignored, so it has to be explicitly used here.\n+                final Throwable mapped = localOperatorErrorHook.apply(t, event);\n+\n+                if (outerFluxTerminationTimeout < 0\n+                    // When there is a mono involved in some part of the chain, we cannot use the termination timeout because that\n+                    // would\n+                    // impose a timeout in the operation, which we don't want to.\n+                    // In this case, the flux will be complete when there are no more inflight operations.\n+                    || ctx.getOrDefault(WITHIN_PROCESS_TO_APPLY, false)) {\n+                  // if `sink.error` is called here, it will cancel the flux altogether.\n+                  // That's why an `Either` is used here,\n+                  // so the error can be propagated afterwards in a way consistent with our expected error handling.\n+                  errorSwitchSinkSinkRef.next(left(mapped, CoreEvent.class));\n+                }\n+\n+                throw propagateWrappingFatal(mapped);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247ac0b415042445d44b7dbbd3f4218df17b404d"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTg0ODIz", "url": "https://github.com/mulesoft/mule/pull/8741#pullrequestreview-377184823", "createdAt": "2020-03-18T19:48:50Z", "commit": {"oid": "247ac0b415042445d44b7dbbd3f4218df17b404d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 948, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}