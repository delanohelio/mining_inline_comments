{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMjI4MjEw", "number": 8830, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNzozNjoyMVrOD4JA1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNzozNzo0MFrOD4JCwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTk0NTE4OnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNzozNjoyMVrOGOzgVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNzo0OTozMVrOGOz-cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE3NzEwOA==", "bodyText": "If we don't resolveComponentTypes those componentAst will not be associated to a parameter model etc therefore it will not be able to call getParameterAst by the parsers.", "url": "https://github.com/mulesoft/mule/pull/8830#discussion_r418177108", "createdAt": "2020-04-30T17:36:21Z", "author": {"login": "gsfernandes"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "diffHunk": "@@ -337,24 +337,22 @@ public ApplicationModel(ArtifactConfig artifactConfig, ArtifactDeclaration artif\n     topLevelComponentsStream()\n         .forEach(componentModel -> ((ComponentModel) componentModel).resolveTypedComponentIdentifier(extensionModelHelper,\n                                                                                                      runtimeMode));\n-    final ComponentLocationVisitor clv = new ComponentLocationVisitor();\n-    recursiveStreamWithHierarchy().forEach(clv);\n+    recursiveStreamWithHierarchy().forEach(new ComponentLocationVisitor());\n   }\n \n   public void macroExpandXmlSdkComponents(Set<ExtensionModel> extensionModels) {\n     expandModules(extensionModels, () -> {\n       // TODO MULE-13894 do this only on runtimeMode=true once unified extensionModel names to use camelCase (see smart connectors\n       // connectors and crafted declared extension models)\n+\n+      // TODO MULE-17419 (AST) Remove these 2 actions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b40e33604aba1a85f8a4df89d335dea08274ff4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE4NDAyNA==", "bodyText": "if those are already resolved for the AST of the smart connector definition, the idea is to keep and use them. In that case, there's no need to recalculate them here. That's one of the golas of the linked TODO.", "url": "https://github.com/mulesoft/mule/pull/8830#discussion_r418184024", "createdAt": "2020-04-30T17:48:18Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "diffHunk": "@@ -337,24 +337,22 @@ public ApplicationModel(ArtifactConfig artifactConfig, ArtifactDeclaration artif\n     topLevelComponentsStream()\n         .forEach(componentModel -> ((ComponentModel) componentModel).resolveTypedComponentIdentifier(extensionModelHelper,\n                                                                                                      runtimeMode));\n-    final ComponentLocationVisitor clv = new ComponentLocationVisitor();\n-    recursiveStreamWithHierarchy().forEach(clv);\n+    recursiveStreamWithHierarchy().forEach(new ComponentLocationVisitor());\n   }\n \n   public void macroExpandXmlSdkComponents(Set<ExtensionModel> extensionModels) {\n     expandModules(extensionModels, () -> {\n       // TODO MULE-13894 do this only on runtimeMode=true once unified extensionModel names to use camelCase (see smart connectors\n       // connectors and crafted declared extension models)\n+\n+      // TODO MULE-17419 (AST) Remove these 2 actions", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE3NzEwOA=="}, "originalCommit": {"oid": "9b40e33604aba1a85f8a4df89d335dea08274ff4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE4NDgxOQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/mulesoft/mule/pull/8830#discussion_r418184819", "createdAt": "2020-04-30T17:49:31Z", "author": {"login": "gsfernandes"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "diffHunk": "@@ -337,24 +337,22 @@ public ApplicationModel(ArtifactConfig artifactConfig, ArtifactDeclaration artif\n     topLevelComponentsStream()\n         .forEach(componentModel -> ((ComponentModel) componentModel).resolveTypedComponentIdentifier(extensionModelHelper,\n                                                                                                      runtimeMode));\n-    final ComponentLocationVisitor clv = new ComponentLocationVisitor();\n-    recursiveStreamWithHierarchy().forEach(clv);\n+    recursiveStreamWithHierarchy().forEach(new ComponentLocationVisitor());\n   }\n \n   public void macroExpandXmlSdkComponents(Set<ExtensionModel> extensionModels) {\n     expandModules(extensionModels, () -> {\n       // TODO MULE-13894 do this only on runtimeMode=true once unified extensionModel names to use camelCase (see smart connectors\n       // connectors and crafted declared extension models)\n+\n+      // TODO MULE-17419 (AST) Remove these 2 actions", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE3NzEwOA=="}, "originalCommit": {"oid": "9b40e33604aba1a85f8a4df89d335dea08274ff4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTk1MDEwOnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/test/java/org/mule/runtime/config/internal/factories/FlowRefFactoryBeanTestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNzozNzo0MFrOGOzjfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNzo0Njo1MVrOGOz4Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE3NzkxNw==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/8830#discussion_r418177917", "createdAt": "2020-04-30T17:37:40Z", "author": {"login": "gsfernandes"}, "path": "modules/spring-config/src/test/java/org/mule/runtime/config/internal/factories/FlowRefFactoryBeanTestCase.java", "diffHunk": "@@ -262,7 +262,7 @@ public void dynamicFlowRefDoesNotExist() throws Exception {\n   private FlowRefFactoryBean createFlowRefFactoryBean(String name) throws Exception {\n     FlowRefFactoryBean flowRefFactoryBean = new FlowRefFactoryBean();\n     flowRefFactoryBean.setName(name);\n-    flowRefFactoryBean.setAnnotations(singletonMap(LOCATION_KEY, fromSingleComponent(\"flow\")));\n+    flowRefFactoryBean.setAnnotations(singletonMap(LOCATION_KEY, DefaultComponentLocation.from(\"flow\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b40e33604aba1a85f8a4df89d335dea08274ff4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE4MzI1OQ==", "bodyText": "there's already Flux.from (or Mono.from, done really remember now) statically imported in this class", "url": "https://github.com/mulesoft/mule/pull/8830#discussion_r418183259", "createdAt": "2020-04-30T17:46:51Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/test/java/org/mule/runtime/config/internal/factories/FlowRefFactoryBeanTestCase.java", "diffHunk": "@@ -262,7 +262,7 @@ public void dynamicFlowRefDoesNotExist() throws Exception {\n   private FlowRefFactoryBean createFlowRefFactoryBean(String name) throws Exception {\n     FlowRefFactoryBean flowRefFactoryBean = new FlowRefFactoryBean();\n     flowRefFactoryBean.setName(name);\n-    flowRefFactoryBean.setAnnotations(singletonMap(LOCATION_KEY, fromSingleComponent(\"flow\")));\n+    flowRefFactoryBean.setAnnotations(singletonMap(LOCATION_KEY, DefaultComponentLocation.from(\"flow\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE3NzkxNw=="}, "originalCommit": {"oid": "9b40e33604aba1a85f8a4df89d335dea08274ff4"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 16, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}