{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3MzM0NzQ5", "number": 9857, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODo0NTo1MFrOFGEt_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODo0NjoxNlrOFGEulQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTEzMDg1OnYy", "diffSide": "RIGHT", "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/sampledata/SampleDataExecutor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODo0NTo1MFrOIG6FXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTo1ODoyM1rOIHB0jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExNDAxNA==", "bodyText": "This failure is not needed anymore since the exception will be thrown", "url": "https://github.com/mulesoft/mule/pull/9857#discussion_r544114014", "createdAt": "2020-12-16T08:45:50Z", "author": {"login": "lucianoRM"}, "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/sampledata/SampleDataExecutor.java", "diffHunk": "@@ -81,9 +83,9 @@ public SampleDataResult getSampleData(ComponentModel componentModel, ComponentEl\n       if (cause instanceof SampleDataException) {\n         failureBuilder.withFailureCode(((SampleDataException) cause).getFailureCode());\n       }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cbbbfbb4329ed6ccb0280187fab7d20986b46ca"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIyMzkzMQ==", "bodyText": "No, actually the way the connector has to return a \"failure\" is by throwing this exception which has a an error code. If any other exception is thrown we should propagate it but this transformation and exception handling is needed here.", "url": "https://github.com/mulesoft/mule/pull/9857#discussion_r544223931", "createdAt": "2020-12-16T11:30:33Z", "author": {"login": "gsfernandes"}, "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/sampledata/SampleDataExecutor.java", "diffHunk": "@@ -81,9 +83,9 @@ public SampleDataResult getSampleData(ComponentModel componentModel, ComponentEl\n       if (cause instanceof SampleDataException) {\n         failureBuilder.withFailureCode(((SampleDataException) cause).getFailureCode());\n       }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExNDAxNA=="}, "originalCommit": {"oid": "5cbbbfbb4329ed6ccb0280187fab7d20986b46ca"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI0MDc4MA==", "bodyText": "But I don't get it. This information will be lost.\nIf you get an ExecutionExceptionWrapper exception, You will always end up throwing a new MuleRuntimeException(e.getCause())\nThe failureBuilder object is not referenced in the exception thrown", "url": "https://github.com/mulesoft/mule/pull/9857#discussion_r544240780", "createdAt": "2020-12-16T11:58:23Z", "author": {"login": "lucianoRM"}, "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/sampledata/SampleDataExecutor.java", "diffHunk": "@@ -81,9 +83,9 @@ public SampleDataResult getSampleData(ComponentModel componentModel, ComponentEl\n       if (cause instanceof SampleDataException) {\n         failureBuilder.withFailureCode(((SampleDataException) cause).getFailureCode());\n       }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExNDAxNA=="}, "originalCommit": {"oid": "5cbbbfbb4329ed6ccb0280187fab7d20986b46ca"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTEzMjM3OnYy", "diffSide": "RIGHT", "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/value/ValueProviderExecutor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODo0NjoxNlrOIG6GWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTozMDozN1rOIHAy9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExNDI2Nw==", "bodyText": "same here", "url": "https://github.com/mulesoft/mule/pull/9857#discussion_r544114267", "createdAt": "2020-12-16T08:46:16Z", "author": {"login": "lucianoRM"}, "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/value/ValueProviderExecutor.java", "diffHunk": "@@ -87,9 +89,9 @@ public ValueResult resolveValues(ParameterizedModel parameterizedModel,\n       if (cause instanceof ValueResolvingException) {\n         failureBuilder.withFailureCode(((ValueResolvingException) cause).getFailureCode());\n       }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cbbbfbb4329ed6ccb0280187fab7d20986b46ca"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIyMzk5MA==", "bodyText": "No, actually the way the connector has to return a \"failure\" is by throwing this exception which has a an error code. If any other exception is thrown we should propagate it but this transformation and exception handling is needed here.", "url": "https://github.com/mulesoft/mule/pull/9857#discussion_r544223990", "createdAt": "2020-12-16T11:30:37Z", "author": {"login": "gsfernandes"}, "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/value/ValueProviderExecutor.java", "diffHunk": "@@ -87,9 +89,9 @@ public ValueResult resolveValues(ParameterizedModel parameterizedModel,\n       if (cause instanceof ValueResolvingException) {\n         failureBuilder.withFailureCode(((ValueResolvingException) cause).getFailureCode());\n       }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExNDI2Nw=="}, "originalCommit": {"oid": "5cbbbfbb4329ed6ccb0280187fab7d20986b46ca"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4588, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}