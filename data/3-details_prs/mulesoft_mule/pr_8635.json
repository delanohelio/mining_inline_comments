{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMTE1MjU5", "number": 8635, "title": "MULE-18019-FIX: Fix reconnection for Paged Operations on the first call to getPage", "bodyText": "", "createdAt": "2020-02-06T21:14:33Z", "url": "https://github.com/mulesoft/mule/pull/8635", "merged": true, "mergeCommit": {"oid": "ccd11f0df4879fd8e4f18a0683745604e76cb033"}, "closed": true, "closedAt": "2020-02-12T18:47:12Z", "author": {"login": "SebaElizalde"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBxYKmgH2gAyMzcyMTE1MjU5OmE5Mzg4ZDk0YjU3NDI0ZmI1MDZlNmJhMWJhYjQ3NGU4YTliYmIzMzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDqzhygFqTM1NzY5MzQ0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a9388d94b57424fb506e6ba1bab474e8a9bbb338", "author": {"user": {"login": "SebaElizalde", "name": "Sebastian Elizalde"}}, "url": "https://github.com/mulesoft/mule/commit/a9388d94b57424fb506e6ba1bab474e8a9bbb338", "committedDate": "2020-02-06T21:11:45Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0570adf0ca90bc892a223bcfeb61eb33cd9cccc", "author": {"user": {"login": "SebaElizalde", "name": "Sebastian Elizalde"}}, "url": "https://github.com/mulesoft/mule/commit/d0570adf0ca90bc892a223bcfeb61eb33cd9cccc", "committedDate": "2020-02-06T22:05:13Z", "message": "quite close"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f025f66b1dc381a51ca825b22f5741c3231be10e", "author": {"user": {"login": "SebaElizalde", "name": "Sebastian Elizalde"}}, "url": "https://github.com/mulesoft/mule/commit/f025f66b1dc381a51ca825b22f5741c3231be10e", "committedDate": "2020-02-06T22:06:35Z", "message": "imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MTgyNzAz", "url": "https://github.com/mulesoft/mule/pull/8635#pullrequestreview-355182703", "createdAt": "2020-02-07T14:14:55Z", "commit": {"oid": "f025f66b1dc381a51ca825b22f5741c3231be10e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNDoxNDo1NVrOFm-SOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNDoyMDoyOVrOFm-eFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQxMDY4MA==", "bodyText": "you can't remove the withErrorType parameter. Otherwise you're tweaking the test to be green rather than fixing the issue.", "url": "https://github.com/mulesoft/mule/pull/8635#discussion_r376410680", "createdAt": "2020-02-07T14:14:55Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-spring-support/src/test/resources/reconnection-config.xml", "diffHunk": "@@ -32,7 +32,11 @@\n     </flow>\n \n     <flow name=\"stickyPagedOperation\">\n-        <reconnection:sticky-paged-operation failOn=\"#[payload]\" withErrorType=\"#[vars.errorType]\" config-ref=\"reconnection_Config\"/>\n+        <reconnection:sticky-paged-operation failOn=\"#[payload]\" config-ref=\"reconnection_Config\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f025f66b1dc381a51ca825b22f5741c3231be10e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQxMTExMg==", "bodyText": "rename to actualConnectionSupplier or some other name that better reveals the intent", "url": "https://github.com/mulesoft/mule/pull/8635#discussion_r376411112", "createdAt": "2020-02-07T14:15:42Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "diffHunk": "@@ -37,26 +39,29 @@\n  */\n public final class PagingProviderProducer<T> implements Producer<List<T>> {\n \n+  private static final Logger LOGGER = LoggerFactory.getLogger(PagingProviderProducer.class);\n+\n   public static final String COULD_NOT_OBTAIN_A_CONNECTION = \"Could not obtain a connection for the configuration\";\n   public static final String COULD_NOT_CREATE_A_CONNECTION_SUPPLIER =\n       \"Could not obtain a connection supplier for the configuration\";\n   public static final String COULD_NOT_CLOSE_PAGING_PROVIDER = \"Could not close the Paging Provider\";\n   public static final String COULD_NOT_EXECUTE = \"Could not execute operation with connection\";\n   private PagingProvider<Object, T> delegate;\n   private final ConfigurationInstance config;\n-  private final ExtensionConnectionSupplier connectionSupplier;\n+  private final ExtensionConnectionSupplier extensionConnectionSupplier;\n   private final ExecutionContextAdapter executionContext;\n   private final ConnectionSupplierFactory connectionSupplierFactory;\n+  private ConnectionSupplier connectionSupplier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f025f66b1dc381a51ca825b22f5741c3231be10e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQxMjkyMA==", "bodyText": "still not fixed. If this fails, the original exception get swallowed", "url": "https://github.com/mulesoft/mule/pull/8635#discussion_r376412920", "createdAt": "2020-02-07T14:19:02Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "diffHunk": "@@ -87,30 +92,34 @@ public int getSize() {\n    * @return\n    */\n   private <R> R performWithConnection(Function<Object, R> function) {\n-    ConnectionSupplier connectionSupplier = getConnectionSupplier();\n+    connectionSupplier = getConnectionSupplier();\n     Object connection = getConnection(connectionSupplier);\n     try {\n       R result = function.apply(connection);\n       connectionSupplier.close();\n       return result;\n     } catch (Exception e) {\n       if (isFirstPage) {\n-        closeDelegate(connection);\n+        silentlyCloseDelegate(connection);\n       }\n       extractConnectionException(e).ifPresent(ex -> connectionSupplier.invalidateConnection());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f025f66b1dc381a51ca825b22f5741c3231be10e"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQxMzI1Ng==", "bodyText": "use org.mule.runtime.core.internal.util.FunctionalUtils#safely(T, org.mule.runtime.core.api.util.func.CheckedConsumer<T>, java.util.function.Consumer<java.lang.Exception>) instead", "url": "https://github.com/mulesoft/mule/pull/8635#discussion_r376413256", "createdAt": "2020-02-07T14:19:36Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "diffHunk": "@@ -87,30 +92,34 @@ public int getSize() {\n    * @return\n    */\n   private <R> R performWithConnection(Function<Object, R> function) {\n-    ConnectionSupplier connectionSupplier = getConnectionSupplier();\n+    connectionSupplier = getConnectionSupplier();\n     Object connection = getConnection(connectionSupplier);\n     try {\n       R result = function.apply(connection);\n       connectionSupplier.close();\n       return result;\n     } catch (Exception e) {\n       if (isFirstPage) {\n-        closeDelegate(connection);\n+        silentlyCloseDelegate(connection);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f025f66b1dc381a51ca825b22f5741c3231be10e"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQxMzQ4Ng==", "bodyText": "safely()", "url": "https://github.com/mulesoft/mule/pull/8635#discussion_r376413486", "createdAt": "2020-02-07T14:20:03Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "diffHunk": "@@ -87,30 +92,34 @@ public int getSize() {\n    * @return\n    */\n   private <R> R performWithConnection(Function<Object, R> function) {\n-    ConnectionSupplier connectionSupplier = getConnectionSupplier();\n+    connectionSupplier = getConnectionSupplier();\n     Object connection = getConnection(connectionSupplier);\n     try {\n       R result = function.apply(connection);\n       connectionSupplier.close();\n       return result;\n     } catch (Exception e) {\n       if (isFirstPage) {\n-        closeDelegate(connection);\n+        silentlyCloseDelegate(connection);\n       }\n       extractConnectionException(e).ifPresent(ex -> connectionSupplier.invalidateConnection());\n-      throw new MuleRuntimeException(createStaticMessage(COULD_NOT_EXECUTE), e);\n+      throw e;\n     }\n   }\n \n   /**\n    * Closes the delegate\n    */\n   @Override\n-  public void close() throws IOException {\n-    ConnectionSupplier connectionSupplier = getConnectionSupplier();\n-    closeDelegate(getConnection(connectionSupplier));\n-    connectionSupplier.close();\n-    connectionSupplierFactory.dispose();\n+  public void close() {\n+    try {\n+      delegate.close(connectionSupplier.getConnection());\n+    } catch (Exception e) {\n+      throw new MuleRuntimeException(createStaticMessage(COULD_NOT_OBTAIN_A_CONNECTION), e);\n+    } finally {\n+      connectionSupplier.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f025f66b1dc381a51ca825b22f5741c3231be10e"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQxMzcxNg==", "bodyText": "log any potential failures in this block, and continue", "url": "https://github.com/mulesoft/mule/pull/8635#discussion_r376413716", "createdAt": "2020-02-07T14:20:29Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "diffHunk": "@@ -87,30 +92,34 @@ public int getSize() {\n    * @return\n    */\n   private <R> R performWithConnection(Function<Object, R> function) {\n-    ConnectionSupplier connectionSupplier = getConnectionSupplier();\n+    connectionSupplier = getConnectionSupplier();\n     Object connection = getConnection(connectionSupplier);\n     try {\n       R result = function.apply(connection);\n       connectionSupplier.close();\n       return result;\n     } catch (Exception e) {\n       if (isFirstPage) {\n-        closeDelegate(connection);\n+        silentlyCloseDelegate(connection);\n       }\n       extractConnectionException(e).ifPresent(ex -> connectionSupplier.invalidateConnection());\n-      throw new MuleRuntimeException(createStaticMessage(COULD_NOT_EXECUTE), e);\n+      throw e;\n     }\n   }\n \n   /**\n    * Closes the delegate\n    */\n   @Override\n-  public void close() throws IOException {\n-    ConnectionSupplier connectionSupplier = getConnectionSupplier();\n-    closeDelegate(getConnection(connectionSupplier));\n-    connectionSupplier.close();\n-    connectionSupplierFactory.dispose();\n+  public void close() {\n+    try {\n+      delegate.close(connectionSupplier.getConnection());\n+    } catch (Exception e) {\n+      throw new MuleRuntimeException(createStaticMessage(COULD_NOT_OBTAIN_A_CONNECTION), e);\n+    } finally {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f025f66b1dc381a51ca825b22f5741c3231be10e"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98083fccca343d41edd890d444c97a459c11c853", "author": {"user": {"login": "SebaElizalde", "name": "Sebastian Elizalde"}}, "url": "https://github.com/mulesoft/mule/commit/98083fccca343d41edd890d444c97a459c11c853", "committedDate": "2020-02-07T21:56:42Z", "message": "asd"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b26975e27145ebb81e75e049987e9e9e9a43392", "author": {"user": {"login": "SebaElizalde", "name": "Sebastian Elizalde"}}, "url": "https://github.com/mulesoft/mule/commit/1b26975e27145ebb81e75e049987e9e9e9a43392", "committedDate": "2020-02-10T14:35:42Z", "message": "added test cases for tx"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4307071459c9ac728fc09b2c37f07c1886bd40ea", "author": {"user": {"login": "SebaElizalde", "name": "Sebastian Elizalde"}}, "url": "https://github.com/mulesoft/mule/commit/4307071459c9ac728fc09b2c37f07c1886bd40ea", "committedDate": "2020-02-10T14:56:40Z", "message": "fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dd0681140b39bc051db5d7ba878d502795c1dee", "author": {"user": {"login": "SebaElizalde", "name": "Sebastian Elizalde"}}, "url": "https://github.com/mulesoft/mule/commit/2dd0681140b39bc051db5d7ba878d502795c1dee", "committedDate": "2020-02-10T16:07:49Z", "message": "null check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a9fe60377de668b2b9a1a590d951b3e85ebb987", "author": {"user": {"login": "SebaElizalde", "name": "Sebastian Elizalde"}}, "url": "https://github.com/mulesoft/mule/commit/9a9fe60377de668b2b9a1a590d951b3e85ebb987", "committedDate": "2020-02-10T16:51:25Z", "message": "syntax sugar changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6ba9068e06dfc6e7af2e1ba19a20de37e0888e4", "author": {"user": {"login": "SebaElizalde", "name": "Sebastian Elizalde"}}, "url": "https://github.com/mulesoft/mule/commit/d6ba9068e06dfc6e7af2e1ba19a20de37e0888e4", "committedDate": "2020-02-10T18:53:14Z", "message": "static imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MjIxOTYz", "url": "https://github.com/mulesoft/mule/pull/8635#pullrequestreview-356221963", "createdAt": "2020-02-10T19:59:29Z", "commit": {"oid": "d6ba9068e06dfc6e7af2e1ba19a20de37e0888e4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxOTo1OToyOVrOFnzoxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMDowMDo0MFrOFnzq_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI4NDgwNw==", "bodyText": "what you're closing thing is not a buffer", "url": "https://github.com/mulesoft/mule/pull/8635#discussion_r377284807", "createdAt": "2020-02-10T19:59:29Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "diffHunk": "@@ -87,30 +91,37 @@ public int getSize() {\n    * @return\n    */\n   private <R> R performWithConnection(Function<Object, R> function) {\n-    ConnectionSupplier connectionSupplier = getConnectionSupplier();\n-    Object connection = getConnection(connectionSupplier);\n+    actualConnectionSupplier = getActualConnectionSupplier();\n+    Object connection = getConnection(actualConnectionSupplier);\n     try {\n       R result = function.apply(connection);\n-      connectionSupplier.close();\n+      actualConnectionSupplier.close();\n       return result;\n-    } catch (Exception e) {\n+    } catch (Exception exception) {\n       if (isFirstPage) {\n-        closeDelegate(connection);\n+        safely(() -> delegate.close(connection), e -> LOGGER.debug(\"Found exception closing buffer\", e));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6ba9068e06dfc6e7af2e1ba19a20de37e0888e4"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI4NTM3NQ==", "bodyText": "if there's no actual connection supplier then do nothing. You're opening a connection for the sole purpose of closing it", "url": "https://github.com/mulesoft/mule/pull/8635#discussion_r377285375", "createdAt": "2020-02-10T20:00:40Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "diffHunk": "@@ -87,30 +91,37 @@ public int getSize() {\n    * @return\n    */\n   private <R> R performWithConnection(Function<Object, R> function) {\n-    ConnectionSupplier connectionSupplier = getConnectionSupplier();\n-    Object connection = getConnection(connectionSupplier);\n+    actualConnectionSupplier = getActualConnectionSupplier();\n+    Object connection = getConnection(actualConnectionSupplier);\n     try {\n       R result = function.apply(connection);\n-      connectionSupplier.close();\n+      actualConnectionSupplier.close();\n       return result;\n-    } catch (Exception e) {\n+    } catch (Exception exception) {\n       if (isFirstPage) {\n-        closeDelegate(connection);\n+        safely(() -> delegate.close(connection), e -> LOGGER.debug(\"Found exception closing buffer\", e));\n       }\n-      extractConnectionException(e).ifPresent(ex -> connectionSupplier.invalidateConnection());\n-      throw new MuleRuntimeException(createStaticMessage(COULD_NOT_EXECUTE), e);\n+      extractConnectionException(exception).ifPresent(ex -> actualConnectionSupplier.invalidateConnection());\n+      throw exception;\n     }\n   }\n \n   /**\n    * Closes the delegate\n    */\n   @Override\n-  public void close() throws IOException {\n-    ConnectionSupplier connectionSupplier = getConnectionSupplier();\n-    closeDelegate(getConnection(connectionSupplier));\n-    connectionSupplier.close();\n-    connectionSupplierFactory.dispose();\n+  public void close() {\n+    try {\n+      if (actualConnectionSupplier == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6ba9068e06dfc6e7af2e1ba19a20de37e0888e4"}, "originalPosition": 92}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2be460e2cd82c216fc992f2c2ac4050f2be4d86c", "author": {"user": {"login": "SebaElizalde", "name": "Sebastian Elizalde"}}, "url": "https://github.com/mulesoft/mule/commit/2be460e2cd82c216fc992f2c2ac4050f2be4d86c", "committedDate": "2020-02-11T15:45:31Z", "message": "reversed closing changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d1d92b1705bd989a6040a20e720d57089d632ed", "author": {"user": {"login": "SebaElizalde", "name": "Sebastian Elizalde"}}, "url": "https://github.com/mulesoft/mule/commit/4d1d92b1705bd989a6040a20e720d57089d632ed", "committedDate": "2020-02-11T18:05:20Z", "message": "asd"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODg0MzI0", "url": "https://github.com/mulesoft/mule/pull/8635#pullrequestreview-356884324", "createdAt": "2020-02-11T18:18:12Z", "commit": {"oid": "4d1d92b1705bd989a6040a20e720d57089d632ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxODoxODoxM1rOFoTy5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxODoxODoxM1rOFoTy5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgxMTY4Ng==", "bodyText": "We are closing the connectionSupplier here, so no need to save it in a variable and close it later on the close() method.", "url": "https://github.com/mulesoft/mule/pull/8635#discussion_r377811686", "createdAt": "2020-02-11T18:18:13Z", "author": {"login": "SebaElizalde"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "diffHunk": "@@ -93,24 +96,32 @@ public int getSize() {\n       R result = function.apply(connection);\n       connectionSupplier.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1d92b1705bd989a6040a20e720d57089d632ed"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c21fa02e801c8c11435cf7e110eea5ec97c0927", "author": {"user": {"login": "SebaElizalde", "name": "Sebastian Elizalde"}}, "url": "https://github.com/mulesoft/mule/commit/6c21fa02e801c8c11435cf7e110eea5ec97c0927", "committedDate": "2020-02-11T18:23:43Z", "message": "Merge remote-tracking branch 'origin/mule-4.2.x' into MULE-18019-FIX"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2OTk2MjI0", "url": "https://github.com/mulesoft/mule/pull/8635#pullrequestreview-356996224", "createdAt": "2020-02-11T21:09:36Z", "commit": {"oid": "4d1d92b1705bd989a6040a20e720d57089d632ed"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMTowOTozNlrOFoZK-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMTowOTo1NFrOFoZLjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg5OTc2OA==", "bodyText": "safely", "url": "https://github.com/mulesoft/mule/pull/8635#discussion_r377899768", "createdAt": "2020-02-11T21:09:36Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "diffHunk": "@@ -93,24 +96,32 @@ public int getSize() {\n       R result = function.apply(connection);\n       connectionSupplier.close();\n       return result;\n-    } catch (Exception e) {\n+    } catch (Exception exception) {\n       if (isFirstPage) {\n-        closeDelegate(connection);\n+        safely(() -> delegate.close(connection), e -> LOGGER.debug(\"Found exception closing paging provider\", e));\n       }\n-      extractConnectionException(e).ifPresent(ex -> connectionSupplier.invalidateConnection());\n-      throw new MuleRuntimeException(createStaticMessage(COULD_NOT_EXECUTE), e);\n+      extractConnectionException(exception).ifPresent(ex -> connectionSupplier.invalidateConnection());\n+      throw exception;\n     }\n   }\n \n   /**\n    * Closes the delegate\n    */\n   @Override\n-  public void close() throws IOException {\n-    ConnectionSupplier connectionSupplier = getConnectionSupplier();\n-    closeDelegate(getConnection(connectionSupplier));\n-    connectionSupplier.close();\n-    connectionSupplierFactory.dispose();\n+  public void close() {\n+    ConnectionSupplier connectionSupplier = null;\n+    try {\n+      connectionSupplier = connectionSupplierFactory.getConnectionSupplier();\n+      delegate.close(connectionSupplier.getConnection());\n+    } catch (Exception e) {\n+      throw new MuleRuntimeException(createStaticMessage(COULD_NOT_OBTAIN_A_CONNECTION), e);\n+    } finally {\n+      if (connectionSupplier != null) {\n+        connectionSupplier.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d1d92b1705bd989a6040a20e720d57089d632ed"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg5OTkxNw==", "bodyText": "finally", "url": "https://github.com/mulesoft/mule/pull/8635#discussion_r377899917", "createdAt": "2020-02-11T21:09:54Z", "author": {"login": "marianogonzalez"}, "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/PagingProviderProducer.java", "diffHunk": "@@ -93,24 +96,32 @@ public int getSize() {\n       R result = function.apply(connection);\n       connectionSupplier.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgxMTY4Ng=="}, "originalCommit": {"oid": "4d1d92b1705bd989a6040a20e720d57089d632ed"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70eaf4d482b99f14677d2e38d69c9051d65c0226", "author": {"user": {"login": "SebaElizalde", "name": "Sebastian Elizalde"}}, "url": "https://github.com/mulesoft/mule/commit/70eaf4d482b99f14677d2e38d69c9051d65c0226", "committedDate": "2020-02-12T14:41:49Z", "message": "pr changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e59477b29d280ad262a9b58580e39d80ec79731", "author": {"user": {"login": "SebaElizalde", "name": "Sebastian Elizalde"}}, "url": "https://github.com/mulesoft/mule/commit/4e59477b29d280ad262a9b58580e39d80ec79731", "committedDate": "2020-02-12T15:12:19Z", "message": "name change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NjkzNDQ4", "url": "https://github.com/mulesoft/mule/pull/8635#pullrequestreview-357693448", "createdAt": "2020-02-12T18:40:09Z", "commit": {"oid": "4e59477b29d280ad262a9b58580e39d80ec79731"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1409, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}