{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ3MDYwNjA2", "number": 9905, "reviewThreads": {"totalCount": 56, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNDo1ODo0NVrOFPPmpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NTo1NFrOFR5r-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTI4NjEyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/internal/context/ArtifactStoppedListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNDo1ODo0NVrOIUfuGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNDo1ODo0NVrOIUfuGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2MjEzNw==", "bodyText": "add javadoc", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558362137", "createdAt": "2021-01-15T14:58:45Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/ArtifactStoppedListener.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.context;\n+\n+public interface ArtifactStoppedListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTI4ODUzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/internal/context/ArtifactStoppedListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNDo1OToxOFrOIUfvjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNDo1OToxOFrOIUfvjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2MjUwOA==", "bodyText": "is this called before or after the start itself has happened? MAke this clear in the javadoc", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558362508", "createdAt": "2021-01-15T14:59:18Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/ArtifactStoppedListener.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.context;\n+\n+public interface ArtifactStoppedListener {\n+\n+  /**\n+   * Notifies the starting of an artifact.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTI4OTU1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/internal/context/ArtifactStoppedListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNDo1OToyOVrOIUfwJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNDo1OToyOVrOIUfwJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2MjY2Mg==", "bodyText": "is this called before or after the stop itself has happened? MAke this clear in the javadoc", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558362662", "createdAt": "2021-01-15T14:59:29Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/ArtifactStoppedListener.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.context;\n+\n+public interface ArtifactStoppedListener {\n+\n+  /**\n+   * Notifies the starting of an artifact.\n+   */\n+  void onStart();\n+\n+  /**\n+   * Notifies the stopping of an artifact.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTI5MjE2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/internal/context/ArtifactStoppedListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowMDowNVrOIUfxtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowMDowNVrOIUfxtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2MzA2MA==", "bodyText": "this wording is odd. Rephrase for clarity.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558363060", "createdAt": "2021-01-15T15:00:05Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/ArtifactStoppedListener.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.context;\n+\n+public interface ArtifactStoppedListener {\n+\n+  /**\n+   * Notifies the starting of an artifact.\n+   */\n+  void onStart();\n+\n+  /**\n+   * Notifies the stopping of an artifact.\n+   */\n+  void onStop();\n+\n+  /**\n+   * Selects persistance of the artifact's state", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTI5NjM1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/internal/context/ArtifactStoppedListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowMDo1NlrOIUf0KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowMDo1NlrOIUf0KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2MzY4OQ==", "bodyText": "the presence of the mustPersist method in this interface makes me think that its name is more generic than the intended usage.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558363689", "createdAt": "2021-01-15T15:00:56Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/ArtifactStoppedListener.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.context;\n+\n+public interface ArtifactStoppedListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTI5NzU5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/internal/context/DefaultMuleContext.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowMToxNFrOIUf06g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowMToxNFrOIUf06g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2Mzg4Mg==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558363882", "createdAt": "2021-01-15T15:01:14Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/DefaultMuleContext.java", "diffHunk": "@@ -357,6 +358,9 @@ public void start() throws MuleException {\n       fireNotification(new MuleContextNotification(this, CONTEXT_STARTED));\n       final org.mule.runtime.api.artifact.Registry apiRegistry = getApiRegistry();\n       listeners.forEach(l -> l.onStart(this, apiRegistry));\n+      Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+          Optional.ofNullable(getRegistry().lookupObject(ARTIFACT_STOPPED_LISTENER));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMwMDU0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/internal/context/DefaultMuleContext.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowMjowMVrOIUf2xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowMjowMVrOIUf2xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NDM1Ng==", "bodyText": "no need to use the intermediate Optional just for this. a simple null check will do.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558364356", "createdAt": "2021-01-15T15:02:01Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/DefaultMuleContext.java", "diffHunk": "@@ -357,6 +358,9 @@ public void start() throws MuleException {\n       fireNotification(new MuleContextNotification(this, CONTEXT_STARTED));\n       final org.mule.runtime.api.artifact.Registry apiRegistry = getApiRegistry();\n       listeners.forEach(l -> l.onStart(this, apiRegistry));\n+      Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+          Optional.ofNullable(getRegistry().lookupObject(ARTIFACT_STOPPED_LISTENER));\n+      optionalArtifactStoppedListener.ifPresent(ArtifactStoppedListener::onStart);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMwMDc3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mule/runtime/core/internal/context/DefaultMuleContext.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowMjowNFrOIUf25A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowMjowNFrOIUf25A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NDM4OA==", "bodyText": "no need to use the intermediate Optional just for this. a simple null check will do.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558364388", "createdAt": "2021-01-15T15:02:04Z", "author": {"login": "elrodro83"}, "path": "core/src/main/java/org/mule/runtime/core/internal/context/DefaultMuleContext.java", "diffHunk": "@@ -414,6 +418,9 @@ public void stop() throws MuleException {\n \n       final org.mule.runtime.api.artifact.Registry apiRegistry = getApiRegistry();\n       listeners.forEach(l -> l.onStop(this, apiRegistry));\n+      Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+          Optional.ofNullable(getRegistry().lookupObject(ARTIFACT_STOPPED_LISTENER));\n+      optionalArtifactStoppedListener.ifPresent(ArtifactStoppedListener::onStop);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMwMjg2OnYy", "diffSide": "RIGHT", "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/application/DefaultMuleApplication.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowMjo0MFrOIUf4TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowMjo0MFrOIUf4TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NDc0OA==", "bodyText": "there doesn't seem to be any change in this class to add this import for", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558364748", "createdAt": "2021-01-15T15:02:40Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/application/DefaultMuleApplication.java", "diffHunk": "@@ -43,6 +43,7 @@\n import org.mule.runtime.core.api.context.notification.MuleContextListener;\n import org.mule.runtime.core.api.context.notification.MuleContextNotification;\n import org.mule.runtime.core.api.context.notification.MuleContextNotificationListener;\n+import org.mule.runtime.core.internal.context.DefaultMuleContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMwNDY3OnYy", "diffSide": "RIGHT", "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/artifact/ArtifactFactoryUtils.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowMzowN1rOIUf5Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxMjo1Nzo0NFrOIZltbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NTAzMQ==", "bodyText": "is this something that can really happen?", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558365031", "createdAt": "2021-01-15T15:03:07Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/artifact/ArtifactFactoryUtils.java", "diffHunk": "@@ -96,7 +96,7 @@ public static void withArtifactMuleContext(DeployableArtifact artifact, CheckedC\n    * @since 4.2\n    */\n   public static Optional<MuleContext> getMuleContext(DeployableArtifact artifact) {\n-    return artifact != null ? artifact.getRegistry().lookupByType(MuleContext.class) : empty();\n+    return artifact != null && artifact.getRegistry() != null ? artifact.getRegistry().lookupByType(MuleContext.class) : empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MDczMQ==", "bodyText": "still open", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562640731", "createdAt": "2021-01-22T13:46:44Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/artifact/ArtifactFactoryUtils.java", "diffHunk": "@@ -96,7 +96,7 @@ public static void withArtifactMuleContext(DeployableArtifact artifact, CheckedC\n    * @since 4.2\n    */\n   public static Optional<MuleContext> getMuleContext(DeployableArtifact artifact) {\n-    return artifact != null ? artifact.getRegistry().lookupByType(MuleContext.class) : empty();\n+    return artifact != null && artifact.getRegistry() != null ? artifact.getRegistry().lookupByType(MuleContext.class) : empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NTAzMQ=="}, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzcwMzE1MQ==", "bodyText": "The reasoning behind adding this additional check is the same as here. Since getRegistry() can return null I think this method could eventually throw a NullPointerException", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r563703151", "createdAt": "2021-01-25T12:57:44Z", "author": {"login": "sofiamorseletto"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/artifact/ArtifactFactoryUtils.java", "diffHunk": "@@ -96,7 +96,7 @@ public static void withArtifactMuleContext(DeployableArtifact artifact, CheckedC\n    * @since 4.2\n    */\n   public static Optional<MuleContext> getMuleContext(DeployableArtifact artifact) {\n-    return artifact != null ? artifact.getRegistry().lookupByType(MuleContext.class) : empty();\n+    return artifact != null && artifact.getRegistry() != null ? artifact.getRegistry().lookupByType(MuleContext.class) : empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NTAzMQ=="}, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMwNTE1OnYy", "diffSide": "RIGHT", "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/domain/DefaultMuleDomain.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowMzoxNlrOIUf5uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowMzoxNlrOIUf5uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NTExNQ==", "bodyText": "there doesn't seem to be any change in this class to add this import for", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558365115", "createdAt": "2021-01-15T15:03:16Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/domain/DefaultMuleDomain.java", "diffHunk": "@@ -31,6 +31,7 @@\n import org.mule.runtime.api.service.ServiceRepository;\n import org.mule.runtime.api.value.ValueProviderService;\n import org.mule.runtime.core.api.context.notification.MuleContextListener;\n+import org.mule.runtime.core.internal.context.DefaultMuleContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMxMDAxOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArtifactDeployer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNDozNVrOIUf81A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNDozNVrOIUf81A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NTkwOA==", "bodyText": "use the interface (ArtifactStoppedListener) in the var declaration, not the impl", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558365908", "createdAt": "2021-01-15T15:04:35Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArtifactDeployer.java", "diffHunk": "@@ -29,9 +36,16 @@ public void deploy(T artifact, boolean startArtifact) {\n     try {\n       artifact.install();\n       doInit(artifact);\n-      if (startArtifact) {\n+      if (startArtifact && shouldStartArtifact(artifact)) {\n         artifact.start();\n       }\n+\n+      ArtifactStoppedDeploymentListener artifactStoppedDeploymentListener =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMxMDQxOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNDo0MlrOIUf9EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNDo0MlrOIUf9EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NTk2OA==", "bodyText": "use the interface (ArtifactStoppedListener) in the var declaration, not the impl", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558365968", "createdAt": "2021-01-15T15:04:42Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "diffHunk": "@@ -80,28 +83,27 @@\n    * Property used to change the deployment mode to deploy only the indicated applications with no redeployment.\n    * mule -M-Dmule.deploy.applications=app1:app2:app3\n    * This can also be done passing an additional command line option (deprecated) like:\n-   *  mule -app app1:app2:app3 will restrict deployment only to those specified apps.\n+   * mule -app app1:app2:app3 will restrict deployment only to those specified apps.\n    */\n   public static final String DEPLOYMENT_APPLICATION_PROPERTY = \"mule.deploy.applications\";\n \n   protected static final int DEFAULT_CHANGES_CHECK_INTERVAL_MS = 5000;\n \n   protected transient final Logger logger = LoggerFactory.getLogger(getClass());\n-\n-  private final ReentrantLock deploymentLock;\n-  private final ArchiveDeployer<Domain> domainArchiveDeployer;\n   protected final ArchiveDeployer<Application> applicationArchiveDeployer;\n   protected final Supplier<SchedulerService> schedulerServiceSupplier;\n+  private final ReentrantLock deploymentLock;\n+  private final ArchiveDeployer<Domain> domainArchiveDeployer;\n   private final ArtifactTimestampListener<Application> applicationTimestampListener;\n   private final ArtifactTimestampListener<Domain> domainTimestampListener;\n   private final ObservableList<Application> applications;\n   private final ObservableList<Domain> domains;\n   private final DomainBundleArchiveDeployer domainBundleDeployer;\n   private final File appsDir;\n   private final File domainsDir;\n-  private ScheduledExecutorService artifactDirMonitorTimer;\n-\n+  private final List<ArtifactStoppedDeploymentListener> artifactStoppedDeploymentListeners;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMxMTY3OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNTowMlrOIUf90w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNTowMlrOIUf90w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NjE2Mw==", "bodyText": "use package visibility", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558366163", "createdAt": "2021-01-15T15:05:02Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentListener.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedListener;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.util.Optional;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+public class ArtifactStoppedDeploymentListener implements ArtifactStoppedListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMxMjQ2OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNToxNlrOIUf-Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNToxNlrOIUf-Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NjI4Mg==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558366282", "createdAt": "2021-01-15T15:05:16Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentListener.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedListener;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.util.Optional;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+public class ArtifactStoppedDeploymentListener implements ArtifactStoppedListener {\n+\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());\n+  private AtomicBoolean shouldPersist;\n+  private String artifactName;\n+\n+  public ArtifactStoppedDeploymentListener(String artifactName) {\n+    this.artifactName = artifactName;\n+    shouldPersist = new AtomicBoolean(true);\n+  }\n+\n+  @Override\n+  public void onStart() {\n+    Properties properties = new Properties();\n+    properties.setProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, String.valueOf(true));\n+    try {\n+      resolveDeploymentProperties(artifactName, Optional.of(properties));\n+    } catch (IOException e) {\n+      logger.error(\"ApplicationStoppedDeploymentListener failed to process notification onArtifactStopped for artifact \"\n+          + artifactName, e);\n+    }\n+  }\n+\n+  @Override\n+  public void onStop() {\n+    if (!shouldPersist.get()) {\n+      return;\n+    }\n+    Properties properties = new Properties();\n+    properties.setProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, String.valueOf(false));\n+    try {\n+      resolveDeploymentProperties(artifactName, Optional.of(properties));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMxMjc3OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNToyMVrOIUf-ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNToyMVrOIUf-ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NjMzMQ==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558366331", "createdAt": "2021-01-15T15:05:21Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentListener.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedListener;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.util.Optional;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+public class ArtifactStoppedDeploymentListener implements ArtifactStoppedListener {\n+\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());\n+  private AtomicBoolean shouldPersist;\n+  private String artifactName;\n+\n+  public ArtifactStoppedDeploymentListener(String artifactName) {\n+    this.artifactName = artifactName;\n+    shouldPersist = new AtomicBoolean(true);\n+  }\n+\n+  @Override\n+  public void onStart() {\n+    Properties properties = new Properties();\n+    properties.setProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, String.valueOf(true));\n+    try {\n+      resolveDeploymentProperties(artifactName, Optional.of(properties));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMxNjMzOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNjoxMlrOIUgAhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNjoxMlrOIUgAhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2Njg1Mg==", "bodyText": "static imports go first", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558366852", "createdAt": "2021-01-15T15:06:12Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "diffHunk": "@@ -44,10 +34,22 @@\n import java.util.Optional;\n import java.util.Properties;\n \n-import org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate;\n-import org.apache.commons.beanutils.BeanToPropertyValueTransformer;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import static java.lang.Boolean.valueOf;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMxODc3OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNjo1MVrOIUgCCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNjo1MVrOIUgCCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NzI0Mg==", "bodyText": "no need to use the intermediate Optional just for this. a simple null check will do.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558367242", "createdAt": "2021-01-15T15:06:51Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "diffHunk": "@@ -188,6 +193,13 @@ public void undeployArtifactWithoutUninstall(T artifact) {\n     logRequestToUndeployArtifact(artifact);\n     try {\n       deploymentListener.onUndeploymentStart(artifact.getArtifactName());\n+      Optional<Registry> optionalRegistry = ofNullable(artifact.getRegistry());\n+\n+      optionalRegistry.ifPresent(artifactRegistry -> {\n+        Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+            artifactRegistry.lookupByName(ARTIFACT_STOPPED_LISTENER);\n+        optionalArtifactStoppedListener.ifPresent(artifactStoppedListener -> artifactStoppedListener.mustPersist(false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMxOTE1OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNjo1NVrOIUgCRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNjo1NVrOIUgCRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NzMwMA==", "bodyText": "no need to use the intermediate Optional just for this. a simple null check will do.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558367300", "createdAt": "2021-01-15T15:06:55Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "diffHunk": "@@ -297,6 +309,13 @@ private void undeploy(T artifact, boolean removeData) {\n       deploymentListener.onUndeploymentStart(artifact.getArtifactName());\n \n       artifacts.remove(artifact);\n+      Optional<Registry> optionalRegistry = ofNullable(artifact.getRegistry());\n+\n+      optionalRegistry.ifPresent(artifactRegistry -> {\n+        Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+            artifactRegistry.lookupByName(ARTIFACT_STOPPED_LISTENER);\n+        optionalArtifactStoppedListener.ifPresent(artifactStoppedListener -> artifactStoppedListener.mustPersist(false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMyMjEwOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNzoyOVrOIUgEBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQyMDoyODo1MFrOIV2aDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2Nzc1MQ==", "bodyText": "no need to use the intermediate Optional just for this. a simple null check will do.How can it be null, anyway?", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558367751", "createdAt": "2021-01-15T15:07:29Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "diffHunk": "@@ -297,6 +309,13 @@ private void undeploy(T artifact, boolean removeData) {\n       deploymentListener.onUndeploymentStart(artifact.getArtifactName());\n \n       artifacts.remove(artifact);\n+      Optional<Registry> optionalRegistry = ofNullable(artifact.getRegistry());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTc4MjQxMg==", "bodyText": "I also thought that it couldn't happen until some tests started failing because getRegistry returned null (deploysDomainWithSharedLibPrecedenceOverApplicationSharedLib, deploysDomainBundleZipAfterStartup, ...) Then I checked getRegistry() and the method implementation indicates that null is a possible return value:\npublic Registry getRegistry() {\n    return artifactContext != null ? artifactContext.getRegistry() : null;\n  }\nso I ended up adding this additional check.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r559782412", "createdAt": "2021-01-18T20:28:50Z", "author": {"login": "sofiamorseletto"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "diffHunk": "@@ -297,6 +309,13 @@ private void undeploy(T artifact, boolean removeData) {\n       deploymentListener.onUndeploymentStart(artifact.getArtifactName());\n \n       artifacts.remove(artifact);\n+      Optional<Registry> optionalRegistry = ofNullable(artifact.getRegistry());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2Nzc1MQ=="}, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMyMjY2OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNzozNVrOIUgEWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNzozNVrOIUgEWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2NzgzMg==", "bodyText": "no need to use the intermediate Optional just for this. a simple null check will do.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558367832", "createdAt": "2021-01-15T15:07:35Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "diffHunk": "@@ -405,8 +393,13 @@ public void redeploy(String artifactName, Optional<Properties> deploymentPropert\n \n     deploymentTemplate.preRedeploy(artifact);\n \n+    Optional<Registry> optionalRegistry = ofNullable(artifact.getRegistry());\n+    Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+        optionalRegistry.isPresent() ? optionalRegistry.get().lookupByName(ARTIFACT_STOPPED_LISTENER) : Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 167}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMyMjkyOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNzozOVrOIUgEfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNzozOVrOIUgEfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2Nzg2OQ==", "bodyText": "no need to use the intermediate Optional just for this. a simple null check will do.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558367869", "createdAt": "2021-01-15T15:07:39Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArchiveDeployer.java", "diffHunk": "@@ -405,8 +393,13 @@ public void redeploy(String artifactName, Optional<Properties> deploymentPropert\n \n     deploymentTemplate.preRedeploy(artifact);\n \n+    Optional<Registry> optionalRegistry = ofNullable(artifact.getRegistry());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 165}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMyNDQ5OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArtifactDeployer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNzo1NFrOIUgFTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowNzo1NFrOIUgFTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2ODA3OQ==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558368079", "createdAt": "2021-01-15T15:07:54Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArtifactDeployer.java", "diffHunk": "@@ -29,9 +36,16 @@ public void deploy(T artifact, boolean startArtifact) {\n     try {\n       artifact.install();\n       doInit(artifact);\n-      if (startArtifact) {\n+      if (startArtifact && shouldStartArtifact(artifact)) {\n         artifact.start();\n       }\n+\n+      ArtifactStoppedDeploymentListener artifactStoppedDeploymentListener =\n+          new ArtifactStoppedDeploymentListener(artifact.getArtifactName());\n+      ArtifactFactoryUtils.withArtifactMuleContext(artifact, muleContext -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMyNTA4OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArtifactDeployer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowODowMFrOIUgFmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowODowMFrOIUgFmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2ODE1NQ==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558368155", "createdAt": "2021-01-15T15:08:00Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArtifactDeployer.java", "diffHunk": "@@ -105,4 +119,15 @@ private void tryToStopArtifact(T artifact) {\n     }\n   }\n \n+  private Boolean shouldStartArtifact(T artifact) {\n+    Properties deploymentProperties = null;\n+    try {\n+      deploymentProperties = DeploymentPropertiesUtils.resolveDeploymentProperties(artifact.getArtifactName(), Optional.empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMyNTY3OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArtifactDeployer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowODowNlrOIUgF6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowODowNlrOIUgF6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2ODIzNQ==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558368235", "createdAt": "2021-01-15T15:08:06Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArtifactDeployer.java", "diffHunk": "@@ -105,4 +119,15 @@ private void tryToStopArtifact(T artifact) {\n     }\n   }\n \n+  private Boolean shouldStartArtifact(T artifact) {\n+    Properties deploymentProperties = null;\n+    try {\n+      deploymentProperties = DeploymentPropertiesUtils.resolveDeploymentProperties(artifact.getArtifactName(), Optional.empty());\n+    } catch (IOException e) {\n+      logger.error(\"Failed to load deployment property for artifact \"\n+          + artifact.getArtifactName(), e);\n+    }\n+    return deploymentProperties != null\n+        && Boolean.parseBoolean(deploymentProperties.getProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, \"true\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMyNzcxOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowODozNlrOIUgHOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowODozNlrOIUgHOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2ODU3MQ==", "bodyText": "format code properly in the javadoc", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558368571", "createdAt": "2021-01-15T15:08:36Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "diffHunk": "@@ -80,28 +83,27 @@\n    * Property used to change the deployment mode to deploy only the indicated applications with no redeployment.\n    * mule -M-Dmule.deploy.applications=app1:app2:app3\n    * This can also be done passing an additional command line option (deprecated) like:\n-   *  mule -app app1:app2:app3 will restrict deployment only to those specified apps.\n+   * mule -app app1:app2:app3 will restrict deployment only to those specified apps.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMzMTA2OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNTowOToyNVrOIUgJZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQyMTo0ODowNFrOIV380g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2OTEyNg==", "bodyText": "Use Integer.getInteger to read the system property.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558369126", "createdAt": "2021-01-15T15:09:25Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "diffHunk": "@@ -135,6 +137,16 @@ public DeploymentDirectoryWatcher(DomainBundleArchiveDeployer domainBundleDeploy\n     this.schedulerServiceSupplier = schedulerServiceSupplier;\n     this.applicationTimestampListener = new ArtifactTimestampListener(applications);\n     this.domainTimestampListener = new ArtifactTimestampListener(domains);\n+    this.artifactStoppedDeploymentListeners = new ArrayList<>();\n+  }\n+\n+  private static int getChangesCheckIntervalMs() {\n+    try {\n+      String value = System.getProperty(CHANGE_CHECK_INTERVAL_PROPERTY);\n+      return Integer.parseInt(value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTgwNzY5OA==", "bodyText": "Tried it but Integer.getInteger returns null and a NullPointerException is thrown \ud83e\udd14", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r559807698", "createdAt": "2021-01-18T21:48:04Z", "author": {"login": "sofiamorseletto"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "diffHunk": "@@ -135,6 +137,16 @@ public DeploymentDirectoryWatcher(DomainBundleArchiveDeployer domainBundleDeploy\n     this.schedulerServiceSupplier = schedulerServiceSupplier;\n     this.applicationTimestampListener = new ArtifactTimestampListener(applications);\n     this.domainTimestampListener = new ArtifactTimestampListener(domains);\n+    this.artifactStoppedDeploymentListeners = new ArrayList<>();\n+  }\n+\n+  private static int getChangesCheckIntervalMs() {\n+    try {\n+      String value = System.getProperty(CHANGE_CHECK_INTERVAL_PROPERTY);\n+      return Integer.parseInt(value);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2OTEyNg=="}, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMzMzk3OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNToxMDowNFrOIUgLKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNToxMDowNFrOIUgLKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2OTU3OQ==", "bodyText": "optional hell", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558369579", "createdAt": "2021-01-15T15:10:04Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "diffHunk": "@@ -217,12 +230,18 @@ private void stopArtifacts(List<? extends DeployableArtifact> artifacts) {\n     }\n   }\n \n-  private static int getChangesCheckIntervalMs() {\n-    try {\n-      String value = System.getProperty(CHANGE_CHECK_INTERVAL_PROPERTY);\n-      return Integer.parseInt(value);\n-    } catch (NumberFormatException e) {\n-      return DEFAULT_CHANGES_CHECK_INTERVAL_MS;\n+  private void notifyStopListeners() {\n+    for (Application application : applications) {\n+      Optional<Registry> optionalRegistry = ofNullable(application.getRegistry());\n+      Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+          optionalRegistry.isPresent() ? optionalRegistry.get().lookupByName(ARTIFACT_STOPPED_LISTENER) : Optional.empty();\n+      optionalArtifactStoppedListener.ifPresent(artifactStoppedListener -> artifactStoppedListener.mustPersist(false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 159}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMzNDIzOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNToxMDowN1rOIUgLWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNToxMDowN1rOIUgLWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2OTYyNQ==", "bodyText": "optional hell", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558369625", "createdAt": "2021-01-15T15:10:07Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DeploymentDirectoryWatcher.java", "diffHunk": "@@ -217,12 +230,18 @@ private void stopArtifacts(List<? extends DeployableArtifact> artifacts) {\n     }\n   }\n \n-  private static int getChangesCheckIntervalMs() {\n-    try {\n-      String value = System.getProperty(CHANGE_CHECK_INTERVAL_PROPERTY);\n-      return Integer.parseInt(value);\n-    } catch (NumberFormatException e) {\n-      return DEFAULT_CHANGES_CHECK_INTERVAL_MS;\n+  private void notifyStopListeners() {\n+    for (Application application : applications) {\n+      Optional<Registry> optionalRegistry = ofNullable(application.getRegistry());\n+      Optional<ArtifactStoppedListener> optionalArtifactStoppedListener =\n+          optionalRegistry.isPresent() ? optionalRegistry.get().lookupByName(ARTIFACT_STOPPED_LISTENER) : Optional.empty();\n+      optionalArtifactStoppedListener.ifPresent(artifactStoppedListener -> artifactStoppedListener.mustPersist(false));\n+    }\n+    for (Domain domain : domains) {\n+      Optional<Registry> optionalRegistry = ofNullable(domain.getRegistry());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 162}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTMzNjE5OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DomainArchiveDeployer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNToxMDozMlrOIUgMgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNToxMDozMlrOIUgMgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2OTkyMA==", "bodyText": "why move this?", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r558369920", "createdAt": "2021-01-15T15:10:32Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DomainArchiveDeployer.java", "diffHunk": "@@ -21,20 +24,15 @@\n import java.util.Optional;\n import java.util.Properties;\n \n-import org.apache.commons.lang3.NotImplementedException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n /**\n  * Archive deployer for domains.\n  * <p/>\n  * Knows how to deploy / undeploy a domain and a domain bundle (zip with domain + domains apps).\n  */\n public class DomainArchiveDeployer implements ArchiveDeployer<Domain> {\n \n-  private transient final Logger logger = LoggerFactory.getLogger(getClass());\n-\n   public static final String DOMAIN_BUNDLE_APPS_FOLDER = \"apps\";\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c85ce26b666312324c738a3917e2c88f39d790"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzExNTMxOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactDeployer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo0NzoyMlrOIYk48g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo0NzoyMlrOIYk48g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MTEzOA==", "bodyText": "add <p> for proer formatting of the javadoc", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562641138", "createdAt": "2021-01-22T13:47:22Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactDeployer.java", "diffHunk": "@@ -46,4 +46,12 @@ default void deploy(final T artifact) {\n    */\n   void undeploy(final T artifact);\n \n+  /**\n+   * Cancels the persistence of a stop of an artifact.\n+   *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzExOTE5OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo0ODowOFrOIYk7Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo0ODowOFrOIYk7Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MTY5MQ==", "bodyText": "make final", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562641691", "createdAt": "2021-01-22T13:48:08Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import static java.lang.String.valueOf;\n+import static java.util.Optional.of;\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedPersistenceListener;\n+\n+import java.io.IOException;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+class ArtifactStoppedDeploymentPersistenceListener implements ArtifactStoppedPersistenceListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzExOTk3OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo0ODoxN1rOIYk7jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo0ODoxN1rOIYk7jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MTgwNA==", "bodyText": "this should be static", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562641804", "createdAt": "2021-01-22T13:48:17Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import static java.lang.String.valueOf;\n+import static java.util.Optional.of;\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedPersistenceListener;\n+\n+import java.io.IOException;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+class ArtifactStoppedDeploymentPersistenceListener implements ArtifactStoppedPersistenceListener {\n+\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzEzMDc0OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1MDozOVrOIYlBtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNzozNToyNVrOIZyalg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MzM4Mg==", "bodyText": "who calls this method?", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562643382", "createdAt": "2021-01-22T13:50:39Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import static java.lang.String.valueOf;\n+import static java.util.Optional.of;\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedPersistenceListener;\n+\n+import java.io.IOException;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+class ArtifactStoppedDeploymentPersistenceListener implements ArtifactStoppedPersistenceListener {\n+\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());\n+  private AtomicBoolean shouldPersist;\n+  private String artifactName;\n+\n+  public ArtifactStoppedDeploymentPersistenceListener(String artifactName) {\n+    this.artifactName = artifactName;\n+    shouldPersist = new AtomicBoolean(true);\n+  }\n+\n+  @Override\n+  public void onStart() {\n+    Properties properties = new Properties();\n+    properties.setProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, valueOf(true));\n+    try {\n+      resolveDeploymentProperties(artifactName, of(properties));\n+    } catch (IOException e) {\n+      logger.error(\"ArtifactStoppedDeploymentPersistenceListener failed to process notification onStart for artifact \"\n+          + artifactName, e);\n+    }\n+  }\n+\n+  @Override\n+  public void onStop() {\n+    if (!shouldPersist.get()) {\n+      return;\n+    }\n+    Properties properties = new Properties();\n+    properties.setProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, valueOf(false));\n+    try {\n+      resolveDeploymentProperties(artifactName, of(properties));\n+    } catch (IOException e) {\n+      logger.error(\"ArtifactStoppedDeploymentPersistenceListener failed to process notification onStop for artifact \"\n+          + artifactName, e);\n+    }\n+  }\n+\n+  @Override\n+  public void doNotPersist() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjgyNDM0Mg==", "bodyText": "The artifact stopped state should only be persisted if it was stopped by the Agent. Since the Agent calls the artifact stop() method directly and I have no access to the Agent's code, the workaround is to prevent the persistence when the artifact is stopped for other reasons different than the Agent. Since the artifact is also stopped before undeployment, this method is called on the undeploy() method of DefaultArtifactDeployer.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562824342", "createdAt": "2021-01-22T18:24:37Z", "author": {"login": "sofiamorseletto"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import static java.lang.String.valueOf;\n+import static java.util.Optional.of;\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedPersistenceListener;\n+\n+import java.io.IOException;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+class ArtifactStoppedDeploymentPersistenceListener implements ArtifactStoppedPersistenceListener {\n+\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());\n+  private AtomicBoolean shouldPersist;\n+  private String artifactName;\n+\n+  public ArtifactStoppedDeploymentPersistenceListener(String artifactName) {\n+    this.artifactName = artifactName;\n+    shouldPersist = new AtomicBoolean(true);\n+  }\n+\n+  @Override\n+  public void onStart() {\n+    Properties properties = new Properties();\n+    properties.setProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, valueOf(true));\n+    try {\n+      resolveDeploymentProperties(artifactName, of(properties));\n+    } catch (IOException e) {\n+      logger.error(\"ArtifactStoppedDeploymentPersistenceListener failed to process notification onStart for artifact \"\n+          + artifactName, e);\n+    }\n+  }\n+\n+  @Override\n+  public void onStop() {\n+    if (!shouldPersist.get()) {\n+      return;\n+    }\n+    Properties properties = new Properties();\n+    properties.setProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, valueOf(false));\n+    try {\n+      resolveDeploymentProperties(artifactName, of(properties));\n+    } catch (IOException e) {\n+      logger.error(\"ArtifactStoppedDeploymentPersistenceListener failed to process notification onStop for artifact \"\n+          + artifactName, e);\n+    }\n+  }\n+\n+  @Override\n+  public void doNotPersist() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MzM4Mg=="}, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzkxMTMxOA==", "bodyText": "add this info as comment in the code", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r563911318", "createdAt": "2021-01-25T17:35:25Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import static java.lang.String.valueOf;\n+import static java.util.Optional.of;\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedPersistenceListener;\n+\n+import java.io.IOException;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+class ArtifactStoppedDeploymentPersistenceListener implements ArtifactStoppedPersistenceListener {\n+\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());\n+  private AtomicBoolean shouldPersist;\n+  private String artifactName;\n+\n+  public ArtifactStoppedDeploymentPersistenceListener(String artifactName) {\n+    this.artifactName = artifactName;\n+    shouldPersist = new AtomicBoolean(true);\n+  }\n+\n+  @Override\n+  public void onStart() {\n+    Properties properties = new Properties();\n+    properties.setProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, valueOf(true));\n+    try {\n+      resolveDeploymentProperties(artifactName, of(properties));\n+    } catch (IOException e) {\n+      logger.error(\"ArtifactStoppedDeploymentPersistenceListener failed to process notification onStart for artifact \"\n+          + artifactName, e);\n+    }\n+  }\n+\n+  @Override\n+  public void onStop() {\n+    if (!shouldPersist.get()) {\n+      return;\n+    }\n+    Properties properties = new Properties();\n+    properties.setProperty(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY, valueOf(false));\n+    try {\n+      resolveDeploymentProperties(artifactName, of(properties));\n+    } catch (IOException e) {\n+      logger.error(\"ArtifactStoppedDeploymentPersistenceListener failed to process notification onStop for artifact \"\n+          + artifactName, e);\n+    }\n+  }\n+\n+  @Override\n+  public void doNotPersist() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MzM4Mg=="}, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzEzMjQ3OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1MTowNFrOIYlCsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxNzozNToxN1rOIZyaCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MzYzMw==", "bodyText": "where can this be used concurrently?", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562643633", "createdAt": "2021-01-22T13:51:04Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import static java.lang.String.valueOf;\n+import static java.util.Optional.of;\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedPersistenceListener;\n+\n+import java.io.IOException;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+class ArtifactStoppedDeploymentPersistenceListener implements ArtifactStoppedPersistenceListener {\n+\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());\n+  private AtomicBoolean shouldPersist;\n+  private String artifactName;\n+\n+  public ArtifactStoppedDeploymentPersistenceListener(String artifactName) {\n+    this.artifactName = artifactName;\n+    shouldPersist = new AtomicBoolean(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzcwMDk5Nw==", "bodyText": "We thought that a possible race condition could happen if a stop request and a shutdown request were concurrently sent to mule, so we decided to make this variable an Atomic Boolean.", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r563700997", "createdAt": "2021-01-25T12:54:15Z", "author": {"login": "sofiamorseletto"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import static java.lang.String.valueOf;\n+import static java.util.Optional.of;\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedPersistenceListener;\n+\n+import java.io.IOException;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+class ArtifactStoppedDeploymentPersistenceListener implements ArtifactStoppedPersistenceListener {\n+\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());\n+  private AtomicBoolean shouldPersist;\n+  private String artifactName;\n+\n+  public ArtifactStoppedDeploymentPersistenceListener(String artifactName) {\n+    this.artifactName = artifactName;\n+    shouldPersist = new AtomicBoolean(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MzYzMw=="}, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzkxMTE3Nw==", "bodyText": "add this info as a comment in the code", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r563911177", "createdAt": "2021-01-25T17:35:17Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/ArtifactStoppedDeploymentPersistenceListener.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.deployment.internal;\n+\n+import static java.lang.String.valueOf;\n+import static java.util.Optional.of;\n+import static org.mule.runtime.module.deployment.impl.internal.util.DeploymentPropertiesUtils.resolveDeploymentProperties;\n+import static org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer.START_ARTIFACT_ON_DEPLOYMENT_PROPERTY;\n+\n+import org.mule.runtime.core.internal.context.ArtifactStoppedPersistenceListener;\n+\n+import java.io.IOException;\n+import java.util.Properties;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+class ArtifactStoppedDeploymentPersistenceListener implements ArtifactStoppedPersistenceListener {\n+\n+  private transient final Logger logger = LoggerFactory.getLogger(getClass());\n+  private AtomicBoolean shouldPersist;\n+  private String artifactName;\n+\n+  public ArtifactStoppedDeploymentPersistenceListener(String artifactName) {\n+    this.artifactName = artifactName;\n+    shouldPersist = new AtomicBoolean(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0MzYzMw=="}, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzEzNTkzOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArtifactDeployer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1MTo1MVrOIYlEuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1MTo1MVrOIYlEuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NDE1Mg==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562644152", "createdAt": "2021-01-22T13:51:51Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/main/java/org/mule/runtime/module/deployment/internal/DefaultArtifactDeployer.java", "diffHunk": "@@ -105,4 +124,25 @@ private void tryToStopArtifact(T artifact) {\n     }\n   }\n \n+  private Boolean shouldStartArtifact(T artifact) {\n+    Properties deploymentProperties = null;\n+    try {\n+      deploymentProperties = resolveDeploymentProperties(artifact.getArtifactName(), Optional.empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzEzOTAxOnYy", "diffSide": "LEFT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1MjozMVrOIYlGfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1MjozMVrOIYlGfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NDYwNA==", "bodyText": "keep this separation", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562644604", "createdAt": "2021-01-22T13:52:31Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -96,7 +104,6 @@\n \n   @Rule\n   public SystemProperty systemProperty = new SystemProperty(OVERWRITTEN_PROPERTY, OVERWRITTEN_PROPERTY_SYSTEM_VALUE);\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE0MDAxOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1Mjo0N1rOIYlHGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1Mjo0N1rOIYlHGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NDc2MQ==", "bodyText": "add @Issue annotation", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562644761", "createdAt": "2021-01-22T13:52:47Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE0MDgxOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1Mjo1OVrOIYlHiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1Mjo1OVrOIYlHiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NDg3Mw==", "bodyText": "add @Issue annotation", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562644873", "createdAt": "2021-01-22T13:52:59Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test\n+  public void whenAppIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyAppFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+  }\n+\n+  @Test\n+  public void whenAppIsStoppedByUndeploymentStateIsNotPersistedAsDeploymentProperty() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE0MDk5OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1MzowMlrOIYlHqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1MzowMlrOIYlHqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NDkwNQ==", "bodyText": "add @Issue annotation", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562644905", "createdAt": "2021-01-22T13:53:02Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -696,6 +735,79 @@ public void undeploysStoppedApp() throws Exception {\n     deploymentService.undeploy(app);\n   }\n \n+  @Test\n+  public void undeploysStoppedAppAndDoesNotStartItOnDeploy() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE0MTE5OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1MzowNlrOIYlHyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1MzowNlrOIYlHyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NDkzOQ==", "bodyText": "add @Issue annotation", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562644939", "createdAt": "2021-01-22T13:53:06Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -696,6 +735,79 @@ public void undeploysStoppedApp() throws Exception {\n     deploymentService.undeploy(app);\n   }\n \n+  @Test\n+  public void undeploysStoppedAppAndDoesNotStartItOnDeploy() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+    assertStatus(app, STOPPED);\n+\n+    serviceManager.stop();\n+    extensionModelLoaderManager.stop();\n+    deploymentService.stop();\n+\n+    reset(applicationDeploymentListener);\n+\n+    MuleArtifactResourcesRegistry muleArtifactResourcesRegistry =\n+        new MuleArtifactResourcesRegistry.Builder().moduleRepository(moduleRepository).build();\n+\n+    serviceManager = muleArtifactResourcesRegistry.getServiceManager();\n+    serviceManager.start();\n+\n+    extensionModelLoaderManager = muleArtifactResourcesRegistry.getExtensionModelLoaderManager();\n+    extensionModelLoaderManager.start();\n+\n+    deploymentService = new TestMuleDeploymentService(muleArtifactResourcesRegistry.getDomainFactory(),\n+                                                      muleArtifactResourcesRegistry.getApplicationFactory(),\n+                                                      () -> findSchedulerService(serviceManager));\n+    configureDeploymentService();\n+    deploymentService.start();\n+\n+    assertDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app_2 = findApp(emptyAppFileBuilder.getId(), 1);\n+    assertStatus(app_2, CREATED);\n+  }\n+\n+  @Test\n+  public void undeploysNotStoppedAppAndStartsItOnDeploy() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 127}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE0MzUxOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1Mzo0MlrOIYlJMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1Mzo0MlrOIYlJMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NTI5Ng==", "bodyText": "static import", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562645296", "createdAt": "2021-01-22T13:53:42Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test\n+  public void whenAppIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyAppFileBuilder.getId(), Optional.empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE0NDYxOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NDowM1rOIYlJ6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NDowM1rOIYlJ6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NTQ4Mw==", "bodyText": "use hamcrest matchers", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562645483", "createdAt": "2021-01-22T13:54:03Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test\n+  public void whenAppIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE0NDk1OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NDowN1rOIYlKIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NDowN1rOIYlKIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NTUzNw==", "bodyText": "use hamcrest matchers", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562645537", "createdAt": "2021-01-22T13:54:07Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test\n+  public void whenAppIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyAppFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE0NTI5OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NDoxMVrOIYlKWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NDoxMVrOIYlKWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NTU5Mw==", "bodyText": "use hamcrest matchers", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562645593", "createdAt": "2021-01-22T13:54:11Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test\n+  public void whenAppIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyAppFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE0NjM4OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NDozMFrOIYlLDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NDozMFrOIYlLDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NTc3Mg==", "bodyText": "use hamcrest matchers", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562645772", "createdAt": "2021-01-22T13:54:30Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test\n+  public void whenAppIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyAppFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+  }\n+\n+  @Test\n+  public void whenAppIsStoppedByUndeploymentStateIsNotPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE0NjU1OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NDozMlrOIYlLLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NDozMlrOIYlLLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NTgwNg==", "bodyText": "use hamcrest matchers", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562645806", "createdAt": "2021-01-22T13:54:32Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/ApplicationDeploymentTestCase.java", "diffHunk": "@@ -293,6 +300,38 @@ public void deploymentPropertiesUsedInConfigurationProperties() throws Exception\n                                           .equals(OVERWRITTEN_PROPERTY_DEPLOYMENT_VALUE));\n   }\n \n+  @Test\n+  public void whenAppIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+    app.stop();\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyAppFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+  }\n+\n+  @Test\n+  public void whenAppIsStoppedByUndeploymentStateIsNotPersistedAsDeploymentProperty() throws Exception {\n+    addPackedAppFromBuilder(emptyAppFileBuilder);\n+\n+    startDeployment();\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, emptyAppFileBuilder.getId());\n+    final Application app = findApp(emptyAppFileBuilder.getId(), 1);\n+\n+    assertNotNull(app.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+    deploymentService.undeploy(app);\n+\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyAppFileBuilder.getId(), Optional.empty());\n+    assertNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE0ODMyOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NTowMVrOIYlMQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NTowMVrOIYlMQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjA4MQ==", "bodyText": "allure", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646081", "createdAt": "2021-01-22T13:55:01Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -623,6 +630,34 @@ public void redeploysDomainZipRefreshesApps() throws Exception {\n     assertApplicationDeploymentSuccess(applicationDeploymentListener, dummyDomainApp1FileBuilder.getId());\n   }\n \n+  @Test\n+  public void redeploysDomainZipRefreshesAppsButIfTheyWereStoppedTheyDoNotStart() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE0ODgxOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NTowN1rOIYlMjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NTowN1rOIYlMjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjE1OQ==", "bodyText": "allure", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646159", "createdAt": "2021-01-22T13:55:07Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1096,6 +1131,39 @@ public void undeploysStoppedDomain() throws Exception {\n     deploymentService.undeploy(domain);\n   }\n \n+  @Test\n+  public void whenDomainIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE0OTI2OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NToxMlrOIYlM0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NToxMlrOIYlM0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjIyNw==", "bodyText": "hamcerst", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646227", "createdAt": "2021-01-22T13:55:12Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1096,6 +1131,39 @@ public void undeploysStoppedDomain() throws Exception {\n     deploymentService.undeploy(domain);\n   }\n \n+  @Test\n+  public void whenDomainIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedDomainFromBuilder(emptyDomainFileBuilder);\n+\n+    startDeployment();\n+\n+    assertDeploymentSuccess(domainDeploymentListener, emptyDomainFileBuilder.getId());\n+    final Domain domain = findADomain(emptyDomainFileBuilder.getId());\n+    domain.stop();\n+\n+    assertNotNull(domain.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE0OTk5OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NToyMVrOIYlNPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NToyMVrOIYlNPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjMzNQ==", "bodyText": "hamcrest", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646335", "createdAt": "2021-01-22T13:55:21Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1096,6 +1131,39 @@ public void undeploysStoppedDomain() throws Exception {\n     deploymentService.undeploy(domain);\n   }\n \n+  @Test\n+  public void whenDomainIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedDomainFromBuilder(emptyDomainFileBuilder);\n+\n+    startDeployment();\n+\n+    assertDeploymentSuccess(domainDeploymentListener, emptyDomainFileBuilder.getId());\n+    final Domain domain = findADomain(emptyDomainFileBuilder.getId());\n+    domain.stop();\n+\n+    assertNotNull(domain.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyDomainFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE1MDE4OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NToyNFrOIYlNWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NToyNFrOIYlNWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjM2Mg==", "bodyText": "allure", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646362", "createdAt": "2021-01-22T13:55:24Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1096,6 +1131,39 @@ public void undeploysStoppedDomain() throws Exception {\n     deploymentService.undeploy(domain);\n   }\n \n+  @Test\n+  public void whenDomainIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedDomainFromBuilder(emptyDomainFileBuilder);\n+\n+    startDeployment();\n+\n+    assertDeploymentSuccess(domainDeploymentListener, emptyDomainFileBuilder.getId());\n+    final Domain domain = findADomain(emptyDomainFileBuilder.getId());\n+    domain.stop();\n+\n+    assertNotNull(domain.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyDomainFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+  }\n+\n+  @Test\n+  public void whenDomainIsStoppedByUndeploymentStateIsNotfedAsDeploymentProperty() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE1MDQ5OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NToyOVrOIYlNkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NToyOVrOIYlNkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjQxNg==", "bodyText": "hamcrest", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646416", "createdAt": "2021-01-22T13:55:29Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1096,6 +1131,39 @@ public void undeploysStoppedDomain() throws Exception {\n     deploymentService.undeploy(domain);\n   }\n \n+  @Test\n+  public void whenDomainIsStoppedStateIsPersistedAsDeploymentProperty() throws Exception {\n+    addPackedDomainFromBuilder(emptyDomainFileBuilder);\n+\n+    startDeployment();\n+\n+    assertDeploymentSuccess(domainDeploymentListener, emptyDomainFileBuilder.getId());\n+    final Domain domain = findADomain(emptyDomainFileBuilder.getId());\n+    domain.stop();\n+\n+    assertNotNull(domain.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+\n+    Properties deploymentProperties = resolveDeploymentProperties(emptyDomainFileBuilder.getId(), Optional.empty());\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+  }\n+\n+  @Test\n+  public void whenDomainIsStoppedByUndeploymentStateIsNotfedAsDeploymentProperty() throws Exception {\n+    addPackedDomainFromBuilder(emptyDomainFileBuilder);\n+\n+    startDeployment();\n+\n+    assertDeploymentSuccess(domainDeploymentListener, emptyDomainFileBuilder.getId());\n+    final Domain domain = findADomain(emptyDomainFileBuilder.getId());\n+\n+    assertNotNull(domain.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE1MTM5OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NTo0MFrOIYlOEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NTo0MFrOIYlOEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjU0Nw==", "bodyText": "allure", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646547", "createdAt": "2021-01-22T13:55:40Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1303,6 +1371,33 @@ public void deployAndRedeployDomainWithDeploymentProperties() throws Exception {\n                                             .get() instanceof TestComponentOnRedeploy);\n   }\n \n+  @Test\n+  public void redeployDomainWithStoppedAppsShouldPersistStoppedStateAndDoNotStartApps() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE1MTczOnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NTo0NlrOIYlOSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NTo0NlrOIYlOSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjYwMQ==", "bodyText": "hamcrest", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646601", "createdAt": "2021-01-22T13:55:46Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1303,6 +1371,33 @@ public void deployAndRedeployDomainWithDeploymentProperties() throws Exception {\n                                             .get() instanceof TestComponentOnRedeploy);\n   }\n \n+  @Test\n+  public void redeployDomainWithStoppedAppsShouldPersistStoppedStateAndDoNotStartApps() throws Exception {\n+    addPackedDomainFromBuilder(dummyDomainFileBuilder);\n+    File dummyDomainFile = new File(domainsDir, dummyDomainFileBuilder.getZipPath());\n+    long firstFileTimestamp = dummyDomainFile.lastModified();\n+\n+    addPackedAppFromBuilder(dummyDomainApp1FileBuilder);\n+\n+    startDeployment();\n+\n+    assertDeploymentSuccess(domainDeploymentListener, dummyDomainFileBuilder.getId());\n+    final Domain domain = findADomain(dummyDomainFileBuilder.getId());\n+    assertNotNull(domain.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MzE1MjU3OnYy", "diffSide": "RIGHT", "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NTo1NFrOIYlOsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxMzo1NTo1NFrOIYlOsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY0NjcwNw==", "bodyText": "hamcrest", "url": "https://github.com/mulesoft/mule/pull/9905#discussion_r562646707", "createdAt": "2021-01-22T13:55:54Z", "author": {"login": "elrodro83"}, "path": "modules/deployment/src/test/java/org/mule/runtime/module/deployment/internal/DomainDeploymentTestCase.java", "diffHunk": "@@ -1303,6 +1371,33 @@ public void deployAndRedeployDomainWithDeploymentProperties() throws Exception {\n                                             .get() instanceof TestComponentOnRedeploy);\n   }\n \n+  @Test\n+  public void redeployDomainWithStoppedAppsShouldPersistStoppedStateAndDoNotStartApps() throws Exception {\n+    addPackedDomainFromBuilder(dummyDomainFileBuilder);\n+    File dummyDomainFile = new File(domainsDir, dummyDomainFileBuilder.getZipPath());\n+    long firstFileTimestamp = dummyDomainFile.lastModified();\n+\n+    addPackedAppFromBuilder(dummyDomainApp1FileBuilder);\n+\n+    startDeployment();\n+\n+    assertDeploymentSuccess(domainDeploymentListener, dummyDomainFileBuilder.getId());\n+    final Domain domain = findADomain(dummyDomainFileBuilder.getId());\n+    assertNotNull(domain.getRegistry().lookupByName(ARTIFACT_STOPPED_LISTENER));\n+\n+    assertApplicationDeploymentSuccess(applicationDeploymentListener, dummyDomainApp1FileBuilder.getId());\n+\n+    final Application app = findApp(dummyDomainApp1FileBuilder.getId(), 1);\n+    app.stop();\n+\n+    redeployId(dummyDomainFileBuilder.getId(), null);\n+\n+    Properties deploymentProperties = resolveDeploymentProperties(dummyDomainApp1FileBuilder.getId(), Optional.empty());\n+    assertStatus(dummyDomainApp1FileBuilder.getId(), CREATED);\n+    assertNotNull(deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));\n+    assertEquals(\"false\", deploymentProperties.get(START_ARTIFACT_ON_DEPLOYMENT_PROPERTY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5ec79eb48a0b93203963d9eea03bb8b0ac19b"}, "originalPosition": 137}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4548, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}