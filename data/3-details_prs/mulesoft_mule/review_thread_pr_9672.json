{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MzUwMzg4", "number": 9672, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxNTo1N1rOE1V5_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoyMDozNlrOE1WAcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzY4ODkyOnYy", "diffSide": "RIGHT", "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/application/DefaultApplicationFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxNTo1N1rOHtkJUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODo1NDo1MFrOHtlflg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MDE3Nw==", "bodyText": "should this be deprecated? are there any remaining usages of this method?", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517540177", "createdAt": "2020-11-04T18:15:57Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/application/DefaultApplicationFactory.java", "diffHunk": "@@ -125,6 +126,12 @@ public ApplicationDescriptor createArtifactDescriptor(File artifactLocation, Opt\n   }\n \n   public Application createArtifact(ApplicationDescriptor descriptor) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2MjI2Mg==", "bodyText": "the unique consumer is tooling services and should use the new one. So this method can be deprecated", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517562262", "createdAt": "2020-11-04T18:54:50Z", "author": {"login": "mlischetti"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/application/DefaultApplicationFactory.java", "diffHunk": "@@ -125,6 +126,12 @@ public ApplicationDescriptor createArtifactDescriptor(File artifactLocation, Opt\n   }\n \n   public Application createArtifact(ApplicationDescriptor descriptor) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MDE3Nw=="}, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzY5MjAzOnYy", "diffSide": "RIGHT", "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/artifact/ArtifactContextBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxNjo0OFrOHtkLMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxNjo0OFrOHtkLMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MDY1OQ==", "bodyText": "missing description", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517540659", "createdAt": "2020-11-04T18:16:48Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/artifact/ArtifactContextBuilder.java", "diffHunk": "@@ -374,6 +376,18 @@ public ArtifactContextBuilder setRuntimeLockFactory(LockFactory runtimeLockFacto\n     return this;\n   }\n \n+  /**\n+   * Allows the usage of {@link ComponentBuildingDefinitionRegistryFactory} to create a {@link org.mule.runtime.dsl.api.component.ComponentBuildingDefinitionRegistry}.\n+   * \n+   * @param componentBuildingDefinitionRegistryFactory the {@link ComponentBuildingDefinitionRegistryFactory} factory\n+   *                                                   used to create a {@link org.mule.runtime.dsl.api.component.ComponentBuildingDefinitionRegistry}\n+   * @return", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzY5NjkxOnYy", "diffSide": "RIGHT", "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/domain/DefaultDomainFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxODoyMVrOHtkOUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODo1Mjo0M1rOHtlaRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MTQ1Nw==", "bodyText": "what's the purpose of this split? where is this new method called?", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517541457", "createdAt": "2020-11-04T18:18:21Z", "author": {"login": "elrodro83"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/domain/DefaultDomainFactory.java", "diffHunk": "@@ -134,6 +134,12 @@ public void start(DomainWrapper domainWrapper) {\n \n   @Override\n   protected Domain doCreateArtifact(File domainLocation, Optional<Properties> deploymentProperties) throws IOException {\n+    return createArtifact(domainLocation, deploymentProperties, null);\n+  }\n+\n+  public Domain createArtifact(File domainLocation, Optional<Properties> deploymentProperties,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2MDkwMg==", "bodyText": "this should be used by tooling services", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517560902", "createdAt": "2020-11-04T18:52:43Z", "author": {"login": "mlischetti"}, "path": "modules/deployment-model-impl/src/main/java/org/mule/runtime/module/deployment/impl/internal/domain/DefaultDomainFactory.java", "diffHunk": "@@ -134,6 +134,12 @@ public void start(DomainWrapper domainWrapper) {\n \n   @Override\n   protected Domain doCreateArtifact(File domainLocation, Optional<Properties> deploymentProperties) throws IOException {\n+    return createArtifact(domainLocation, deploymentProperties, null);\n+  }\n+\n+  public Domain createArtifact(File domainLocation, Optional<Properties> deploymentProperties,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MTQ1Nw=="}, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzY5OTY5OnYy", "diffSide": "RIGHT", "path": "modules/extensions-xml-support/src/test/java/org/mule/test/functional/ModuleCallingOperationsWithinModuleTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxOTowN1rOHtkQBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxOTowN1rOHtkQBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MTg5NA==", "bodyText": "add a comment explaining why this is needed", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517541894", "createdAt": "2020-11-04T18:19:07Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-xml-support/src/test/java/org/mule/test/functional/ModuleCallingOperationsWithinModuleTestCase.java", "diffHunk": "@@ -195,4 +195,9 @@ private CoreEvent runFlowWithContentAndDefaultVariables(String flowName) throws\n         .withVariable(\"secondPart\", SECOND_PART)\n         .run();\n   }\n+\n+  @Override\n+  public boolean mustRegenerateExtensionModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzcwMDI2OnYy", "diffSide": "RIGHT", "path": "modules/extensions-xml-support/src/test/java/org/mule/test/functional/ModuleGlobalElementTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxOToxNlrOHtkQVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxOToxNlrOHtkQVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MTk3NA==", "bodyText": "add a comment explaining why this is needed", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517541974", "createdAt": "2020-11-04T18:19:16Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-xml-support/src/test/java/org/mule/test/functional/ModuleGlobalElementTestCase.java", "diffHunk": "@@ -87,5 +87,9 @@ private void assertGetClient(String flow) throws Exception {\n     assertThat(client.getPassword(), is(\"notDoe\"));\n   }\n \n+  @Override\n+  public boolean mustRegenerateExtensionModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzcwMDI5OnYy", "diffSide": "RIGHT", "path": "modules/extensions-xml-support/src/test/java/org/mule/test/functional/ModuleSimpleTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxOToxNlrOHtkQXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxOToxNlrOHtkQXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MTk4MA==", "bodyText": "add a comment explaining why this is needed", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517541980", "createdAt": "2020-11-04T18:19:16Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-xml-support/src/test/java/org/mule/test/functional/ModuleSimpleTestCase.java", "diffHunk": "@@ -202,4 +202,9 @@ public void testSetPayloadHardcodedFlowThruSubflowWithNestedElements() throws Ex\n     CoreEvent event = flowRunner(\"testSetPayloadHardcodedFlowThruSubflowWithNestedElements\").run();\n     assertThat(event.getMessage().getPayload().getValue(), is(\"hardcoded value\"));\n   }\n+\n+  @Override\n+  public boolean mustRegenerateExtensionModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzcwMDU3OnYy", "diffSide": "RIGHT", "path": "modules/extensions-xml-support/src/test/java/org/mule/test/functional/ModuleTestConnectionTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxOToyMFrOHtkQiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxOToyMFrOHtkQiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MjAyNA==", "bodyText": "add a comment explaining why this is needed", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517542024", "createdAt": "2020-11-04T18:19:20Z", "author": {"login": "elrodro83"}, "path": "modules/extensions-xml-support/src/test/java/org/mule/test/functional/ModuleTestConnectionTestCase.java", "diffHunk": "@@ -71,4 +71,9 @@ private void assertConnectionOn(String beanName) throws MuleException {\n     assertThat(connectionValidationResult.isValid(), is(true));\n     connectionProvider.disconnect(connect);\n   }\n+\n+  @Override\n+  public boolean mustRegenerateExtensionModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzcwNTQ2OnYy", "diffSide": "RIGHT", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/MuleArtifactContext.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoyMDozNlrOHtkTgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoyMDozNlrOHtkTgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0Mjc4NQ==", "bodyText": "inline extensions", "url": "https://github.com/mulesoft/mule/pull/9672#discussion_r517542785", "createdAt": "2020-11-04T18:20:36Z", "author": {"login": "elrodro83"}, "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/MuleArtifactContext.java", "diffHunk": "@@ -227,21 +207,12 @@ public MuleArtifactContext(MuleContext muleContext, ConfigResource[] artifactCon\n     this.resourceLocator = new DefaultResourceLocator();\n     originalRegistry = ((MuleRegistryHelper) getMuleRegistry()).getDelegate();\n \n-    getRuntimeComponentBuildingDefinitionProvider().getComponentBuildingDefinitions()\n-        .forEach(componentBuildingDefinitionRegistry::register);\n-\n     extensionManager = muleContext.getExtensionManager();\n     final Set<ExtensionModel> extensions = getExtensions();\n-    getExtensionModelsComponentBuildingDefinitions(extensions, DslResolvingContext.getDefault(extensions))\n-        .forEach(componentBuildingDefinitionRegistry::register);\n-\n-    for (ClassLoader pluginArtifactClassLoader : pluginsClassLoaders) {\n-      getArtifactComponentBuildingDefinitions(pluginArtifactClassLoader)\n-          .forEach(componentBuildingDefinitionRegistry::register);\n-    }\n \n     this.beanDefinitionFactory =\n-        new BeanDefinitionFactory(muleContext.getConfiguration().getId(), componentBuildingDefinitionRegistry);\n+        new BeanDefinitionFactory(muleContext.getConfiguration().getId(),\n+                                  componentBuildingDefinitionRegistryFactory.create(extensions));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0d9d05845937bead08498a37bb876352d98470"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4669, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}