{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0Mjk1NjU1", "number": 14986, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzozMzo1N1rOEWTEPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzozNTowN1rOEWTFzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODE2NTEwOnYy", "diffSide": "RIGHT", "path": "presto-spark-common/src/main/java/com/facebook/presto/spark/PrestoSparkQueryInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzozMzo1N1rOG9iM0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzozMzo1N1rOG9iM0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3NjY1OQ==", "bodyText": "final", "url": "https://github.com/prestodb/presto/pull/14986#discussion_r467176659", "createdAt": "2020-08-07T17:33:57Z", "author": {"login": "arhimondr"}, "path": "presto-spark-common/src/main/java/com/facebook/presto/spark/PrestoSparkQueryInfo.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.spark;\n+\n+import com.facebook.presto.execution.ExecutionFailureInfo;\n+import com.facebook.presto.execution.QueryInfo;\n+import com.facebook.presto.execution.QueryStats;\n+import com.facebook.presto.execution.StageInfo;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import javax.annotation.concurrent.Immutable;\n+\n+import java.util.Optional;\n+\n+import static com.facebook.presto.server.protocol.QueryResourceUtil.globalUniqueNodes;\n+import static java.util.Objects.requireNonNull;\n+\n+@Immutable\n+public class PrestoSparkQueryInfo\n+{\n+    // the following fields are based on com.facebook.presto.jdbc.QueryStats,\n+    // with the following fields removed:\n+    //  - queued\n+    //  - queuedSplits\n+    //  - runningSplits\n+    //  - completedSplits: duplciate of totalSplits in Presto-on-Spark\n+    //  - queuedTimeMillis\n+    //  - rootStage: it can be too verbose\n+    private final String queryId;\n+    private final String state;\n+    private final int nodes;\n+    private final int totalSplits;\n+    private final long cpuTimeMillis;\n+    private final long wallTimeMillis;\n+    private final long elapsedTimeMillis;\n+    private final long processedRows;\n+    private final long processedBytes;\n+    private final long peakMemoryBytes;\n+    private final long peakTotalMemoryBytes;\n+    private final long peakTaskTotalMemoryBytes;\n+\n+    Optional<ExecutionFailureInfo> failureInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15b494865c7b04064c611fb206fc207a54414e18"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODE2OTA4OnYy", "diffSide": "RIGHT", "path": "presto-spark-common/src/main/java/com/facebook/presto/spark/PrestoSparkQueryInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzozNTowN1rOG9iPRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxOTozOToxMlrOG9ltGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3NzI4NQ==", "bodyText": "optional: Maybe try to move the ExecutionFailureInfo  to presto-comon, not sure if it is fine to include presto-main in verifier.", "url": "https://github.com/prestodb/presto/pull/14986#discussion_r467177285", "createdAt": "2020-08-07T17:35:07Z", "author": {"login": "arhimondr"}, "path": "presto-spark-common/src/main/java/com/facebook/presto/spark/PrestoSparkQueryInfo.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.spark;\n+\n+import com.facebook.presto.execution.ExecutionFailureInfo;\n+import com.facebook.presto.execution.QueryInfo;\n+import com.facebook.presto.execution.QueryStats;\n+import com.facebook.presto.execution.StageInfo;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import javax.annotation.concurrent.Immutable;\n+\n+import java.util.Optional;\n+\n+import static com.facebook.presto.server.protocol.QueryResourceUtil.globalUniqueNodes;\n+import static java.util.Objects.requireNonNull;\n+\n+@Immutable\n+public class PrestoSparkQueryInfo\n+{\n+    // the following fields are based on com.facebook.presto.jdbc.QueryStats,\n+    // with the following fields removed:\n+    //  - queued\n+    //  - queuedSplits\n+    //  - runningSplits\n+    //  - completedSplits: duplciate of totalSplits in Presto-on-Spark\n+    //  - queuedTimeMillis\n+    //  - rootStage: it can be too verbose\n+    private final String queryId;\n+    private final String state;\n+    private final int nodes;\n+    private final int totalSplits;\n+    private final long cpuTimeMillis;\n+    private final long wallTimeMillis;\n+    private final long elapsedTimeMillis;\n+    private final long processedRows;\n+    private final long processedBytes;\n+    private final long peakMemoryBytes;\n+    private final long peakTotalMemoryBytes;\n+    private final long peakTaskTotalMemoryBytes;\n+\n+    Optional<ExecutionFailureInfo> failureInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15b494865c7b04064c611fb206fc207a54414e18"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIzNDA3NQ==", "bodyText": "@arhimondr : Verifier already depends on presto-main:\n\n  \n    \n      presto/presto-verifier/pom.xml\n    \n    \n        Lines 53 to 56\n      in\n      740e18c\n    \n    \n    \n    \n\n        \n          \n           <dependency> \n        \n\n        \n          \n               <groupId>com.facebook.presto</groupId> \n        \n\n        \n          \n               <artifactId>presto-main</artifactId> \n        \n\n        \n          \n           </dependency> \n        \n    \n  \n\n\nAlthough I think it's generally a good idea to refactor common piece in different QueryInfo/QueryStats/... into presto-common (we already have too many different type of QueryInfo/Stats in many places. But this seems to beyond the scope of this PR \ud83d\ude03", "url": "https://github.com/prestodb/presto/pull/14986#discussion_r467234075", "createdAt": "2020-08-07T19:39:12Z", "author": {"login": "wenleix"}, "path": "presto-spark-common/src/main/java/com/facebook/presto/spark/PrestoSparkQueryInfo.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.spark;\n+\n+import com.facebook.presto.execution.ExecutionFailureInfo;\n+import com.facebook.presto.execution.QueryInfo;\n+import com.facebook.presto.execution.QueryStats;\n+import com.facebook.presto.execution.StageInfo;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import javax.annotation.concurrent.Immutable;\n+\n+import java.util.Optional;\n+\n+import static com.facebook.presto.server.protocol.QueryResourceUtil.globalUniqueNodes;\n+import static java.util.Objects.requireNonNull;\n+\n+@Immutable\n+public class PrestoSparkQueryInfo\n+{\n+    // the following fields are based on com.facebook.presto.jdbc.QueryStats,\n+    // with the following fields removed:\n+    //  - queued\n+    //  - queuedSplits\n+    //  - runningSplits\n+    //  - completedSplits: duplciate of totalSplits in Presto-on-Spark\n+    //  - queuedTimeMillis\n+    //  - rootStage: it can be too verbose\n+    private final String queryId;\n+    private final String state;\n+    private final int nodes;\n+    private final int totalSplits;\n+    private final long cpuTimeMillis;\n+    private final long wallTimeMillis;\n+    private final long elapsedTimeMillis;\n+    private final long processedRows;\n+    private final long processedBytes;\n+    private final long peakMemoryBytes;\n+    private final long peakTotalMemoryBytes;\n+    private final long peakTaskTotalMemoryBytes;\n+\n+    Optional<ExecutionFailureInfo> failureInfo;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3NzI4NQ=="}, "originalCommit": {"oid": "15b494865c7b04064c611fb206fc207a54414e18"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2272, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}