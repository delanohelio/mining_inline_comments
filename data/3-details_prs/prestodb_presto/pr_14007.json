{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NjMxNTM0", "number": 14007, "title": "Support kerberos authentication for Kudu connector", "bodyText": "Add the following configuration to etc/catalog/kudu.properties to enable kerberos authentication:\nkudu.kerberos-auth.enabled=true\nkudu.kerberos-auth.debug.enabled=true\nkudu.kerberos-auth.principal=xxx\nkudu.kerberos-auth.keytab=xxx.keytab\n== RELEASE NOTES ==\nKudu Changes\nsupport kerberos authentication", "createdAt": "2020-01-24T00:30:40Z", "url": "https://github.com/prestodb/presto/pull/14007", "merged": true, "mergeCommit": {"oid": "1ec81384fc9b1d06c71f325ef0d2b34f8993c762"}, "closed": true, "closedAt": "2020-01-29T17:35:22Z", "author": {"login": "liyubin117"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9tT_EAFqTM0ODMxMjQ3Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-52-OAFqTM0OTc3NDU0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzEyNDcy", "url": "https://github.com/prestodb/presto/pull/14007#pullrequestreview-348312472", "createdAt": "2020-01-25T06:11:52Z", "commit": {"oid": "0b62f7d7ca060c927f22d68e17627125fa21d5ce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NDIwMjg5", "url": "https://github.com/prestodb/presto/pull/14007#pullrequestreview-349420289", "createdAt": "2020-01-28T14:34:08Z", "commit": {"oid": "32fc2f61de8306f02bef9d63071c3b8df813901f"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDozNDowOFrOFinL9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDozNDo0N1rOFinNpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzNzk0Mg==", "bodyText": "nit: This will result in double logging", "url": "https://github.com/prestodb/presto/pull/14007#discussion_r371837942", "createdAt": "2020-01-28T14:34:08Z", "author": {"login": "arhimondr"}, "path": "presto-kudu/src/main/java/com/facebook/presto/kudu/KuduUtil.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.kudu;\n+\n+import com.facebook.airlift.log.Logger;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.security.UserGroupInformation;\n+import org.apache.kudu.client.KuduClient;\n+\n+import java.io.IOException;\n+import java.security.PrivilegedExceptionAction;\n+\n+public class KuduUtil\n+{\n+    private static final Logger log = Logger.get(KuduUtil.class);\n+\n+    private KuduUtil()\n+    {\n+        // not allowed to be called to initialize instance\n+    }\n+\n+    /**\n+     * Initialize kerberos authentication\n+     */\n+    static void initKerberosENV(String principal, String keytab, boolean debugEnabled)\n+    {\n+        try {\n+            Configuration conf = new Configuration();\n+            conf.set(\"hadoop.security.authentication\", \"kerberos\");\n+            if (debugEnabled) {\n+                System.setProperty(\"sun.security.krb5.debug\", \"true\");\n+            }\n+            UserGroupInformation.setConfiguration(conf);\n+            UserGroupInformation.loginUserFromKeytab(principal, keytab);\n+            log.info(\"Getting connection from kudu with kerberos\");\n+            log.info(\"Current user: \" + UserGroupInformation.getCurrentUser());\n+            log.info(\"Login user: \" + UserGroupInformation.getLoginUser());\n+        }\n+        catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    static KuduClient getKuduKerberosClient(KuduClientConfig config)\n+    {\n+        KuduClient client = null;\n+        try {\n+            reTryKerberos(true);\n+            client = UserGroupInformation.getLoginUser().doAs(\n+                    (PrivilegedExceptionAction<KuduClient>) () -> getKuduClient(config));\n+            return client;\n+        }\n+        catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    static KuduClient getKuduClient(KuduClientConfig config)\n+    {\n+        KuduClient.KuduClientBuilder builder = new KuduClient.KuduClientBuilder(config.getMasterAddresses());\n+        builder.defaultAdminOperationTimeoutMs(config.getDefaultAdminOperationTimeout().toMillis());\n+        builder.defaultOperationTimeoutMs(config.getDefaultOperationTimeout().toMillis());\n+        builder.defaultSocketReadTimeoutMs(config.getDefaultSocketReadTimeout().toMillis());\n+        if (config.isDisableStatistics()) {\n+            builder.disableStatistics();\n+        }\n+        return builder.build();\n+    }\n+\n+    static void reTryKerberos(boolean enabled)\n+    {\n+        if (enabled) {\n+            log.debug(\"Try relogin kerberos at first!\");\n+            try {\n+                if (UserGroupInformation.isLoginKeytabBased()) {\n+                    UserGroupInformation.getLoginUser().reloginFromKeytab();\n+                }\n+                else if (UserGroupInformation.isLoginTicketBased()) {\n+                    UserGroupInformation.getLoginUser().reloginFromTicketCache();\n+                }\n+            }\n+            catch (IOException e) {\n+                log.error(\"Try relogin kerberos failed!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32fc2f61de8306f02bef9d63071c3b8df813901f"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzODM3NA==", "bodyText": "nit: Maybe Connecting to kudu with kerberos authentication?", "url": "https://github.com/prestodb/presto/pull/14007#discussion_r371838374", "createdAt": "2020-01-28T14:34:47Z", "author": {"login": "arhimondr"}, "path": "presto-kudu/src/main/java/com/facebook/presto/kudu/KuduUtil.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.kudu;\n+\n+import com.facebook.airlift.log.Logger;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.security.UserGroupInformation;\n+import org.apache.kudu.client.KuduClient;\n+\n+import java.io.IOException;\n+import java.security.PrivilegedExceptionAction;\n+\n+public class KuduUtil\n+{\n+    private static final Logger log = Logger.get(KuduUtil.class);\n+\n+    private KuduUtil()\n+    {\n+        // not allowed to be called to initialize instance\n+    }\n+\n+    /**\n+     * Initialize kerberos authentication\n+     */\n+    static void initKerberosENV(String principal, String keytab, boolean debugEnabled)\n+    {\n+        try {\n+            Configuration conf = new Configuration();\n+            conf.set(\"hadoop.security.authentication\", \"kerberos\");\n+            if (debugEnabled) {\n+                System.setProperty(\"sun.security.krb5.debug\", \"true\");\n+            }\n+            UserGroupInformation.setConfiguration(conf);\n+            UserGroupInformation.loginUserFromKeytab(principal, keytab);\n+            log.info(\"Getting connection from kudu with kerberos\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32fc2f61de8306f02bef9d63071c3b8df813901f"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NDIxNTY1", "url": "https://github.com/prestodb/presto/pull/14007#pullrequestreview-349421565", "createdAt": "2020-01-28T14:35:39Z", "commit": {"oid": "32fc2f61de8306f02bef9d63071c3b8df813901f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDozNTo0MFrOFinPzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDozNTo0MFrOFinPzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzODkyNw==", "bodyText": "createKuduClient", "url": "https://github.com/prestodb/presto/pull/14007#discussion_r371838927", "createdAt": "2020-01-28T14:35:40Z", "author": {"login": "arhimondr"}, "path": "presto-kudu/src/main/java/com/facebook/presto/kudu/KuduUtil.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.kudu;\n+\n+import com.facebook.airlift.log.Logger;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.security.UserGroupInformation;\n+import org.apache.kudu.client.KuduClient;\n+\n+import java.io.IOException;\n+import java.security.PrivilegedExceptionAction;\n+\n+public class KuduUtil\n+{\n+    private static final Logger log = Logger.get(KuduUtil.class);\n+\n+    private KuduUtil()\n+    {\n+        // not allowed to be called to initialize instance\n+    }\n+\n+    /**\n+     * Initialize kerberos authentication\n+     */\n+    static void initKerberosENV(String principal, String keytab, boolean debugEnabled)\n+    {\n+        try {\n+            Configuration conf = new Configuration();\n+            conf.set(\"hadoop.security.authentication\", \"kerberos\");\n+            if (debugEnabled) {\n+                System.setProperty(\"sun.security.krb5.debug\", \"true\");\n+            }\n+            UserGroupInformation.setConfiguration(conf);\n+            UserGroupInformation.loginUserFromKeytab(principal, keytab);\n+            log.info(\"Getting connection from kudu with kerberos\");\n+            log.info(\"Current user: \" + UserGroupInformation.getCurrentUser());\n+            log.info(\"Login user: \" + UserGroupInformation.getLoginUser());\n+        }\n+        catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    static KuduClient getKuduKerberosClient(KuduClientConfig config)\n+    {\n+        KuduClient client = null;\n+        try {\n+            reTryKerberos(true);\n+            client = UserGroupInformation.getLoginUser().doAs(\n+                    (PrivilegedExceptionAction<KuduClient>) () -> getKuduClient(config));\n+            return client;\n+        }\n+        catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    static KuduClient getKuduClient(KuduClientConfig config)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32fc2f61de8306f02bef9d63071c3b8df813901f"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NDIxODI1", "url": "https://github.com/prestodb/presto/pull/14007#pullrequestreview-349421825", "createdAt": "2020-01-28T14:36:00Z", "commit": {"oid": "32fc2f61de8306f02bef9d63071c3b8df813901f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDozNjowMFrOFinQow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDozNjowMFrOFinQow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzOTEzOQ==", "bodyText": "createKuduKerberosClient", "url": "https://github.com/prestodb/presto/pull/14007#discussion_r371839139", "createdAt": "2020-01-28T14:36:00Z", "author": {"login": "arhimondr"}, "path": "presto-kudu/src/main/java/com/facebook/presto/kudu/KuduUtil.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.kudu;\n+\n+import com.facebook.airlift.log.Logger;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.security.UserGroupInformation;\n+import org.apache.kudu.client.KuduClient;\n+\n+import java.io.IOException;\n+import java.security.PrivilegedExceptionAction;\n+\n+public class KuduUtil\n+{\n+    private static final Logger log = Logger.get(KuduUtil.class);\n+\n+    private KuduUtil()\n+    {\n+        // not allowed to be called to initialize instance\n+    }\n+\n+    /**\n+     * Initialize kerberos authentication\n+     */\n+    static void initKerberosENV(String principal, String keytab, boolean debugEnabled)\n+    {\n+        try {\n+            Configuration conf = new Configuration();\n+            conf.set(\"hadoop.security.authentication\", \"kerberos\");\n+            if (debugEnabled) {\n+                System.setProperty(\"sun.security.krb5.debug\", \"true\");\n+            }\n+            UserGroupInformation.setConfiguration(conf);\n+            UserGroupInformation.loginUserFromKeytab(principal, keytab);\n+            log.info(\"Getting connection from kudu with kerberos\");\n+            log.info(\"Current user: \" + UserGroupInformation.getCurrentUser());\n+            log.info(\"Login user: \" + UserGroupInformation.getLoginUser());\n+        }\n+        catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    static KuduClient getKuduKerberosClient(KuduClientConfig config)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32fc2f61de8306f02bef9d63071c3b8df813901f"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ea61187eb6e5455766d796605ec8905de37af9d", "author": {"user": {"login": "liyubin117", "name": "Yubin Li"}}, "url": "https://github.com/prestodb/presto/commit/2ea61187eb6e5455766d796605ec8905de37af9d", "committedDate": "2020-01-28T15:23:09Z", "message": "Support kerberos authentication for Kudu connector"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NzczMTIx", "url": "https://github.com/prestodb/presto/pull/14007#pullrequestreview-349773121", "createdAt": "2020-01-28T23:19:04Z", "commit": {"oid": "2ea61187eb6e5455766d796605ec8905de37af9d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5Nzc0NTQ1", "url": "https://github.com/prestodb/presto/pull/14007#pullrequestreview-349774545", "createdAt": "2020-01-28T23:22:52Z", "commit": {"oid": "2ea61187eb6e5455766d796605ec8905de37af9d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2488, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}