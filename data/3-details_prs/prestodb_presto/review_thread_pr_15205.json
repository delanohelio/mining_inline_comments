{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNzgyODE2", "number": 15205, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODo1MzozNlrOEocwCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODo1NToxMVrOEocyjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODQ5NTQ1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/com/facebook/presto/sql/gen/BenchmarkPageProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODo1MzozNlrOHZjBcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMjo1NjowMlrOHbdJKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU1MDI1OQ==", "bodyText": "Current implementation can only support these two values, e.g. no filter and filter that never passes. Hence, it would be clearer to introduce a boolean parameter.\n@Param({\"true\", \"false\"})\nprivate boolean filterAlwaysFails;", "url": "https://github.com/prestodb/presto/pull/15205#discussion_r496550259", "createdAt": "2020-09-29T08:53:36Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/test/java/com/facebook/presto/sql/gen/BenchmarkPageProcessor.java", "diffHunk": "@@ -108,6 +110,10 @@ public Page handCoded(BenchmarkData data)\n         private Tpch1FilterAndProject handcodedProcessor;\n         private Page inputPage;\n \n+        @SuppressWarnings(\"unused\")\n+        @Param({\"0.0\", \"1.0\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44fcf7fcf0815452061225dafdd5b8618c7e03e1"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU1MTA4MA==", "bodyText": "Changed the callers to the following:\n        private final RowExpression createFilterExpression(FunctionManager functionManager)\n        {\n            if (!filterAlwaysFails) {\n                return new ConstantExpression(true, BOOLEAN);\n            }\n            ...\n\nand\n            private boolean filter(int position, Block discountBlock, Block shipDateBlock, Block quantityBlock)\n            {\n                if (!filterAlwaysFails) {\n                    return true;\n                }", "url": "https://github.com/prestodb/presto/pull/15205#discussion_r498551080", "createdAt": "2020-10-01T22:56:02Z", "author": {"login": "yingsu00"}, "path": "presto-main/src/test/java/com/facebook/presto/sql/gen/BenchmarkPageProcessor.java", "diffHunk": "@@ -108,6 +110,10 @@ public Page handCoded(BenchmarkData data)\n         private Tpch1FilterAndProject handcodedProcessor;\n         private Page inputPage;\n \n+        @SuppressWarnings(\"unused\")\n+        @Param({\"0.0\", \"1.0\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU1MDI1OQ=="}, "originalCommit": {"oid": "44fcf7fcf0815452061225dafdd5b8618c7e03e1"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODUwMTg4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/com/facebook/presto/sql/gen/BenchmarkPageProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODo1NToxMVrOHZjFhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMjoyNTo1N1rOHbcnFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU1MTMwMQ==", "bodyText": "What does this do?", "url": "https://github.com/prestodb/presto/pull/15205#discussion_r496551301", "createdAt": "2020-09-29T08:55:11Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/test/java/com/facebook/presto/sql/gen/BenchmarkPageProcessor.java", "diffHunk": "@@ -274,6 +275,7 @@ public static void main(String[] args)\n         Options options = new OptionsBuilder()\n                 .verbosity(VerboseMode.NORMAL)\n                 .include(\".*\" + BenchmarkPageProcessor.class.getSimpleName() + \".*\")\n+                .addProfiler(GCProfiler.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c2b32d433186ea01bdbb313a1f237da54479531"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU0MjM1OQ==", "bodyText": "What does this do?\n\nThis will run the GC profiler. This is why you see the GC stats in the benchmark results:\nBenchmark                                                         (projectionDataType)   Mode  Cnt       Score        Error   Units\nBenchmarkPageProcessor.compiled                                                 BIGINT  thrpt   10    8374.449 \u00b1   1023.859   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                                  BIGINT  thrpt   10    1451.783 \u00b1    179.079  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm                             BIGINT  thrpt   10  363640.395 \u00b1      1.385    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space                         BIGINT  thrpt   10    1448.711 \u00b1   1904.852  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm                    BIGINT  thrpt   10  368448.852 \u00b1 487748.838    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space                     BIGINT  thrpt   10       0.019 \u00b1      0.054  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm                BIGINT  thrpt   10       4.904 \u00b1     13.838    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                                       BIGINT  thrpt   10       6.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                                        BIGINT  thrpt   10      27.000                   ms\nBenchmarkPageProcessor.compiled                                                 DOUBLE  thrpt   10    8805.494 \u00b1    916.612   ops/s\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate                                  DOUBLE  thrpt   10    1527.888 \u00b1    159.617  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.alloc.rate.norm                             DOUBLE  thrpt   10  363640.100 \u00b1      0.011    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space                         DOUBLE  thrpt   10    1716.294 \u00b1   1812.190  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Eden_Space.norm                    DOUBLE  thrpt   10  414368.217 \u00b1 436717.530    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space                     DOUBLE  thrpt   10       0.008 \u00b1      0.023  MB/sec\nBenchmarkPageProcessor.compiled:\u00b7gc.churn.PS_Survivor_Space.norm                DOUBLE  thrpt   10       1.942 \u00b1      5.771    B/op\nBenchmarkPageProcessor.compiled:\u00b7gc.count                                       DOUBLE  thrpt   10       7.000               counts\nBenchmarkPageProcessor.compiled:\u00b7gc.time                                        DOUBLE  thrpt   10      30.000                   ms", "url": "https://github.com/prestodb/presto/pull/15205#discussion_r498542359", "createdAt": "2020-10-01T22:25:57Z", "author": {"login": "yingsu00"}, "path": "presto-main/src/test/java/com/facebook/presto/sql/gen/BenchmarkPageProcessor.java", "diffHunk": "@@ -274,6 +275,7 @@ public static void main(String[] args)\n         Options options = new OptionsBuilder()\n                 .verbosity(VerboseMode.NORMAL)\n                 .include(\".*\" + BenchmarkPageProcessor.class.getSimpleName() + \".*\")\n+                .addProfiler(GCProfiler.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU1MTMwMQ=="}, "originalCommit": {"oid": "6c2b32d433186ea01bdbb313a1f237da54479531"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3699, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}