{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NDI4MTU3", "number": 14110, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMjoyNDowN1rODhPnjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNjowNjo0NFrODik3wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTg1NDg2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/PlanFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMjoyNDowN1rOFr54Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDozMjoxM1rOFr8ogg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU4MTMzMQ==", "bodyText": "nit: maybe add a short comment (so only serialize once \ud83d\ude03 )", "url": "https://github.com/prestodb/presto/pull/14110#discussion_r381581331", "createdAt": "2020-02-19T22:24:07Z", "author": {"login": "wenleix"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/PlanFragment.java", "diffHunk": "@@ -54,6 +53,8 @@\n     private final StatsAndCosts statsAndCosts;\n     private final Optional<String> jsonRepresentation;\n \n+    private SerializedString cachedSerialization;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f294eaae4a2003a23a370ebe5c6d2d3cb9a21f2"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyNjQ5OA==", "bodyText": "See: https://github.com/prestodb/presto/compare/6b5757b8ed4fb19aee6c257aec17a21cd16c068f..e70403ed7c21ca5e8206208db1b056d2f3137fca", "url": "https://github.com/prestodb/presto/pull/14110#discussion_r381626498", "createdAt": "2020-02-20T00:32:13Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/PlanFragment.java", "diffHunk": "@@ -54,6 +53,8 @@\n     private final StatsAndCosts statsAndCosts;\n     private final Optional<String> jsonRepresentation;\n \n+    private SerializedString cachedSerialization;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU4MTMzMQ=="}, "originalCommit": {"oid": "1f294eaae4a2003a23a370ebe5c6d2d3cb9a21f2"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTg1NjA2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/PlanFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMjoyNDozOVrOFr548Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDozMjowN1rOFr8oZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU4MTU1Mw==", "bodyText": "benign data race ? \ud83d\ude03\nThe only question is if all the serialization request comes at similar time, would this cause we still serialize for every task?", "url": "https://github.com/prestodb/presto/pull/14110#discussion_r381581553", "createdAt": "2020-02-19T22:24:39Z", "author": {"login": "wenleix"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/PlanFragment.java", "diffHunk": "@@ -153,6 +154,16 @@ public StatsAndCosts getStatsAndCosts()\n         return jsonRepresentation;\n     }\n \n+    // Serialize this plan fragment with the provided codec, caching the results\n+    public SerializedString toBytes(Codec<PlanFragment> codec)\n+    {\n+        requireNonNull(codec, \"codec is null\");\n+        if (cachedSerialization == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f294eaae4a2003a23a370ebe5c6d2d3cb9a21f2"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyNjQ2OA==", "bodyText": "I'll just synchronize it", "url": "https://github.com/prestodb/presto/pull/14110#discussion_r381626468", "createdAt": "2020-02-20T00:32:07Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/PlanFragment.java", "diffHunk": "@@ -153,6 +154,16 @@ public StatsAndCosts getStatsAndCosts()\n         return jsonRepresentation;\n     }\n \n+    // Serialize this plan fragment with the provided codec, caching the results\n+    public SerializedString toBytes(Codec<PlanFragment> codec)\n+    {\n+        requireNonNull(codec, \"codec is null\");\n+        if (cachedSerialization == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU4MTU1Mw=="}, "originalCommit": {"oid": "1f294eaae4a2003a23a370ebe5c6d2d3cb9a21f2"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTg2MjMxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/server/TaskUpdateRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMjoyNjo1NlrOFr585g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDozMjoxOFrOFr8olA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU4MjU2Ng==", "bodyText": "Add a comment this is only required on coordinator side when serializing PlanFragment, not provided on worker :)", "url": "https://github.com/prestodb/presto/pull/14110#discussion_r381582566", "createdAt": "2020-02-19T22:26:56Z", "author": {"login": "wenleix"}, "path": "presto-main/src/main/java/com/facebook/presto/server/TaskUpdateRequest.java", "diffHunk": "@@ -38,6 +43,7 @@\n     private final List<TaskSource> sources;\n     private final OutputBuffers outputIds;\n     private final Optional<TableWriteInfo> tableWriteInfo;\n+    private final Optional<Codec<PlanFragment>> fragmentCodec;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f294eaae4a2003a23a370ebe5c6d2d3cb9a21f2"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyNjUxNg==", "bodyText": "See: https://github.com/prestodb/presto/compare/6b5757b8ed4fb19aee6c257aec17a21cd16c068f..e70403ed7c21ca5e8206208db1b056d2f3137fca", "url": "https://github.com/prestodb/presto/pull/14110#discussion_r381626516", "createdAt": "2020-02-20T00:32:18Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/server/TaskUpdateRequest.java", "diffHunk": "@@ -38,6 +43,7 @@\n     private final List<TaskSource> sources;\n     private final OutputBuffers outputIds;\n     private final Optional<TableWriteInfo> tableWriteInfo;\n+    private final Optional<Codec<PlanFragment>> fragmentCodec;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU4MjU2Ng=="}, "originalCommit": {"oid": "1f294eaae4a2003a23a370ebe5c6d2d3cb9a21f2"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NTAzOTQ2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/PlanFragment.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMjozMToxMlrOFtyRiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMjozNzo0NVrOFtybtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU1MzkyOA==", "bodyText": "nit: after going through the code, it is clear the Codec should not change during the lifecycle of a JVM. Lets just add a comment that clarifies this here. Because technically if someone passes a different codec in the second call, we will be returning the incorrect result. Better if we can add some variant for the same.", "url": "https://github.com/prestodb/presto/pull/14110#discussion_r383553928", "createdAt": "2020-02-24T22:31:12Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/PlanFragment.java", "diffHunk": "@@ -153,6 +157,16 @@ public StatsAndCosts getStatsAndCosts()\n         return jsonRepresentation;\n     }\n \n+    // Serialize this plan fragment with the provided codec, caching the results\n+    public synchronized byte[] toBytes(Codec<PlanFragment> codec)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ec16ecb0208e8bac5cfcaf26703db7d3dcabc96"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU1NjUzNA==", "bodyText": "I'll add the reference to the first successfully used Codec and throw if it differs.", "url": "https://github.com/prestodb/presto/pull/14110#discussion_r383556534", "createdAt": "2020-02-24T22:37:45Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/PlanFragment.java", "diffHunk": "@@ -153,6 +157,16 @@ public StatsAndCosts getStatsAndCosts()\n         return jsonRepresentation;\n     }\n \n+    // Serialize this plan fragment with the provided codec, caching the results\n+    public synchronized byte[] toBytes(Codec<PlanFragment> codec)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU1MzkyOA=="}, "originalCommit": {"oid": "2ec16ecb0208e8bac5cfcaf26703db7d3dcabc96"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NTgyMTgwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/server/TaskUpdateRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNjowNjoxMFrOFt5pmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNjowNjoxMFrOFt5pmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY3NDc3OA==", "bodyText": "This constructor is only used in HttpRemoteTask  right? Should we just inline it?", "url": "https://github.com/prestodb/presto/pull/14110#discussion_r383674778", "createdAt": "2020-02-25T06:06:10Z", "author": {"login": "wenleix"}, "path": "presto-main/src/main/java/com/facebook/presto/server/TaskUpdateRequest.java", "diffHunk": "@@ -63,6 +66,24 @@ public TaskUpdateRequest(\n         this.tableWriteInfo = tableWriteInfo;\n     }\n \n+    public TaskUpdateRequest(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6104a27ea0c7af561f881d23c893e940e16b25f"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NTgyMjcyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/server/TaskUpdateRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNjowNjo0NFrOFt5qKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODo1MzozOVrOFu34uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY3NDkyMg==", "bodyText": "How can this be non-absent? -- the later TaskUpdateRequest won't have plan fragment right? -- Am I missing anything? ;)", "url": "https://github.com/prestodb/presto/pull/14110#discussion_r383674922", "createdAt": "2020-02-25T06:06:44Z", "author": {"login": "wenleix"}, "path": "presto-main/src/main/java/com/facebook/presto/server/TaskUpdateRequest.java", "diffHunk": "@@ -75,8 +96,9 @@ public SessionRepresentation getSession()\n         return extraCredentials;\n     }\n \n+    @JsonInclude(NON_ABSENT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6104a27ea0c7af561f881d23c893e940e16b25f"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5NDQ1Nw==", "bodyText": "This means don't even include the JSON key if the value is absent", "url": "https://github.com/prestodb/presto/pull/14110#discussion_r384694457", "createdAt": "2020-02-26T18:53:39Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/server/TaskUpdateRequest.java", "diffHunk": "@@ -75,8 +96,9 @@ public SessionRepresentation getSession()\n         return extraCredentials;\n     }\n \n+    @JsonInclude(NON_ABSENT)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY3NDkyMg=="}, "originalCommit": {"oid": "e6104a27ea0c7af561f881d23c893e940e16b25f"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3027, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}