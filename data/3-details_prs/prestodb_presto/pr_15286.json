{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NjgxMjM1", "number": 15286, "title": "Enable reading of FileStatistics in presto-orc", "bodyText": "Move intermediate encryption keys from the OrcRecordReader to the OrcReader's constructor.\nEnable reading of FileStatistics for both encrypted and unencrypted ORC files.\n== Test plan ==\nmvn clean install -DskipTests\nmvn clean install -pl presto-orc -pl presto-hive -pl presto-raptor\n\n== RELEASE NOTES ==\nGeneral Changes\n\nMove IEK from OrcRecordReader to OrcReader's constructor\nEnable reading of FileStatistics for ORC files", "createdAt": "2020-10-08T06:05:53Z", "url": "https://github.com/prestodb/presto/pull/15286", "merged": true, "mergeCommit": {"oid": "3d4f3f3ff042c7c2b75c09a8d9de6aee53227267"}, "closed": true, "closedAt": "2020-10-20T21:46:02Z", "author": {"login": "sdruzkin"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQzArDgFqTUwNTQyOTcyNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUfqIoAFqTUxMzE0ODQwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NDI5NzI0", "url": "https://github.com/prestodb/presto/pull/15286#pullrequestreview-505429724", "createdAt": "2020-10-09T07:36:49Z", "commit": {"oid": "7d9f6c0b7fc5a59bf02f72e6b43edc681093fb52"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNzozNjo0OVrOHe-dPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNzozNzoyMFrOHe-eSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI0MjYyMg==", "bodyText": "Merge this line with the previous one", "url": "https://github.com/prestodb/presto/pull/15286#discussion_r502242622", "createdAt": "2020-10-09T07:36:49Z", "author": {"login": "yingsu00"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/AbstractOrcRecordReader.java", "diffHunk": "@@ -201,6 +203,13 @@ public AbstractOrcRecordReader(\n         }\n         Collections.sort(stripeInfos, comparingLong(info -> info.getStripe().getOffset()));\n \n+        // FileStats cannot be decrypted in the OrcReader because it doesn't have\n+        // the decryption keys", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d9f6c0b7fc5a59bf02f72e6b43edc681093fb52"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI0Mjg4OQ==", "bodyText": "In Presto code base, either put all parameters in one line, or one parameter each line.", "url": "https://github.com/prestodb/presto/pull/15286#discussion_r502242889", "createdAt": "2020-10-09T07:37:20Z", "author": {"login": "yingsu00"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/AbstractOrcRecordReader.java", "diffHunk": "@@ -201,6 +203,13 @@ public AbstractOrcRecordReader(\n         }\n         Collections.sort(stripeInfos, comparingLong(info -> info.getStripe().getOffset()));\n \n+        // FileStats cannot be decrypted in the OrcReader because it doesn't have\n+        // the decryption keys\n+        if (dwrfEncryptionInfo.isPresent()) {\n+            fileStats = metadataReader.decryptFileStatistics(hiveWriterVersion, dwrfEncryption, encryptionLibrary, fileStats,\n+                    fileStripes, columnToIntermediateKeyMap, orcDataSource, decompressor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d9f6c0b7fc5a59bf02f72e6b43edc681093fb52"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1MTU5ODcx", "url": "https://github.com/prestodb/presto/pull/15286#pullrequestreview-505159871", "createdAt": "2020-10-08T20:56:55Z", "commit": {"oid": "7d9f6c0b7fc5a59bf02f72e6b43edc681093fb52"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMDo1Njo1NlrOHewIIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNToxODo1N1rOHfOWsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAwNzg0Mg==", "bodyText": "I would throw an unsupported operation exception instead since this should never be called.  (or alternatively remove the if condition  before calling this method.", "url": "https://github.com/prestodb/presto/pull/15286#discussion_r502007842", "createdAt": "2020-10-08T20:56:56Z", "author": {"login": "rschlussel"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/OrcMetadataReader.java", "diffHunk": "@@ -139,6 +142,15 @@ public Footer readFooter(HiveWriterVersion hiveWriterVersion, InputStream inputS\n                 Optional.empty());\n     }\n \n+    @Override\n+    public List<ColumnStatistics> decryptFileStatistics(HiveWriterVersion hiveWriterVersion, Optional<DwrfEncryption> dwrfEncryption,\n+            Optional<EncryptionLibrary> encryptionLibrary, List<ColumnStatistics> fileStats,\n+            List<StripeInformation> fileStripes, Map<Integer, Slice> nodeToIntermediateKeys,\n+            OrcDataSource orcDataSource, Optional<OrcDecompressor> decompressor)\n+    {\n+        return fileStats;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d9f6c0b7fc5a59bf02f72e6b43edc681093fb52"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAxMTU2Mw==", "bodyText": "use checkArgument instead since it refers to one of the function arguments", "url": "https://github.com/prestodb/presto/pull/15286#discussion_r502011563", "createdAt": "2020-10-08T21:04:47Z", "author": {"login": "rschlussel"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java", "diffHunk": "@@ -112,6 +118,84 @@ public Footer readFooter(HiveWriterVersion hiveWriterVersion, InputStream inputS\n                 footer.hasEncryption() ? Optional.of(toEncryption(footer.getEncryption())) : Optional.empty());\n     }\n \n+    @Override\n+    public List<ColumnStatistics> decryptFileStatistics(HiveWriterVersion hiveWriterVersion,\n+            Optional<DwrfEncryption> dwrfEncryption,\n+            Optional<EncryptionLibrary> encryptionLibrary,\n+            List<ColumnStatistics> fileStats,\n+            List<StripeInformation> fileStripes,\n+            Map<Integer, Slice> nodeToIntermediateKeys,\n+            OrcDataSource orcDataSource,\n+            Optional<OrcDecompressor> decompressor)\n+    {\n+        // skip if we are not interested in any of the encrypted nodes\n+        if (!dwrfEncryption.isPresent() || nodeToIntermediateKeys.isEmpty() || fileStats.isEmpty()) {\n+            return fileStats;\n+        }\n+\n+        checkState(encryptionLibrary.isPresent(), \"encryption library is not set\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d9f6c0b7fc5a59bf02f72e6b43edc681093fb52"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUwMzA5MQ==", "bodyText": "This is doing more than decryption.  I would call this decryptAndCombineFileStatistics or something.", "url": "https://github.com/prestodb/presto/pull/15286#discussion_r502503091", "createdAt": "2020-10-09T15:18:57Z", "author": {"login": "rschlussel"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java", "diffHunk": "@@ -112,6 +118,84 @@ public Footer readFooter(HiveWriterVersion hiveWriterVersion, InputStream inputS\n                 footer.hasEncryption() ? Optional.of(toEncryption(footer.getEncryption())) : Optional.empty());\n     }\n \n+    @Override\n+    public List<ColumnStatistics> decryptFileStatistics(HiveWriterVersion hiveWriterVersion,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d9f6c0b7fc5a59bf02f72e6b43edc681093fb52"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1OTk1NDg3", "url": "https://github.com/prestodb/presto/pull/15286#pullrequestreview-505995487", "createdAt": "2020-10-09T21:20:01Z", "commit": {"oid": "7d9f6c0b7fc5a59bf02f72e6b43edc681093fb52"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMToyMDowMlrOHfY6tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMToyMDowMlrOHfY6tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NjE0OQ==", "bodyText": "Is fileStripes guaranteed to be non-empty?", "url": "https://github.com/prestodb/presto/pull/15286#discussion_r502676149", "createdAt": "2020-10-09T21:20:02Z", "author": {"login": "sujay-jain"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java", "diffHunk": "@@ -112,6 +118,84 @@ public Footer readFooter(HiveWriterVersion hiveWriterVersion, InputStream inputS\n                 footer.hasEncryption() ? Optional.of(toEncryption(footer.getEncryption())) : Optional.empty());\n     }\n \n+    @Override\n+    public List<ColumnStatistics> decryptFileStatistics(HiveWriterVersion hiveWriterVersion,\n+            Optional<DwrfEncryption> dwrfEncryption,\n+            Optional<EncryptionLibrary> encryptionLibrary,\n+            List<ColumnStatistics> fileStats,\n+            List<StripeInformation> fileStripes,\n+            Map<Integer, Slice> nodeToIntermediateKeys,\n+            OrcDataSource orcDataSource,\n+            Optional<OrcDecompressor> decompressor)\n+    {\n+        // skip if we are not interested in any of the encrypted nodes\n+        if (!dwrfEncryption.isPresent() || nodeToIntermediateKeys.isEmpty() || fileStats.isEmpty()) {\n+            return fileStats;\n+        }\n+\n+        checkState(encryptionLibrary.isPresent(), \"encryption library is not set\");\n+        ColumnStatistics[] decryptedFileStats = fileStats.toArray(new ColumnStatistics[0]);\n+\n+        List<byte[]> stripeKeys = fileStripes.get(0).getKeyMetadata();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d9f6c0b7fc5a59bf02f72e6b43edc681093fb52"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1OTk5NDQ4", "url": "https://github.com/prestodb/presto/pull/15286#pullrequestreview-505999448", "createdAt": "2020-10-09T21:29:00Z", "commit": {"oid": "7d9f6c0b7fc5a59bf02f72e6b43edc681093fb52"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMToyOTowMVrOHfZHLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMToyOTowMVrOHfZHLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3OTM0Mw==", "bodyText": "let's extract encryptionGroup.getNodes() to a variable so we don't call it twice", "url": "https://github.com/prestodb/presto/pull/15286#discussion_r502679343", "createdAt": "2020-10-09T21:29:01Z", "author": {"login": "sujay-jain"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java", "diffHunk": "@@ -112,6 +118,84 @@ public Footer readFooter(HiveWriterVersion hiveWriterVersion, InputStream inputS\n                 footer.hasEncryption() ? Optional.of(toEncryption(footer.getEncryption())) : Optional.empty());\n     }\n \n+    @Override\n+    public List<ColumnStatistics> decryptFileStatistics(HiveWriterVersion hiveWriterVersion,\n+            Optional<DwrfEncryption> dwrfEncryption,\n+            Optional<EncryptionLibrary> encryptionLibrary,\n+            List<ColumnStatistics> fileStats,\n+            List<StripeInformation> fileStripes,\n+            Map<Integer, Slice> nodeToIntermediateKeys,\n+            OrcDataSource orcDataSource,\n+            Optional<OrcDecompressor> decompressor)\n+    {\n+        // skip if we are not interested in any of the encrypted nodes\n+        if (!dwrfEncryption.isPresent() || nodeToIntermediateKeys.isEmpty() || fileStats.isEmpty()) {\n+            return fileStats;\n+        }\n+\n+        checkState(encryptionLibrary.isPresent(), \"encryption library is not set\");\n+        ColumnStatistics[] decryptedFileStats = fileStats.toArray(new ColumnStatistics[0]);\n+\n+        List<byte[]> stripeKeys = fileStripes.get(0).getKeyMetadata();\n+        List<EncryptionGroup> encryptionGroups = dwrfEncryption.get().getEncryptionGroups();\n+\n+        // if there is a node that has child nodes then its whole subtree will be encrypted and only the parent\n+        // node is added to the encryption group\n+        for (int groupIdx = 0; groupIdx < encryptionGroups.size(); groupIdx++) {\n+            EncryptionGroup encryptionGroup = encryptionGroups.get(groupIdx);\n+            DwrfDataEncryptor decryptor = null;\n+            for (int i = 0; i < encryptionGroup.getNodes().size(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d9f6c0b7fc5a59bf02f72e6b43edc681093fb52"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MDAwMDg3", "url": "https://github.com/prestodb/presto/pull/15286#pullrequestreview-506000087", "createdAt": "2020-10-09T21:30:31Z", "commit": {"oid": "7d9f6c0b7fc5a59bf02f72e6b43edc681093fb52"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMTozMDozMVrOHfZJYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMTozMDozMVrOHfZJYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3OTkwNg==", "bodyText": "if !encryptionGroup.getKeyMetadata().isPresent() is true then encryptionGroup.getKeyMetadata().get() will blow up --  Perhaps the check is inverted?", "url": "https://github.com/prestodb/presto/pull/15286#discussion_r502679906", "createdAt": "2020-10-09T21:30:31Z", "author": {"login": "sujay-jain"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/DwrfMetadataReader.java", "diffHunk": "@@ -112,6 +118,84 @@ public Footer readFooter(HiveWriterVersion hiveWriterVersion, InputStream inputS\n                 footer.hasEncryption() ? Optional.of(toEncryption(footer.getEncryption())) : Optional.empty());\n     }\n \n+    @Override\n+    public List<ColumnStatistics> decryptFileStatistics(HiveWriterVersion hiveWriterVersion,\n+            Optional<DwrfEncryption> dwrfEncryption,\n+            Optional<EncryptionLibrary> encryptionLibrary,\n+            List<ColumnStatistics> fileStats,\n+            List<StripeInformation> fileStripes,\n+            Map<Integer, Slice> nodeToIntermediateKeys,\n+            OrcDataSource orcDataSource,\n+            Optional<OrcDecompressor> decompressor)\n+    {\n+        // skip if we are not interested in any of the encrypted nodes\n+        if (!dwrfEncryption.isPresent() || nodeToIntermediateKeys.isEmpty() || fileStats.isEmpty()) {\n+            return fileStats;\n+        }\n+\n+        checkState(encryptionLibrary.isPresent(), \"encryption library is not set\");\n+        ColumnStatistics[] decryptedFileStats = fileStats.toArray(new ColumnStatistics[0]);\n+\n+        List<byte[]> stripeKeys = fileStripes.get(0).getKeyMetadata();\n+        List<EncryptionGroup> encryptionGroups = dwrfEncryption.get().getEncryptionGroups();\n+\n+        // if there is a node that has child nodes then its whole subtree will be encrypted and only the parent\n+        // node is added to the encryption group\n+        for (int groupIdx = 0; groupIdx < encryptionGroups.size(); groupIdx++) {\n+            EncryptionGroup encryptionGroup = encryptionGroups.get(groupIdx);\n+            DwrfDataEncryptor decryptor = null;\n+            for (int i = 0; i < encryptionGroup.getNodes().size(); i++) {\n+                Integer nodeId = encryptionGroup.getNodes().get(i);\n+\n+                // do decryption only for those nodes that are requested (part of the projection)\n+                if (!nodeToIntermediateKeys.containsKey(nodeId)) {\n+                    continue;\n+                }\n+\n+                if (decryptor == null) {\n+                    // DEK for the FileStats can be stored either in the footer or/and in the first stripe.\n+                    // The key in the footer takes priority over the key in the first stripe.\n+                    byte[] encryptedDataKeyWithMeta;\n+                    if (!encryptionGroup.getKeyMetadata().isPresent()) {\n+                        encryptedDataKeyWithMeta = encryptionGroup.getKeyMetadata().get().byteArray();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d9f6c0b7fc5a59bf02f72e6b43edc681093fb52"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NDQzMzE5", "url": "https://github.com/prestodb/presto/pull/15286#pullrequestreview-506443319", "createdAt": "2020-10-12T09:20:31Z", "commit": {"oid": "7d9f6c0b7fc5a59bf02f72e6b43edc681093fb52"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOToyMDozMlrOHf2R4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOToyMDozMlrOHf2R4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE1NzIxOQ==", "bodyText": "createOrcPredicate is used by OrcTester and is used by all block tests. Is there any reason you set the noFileStats to false for all the tests? The tests could be on other formats like ORC, are they all without file stats?", "url": "https://github.com/prestodb/presto/pull/15286#discussion_r503157219", "createdAt": "2020-10-12T09:20:32Z", "author": {"login": "yingsu00"}, "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestingOrcPredicate.java", "diffHunk": "@@ -83,57 +83,57 @@ public static OrcPredicate createOrcPredicate(int columnIndex, Type type, Iterab\n     {\n         List<Object> expectedValues = newArrayList(values);\n         if (BOOLEAN.equals(type)) {\n-            return new BooleanOrcPredicate(columnIndex, expectedValues, format == DWRF);\n+            return new BooleanOrcPredicate(columnIndex, expectedValues, false);\n         }\n         if (TINYINT.equals(type) || SMALLINT.equals(type) || INTEGER.equals(type) || BIGINT.equals(type)) {\n             return new LongOrcPredicate(true,\n                     columnIndex,\n                     expectedValues.stream()\n                             .map(value -> value == null ? null : ((Number) value).longValue())\n                             .collect(toList()),\n-                    format == DWRF);\n+                    false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d9f6c0b7fc5a59bf02f72e6b43edc681093fb52"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "449bbf54e83931bd4572a2d705fff354974755b1", "author": {"user": {"login": "sdruzkin", "name": "Sergii Druzkin"}}, "url": "https://github.com/prestodb/presto/commit/449bbf54e83931bd4572a2d705fff354974755b1", "committedDate": "2020-10-20T17:03:24Z", "message": "Move encryption keys from OrcRecordReader to OrcReader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "974a2faa8806241547c26bea309e1a515121fda7", "author": {"user": {"login": "sdruzkin", "name": "Sergii Druzkin"}}, "url": "https://github.com/prestodb/presto/commit/974a2faa8806241547c26bea309e1a515121fda7", "committedDate": "2020-10-20T17:03:24Z", "message": "Enable reading of FileStatistics in presto-orc\n\nThis change enables reading of FileStatistics from the file footer\nof encrypted and unencrypted files.\n\nDecrypted FileStatistics are only available in the RecordReaders because\nthey receive intermediate keys as a c-tor argument and can decrypt the\nstats. OrcReader returns plaintext FileStatistics from the file footer\nand doesn't attempt to decrypt them. This is the reason why I had to modify\nthe validation process in the OrcWriteValidation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMTQ4NDA1", "url": "https://github.com/prestodb/presto/pull/15286#pullrequestreview-513148405", "createdAt": "2020-10-20T21:28:48Z", "commit": {"oid": "974a2faa8806241547c26bea309e1a515121fda7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4871, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}