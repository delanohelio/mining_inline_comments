{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NTIxNTk2", "number": 14603, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODoyMzoxNFrOEDWDyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwOTowOTo1OFrOEDXEuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTQyNjAxOnYy", "diffSide": "RIGHT", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODoyMzoxNFrOGgTsfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDoyOToxNlrOGgvNGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzMDMwMw==", "bodyText": "Do they have to be public? They're only used in PrestoExceptionClassifier.", "url": "https://github.com/prestodb/presto/pull/14603#discussion_r436530303", "createdAt": "2020-06-08T08:23:14Z", "author": {"login": "yingsu00"}, "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "diffHunk": "@@ -179,4 +168,34 @@ private static boolean isTargetTableAlreadyExistsException(PrestoQueryException\n                 && queryException.getQueryStage().isSetup()\n                 && TABLE_ALREADY_EXISTS_PATTERN.matcher(queryException.getMessage()).find();\n     }\n+\n+    public static class Builder\n+    {\n+        private final ImmutableSet.Builder<ErrorCodeSupplier> recognizedErrors = ImmutableSet.builder();\n+        private final ImmutableSet.Builder<ErrorCodeSupplier> retryableErrors = ImmutableSet.builder();\n+\n+        private Builder()\n+        {\n+        }\n+\n+        public Builder addRecognizedErrors(Iterable<ErrorCodeSupplier> errors)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e99a1e4d5e3f4ba60d9b3f992769c5012932967d"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4MTAxOQ==", "bodyText": "They are also used in PrestoFacebookExceptionClassifier in presto-facebook/presto-facebook-verifier. Verifier is designed in a way so that components can be extended.", "url": "https://github.com/prestodb/presto/pull/14603#discussion_r436981019", "createdAt": "2020-06-08T20:29:16Z", "author": {"login": "caithagoras"}, "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "diffHunk": "@@ -179,4 +168,34 @@ private static boolean isTargetTableAlreadyExistsException(PrestoQueryException\n                 && queryException.getQueryStage().isSetup()\n                 && TABLE_ALREADY_EXISTS_PATTERN.matcher(queryException.getMessage()).find();\n     }\n+\n+    public static class Builder\n+    {\n+        private final ImmutableSet.Builder<ErrorCodeSupplier> recognizedErrors = ImmutableSet.builder();\n+        private final ImmutableSet.Builder<ErrorCodeSupplier> retryableErrors = ImmutableSet.builder();\n+\n+        private Builder()\n+        {\n+        }\n+\n+        public Builder addRecognizedErrors(Iterable<ErrorCodeSupplier> errors)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzMDMwMw=="}, "originalCommit": {"oid": "e99a1e4d5e3f4ba60d9b3f992769c5012932967d"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTQ3NTI4OnYy", "diffSide": "RIGHT", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODozNzo0NFrOGgULcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODozNzo0NFrOGgULcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzODIyNQ==", "bodyText": "nit: The parentheses in (obj == null)  and (getClass() != obj.getClass()) are not needed", "url": "https://github.com/prestodb/presto/pull/14603#discussion_r436538225", "createdAt": "2020-06-08T08:37:44Z", "author": {"login": "yingsu00"}, "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "diffHunk": "@@ -190,12 +206,81 @@ public Builder addRetryableError(ErrorCodeSupplier error)\n             return this;\n         }\n \n+        public Builder addRetryableError(ErrorCodeSupplier errorCode, Optional<QueryStage> queryStage, Optional<Pattern> errorMessagePattern)\n+        {\n+            this.conditionalRetryableErrors.add(new ErrorMatcher(errorCode, queryStage, errorMessagePattern));\n+            return this;\n+        }\n+\n         public PrestoExceptionClassifier build()\n         {\n             Set<ErrorCodeSupplier> recognizedErrors = this.recognizedErrors.build();\n             Set<ErrorCodeSupplier> retryableErrors = this.retryableErrors.build();\n+            Set<ErrorMatcher> conditionalRetryableErrors = this.conditionalRetryableErrors.build();\n             retryableErrors.forEach(error -> checkArgument(recognizedErrors.contains(error), \"Error not recognized: %s\", error));\n-            return new PrestoExceptionClassifier(recognizedErrors, retryableErrors);\n+            conditionalRetryableErrors.forEach(\n+                    errorMatcher -> checkArgument(recognizedErrors.contains(errorMatcher.getErrorCode()), \"Error not recognized: %s\", errorMatcher.getErrorCode()));\n+            return new PrestoExceptionClassifier(recognizedErrors, retryableErrors, conditionalRetryableErrors);\n+        }\n+    }\n+\n+    private static class ErrorMatcher\n+    {\n+        private final ErrorCodeSupplier errorCode;\n+        private final Optional<QueryStage> queryStage;\n+        private final Optional<Pattern> errorMessagePattern;\n+\n+        public ErrorMatcher(\n+                ErrorCodeSupplier errorCode,\n+                Optional<QueryStage> queryStage,\n+                Optional<Pattern> errorMessagePattern)\n+        {\n+            this.errorCode = requireNonNull(errorCode, \"errorCode is null\");\n+            this.queryStage = requireNonNull(queryStage, \"queryStage is null\");\n+            this.errorMessagePattern = requireNonNull(errorMessagePattern, \"errorMessagePattern is null\");\n+        }\n+\n+        public ErrorCodeSupplier getErrorCode()\n+        {\n+            return errorCode;\n+        }\n+\n+        public boolean matches(ErrorCodeSupplier errorCode, QueryStage queryStage, String errorMessage)\n+        {\n+            return this.errorCode.equals(errorCode)\n+                    && (!this.queryStage.isPresent() || this.queryStage.get().equals(queryStage))\n+                    && (!this.errorMessagePattern.isPresent() || this.errorMessagePattern.get().matcher(errorMessage).find());\n+        }\n+\n+        @Override\n+        public boolean equals(Object obj)\n+        {\n+            if (this == obj) {\n+                return true;\n+            }\n+            if ((obj == null) || (getClass() != obj.getClass())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "539b7acb7cc1768f0c619fc49cea6aab03d23a15"}, "originalPosition": 137}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTU5MjI0OnYy", "diffSide": "RIGHT", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwOTowOTo1OFrOGgVTaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDozMzoxMlrOGgvWuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU1NjY0OA==", "bodyText": "I think line 133-139 should belong to the next commit", "url": "https://github.com/prestodb/presto/pull/14603#discussion_r436556648", "createdAt": "2020-06-08T09:09:58Z", "author": {"login": "yingsu00"}, "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "diffHunk": "@@ -128,7 +130,13 @@ public static Builder defaultBuilder()\n                 // From ThriftErrorCode\n                 .addRetryableError(THRIFT_SERVICE_CONNECTION_ERROR)\n                 // Conditional Retryable Errors\n-                .addRetryableError(EXCEEDED_TIME_LIMIT, Optional.of(DESCRIBE), Optional.empty());\n+                .addRetryableError(EXCEEDED_TIME_LIMIT, Optional.of(DESCRIBE), Optional.empty())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd533abd37e0ada1f71f45154f2ec6205fd16a62"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4MzQ4MQ==", "bodyText": "This commit is refactoring by converting shouldResubmit from a static method to an instance method. The behavior of the function should not change.\nBefore, this commit, shouldResubmit would return true for certain cases, including  HIVE_PARTITION_DROPPED_DURING_QUERY , HIVE_TABLE_DROPPED_DURING_QUERY, and \"table already exists\" errors. Line 134 - 139 is only to keep the behavior unchanged for this refactoring.", "url": "https://github.com/prestodb/presto/pull/14603#discussion_r436983481", "createdAt": "2020-06-08T20:33:12Z", "author": {"login": "caithagoras"}, "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "diffHunk": "@@ -128,7 +130,13 @@ public static Builder defaultBuilder()\n                 // From ThriftErrorCode\n                 .addRetryableError(THRIFT_SERVICE_CONNECTION_ERROR)\n                 // Conditional Retryable Errors\n-                .addRetryableError(EXCEEDED_TIME_LIMIT, Optional.of(DESCRIBE), Optional.empty());\n+                .addRetryableError(EXCEEDED_TIME_LIMIT, Optional.of(DESCRIBE), Optional.empty())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU1NjY0OA=="}, "originalCommit": {"oid": "bd533abd37e0ada1f71f45154f2ec6205fd16a62"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2713, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}