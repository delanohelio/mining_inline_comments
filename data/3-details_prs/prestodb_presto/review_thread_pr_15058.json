{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxMjY5OTY1", "number": 15058, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMzowOTo1N1rOEaxtMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMzo1NjoyMlrOEbypuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NTEyODE5OnYy", "diffSide": "RIGHT", "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMzowOTo1N1rOHEaGHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNjowOTo1MlrOHGfXLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4MzkwMA==", "bodyText": "This is updateRowCount.", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r474383900", "createdAt": "2020-08-21T03:09:57Z", "author": {"login": "viczhang861"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java", "diffHunk": "@@ -698,7 +785,27 @@ else if (executionException instanceof PrestoSparkExecutionException) {\n                     result.add(unmodifiableList(columns));\n                 }\n             }\n-            return result.build();\n+            List<List<Object>> results = result.build();\n+\n+            // Based on com.facebook.presto.server.protocol.Query#getNextResult\n+            OptionalLong updateCount = OptionalLong.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d23871b17dad2d27628c051de9a485b22e9b195"}, "originalPosition": 200}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc1MTE2NQ==", "bodyText": "I wanted to be compatible with the QueryResults, where this field is called updateCount. So I would prefer not to rename it in the PrestoSparkQueryInfo at least.\nBut since this field is called this way in the PrestoSparkQueryInfo I wanted to be consistent with naming. Do you think there's still a value of renaming the variables in the PrestoSparkQueryExecutionFactory?", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r474751165", "createdAt": "2020-08-21T14:56:38Z", "author": {"login": "arhimondr"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java", "diffHunk": "@@ -698,7 +785,27 @@ else if (executionException instanceof PrestoSparkExecutionException) {\n                     result.add(unmodifiableList(columns));\n                 }\n             }\n-            return result.build();\n+            List<List<Object>> results = result.build();\n+\n+            // Based on com.facebook.presto.server.protocol.Query#getNextResult\n+            OptionalLong updateCount = OptionalLong.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4MzkwMA=="}, "originalCommit": {"oid": "1d23871b17dad2d27628c051de9a485b22e9b195"}, "originalPosition": 200}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgzMDI5NQ==", "bodyText": "We can keep it consistent,  it is fine.", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r474830295", "createdAt": "2020-08-21T17:25:39Z", "author": {"login": "viczhang861"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java", "diffHunk": "@@ -698,7 +785,27 @@ else if (executionException instanceof PrestoSparkExecutionException) {\n                     result.add(unmodifiableList(columns));\n                 }\n             }\n-            return result.build();\n+            List<List<Object>> results = result.build();\n+\n+            // Based on com.facebook.presto.server.protocol.Query#getNextResult\n+            OptionalLong updateCount = OptionalLong.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4MzkwMA=="}, "originalCommit": {"oid": "1d23871b17dad2d27628c051de9a485b22e9b195"}, "originalPosition": 200}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk4Mzk2NA==", "bodyText": "Yeah I am wondering whether this class should still be called PrestoSparkQueryInfo -- it's based on QueryInfo at beginning but now we have remodel it to more like QueryResults.. \ud83d\ude04\nNot QueryResults in Presto classic implements two interface: QueryData and QueryStatusInfo. Does it resembles QueryStatusInfo more now?", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r475983964", "createdAt": "2020-08-25T00:05:24Z", "author": {"login": "wenleix"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java", "diffHunk": "@@ -698,7 +785,27 @@ else if (executionException instanceof PrestoSparkExecutionException) {\n                     result.add(unmodifiableList(columns));\n                 }\n             }\n-            return result.build();\n+            List<List<Object>> results = result.build();\n+\n+            // Based on com.facebook.presto.server.protocol.Query#getNextResult\n+            OptionalLong updateCount = OptionalLong.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4MzkwMA=="}, "originalCommit": {"oid": "1d23871b17dad2d27628c051de9a485b22e9b195"}, "originalPosition": 200}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU2NzM0MQ==", "bodyText": "Yeah. Let me rename it to PrestoSparkQueryStatusInfo. I would love to keep the updateCount as is to keep it binary compatible with QueryResults, so we can reuse the tools that process it.", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r476567341", "createdAt": "2020-08-25T16:09:52Z", "author": {"login": "arhimondr"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java", "diffHunk": "@@ -698,7 +785,27 @@ else if (executionException instanceof PrestoSparkExecutionException) {\n                     result.add(unmodifiableList(columns));\n                 }\n             }\n-            return result.build();\n+            List<List<Object>> results = result.build();\n+\n+            // Based on com.facebook.presto.server.protocol.Query#getNextResult\n+            OptionalLong updateCount = OptionalLong.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4MzkwMA=="}, "originalCommit": {"oid": "1d23871b17dad2d27628c051de9a485b22e9b195"}, "originalPosition": 200}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NTcwMTcwOnYy", "diffSide": "RIGHT", "path": "presto-spark-launcher/src/main/java/com/facebook/presto/spark/launcher/PrestoSparkRunner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMzo0MDowM1rOHF6raQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNjowNTo1OFrOHGfMog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk2NjMxMw==", "bodyText": "Curious about the usage of principal, extraCredentials and traceToken? -- probably relate to security story?", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r475966313", "createdAt": "2020-08-24T23:40:03Z", "author": {"login": "wenleix"}, "path": "presto-spark-launcher/src/main/java/com/facebook/presto/spark/launcher/PrestoSparkRunner.java", "diffHunk": "@@ -63,26 +63,39 @@ public PrestoSparkRunner(PrestoSparkDistribution distribution)\n     }\n \n     public void run(\n+            String user,\n+            Optional<Principal> principal,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32dbce345f85c8754f460bfeea9c876ef563c924"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU2NDY0Mg==", "bodyText": "Yeah. I just wanted to expose all required parameters since I'm already modifying the interface.", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r476564642", "createdAt": "2020-08-25T16:05:58Z", "author": {"login": "arhimondr"}, "path": "presto-spark-launcher/src/main/java/com/facebook/presto/spark/launcher/PrestoSparkRunner.java", "diffHunk": "@@ -63,26 +63,39 @@ public PrestoSparkRunner(PrestoSparkDistribution distribution)\n     }\n \n     public void run(\n+            String user,\n+            Optional<Principal> principal,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk2NjMxMw=="}, "originalCommit": {"oid": "32dbce345f85c8754f460bfeea9c876ef563c924"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NTc2ODg5OnYy", "diffSide": "RIGHT", "path": "presto-spark-common/src/main/java/com/facebook/presto/spark/PrestoSparkQueryResults.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMzo1NjoyMlrOHF7YGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMzo1NjoyMlrOHF7YGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk3Nzc1NA==", "bodyText": "Note QueryResults in Presto classic implements two interface: QueryData and QueryStatusInfo. This seems more like QueryData, so maybe PrestoSparkQueryData?", "url": "https://github.com/prestodb/presto/pull/15058#discussion_r475977754", "createdAt": "2020-08-24T23:56:22Z", "author": {"login": "wenleix"}, "path": "presto-spark-common/src/main/java/com/facebook/presto/spark/PrestoSparkQueryResults.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.spark;\n+\n+import com.facebook.presto.client.Column;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.collect.ImmutableList;\n+\n+import java.util.List;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class PrestoSparkQueryResults\n+{\n+    private final List<Column> columns;\n+    private final List<List<Object>> data;\n+\n+    @JsonCreator\n+    public PrestoSparkQueryResults(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab9233e11726b940432b356a44c5447773fce4e5"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3778, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}