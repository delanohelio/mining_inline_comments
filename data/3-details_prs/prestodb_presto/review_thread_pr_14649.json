{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MzA2MTkz", "number": 14649, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo0NDo0N1rOEGCyVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTo1ODozN1rOEGaghQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzcyNTY3OnYy", "diffSide": "RIGHT", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo0NDo0N1rOGkmYzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo0NDo0N1rOGkmYzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMDg2MA==", "bodyText": "I believe we don't use the this. for member variables.", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441030860", "createdAt": "2020-06-16T17:44:47Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java", "diffHunk": "@@ -315,6 +316,12 @@ public int populateFromPqlResults(\n         if (exceptions != null && exceptions.isArray() && exceptions.size() > 0) {\n             // Pinot is known to return exceptions with benign errorcodes like 200\n             // so we treat any exception as an error\n+            if (this.pinotConfig.isRetryPinotException()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51f977b2f83a3974cffdf1ab9a72ead9453113bb"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Nzc0MTkzOnYy", "diffSide": "RIGHT", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotErrorCode.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo0OTowN1rOGkmjBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNzo0OToxOVrOGk51oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMzQ3OQ==", "bodyText": "My understanding is that you intend to retry on 'fetch' exceptions in the broker and segment page source codepaths.\nIf so, how about having a special exception for the 'fetch' exceptions. I don't quite like the idea of having a retriable exception, if what you really want to denote is: a fetch exception that is optionally marked as retriable.", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441033479", "createdAt": "2020-06-16T17:49:07Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotErrorCode.java", "diffHunk": "@@ -34,6 +34,7 @@\n     PINOT_DECODE_ERROR(8, EXTERNAL),\n     PINOT_INVALID_PQL_GENERATED(9, INTERNAL_ERROR),\n     PINOT_INVALID_CONFIGURATION(10, INTERNAL_ERROR),\n+    PINOT_RETRIABLE_EXCEPTION(11, EXTERNAL, true),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51f977b2f83a3974cffdf1ab9a72ead9453113bb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM0OTUzNw==", "bodyText": "Yes, this is for data fetch request to pinot broker/server. Retry will happen if the query got timeout or server is not responding etc.", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441349537", "createdAt": "2020-06-17T07:49:19Z", "author": {"login": "xiangfu0"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotErrorCode.java", "diffHunk": "@@ -34,6 +34,7 @@\n     PINOT_DECODE_ERROR(8, EXTERNAL),\n     PINOT_INVALID_PQL_GENERATED(9, INTERNAL_ERROR),\n     PINOT_INVALID_CONFIGURATION(10, INTERNAL_ERROR),\n+    PINOT_RETRIABLE_EXCEPTION(11, EXTERNAL, true),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMzQ3OQ=="}, "originalCommit": {"oid": "51f977b2f83a3974cffdf1ab9a72ead9453113bb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Nzc0NjE1OnYy", "diffSide": "RIGHT", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo1MDoxNFrOGkmltw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo1MDoxNFrOGkmltw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzNDE2Nw==", "bodyText": "RetryPinotException conveys to me that the pinot exception would be retried.\nHow about the name: isMarkDataFetchExceptionsAsRetriable ?", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441034167", "createdAt": "2020-06-16T17:50:14Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotConfig.java", "diffHunk": "@@ -442,4 +443,16 @@ public PinotConfig setInferTimestampTypeInSchema(boolean inferTimestampTypeInSch\n         this.inferTimestampTypeInSchema = inferTimestampTypeInSchema;\n         return this;\n     }\n+\n+    public boolean isRetryPinotException()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51f977b2f83a3974cffdf1ab9a72ead9453113bb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Nzc0ODMwOnYy", "diffSide": "RIGHT", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSegmentPageSource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo1MDo1MVrOGkmnGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo1MDo1MVrOGkmnGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzNDUyMQ==", "bodyText": "I think presto does not use the this. notation for instance variables", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441034521", "createdAt": "2020-06-16T17:50:51Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSegmentPageSource.java", "diffHunk": "@@ -211,7 +218,7 @@ private void fetchPinotData()\n                     .filter(table -> table != null && table.getNumberOfRows() > 0)\n                     .forEach(dataTable ->\n                     {\n-                        checkExceptions(dataTable, split);\n+                        checkExceptions(dataTable, split, this.pinotConfig.isRetryPinotException());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51f977b2f83a3974cffdf1ab9a72ead9453113bb"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTYwNTk2OnYy", "diffSide": "RIGHT", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotErrorCode.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTo1NzowN1rOGlMcmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMjozOTozMFrOGlZvaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NDQyNQ==", "bodyText": "Is it possible to use the config isMarkDataFetchExceptionsAsRetriable here as the third param (retriable or not) ?", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441654425", "createdAt": "2020-06-17T15:57:07Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotErrorCode.java", "diffHunk": "@@ -34,6 +34,7 @@\n     PINOT_DECODE_ERROR(8, EXTERNAL),\n     PINOT_INVALID_PQL_GENERATED(9, INTERNAL_ERROR),\n     PINOT_INVALID_CONFIGURATION(10, INTERNAL_ERROR),\n+    PINOT_DATA_FETCH_EXCEPTION(11, EXTERNAL, true),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg3MjIzNQ==", "bodyText": "Those are enums, I don't think we can set it with the pinotConfig.", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441872235", "createdAt": "2020-06-17T22:39:30Z", "author": {"login": "xiangfu0"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotErrorCode.java", "diffHunk": "@@ -34,6 +34,7 @@\n     PINOT_DECODE_ERROR(8, EXTERNAL),\n     PINOT_INVALID_PQL_GENERATED(9, INTERNAL_ERROR),\n     PINOT_INVALID_CONFIGURATION(10, INTERNAL_ERROR),\n+    PINOT_DATA_FETCH_EXCEPTION(11, EXTERNAL, true),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NDQyNQ=="}, "originalCommit": {"oid": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTYxMDk1OnYy", "diffSide": "RIGHT", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTo1ODoxOVrOGlMfpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzowNjozMVrOGlaP2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTIwNw==", "bodyText": "I think we can unconditionally throw PINOT_DATA_FETCH_EXCEPTION here, if it is optionally marked as retriable elsewhere. ie, you can just make that change on line 319/326 below", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441655207", "createdAt": "2020-06-17T15:58:19Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java", "diffHunk": "@@ -315,6 +316,12 @@ public int populateFromPqlResults(\n         if (exceptions != null && exceptions.isArray() && exceptions.size() > 0) {\n             // Pinot is known to return exceptions with benign errorcodes like 200\n             // so we treat any exception as an error\n+            if (PinotSessionProperties.isMarkDataFetchExceptionsAsRetriable(session)) {\n+                throw new PinotException(\n+                    PINOT_DATA_FETCH_EXCEPTION,\n+                    Optional.of(pql),\n+                    String.format(\"Query %s encountered retriable exception %s\", pql, exceptions.get(0)));\n+            }\n             throw new PinotException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg3Mjg3OQ==", "bodyText": "I wish I could set it accordingly, but cannot find a way.\nAlso I prefer making this config as a session config, so user can turn it on/off along with retry count without restart presto.", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441872879", "createdAt": "2020-06-17T22:41:32Z", "author": {"login": "xiangfu0"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java", "diffHunk": "@@ -315,6 +316,12 @@ public int populateFromPqlResults(\n         if (exceptions != null && exceptions.isArray() && exceptions.size() > 0) {\n             // Pinot is known to return exceptions with benign errorcodes like 200\n             // so we treat any exception as an error\n+            if (PinotSessionProperties.isMarkDataFetchExceptionsAsRetriable(session)) {\n+                throw new PinotException(\n+                    PINOT_DATA_FETCH_EXCEPTION,\n+                    Optional.of(pql),\n+                    String.format(\"Query %s encountered retriable exception %s\", pql, exceptions.get(0)));\n+            }\n             throw new PinotException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTIwNw=="}, "originalCommit": {"oid": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg3NDQ5MA==", "bodyText": "Fair enough. Can we do this on line 319/326 then ? It would be nice to keep as much of the code common if possible :-)\nthrow new PinotException(\n      PinotSessionProperties.isMarkDataFetchExceptionsAsRetriable(session) ? PINOT_DATA_FETCH_EXCEPTION : PINOT_EXCEPTION,\n                    Optional.of(pql),\n                    String.format(\"Query %s encountered exception %s\", pql, exceptions.get(0)));", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441874490", "createdAt": "2020-06-17T22:46:52Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java", "diffHunk": "@@ -315,6 +316,12 @@ public int populateFromPqlResults(\n         if (exceptions != null && exceptions.isArray() && exceptions.size() > 0) {\n             // Pinot is known to return exceptions with benign errorcodes like 200\n             // so we treat any exception as an error\n+            if (PinotSessionProperties.isMarkDataFetchExceptionsAsRetriable(session)) {\n+                throw new PinotException(\n+                    PINOT_DATA_FETCH_EXCEPTION,\n+                    Optional.of(pql),\n+                    String.format(\"Query %s encountered retriable exception %s\", pql, exceptions.get(0)));\n+            }\n             throw new PinotException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTIwNw=="}, "originalCommit": {"oid": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4MDUzOA==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441880538", "createdAt": "2020-06-17T23:06:31Z", "author": {"login": "xiangfu0"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotBrokerPageSource.java", "diffHunk": "@@ -315,6 +316,12 @@ public int populateFromPqlResults(\n         if (exceptions != null && exceptions.isArray() && exceptions.size() > 0) {\n             // Pinot is known to return exceptions with benign errorcodes like 200\n             // so we treat any exception as an error\n+            if (PinotSessionProperties.isMarkDataFetchExceptionsAsRetriable(session)) {\n+                throw new PinotException(\n+                    PINOT_DATA_FETCH_EXCEPTION,\n+                    Optional.of(pql),\n+                    String.format(\"Query %s encountered retriable exception %s\", pql, exceptions.get(0)));\n+            }\n             throw new PinotException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTIwNw=="}, "originalCommit": {"oid": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTYxMjIxOnYy", "diffSide": "RIGHT", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSegmentPageSource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTo1ODozOFrOGlMgZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzowNjoyNVrOGlaPuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTM5OA==", "bodyText": "same here.", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441655398", "createdAt": "2020-06-17T15:58:38Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSegmentPageSource.java", "diffHunk": "@@ -104,6 +105,12 @@ private static void checkExceptions(DataTable dataTable, PinotSplit split)\n             }\n         });\n         if (!exceptions.isEmpty()) {\n+            if (markDataFetchExceptionsAsRetriable) {\n+                throw new PinotException(\n+                    PINOT_DATA_FETCH_EXCEPTION,\n+                    split.getSegmentPql(),\n+                    String.format(\"Encountered %d retriable pinot exceptions for split %s: %s\", exceptions.size(), split, exceptions));\n+            }\n             throw new PinotException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4MDUwNw==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/14649#discussion_r441880507", "createdAt": "2020-06-17T23:06:25Z", "author": {"login": "xiangfu0"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSegmentPageSource.java", "diffHunk": "@@ -104,6 +105,12 @@ private static void checkExceptions(DataTable dataTable, PinotSplit split)\n             }\n         });\n         if (!exceptions.isEmpty()) {\n+            if (markDataFetchExceptionsAsRetriable) {\n+                throw new PinotException(\n+                    PINOT_DATA_FETCH_EXCEPTION,\n+                    split.getSegmentPql(),\n+                    String.format(\"Encountered %d retriable pinot exceptions for split %s: %s\", exceptions.size(), split, exceptions));\n+            }\n             throw new PinotException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTM5OA=="}, "originalCommit": {"oid": "5a1406d698ee4a2a778ce6f8c0987dff106caa0e"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2448, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}