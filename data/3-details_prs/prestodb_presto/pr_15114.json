{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MjU1MjYy", "number": 15114, "title": "Add waitForMinimumCoordinators to ClusterSizeMonitor", "bodyText": "Test plan - Unit test coverage included in this PR\nExtracted from #15071\nRelated to #10174\n== NO RELEASE NOTE ==", "createdAt": "2020-09-03T00:08:55Z", "url": "https://github.com/prestodb/presto/pull/15114", "merged": true, "mergeCommit": {"oid": "2108955ddce372cfe76275370e04988f8c08dab3"}, "closed": true, "closedAt": "2020-09-16T04:16:54Z", "author": {"login": "tdcmeehan"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFHo4rgBqjM3MjI2NTYwMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJPEYfgBqjM3NzA0NzYxMTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6499032939f6778ffd459a8a9ff791b51fe8a68e", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/6499032939f6778ffd459a8a9ff791b51fe8a68e", "committedDate": "2020-09-03T00:08:08Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}, "afterCommit": {"oid": "1854f3097cc49dfffcec0f9541169a683f6371d8", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/1854f3097cc49dfffcec0f9541169a683f6371d8", "committedDate": "2020-09-03T03:00:41Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1854f3097cc49dfffcec0f9541169a683f6371d8", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/1854f3097cc49dfffcec0f9541169a683f6371d8", "committedDate": "2020-09-03T03:00:41Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}, "afterCommit": {"oid": "6c3473c9b211264b85b06d41b0020042d6d9b746", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/6c3473c9b211264b85b06d41b0020042d6d9b746", "committedDate": "2020-09-03T04:50:45Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c3473c9b211264b85b06d41b0020042d6d9b746", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/6c3473c9b211264b85b06d41b0020042d6d9b746", "committedDate": "2020-09-03T04:50:45Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}, "afterCommit": {"oid": "4a63573a082669bf7d2e57aa51380e24df21902c", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/4a63573a082669bf7d2e57aa51380e24df21902c", "committedDate": "2020-09-03T04:54:44Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4a63573a082669bf7d2e57aa51380e24df21902c", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/4a63573a082669bf7d2e57aa51380e24df21902c", "committedDate": "2020-09-03T04:54:44Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}, "afterCommit": {"oid": "21f362aa6e483b0afdff2a4a9bb6f7dbf3a1c95d", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/21f362aa6e483b0afdff2a4a9bb6f7dbf3a1c95d", "committedDate": "2020-09-03T21:22:28Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21f362aa6e483b0afdff2a4a9bb6f7dbf3a1c95d", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/21f362aa6e483b0afdff2a4a9bb6f7dbf3a1c95d", "committedDate": "2020-09-03T21:22:28Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}, "afterCommit": {"oid": "a980859f6a49d2add84ca9427e3d59e60c8a8178", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/a980859f6a49d2add84ca9427e3d59e60c8a8178", "committedDate": "2020-09-05T20:11:17Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NjAxNDMx", "url": "https://github.com/prestodb/presto/pull/15114#pullrequestreview-485601431", "createdAt": "2020-09-10T05:53:29Z", "commit": {"oid": "a980859f6a49d2add84ca9427e3d59e60c8a8178"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNTo1MzoyOVrOHPkFhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNjowODoxOFrOHPkYpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA4MTkyNg==", "bodyText": "requireNonNull for queryManager, any reason not doing it here?", "url": "https://github.com/prestodb/presto/pull/15114#discussion_r486081926", "createdAt": "2020-09-10T05:53:29Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/ClusterSizeMonitor.java", "diffHunk": "@@ -66,20 +73,27 @@ public ClusterSizeMonitor(InternalNodeManager nodeManager, NodeSchedulerConfig n\n                 nodeManager,\n                 requireNonNull(nodeSchedulerConfig, \"nodeSchedulerConfig is null\").isIncludeCoordinator(),\n                 requireNonNull(queryManagerConfig, \"queryManagerConfig is null\").getRequiredWorkers(),\n-                queryManagerConfig.getRequiredWorkersMaxWait());\n+                queryManagerConfig.getRequiredWorkersMaxWait(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a980859f6a49d2add84ca9427e3d59e60c8a8178"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA4MjA5Mw==", "bodyText": "ditto", "url": "https://github.com/prestodb/presto/pull/15114#discussion_r486082093", "createdAt": "2020-09-10T05:54:05Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/ClusterSizeMonitor.java", "diffHunk": "@@ -66,20 +73,27 @@ public ClusterSizeMonitor(InternalNodeManager nodeManager, NodeSchedulerConfig n\n                 nodeManager,\n                 requireNonNull(nodeSchedulerConfig, \"nodeSchedulerConfig is null\").isIncludeCoordinator(),\n                 requireNonNull(queryManagerConfig, \"queryManagerConfig is null\").getRequiredWorkers(),\n-                queryManagerConfig.getRequiredWorkersMaxWait());\n+                queryManagerConfig.getRequiredWorkersMaxWait(),\n+                requireNonNull(queryManagerConfig, \"queryManagerConfig is null\").getRequiredCoordinators(),\n+                queryManagerConfig.getRequiredCoordinatorsMaxWait());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a980859f6a49d2add84ca9427e3d59e60c8a8178"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA4Mjc2MQ==", "bodyText": "coordinatorMaxWait seems a reasonable name here and also aligns with other arguments.", "url": "https://github.com/prestodb/presto/pull/15114#discussion_r486082761", "createdAt": "2020-09-10T05:56:05Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/ClusterSizeMonitor.java", "diffHunk": "@@ -66,20 +73,27 @@ public ClusterSizeMonitor(InternalNodeManager nodeManager, NodeSchedulerConfig n\n                 nodeManager,\n                 requireNonNull(nodeSchedulerConfig, \"nodeSchedulerConfig is null\").isIncludeCoordinator(),\n                 requireNonNull(queryManagerConfig, \"queryManagerConfig is null\").getRequiredWorkers(),\n-                queryManagerConfig.getRequiredWorkersMaxWait());\n+                queryManagerConfig.getRequiredWorkersMaxWait(),\n+                requireNonNull(queryManagerConfig, \"queryManagerConfig is null\").getRequiredCoordinators(),\n+                queryManagerConfig.getRequiredCoordinatorsMaxWait());\n     }\n \n     public ClusterSizeMonitor(\n             InternalNodeManager nodeManager,\n             boolean includeCoordinator,\n             int executionMinCount,\n-            Duration executionMaxWait)\n+            Duration executionMaxWait,\n+            int minCoordinatorCount,\n+            Duration maxCoordinatorWait)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a980859f6a49d2add84ca9427e3d59e60c8a8178"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA4MzU2NA==", "bodyText": "looks like we need two method one for removing workerSizeFutures and one for removing coordinatorSizeFutures.", "url": "https://github.com/prestodb/presto/pull/15114#discussion_r486083564", "createdAt": "2020-09-10T05:58:32Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/ClusterSizeMonitor.java", "diffHunk": "@@ -131,22 +145,62 @@ public void stop()\n         return future;\n     }\n \n+    public synchronized ListenableFuture<?> waitForMinimumCoordinators()\n+    {\n+        if (currentCoordinatorCount >= minCoordinatorCount) {\n+            return immediateFuture(null);\n+        }\n+\n+        SettableFuture<?> future = SettableFuture.create();\n+        coordinatorSizeFutures.add(future);\n+\n+        // if future does not finish in wait period, complete with an exception\n+        ScheduledFuture<?> timeoutTask = executor.schedule(\n+                () -> {\n+                    synchronized (this) {\n+                        future.setException(new PrestoException(\n+                                GENERIC_INSUFFICIENT_RESOURCES,\n+                                format(\"Insufficient active coordinator nodes. Waited %s for at least %s coordinators, but only %s coordinators are active\", executionMaxWait, 2, currentCoordinatorCount)));\n+                    }\n+                },\n+                maxCoordinatorWait.toMillis(),\n+                MILLISECONDS);\n+\n+        // remove future if finished (e.g., canceled, timed out)\n+        future.addListener(() -> {\n+            timeoutTask.cancel(true);\n+            removeFuture(future);\n+        }, executor);\n+\n+        return future;\n+    }\n+\n     private synchronized void removeFuture(SettableFuture<?> future)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a980859f6a49d2add84ca9427e3d59e60c8a8178"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA4MzY1Mw==", "bodyText": "this will remove this future from workerSizeFutures where it's not present.", "url": "https://github.com/prestodb/presto/pull/15114#discussion_r486083653", "createdAt": "2020-09-10T05:58:49Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/ClusterSizeMonitor.java", "diffHunk": "@@ -131,22 +145,62 @@ public void stop()\n         return future;\n     }\n \n+    public synchronized ListenableFuture<?> waitForMinimumCoordinators()\n+    {\n+        if (currentCoordinatorCount >= minCoordinatorCount) {\n+            return immediateFuture(null);\n+        }\n+\n+        SettableFuture<?> future = SettableFuture.create();\n+        coordinatorSizeFutures.add(future);\n+\n+        // if future does not finish in wait period, complete with an exception\n+        ScheduledFuture<?> timeoutTask = executor.schedule(\n+                () -> {\n+                    synchronized (this) {\n+                        future.setException(new PrestoException(\n+                                GENERIC_INSUFFICIENT_RESOURCES,\n+                                format(\"Insufficient active coordinator nodes. Waited %s for at least %s coordinators, but only %s coordinators are active\", executionMaxWait, 2, currentCoordinatorCount)));\n+                    }\n+                },\n+                maxCoordinatorWait.toMillis(),\n+                MILLISECONDS);\n+\n+        // remove future if finished (e.g., canceled, timed out)\n+        future.addListener(() -> {\n+            timeoutTask.cancel(true);\n+            removeFuture(future);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a980859f6a49d2add84ca9427e3d59e60c8a8178"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA4NTQ2Ng==", "bodyText": "Any specific reason to not use the getActiveNodes and getActiveCoordinator methods here instead and again calculating it?", "url": "https://github.com/prestodb/presto/pull/15114#discussion_r486085466", "createdAt": "2020-09-10T06:04:20Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/ClusterSizeMonitor.java", "diffHunk": "@@ -131,22 +145,62 @@ public void stop()\n         return future;\n     }\n \n+    public synchronized ListenableFuture<?> waitForMinimumCoordinators()\n+    {\n+        if (currentCoordinatorCount >= minCoordinatorCount) {\n+            return immediateFuture(null);\n+        }\n+\n+        SettableFuture<?> future = SettableFuture.create();\n+        coordinatorSizeFutures.add(future);\n+\n+        // if future does not finish in wait period, complete with an exception\n+        ScheduledFuture<?> timeoutTask = executor.schedule(\n+                () -> {\n+                    synchronized (this) {\n+                        future.setException(new PrestoException(\n+                                GENERIC_INSUFFICIENT_RESOURCES,\n+                                format(\"Insufficient active coordinator nodes. Waited %s for at least %s coordinators, but only %s coordinators are active\", executionMaxWait, 2, currentCoordinatorCount)));\n+                    }\n+                },\n+                maxCoordinatorWait.toMillis(),\n+                MILLISECONDS);\n+\n+        // remove future if finished (e.g., canceled, timed out)\n+        future.addListener(() -> {\n+            timeoutTask.cancel(true);\n+            removeFuture(future);\n+        }, executor);\n+\n+        return future;\n+    }\n+\n     private synchronized void removeFuture(SettableFuture<?> future)\n     {\n-        futures.remove(future);\n+        workerSizeFutures.remove(future);\n     }\n \n     private synchronized void updateAllNodes(AllNodes allNodes)\n     {\n-        if (includeCoordinator) {\n-            currentCount = allNodes.getActiveNodes().size();\n-        }\n-        else {\n-            currentCount = Sets.difference(allNodes.getActiveNodes(), allNodes.getActiveCoordinators()).size();\n-        }\n+        currentCount = 0;\n+        currentCoordinatorCount = 0;\n+        allNodes.getActiveNodes().forEach(node -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a980859f6a49d2add84ca9427e3d59e60c8a8178"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA4NjgyMg==", "bodyText": "Not sure how important it is, but if the cluster doesn't have enough coordinator and workers, we should always return not enough coordinator error. With current implementation if could be either one (not enough coordinator/not enough worker) of the error that we return and the behavior is not consistent.\nIf we can guarantee that somehow, that would be great.", "url": "https://github.com/prestodb/presto/pull/15114#discussion_r486086822", "createdAt": "2020-09-10T06:08:18Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/ClusterSizeMonitor.java", "diffHunk": "@@ -131,22 +145,62 @@ public void stop()\n         return future;\n     }\n \n+    public synchronized ListenableFuture<?> waitForMinimumCoordinators()\n+    {\n+        if (currentCoordinatorCount >= minCoordinatorCount) {\n+            return immediateFuture(null);\n+        }\n+\n+        SettableFuture<?> future = SettableFuture.create();\n+        coordinatorSizeFutures.add(future);\n+\n+        // if future does not finish in wait period, complete with an exception\n+        ScheduledFuture<?> timeoutTask = executor.schedule(\n+                () -> {\n+                    synchronized (this) {\n+                        future.setException(new PrestoException(\n+                                GENERIC_INSUFFICIENT_RESOURCES,\n+                                format(\"Insufficient active coordinator nodes. Waited %s for at least %s coordinators, but only %s coordinators are active\", executionMaxWait, 2, currentCoordinatorCount)));\n+                    }\n+                },\n+                maxCoordinatorWait.toMillis(),\n+                MILLISECONDS);\n+\n+        // remove future if finished (e.g., canceled, timed out)\n+        future.addListener(() -> {\n+            timeoutTask.cancel(true);\n+            removeFuture(future);\n+        }, executor);\n+\n+        return future;\n+    }\n+\n     private synchronized void removeFuture(SettableFuture<?> future)\n     {\n-        futures.remove(future);\n+        workerSizeFutures.remove(future);\n     }\n \n     private synchronized void updateAllNodes(AllNodes allNodes)\n     {\n-        if (includeCoordinator) {\n-            currentCount = allNodes.getActiveNodes().size();\n-        }\n-        else {\n-            currentCount = Sets.difference(allNodes.getActiveNodes(), allNodes.getActiveCoordinators()).size();\n-        }\n+        currentCount = 0;\n+        currentCoordinatorCount = 0;\n+        allNodes.getActiveNodes().forEach(node -> {\n+            if (node.isCoordinator()) {\n+                currentCoordinatorCount += 1;\n+                if (!includeCoordinator) {\n+                    return;\n+                }\n+            }\n+            currentCount += 1;\n+        });\n         if (currentCount >= executionMinCount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a980859f6a49d2add84ca9427e3d59e60c8a8178"}, "originalPosition": 130}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a980859f6a49d2add84ca9427e3d59e60c8a8178", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/a980859f6a49d2add84ca9427e3d59e60c8a8178", "committedDate": "2020-09-05T20:11:17Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}, "afterCommit": {"oid": "13f939e5bd5af139c04a5befbadb7378b693d702", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/13f939e5bd5af139c04a5befbadb7378b693d702", "committedDate": "2020-09-11T00:05:52Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MDA4ODkw", "url": "https://github.com/prestodb/presto/pull/15114#pullrequestreview-487008890", "createdAt": "2020-09-11T17:54:26Z", "commit": {"oid": "13f939e5bd5af139c04a5befbadb7378b693d702"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MDkwODgz", "url": "https://github.com/prestodb/presto/pull/15114#pullrequestreview-487090883", "createdAt": "2020-09-11T20:04:25Z", "commit": {"oid": "13f939e5bd5af139c04a5befbadb7378b693d702"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMDowNDoyNVrOHQsQAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMDoxODo0MlrOHQsn2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI2NDI1OQ==", "bodyText": "should we rename this to currentWorkerCount to make it clearer?", "url": "https://github.com/prestodb/presto/pull/15114#discussion_r487264259", "createdAt": "2020-09-11T20:04:25Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/ClusterSizeMonitor.java", "diffHunk": "@@ -57,7 +59,13 @@\n     private int currentCount;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13f939e5bd5af139c04a5befbadb7378b693d702"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI3MDM2MA==", "bodyText": "instead of having 2 different functions - do you feel we should have a single function waitForMinimumNodes() (or some better name) which takes into account both workers and coordinators? Also, this PR does not use this function yet, will this be followed up in a separate PR? If yes, I am curious why?", "url": "https://github.com/prestodb/presto/pull/15114#discussion_r487270360", "createdAt": "2020-09-11T20:18:42Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/ClusterSizeMonitor.java", "diffHunk": "@@ -125,15 +140,50 @@ public void stop()\n         // remove future if finished (e.g., canceled, timed out)\n         future.addListener(() -> {\n             timeoutTask.cancel(true);\n-            removeFuture(future);\n+            removeWorkerFuture(future);\n         }, executor);\n \n         return future;\n     }\n \n-    private synchronized void removeFuture(SettableFuture<?> future)\n+    public synchronized ListenableFuture<?> waitForMinimumCoordinators()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13f939e5bd5af139c04a5befbadb7378b693d702"}, "originalPosition": 75}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "13f939e5bd5af139c04a5befbadb7378b693d702", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/13f939e5bd5af139c04a5befbadb7378b693d702", "committedDate": "2020-09-11T00:05:52Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}, "afterCommit": {"oid": "d62c34afb588ba58b30e948e6bf6f5fea70ac765", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/d62c34afb588ba58b30e948e6bf6f5fea70ac765", "committedDate": "2020-09-11T22:46:24Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3OTQ4NTY2", "url": "https://github.com/prestodb/presto/pull/15114#pullrequestreview-487948566", "createdAt": "2020-09-14T16:31:46Z", "commit": {"oid": "d62c34afb588ba58b30e948e6bf6f5fea70ac765"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNjozMTo0NlrOHRdRUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNjozMTo0NlrOHRdRUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA2NzQxMQ==", "bodyText": "List<SettableFuture<?>>", "url": "https://github.com/prestodb/presto/pull/15114#discussion_r488067411", "createdAt": "2020-09-14T16:31:46Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/ClusterSizeMonitor.java", "diffHunk": "@@ -125,28 +140,69 @@ public void stop()\n         // remove future if finished (e.g., canceled, timed out)\n         future.addListener(() -> {\n             timeoutTask.cancel(true);\n-            removeFuture(future);\n+            removeWorkerFuture(future);\n         }, executor);\n \n         return future;\n     }\n \n-    private synchronized void removeFuture(SettableFuture<?> future)\n+    public synchronized ListenableFuture<?> waitForMinimumCoordinators()\n     {\n-        futures.remove(future);\n+        if (currentCoordinatorCount >= coordinatorMinCount) {\n+            return immediateFuture(null);\n+        }\n+\n+        SettableFuture<?> future = SettableFuture.create();\n+        coordinatorSizeFutures.add(future);\n+\n+        // if future does not finish in wait period, complete with an exception\n+        ScheduledFuture<?> timeoutTask = executor.schedule(\n+                () -> {\n+                    synchronized (this) {\n+                        future.setException(new PrestoException(\n+                                GENERIC_INSUFFICIENT_RESOURCES,\n+                                format(\"Insufficient active coordinator nodes. Waited %s for at least %s coordinators, but only %s coordinators are active\", executionMaxWait, 2, currentCoordinatorCount)));\n+                    }\n+                },\n+                coordinatorMaxWait.toMillis(),\n+                MILLISECONDS);\n+\n+        // remove future if finished (e.g., canceled, timed out)\n+        future.addListener(() -> {\n+            timeoutTask.cancel(true);\n+            removeCoordinatorFuture(future);\n+        }, executor);\n+\n+        return future;\n+    }\n+\n+    private synchronized void removeWorkerFuture(SettableFuture<?> future)\n+    {\n+        workerSizeFutures.remove(future);\n+    }\n+\n+    private synchronized void removeCoordinatorFuture(SettableFuture<?> future)\n+    {\n+        coordinatorSizeFutures.remove(future);\n     }\n \n     private synchronized void updateAllNodes(AllNodes allNodes)\n     {\n         if (includeCoordinator) {\n-            currentCount = allNodes.getActiveNodes().size();\n+            currentWorkerCount = allNodes.getActiveNodes().size();\n         }\n         else {\n-            currentCount = Sets.difference(allNodes.getActiveNodes(), allNodes.getActiveCoordinators()).size();\n+            currentWorkerCount = Sets.difference(allNodes.getActiveNodes(), allNodes.getActiveCoordinators()).size();\n+        }\n+        currentCoordinatorCount = allNodes.getActiveCoordinators().size();\n+        if (currentWorkerCount >= workerMinCount) {\n+            ImmutableList<SettableFuture<?>> listeners = ImmutableList.copyOf(workerSizeFutures);\n+            workerSizeFutures.clear();\n+            executor.submit(() -> listeners.forEach(listener -> listener.set(null)));\n         }\n-        if (currentCount >= executionMinCount) {\n-            ImmutableList<SettableFuture<?>> listeners = ImmutableList.copyOf(futures);\n-            futures.clear();\n+        if (currentCoordinatorCount >= coordinatorMinCount) {\n+            ImmutableList<SettableFuture<?>> listeners = ImmutableList.copyOf(coordinatorSizeFutures);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62c34afb588ba58b30e948e6bf6f5fea70ac765"}, "originalPosition": 159}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "446be0cfc20ffc36cfaf7fb91f431b4b1a8f879e", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/446be0cfc20ffc36cfaf7fb91f431b4b1a8f879e", "committedDate": "2020-09-15T21:55:42Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d62c34afb588ba58b30e948e6bf6f5fea70ac765", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/d62c34afb588ba58b30e948e6bf6f5fea70ac765", "committedDate": "2020-09-11T22:46:24Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}, "afterCommit": {"oid": "446be0cfc20ffc36cfaf7fb91f431b4b1a8f879e", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/446be0cfc20ffc36cfaf7fb91f431b4b1a8f879e", "committedDate": "2020-09-15T21:55:42Z", "message": "Add waitForMinimumCoordinators to ClusterSizeMonitor"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 57, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}