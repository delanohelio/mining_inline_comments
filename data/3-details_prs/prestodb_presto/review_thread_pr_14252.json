{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MDYzOTk0", "number": 14252, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDo1MDo0NlrODoXitg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDo1NDozNFrODoXpzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjU1MzUwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PushdownSubfields.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDo1MDo0NlrOF233dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMzoxNDozNlrOF3I8XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA4Mjc0MA==", "bodyText": "Do we need the same check at L501?", "url": "https://github.com/prestodb/presto/pull/14252#discussion_r393082740", "createdAt": "2020-03-16T14:50:46Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PushdownSubfields.java", "diffHunk": "@@ -520,6 +520,9 @@ private static String getColumnName(Session session, Metadata metadata, TableHan\n \n                     if (indexExpression instanceof ConstantExpression) {\n                         Object index = ((ConstantExpression) indexExpression).getValue();\n+                        if (index == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a7342b7347eeb1a4db1c2c0f059068e9a3ab08d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM2MDc2Mw==", "bodyText": "I haven't been able to come with a testcase where deference + index expression results in null though", "url": "https://github.com/prestodb/presto/pull/14252#discussion_r393360763", "createdAt": "2020-03-16T23:08:45Z", "author": {"login": "bhhari"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PushdownSubfields.java", "diffHunk": "@@ -520,6 +520,9 @@ private static String getColumnName(Session session, Metadata metadata, TableHan\n \n                     if (indexExpression instanceof ConstantExpression) {\n                         Object index = ((ConstantExpression) indexExpression).getValue();\n+                        if (index == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA4Mjc0MA=="}, "originalCommit": {"oid": "0a7342b7347eeb1a4db1c2c0f059068e9a3ab08d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM2MjUyNA==", "bodyText": "@bhhari I guess this is not possible. In that case, perhaps, add a verify(index != null, \"\") call.", "url": "https://github.com/prestodb/presto/pull/14252#discussion_r393362524", "createdAt": "2020-03-16T23:14:36Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PushdownSubfields.java", "diffHunk": "@@ -520,6 +520,9 @@ private static String getColumnName(Session session, Metadata metadata, TableHan\n \n                     if (indexExpression instanceof ConstantExpression) {\n                         Object index = ((ConstantExpression) indexExpression).getValue();\n+                        if (index == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA4Mjc0MA=="}, "originalCommit": {"oid": "0a7342b7347eeb1a4db1c2c0f059068e9a3ab08d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjU1NzE1OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHivePushdownFilterQueries.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDo1MToyN1rOF235oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDo1MToyN1rOF235oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA4MzI5Ng==", "bodyText": "Planner tests better go to TestHiveLogicalPlanner", "url": "https://github.com/prestodb/presto/pull/14252#discussion_r393083296", "createdAt": "2020-03-16T14:51:27Z", "author": {"login": "mbasmanova"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHivePushdownFilterQueries.java", "diffHunk": "@@ -877,6 +877,15 @@ public void testStructSchemaEvolution()\n         assertQuery(\"SELECT * FROM test_struct_add_column\", \"SELECT (1, 2, 3) UNION ALL SELECT (1, 2, null)\");\n     }\n \n+    @Test\n+    public void testOptimizedSubscriptExpression()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a7342b7347eeb1a4db1c2c0f059068e9a3ab08d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjU3MTY3OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHivePushdownFilterQueries.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDo1NDozNFrOF24CeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMzowOTowNlrOF3I12g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA4NTU2MQ==", "bodyText": "We need to use unique table names to allow tests to run concurrently. To make sure table names don't repeat, we tend to use names that match the test name. Here, it would be test_optimized_subscript_expression.", "url": "https://github.com/prestodb/presto/pull/14252#discussion_r393085561", "createdAt": "2020-03-16T14:54:34Z", "author": {"login": "mbasmanova"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHivePushdownFilterQueries.java", "diffHunk": "@@ -877,6 +877,15 @@ public void testStructSchemaEvolution()\n         assertQuery(\"SELECT * FROM test_struct_add_column\", \"SELECT (1, 2, 3) UNION ALL SELECT (1, 2, null)\");\n     }\n \n+    @Test\n+    public void testOptimizedSubscriptExpression()\n+    {\n+        getQueryRunner().execute(\"CREATE TABLE test_varchar_maps AS \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a7342b7347eeb1a4db1c2c0f059068e9a3ab08d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM2MDg1OA==", "bodyText": "added the test in planner", "url": "https://github.com/prestodb/presto/pull/14252#discussion_r393360858", "createdAt": "2020-03-16T23:09:06Z", "author": {"login": "bhhari"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHivePushdownFilterQueries.java", "diffHunk": "@@ -877,6 +877,15 @@ public void testStructSchemaEvolution()\n         assertQuery(\"SELECT * FROM test_struct_add_column\", \"SELECT (1, 2, 3) UNION ALL SELECT (1, 2, null)\");\n     }\n \n+    @Test\n+    public void testOptimizedSubscriptExpression()\n+    {\n+        getQueryRunner().execute(\"CREATE TABLE test_varchar_maps AS \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA4NTU2MQ=="}, "originalCommit": {"oid": "0a7342b7347eeb1a4db1c2c0f059068e9a3ab08d"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2910, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}