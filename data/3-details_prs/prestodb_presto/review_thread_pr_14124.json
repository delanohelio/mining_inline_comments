{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3ODQ0MDg4", "number": 14124, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjo1OToyMFrODhtVbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODo1MToyN1rODhzgYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjcyMzY3OnYy", "diffSide": "RIGHT", "path": "presto-orc/src/main/java/com/facebook/presto/orc/reader/LongDirectSelectiveStreamReader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjo1OToyMVrOFsmIuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjo1OToyMVrOFsmIuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMwNjQ4OA==", "bodyText": "This can be readOffset = offset + positionCount;", "url": "https://github.com/prestodb/presto/pull/14124#discussion_r382306488", "createdAt": "2020-02-20T22:59:21Z", "author": {"login": "yingsu00"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/reader/LongDirectSelectiveStreamReader.java", "diffHunk": "@@ -115,6 +115,25 @@ public int read(int offset, int[] positions, int positionCount)\n                 skip(offset - readOffset);\n             }\n \n+            if (positions[positionCount - 1] == positionCount - 1) {\n+                // no skipping\n+                if (presentStream == null) {\n+                    // no nulls\n+                    if (!outputRequired && filter != null && !filter.isPositionalFilter()) {\n+                        // no output; just filter\n+                        for (int i = 0; i < positionCount; i++) {\n+                            long value = dataStream.next();\n+                            if (filter.testLong(value)) {\n+                                outputPositions[outputPositionCount] = positions[i];\n+                                outputPositionCount++;\n+                            }\n+                        }\n+                        readOffset = offset + positions[positionCount - 1] + 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec20ae17f7884244ef25414d2bcb429e3733ec44"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzczNDcyOnYy", "diffSide": "RIGHT", "path": "presto-orc/src/main/java/com/facebook/presto/orc/TupleDomainFilter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODo1MToyN1rOFsvlPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODo1MToyN1rOFsvlPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ2MTI0Nw==", "bodyText": "javadoc maybe", "url": "https://github.com/prestodb/presto/pull/14124#discussion_r382461247", "createdAt": "2020-02-21T08:51:27Z", "author": {"login": "highker"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/TupleDomainFilter.java", "diffHunk": "@@ -93,6 +93,9 @@\n      */\n     int getSucceedingPositionsToFail();\n \n+    // Returns true if getPrecedingPositionsToFail or getSucceedingPositionsToFail may return non-zero values", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f6c4e13ece8f52d540a7e887acfa71d561099c"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3051, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}