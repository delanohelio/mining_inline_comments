{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNDgwNzc4", "number": 15455, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxODo1MToyNlrOE7MeaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxOTo0Mzo0MVrOFO0uwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTA1ODMzOnYy", "diffSide": "RIGHT", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/framework/VerificationContext.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxODo1MToyNlrOH2s5jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxOTo0MjoxM1rOIT0RiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEyMDc4Mw==", "bodyText": "The reason we have queryExceptions here in the VerificationContext, is that we eventually calls VerificationContext.getQueryFailures to gather the list of all exceptions seen during verification of a test cases, including the retries. Adding clientExceptions here but not using it is not helpful.\nInstead, we should create a subclass of QueryException, and make ClientException the cause of it.", "url": "https://github.com/prestodb/presto/pull/15455#discussion_r527120783", "createdAt": "2020-11-19T18:51:26Z", "author": {"login": "caithagoras"}, "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/framework/VerificationContext.java", "diffHunk": "@@ -29,22 +30,25 @@\n \n     private final int resubmissionCount;\n     private final Set<QueryException> queryExceptions;\n+    private final Set<ClientException> clientExceptions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "484c26a692670cd93099f7d07e33be10690a42aa"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUxNzI4NQ==", "bodyText": "Addressed it.", "url": "https://github.com/prestodb/presto/pull/15455#discussion_r553517285", "createdAt": "2021-01-07T18:50:48Z", "author": {"login": "swapsmagic"}, "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/framework/VerificationContext.java", "diffHunk": "@@ -29,22 +30,25 @@\n \n     private final int resubmissionCount;\n     private final Set<QueryException> queryExceptions;\n+    private final Set<ClientException> clientExceptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEyMDc4Mw=="}, "originalCommit": {"oid": "484c26a692670cd93099f7d07e33be10690a42aa"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTY2ODQ5NA==", "bodyText": "This, along with this class, to be unchanged?", "url": "https://github.com/prestodb/presto/pull/15455#discussion_r555668494", "createdAt": "2021-01-12T10:31:06Z", "author": {"login": "caithagoras"}, "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/framework/VerificationContext.java", "diffHunk": "@@ -29,22 +30,25 @@\n \n     private final int resubmissionCount;\n     private final Set<QueryException> queryExceptions;\n+    private final Set<ClientException> clientExceptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEyMDc4Mw=="}, "originalCommit": {"oid": "484c26a692670cd93099f7d07e33be10690a42aa"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzY1MDMxMg==", "bodyText": "yes removed the extra code", "url": "https://github.com/prestodb/presto/pull/15455#discussion_r557650312", "createdAt": "2021-01-14T19:42:13Z", "author": {"login": "swapsmagic"}, "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/framework/VerificationContext.java", "diffHunk": "@@ -29,22 +30,25 @@\n \n     private final int resubmissionCount;\n     private final Set<QueryException> queryExceptions;\n+    private final Set<ClientException> clientExceptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEyMDc4Mw=="}, "originalCommit": {"oid": "484c26a692670cd93099f7d07e33be10690a42aa"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTA3Mzg3OnYy", "diffSide": "RIGHT", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/JdbcPrestoAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxODo1NToyOFrOH2tDOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxODo1MDo1OVrOIP4BMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEyMzI1Ng==", "bodyText": "Having nested retry could drastically increase the max retry time because they're multiplicative. What about retry request throttling as part of the cluster connection retry?", "url": "https://github.com/prestodb/presto/pull/15455#discussion_r527123256", "createdAt": "2020-11-19T18:55:28Z", "author": {"login": "caithagoras"}, "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/JdbcPrestoAction.java", "diffHunk": "@@ -120,9 +129,11 @@ public QueryActionStats execute(Statement statement, QueryStage queryStage)\n     {\n         return prestoRetry.run(\n                 \"presto\",\n-                () -> networkRetry.run(\n-                        \"presto-cluster-connection\",\n-                        () -> executeOnce(statement, queryStage, statementExecutor)));\n+                () -> throttleRetry.run(\n+                        \"request-throttle\",\n+                        () -> networkRetry.run(\n+                                \"presto-cluster-connection\",\n+                                () -> executeOnce(statement, queryStage, statementExecutor))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "484c26a692670cd93099f7d07e33be10690a42aa"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUxNzM2Mw==", "bodyText": "merged it into network retry", "url": "https://github.com/prestodb/presto/pull/15455#discussion_r553517363", "createdAt": "2021-01-07T18:50:59Z", "author": {"login": "swapsmagic"}, "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/JdbcPrestoAction.java", "diffHunk": "@@ -120,9 +129,11 @@ public QueryActionStats execute(Statement statement, QueryStage queryStage)\n     {\n         return prestoRetry.run(\n                 \"presto\",\n-                () -> networkRetry.run(\n-                        \"presto-cluster-connection\",\n-                        () -> executeOnce(statement, queryStage, statementExecutor)));\n+                () -> throttleRetry.run(\n+                        \"request-throttle\",\n+                        () -> networkRetry.run(\n+                                \"presto-cluster-connection\",\n+                                () -> executeOnce(statement, queryStage, statementExecutor))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEyMzI1Ng=="}, "originalCommit": {"oid": "484c26a692670cd93099f7d07e33be10690a42aa"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxMDg4MzIxOnYy", "diffSide": "RIGHT", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxOTo0Mzo0MVrOIT0UfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxOTo1NTo1OFrOIT06Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzY1MTA2OA==", "bodyText": "What about being a bit more flexible and resilient to future changes?\nt instanceof RuntimeException\n\nAlso, where is ClientException? Is t not going to be a ClientException?", "url": "https://github.com/prestodb/presto/pull/15455#discussion_r557651068", "createdAt": "2021-01-14T19:43:41Z", "author": {"login": "caithagoras"}, "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "diffHunk": "@@ -205,6 +211,17 @@ public static boolean isClusterConnectionException(Throwable t)\n         return Optional.empty();\n     }\n \n+    private static Optional<Throwable> getRequestThrottleExceptionCause(Throwable t)\n+    {\n+        while (t != null) {\n+            if (t.getClass().equals(RuntimeException.class) && t.getMessage() != null && t.getMessage().contains(\"Request throttled\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c2d8d75556540439a9112462a1404feaddcdd3f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzY2MDc1MA==", "bodyText": "Yes t is not going to be ClientException. It's going to be RuntimeException thrown by PrestoStatement#internalExecute method wrapped under SqlException", "url": "https://github.com/prestodb/presto/pull/15455#discussion_r557660750", "createdAt": "2021-01-14T19:55:58Z", "author": {"login": "swapsmagic"}, "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "diffHunk": "@@ -205,6 +211,17 @@ public static boolean isClusterConnectionException(Throwable t)\n         return Optional.empty();\n     }\n \n+    private static Optional<Throwable> getRequestThrottleExceptionCause(Throwable t)\n+    {\n+        while (t != null) {\n+            if (t.getClass().equals(RuntimeException.class) && t.getMessage() != null && t.getMessage().contains(\"Request throttled\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzY1MTA2OA=="}, "originalCommit": {"oid": "2c2d8d75556540439a9112462a1404feaddcdd3f"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3408, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}