{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0ODc0MTg0", "number": 14990, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNzozNjowN1rOEWr1FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNzozNjowN1rOEWr1FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjIyMjI5OnYy", "diffSide": "RIGHT", "path": "presto-common/src/main/java/com/facebook/presto/common/function/SqlFunctionProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNzozNjowN1rOG-EGgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMjoyNTowN1rOG-h3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzczMjA5Nw==", "bodyText": "It's not property to have this in presto-common. Presto common is only for extremely generic flags.", "url": "https://github.com/prestodb/presto/pull/14990#discussion_r467732097", "createdAt": "2020-08-10T07:36:07Z", "author": {"login": "highker"}, "path": "presto-common/src/main/java/com/facebook/presto/common/function/SqlFunctionProperties.java", "diffHunk": "@@ -24,6 +24,7 @@\n {\n     private final boolean parseDecimalLiteralAsDouble;\n     private final boolean legacyRowFieldOrdinalAccessEnabled;\n+    private final boolean legacyTypeCoercionWarningEnabled;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dabde6660bbdb122f831c6b5b2104c61712707ab"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIxOTY5Ng==", "bodyText": "Per offline discussion, we will keep this in SqlFunctionProperties.\nThere are multiple options regarding this warning flag:\n\nAlways check type and print warning regardless of whether legacy mode is on or off. This might have performance implication.\nAlways use FeaturesConfig#isLegacyDateTimestampToVarcharCoercion. The downside is that all non-injected class would have to change constructor to adopt this. The fanout is non-trivial given there are a lot of static method trying to create ExpressionAnalyzer.\nAdd session property to determine if we want to check for warning, but does not put it into SqlFunctionProperties. This means a lot of ExpressionCompiler related class (and their caller) needs to be changed, specifically, it changes all CacheKey-like classes. The fanout is also non-trivial.\nAdd this session property into SqlFunctionProperties, which seems to be the cleanest way, and there are several session property already resides in this class.", "url": "https://github.com/prestodb/presto/pull/14990#discussion_r468219696", "createdAt": "2020-08-10T22:25:07Z", "author": {"login": "shixuan-fan"}, "path": "presto-common/src/main/java/com/facebook/presto/common/function/SqlFunctionProperties.java", "diffHunk": "@@ -24,6 +24,7 @@\n {\n     private final boolean parseDecimalLiteralAsDouble;\n     private final boolean legacyRowFieldOrdinalAccessEnabled;\n+    private final boolean legacyTypeCoercionWarningEnabled;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzczMjA5Nw=="}, "originalCommit": {"oid": "dabde6660bbdb122f831c6b5b2104c61712707ab"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2277, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}