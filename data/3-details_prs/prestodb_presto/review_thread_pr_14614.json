{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MTU3NDM2", "number": 14614, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTo0Nzo1MlrOEDE8WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTo1MDowNFrOEDo6TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjYyMTY5OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTo0Nzo1MlrOGf7OsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOTozODowOFrOGgtnZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyOTQ1Nw==", "bodyText": "Hmm, here you want to wrap the warning in the PrestoException so you will get better context.", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r436129457", "createdAt": "2020-06-05T19:47:52Z", "author": {"login": "kaikalur"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java", "diffHunk": "@@ -43,9 +45,18 @@ public DefaultWarningCollector(WarningCollectorConfig config)\n     public synchronized void add(PrestoWarning warning)\n     {\n         requireNonNull(warning, \"warning is null\");\n-        if (warnings.size() < config.getMaxWarnings()) {\n-            warnings.putIfAbsent(warning.getWarningCode(), warning);\n+        switch(config.getWarningHandlingLevel()) {\n+            case SUPPRESS:\n+                break;\n+            case NORMAL:\n+                if (warnings.size() < config.getMaxWarnings()) {\n+                    warnings.putIfAbsent(warning.getWarningCode(), warning);\n+                }\n+                break;\n+            case AS_ERROR:\n+                throw new PrestoException(StandardErrorCode.WARNING_AS_ERROR, warning.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b546483fbf40cb0ecf9861eead57bb0dfd543934"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1NDk4MA==", "bodyText": "In this case, after speaking with @kaikalur, we agreed that as of now, stack traces are not useful, but we may add the stack trace context in the future for future warnings.", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r436954980", "createdAt": "2020-06-08T19:38:08Z", "author": {"login": "prithvip"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java", "diffHunk": "@@ -43,9 +45,18 @@ public DefaultWarningCollector(WarningCollectorConfig config)\n     public synchronized void add(PrestoWarning warning)\n     {\n         requireNonNull(warning, \"warning is null\");\n-        if (warnings.size() < config.getMaxWarnings()) {\n-            warnings.putIfAbsent(warning.getWarningCode(), warning);\n+        switch(config.getWarningHandlingLevel()) {\n+            case SUPPRESS:\n+                break;\n+            case NORMAL:\n+                if (warnings.size() < config.getMaxWarnings()) {\n+                    warnings.putIfAbsent(warning.getWarningCode(), warning);\n+                }\n+                break;\n+            case AS_ERROR:\n+                throw new PrestoException(StandardErrorCode.WARNING_AS_ERROR, warning.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyOTQ1Nw=="}, "originalCommit": {"oid": "b546483fbf40cb0ecf9861eead57bb0dfd543934"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjIyNTYyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryPreparer.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDoxNjoyOFrOGguynA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTo0ODowOVrOGgxmtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NDIzNg==", "bodyText": "Static import.", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r436974236", "createdAt": "2020-06-08T20:16:28Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryPreparer.java", "diffHunk": "@@ -54,6 +60,12 @@ public PreparedQuery prepareQuery(Session session, String query, WarningCollecto\n             throws ParsingException, PrestoException, SemanticException\n     {\n         Statement wrappedStatement = sqlParser.createStatement(query, createParsingOptions(session, warningCollector));\n+        if (SystemSessionProperties.getWarningHandlingLevel(session) == WarningHandlingLevel.AS_ERROR) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29018f2123184ebd96552ecbc236f0a969f10e19"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NTYzOQ==", "bodyText": "Should you check whether there are warnings before throwing exception?", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r436975639", "createdAt": "2020-06-08T20:19:12Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryPreparer.java", "diffHunk": "@@ -54,6 +60,12 @@ public PreparedQuery prepareQuery(Session session, String query, WarningCollecto\n             throws ParsingException, PrestoException, SemanticException\n     {\n         Statement wrappedStatement = sqlParser.createStatement(query, createParsingOptions(session, warningCollector));\n+        if (SystemSessionProperties.getWarningHandlingLevel(session) == WarningHandlingLevel.AS_ERROR) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NDIzNg=="}, "originalCommit": {"oid": "29018f2123184ebd96552ecbc236f0a969f10e19"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4NzA0Mg==", "bodyText": "Yes I should be checking. I will fix that. Whats the issue with the static import?", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r436987042", "createdAt": "2020-06-08T20:39:23Z", "author": {"login": "prithvip"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryPreparer.java", "diffHunk": "@@ -54,6 +60,12 @@ public PreparedQuery prepareQuery(Session session, String query, WarningCollecto\n             throws ParsingException, PrestoException, SemanticException\n     {\n         Statement wrappedStatement = sqlParser.createStatement(query, createParsingOptions(session, warningCollector));\n+        if (SystemSessionProperties.getWarningHandlingLevel(session) == WarningHandlingLevel.AS_ERROR) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NDIzNg=="}, "originalCommit": {"oid": "29018f2123184ebd96552ecbc236f0a969f10e19"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyMDM0Mg==", "bodyText": "It's just convention. We always do static import unless the function name / constant by itself is too confusing.", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r437020342", "createdAt": "2020-06-08T21:48:09Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryPreparer.java", "diffHunk": "@@ -54,6 +60,12 @@ public PreparedQuery prepareQuery(Session session, String query, WarningCollecto\n             throws ParsingException, PrestoException, SemanticException\n     {\n         Statement wrappedStatement = sqlParser.createStatement(query, createParsingOptions(session, warningCollector));\n+        if (SystemSessionProperties.getWarningHandlingLevel(session) == WarningHandlingLevel.AS_ERROR) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NDIzNg=="}, "originalCommit": {"oid": "29018f2123184ebd96552ecbc236f0a969f10e19"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjIzNzg3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDoyMDoyMlrOGgu6nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDozOTo0NFrOGgvlNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NjI4NQ==", "bodyText": "I'll probably only keep the WarningHandlingLevel as member variable rather than the whole session.", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r436976285", "createdAt": "2020-06-08T20:20:22Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java", "diffHunk": "@@ -33,18 +38,34 @@\n     @GuardedBy(\"this\")\n     private final Map<WarningCode, PrestoWarning> warnings = new LinkedHashMap<>();\n     private final WarningCollectorConfig config;\n+    private final Session session;\n \n-    public DefaultWarningCollector(WarningCollectorConfig config)\n+    public DefaultWarningCollector(WarningCollectorConfig config, Session session)\n     {\n         this.config = requireNonNull(config, \"config is null\");\n+        this.session = session;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29018f2123184ebd96552ecbc236f0a969f10e19"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4NzE5MA==", "bodyText": "Ok will change this.", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r436987190", "createdAt": "2020-06-08T20:39:44Z", "author": {"login": "prithvip"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java", "diffHunk": "@@ -33,18 +38,34 @@\n     @GuardedBy(\"this\")\n     private final Map<WarningCode, PrestoWarning> warnings = new LinkedHashMap<>();\n     private final WarningCollectorConfig config;\n+    private final Session session;\n \n-    public DefaultWarningCollector(WarningCollectorConfig config)\n+    public DefaultWarningCollector(WarningCollectorConfig config, Session session)\n     {\n         this.config = requireNonNull(config, \"config is null\");\n+        this.session = session;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NjI4NQ=="}, "originalCommit": {"oid": "29018f2123184ebd96552ecbc236f0a969f10e19"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjUxMTI4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/dispatcher/DispatchManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTo0ODo1M1rOGgxn6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTo0ODo1M1rOGgxn6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyMDY1MA==", "bodyText": "Static import here as well ;)", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r437020650", "createdAt": "2020-06-08T21:48:53Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/dispatcher/DispatchManager.java", "diffHunk": "@@ -178,7 +179,7 @@ public QueryId createQueryId()\n             session = sessionSupplier.createSession(queryId, sessionContext);\n \n             // prepare query\n-            WarningCollector warningCollector = warningCollectorFactory.create();\n+            WarningCollector warningCollector = warningCollectorFactory.create(SystemSessionProperties.getWarningHandlingLevel(session));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25170b737c0ee901ff416c25f9393b89058e008a"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjUxMzA4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTo0OTozN1rOGgxpEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTo0OTozN1rOGgxpEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyMDk0Ng==", "bodyText": "Static import", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r437020946", "createdAt": "2020-06-08T21:49:37Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java", "diffHunk": "@@ -33,18 +36,34 @@\n     @GuardedBy(\"this\")\n     private final Map<WarningCode, PrestoWarning> warnings = new LinkedHashMap<>();\n     private final WarningCollectorConfig config;\n+    private final WarningHandlingLevel warningHandlingLevel;\n \n-    public DefaultWarningCollector(WarningCollectorConfig config)\n+    public DefaultWarningCollector(WarningCollectorConfig config, WarningHandlingLevel warningHandlingLevel)\n     {\n         this.config = requireNonNull(config, \"config is null\");\n+        this.warningHandlingLevel = warningHandlingLevel;\n     }\n \n     @Override\n     public synchronized void add(PrestoWarning warning)\n     {\n         requireNonNull(warning, \"warning is null\");\n-        if (warnings.size() < config.getMaxWarnings()) {\n-            warnings.putIfAbsent(warning.getWarningCode(), warning);\n+        switch (warningHandlingLevel) {\n+            case SUPPRESS:\n+                break;\n+            case NORMAL:\n+                addWarningIfNumWarningsLessThanConfig(warning);\n+                break;\n+            case AS_ERROR:\n+                /* Parser warnings must be handled differently since we should not throw an exception when parsing.\n+                 * Warnings are collected and an exception with all warnings is thrown in {@link QueryPreparer#prepareQuery}\n+                 */\n+                if (warning.getWarningCode() == StandardWarningCode.PARSER_WARNING.toWarningCode()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25170b737c0ee901ff416c25f9393b89058e008a"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjUxMzgyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTo0OTo0NlrOGgxpeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTo0OTo0NlrOGgxpeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyMTA0OA==", "bodyText": "Same here.", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r437021048", "createdAt": "2020-06-08T21:49:46Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/DefaultWarningCollector.java", "diffHunk": "@@ -33,18 +36,34 @@\n     @GuardedBy(\"this\")\n     private final Map<WarningCode, PrestoWarning> warnings = new LinkedHashMap<>();\n     private final WarningCollectorConfig config;\n+    private final WarningHandlingLevel warningHandlingLevel;\n \n-    public DefaultWarningCollector(WarningCollectorConfig config)\n+    public DefaultWarningCollector(WarningCollectorConfig config, WarningHandlingLevel warningHandlingLevel)\n     {\n         this.config = requireNonNull(config, \"config is null\");\n+        this.warningHandlingLevel = warningHandlingLevel;\n     }\n \n     @Override\n     public synchronized void add(PrestoWarning warning)\n     {\n         requireNonNull(warning, \"warning is null\");\n-        if (warnings.size() < config.getMaxWarnings()) {\n-            warnings.putIfAbsent(warning.getWarningCode(), warning);\n+        switch (warningHandlingLevel) {\n+            case SUPPRESS:\n+                break;\n+            case NORMAL:\n+                addWarningIfNumWarningsLessThanConfig(warning);\n+                break;\n+            case AS_ERROR:\n+                /* Parser warnings must be handled differently since we should not throw an exception when parsing.\n+                 * Warnings are collected and an exception with all warnings is thrown in {@link QueryPreparer#prepareQuery}\n+                 */\n+                if (warning.getWarningCode() == StandardWarningCode.PARSER_WARNING.toWarningCode()) {\n+                    addWarningIfNumWarningsLessThanConfig(warning);\n+                }\n+                else {\n+                    throw new PrestoException(StandardErrorCode.WARNING_AS_ERROR, warning.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25170b737c0ee901ff416c25f9393b89058e008a"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjUxNDY4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/WarningCollectorConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTo1MDowNFrOGgxp8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTo1MDowNFrOGgxp8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyMTE3MQ==", "bodyText": "Static import", "url": "https://github.com/prestodb/presto/pull/14614#discussion_r437021171", "createdAt": "2020-06-08T21:50:04Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/warnings/WarningCollectorConfig.java", "diffHunk": "@@ -20,6 +20,7 @@\n public class WarningCollectorConfig\n {\n     private int maxWarnings = Integer.MAX_VALUE;\n+    private WarningHandlingLevel warningHandlingLevel = WarningHandlingLevel.NORMAL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25170b737c0ee901ff416c25f9393b89058e008a"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2732, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}