{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MzYwNjcx", "number": 14500, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNzozMDoxNFrOD61xyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNzozNjo0M1rOD61zlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDI1MDk3OnYy", "diffSide": "RIGHT", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNzozMDoxNFrOGS5KMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQyMjoxNDowM1rOGS-k1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDA0OQ==", "bodyText": "private?", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422464049", "createdAt": "2020-05-09T07:30:14Z", "author": {"login": "zhenxiao"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -183,4 +185,44 @@ public InputStream handle(Request request, com.facebook.airlift.http.client.Resp\n             }\n         }\n     }\n+    public static class DruidRequestBody", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfe89a20423c973d6e1a6338153474e041f36a4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU1Mjc4OQ==", "bodyText": "private?\n\nYep", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422552789", "createdAt": "2020-05-09T22:14:03Z", "author": {"login": "beinan"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -183,4 +185,44 @@ public InputStream handle(Request request, com.facebook.airlift.http.client.Resp\n             }\n         }\n     }\n+    public static class DruidRequestBody", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDA0OQ=="}, "originalCommit": {"oid": "6dfe89a20423c973d6e1a6338153474e041f36a4"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDI1MTAzOnYy", "diffSide": "RIGHT", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNzozMDoyOFrOGS5KPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQyMjoxNTo0NFrOGS-ldg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDA2MA==", "bodyText": "add blank line below", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422464060", "createdAt": "2020-05-09T07:30:28Z", "author": {"login": "zhenxiao"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -183,4 +185,44 @@ public InputStream handle(Request request, com.facebook.airlift.http.client.Resp\n             }\n         }\n     }\n+    public static class DruidRequestBody\n+    {\n+        private String query;\n+        private String resultFormat;\n+        private boolean queryHeader;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfe89a20423c973d6e1a6338153474e041f36a4"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU1Mjk1MA==", "bodyText": "added", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422552950", "createdAt": "2020-05-09T22:15:44Z", "author": {"login": "beinan"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -183,4 +185,44 @@ public InputStream handle(Request request, com.facebook.airlift.http.client.Resp\n             }\n         }\n     }\n+    public static class DruidRequestBody\n+    {\n+        private String query;\n+        private String resultFormat;\n+        private boolean queryHeader;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDA2MA=="}, "originalCommit": {"oid": "6dfe89a20423c973d6e1a6338153474e041f36a4"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDI1MTc4OnYy", "diffSide": "RIGHT", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNzozMToyMFrOGS5Kmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwNzoxMjoyNFrOGTBdUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDE1NQ==", "bodyText": "this.query = requireNonNull(query);", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422464155", "createdAt": "2020-05-09T07:31:20Z", "author": {"login": "zhenxiao"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -183,4 +185,44 @@ public InputStream handle(Request request, com.facebook.airlift.http.client.Resp\n             }\n         }\n     }\n+    public static class DruidRequestBody\n+    {\n+        private String query;\n+        private String resultFormat;\n+        private boolean queryHeader;\n+        @JsonCreator\n+        public DruidRequestBody(\n+                @JsonProperty(\"query\") String query,\n+                @JsonProperty(\"resultFormat\") String resultFormat,\n+                @JsonProperty(\"queryHeader\") boolean queryHeader)\n+        {\n+            requireNonNull(query);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfe89a20423c973d6e1a6338153474e041f36a4"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU1Mjk4NQ==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422552985", "createdAt": "2020-05-09T22:16:05Z", "author": {"login": "beinan"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -183,4 +185,44 @@ public InputStream handle(Request request, com.facebook.airlift.http.client.Resp\n             }\n         }\n     }\n+    public static class DruidRequestBody\n+    {\n+        private String query;\n+        private String resultFormat;\n+        private boolean queryHeader;\n+        @JsonCreator\n+        public DruidRequestBody(\n+                @JsonProperty(\"query\") String query,\n+                @JsonProperty(\"resultFormat\") String resultFormat,\n+                @JsonProperty(\"queryHeader\") boolean queryHeader)\n+        {\n+            requireNonNull(query);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDE1NQ=="}, "originalCommit": {"oid": "6dfe89a20423c973d6e1a6338153474e041f36a4"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYwMDAxNg==", "bodyText": "remove line 200?", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422600016", "createdAt": "2020-05-10T07:12:24Z", "author": {"login": "zhenxiao"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -183,4 +185,44 @@ public InputStream handle(Request request, com.facebook.airlift.http.client.Resp\n             }\n         }\n     }\n+    public static class DruidRequestBody\n+    {\n+        private String query;\n+        private String resultFormat;\n+        private boolean queryHeader;\n+        @JsonCreator\n+        public DruidRequestBody(\n+                @JsonProperty(\"query\") String query,\n+                @JsonProperty(\"resultFormat\") String resultFormat,\n+                @JsonProperty(\"queryHeader\") boolean queryHeader)\n+        {\n+            requireNonNull(query);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDE1NQ=="}, "originalCommit": {"oid": "6dfe89a20423c973d6e1a6338153474e041f36a4"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDI1MzY5OnYy", "diffSide": "RIGHT", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNzozNDoxM1rOGS5LlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQyMjoxNjoxNFrOGS-lnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDQwNA==", "bodyText": "this. resultFormat = requireNonNull(resultFormat);", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422464404", "createdAt": "2020-05-09T07:34:13Z", "author": {"login": "zhenxiao"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -183,4 +185,44 @@ public InputStream handle(Request request, com.facebook.airlift.http.client.Resp\n             }\n         }\n     }\n+    public static class DruidRequestBody\n+    {\n+        private String query;\n+        private String resultFormat;\n+        private boolean queryHeader;\n+        @JsonCreator\n+        public DruidRequestBody(\n+                @JsonProperty(\"query\") String query,\n+                @JsonProperty(\"resultFormat\") String resultFormat,\n+                @JsonProperty(\"queryHeader\") boolean queryHeader)\n+        {\n+            requireNonNull(query);\n+            this.query = query;\n+            this.resultFormat = resultFormat;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfe89a20423c973d6e1a6338153474e041f36a4"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU1Mjk4OA==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422552988", "createdAt": "2020-05-09T22:16:14Z", "author": {"login": "beinan"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -183,4 +185,44 @@ public InputStream handle(Request request, com.facebook.airlift.http.client.Resp\n             }\n         }\n     }\n+    public static class DruidRequestBody\n+    {\n+        private String query;\n+        private String resultFormat;\n+        private boolean queryHeader;\n+        @JsonCreator\n+        public DruidRequestBody(\n+                @JsonProperty(\"query\") String query,\n+                @JsonProperty(\"resultFormat\") String resultFormat,\n+                @JsonProperty(\"queryHeader\") boolean queryHeader)\n+        {\n+            requireNonNull(query);\n+            this.query = query;\n+            this.resultFormat = resultFormat;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDQwNA=="}, "originalCommit": {"oid": "6dfe89a20423c973d6e1a6338153474e041f36a4"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDI1NTMzOnYy", "diffSide": "RIGHT", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNzozNjoxNVrOGS5MWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQyMjoyNjoxN1rOGS-pVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDYwMw==", "bodyText": "create a private function to add quotes to column names. could be used here and below", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422464603", "createdAt": "2020-05-09T07:36:15Z", "author": {"login": "zhenxiao"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java", "diffHunk": "@@ -168,7 +168,7 @@ public DruidQueryGeneratorContext withAggregation(\n                     String definition = entry.getValue().getDefinition();\n                     int start = definition.indexOf(\"(\");\n                     int end = definition.indexOf(\")\");\n-                    String countDistinctClause = \"count ( distinct \" + definition.substring(start + 1, end) + \")\";\n+                    String countDistinctClause = \"count ( distinct \\\"\" + definition.substring(start + 1, end) + \"\\\")\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfe89a20423c973d6e1a6338153474e041f36a4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU1Mzk0Mw==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422553943", "createdAt": "2020-05-09T22:26:17Z", "author": {"login": "beinan"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java", "diffHunk": "@@ -168,7 +168,7 @@ public DruidQueryGeneratorContext withAggregation(\n                     String definition = entry.getValue().getDefinition();\n                     int start = definition.indexOf(\"(\");\n                     int end = definition.indexOf(\")\");\n-                    String countDistinctClause = \"count ( distinct \" + definition.substring(start + 1, end) + \")\";\n+                    String countDistinctClause = \"count ( distinct \\\"\" + definition.substring(start + 1, end) + \"\\\")\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDYwMw=="}, "originalCommit": {"oid": "6dfe89a20423c973d6e1a6338153474e041f36a4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDI1NTU5OnYy", "diffSide": "RIGHT", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNzozNjo0M1rOGS5Mfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQyMjoyNjoxMlrOGS-pUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDYzOA==", "bodyText": "private function to add quotes to table or column names. could be used here", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422464638", "createdAt": "2020-05-09T07:36:43Z", "author": {"login": "zhenxiao"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java", "diffHunk": "@@ -244,14 +244,14 @@ private boolean hasAggregation()\n         }\n \n         String expressions = selections.entrySet().stream()\n-                .map(s -> s.getValue().getDefinition())\n+                .map(s -> s.getValue().getEscapedDefinition())\n                 .collect(Collectors.joining(\", \"));\n         if (expressions.isEmpty()) {\n             throw new PrestoException(DRUID_QUERY_GENERATOR_FAILURE, \"Empty Druid query\");\n         }\n \n         String tableName = from.orElseThrow(() -> new PrestoException(DRUID_QUERY_GENERATOR_FAILURE, \"Table name missing in Druid query\"));\n-        String query = \"SELECT \" + expressions + \" FROM \" + tableName;\n+        String query = \"SELECT \" + expressions + \" FROM \\\"\" + tableName + \"\\\"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfe89a20423c973d6e1a6338153474e041f36a4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU1MzkzNw==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/14500#discussion_r422553937", "createdAt": "2020-05-09T22:26:12Z", "author": {"login": "beinan"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java", "diffHunk": "@@ -244,14 +244,14 @@ private boolean hasAggregation()\n         }\n \n         String expressions = selections.entrySet().stream()\n-                .map(s -> s.getValue().getDefinition())\n+                .map(s -> s.getValue().getEscapedDefinition())\n                 .collect(Collectors.joining(\", \"));\n         if (expressions.isEmpty()) {\n             throw new PrestoException(DRUID_QUERY_GENERATOR_FAILURE, \"Empty Druid query\");\n         }\n \n         String tableName = from.orElseThrow(() -> new PrestoException(DRUID_QUERY_GENERATOR_FAILURE, \"Table name missing in Druid query\"));\n-        String query = \"SELECT \" + expressions + \" FROM \" + tableName;\n+        String query = \"SELECT \" + expressions + \" FROM \\\"\" + tableName + \"\\\"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDYzOA=="}, "originalCommit": {"oid": "6dfe89a20423c973d6e1a6338153474e041f36a4"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2597, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}