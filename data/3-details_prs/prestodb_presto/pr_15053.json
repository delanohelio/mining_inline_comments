{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMzM2MDMy", "number": 15053, "title": "Fix for Pinot queries where order by column is pruned in projection", "bodyText": "Queries where order by columns are not part of the selection were failing with NullPointerException because column names for order by clause were being taken from final selections.\nTo fix this now we are storing the selections for topN at the time we encounter topN node, which guarantees that the order by columns will be in the contemporary selections.\nTest plan - Tested with failing query shapes, example as below\nselect city\nfrom cityFares\nwhere secondsSinceEpoch > 1597047119\norder by secondsSinceEpoch desc, 1 desc\nlimit 1\n\n== NO RELEASE NOTE ==", "createdAt": "2020-08-19T18:24:27Z", "url": "https://github.com/prestodb/presto/pull/15053", "merged": true, "mergeCommit": {"oid": "f4fd78618cb2dc1cb8f98b6bfe44ef02bd1e7358"}, "closed": true, "closedAt": "2020-08-20T17:42:57Z", "author": {"login": "dharakk"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAh9cegFqTQ3MDkzNTc1Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdArCm0AFqTQ3MTMyMDU0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwOTM1NzU2", "url": "https://github.com/prestodb/presto/pull/15053#pullrequestreview-470935756", "createdAt": "2020-08-19T20:51:12Z", "commit": {"oid": "143c00921744458a3d34ad1ebf5175e67f0f8d41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMDo1MToxMlrOHDYm2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMDo1MToxMlrOHDYm2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMxMDkzNw==", "bodyText": "I understand the fix, but I wanted to discuss a counter proposal: What if selections changes from being the list of final projections to simply being a map that maps a variable to its Pinot selection. That is, it contains all of the selections ever encountered.\nAnd we introduce another notion of a Final project list: List.\nThe problem that is happening is that selections is being overwritten and it no longer contains the ordering variables. What if we always union new things into it instead of overwriting it ?\nI am not sure whether this would pan out or perhaps regress something else.\nIf you think my counter proposal is too much work, then just a note on naming: What do you think of foldinging topNColumnSelections and topNColumnOrderings into one ? Perhaps create a class OrderingInformation that contains (SortOrder, Selection) ? I find the name topNColumnSelections ambiguous and I wonder if fusing it with topNColumnOrderingMap would elide that concern.", "url": "https://github.com/prestodb/presto/pull/15053#discussion_r473310937", "createdAt": "2020-08-19T20:51:12Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -62,6 +62,7 @@\n     private final LinkedHashSet<VariableReferenceExpression> outputs;\n     private final LinkedHashSet<VariableReferenceExpression> groupByColumns;\n     private final LinkedHashMap<VariableReferenceExpression, SortOrder> topNColumnOrderingMap;\n+    private final LinkedHashMap<VariableReferenceExpression, Selection> topNColumnSelections;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "143c00921744458a3d34ad1ebf5175e67f0f8d41"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwOTM4ODI4", "url": "https://github.com/prestodb/presto/pull/15053#pullrequestreview-470938828", "createdAt": "2020-08-19T20:52:37Z", "commit": {"oid": "143c00921744458a3d34ad1ebf5175e67f0f8d41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMDo1MjozN1rOHDYp6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMDo1MjozN1rOHDYp6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMxMTcyMw==", "bodyText": "Any idea whether this issue also impacts the Pinot-SQL query generation logic added by @fx19880617 recently ? Perhaps we need to fix it and add a test for this there as well ?", "url": "https://github.com/prestodb/presto/pull/15053#discussion_r473311723", "createdAt": "2020-08-19T20:52:37Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/query/TestPinotQueryGenerator.java", "diffHunk": "@@ -366,6 +367,8 @@ public void testSimpleSelectWithTopN()\n                 \"SELECT regionId, city, fare FROM realtimeOnly ORDER BY fare, city DESC LIMIT 50\",\n                 defaultSessionHolder,\n                 ImmutableMap.of());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "143c00921744458a3d34ad1ebf5175e67f0f8d41"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "143c00921744458a3d34ad1ebf5175e67f0f8d41", "author": {"user": {"login": "dharakk", "name": "Dharak Kharod"}}, "url": "https://github.com/prestodb/presto/commit/143c00921744458a3d34ad1ebf5175e67f0f8d41", "committedDate": "2020-08-19T18:08:07Z", "message": "Fix for Pinot queries where order by column is pruned in projection"}, "afterCommit": {"oid": "23a8495e0818f4629ea88facf77a18e6af9a5be2", "author": {"user": {"login": "dharakk", "name": "Dharak Kharod"}}, "url": "https://github.com/prestodb/presto/commit/23a8495e0818f4629ea88facf77a18e6af9a5be2", "committedDate": "2020-08-19T23:04:09Z", "message": "Fix for Pinot queries where order by column is pruned in projection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDI1NTI2", "url": "https://github.com/prestodb/presto/pull/15053#pullrequestreview-471025526", "createdAt": "2020-08-19T23:13:58Z", "commit": {"oid": "23a8495e0818f4629ea88facf77a18e6af9a5be2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzoxMzo1OFrOHDfVYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzoxMzo1OFrOHDfVYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQyMTE1NQ==", "bodyText": "Can this class be a private instead of public ? Or package local ?", "url": "https://github.com/prestodb/presto/pull/15053#discussion_r473421155", "createdAt": "2020-08-19T23:13:58Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -617,4 +623,27 @@ public String toString()\n             return definition;\n         }\n     }\n+\n+    // Columns definitions and ordering information for OrderBy Columns\n+    public static class OrderingColumnInformation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23a8495e0818f4629ea88facf77a18e6af9a5be2"}, "originalPosition": 149}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDI1NjQw", "url": "https://github.com/prestodb/presto/pull/15053#pullrequestreview-471025640", "createdAt": "2020-08-19T23:14:16Z", "commit": {"oid": "23a8495e0818f4629ea88facf77a18e6af9a5be2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzoxNDoxN1rOHDfWSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzoxNDoxN1rOHDfWSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQyMTM4NQ==", "bodyText": "requireNonNull on the input arguments ?", "url": "https://github.com/prestodb/presto/pull/15053#discussion_r473421385", "createdAt": "2020-08-19T23:14:17Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -617,4 +623,27 @@ public String toString()\n             return definition;\n         }\n     }\n+\n+    // Columns definitions and ordering information for OrderBy Columns\n+    public static class OrderingColumnInformation\n+    {\n+        private final SortOrder sortOrder;\n+        private final Selection selection;\n+\n+        public OrderingColumnInformation(SortOrder sortOrder, Selection selection)\n+        {\n+            this.sortOrder = sortOrder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23a8495e0818f4629ea88facf77a18e6af9a5be2"}, "originalPosition": 156}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDI1NzA5", "url": "https://github.com/prestodb/presto/pull/15053#pullrequestreview-471025709", "createdAt": "2020-08-19T23:14:28Z", "commit": {"oid": "23a8495e0818f4629ea88facf77a18e6af9a5be2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDI5OTk3", "url": "https://github.com/prestodb/presto/pull/15053#pullrequestreview-471029997", "createdAt": "2020-08-19T23:27:25Z", "commit": {"oid": "23a8495e0818f4629ea88facf77a18e6af9a5be2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzoyNzoyNVrOHDf6Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzoyODoyMFrOHDf8gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQzMDU0Ng==", "bodyText": "How about an ascending order test query here for the Pinot sql case ... Since pinot pql only supports order by desc I believe. (Not sure at all !)", "url": "https://github.com/prestodb/presto/pull/15053#discussion_r473430546", "createdAt": "2020-08-19T23:27:25Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/query/TestPinotQueryGeneratorSql.java", "diffHunk": "@@ -182,6 +182,14 @@ public void testSelectionWithOrderBy()\n                 defaultSessionHolder,\n                 ImmutableMap.of());\n \n+        TopNNode topNNode = topN(planBuilder, 50L, ImmutableList.of(\"fare\", \"city\"), ImmutableList.of(false, false), tableScanNode);\n+        testPinotQuery(\n+                pinotConfig,\n+                project(planBuilder, topNNode, ImmutableList.of(\"regionid\", \"city\")),\n+                \"SELECT regionId, city FROM realtimeOnly ORDER BY fare DESC, city DESC LIMIT 50\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23a8495e0818f4629ea88facf77a18e6af9a5be2"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQzMTE3MA==", "bodyText": "What about Pinot TOP queries (ie aggregation-order-by-limit-desc queries). Do that change too with this PR ?", "url": "https://github.com/prestodb/presto/pull/15053#discussion_r473431170", "createdAt": "2020-08-19T23:28:20Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/query/TestPinotQueryGenerator.java", "diffHunk": "@@ -366,6 +367,8 @@ public void testSimpleSelectWithTopN()\n                 \"SELECT regionId, city, fare FROM realtimeOnly ORDER BY fare, city DESC LIMIT 50\",\n                 defaultSessionHolder,\n                 ImmutableMap.of());\n+        ProjectNode projectNode = project(planBuilder, topnFareAndCity, ImmutableList.of(\"regionid\", \"city\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23a8495e0818f4629ea88facf77a18e6af9a5be2"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23a8495e0818f4629ea88facf77a18e6af9a5be2", "author": {"user": {"login": "dharakk", "name": "Dharak Kharod"}}, "url": "https://github.com/prestodb/presto/commit/23a8495e0818f4629ea88facf77a18e6af9a5be2", "committedDate": "2020-08-19T23:04:09Z", "message": "Fix for Pinot queries where order by column is pruned in projection"}, "afterCommit": {"oid": "3dd23025aa79c546523f33db727727b68e87e194", "author": {"user": {"login": "dharakk", "name": "Dharak Kharod"}}, "url": "https://github.com/prestodb/presto/commit/3dd23025aa79c546523f33db727727b68e87e194", "committedDate": "2020-08-19T23:45:25Z", "message": "Fix for Pinot queries where order by column is pruned in projection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDQ0NDU1", "url": "https://github.com/prestodb/presto/pull/15053#pullrequestreview-471044455", "createdAt": "2020-08-20T00:10:33Z", "commit": {"oid": "23a8495e0818f4629ea88facf77a18e6af9a5be2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDUzNzQ5", "url": "https://github.com/prestodb/presto/pull/15053#pullrequestreview-471053749", "createdAt": "2020-08-20T00:40:41Z", "commit": {"oid": "3dd23025aa79c546523f33db727727b68e87e194"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDo0MDo0MVrOHDi7TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDo0MTo1NlrOHDi-pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ4MDAxMw==", "bodyText": "LinkedHashMap is an implementation, use Map in declaration:\nMap<VariableReferenceExpression, OrderingColumnInformation> orderByColumnInformation = new LinkedHashMap<>();", "url": "https://github.com/prestodb/presto/pull/15053#discussion_r473480013", "createdAt": "2020-08-20T00:40:41Z", "author": {"login": "zhenxiao"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -254,14 +255,18 @@ public PinotQueryGeneratorContext withTopN(LinkedHashMap<VariableReferenceExpres\n             checkSupported(!hasAggregation(), \"Pinot doesn't support ordering on top of the aggregated data\");\n         }\n         int intLimit = checkForValidLimit(limit);\n+\n+        LinkedHashMap<VariableReferenceExpression, OrderingColumnInformation> orderByColumnInformation = new LinkedHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dd23025aa79c546523f33db727727b68e87e194"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ4MDU5NQ==", "bodyText": "do we need this blank line?", "url": "https://github.com/prestodb/presto/pull/15053#discussion_r473480595", "createdAt": "2020-08-20T00:41:30Z", "author": {"login": "zhenxiao"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -538,8 +543,9 @@ public PinotQueryGeneratorContext withOutputColumns(List<VariableReferenceExpres\n         LinkedHashSet<VariableReferenceExpression> newOutputs = new LinkedHashSet<>(outputColumns);\n         outputColumns.forEach(o -> requireNonNull(selections.get(o), String.format(\"Cannot find the selection %s in the original context %s\", o, this)));\n         // Hidden columns flow as is from the previous\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dd23025aa79c546523f33db727727b68e87e194"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ4MDg2OQ==", "bodyText": "use Set for declaration", "url": "https://github.com/prestodb/presto/pull/15053#discussion_r473480869", "createdAt": "2020-08-20T00:41:56Z", "author": {"login": "zhenxiao"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -538,8 +543,9 @@ public PinotQueryGeneratorContext withOutputColumns(List<VariableReferenceExpres\n         LinkedHashSet<VariableReferenceExpression> newOutputs = new LinkedHashSet<>(outputColumns);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dd23025aa79c546523f33db727727b68e87e194"}, "originalPosition": 115}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMTc2ODA5", "url": "https://github.com/prestodb/presto/pull/15053#pullrequestreview-471176809", "createdAt": "2020-08-20T04:16:35Z", "commit": {"oid": "3dd23025aa79c546523f33db727727b68e87e194"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNDoxNjozNVrOHDo74Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNDoxNjozNVrOHDo74Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU3ODQ2NQ==", "bodyText": "get it. Do you think SortedMap and TreeMap could be a candidate to keep the order? We could do it in followup PR.", "url": "https://github.com/prestodb/presto/pull/15053#discussion_r473578465", "createdAt": "2020-08-20T04:16:35Z", "author": {"login": "zhenxiao"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -254,14 +255,18 @@ public PinotQueryGeneratorContext withTopN(LinkedHashMap<VariableReferenceExpres\n             checkSupported(!hasAggregation(), \"Pinot doesn't support ordering on top of the aggregated data\");\n         }\n         int intLimit = checkForValidLimit(limit);\n+\n+        LinkedHashMap<VariableReferenceExpression, OrderingColumnInformation> orderByColumnInformation = new LinkedHashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ4MDAxMw=="}, "originalCommit": {"oid": "3dd23025aa79c546523f33db727727b68e87e194"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4906776fb84ac4e72384c5045056a8d8f362367b", "author": {"user": {"login": "dharakk", "name": "Dharak Kharod"}}, "url": "https://github.com/prestodb/presto/commit/4906776fb84ac4e72384c5045056a8d8f362367b", "committedDate": "2020-08-20T06:51:01Z", "message": "Fix for Pinot queries where order by column is pruned in projection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3dd23025aa79c546523f33db727727b68e87e194", "author": {"user": {"login": "dharakk", "name": "Dharak Kharod"}}, "url": "https://github.com/prestodb/presto/commit/3dd23025aa79c546523f33db727727b68e87e194", "committedDate": "2020-08-19T23:45:25Z", "message": "Fix for Pinot queries where order by column is pruned in projection"}, "afterCommit": {"oid": "4906776fb84ac4e72384c5045056a8d8f362367b", "author": {"user": {"login": "dharakk", "name": "Dharak Kharod"}}, "url": "https://github.com/prestodb/presto/commit/4906776fb84ac4e72384c5045056a8d8f362367b", "committedDate": "2020-08-20T06:51:01Z", "message": "Fix for Pinot queries where order by column is pruned in projection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMzIwNTQ0", "url": "https://github.com/prestodb/presto/pull/15053#pullrequestreview-471320544", "createdAt": "2020-08-20T07:26:00Z", "commit": {"oid": "4906776fb84ac4e72384c5045056a8d8f362367b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 284, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}