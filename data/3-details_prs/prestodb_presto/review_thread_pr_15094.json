{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1MDM4NTgw", "number": 15094, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMToxMzoyN1rOEeGu3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMToxNzoyNFrOEeGwJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDAzMDM4OnYy", "diffSide": "RIGHT", "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/planner/PrestoSparkRddFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMToxMzoyN1rOHJlqZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMToxMzoyN1rOHJlqZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgxNjI5NQ==", "bodyText": "nit: perhaps also check minPartitionCount is at least 1?", "url": "https://github.com/prestodb/presto/pull/15094#discussion_r479816295", "createdAt": "2020-08-30T21:13:27Z", "author": {"login": "wenleix"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/planner/PrestoSparkRddFactory.java", "diffHunk": "@@ -437,13 +438,18 @@ private PrestoSparkTaskSourceRdd createTaskSourcesRdd(\n         int partitionCount = 0;\n         boolean autoTunePartitionCount = isSparkPartitionCountAutoTuneEnabled(session);\n         if (autoTunePartitionCount) {\n+            int minPartitionCount = getMinSparkInputPartitionCountForAutoTune(session);\n             int maxPartitionCount = getMaxSparkInputPartitionCountForAutoTune(session);\n+            checkArgument(minPartitionCount <= maxPartitionCount,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93ecc884e18a35404098f87fe4b8fdfec787f6f0"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDAzMzY1OnYy", "diffSide": "RIGHT", "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/planner/PrestoSparkRddFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMToxNzoyNFrOHJlr9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMToxNzoyNFrOHJlr9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgxNjY5Mw==", "bodyText": "I see. This essentially says, we only want to append to the existing partition if partitionCount is already large than minPartitionCount... Otherwise always create new partition.", "url": "https://github.com/prestodb/presto/pull/15094#discussion_r479816693", "createdAt": "2020-08-30T21:17:24Z", "author": {"login": "wenleix"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/planner/PrestoSparkRddFactory.java", "diffHunk": "@@ -437,13 +438,18 @@ private PrestoSparkTaskSourceRdd createTaskSourcesRdd(\n         int partitionCount = 0;\n         boolean autoTunePartitionCount = isSparkPartitionCountAutoTuneEnabled(session);\n         if (autoTunePartitionCount) {\n+            int minPartitionCount = getMinSparkInputPartitionCountForAutoTune(session);\n             int maxPartitionCount = getMaxSparkInputPartitionCountForAutoTune(session);\n+            checkArgument(minPartitionCount <= maxPartitionCount,\n+                    \"Min partition count for auto tune %s, cannot be larger than max partition count %s\",\n+                    minPartitionCount,\n+                    maxPartitionCount);\n \n             for (int splitIndex = 0; splitIndex < splits.size(); splitIndex++) {\n                 int partitionId;\n                 long splitSizeInBytes = splits.get(splitIndex).getSplit().getConnectorSplit().getSplitSizeInBytes().getAsLong();\n \n-                if ((!queue.isEmpty() && queue.peek().getSplitsInBytes() + splitSizeInBytes <= maxSplitsSizeInBytesPerPartition)\n+                if ((partitionCount >= minPartitionCount && queue.peek().getSplitsInBytes() + splitSizeInBytes <= maxSplitsSizeInBytesPerPartition)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fbecde62fd8edb30e7408c9fd7cbe5d7551ce7e"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3591, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}