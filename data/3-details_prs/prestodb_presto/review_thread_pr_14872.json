{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0ODg5Mjk0", "number": 14872, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDoyNTozM1rOEREgxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDoyODowNlrOERElaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzM1MTc0OnYy", "diffSide": "RIGHT", "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDoyNTozM1rOG1k7tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0NTozMFrOG1tbMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzMjgyMw==", "bodyText": "Let's pass it through the PrestoSparkSessionContext / PrestoSparkSession. The SessionContext interface has the\n    @Nullable\n    String getUserAgent();\n\ndeclared. We just need to implement it in the PrestoSparkSessionContext and in the PrestoSparkSession", "url": "https://github.com/prestodb/presto/pull/14872#discussion_r458832823", "createdAt": "2020-07-22T14:25:33Z", "author": {"login": "arhimondr"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java", "diffHunk": "@@ -215,7 +217,9 @@ public PrestoSparkQueryExecutionFactory(\n     public IPrestoSparkQueryExecution create(\n             SparkContext sparkContext,\n             PrestoSparkSession prestoSparkSession,\n+            Optional<String> userAgent,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5763200b5928f2d30200b26080c790ebd255717"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3MTk1Mw==", "bodyText": "@arhimondr : it's the other way around, PrestoSparkSessionContext is created in PrestoSparkQueryExecutionFactory#create. Thus the user agent need to passed in here (so PrestoSparkSessionContext will have the user agent we want", "url": "https://github.com/prestodb/presto/pull/14872#discussion_r458971953", "createdAt": "2020-07-22T17:45:30Z", "author": {"login": "wenleix"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java", "diffHunk": "@@ -215,7 +217,9 @@ public PrestoSparkQueryExecutionFactory(\n     public IPrestoSparkQueryExecution create(\n             SparkContext sparkContext,\n             PrestoSparkSession prestoSparkSession,\n+            Optional<String> userAgent,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzMjgyMw=="}, "originalCommit": {"oid": "e5763200b5928f2d30200b26080c790ebd255717"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzM2MzYxOnYy", "diffSide": "RIGHT", "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDoyODowNlrOG1lDHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo1ODo0NFrOG1t66g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzNDcxOA==", "bodyText": "Do you think it is necessary to split it on \"\\\\.\"? Shouldn't we just store it as is in a single fragment?", "url": "https://github.com/prestodb/presto/pull/14872#discussion_r458834718", "createdAt": "2020-07-22T14:28:06Z", "author": {"login": "arhimondr"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java", "diffHunk": "@@ -426,6 +435,8 @@ private static QueryInfo createQueryInfo(\n                 succinctBytes(peakTaskUserMemoryInBytes),\n                 succinctBytes(peakTaskTotalMemoryInBytes));\n \n+        Optional<ResourceGroupId> resourceGroupId = sparkQueueName.map(name -> new ResourceGroupId(Arrays.asList(name.split(\"\\\\.\"))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5763200b5928f2d30200b26080c790ebd255717"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4MDA3NA==", "bodyText": "@arhimondr : Long long ago there is a discussion with @raghavsethi  and we agreed \".\" shouldn't be a valid character in resource group name :) ...\nanyhow, assume it doesn't cause trouble, I am happy to just store it in a single fragment.", "url": "https://github.com/prestodb/presto/pull/14872#discussion_r458980074", "createdAt": "2020-07-22T17:58:44Z", "author": {"login": "wenleix"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkQueryExecutionFactory.java", "diffHunk": "@@ -426,6 +435,8 @@ private static QueryInfo createQueryInfo(\n                 succinctBytes(peakTaskUserMemoryInBytes),\n                 succinctBytes(peakTaskTotalMemoryInBytes));\n \n+        Optional<ResourceGroupId> resourceGroupId = sparkQueueName.map(name -> new ResourceGroupId(Arrays.asList(name.split(\"\\\\.\"))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzNDcxOA=="}, "originalCommit": {"oid": "e5763200b5928f2d30200b26080c790ebd255717"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2388, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}