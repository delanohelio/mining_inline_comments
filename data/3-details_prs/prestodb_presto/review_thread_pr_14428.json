{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NzUxMjg2", "number": 14428, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDowMzoxN1rOD1ynAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNDoyMTozNlrOD2tbxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzMwMzA1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDowMzoxN1rOGLZPnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQyMzoyMDowNlrOGL7tZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMTExNg==", "bodyText": "@yingsu00\nnit: consider shortening to Use positionCount >= 10 when nullRate > 0...\nWhat does nullRate can be close to the desired value mean?", "url": "https://github.com/prestodb/presto/pull/14428#discussion_r414601116", "createdAt": "2020-04-24T14:03:17Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java", "diffHunk": "@@ -265,6 +265,7 @@ public static Block createBooleansBlock(Iterable<Boolean> values)\n         return builder.build();\n     }\n \n+    // It is recommended to have positionCount >= 10 when nullRate > 0, so that the nullRate can be close to the desired value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a684268c1bc6eab55f0cf602ecfb5a847df742a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc2ODMyNA==", "bodyText": "@mbasmanova thanks for the suggestion. By nullRate can be close to the desired value, I meant that the actual null rate would be more accurate(close to the specified nullRate) when positionCount is larger.", "url": "https://github.com/prestodb/presto/pull/14428#discussion_r414768324", "createdAt": "2020-04-24T18:10:59Z", "author": {"login": "yingsu00"}, "path": "presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java", "diffHunk": "@@ -265,6 +265,7 @@ public static Block createBooleansBlock(Iterable<Boolean> values)\n         return builder.build();\n     }\n \n+    // It is recommended to have positionCount >= 10 when nullRate > 0, so that the nullRate can be close to the desired value.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMTExNg=="}, "originalCommit": {"oid": "5a684268c1bc6eab55f0cf602ecfb5a847df742a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc2OTU0NQ==", "bodyText": "@yingsu00 Maybe write it like Make sure positionCount is sufficiently large if nullRate is small.", "url": "https://github.com/prestodb/presto/pull/14428#discussion_r414769545", "createdAt": "2020-04-24T18:13:00Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java", "diffHunk": "@@ -265,6 +265,7 @@ public static Block createBooleansBlock(Iterable<Boolean> values)\n         return builder.build();\n     }\n \n+    // It is recommended to have positionCount >= 10 when nullRate > 0, so that the nullRate can be close to the desired value.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMTExNg=="}, "originalCommit": {"oid": "5a684268c1bc6eab55f0cf602ecfb5a847df742a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE2NTc5OQ==", "bodyText": "Thanks @mbasmanova. I updated the comment to be\n// Note: Make sure positionCount is sufficiently large if nullRate is greater than 0", "url": "https://github.com/prestodb/presto/pull/14428#discussion_r415165799", "createdAt": "2020-04-25T23:20:06Z", "author": {"login": "yingsu00"}, "path": "presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java", "diffHunk": "@@ -265,6 +265,7 @@ public static Block createBooleansBlock(Iterable<Boolean> values)\n         return builder.build();\n     }\n \n+    // It is recommended to have positionCount >= 10 when nullRate > 0, so that the nullRate can be close to the desired value.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMTExNg=="}, "originalCommit": {"oid": "5a684268c1bc6eab55f0cf602ecfb5a847df742a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4Njk0MDg0OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNDoyMTozNlrOGMlxHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMzo1MDo1NlrOGM8dPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1NDg3Ng==", "bodyText": "@yingsu00 should this comment be updated to match the rest?", "url": "https://github.com/prestodb/presto/pull/14428#discussion_r415854876", "createdAt": "2020-04-27T14:21:36Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java", "diffHunk": "@@ -708,15 +713,18 @@ public static DictionaryBlock createRandomDictionaryBlock(Block dictionary, int\n \n     public static DictionaryBlock createRandomDictionaryBlock(Block dictionary, int positionCount, boolean isView)\n     {\n+        checkArgument(dictionary.getPositionCount() > 0, format(\"dictionary's positionCount %d is less than or equal to 0\", dictionary.getPositionCount()));\n+\n         int idsOffset = 0;\n         if (isView) {\n             idsOffset = min(ThreadLocalRandom.current().nextInt(dictionary.getPositionCount()), 1);\n         }\n \n-        int[] ids = IntStream.range(0, positionCount + idsOffset).map(i -> ThreadLocalRandom.current().nextInt(dictionary.getPositionCount() / 10)).toArray();\n+        int[] ids = IntStream.range(0, positionCount + idsOffset).map(i -> ThreadLocalRandom.current().nextInt(max(dictionary.getPositionCount() / 10, 1))).toArray();\n         return new DictionaryBlock(idsOffset, positionCount, dictionary, ids, false, randomDictionaryId());\n     }\n \n+    // It is recommended to have positionCount >= (10 / nestedNullRate) when nestedNullRate > 0, so that the nullRate can be close to the desired value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61ea3b30b593ad3c03278a87157af746aa53c889"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIyNjYyMw==", "bodyText": "@mbasmanova   Sorry missed this one. I have updated it to be\n// Note: Make sure positionCount is sufficiently large if nestedNullRate or primitiveNullRate is greater than 0\npublic static Block createRandomBlockForType(", "url": "https://github.com/prestodb/presto/pull/14428#discussion_r416226623", "createdAt": "2020-04-27T23:50:56Z", "author": {"login": "yingsu00"}, "path": "presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java", "diffHunk": "@@ -708,15 +713,18 @@ public static DictionaryBlock createRandomDictionaryBlock(Block dictionary, int\n \n     public static DictionaryBlock createRandomDictionaryBlock(Block dictionary, int positionCount, boolean isView)\n     {\n+        checkArgument(dictionary.getPositionCount() > 0, format(\"dictionary's positionCount %d is less than or equal to 0\", dictionary.getPositionCount()));\n+\n         int idsOffset = 0;\n         if (isView) {\n             idsOffset = min(ThreadLocalRandom.current().nextInt(dictionary.getPositionCount()), 1);\n         }\n \n-        int[] ids = IntStream.range(0, positionCount + idsOffset).map(i -> ThreadLocalRandom.current().nextInt(dictionary.getPositionCount() / 10)).toArray();\n+        int[] ids = IntStream.range(0, positionCount + idsOffset).map(i -> ThreadLocalRandom.current().nextInt(max(dictionary.getPositionCount() / 10, 1))).toArray();\n         return new DictionaryBlock(idsOffset, positionCount, dictionary, ids, false, randomDictionaryId());\n     }\n \n+    // It is recommended to have positionCount >= (10 / nestedNullRate) when nestedNullRate > 0, so that the nullRate can be close to the desired value.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1NDg3Ng=="}, "originalCommit": {"oid": "61ea3b30b593ad3c03278a87157af746aa53c889"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2810, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}