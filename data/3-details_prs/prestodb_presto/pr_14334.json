{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4NDE4MDE4", "number": 14334, "title": "Fix named query output does not match column list", "bodyText": "Resolves #14333\n== RELEASE NOTES ==\n\nGeneral Changes\n* Fix VerifyException when named query is a table reference (:issue:`14333`).", "createdAt": "2020-04-03T22:46:43Z", "url": "https://github.com/prestodb/presto/pull/14334", "merged": true, "mergeCommit": {"oid": "1361d6df2052191e7997f2104f59f11c4e59456d"}, "closed": true, "closedAt": "2020-04-30T21:38:11Z", "author": {"login": "rongrong"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUJTzygBqjMxOTgyODc2ODA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccz3GLAFqTQwMzg4NjU0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23e5709e5f1fe65b8ecd53ca0b1ed94c751437da", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/23e5709e5f1fe65b8ecd53ca0b1ed94c751437da", "committedDate": "2020-04-03T22:36:27Z", "message": "Fix named query output does not match column list\n\nWhen the named query is a TABLE, as in\n  WITH t(x) AS (TABLE qualifiedName)\n\nthe scope of TABLE will include invisible fields. In RelationPlanner::addCoercion, the function\nonly adds coercion for visible fields. However, when it does `verify`, it verifies against all field\ncount of the sub query, causing VerifyException when table `qualifiedName` has invisible columns.\nChange the code to only look at visible fields instead."}, "afterCommit": {"oid": "ad118cd0e4b3fe253a8b53a28f2f6f3e48821198", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/ad118cd0e4b3fe253a8b53a28f2f6f3e48821198", "committedDate": "2020-04-03T23:14:58Z", "message": "Fix named query output does not match column list\n\nWhen the named query is a TABLE, as in\n  WITH t(x) AS (TABLE qualifiedName)\n\nthe scope of TABLE will include invisible fields. In RelationPlanner::addCoercion, the function\nonly adds coercion for visible fields. However, when it does `verify`, it verifies against all field\ncount of the sub query, causing VerifyException when table `qualifiedName` has invisible columns.\nChange the code to only look at visible fields instead."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad118cd0e4b3fe253a8b53a28f2f6f3e48821198", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/ad118cd0e4b3fe253a8b53a28f2f6f3e48821198", "committedDate": "2020-04-03T23:14:58Z", "message": "Fix named query output does not match column list\n\nWhen the named query is a TABLE, as in\n  WITH t(x) AS (TABLE qualifiedName)\n\nthe scope of TABLE will include invisible fields. In RelationPlanner::addCoercion, the function\nonly adds coercion for visible fields. However, when it does `verify`, it verifies against all field\ncount of the sub query, causing VerifyException when table `qualifiedName` has invisible columns.\nChange the code to only look at visible fields instead."}, "afterCommit": {"oid": "cf34c60388517770af3b24f76ec2e679769b87a5", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/cf34c60388517770af3b24f76ec2e679769b87a5", "committedDate": "2020-04-05T04:08:01Z", "message": "Fix named query output does not match column list\n\nWhen the named query is a TABLE, as in\n  WITH t(x) AS (TABLE qualifiedName)\n\nthe scope of TABLE will include invisible fields. In RelationPlanner::addCoercion, the function\nonly adds coercion for visible fields. However, when it does `verify`, it verifies against all field\ncount of the sub query, causing VerifyException when table `qualifiedName` has invisible columns.\nChange the code to only look at visible fields instead.\n\nAlso in StatementAnalyzer::visitTable, the named query should only map column names to visible fields."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48609e9425e2b253aa3ca72c36de416e4900cfd6", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/48609e9425e2b253aa3ca72c36de416e4900cfd6", "committedDate": "2020-04-05T22:46:18Z", "message": "Fix named query output does not match column list\n\nWhen the named query is a TABLE, as in\n  WITH t(x) AS (TABLE qualifiedName)\n\nthe scope of TABLE will include invisible fields. In RelationPlanner::addCoercion, the function\nonly adds coercion for visible fields. However, when it does `verify`, it verifies against all field\ncount of the sub query, causing VerifyException when table `qualifiedName` has invisible columns.\nChange the code to only look at visible fields instead.\n\nAlso in StatementAnalyzer::visitTable, the named query should only map column names to visible fields."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf34c60388517770af3b24f76ec2e679769b87a5", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/cf34c60388517770af3b24f76ec2e679769b87a5", "committedDate": "2020-04-05T04:08:01Z", "message": "Fix named query output does not match column list\n\nWhen the named query is a TABLE, as in\n  WITH t(x) AS (TABLE qualifiedName)\n\nthe scope of TABLE will include invisible fields. In RelationPlanner::addCoercion, the function\nonly adds coercion for visible fields. However, when it does `verify`, it verifies against all field\ncount of the sub query, causing VerifyException when table `qualifiedName` has invisible columns.\nChange the code to only look at visible fields instead.\n\nAlso in StatementAnalyzer::visitTable, the named query should only map column names to visible fields."}, "afterCommit": {"oid": "48609e9425e2b253aa3ca72c36de416e4900cfd6", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/48609e9425e2b253aa3ca72c36de416e4900cfd6", "committedDate": "2020-04-05T22:46:18Z", "message": "Fix named query output does not match column list\n\nWhen the named query is a TABLE, as in\n  WITH t(x) AS (TABLE qualifiedName)\n\nthe scope of TABLE will include invisible fields. In RelationPlanner::addCoercion, the function\nonly adds coercion for visible fields. However, when it does `verify`, it verifies against all field\ncount of the sub query, causing VerifyException when table `qualifiedName` has invisible columns.\nChange the code to only look at visible fields instead.\n\nAlso in StatementAnalyzer::visitTable, the named query should only map column names to visible fields."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NTQ4MTQx", "url": "https://github.com/prestodb/presto/pull/14334#pullrequestreview-388548141", "createdAt": "2020-04-06T19:22:18Z", "commit": {"oid": "48609e9425e2b253aa3ca72c36de416e4900cfd6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjczODI4", "url": "https://github.com/prestodb/presto/pull/14334#pullrequestreview-390273828", "createdAt": "2020-04-08T19:38:29Z", "commit": {"oid": "48609e9425e2b253aa3ca72c36de416e4900cfd6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTozODoyOVrOGC-D0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTozODoyOVrOGC-D0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc2NzEyMg==", "bodyText": "I'm not confident about this change.  RelationPlanner.visitTable() explicitly calls addCoercions including the hidden fields in the types.  This change seems like it would break the case were there are hidden columns.\n\n  \n    \n      presto/presto-main/src/main/java/com/facebook/presto/sql/planner/RelationPlanner.java\n    \n    \n        Lines 154 to 155\n      in\n      3c2d9d8\n    \n    \n    \n    \n\n        \n          \n           Type[] types = scope.getRelationType().getAllFields().stream().map(Field::getType).toArray(Type[]::new); \n        \n\n        \n          \n           RelationPlan withCoercions = addCoercions(subPlan, types);", "url": "https://github.com/prestodb/presto/pull/14334#discussion_r405767122", "createdAt": "2020-04-08T19:38:29Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/RelationPlanner.java", "diffHunk": "@@ -725,14 +725,18 @@ private RelationPlan processAndCoerceIfNecessary(Relation node, Void context)\n \n     private RelationPlan addCoercions(RelationPlan plan, Type[] targetColumnTypes)\n     {\n-        List<VariableReferenceExpression> oldVariables = plan.getFieldMappings();\n-        RelationType oldDescriptor = plan.getDescriptor().withOnlyVisibleFields();\n-        verify(targetColumnTypes.length == oldVariables.size());\n+        RelationType oldRelation = plan.getDescriptor();\n+        List<VariableReferenceExpression> oldVisibleVariables = oldRelation.getVisibleFields().stream()\n+                .map(oldRelation::indexOf)\n+                .map(plan.getFieldMappings()::get)\n+                .collect(toImmutableList());\n+        RelationType oldRelationWithVisibleFields = plan.getDescriptor().withOnlyVisibleFields();\n+        verify(targetColumnTypes.length == oldVisibleVariables.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48609e9425e2b253aa3ca72c36de416e4900cfd6"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzODg2NTQ1", "url": "https://github.com/prestodb/presto/pull/14334#pullrequestreview-403886545", "createdAt": "2020-04-30T21:21:18Z", "commit": {"oid": "48609e9425e2b253aa3ca72c36de416e4900cfd6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1779, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}