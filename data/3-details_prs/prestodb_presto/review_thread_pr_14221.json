{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NTY5ODk3", "number": 14221, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDo0ODo1MlrODlo8VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNzoyMDowNFrODm9ePQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNzk0NzA4OnYy", "diffSide": "RIGHT", "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDo0ODo1MlrOFypUYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwNDoyNzoyMVrOFzTEsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY1MDA4Mw==", "bodyText": "This is probably not needed?", "url": "https://github.com/prestodb/presto/pull/14221#discussion_r388650083", "createdAt": "2020-03-06T00:48:52Z", "author": {"login": "rongrong"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "diffHunk": "@@ -41,6 +41,7 @@\n import io.airlift.tpch.TpchTable;\n import org.apache.commons.math3.stat.descriptive.DescriptiveStatistics;\n import org.intellij.lang.annotations.Language;\n+import org.testng.Assert;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c87a58246451874da1662ff06bf2be224cce349"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzNDE5NQ==", "bodyText": "Fixed", "url": "https://github.com/prestodb/presto/pull/14221#discussion_r389334195", "createdAt": "2020-03-08T04:27:21Z", "author": {"login": "kaikalur"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "diffHunk": "@@ -41,6 +41,7 @@\n import io.airlift.tpch.TpchTable;\n import org.apache.commons.math3.stat.descriptive.DescriptiveStatistics;\n import org.intellij.lang.annotations.Language;\n+import org.testng.Assert;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY1MDA4Mw=="}, "originalCommit": {"oid": "0c87a58246451874da1662ff06bf2be224cce349"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNzk2MzkyOnYy", "diffSide": "RIGHT", "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDo1NTowMFrOFypeIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwNDoyODoxMVrOFzTE0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY1MjU3OA==", "bodyText": "You can probably write it similar as other tests using assertQueryOrdered and provide expected results, rather than just checking for null (look at testValueWindowFunctions).", "url": "https://github.com/prestodb/presto/pull/14221#discussion_r388652578", "createdAt": "2020-03-06T00:55:00Z", "author": {"login": "rongrong"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "diffHunk": "@@ -8272,6 +8273,34 @@ public void testRightJoinWithEmptyProbeSide()\n                 \"WITH small_part AS (SELECT * FROM part WHERE name = 'a') SELECT lineitem.orderkey FROM small_part RIGHT JOIN lineitem ON  small_part.partkey = lineitem.partkey\");\n     }\n \n+    @Test\n+    public void testLastValueIgnoreNulls()\n+    {\n+        String query = \"WITH T AS (\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c87a58246451874da1662ff06bf2be224cce349"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzNDIyNg==", "bodyText": "We should not need ordered. So testing for unordered", "url": "https://github.com/prestodb/presto/pull/14221#discussion_r389334226", "createdAt": "2020-03-08T04:28:11Z", "author": {"login": "kaikalur"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "diffHunk": "@@ -8272,6 +8273,34 @@ public void testRightJoinWithEmptyProbeSide()\n                 \"WITH small_part AS (SELECT * FROM part WHERE name = 'a') SELECT lineitem.orderkey FROM small_part RIGHT JOIN lineitem ON  small_part.partkey = lineitem.partkey\");\n     }\n \n+    @Test\n+    public void testLastValueIgnoreNulls()\n+    {\n+        String query = \"WITH T AS (\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY1MjU3OA=="}, "originalCommit": {"oid": "0c87a58246451874da1662ff06bf2be224cce349"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMTc5NTU1OnYy", "diffSide": "RIGHT", "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNzoxOToyN1rOF0rbGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOToxMDozNVrOF1rtag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc4MTcyMg==", "bodyText": "Nits: separate line for new argument. And empty space between values.\n    \"FROM T\",\n    \"Values 1, 2, 2\");", "url": "https://github.com/prestodb/presto/pull/14221#discussion_r390781722", "createdAt": "2020-03-11T07:19:27Z", "author": {"login": "rongrong"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "diffHunk": "@@ -8272,6 +8272,29 @@ public void testRightJoinWithEmptyProbeSide()\n                 \"WITH small_part AS (SELECT * FROM part WHERE name = 'a') SELECT lineitem.orderkey FROM small_part RIGHT JOIN lineitem ON  small_part.partkey = lineitem.partkey\");\n     }\n \n+    @Test\n+    public void testLastValueIgnoreNulls()\n+    {\n+        assertQuery(\"WITH T AS (\" +\n+                \"    SELECT\" +\n+                \"        p,\" +\n+                \"        v\" +\n+                \"    FROM (\" +\n+                \"        VALUES\" +\n+                \"            (2, 2),\" +\n+                \"            (1, 1),\" +\n+                \"            (3, NULL)\" +\n+                \"    ) T(p, v)\" +\n+                \")\" +\n+                \"SELECT\" +\n+                \"    LAST_VALUE(v) IGNORE NULLS OVER (\" +\n+                \"        PARTITION BY 1\" +\n+                \"        ORDER BY\" +\n+                \"            p ASC\" +\n+                \"    )\" +\n+                \"FROM T\", \"Values 1,2,2\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7277a479bae93cb5bed573a901b86fd2c5b3dc"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM5NjEyOQ==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/14221#discussion_r391396129", "createdAt": "2020-03-12T04:31:27Z", "author": {"login": "kaikalur"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "diffHunk": "@@ -8272,6 +8272,29 @@ public void testRightJoinWithEmptyProbeSide()\n                 \"WITH small_part AS (SELECT * FROM part WHERE name = 'a') SELECT lineitem.orderkey FROM small_part RIGHT JOIN lineitem ON  small_part.partkey = lineitem.partkey\");\n     }\n \n+    @Test\n+    public void testLastValueIgnoreNulls()\n+    {\n+        assertQuery(\"WITH T AS (\" +\n+                \"    SELECT\" +\n+                \"        p,\" +\n+                \"        v\" +\n+                \"    FROM (\" +\n+                \"        VALUES\" +\n+                \"            (2, 2),\" +\n+                \"            (1, 1),\" +\n+                \"            (3, NULL)\" +\n+                \"    ) T(p, v)\" +\n+                \")\" +\n+                \"SELECT\" +\n+                \"    LAST_VALUE(v) IGNORE NULLS OVER (\" +\n+                \"        PARTITION BY 1\" +\n+                \"        ORDER BY\" +\n+                \"            p ASC\" +\n+                \"    )\" +\n+                \"FROM T\", \"Values 1,2,2\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc4MTcyMg=="}, "originalCommit": {"oid": "3f7277a479bae93cb5bed573a901b86fd2c5b3dc"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzNDk4Ng==", "bodyText": "Not yet \ud83d\ude1b", "url": "https://github.com/prestodb/presto/pull/14221#discussion_r391834986", "createdAt": "2020-03-12T19:10:35Z", "author": {"login": "rongrong"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "diffHunk": "@@ -8272,6 +8272,29 @@ public void testRightJoinWithEmptyProbeSide()\n                 \"WITH small_part AS (SELECT * FROM part WHERE name = 'a') SELECT lineitem.orderkey FROM small_part RIGHT JOIN lineitem ON  small_part.partkey = lineitem.partkey\");\n     }\n \n+    @Test\n+    public void testLastValueIgnoreNulls()\n+    {\n+        assertQuery(\"WITH T AS (\" +\n+                \"    SELECT\" +\n+                \"        p,\" +\n+                \"        v\" +\n+                \"    FROM (\" +\n+                \"        VALUES\" +\n+                \"            (2, 2),\" +\n+                \"            (1, 1),\" +\n+                \"            (3, NULL)\" +\n+                \"    ) T(p, v)\" +\n+                \")\" +\n+                \"SELECT\" +\n+                \"    LAST_VALUE(v) IGNORE NULLS OVER (\" +\n+                \"        PARTITION BY 1\" +\n+                \"        ORDER BY\" +\n+                \"            p ASC\" +\n+                \"    )\" +\n+                \"FROM T\", \"Values 1,2,2\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc4MTcyMg=="}, "originalCommit": {"oid": "3f7277a479bae93cb5bed573a901b86fd2c5b3dc"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMTc5NjQ1OnYy", "diffSide": "RIGHT", "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNzoyMDowNFrOF0rbyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTowOTo1NFrOF1rsGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc4MTg5Nw==", "bodyText": "Nits: new line for argument.\n    assertQuery(\n        \"WITH T ...", "url": "https://github.com/prestodb/presto/pull/14221#discussion_r390781897", "createdAt": "2020-03-11T07:20:04Z", "author": {"login": "rongrong"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "diffHunk": "@@ -8272,6 +8272,29 @@ public void testRightJoinWithEmptyProbeSide()\n                 \"WITH small_part AS (SELECT * FROM part WHERE name = 'a') SELECT lineitem.orderkey FROM small_part RIGHT JOIN lineitem ON  small_part.partkey = lineitem.partkey\");\n     }\n \n+    @Test\n+    public void testLastValueIgnoreNulls()\n+    {\n+        assertQuery(\"WITH T AS (\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7277a479bae93cb5bed573a901b86fd2c5b3dc"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM5NTM1MQ==", "bodyText": "Done. Don't know why 'Reformat Code' doesn't do it automatically though", "url": "https://github.com/prestodb/presto/pull/14221#discussion_r391395351", "createdAt": "2020-03-12T04:27:01Z", "author": {"login": "kaikalur"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "diffHunk": "@@ -8272,6 +8272,29 @@ public void testRightJoinWithEmptyProbeSide()\n                 \"WITH small_part AS (SELECT * FROM part WHERE name = 'a') SELECT lineitem.orderkey FROM small_part RIGHT JOIN lineitem ON  small_part.partkey = lineitem.partkey\");\n     }\n \n+    @Test\n+    public void testLastValueIgnoreNulls()\n+    {\n+        assertQuery(\"WITH T AS (\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc4MTg5Nw=="}, "originalCommit": {"oid": "3f7277a479bae93cb5bed573a901b86fd2c5b3dc"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzNDY1MQ==", "bodyText": "I don't think our intelij style setup really conforms with the actual style we are following :(", "url": "https://github.com/prestodb/presto/pull/14221#discussion_r391834651", "createdAt": "2020-03-12T19:09:54Z", "author": {"login": "rongrong"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "diffHunk": "@@ -8272,6 +8272,29 @@ public void testRightJoinWithEmptyProbeSide()\n                 \"WITH small_part AS (SELECT * FROM part WHERE name = 'a') SELECT lineitem.orderkey FROM small_part RIGHT JOIN lineitem ON  small_part.partkey = lineitem.partkey\");\n     }\n \n+    @Test\n+    public void testLastValueIgnoreNulls()\n+    {\n+        assertQuery(\"WITH T AS (\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc4MTg5Nw=="}, "originalCommit": {"oid": "3f7277a479bae93cb5bed573a901b86fd2c5b3dc"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2873, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}