{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MDM2MjQ1", "number": 14130, "reviewThreads": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo0OTowOFrODiYFKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjozMDo0N1rODi4D3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MzcyNzE0OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo0OTowOFrOFtllMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo0OTowOFrOFtllMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NTk3MQ==", "bodyText": "Add rather than Added", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383345971", "createdAt": "2020-02-24T15:49:08Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MzcyOTk3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo0OTo0OVrOFtlm2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo0OTo0OVrOFtlm2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NjM5Mg==", "bodyText": "Maybe note the default value", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383346392", "createdAt": "2020-02-24T15:49:49Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MzczMzc4OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1MDozOFrOFtlpJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1MDozOFrOFtlpJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0Njk4MA==", "bodyText": "that's not a note?", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383346980", "createdAt": "2020-02-24T15:50:38Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mzc0MDgxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1MjoxNVrOFtltXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1MjoxNVrOFtltXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0ODA2Mw==", "bodyText": "Add configuration property xxx to control the frequency of reloading resource group information from the database.  The default value is yyy.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383348063", "createdAt": "2020-02-24T15:52:15Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mzc0Njg3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1MzozNFrOFtlw_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1MzozNFrOFtlw_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0ODk4OQ==", "bodyText": "what does \"which is repurposed from list-non-build-in-functions\" mean?", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383348989", "createdAt": "2020-02-24T15:53:34Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mzc0ODQ0OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1Mzo1M1rOFtlx5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1Mzo1M1rOFtlx5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0OTIyMA==", "bodyText": "what's the difference between these two notes?", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383349220", "createdAt": "2020-02-24T15:53:53Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mzc1NjA1OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1NTo0NVrOFtl2mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1NTo0NVrOFtl2mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MDQyNA==", "bodyText": "Replace ``isHidden`` attribute on AggregationFunction and ScalarFunction with ``visibility``.\n\nWhat values can visibility have, and what do they mean?", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383350424", "createdAt": "2020-02-24T15:55:45Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mzc2MzQ2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1NzozMlrOFtl7RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1NzozMlrOFtl7RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MTYyMA==", "bodyText": "to reference a pr use\n:pr:14010", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383351620", "createdAt": "2020-02-24T15:57:32Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mzc2OTg4OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1ODo1NFrOFtl_BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMjo1NDowN1rOFty1hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MjU4MQ==", "bodyText": "Add support for handling statistics to the Alluxio metastore\nAlso, does \"handling statistics\" mean?  Does that mean like for cost-based optimization?", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383352581", "createdAt": "2020-02-24T15:58:54Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.\n+* Add statistics handling to the Alluxio metastore support.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU2MzE0Mg==", "bodyText": "yes from the pr its looks like it", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383563142", "createdAt": "2020-02-24T22:54:07Z", "author": {"login": "bhhari"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.\n+* Add statistics handling to the Alluxio metastore support.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MjU4MQ=="}, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mzc3MTIyOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1OToxNFrOFtl_xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo1NTo1OFrOFuLsfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1Mjc3NQ==", "bodyText": "what does this mean? Is it user facing?", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383352775", "createdAt": "2020-02-24T15:59:14Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU2NTM3NA==", "bodyText": "This is 3 byte header value which needs to used when there is compression for calculating maxBuffersize", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383565374", "createdAt": "2020-02-24T22:59:47Z", "author": {"login": "bhhari"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1Mjc3NQ=="}, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk3MDQzMQ==", "bodyText": "What would the user have seen? Is the following correct:\nFix an issue where queries could fail with buffer overflow when writing ORC files.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383970431", "createdAt": "2020-02-25T15:55:58Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1Mjc3NQ=="}, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mzc4MTcyOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjowMTo1OFrOFtmGjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjowMTo1OFrOFtmGjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1NDUxMQ==", "bodyText": "Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383354511", "createdAt": "2020-02-24T16:01:58Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.\n+* Add statistics handling to the Alluxio metastore support.\n+* Expose Hive table properties via system table$properties table.\n+* When ``DROP TABLE`` query fails because the table has being dropped by other query before this query finishes,  change error code name from ``HIVE_METASTORE_ERROR`` to  ``HIVE_TABLE_DROPPED_DURING_QUERY``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mzc5NDk2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjowNToyNVrOFtmO8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjowNToyNVrOFtmO8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1NjY1OQ==", "bodyText": "Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximmum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383356659", "createdAt": "2020-02-24T16:05:25Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzY3NzU2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo0NTozM1rOFuLQaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo0NTozM1rOFuLQaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk2MzI0MA==", "bodyText": "the double backticks should be after \"node\" and not \"session\"", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383963240", "createdAt": "2020-02-25T15:45:33Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node session`` properties.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df0f18ef47d633e57728a1462875e28d3871c2b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzY4OTA4OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo0ODoxNFrOFuLXiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo0ODoxNFrOFuLXiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk2NTA2NA==", "bodyText": "Is this an SPI change?  It just looks like some added functions.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383965064", "createdAt": "2020-02-25T15:48:14Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node session`` properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add config ``internal-communication.task-communication-protocol`` to support Presto nodes to shuffle data with Thrift protocol. Use HTTP or Thrift.\n+* Add config ``internal-communication.server-info-communication-protocol`` to support Presto nodes to announce state with Thrift protocol. Use HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+\n+Kudu Changes\n+_____________\n+* Add kerberos authentication.\n+\n+Kafka changes\n+_____________\n+* Update kafka connector to 2.3.1, which improves implementation and performance (:pr:`13709`).\n+\n+Pinot Changes\n+_____________\n+* Replace config ``pinot.prefer-broker-queries`` with the inverse config ``pinot.forbid-broker-queries``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df0f18ef47d633e57728a1462875e28d3871c2b"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzY5NDYzOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo0OTozMVrOFuLbCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo0OTozMVrOFuLbCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk2NTk2Mg==", "bodyText": "Add support for using the Thrift protocol to shuffle data.  This can be configured using the configuration property internal-communication.task-communication-protocol.  Possible values are HTTP or Thrift.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383965962", "createdAt": "2020-02-25T15:49:31Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node session`` properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add config ``internal-communication.task-communication-protocol`` to support Presto nodes to shuffle data with Thrift protocol. Use HTTP or Thrift.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df0f18ef47d633e57728a1462875e28d3871c2b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzcwNzMzOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo1MjoyN1rOFuLiww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo1MjoyN1rOFuLiww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk2NzkzOQ==", "bodyText": "Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property  internal-communication.server-info-communication-protocol.  Possible values are HTTP or Thrift.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383967939", "createdAt": "2020-02-25T15:52:27Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node session`` properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add config ``internal-communication.task-communication-protocol`` to support Presto nodes to shuffle data with Thrift protocol. Use HTTP or Thrift.\n+* Add config ``internal-communication.server-info-communication-protocol`` to support Presto nodes to announce state with Thrift protocol. Use HTTP or Thrift.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df0f18ef47d633e57728a1462875e28d3871c2b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODQ5NTY1OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTo1NDo0OFrOFuTFpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTo1NDo0OFrOFuTFpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTU1OQ==", "bodyText": "nit: Kerberose should be capitalized", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384091559", "createdAt": "2020-02-25T19:54:48Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+\n+Kudu Changes\n+_____________\n+* Add kerberos authentication.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODQ5NTgyOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTo1NDo1M1rOFuTFyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjo0ODoyNVrOFuYHrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTU5Mw==", "bodyText": "link to the docs for these functions", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384091593", "createdAt": "2020-02-25T19:54:53Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwMTg4OA==", "bodyText": "we don't have tdigest functions yet we have only qdigest\nhttps://prestodb.io/docs/current/functions/qdigest.html", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384101888", "createdAt": "2020-02-25T20:15:29Z", "author": {"login": "bhhari"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTU5Mw=="}, "originalCommit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNDUzOQ==", "bodyText": "@tdcmeehan can you add documentation for these functions?", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384104539", "createdAt": "2020-02-25T20:20:54Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTU5Mw=="}, "originalCommit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE0MDc4Ng==", "bodyText": "These are marked experimental, which means they are not listed by default.  I think the most appropriate time to add documentation is when they're enabled by default, so perhaps we should just remove this from the release notes?", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384140786", "createdAt": "2020-02-25T21:37:05Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTU5Mw=="}, "originalCommit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE3Mzk5OQ==", "bodyText": "update the release notes to call out these are experimental functions", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384173999", "createdAt": "2020-02-25T22:48:25Z", "author": {"login": "bhhari"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTU5Mw=="}, "originalCommit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODQ5NzQzOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTo1NToyNFrOFuTGwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTo1NToyNFrOFuTGwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTg0Mg==", "bodyText": "capitalize Kafka", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384091842", "createdAt": "2020-02-25T19:55:24Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+\n+Kudu Changes\n+_____________\n+* Add kerberos authentication.\n+\n+Kafka changes\n+_____________\n+* Update kafka connector to 2.3.1, which improves implementation and performance (:pr:`13709`).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODUwMjkwOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTo1Njo1NlrOFuTKJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTo1Njo1NlrOFuTKJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MjcwOQ==", "bodyText": "I think this should be under Hive changes", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384092709", "createdAt": "2020-02-25T19:56:56Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODU2ODAxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoxNzo0M1rOFuTybQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDozMTo1OFrOFuUNGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwMzAyMQ==", "bodyText": "Functions should be referenced like\n:func`tdigest_agg `, :func`merge`", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384103021", "createdAt": "2020-02-25T20:17:43Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwMzc1OA==", "bodyText": "https://github.com/prestodb/presto/wiki/Release-Notes-Guidelines#formatting", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384103758", "createdAt": "2020-02-25T20:19:15Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwMzAyMQ=="}, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwOTg0OQ==", "bodyText": "these  functions are non-existent and will result in a error if you use :func", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384109849", "createdAt": "2020-02-25T20:31:58Z", "author": {"login": "bhhari"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwMzAyMQ=="}, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODU3NDQ3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoxOTo1NVrOFuT2hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoxOTo1NVrOFuT2hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNDA2OA==", "bodyText": "Remove this. This is not a user-facing change and should not be included.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384104068", "createdAt": "2020-02-25T20:19:55Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODU4NTIzOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyMzoyMVrOFuT88w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDo0NToyNlrOFuUk5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTcxNQ==", "bodyText": "Improve ``Kafka`` connector implementation and performance (:pr:`13709`)\n```", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384105715", "createdAt": "2020-02-25T20:23:21Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+\n+Kudu Changes\n+_____________\n+* Add KERBEROS authentication.\n+\n+Kafka changes\n+_____________\n+* Update KAFKA connector to 2.3.1, which improves implementation and performance (:pr:`13709`).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExMDU2OA==", "bodyText": "@rschlussel commented to make it capitalized", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384110568", "createdAt": "2020-02-25T20:33:32Z", "author": {"login": "bhhari"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+\n+Kudu Changes\n+_____________\n+* Add KERBEROS authentication.\n+\n+Kafka changes\n+_____________\n+* Update KAFKA connector to 2.3.1, which improves implementation and performance (:pr:`13709`).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTcxNQ=="}, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExNTk0MQ==", "bodyText": "sorry, I meant capitalize the first letter since it's a proper noun.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384115941", "createdAt": "2020-02-25T20:45:26Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+\n+Kudu Changes\n+_____________\n+* Add KERBEROS authentication.\n+\n+Kafka changes\n+_____________\n+* Update KAFKA connector to 2.3.1, which improves implementation and performance (:pr:`13709`).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTcxNQ=="}, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODU4NTQ5OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyMzoyNlrOFuT9Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyMzoyNlrOFuT9Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTc1OA==", "bodyText": "Changes", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384105758", "createdAt": "2020-02-25T20:23:26Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+\n+Kudu Changes\n+_____________\n+* Add KERBEROS authentication.\n+\n+Kafka changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODU4NTgyOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyMzozMFrOFuT9Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDozNTozNVrOFuUTjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTgwMg==", "bodyText": "Kerberos", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384105802", "createdAt": "2020-02-25T20:23:30Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+\n+Kudu Changes\n+_____________\n+* Add KERBEROS authentication.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODQ0MA==", "bodyText": "@rschlussel commented to make it capitalized", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384108440", "createdAt": "2020-02-25T20:28:57Z", "author": {"login": "bhhari"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+\n+Kudu Changes\n+_____________\n+* Add KERBEROS authentication.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTgwMg=="}, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExMTUwMA==", "bodyText": "I guess @rschlussel meant capitalized the first letter.\nKerberos is a special noun rather than an acronyms:  https://en.wikipedia.org/wiki/Kerberos_(protocol)", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384111500", "createdAt": "2020-02-25T20:35:35Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+\n+Kudu Changes\n+_____________\n+* Add KERBEROS authentication.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTgwMg=="}, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODU4OTg3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyNDo0OFrOFuT_ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyNDo0OFrOFuT_ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNjQzNQ==", "bodyText": "The property is `false` by default.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384106435", "createdAt": "2020-02-25T20:24:48Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODYwMDU5OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyODoxN1rOFuUGWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyODoxN1rOFuUGWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODEyMA==", "bodyText": "Alluxio catalog service <https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html>`\n\nYou can use\nmake clean\nmake html\n\nto make sure the the generated HTML works as intended.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384108120", "createdAt": "2020-02-25T20:28:17Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODYwMjMzOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyODo1M1rOFuUHbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyODo1M1rOFuUHbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODM5Ng==", "bodyText": "``internal-communication.server-info-communication-protocol``", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384108396", "createdAt": "2020-02-25T20:28:53Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODYwMzA3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyOTowOVrOFuUH6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDo0MToyOVrOFuUd9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODUyMA==", "bodyText": "``internal-communication.task-communication-protocol``", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384108520", "createdAt": "2020-02-25T20:29:09Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExNDE2Ng==", "bodyText": "ah missed it while changing", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384114166", "createdAt": "2020-02-25T20:41:29Z", "author": {"login": "bhhari"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODUyMA=="}, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODk2NjY4OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjozMDo0N1rOFuXpqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjo0Nzo0OFrOFuYGog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NjMxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              The property is `false` by default. (:pr:`14010`).\n          \n          \n            \n              The property is ``false`` by default. (:pr:`14010`).", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384166315", "createdAt": "2020-02-25T22:30:47Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,54 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property ``internal-communication.task-communication-protocol``. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property ``internal-communication.server-info-communication-protocol``. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add experimental functions ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+  These can be enabled by using the session property ``experimental_functions_enabled`` and the configuration property ``experimental-functions-enabled``.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the Alluxio catalog service <https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html>.\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.\n+  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.\n+  The property is `false` by default. (:pr:`14010`).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cf4ccf5d6006f6e4139a9d9bb447cb342b2d1d4"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE3MzczMA==", "bodyText": "updated", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384173730", "createdAt": "2020-02-25T22:47:48Z", "author": {"login": "bhhari"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,54 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property ``internal-communication.task-communication-protocol``. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property ``internal-communication.server-info-communication-protocol``. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add experimental functions ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+  These can be enabled by using the session property ``experimental_functions_enabled`` and the configuration property ``experimental-functions-enabled``.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the Alluxio catalog service <https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html>.\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.\n+  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.\n+  The property is `false` by default. (:pr:`14010`).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NjMxNQ=="}, "originalCommit": {"oid": "3cf4ccf5d6006f6e4139a9d9bb447cb342b2d1d4"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3063, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}