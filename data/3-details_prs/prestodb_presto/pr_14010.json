{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NzM2MDEz", "number": 14010, "title": "Support shuffle on Hive partition columns before write", "bodyText": "Previously, writing worker will receive rows in all partitions,\nand thus can write upper to hive.max-partitions-per-writers partitions.\nThis session property allows shuffle on partitioned columns when writing\nto partitioned unbucketed Hive tables. As a result, rows in the same\npartition will be sent to the same writing worker. This increase the\nnumber of maximum partitions written in single query by a factor of\nnumber of total writing workers.\n== RELEASE NOTES ==\n\nHive Changes\n* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010", "createdAt": "2020-01-24T08:56:41Z", "url": "https://github.com/prestodb/presto/pull/14010", "merged": true, "mergeCommit": {"oid": "5833338c127c380f505873614d25862921437e75"}, "closed": true, "closedAt": "2020-02-05T19:23:33Z", "author": {"login": "wenleix"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_czXIAFqTM0OTQ3MDE1NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBKjLigBqjMwMDgxNDc4Njg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NDcwMTU1", "url": "https://github.com/prestodb/presto/pull/14010#pullrequestreview-349470155", "createdAt": "2020-01-28T15:32:44Z", "commit": {"oid": "bb4879b1702f26a5dad5997af3a31bb25241501b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTozMjo0NFrOFipfkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTozMjo0NFrOFipfkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg3NTcyOA==", "bodyText": "!isShufflePartitionedColumnsForTableWriteEnabled(session) || table.getPartitionColumns().isEmpty()?", "url": "https://github.com/prestodb/presto/pull/14010#discussion_r371875728", "createdAt": "2020-01-28T15:32:44Z", "author": {"login": "arhimondr"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -2405,6 +2411,39 @@ private static Domain buildColumnDomain(ColumnHandle column, List<HivePartition>\n         return Optional.of(new ConnectorNewTableLayout(partitioningHandle, partitionColumns));\n     }\n \n+    @Override\n+    public Optional<ConnectorNewTableLayout> getPreferredShuffleLayoutForInsert(ConnectorSession session, ConnectorTableHandle tableHandle)\n+    {\n+        HiveTableHandle hiveTableHandle = (HiveTableHandle) tableHandle;\n+        SchemaTableName tableName = hiveTableHandle.getSchemaTableName();\n+        Table table = metastore.getTable(tableName.getSchemaName(), tableName.getTableName())\n+                .orElseThrow(() -> new TableNotFoundException(tableName));\n+\n+        Optional<HiveBucketHandle> hiveBucketHandle = getHiveBucketHandle(table);\n+        if (hiveBucketHandle.isPresent()) {\n+            // For bucketed table, table partitioning (i.e. the bucketing scheme) should be respected,\n+            // and there is no additional preferred shuffle partitioning\n+            return Optional.empty();\n+        }\n+\n+        if (!(isShufflePartitionedColumnsForTableWriteEnabled(session) || table.getPartitionColumns().isEmpty())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb4879b1702f26a5dad5997af3a31bb25241501b"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb4879b1702f26a5dad5997af3a31bb25241501b", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/bb4879b1702f26a5dad5997af3a31bb25241501b", "committedDate": "2020-01-24T08:55:53Z", "message": "Support shuffle on Hive partition columns before write"}, "afterCommit": {"oid": "de854efbf57322f5e9e3ae6c089063811773ef7c", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/de854efbf57322f5e9e3ae6c089063811773ef7c", "committedDate": "2020-01-30T19:10:36Z", "message": "Support shuffle on Hive partition columns before write"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODY0MzA2", "url": "https://github.com/prestodb/presto/pull/14010#pullrequestreview-351864306", "createdAt": "2020-02-01T04:14:43Z", "commit": {"oid": "de854efbf57322f5e9e3ae6c089063811773ef7c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNDoxNDo0M1rOFkcSXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNDoxNDo0OFrOFkcSZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1NjUxMQ==", "bodyText": "Can we add javadoc to the interface?", "url": "https://github.com/prestodb/presto/pull/14010#discussion_r373756511", "createdAt": "2020-02-01T04:14:43Z", "author": {"login": "highker"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/connector/ConnectorMetadata.java", "diffHunk": "@@ -363,6 +363,11 @@ default void dropColumn(ConnectorSession session, ConnectorTableHandle tableHand\n         return Optional.empty();\n     }\n \n+    default Optional<ConnectorNewTableLayout> getPreferredShuffleLayoutForNewTable(ConnectorSession session, ConnectorTableMetadata tableMetadata)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de854efbf57322f5e9e3ae6c089063811773ef7c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1NjUxOA==", "bodyText": "same here", "url": "https://github.com/prestodb/presto/pull/14010#discussion_r373756518", "createdAt": "2020-02-01T04:14:48Z", "author": {"login": "highker"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/connector/ConnectorMetadata.java", "diffHunk": "@@ -393,6 +398,11 @@ default void dropColumn(ConnectorSession session, ConnectorTableHandle tableHand\n         return Optional.of(new ConnectorNewTableLayout(partitioningHandle, partitionColumns));\n     }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de854efbf57322f5e9e3ae6c089063811773ef7c"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de854efbf57322f5e9e3ae6c089063811773ef7c", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/de854efbf57322f5e9e3ae6c089063811773ef7c", "committedDate": "2020-01-30T19:10:36Z", "message": "Support shuffle on Hive partition columns before write"}, "afterCommit": {"oid": "66e83312c63fe34b39b069367c7bf246575c9589", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/66e83312c63fe34b39b069367c7bf246575c9589", "committedDate": "2020-02-02T23:54:25Z", "message": "Support shuffle on Hive partition columns before write"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNTE0MjA5", "url": "https://github.com/prestodb/presto/pull/14010#pullrequestreview-352514209", "createdAt": "2020-02-03T19:45:21Z", "commit": {"oid": "66e83312c63fe34b39b069367c7bf246575c9589"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOTo0NToyMlrOFk9pWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOTo0NToyMlrOFk9pWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMwMzA2Nw==", "bodyText": "@wenleix I don't understand this TODO. It seems to me that bucketed tables are handled above and would never reach that code. Would you clarify?", "url": "https://github.com/prestodb/presto/pull/14010#discussion_r374303067", "createdAt": "2020-02-03T19:45:22Z", "author": {"login": "mbasmanova"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -2418,6 +2425,39 @@ private static Domain buildColumnDomain(ColumnHandle column, List<HivePartition>\n         return Optional.of(new ConnectorNewTableLayout(partitioningHandle, partitionColumns));\n     }\n \n+    @Override\n+    public Optional<ConnectorNewTableLayout> getPreferredShuffleLayoutForInsert(ConnectorSession session, ConnectorTableHandle tableHandle)\n+    {\n+        HiveTableHandle hiveTableHandle = (HiveTableHandle) tableHandle;\n+        SchemaTableName tableName = hiveTableHandle.getSchemaTableName();\n+        Table table = metastore.getTable(tableName.getSchemaName(), tableName.getTableName())\n+                .orElseThrow(() -> new TableNotFoundException(tableName));\n+\n+        Optional<HiveBucketHandle> hiveBucketHandle = getHiveBucketHandle(table);\n+        if (hiveBucketHandle.isPresent()) {\n+            // For bucketed table, table partitioning (i.e. the bucketing scheme) should be respected,\n+            // and there is no additional preferred shuffle partitioning\n+            return Optional.empty();\n+        }\n+\n+        if (!isShufflePartitionedColumnsForTableWriteEnabled(session) || table.getPartitionColumns().isEmpty()) {\n+            return Optional.empty();\n+        }\n+\n+        // TODO: the shuffle partitioning doesn't have to be the same as Hive bucket partitioning", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66e83312c63fe34b39b069367c7bf246575c9589"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNTE1MjI5", "url": "https://github.com/prestodb/presto/pull/14010#pullrequestreview-352515229", "createdAt": "2020-02-03T19:46:55Z", "commit": {"oid": "66e83312c63fe34b39b069367c7bf246575c9589"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOTo0Njo1NVrOFk9seg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOTo0Njo1NVrOFk9seg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMwMzg2Ng==", "bodyText": "@wenleix Same question about this TODO", "url": "https://github.com/prestodb/presto/pull/14010#discussion_r374303866", "createdAt": "2020-02-03T19:46:55Z", "author": {"login": "mbasmanova"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -2444,6 +2484,41 @@ private static Domain buildColumnDomain(ColumnHandle column, List<HivePartition>\n                 bucketedBy));\n     }\n \n+    @Override\n+    public Optional<ConnectorNewTableLayout> getPreferredShuffleLayoutForNewTable(ConnectorSession session, ConnectorTableMetadata tableMetadata)\n+    {\n+        validatePartitionColumns(tableMetadata);\n+        validateBucketColumns(tableMetadata);\n+        Optional<HiveBucketProperty> bucketProperty = getBucketProperty(tableMetadata.getProperties());\n+        if (bucketProperty.isPresent()) {\n+            // For bucketed table, table partitioning (i.e. the bucketing scheme) should be respected,\n+            // and there is no additional preferred shuffle partitioning\n+            return Optional.empty();\n+        }\n+\n+        List<String> partitionedBy = getPartitionedBy(tableMetadata.getProperties());\n+        if (!isShufflePartitionedColumnsForTableWriteEnabled(session) || partitionedBy.isEmpty()) {\n+            return Optional.empty();\n+        }\n+\n+        List<HiveColumnHandle> columnHandles = getColumnHandles(tableMetadata, ImmutableSet.copyOf(partitionedBy), typeTranslator);\n+        Map<String, HiveColumnHandle> columnHandlesByName = Maps.uniqueIndex(columnHandles, HiveColumnHandle::getName);\n+        List<Column> partitionColumns = partitionedBy.stream()\n+                .map(columnHandlesByName::get)\n+                .map(column -> new Column(column.getName(), column.getHiveType(), column.getComment()))\n+                .collect(toList());\n+\n+        // TODO: the shuffle partitioning doesn't have to be the same as Hive bucket partitioning", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66e83312c63fe34b39b069367c7bf246575c9589"}, "originalPosition": 89}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNTM5ODcy", "url": "https://github.com/prestodb/presto/pull/14010#pullrequestreview-352539872", "createdAt": "2020-02-03T20:27:44Z", "commit": {"oid": "66e83312c63fe34b39b069367c7bf246575c9589"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "66e83312c63fe34b39b069367c7bf246575c9589", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/66e83312c63fe34b39b069367c7bf246575c9589", "committedDate": "2020-02-02T23:54:25Z", "message": "Support shuffle on Hive partition columns before write"}, "afterCommit": {"oid": "d43d4ce1f09bc56d1763ca93ba98d1f84094507e", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/d43d4ce1f09bc56d1763ca93ba98d1f84094507e", "committedDate": "2020-02-04T06:59:25Z", "message": "Support shuffle on Hive partition columns before write"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d43d4ce1f09bc56d1763ca93ba98d1f84094507e", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/d43d4ce1f09bc56d1763ca93ba98d1f84094507e", "committedDate": "2020-02-04T06:59:25Z", "message": "Support shuffle on Hive partition columns before write"}, "afterCommit": {"oid": "df27916000ac487e2d6aa24719468f5824582f57", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/df27916000ac487e2d6aa24719468f5824582f57", "committedDate": "2020-02-04T07:05:06Z", "message": "Support shuffle on Hive partition columns before write\n\nPreviously, writing worker will receive rows in all partitions,\nand thus can write upper to hive.max-partitions-per-writers partitions.\n\nThis session property allows shuffle on partitioned columns when writing\nto partitioned unbucketed Hive tables. As a result, rows in the same\npartition will be sent to the same writing worker. This increase the\nnumber of maximum partitions written in single query by a factor of\nnumber of total writing workers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc5415f2ed2312dfad415cf88ba3758a36a9365b", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/dc5415f2ed2312dfad415cf88ba3758a36a9365b", "committedDate": "2020-02-04T23:27:41Z", "message": "Rename TableWriterNode#partitioningScheme to tablePartitioningScheme"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd6d2ef346ee392b2564037732fc0abf6086412f", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/dd6d2ef346ee392b2564037732fc0abf6086412f", "committedDate": "2020-02-04T23:27:41Z", "message": "Support shuffle on Hive partition columns before write\n\nPreviously, writing worker will receive rows in all partitions,\nand thus can write upper to hive.max-partitions-per-writers partitions.\n\nThis session property allows shuffle on partitioned columns when writing\nto partitioned unbucketed Hive tables. As a result, rows in the same\npartition will be sent to the same writing worker. This increase the\nnumber of maximum partitions written in single query by a factor of\nnumber of total writing workers."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df27916000ac487e2d6aa24719468f5824582f57", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/df27916000ac487e2d6aa24719468f5824582f57", "committedDate": "2020-02-04T07:05:06Z", "message": "Support shuffle on Hive partition columns before write\n\nPreviously, writing worker will receive rows in all partitions,\nand thus can write upper to hive.max-partitions-per-writers partitions.\n\nThis session property allows shuffle on partitioned columns when writing\nto partitioned unbucketed Hive tables. As a result, rows in the same\npartition will be sent to the same writing worker. This increase the\nnumber of maximum partitions written in single query by a factor of\nnumber of total writing workers."}, "afterCommit": {"oid": "dd6d2ef346ee392b2564037732fc0abf6086412f", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/dd6d2ef346ee392b2564037732fc0abf6086412f", "committedDate": "2020-02-04T23:27:41Z", "message": "Support shuffle on Hive partition columns before write\n\nPreviously, writing worker will receive rows in all partitions,\nand thus can write upper to hive.max-partitions-per-writers partitions.\n\nThis session property allows shuffle on partitioned columns when writing\nto partitioned unbucketed Hive tables. As a result, rows in the same\npartition will be sent to the same writing worker. This increase the\nnumber of maximum partitions written in single query by a factor of\nnumber of total writing workers."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2496, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}