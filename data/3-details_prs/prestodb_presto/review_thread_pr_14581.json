{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNTM1OTI1", "number": 14581, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDo1OTowN1rOEAIyhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoyOToyMFrOEA-lzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTc5NDYwOnYy", "diffSide": "RIGHT", "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/TypeTranslator.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDo1OTowN1rOGbOwGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzozMDozNFrOGcl5fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwNjQyNw==", "bodyText": "I would simply change the signature of the first method to Optional<TypeInfo> tryTranslate(Type type)", "url": "https://github.com/prestodb/presto/pull/14581#discussion_r431206427", "createdAt": "2020-05-27T14:59:07Z", "author": {"login": "arhimondr"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/TypeTranslator.java", "diffHunk": "@@ -16,7 +16,11 @@\n import com.facebook.presto.common.type.Type;\n import org.apache.hadoop.hive.serde2.typeinfo.TypeInfo;\n \n+import java.util.Optional;\n+\n public interface TypeTranslator\n {\n     TypeInfo translate(Type type);\n+\n+    TypeInfo translate(Type type, Optional<HiveType> defaultHiveType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f9e0ddc0d0c868c60502509ef6a54f9075f3713"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM0MTM4MQ==", "bodyText": "I want to keep the old behavior to throw an error inside translate function, so that 1.  all call sites don't need to check returned TypeInfo. 2,  HiveType's constructor method and HiveType::toHiveType(TypeTranslator,  Type) are not affected.\nDefaultHiveType is optional, caller will make decision on throwing an error or convert to default.", "url": "https://github.com/prestodb/presto/pull/14581#discussion_r431341381", "createdAt": "2020-05-27T18:03:28Z", "author": {"login": "viczhang861"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/TypeTranslator.java", "diffHunk": "@@ -16,7 +16,11 @@\n import com.facebook.presto.common.type.Type;\n import org.apache.hadoop.hive.serde2.typeinfo.TypeInfo;\n \n+import java.util.Optional;\n+\n public interface TypeTranslator\n {\n     TypeInfo translate(Type type);\n+\n+    TypeInfo translate(Type type, Optional<HiveType> defaultHiveType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwNjQyNw=="}, "originalCommit": {"oid": "6f9e0ddc0d0c868c60502509ef6a54f9075f3713"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk4MDc0Ng==", "bodyText": "How about adding Optional<TypeInfo> tryTranslate(Type type)? This signature might be more flexible, as it allows the caller to figure out what to do if the type mapping hasn't been satisfied.", "url": "https://github.com/prestodb/presto/pull/14581#discussion_r431980746", "createdAt": "2020-05-28T16:49:49Z", "author": {"login": "arhimondr"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/TypeTranslator.java", "diffHunk": "@@ -16,7 +16,11 @@\n import com.facebook.presto.common.type.Type;\n import org.apache.hadoop.hive.serde2.typeinfo.TypeInfo;\n \n+import java.util.Optional;\n+\n public interface TypeTranslator\n {\n     TypeInfo translate(Type type);\n+\n+    TypeInfo translate(Type type, Optional<HiveType> defaultHiveType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwNjQyNw=="}, "originalCommit": {"oid": "6f9e0ddc0d0c868c60502509ef6a54f9075f3713"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAxMDUyMw==", "bodyText": "translate function calls itself a couple of times, handling of failed translation inside function is unavoidable.", "url": "https://github.com/prestodb/presto/pull/14581#discussion_r432010523", "createdAt": "2020-05-28T17:39:42Z", "author": {"login": "viczhang861"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/TypeTranslator.java", "diffHunk": "@@ -16,7 +16,11 @@\n import com.facebook.presto.common.type.Type;\n import org.apache.hadoop.hive.serde2.typeinfo.TypeInfo;\n \n+import java.util.Optional;\n+\n public interface TypeTranslator\n {\n     TypeInfo translate(Type type);\n+\n+    TypeInfo translate(Type type, Optional<HiveType> defaultHiveType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwNjQyNw=="}, "originalCommit": {"oid": "6f9e0ddc0d0c868c60502509ef6a54f9075f3713"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzMjYzMA==", "bodyText": "I'm slow. You are right, the method is recursive.", "url": "https://github.com/prestodb/presto/pull/14581#discussion_r432632630", "createdAt": "2020-05-29T17:27:45Z", "author": {"login": "arhimondr"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/TypeTranslator.java", "diffHunk": "@@ -16,7 +16,11 @@\n import com.facebook.presto.common.type.Type;\n import org.apache.hadoop.hive.serde2.typeinfo.TypeInfo;\n \n+import java.util.Optional;\n+\n public interface TypeTranslator\n {\n     TypeInfo translate(Type type);\n+\n+    TypeInfo translate(Type type, Optional<HiveType> defaultHiveType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwNjQyNw=="}, "originalCommit": {"oid": "6f9e0ddc0d0c868c60502509ef6a54f9075f3713"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzNDIzOA==", "bodyText": "Maybe add some comment explaining what is going on. The defaultHiveType might be really confusing.", "url": "https://github.com/prestodb/presto/pull/14581#discussion_r432634238", "createdAt": "2020-05-29T17:30:34Z", "author": {"login": "arhimondr"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/TypeTranslator.java", "diffHunk": "@@ -16,7 +16,11 @@\n import com.facebook.presto.common.type.Type;\n import org.apache.hadoop.hive.serde2.typeinfo.TypeInfo;\n \n+import java.util.Optional;\n+\n public interface TypeTranslator\n {\n     TypeInfo translate(Type type);\n+\n+    TypeInfo translate(Type type, Optional<HiveType> defaultHiveType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwNjQyNw=="}, "originalCommit": {"oid": "6f9e0ddc0d0c868c60502509ef6a54f9075f3713"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTc5Nzg2OnYy", "diffSide": "RIGHT", "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/HiveType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDo1OTozNlrOGbOyMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNzo1ODozMlrOGbW0JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwNjk2Mw==", "bodyText": "Let's do this only for temporary table", "url": "https://github.com/prestodb/presto/pull/14581#discussion_r431206963", "createdAt": "2020-05-27T14:59:36Z", "author": {"login": "arhimondr"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/HiveType.java", "diffHunk": "@@ -199,11 +200,27 @@ private static HiveType toHiveType(TypeInfo typeInfo)\n         return new HiveType(typeInfo);\n     }\n \n-    public static HiveType toHiveType(TypeTranslator typeTranslator, Type type)\n+    public static HiveType toHiveType(\n+            TypeTranslator typeTranslator,\n+            Type type)\n+    {\n+        return toHiveType(typeTranslator, type, Optional.empty());\n+    }\n+\n+    public static HiveType toHiveType(\n+            TypeTranslator typeTranslator,\n+            Type type,\n+            Optional<HiveType> defaultHiveType)\n     {\n         requireNonNull(typeTranslator, \"typeTranslator is null\");\n         requireNonNull(type, \"type is null\");\n-        return new HiveType(typeTranslator.translate(type));\n+        requireNonNull(defaultHiveType, \"defaultHiveType is null\");\n+        return new HiveType(typeTranslator.translate(type, defaultHiveType));\n+    }\n+\n+    public static Optional<HiveType> getDefaultHiveType(HiveStorageFormat storageFormat)\n+    {\n+        return storageFormat == PAGEFILE ? Optional.of(HIVE_BINARY) : Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f9e0ddc0d0c868c60502509ef6a54f9075f3713"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTMzODUzMg==", "bodyText": "It is only used for temporary table, I renamed this function to make it clear.", "url": "https://github.com/prestodb/presto/pull/14581#discussion_r431338532", "createdAt": "2020-05-27T17:58:32Z", "author": {"login": "viczhang861"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/HiveType.java", "diffHunk": "@@ -199,11 +200,27 @@ private static HiveType toHiveType(TypeInfo typeInfo)\n         return new HiveType(typeInfo);\n     }\n \n-    public static HiveType toHiveType(TypeTranslator typeTranslator, Type type)\n+    public static HiveType toHiveType(\n+            TypeTranslator typeTranslator,\n+            Type type)\n+    {\n+        return toHiveType(typeTranslator, type, Optional.empty());\n+    }\n+\n+    public static HiveType toHiveType(\n+            TypeTranslator typeTranslator,\n+            Type type,\n+            Optional<HiveType> defaultHiveType)\n     {\n         requireNonNull(typeTranslator, \"typeTranslator is null\");\n         requireNonNull(type, \"type is null\");\n-        return new HiveType(typeTranslator.translate(type));\n+        requireNonNull(defaultHiveType, \"defaultHiveType is null\");\n+        return new HiveType(typeTranslator.translate(type, defaultHiveType));\n+    }\n+\n+    public static Optional<HiveType> getDefaultHiveType(HiveStorageFormat storageFormat)\n+    {\n+        return storageFormat == PAGEFILE ? Optional.of(HIVE_BINARY) : Optional.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwNjk2Mw=="}, "originalCommit": {"oid": "6f9e0ddc0d0c868c60502509ef6a54f9075f3713"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDYwMDc2OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoyNzowMVrOGclxfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoyNzowMVrOGclxfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzMjE4OQ==", "bodyText": "Let this thing fail for now. Ideally the HivePartitioningHandle  shouldn't contain the hive types if the partition handle is for materialized exchange.", "url": "https://github.com/prestodb/presto/pull/14581#discussion_r432632189", "createdAt": "2020-05-29T17:27:01Z", "author": {"login": "arhimondr"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -2213,7 +2215,10 @@ public ConnectorPartitioningHandle getPartitioningHandleForExchange(ConnectorSes\n         return new HivePartitioningHandle(\n                 partitionCount,\n                 partitionTypes.stream()\n-                        .map(type -> toHiveType(typeTranslator, translateHiveUnsupportedTypeForTemporaryTable(type, typeManager)))\n+                        .map(type -> toHiveType(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d18ea7528b6b27521f5f055dbe1286ed5bc9d929"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDYwMTU2OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoyNzoxM1rOGclx-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoyNzoxM1rOGclx-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzMjMxNA==", "bodyText": "Let's inline the getDefaultHiveTypeForTemporaryTable", "url": "https://github.com/prestodb/presto/pull/14581#discussion_r432632314", "createdAt": "2020-05-29T17:27:13Z", "author": {"login": "arhimondr"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -867,7 +868,8 @@ public ConnectorTableHandle createTemporaryTable(ConnectorSession session, List<\n                 // type to the boolean type that is binary compatible\n                 translateHiveUnsupportedTypesForTemporaryTable(columns, typeManager),\n                 ImmutableSet.of(),\n-                typeTranslator);\n+                typeTranslator,\n+                getDefaultHiveTypeForTemporaryTable(storageFormat));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d18ea7528b6b27521f5f055dbe1286ed5bc9d929"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDYwNTM3OnYy", "diffSide": "RIGHT", "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/TypeTranslator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoyODowOVrOGcl0OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoyODowOVrOGcl0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzMjg4OQ==", "bodyText": "Let's set a default implementation here that calls  translate(type, Optional.empty())", "url": "https://github.com/prestodb/presto/pull/14581#discussion_r432632889", "createdAt": "2020-05-29T17:28:09Z", "author": {"login": "arhimondr"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/TypeTranslator.java", "diffHunk": "@@ -16,7 +16,11 @@\n import com.facebook.presto.common.type.Type;\n import org.apache.hadoop.hive.serde2.typeinfo.TypeInfo;\n \n+import java.util.Optional;\n+\n public interface TypeTranslator\n {\n     TypeInfo translate(Type type);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d18ea7528b6b27521f5f055dbe1286ed5bc9d929"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDYwNjc1OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveTypeTranslator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoyODozM1rOGcl1Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoyODozM1rOGcl1Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzMzEwNw==", "bodyText": "Let's move this implementation as a default implementation in the interface", "url": "https://github.com/prestodb/presto/pull/14581#discussion_r432633107", "createdAt": "2020-05-29T17:28:33Z", "author": {"login": "arhimondr"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveTypeTranslator.java", "diffHunk": "@@ -64,6 +66,12 @@\n {\n     @Override\n     public TypeInfo translate(Type type)\n+    {\n+        return translate(type, Optional.empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d18ea7528b6b27521f5f055dbe1286ed5bc9d929"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDYwOTQzOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveTypeTranslator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoyOToyMFrOGcl2sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzoyOToyMFrOGcl2sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzMzUyMg==", "bodyText": "nit: let's wrap it\nreturn defaultHiveType\n  .orElseThrow(() -> new PrestoException(NOT_SUPPORTED, format(\"Unsupported Hive type: %s\", type)))\n  .getTypeInfo();", "url": "https://github.com/prestodb/presto/pull/14581#discussion_r432633522", "createdAt": "2020-05-29T17:29:20Z", "author": {"login": "arhimondr"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveTypeTranslator.java", "diffHunk": "@@ -146,9 +154,9 @@ else if (varcharLength == VarcharType.UNBOUNDED_LENGTH) {\n             return getStructTypeInfo(\n                     fieldNames.build(),\n                     type.getTypeParameters().stream()\n-                            .map(this::translate)\n+                            .map(t -> translate(t, defaultHiveType))\n                             .collect(toList()));\n         }\n-        throw new PrestoException(NOT_SUPPORTED, format(\"Unsupported Hive type: %s\", type));\n+        return defaultHiveType.orElseThrow(() -> new PrestoException(NOT_SUPPORTED, format(\"Unsupported Hive type: %s\", type))).getTypeInfo();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d18ea7528b6b27521f5f055dbe1286ed5bc9d929"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2682, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}