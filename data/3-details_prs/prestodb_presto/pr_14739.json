{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMDAwNTc4", "number": 14739, "title": "Add a limit on total number of bytes read from storage in table scan", "bodyText": "Fixes #14701\n== RELEASE NOTES ==\n\nGeneral Changes\n* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.", "createdAt": "2020-06-28T04:40:43Z", "url": "https://github.com/prestodb/presto/pull/14739", "merged": true, "mergeCommit": {"oid": "fb8bb9fd0b94519cacb8e7fbb6fb7858d704baa4"}, "closed": true, "closedAt": "2020-07-31T16:39:36Z", "author": {"login": "fgwang7w"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwBBjfgFqTQzOTEzNTc1OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6AQLxAFqTQ1ODQzODk0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MTM1NzU5", "url": "https://github.com/prestodb/presto/pull/14739#pullrequestreview-439135759", "createdAt": "2020-06-29T13:21:14Z", "commit": {"oid": "0b8fd9a9e8219a758ed73ca0f5cf857fd59678cd"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoyMToxNFrOGqQoJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoyMzoyM1rOGqQuEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2NTc5OQ==", "bodyText": "getQueryMaxScanPhysicalBytes(session) returns a value that can be used as is without further checking.\nThis code ensures that this property defaults to what's specified in config:\n                dataSizeProperty(\n                        QUERY_MAX_SCAN_PHYSICAL_BYTES,\n                        \"Maximum scan physical bytes of a query\",\n                        queryManagerConfig.getQueryMaxScanPhysicalBytes(),\n                        false),\n\nand this code defines the default value that is used if nothing is specified in config file:\nprivate DataSize queryMaxScanPhysicalBytes = DataSize.succinctDataSize(1, PETABYTE);\n\nHence, the code can be simplified like this:\n        for (QueryExecution query : queryTracker.getAllQueries()) {\n            DataSize limit = getQueryMaxScanPhysicalBytes(query.getSession());\n            DataSize scan = query.getQueryInfo().getQueryStats().getRawInputDataSize();\n            if (scan.compareTo(limit) >= 0) {\n                query.fail(new ExceededScanLimitException(limit));\n            }\n        }", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r446965799", "createdAt": "2020-06-29T13:21:14Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlQueryManager.java", "diffHunk": "@@ -312,4 +326,22 @@ private void enforceCpuLimits()\n             }\n         }\n     }\n+\n+    /**\n+     * Enforce query scan physical bytes limits\n+     */\n+    private void enforceScanLimits()\n+    {\n+        for (QueryExecution query : queryTracker.getAllQueries()) {\n+            DataSize limitOpt = Optional.ofNullable(getQueryMaxScanPhysicalBytes(query.getSession()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b8fd9a9e8219a758ed73ca0f5cf857fd59678cd"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2NjY3OQ==", "bodyText": "Let's clarify what does the limit applies to? E.g. whether it applies to amount of data read from storage before or after compression?", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r446966679", "createdAt": "2020-06-29T13:22:29Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/ExceededScanLimitException.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto;\n+\n+import com.facebook.presto.spi.PrestoException;\n+import io.airlift.units.DataSize;\n+\n+import static com.facebook.presto.spi.StandardErrorCode.EXCEEDED_SCAN_LIMIT;\n+\n+public class ExceededScanLimitException\n+        extends PrestoException\n+{\n+    public ExceededScanLimitException(DataSize limit)\n+    {\n+        super(EXCEEDED_SCAN_LIMIT, \"Exceeded Scan limit of \" + limit.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b8fd9a9e8219a758ed73ca0f5cf857fd59678cd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2NzMxNA==", "bodyText": "Let's clarify. Is this before or after compression? Before or after filtering? I assume it is after compression but before filtering.", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r446967314", "createdAt": "2020-06-29T13:23:23Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java", "diffHunk": "@@ -423,6 +425,11 @@ public SystemSessionProperties(\n                         \"Use resources which are not guaranteed to be available to the query\",\n                         false,\n                         false),\n+                dataSizeProperty(\n+                        QUERY_MAX_SCAN_PHYSICAL_BYTES,\n+                        \"Maximum scan physical bytes of a query\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b8fd9a9e8219a758ed73ca0f5cf857fd59678cd"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NTUzNTQ4", "url": "https://github.com/prestodb/presto/pull/14739#pullrequestreview-439553548", "createdAt": "2020-06-29T22:47:30Z", "commit": {"oid": "0b8fd9a9e8219a758ed73ca0f5cf857fd59678cd"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjo0NzozMVrOGqlK7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjo0ODoyMlrOGqlMJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMwMjM4Mg==", "bodyText": "Is QueryStats::rawInputDataSize equivalent to scanPhysicalBytes?  does reading from materialized intermediate table included? cc @arhimondr", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r447302382", "createdAt": "2020-06-29T22:47:31Z", "author": {"login": "viczhang861"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java", "diffHunk": "@@ -66,6 +69,8 @@\n     private Duration queryMaxExecutionTime = new Duration(100, TimeUnit.DAYS);\n     private Duration queryMaxCpuTime = new Duration(1_000_000_000, TimeUnit.DAYS);\n \n+    private DataSize queryMaxScanPhysicalBytes = DataSize.succinctDataSize(1, PETABYTE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b8fd9a9e8219a758ed73ca0f5cf857fd59678cd"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMwMjY5NA==", "bodyText": "Remember to remove this.", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r447302694", "createdAt": "2020-06-29T22:48:22Z", "author": {"login": "viczhang861"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlQueryManager.java", "diffHunk": "@@ -70,6 +74,8 @@\n \n     private final Duration maxQueryCpuTime;\n \n+    private final Optional<DataSize> maxQueryScanPhysicalBytes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b8fd9a9e8219a758ed73ca0f5cf857fd59678cd"}, "originalPosition": 36}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "084ff0e1fc8d71dfa1704fa931f4b8a41df89ddc", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/084ff0e1fc8d71dfa1704fa931f4b8a41df89ddc", "committedDate": "2020-07-02T08:20:38Z", "message": "to #14701: fix ut"}, "afterCommit": {"oid": "ebe957c3885b44e0ab1a2cba02d9ec86db94bc37", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/ebe957c3885b44e0ab1a2cba02d9ec86db94bc37", "committedDate": "2020-07-02T08:24:02Z", "message": "to #14701: collect scanned size from query stats"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjQwMTc4", "url": "https://github.com/prestodb/presto/pull/14739#pullrequestreview-441640178", "createdAt": "2020-07-02T12:42:51Z", "commit": {"oid": "1949ae3d7718a55bf865074aaee6ab95071c2e12"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjo0Mjo1MVrOGsLHgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjo0MDo0OFrOGsVd5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk3MjY3Mw==", "bodyText": "Given that there is only 1 implementation, any reason to go for a default implementation?", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r448972673", "createdAt": "2020-07-02T12:42:51Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryExecution.java", "diffHunk": "@@ -53,6 +53,11 @@\n \n     QueryInfo getQueryInfo();\n \n+    default DataSize getScannedBytes()\n+    {\n+        return new DataSize(0, DataSize.Unit.BYTE);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1949ae3d7718a55bf865074aaee6ab95071c2e12"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEzNzM5Nw==", "bodyText": "Concurring @mbasmanova's comment - we should be clear about what scan limit has been exceeded. I will recommend EXCEEDED_SCAN_RAW_BYTES_READ_LIMIT. The message can also be made more explicit", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r449137397", "createdAt": "2020-07-02T16:32:09Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/ExceededScanLimitException.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto;\n+\n+import com.facebook.presto.spi.PrestoException;\n+import io.airlift.units.DataSize;\n+\n+import static com.facebook.presto.spi.StandardErrorCode.EXCEEDED_SCAN_LIMIT;\n+\n+public class ExceededScanLimitException\n+        extends PrestoException\n+{\n+    public ExceededScanLimitException(DataSize limit)\n+    {\n+        super(EXCEEDED_SCAN_LIMIT, \"Exceeded Scan limit of \" + limit.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2NjY3OQ=="}, "originalCommit": {"oid": "0b8fd9a9e8219a758ed73ca0f5cf857fd59678cd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEzODE4Mw==", "bodyText": "Should we just say QUERY_MAX_SCAN_RAW_INPUT_BYTES that way it matches the public stat that we publish and it is easy for people to understand which metric did they exceed? @mbasmanova thoughts?", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r449138183", "createdAt": "2020-07-02T16:33:31Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java", "diffHunk": "@@ -423,6 +425,11 @@ public SystemSessionProperties(\n                         \"Use resources which are not guaranteed to be available to the query\",\n                         false,\n                         false),\n+                dataSizeProperty(\n+                        QUERY_MAX_SCAN_PHYSICAL_BYTES,\n+                        \"Maximum scan physical bytes of a query\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2NzMxNA=="}, "originalCommit": {"oid": "0b8fd9a9e8219a758ed73ca0f5cf857fd59678cd"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0MTIzMw==", "bodyText": "I can see a lot of issues with this logic:\n\nWe are reading finalQueryInfo which is published only when the query is finished - can you test and see if this number is actually published when the query is running ?\nFor every stage that is a scan stage, we take the whole query's bytes read and add it. So if there are 2 scan stages - in that case, you will just return 2 * bytesreadbyquery.\ngetAllStages does a DFS traversal every time - and given that it will be called in a loop, this might be an expensive operation and we don't really care about the ordering here.\n\nIn my opinion - we should do something similar to the existing logic that exists for getTotalCpuTime. That will help ensure that the logics are similar and it is easy to change them together if we ever decide to head that path.", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r449141233", "createdAt": "2020-07-02T16:38:59Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryStateMachine.java", "diffHunk": "@@ -752,6 +753,23 @@ public void setUpdateType(String updateType)\n         this.updateType.set(updateType);\n     }\n \n+    public long getScannedBytes(StageInfo rootStage)\n+    {\n+        long rawInputDataSize = 0;\n+        for (StageInfo stageInfo : getAllStages(Optional.of(rootStage))) {\n+            if (stageInfo.getPlan().isPresent()) {\n+                PlanFragment plan = stageInfo.getPlan().get();\n+                if (!plan.getTableScanSchedulingOrder().isEmpty()) {\n+                    Optional<QueryInfo> queryInfo = finalQueryInfo.get();\n+                    if (queryInfo.isPresent()) {\n+                        QueryStats queryStats = queryInfo.get().getQueryStats();\n+                        rawInputDataSize += queryStats.getRawInputDataSize().toBytes();\n+                    }\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1949ae3d7718a55bf865074aaee6ab95071c2e12"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0MTUzMw==", "bodyText": "nit: remove", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r449141533", "createdAt": "2020-07-02T16:39:30Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlQueryManager.java", "diffHunk": "@@ -312,4 +322,19 @@ private void enforceCpuLimits()\n             }\n         }\n     }\n+\n+    /**\n+     * Enforce query scan physical bytes limits\n+     */\n+    private void enforceScanLimits()\n+    {\n+        for (QueryExecution query : queryTracker.getAllQueries()) {\n+            DataSize limit = getQueryMaxScanPhysicalBytes(query.getSession());\n+            // DataSize scan = query.getQueryInfo().getQueryStats().getRawInputDataSize();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1949ae3d7718a55bf865074aaee6ab95071c2e12"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0MjI0NA==", "bodyText": "Over here we are just using the session property - which a user can override. Similar to how this is being done for enforceCpuLimits where in we take the min of the cluster setting and session property and enforce based on that.", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r449142244", "createdAt": "2020-07-02T16:40:48Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlQueryManager.java", "diffHunk": "@@ -312,4 +322,19 @@ private void enforceCpuLimits()\n             }\n         }\n     }\n+\n+    /**\n+     * Enforce query scan physical bytes limits\n+     */\n+    private void enforceScanLimits()\n+    {\n+        for (QueryExecution query : queryTracker.getAllQueries()) {\n+            DataSize limit = getQueryMaxScanPhysicalBytes(query.getSession());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1949ae3d7718a55bf865074aaee6ab95071c2e12"}, "originalPosition": 56}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1949ae3d7718a55bf865074aaee6ab95071c2e12", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/1949ae3d7718a55bf865074aaee6ab95071c2e12", "committedDate": "2020-07-02T08:26:37Z", "message": "to #14701: fix ut"}, "afterCommit": {"oid": "8f3188da1f4351fc1f94ba30c91de280b8f3875c", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/8f3188da1f4351fc1f94ba30c91de280b8f3875c", "committedDate": "2020-07-02T19:12:52Z", "message": "to #14701: Support query level scan bytes limits"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f3188da1f4351fc1f94ba30c91de280b8f3875c", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/8f3188da1f4351fc1f94ba30c91de280b8f3875c", "committedDate": "2020-07-02T19:12:52Z", "message": "to #14701: Support query level scan bytes limits"}, "afterCommit": {"oid": "0bb45275a35341b80d17f20d4abd466fda60f796", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/0bb45275a35341b80d17f20d4abd466fda60f796", "committedDate": "2020-07-02T19:15:05Z", "message": "to #14701: Support query level scan bytes limits"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0bb45275a35341b80d17f20d4abd466fda60f796", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/0bb45275a35341b80d17f20d4abd466fda60f796", "committedDate": "2020-07-02T19:15:05Z", "message": "to #14701: Support query level scan bytes limits"}, "afterCommit": {"oid": "d2d5b4ebe988e4385b145e567c35fdd4c8c4de91", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/d2d5b4ebe988e4385b145e567c35fdd4c8c4de91", "committedDate": "2020-07-02T20:12:39Z", "message": "to #14701: Support query level scan bytes limits"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d2d5b4ebe988e4385b145e567c35fdd4c8c4de91", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/d2d5b4ebe988e4385b145e567c35fdd4c8c4de91", "committedDate": "2020-07-02T20:12:39Z", "message": "to #14701: Support query level scan bytes limits"}, "afterCommit": {"oid": "c733355b682d22751867203b7c6b8e2f6fd63b31", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/c733355b682d22751867203b7c6b8e2f6fd63b31", "committedDate": "2020-07-21T06:24:50Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c733355b682d22751867203b7c6b8e2f6fd63b31", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/c733355b682d22751867203b7c6b8e2f6fd63b31", "committedDate": "2020-07-21T06:24:50Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}, "afterCommit": {"oid": "3196c11c670f50055a21aa57cc14b840ec04aa96", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/3196c11c670f50055a21aa57cc14b840ec04aa96", "committedDate": "2020-07-21T19:39:15Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3196c11c670f50055a21aa57cc14b840ec04aa96", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/3196c11c670f50055a21aa57cc14b840ec04aa96", "committedDate": "2020-07-21T19:39:15Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}, "afterCommit": {"oid": "2f7fffb64ef18e48fa3946de94d4e817602b561f", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/2f7fffb64ef18e48fa3946de94d4e817602b561f", "committedDate": "2020-07-21T21:32:45Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f7fffb64ef18e48fa3946de94d4e817602b561f", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/2f7fffb64ef18e48fa3946de94d4e817602b561f", "committedDate": "2020-07-21T21:32:45Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}, "afterCommit": {"oid": "e714b67d68ff68b39a131c283013a1c634b79ea8", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/e714b67d68ff68b39a131c283013a1c634b79ea8", "committedDate": "2020-07-25T02:03:34Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjkzMjg5", "url": "https://github.com/prestodb/presto/pull/14739#pullrequestreview-455293289", "createdAt": "2020-07-25T15:56:43Z", "commit": {"oid": "e714b67d68ff68b39a131c283013a1c634b79ea8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxNTo1Njo0M1rOG3FrOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxNjo0MDozN1rOG3F7AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxNzg1MA==", "bodyText": "Putting a new comment since the old comment was marked as resolved. Lets match this with the actual metric (rawInputBytes) and the exception name - QUERY_MAX_SCAN_RAW_INPUT_BYTES", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r460417850", "createdAt": "2020-07-25T15:56:43Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java", "diffHunk": "@@ -424,6 +426,11 @@ public SystemSessionProperties(\n                         \"Use resources which are not guaranteed to be available to the query\",\n                         false,\n                         false),\n+                dataSizeProperty(\n+                        QUERY_MAX_SCAN_PHYSICAL_BYTES,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e714b67d68ff68b39a131c283013a1c634b79ea8"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxODE5Mw==", "bodyText": "Same comment as in SystemSessionProperties - lets use the same name as the actual metric - queryMaxRawInputBytes. In accordance with that lets change the config name as well - query.max-raw-input-bytes.", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r460418193", "createdAt": "2020-07-25T16:00:33Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java", "diffHunk": "@@ -66,6 +69,8 @@\n     private Duration queryMaxExecutionTime = new Duration(100, TimeUnit.DAYS);\n     private Duration queryMaxCpuTime = new Duration(1_000_000_000, TimeUnit.DAYS);\n \n+    private DataSize queryMaxScanPhysicalBytes = DataSize.succinctDataSize(1, PETABYTE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMwMjM4Mg=="}, "originalCommit": {"oid": "0b8fd9a9e8219a758ed73ca0f5cf857fd59678cd"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxOTI3NQ==", "bodyText": "these 2 are not being used - remove these", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r460419275", "createdAt": "2020-07-25T16:12:29Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlQueryManager.java", "diffHunk": "@@ -312,4 +324,21 @@ private void enforceCpuLimits()\n             }\n         }\n     }\n+\n+    /**\n+     * Enforce query scan physical bytes limits\n+     */\n+    private void enforceScanLimits()\n+    {\n+        for (QueryExecution query : queryTracker.getAllQueries()) {\n+            BasicQueryStats basicQueryStats = query.getBasicQueryInfo().getQueryStats();\n+            QueryStats queryStats = query.getQueryInfo().getQueryStats();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e714b67d68ff68b39a131c283013a1c634b79ea8"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQyMTg4OQ==", "bodyText": "This is still a bit expensive since getting querystats involves -> for all stages, for all tasks, for all metrics.\nThe way CPU does it is still cheaper -> all stages, all tasks, just the cpu - so we can do something similar here and make it even cheaper -\nWe can follow a similar flow here\nSqlQueryManager -> SqlQuerySchedulerInterface#getTotalCpuTime -> SqlStageExecution#getTotalCpuTime\nand just sum up the bytes involved.", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r460421889", "createdAt": "2020-07-25T16:40:37Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlQueryManager.java", "diffHunk": "@@ -312,4 +324,21 @@ private void enforceCpuLimits()\n             }\n         }\n     }\n+\n+    /**\n+     * Enforce query scan physical bytes limits\n+     */\n+    private void enforceScanLimits()\n+    {\n+        for (QueryExecution query : queryTracker.getAllQueries()) {\n+            BasicQueryStats basicQueryStats = query.getBasicQueryInfo().getQueryStats();\n+            QueryStats queryStats = query.getQueryInfo().getQueryStats();\n+            DataSize scan = query.getBasicQueryInfo().getQueryStats().getRawInputDataSize();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e714b67d68ff68b39a131c283013a1c634b79ea8"}, "originalPosition": 73}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e714b67d68ff68b39a131c283013a1c634b79ea8", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/e714b67d68ff68b39a131c283013a1c634b79ea8", "committedDate": "2020-07-25T02:03:34Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}, "afterCommit": {"oid": "711df3e6a9a7cb47564b67341d97ef5761fa7fe8", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/711df3e6a9a7cb47564b67341d97ef5761fa7fe8", "committedDate": "2020-07-26T05:23:49Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "711df3e6a9a7cb47564b67341d97ef5761fa7fe8", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/711df3e6a9a7cb47564b67341d97ef5761fa7fe8", "committedDate": "2020-07-26T05:23:49Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}, "afterCommit": {"oid": "0d8cff09d81e0b3697a2f5895482707c8cb49f27", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/0d8cff09d81e0b3697a2f5895482707c8cb49f27", "committedDate": "2020-07-26T06:23:16Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d8cff09d81e0b3697a2f5895482707c8cb49f27", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/0d8cff09d81e0b3697a2f5895482707c8cb49f27", "committedDate": "2020-07-26T06:23:16Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}, "afterCommit": {"oid": "7837b6b1f5179afb8be2f09ebf34d61aee45f3be", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/7837b6b1f5179afb8be2f09ebf34d61aee45f3be", "committedDate": "2020-07-29T07:45:31Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3Njc2NTMw", "url": "https://github.com/prestodb/presto/pull/14739#pullrequestreview-457676530", "createdAt": "2020-07-29T16:11:22Z", "commit": {"oid": "7837b6b1f5179afb8be2f09ebf34d61aee45f3be"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjoxMToyMlrOG4_ziw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjoxNzoyNFrOG5ADPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQxODgyNw==", "bodyText": "nit - lets rename this as rawInputSize", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r462418827", "createdAt": "2020-07-29T16:11:22Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlQueryManager.java", "diffHunk": "@@ -312,4 +323,19 @@ private void enforceCpuLimits()\n             }\n         }\n     }\n+\n+    /**\n+     * Enforce query scan physical bytes limits\n+     */\n+    private void enforceScanLimits()\n+    {\n+        for (QueryExecution query : queryTracker.getAllQueries()) {\n+            DataSize scan = query.getRawInputDataSize();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7837b6b1f5179afb8be2f09ebf34d61aee45f3be"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyMjg0NQ==", "bodyText": "Lets add this check at the top to ensure that we are only considering table scan nodes -\nif (planFragment.getTableScanSchedulingOrder().isEmpty()) {\n    return new DataSize(0, BYTE);\n}", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r462422845", "createdAt": "2020-07-29T16:17:24Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java", "diffHunk": "@@ -333,6 +334,14 @@ public synchronized Duration getTotalCpuTime()\n         return new Duration(millis, TimeUnit.MILLISECONDS);\n     }\n \n+    public synchronized DataSize getRawInputDataSize()\n+    {\n+        long datasize = getAllTasks().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7837b6b1f5179afb8be2f09ebf34d61aee45f3be"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7837b6b1f5179afb8be2f09ebf34d61aee45f3be", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/7837b6b1f5179afb8be2f09ebf34d61aee45f3be", "committedDate": "2020-07-29T07:45:31Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}, "afterCommit": {"oid": "e4279dc5593d2d8e1a745059458ba4417bc10eef", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/e4279dc5593d2d8e1a745059458ba4417bc10eef", "committedDate": "2020-07-29T18:06:06Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3Nzg1NzY4", "url": "https://github.com/prestodb/presto/pull/14739#pullrequestreview-457785768", "createdAt": "2020-07-29T18:34:08Z", "commit": {"oid": "e4279dc5593d2d8e1a745059458ba4417bc10eef"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODozNDowOFrOG5FFBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODozNDowOFrOG5FFBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUwNTIyMw==", "bodyText": "Lets set the default to a higher number to avoid unexpected failures when people deploy this new version. Every sys admin should be able to set a reasonable value in their configurations. How about an exabyte (1000, PETABYTE)?", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r462505223", "createdAt": "2020-07-29T18:34:08Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java", "diffHunk": "@@ -66,6 +69,8 @@\n     private Duration queryMaxExecutionTime = new Duration(100, TimeUnit.DAYS);\n     private Duration queryMaxCpuTime = new Duration(1_000_000_000, TimeUnit.DAYS);\n \n+    private DataSize queryMaxScanRawInputBytes = DataSize.succinctDataSize(1, PETABYTE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4279dc5593d2d8e1a745059458ba4417bc10eef"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e4279dc5593d2d8e1a745059458ba4417bc10eef", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/e4279dc5593d2d8e1a745059458ba4417bc10eef", "committedDate": "2020-07-29T18:06:06Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}, "afterCommit": {"oid": "fce6be09e7ce26be4f24d4a44411905597b0a3cd", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/fce6be09e7ce26be4f24d4a44411905597b0a3cd", "committedDate": "2020-07-29T18:48:43Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c712cb2388bf21af26703e90f5b4e011c8a0b49", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/0c712cb2388bf21af26703e90f5b4e011c8a0b49", "committedDate": "2020-07-29T18:50:27Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fce6be09e7ce26be4f24d4a44411905597b0a3cd", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/fce6be09e7ce26be4f24d4a44411905597b0a3cd", "committedDate": "2020-07-29T18:48:43Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}, "afterCommit": {"oid": "0c712cb2388bf21af26703e90f5b4e011c8a0b49", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/0c712cb2388bf21af26703e90f5b4e011c8a0b49", "committedDate": "2020-07-29T18:50:27Z", "message": "Add a limit on total number of bytes read from storage in table scan\n\nAdd query.max-scan-physical-bytes configuration and query_max_scan_physical_bytes\nsession properties to limit the total number of bytes reads from storage during table scan.\nThe default limit is 1PB."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NDM4OTQ4", "url": "https://github.com/prestodb/presto/pull/14739#pullrequestreview-458438948", "createdAt": "2020-07-30T14:10:58Z", "commit": {"oid": "0c712cb2388bf21af26703e90f5b4e011c8a0b49"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDoxMDo1OFrOG5kzEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDoxMDo1OFrOG5kzEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyNDkxNQ==", "bodyText": "Nice", "url": "https://github.com/prestodb/presto/pull/14739#discussion_r463024915", "createdAt": "2020-07-30T14:10:58Z", "author": {"login": "tdcmeehan"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/session/PropertyMetadata.java", "diffHunk": "@@ -199,4 +200,17 @@ public Object encode(T value)\n                 String.class::cast,\n                 object -> object);\n     }\n+\n+    public static PropertyMetadata<DataSize> dataSizeProperty(String name, String description, DataSize defaultValue, boolean hidden)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c712cb2388bf21af26703e90f5b4e011c8a0b49"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1525, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}