{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5ODI5MDcw", "number": 14039, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxNjoyMlrODcy3HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMDoyNzoxN1rODc0mnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTIwMDI5OnYy", "diffSide": "RIGHT", "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxNjoyMlrOFlB5Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMzo1OTo0OVrOFlEIhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3MjY1NA==", "bodyText": "The assert should be always on the length <= maxBufferSize. Checking on compressed size is incorrect as compressed size will always be less than length. maxBufferSize already accounts for PAGE_HEADER_SIZE and using that in addition to length will result in incorrect assertions.", "url": "https://github.com/prestodb/presto/pull/14039#discussion_r374372654", "createdAt": "2020-02-03T22:16:22Z", "author": {"login": "arunthirupathi"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "diffHunk": "@@ -444,13 +450,15 @@ private void writeChunkToOutputStream(byte[] chunk, int offset, int length)\n \n         int compressedSize = compressor.compress(chunk, offset, length, compressionBuffer, 0, compressionBuffer.length);\n         if (compressedSize < length) {\n+            assert PAGE_HEADER_SIZE + compressedSize <= maxBufferSize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4996ade82fb1112d9bc9140ba09330d1daf6a164"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQwOTM1MA==", "bodyText": "Good catch. This is from the previous approach that I initially drafted.", "url": "https://github.com/prestodb/presto/pull/14039#discussion_r374409350", "createdAt": "2020-02-03T23:59:49Z", "author": {"login": "islamismailov"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "diffHunk": "@@ -444,13 +450,15 @@ private void writeChunkToOutputStream(byte[] chunk, int offset, int length)\n \n         int compressedSize = compressor.compress(chunk, offset, length, compressionBuffer, 0, compressionBuffer.length);\n         if (compressedSize < length) {\n+            assert PAGE_HEADER_SIZE + compressedSize <= maxBufferSize;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3MjY1NA=="}, "originalCommit": {"oid": "4996ade82fb1112d9bc9140ba09330d1daf6a164"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTI0MTU3OnYy", "diffSide": "RIGHT", "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjozMToyNlrOFlCSUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjozMToyNlrOFlCSUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3OTA4OA==", "bodyText": "In my opinion this assert should be minWritableBytes <= maxBufferSize . sliceLength <= maxBufferSize will be verified in writeChunkToOutputStream.", "url": "https://github.com/prestodb/presto/pull/14039#discussion_r374379088", "createdAt": "2020-02-03T22:31:26Z", "author": {"login": "arunthirupathi"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "diffHunk": "@@ -386,12 +388,14 @@ public String toString()\n \n     private void ensureWritableBytes(int minWritableBytes)\n     {\n+        assert slice.length() <= maxBufferSize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4996ade82fb1112d9bc9140ba09330d1daf6a164"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTI1MDA1OnYy", "diffSide": "RIGHT", "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjozNDoyOFrOFlCXZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMzo1NjowN1rOFlEEhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM4MDM4OA==", "bodyText": "as defensive coding, this should be still >= and let the assert inside writeChunkToOutputStream fire.", "url": "https://github.com/prestodb/presto/pull/14039#discussion_r374380388", "createdAt": "2020-02-03T22:34:28Z", "author": {"login": "arunthirupathi"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "diffHunk": "@@ -386,12 +388,14 @@ public String toString()\n \n     private void ensureWritableBytes(int minWritableBytes)\n     {\n+        assert slice.length() <= maxBufferSize;\n+\n         int neededBufferSize = bufferPosition + minWritableBytes;\n         if (neededBufferSize <= slice.length()) {\n             return;\n         }\n \n-        if (slice.length() >= maxBufferSize) {\n+        if (slice.length() == maxBufferSize) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4996ade82fb1112d9bc9140ba09330d1daf6a164"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQwODMyNA==", "bodyText": "This statement works with the assert above (slice.length() <= maxBufferSize), which makes sure that maxBufferSize > slice.length() is never the case, and we handle the only two other cases.\nBut I think your suggestions also make sense.", "url": "https://github.com/prestodb/presto/pull/14039#discussion_r374408324", "createdAt": "2020-02-03T23:56:07Z", "author": {"login": "islamismailov"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "diffHunk": "@@ -386,12 +388,14 @@ public String toString()\n \n     private void ensureWritableBytes(int minWritableBytes)\n     {\n+        assert slice.length() <= maxBufferSize;\n+\n         int neededBufferSize = bufferPosition + minWritableBytes;\n         if (neededBufferSize <= slice.length()) {\n             return;\n         }\n \n-        if (slice.length() >= maxBufferSize) {\n+        if (slice.length() == maxBufferSize) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM4MDM4OA=="}, "originalCommit": {"oid": "4996ade82fb1112d9bc9140ba09330d1daf6a164"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTQ4MjI2OnYy", "diffSide": "RIGHT", "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMDoyNToxNFrOFlEkrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMDoyNToxNFrOFlEkrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQxNjU1OQ==", "bodyText": "We don't use assert in the codebase. Replace it with checkState(...) or verify(...) for state check or assertion. We also use  checkArgument to check arguments.", "url": "https://github.com/prestodb/presto/pull/14039#discussion_r374416559", "createdAt": "2020-02-04T00:25:14Z", "author": {"login": "highker"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "diffHunk": "@@ -386,12 +387,14 @@ public String toString()\n \n     private void ensureWritableBytes(int minWritableBytes)\n     {\n+        assert minWritableBytes <= maxBufferSize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e97acad84158d26aea68dedb1ec84a3d3a7e0d2c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTQ4NTczOnYy", "diffSide": "RIGHT", "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMDoyNzoxN1rOFlEmzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxOTo1NTo0N1rOFlhc4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQxNzEwMg==", "bodyText": "Is this number 3 coming from the 3-bit header from ORC spec? If yes, could you add a comment?", "url": "https://github.com/prestodb/presto/pull/14039#discussion_r374417102", "createdAt": "2020-02-04T00:27:17Z", "author": {"login": "highker"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "diffHunk": "@@ -49,6 +49,7 @@\n         extends SliceOutput\n {\n     private static final int INSTANCE_SIZE = ClassLayout.parseClass(OrcOutputBuffer.class).instanceSize();\n+    private static final int PAGE_HEADER_SIZE = 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e97acad84158d26aea68dedb1ec84a3d3a7e0d2c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4OTY5OA==", "bodyText": "Yes, these are the 3 bytes that are used for the header.\nhttps://github.com/apache/orc/blob/028261ad6e26d8ae9f9483c8aeb76a85c7f1168b/c%2B%2B/src/Compression.cc#L186", "url": "https://github.com/prestodb/presto/pull/14039#discussion_r374889698", "createdAt": "2020-02-04T19:55:47Z", "author": {"login": "islamismailov"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "diffHunk": "@@ -49,6 +49,7 @@\n         extends SliceOutput\n {\n     private static final int INSTANCE_SIZE = ClassLayout.parseClass(OrcOutputBuffer.class).instanceSize();\n+    private static final int PAGE_HEADER_SIZE = 3;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQxNzEwMg=="}, "originalCommit": {"oid": "e97acad84158d26aea68dedb1ec84a3d3a7e0d2c"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3214, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}