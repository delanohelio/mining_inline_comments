{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyODg1NzEy", "number": 14636, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzozODozM1rOEEyG5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOToyOTozNlrOEE0dNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDUwNzI0OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzozODozM1rOGinxaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzozODozM1rOGinxaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1NjM5NQ==", "bodyText": "I went with maintaining both the string representation and the UUID so that the existing code which uses the string representation continues to do so and whatever extra cost of calling UUID.toString each time getTaskInstanceId is called is avoided. If removing the string representation is deemed cleaner I can take this out.", "url": "https://github.com/prestodb/presto/pull/14636#discussion_r438956395", "createdAt": "2020-06-11T17:38:33Z", "author": {"login": "ajaygeorge"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlTask.java", "diffHunk": "@@ -71,6 +71,7 @@\n     private static final Logger log = Logger.get(SqlTask.class);\n \n     private final TaskId taskId;\n+    private final UUID taskInstanceUUID;\n     private final String taskInstanceId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7bd96787fd6ce5a925a8e404684e3f2ee278da4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDYyMTg3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/execution/TaskStatus.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODowMzo0OFrOGio7gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjowNDozM1rOGk20EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3NTM2Mg==", "bodyText": "let's not abreviate, call it LeastSignificantBits", "url": "https://github.com/prestodb/presto/pull/14636#discussion_r438975362", "createdAt": "2020-06-11T18:03:48Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/TaskStatus.java", "diffHunk": "@@ -86,7 +88,8 @@ public TaskStatus(\n             @JsonProperty(\"fullGcCount\") long fullGcCount,\n             @JsonProperty(\"fullGcTimeInMillis\") long fullGcTimeInMillis)\n     {\n-        this.taskInstanceId = requireNonNull(taskInstanceId, \"taskInstanceId is null\");\n+        this.taskInstanceIdLsb = taskInstanceIdLsb;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7bd96787fd6ce5a925a8e404684e3f2ee278da4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5OTk4NA==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/14636#discussion_r441299984", "createdAt": "2020-06-17T06:04:33Z", "author": {"login": "ajaygeorge"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/TaskStatus.java", "diffHunk": "@@ -86,7 +88,8 @@ public TaskStatus(\n             @JsonProperty(\"fullGcCount\") long fullGcCount,\n             @JsonProperty(\"fullGcTimeInMillis\") long fullGcTimeInMillis)\n     {\n-        this.taskInstanceId = requireNonNull(taskInstanceId, \"taskInstanceId is null\");\n+        this.taskInstanceIdLsb = taskInstanceIdLsb;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3NTM2Mg=="}, "originalCommit": {"oid": "f7bd96787fd6ce5a925a8e404684e3f2ee278da4"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDY0OTEzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlTask.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODoxMTo0M1rOGipMnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjowNDowNFrOGk2zhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3OTc0Mw==", "bodyText": "It's a little weird to have them both. It feels like a single part (one long) should have enough entropy. Should we simply switch to a single long?", "url": "https://github.com/prestodb/presto/pull/14636#discussion_r438979743", "createdAt": "2020-06-11T18:11:43Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlTask.java", "diffHunk": "@@ -123,7 +124,8 @@ private SqlTask(\n             DataSize maxBufferSize)\n     {\n         this.taskId = requireNonNull(taskId, \"taskId is null\");\n-        this.taskInstanceId = UUID.randomUUID().toString();\n+        this.taskInstanceUUID = UUID.randomUUID();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7bd96787fd6ce5a925a8e404684e3f2ee278da4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk4MDM0NA==", "bodyText": "I clicked \"approve\" by an incident. Let's discuss this first.", "url": "https://github.com/prestodb/presto/pull/14636#discussion_r438980344", "createdAt": "2020-06-11T18:12:49Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlTask.java", "diffHunk": "@@ -123,7 +124,8 @@ private SqlTask(\n             DataSize maxBufferSize)\n     {\n         this.taskId = requireNonNull(taskId, \"taskId is null\");\n-        this.taskInstanceId = UUID.randomUUID().toString();\n+        this.taskInstanceUUID = UUID.randomUUID();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3OTc0Mw=="}, "originalCommit": {"oid": "f7bd96787fd6ce5a925a8e404684e3f2ee278da4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAyMTcwNQ==", "bodyText": "Ideally, we should try to keep an object in wire and memory same/similar to avoid additional decoding. I suggest to use TaskInstanceId class everywhere that I described above.", "url": "https://github.com/prestodb/presto/pull/14636#discussion_r439021705", "createdAt": "2020-06-11T19:33:00Z", "author": {"login": "cemcayiroglu"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlTask.java", "diffHunk": "@@ -123,7 +124,8 @@ private SqlTask(\n             DataSize maxBufferSize)\n     {\n         this.taskId = requireNonNull(taskId, \"taskId is null\");\n-        this.taskInstanceId = UUID.randomUUID().toString();\n+        this.taskInstanceUUID = UUID.randomUUID();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3OTc0Mw=="}, "originalCommit": {"oid": "f7bd96787fd6ce5a925a8e404684e3f2ee278da4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1ODY5Ng==", "bodyText": "It's a little weird to have them both. It feels like a single part (one long) should have enough entropy. Should we simply switch to a single long?\n\nBy switching to a single long we are effectively halving from where we are currently. I think for this effort we should be focusing on keeping the functionality as is. Let me know what you think.", "url": "https://github.com/prestodb/presto/pull/14636#discussion_r439158696", "createdAt": "2020-06-12T01:23:48Z", "author": {"login": "ajaygeorge"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlTask.java", "diffHunk": "@@ -123,7 +124,8 @@ private SqlTask(\n             DataSize maxBufferSize)\n     {\n         this.taskId = requireNonNull(taskId, \"taskId is null\");\n-        this.taskInstanceId = UUID.randomUUID().toString();\n+        this.taskInstanceUUID = UUID.randomUUID();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3OTc0Mw=="}, "originalCommit": {"oid": "f7bd96787fd6ce5a925a8e404684e3f2ee278da4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUxNzE3MA==", "bodyText": "I wonder why do we need to have it string. Why it cannot be simply long everywhere?", "url": "https://github.com/prestodb/presto/pull/14636#discussion_r439517170", "createdAt": "2020-06-12T16:18:17Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlTask.java", "diffHunk": "@@ -123,7 +124,8 @@ private SqlTask(\n             DataSize maxBufferSize)\n     {\n         this.taskId = requireNonNull(taskId, \"taskId is null\");\n-        this.taskInstanceId = UUID.randomUUID().toString();\n+        this.taskInstanceUUID = UUID.randomUUID();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3OTc0Mw=="}, "originalCommit": {"oid": "f7bd96787fd6ce5a925a8e404684e3f2ee278da4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk4MjAyNg==", "bodyText": "I wonder why do we need to have it string. Why it cannot be simply long everywhere?\n\nMight not be a bad idea, I think I thought about this earlier but saw that SqlTaskManager's getTaskInstanceId returns a string and thought might be cleaner to keep everything SqlTask related as string instead of long. Maybe I can just wrap the long from SqlTask in String.valueOf and return in SqlTaskManager.", "url": "https://github.com/prestodb/presto/pull/14636#discussion_r440982026", "createdAt": "2020-06-16T16:25:20Z", "author": {"login": "ajaygeorge"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlTask.java", "diffHunk": "@@ -123,7 +124,8 @@ private SqlTask(\n             DataSize maxBufferSize)\n     {\n         this.taskId = requireNonNull(taskId, \"taskId is null\");\n-        this.taskInstanceId = UUID.randomUUID().toString();\n+        this.taskInstanceUUID = UUID.randomUUID();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3OTc0Mw=="}, "originalCommit": {"oid": "f7bd96787fd6ce5a925a8e404684e3f2ee278da4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5MDMwNw==", "bodyText": "Regarding going from UUID to one long, I had some more thought.\nI don't think we are halving the entropy. Let me know if the following logic makes sense.\nI think math would be something like with one long we have 2^64 combinations and with two longs we have 2^128 combinations. So we are losing a factor of 2^64 in entropy and not 2 by going from 2 longs to one long.\nA simpler way to think is comparing 2 bits and 4 bits. Even though the number of bits is double the combinations we can represent are 4 and 16 respectively, which makes for a factor of 4.", "url": "https://github.com/prestodb/presto/pull/14636#discussion_r440990307", "createdAt": "2020-06-16T16:36:57Z", "author": {"login": "ajaygeorge"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlTask.java", "diffHunk": "@@ -123,7 +124,8 @@ private SqlTask(\n             DataSize maxBufferSize)\n     {\n         this.taskId = requireNonNull(taskId, \"taskId is null\");\n-        this.taskInstanceId = UUID.randomUUID().toString();\n+        this.taskInstanceUUID = UUID.randomUUID();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3OTc0Mw=="}, "originalCommit": {"oid": "f7bd96787fd6ce5a925a8e404684e3f2ee278da4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5OTg0Nw==", "bodyText": "Keeping two longs as discussed offline to maintain parity with the existing code.", "url": "https://github.com/prestodb/presto/pull/14636#discussion_r441299847", "createdAt": "2020-06-17T06:04:04Z", "author": {"login": "ajaygeorge"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/SqlTask.java", "diffHunk": "@@ -123,7 +124,8 @@ private SqlTask(\n             DataSize maxBufferSize)\n     {\n         this.taskId = requireNonNull(taskId, \"taskId is null\");\n-        this.taskInstanceId = UUID.randomUUID().toString();\n+        this.taskInstanceUUID = UUID.randomUUID();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3OTc0Mw=="}, "originalCommit": {"oid": "f7bd96787fd6ce5a925a8e404684e3f2ee278da4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDg4OTQzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/execution/TaskStatus.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOToyODozN1rOGirn6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjowNDo0MVrOGk20Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAxOTQ5OQ==", "bodyText": "I think we should create a class to represent taskInstanceId  that  holds long taskInstanceIdLsb and long taskInstanceIdMsb. It may increase the overhead on JSON.", "url": "https://github.com/prestodb/presto/pull/14636#discussion_r439019499", "createdAt": "2020-06-11T19:28:37Z", "author": {"login": "cemcayiroglu"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/TaskStatus.java", "diffHunk": "@@ -70,7 +71,8 @@\n \n     @JsonCreator\n     public TaskStatus(\n-            @JsonProperty(\"taskInstanceId\") String taskInstanceId,\n+            @JsonProperty(\"taskInstanceIdLsb\") long taskInstanceIdLsb,\n+            @JsonProperty(\"taskInstanceIdMsb\") long taskInstanceIdMsb,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7bd96787fd6ce5a925a8e404684e3f2ee278da4"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwMDAyNw==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/14636#discussion_r441300027", "createdAt": "2020-06-17T06:04:41Z", "author": {"login": "ajaygeorge"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/TaskStatus.java", "diffHunk": "@@ -70,7 +71,8 @@\n \n     @JsonCreator\n     public TaskStatus(\n-            @JsonProperty(\"taskInstanceId\") String taskInstanceId,\n+            @JsonProperty(\"taskInstanceIdLsb\") long taskInstanceIdLsb,\n+            @JsonProperty(\"taskInstanceIdMsb\") long taskInstanceIdMsb,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAxOTQ5OQ=="}, "originalCommit": {"oid": "f7bd96787fd6ce5a925a8e404684e3f2ee278da4"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDg5MjA2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/server/remotetask/ContinuousTaskStatusFetcher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOToyOTozNlrOGirpyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjowNDo0N1rOGk20YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAxOTk3Ng==", "bodyText": "We can move this logic to the new TaskInstanceId.", "url": "https://github.com/prestodb/presto/pull/14636#discussion_r439019976", "createdAt": "2020-06-11T19:29:36Z", "author": {"login": "cemcayiroglu"}, "path": "presto-main/src/main/java/com/facebook/presto/server/remotetask/ContinuousTaskStatusFetcher.java", "diffHunk": "@@ -230,7 +229,8 @@ void updateTaskStatus(TaskStatus newValue)\n         AtomicBoolean taskMismatch = new AtomicBoolean();\n         taskStatus.setIf(newValue, oldValue -> {\n             // did the task instance id change\n-            if (!isNullOrEmpty(oldValue.getTaskInstanceId()) && !oldValue.getTaskInstanceId().equals(newValue.getTaskInstanceId())) {\n+            boolean isOldValueEmpty = oldValue.getTaskInstanceIdLsb() == 0 && oldValue.getTaskInstanceIdMsb() == 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7bd96787fd6ce5a925a8e404684e3f2ee278da4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwMDA2NA==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/14636#discussion_r441300064", "createdAt": "2020-06-17T06:04:47Z", "author": {"login": "ajaygeorge"}, "path": "presto-main/src/main/java/com/facebook/presto/server/remotetask/ContinuousTaskStatusFetcher.java", "diffHunk": "@@ -230,7 +229,8 @@ void updateTaskStatus(TaskStatus newValue)\n         AtomicBoolean taskMismatch = new AtomicBoolean();\n         taskStatus.setIf(newValue, oldValue -> {\n             // did the task instance id change\n-            if (!isNullOrEmpty(oldValue.getTaskInstanceId()) && !oldValue.getTaskInstanceId().equals(newValue.getTaskInstanceId())) {\n+            boolean isOldValueEmpty = oldValue.getTaskInstanceIdLsb() == 0 && oldValue.getTaskInstanceIdMsb() == 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAxOTk3Ng=="}, "originalCommit": {"oid": "f7bd96787fd6ce5a925a8e404684e3f2ee278da4"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2427, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}