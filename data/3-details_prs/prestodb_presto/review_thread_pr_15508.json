{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NTgzNjQy", "number": 15508, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODowNTo1NFrOFCg3zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTo1NToxM1rOFDG_9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MTgwMDQ3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/com/facebook/presto/operator/scalar/TestVarbinaryFunctions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODowNTo1NFrOIBuFJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODo0MzozNlrOIBwaLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3NDQ2OQ==", "bodyText": "Also add a couple of tests that check:\nreverse(reverse(x)) = x", "url": "https://github.com/prestodb/presto/pull/15508#discussion_r538674469", "createdAt": "2020-12-08T18:05:54Z", "author": {"login": "kaikalur"}, "path": "presto-main/src/test/java/com/facebook/presto/operator/scalar/TestVarbinaryFunctions.java", "diffHunk": "@@ -511,4 +511,13 @@ private static SqlVarbinary varbinary(int... bytesAsInts)\n         }\n         return new SqlVarbinary(bytes);\n     }\n+\n+    @Test\n+    public void testReverse()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c45dc9d111474fb5bb9991c72fe6e862ef70253f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxMjYyMA==", "bodyText": "Added", "url": "https://github.com/prestodb/presto/pull/15508#discussion_r538712620", "createdAt": "2020-12-08T18:43:36Z", "author": {"login": "EmmyEmmy"}, "path": "presto-main/src/test/java/com/facebook/presto/operator/scalar/TestVarbinaryFunctions.java", "diffHunk": "@@ -511,4 +511,13 @@ private static SqlVarbinary varbinary(int... bytesAsInts)\n         }\n         return new SqlVarbinary(bytes);\n     }\n+\n+    @Test\n+    public void testReverse()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3NDQ2OQ=="}, "originalCommit": {"oid": "c45dc9d111474fb5bb9991c72fe6e862ef70253f"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODA0NzI0OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/com/facebook/presto/operator/scalar/TestVarbinaryFunctions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTo1NToxM1rOICmuYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMTo1NzowNlrOICrWwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwMjUyOQ==", "bodyText": "this one should probably be assertFunction(\"REVERSE(CAST(null AS VARBINARY))\", VARBINARY, null); or something like that?", "url": "https://github.com/prestodb/presto/pull/15508#discussion_r539602529", "createdAt": "2020-12-09T19:55:13Z", "author": {"login": "rongrong"}, "path": "presto-main/src/test/java/com/facebook/presto/operator/scalar/TestVarbinaryFunctions.java", "diffHunk": "@@ -511,4 +511,15 @@ private static SqlVarbinary varbinary(int... bytesAsInts)\n         }\n         return new SqlVarbinary(bytes);\n     }\n+\n+    @Test\n+    public void testReverse()\n+    {\n+        assertFunction(\"REVERSE(CAST(null AS VARBINARY))\", VARBINARY, sqlVarbinary(\"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "526a964ddcc2126218e20d148817d5594e44f2d5"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3ODQwMQ==", "bodyText": "Yup, thanks =) Sent another iter", "url": "https://github.com/prestodb/presto/pull/15508#discussion_r539678401", "createdAt": "2020-12-09T21:57:06Z", "author": {"login": "EmmyEmmy"}, "path": "presto-main/src/test/java/com/facebook/presto/operator/scalar/TestVarbinaryFunctions.java", "diffHunk": "@@ -511,4 +511,15 @@ private static SqlVarbinary varbinary(int... bytesAsInts)\n         }\n         return new SqlVarbinary(bytes);\n     }\n+\n+    @Test\n+    public void testReverse()\n+    {\n+        assertFunction(\"REVERSE(CAST(null AS VARBINARY))\", VARBINARY, sqlVarbinary(\"\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwMjUyOQ=="}, "originalCommit": {"oid": "526a964ddcc2126218e20d148817d5594e44f2d5"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3264, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}