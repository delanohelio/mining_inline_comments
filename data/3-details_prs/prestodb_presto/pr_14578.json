{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyOTQ3ODc2", "number": 14578, "title": "Filtering nulls from joins when possible", "bodyText": "== RELEASE NOTES ==\n\nGeneral Changes\n* Add optimization to push null filters to the INNER side of equijoins. The optimization can be enabled with `optimize-nulls-in-joins`.", "createdAt": "2020-05-26T01:56:32Z", "url": "https://github.com/prestodb/presto/pull/14578", "merged": true, "mergeCommit": {"oid": "c8c88a5957f1dab8b6c32967dd70a41900f03fbe"}, "closed": true, "closedAt": "2020-06-23T01:26:35Z", "author": {"login": "ssaumitra"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABck63ONAFqTQxNzkyNzkwMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABct3hI7gFqTQzNTI3ODMxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3OTI3OTAz", "url": "https://github.com/prestodb/presto/pull/14578#pullrequestreview-417927903", "createdAt": "2020-05-26T02:02:09Z", "commit": {"oid": "46ddbe8099ccf247447e0af24a517325cc140c9a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMjowMjowOVrOGaMgEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMjowMjowOVrOGaMgEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEyMDk3OA==", "bodyText": "I tried to add this optimisation in PlanOptimizers where all the other optimizers live . ssaumitra@07ca92e\nThe problem was that, RelationPlanner converts equality join expressions to JoinNode.EquiJoinClause. So IsNotNullPredicate can no longer be constructed over there. If there is a way to make that work, please let me know.\nCC. @rschlussel", "url": "https://github.com/prestodb/presto/pull/14578#discussion_r430120978", "createdAt": "2020-05-26T02:02:09Z", "author": {"login": "ssaumitra"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/RelationPlanner.java", "diffHunk": "@@ -315,17 +316,21 @@ else if (firstDependencies.stream().allMatch(right::canResolve) && secondDepende\n             rightPlanBuilder = rightPlanBuilder.appendProjections(rightComparisonExpressions, variableAllocator, idAllocator);\n \n             for (int i = 0; i < leftComparisonExpressions.size(); i++) {\n+                Expression leftExpression = leftPlanBuilder.rewrite(leftComparisonExpressions.get(i));\n+                Expression rightExpression = rightPlanBuilder.rewrite(rightComparisonExpressions.get(i));\n                 if (joinConditionComparisonOperators.get(i) == ComparisonExpression.Operator.EQUAL) {\n                     VariableReferenceExpression leftVariable = leftPlanBuilder.translateToVariable(leftComparisonExpressions.get(i));\n                     VariableReferenceExpression righVariable = rightPlanBuilder.translateToVariable(rightComparisonExpressions.get(i));\n \n                     equiClauses.add(new JoinNode.EquiJoinClause(leftVariable, righVariable));\n                 }\n                 else {\n-                    Expression leftExpression = leftPlanBuilder.rewrite(leftComparisonExpressions.get(i));\n-                    Expression rightExpression = rightPlanBuilder.rewrite(rightComparisonExpressions.get(i));\n                     postInnerJoinConditions.add(new ComparisonExpression(joinConditionComparisonOperators.get(i), leftExpression, rightExpression));\n                 }\n+                if (node.getType() == INNER) {\n+                    postInnerJoinConditions.add(new IsNotNullPredicate(leftExpression));\n+                    postInnerJoinConditions.add(new IsNotNullPredicate(rightExpression));\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46ddbe8099ccf247447e0af24a517325cc140c9a"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NTI0MjU3", "url": "https://github.com/prestodb/presto/pull/14578#pullrequestreview-418524257", "createdAt": "2020-05-26T17:33:14Z", "commit": {"oid": "46ddbe8099ccf247447e0af24a517325cc140c9a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46ddbe8099ccf247447e0af24a517325cc140c9a", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/46ddbe8099ccf247447e0af24a517325cc140c9a", "committedDate": "2020-05-26T01:42:56Z", "message": "Filtering nulls from left and right in inner join"}, "afterCommit": {"oid": "2fba2b2715023631fe2ae94fcb1e8b1973ce98cf", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/2fba2b2715023631fe2ae94fcb1e8b1973ce98cf", "committedDate": "2020-05-28T01:32:33Z", "message": "Filtering nulls from left and right in inner join"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2fba2b2715023631fe2ae94fcb1e8b1973ce98cf", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/2fba2b2715023631fe2ae94fcb1e8b1973ce98cf", "committedDate": "2020-05-28T01:32:33Z", "message": "Filtering nulls from left and right in inner join"}, "afterCommit": {"oid": "544f810a7c23ede1716b6f497a526a7e2635daec", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/544f810a7c23ede1716b6f497a526a7e2635daec", "committedDate": "2020-05-28T01:34:19Z", "message": "Join optimisation: filtering null rows explicitly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "544f810a7c23ede1716b6f497a526a7e2635daec", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/544f810a7c23ede1716b6f497a526a7e2635daec", "committedDate": "2020-05-28T01:34:19Z", "message": "Join optimisation: filtering null rows explicitly"}, "afterCommit": {"oid": "22abb119b07dad959282be488522ecce68cda6cc", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/22abb119b07dad959282be488522ecce68cda6cc", "committedDate": "2020-05-28T17:57:10Z", "message": "Join optimisation: filtering null rows explicitly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22abb119b07dad959282be488522ecce68cda6cc", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/22abb119b07dad959282be488522ecce68cda6cc", "committedDate": "2020-05-28T17:57:10Z", "message": "Join optimisation: filtering null rows explicitly"}, "afterCommit": {"oid": "42b4c9f7dbddbc897a81702475d3b9be12fc6e54", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/42b4c9f7dbddbc897a81702475d3b9be12fc6e54", "committedDate": "2020-05-28T21:03:21Z", "message": "Join optimisation: filtering null rows explicitly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNjU1ODA2", "url": "https://github.com/prestodb/presto/pull/14578#pullrequestreview-420655806", "createdAt": "2020-05-29T05:10:34Z", "commit": {"oid": "42b4c9f7dbddbc897a81702475d3b9be12fc6e54"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNToxMDozNFrOGcO9wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNToxMDozNFrOGcO9wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1ODQ5OA==", "bodyText": "Are you sure these are just the keys not any other expressions?", "url": "https://github.com/prestodb/presto/pull/14578#discussion_r432258498", "createdAt": "2020-05-29T05:10:34Z", "author": {"login": "kaikalur"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/RelationPlanner.java", "diffHunk": "@@ -290,11 +291,13 @@ else if (conjunct instanceof ComparisonExpression) {\n                     if (firstDependencies.stream().allMatch(left::canResolve) && secondDependencies.stream().allMatch(right::canResolve)) {\n                         leftComparisonExpressions.add(firstExpression);\n                         rightComparisonExpressions.add(secondExpression);\n+                        addNullFilters(complexJoinExpressions, node.getType(), firstExpression, secondExpression);\n                         joinConditionComparisonOperators.add(comparisonOperator);\n                     }\n                     else if (firstDependencies.stream().allMatch(right::canResolve) && secondDependencies.stream().allMatch(left::canResolve)) {\n                         leftComparisonExpressions.add(secondExpression);\n                         rightComparisonExpressions.add(firstExpression);\n+                        addNullFilters(complexJoinExpressions, node.getType(), secondExpression, firstExpression);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b4c9f7dbddbc897a81702475d3b9be12fc6e54"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "42b4c9f7dbddbc897a81702475d3b9be12fc6e54", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/42b4c9f7dbddbc897a81702475d3b9be12fc6e54", "committedDate": "2020-05-28T21:03:21Z", "message": "Join optimisation: filtering null rows explicitly"}, "afterCommit": {"oid": "55e9cff980d19a41ba6e87a9a8894ef346813bac", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/55e9cff980d19a41ba6e87a9a8894ef346813bac", "committedDate": "2020-05-31T19:57:27Z", "message": "Join optimisation: filtering null rows explicitly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55e9cff980d19a41ba6e87a9a8894ef346813bac", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/55e9cff980d19a41ba6e87a9a8894ef346813bac", "committedDate": "2020-05-31T19:57:27Z", "message": "Join optimisation: filtering null rows explicitly"}, "afterCommit": {"oid": "93a924f64acba19e39f7c4b0394f5fe6a3f7729c", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/93a924f64acba19e39f7c4b0394f5fe6a3f7729c", "committedDate": "2020-05-31T20:07:16Z", "message": "Join optimisation: filtering null rows explicitly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTk4MjMz", "url": "https://github.com/prestodb/presto/pull/14578#pullrequestreview-421598233", "createdAt": "2020-06-01T05:20:07Z", "commit": {"oid": "93a924f64acba19e39f7c4b0394f5fe6a3f7729c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93a924f64acba19e39f7c4b0394f5fe6a3f7729c", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/93a924f64acba19e39f7c4b0394f5fe6a3f7729c", "committedDate": "2020-05-31T20:07:16Z", "message": "Join optimisation: filtering null rows explicitly"}, "afterCommit": {"oid": "7d5e2eb74aba2f2c8cca95eaa623bc99ef999010", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/7d5e2eb74aba2f2c8cca95eaa623bc99ef999010", "committedDate": "2020-06-01T22:39:11Z", "message": "New system property to control null optimization in join"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7d5e2eb74aba2f2c8cca95eaa623bc99ef999010", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/7d5e2eb74aba2f2c8cca95eaa623bc99ef999010", "committedDate": "2020-06-01T22:39:11Z", "message": "New system property to control null optimization in join"}, "afterCommit": {"oid": "c509184874298c9c87adb2aad06cd861340a61ec", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/c509184874298c9c87adb2aad06cd861340a61ec", "committedDate": "2020-06-02T00:36:47Z", "message": "New system property to control null optimization in join"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMzA1Njgx", "url": "https://github.com/prestodb/presto/pull/14578#pullrequestreview-422305681", "createdAt": "2020-06-02T02:43:23Z", "commit": {"oid": "c509184874298c9c87adb2aad06cd861340a61ec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjo0MzoyNFrOGdgQ5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjo0MzoyNFrOGdgQ5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU5MDUwMg==", "bodyText": "Looks good. Just add one more test with some conditions like:\nWHERE a.x IS NULL\netc. so we can ensure that we did not push that down.", "url": "https://github.com/prestodb/presto/pull/14578#discussion_r433590502", "createdAt": "2020-06-02T02:43:24Z", "author": {"login": "kaikalur"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "diffHunk": "@@ -8186,6 +8186,22 @@ public void testLateralJoin()\n                 \"line .*: LATERAL on other than the right side of CROSS JOIN is not supported\");\n     }\n \n+    @Test\n+    public void testJoinsWithNulls()\n+    {\n+        assertQuery(\"SELECT * FROM (VALUES 2, 3, null) a(x) INNER JOIN (VALUES 3, 4, null) b(x) ON a.x = b.x\",\n+                \"SELECT * FROM VALUES (3, 3)\");\n+\n+        assertQuery(\"SELECT * FROM (VALUES 2, 3, null) a(x) LEFT JOIN (VALUES 3, 4, null) b(x) ON a.x = b.x\",\n+                \"SELECT * FROM VALUES (3, 3), (2, NULL), (NULL, NULL)\");\n+\n+        assertQuery(\"SELECT * FROM (VALUES 2, 3, null) a(x) RIGHT JOIN (VALUES 3, 4, null) b(x) ON a.x = b.x\",\n+                \"SELECT * FROM VALUES (3, 3), (NULL, 4), (NULL, NULL)\");\n+\n+        assertQuery(\"SELECT * FROM (VALUES 2, 3, null) a(x) FULL OUTER JOIN (VALUES 3, 4, null) b(x) ON a.x = b.x\",\n+                \"SELECT * FROM VALUES (3, 3), (NULL, 4), (2, NULL), (NULL, NULL), (NULL, NULL)\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c509184874298c9c87adb2aad06cd861340a61ec"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c509184874298c9c87adb2aad06cd861340a61ec", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/c509184874298c9c87adb2aad06cd861340a61ec", "committedDate": "2020-06-02T00:36:47Z", "message": "New system property to control null optimization in join"}, "afterCommit": {"oid": "7c9d9a72041865f47b39f03688e5057131a0279a", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/7c9d9a72041865f47b39f03688e5057131a0279a", "committedDate": "2020-06-02T15:35:13Z", "message": "New system property to control null optimization in join"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c9d9a72041865f47b39f03688e5057131a0279a", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/7c9d9a72041865f47b39f03688e5057131a0279a", "committedDate": "2020-06-02T15:35:13Z", "message": "New system property to control null optimization in join"}, "afterCommit": {"oid": "81366374205b9cea987d6fe476c2cd40c637e718", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/81366374205b9cea987d6fe476c2cd40c637e718", "committedDate": "2020-06-02T15:42:20Z", "message": "New system property to control null optimization in join"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "81366374205b9cea987d6fe476c2cd40c637e718", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/81366374205b9cea987d6fe476c2cd40c637e718", "committedDate": "2020-06-02T15:42:20Z", "message": "New system property to control null optimization in join"}, "afterCommit": {"oid": "c51d19c1c5359eb56ce6381e41acfd089b1c5961", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/c51d19c1c5359eb56ce6381e41acfd089b1c5961", "committedDate": "2020-06-02T19:29:16Z", "message": "New system property to control null optimization in join"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c51d19c1c5359eb56ce6381e41acfd089b1c5961", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/c51d19c1c5359eb56ce6381e41acfd089b1c5961", "committedDate": "2020-06-02T19:29:16Z", "message": "New system property to control null optimization in join"}, "afterCommit": {"oid": "da58bb920078a9cb3804aecfe633ec436a0bf40e", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/da58bb920078a9cb3804aecfe633ec436a0bf40e", "committedDate": "2020-06-02T19:31:44Z", "message": "New system property to control null optimization in join"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NTc5NjM5", "url": "https://github.com/prestodb/presto/pull/14578#pullrequestreview-425579639", "createdAt": "2020-06-05T19:45:51Z", "commit": {"oid": "da58bb920078a9cb3804aecfe633ec436a0bf40e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da58bb920078a9cb3804aecfe633ec436a0bf40e", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/da58bb920078a9cb3804aecfe633ec436a0bf40e", "committedDate": "2020-06-02T19:31:44Z", "message": "New system property to control null optimization in join"}, "afterCommit": {"oid": "05fd272d7cd2be63611d47c5ac00c3b89a9f4f41", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/05fd272d7cd2be63611d47c5ac00c3b89a9f4f41", "committedDate": "2020-06-07T18:41:28Z", "message": "New system property to control null optimization in join"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NDk2NjM2", "url": "https://github.com/prestodb/presto/pull/14578#pullrequestreview-426496636", "createdAt": "2020-06-08T18:17:22Z", "commit": {"oid": "05fd272d7cd2be63611d47c5ac00c3b89a9f4f41"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODoxNzoyMlrOGgqaOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODoyMDo0N1rOGgqhaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkwMjQ1OQ==", "bodyText": "This might end up introducing a regression, especially when NULLs are rare and/or expression is expensive. I think a better way to implement this is to do this in plan optimization (add an additional filter node after project to avoid recompute the expression). If nothing else, the default of this flag should be false. Maybe we should run some benchmarking first.", "url": "https://github.com/prestodb/presto/pull/14578#discussion_r436902459", "createdAt": "2020-06-08T18:17:22Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/RelationPlanner.java", "diffHunk": "@@ -290,11 +291,13 @@ else if (conjunct instanceof ComparisonExpression) {\n                     if (firstDependencies.stream().allMatch(left::canResolve) && secondDependencies.stream().allMatch(right::canResolve)) {\n                         leftComparisonExpressions.add(firstExpression);\n                         rightComparisonExpressions.add(secondExpression);\n+                        addNullFilters(complexJoinExpressions, node.getType(), firstExpression, secondExpression);\n                         joinConditionComparisonOperators.add(comparisonOperator);\n                     }\n                     else if (firstDependencies.stream().allMatch(right::canResolve) && secondDependencies.stream().allMatch(left::canResolve)) {\n                         leftComparisonExpressions.add(secondExpression);\n                         rightComparisonExpressions.add(firstExpression);\n+                        addNullFilters(complexJoinExpressions, node.getType(), secondExpression, firstExpression);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1ODQ5OA=="}, "originalCommit": {"oid": "42b4c9f7dbddbc897a81702475d3b9be12fc6e54"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkwNDI5Ng==", "bodyText": "Formatting seems off here.", "url": "https://github.com/prestodb/presto/pull/14578#discussion_r436904296", "createdAt": "2020-06-08T18:20:47Z", "author": {"login": "rongrong"}, "path": "presto-main/src/test/java/com/facebook/presto/sql/planner/TestPredicatePushdown.java", "diffHunk": "@@ -61,10 +60,12 @@ public void testNonStraddlingJoinExpression()\n         assertPlan(\"SELECT * FROM orders JOIN lineitem ON orders.orderkey = lineitem.orderkey AND cast(lineitem.linenumber AS varchar) = '2'\",\n                 anyTree(\n                         join(INNER, ImmutableList.of(equiJoinClause(\"ORDERS_OK\", \"LINEITEM_OK\")),\n-                                any(\n-                                        tableScan(\"orders\", ImmutableMap.of(\"ORDERS_OK\", \"orderkey\"))),\n                                 anyTree(\n-                                        filter(\"cast('2' as varchar) = cast(LINEITEM_LINENUMBER as varchar)\",\n+                                    filter(\"ORDERS_OK IS NOT NULL\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05fd272d7cd2be63611d47c5ac00c3b89a9f4f41"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05fd272d7cd2be63611d47c5ac00c3b89a9f4f41", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/05fd272d7cd2be63611d47c5ac00c3b89a9f4f41", "committedDate": "2020-06-07T18:41:28Z", "message": "New system property to control null optimization in join"}, "afterCommit": {"oid": "14c65b5460fc30bf3ee9c3d71ed87b5e9e0ff7c5", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/14c65b5460fc30bf3ee9c3d71ed87b5e9e0ff7c5", "committedDate": "2020-06-08T22:10:12Z", "message": "New system property to control null optimization in join"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14c65b5460fc30bf3ee9c3d71ed87b5e9e0ff7c5", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/14c65b5460fc30bf3ee9c3d71ed87b5e9e0ff7c5", "committedDate": "2020-06-08T22:10:12Z", "message": "New system property to control null optimization in join"}, "afterCommit": {"oid": "b915b31d11f95363d795781ed4be2126100f7413", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/b915b31d11f95363d795781ed4be2126100f7413", "committedDate": "2020-06-18T23:07:02Z", "message": "New system property to control null optimization in join.\n\nAlso updating tests."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b915b31d11f95363d795781ed4be2126100f7413", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/b915b31d11f95363d795781ed4be2126100f7413", "committedDate": "2020-06-18T23:07:02Z", "message": "New system property to control null optimization in join.\n\nAlso updating tests."}, "afterCommit": {"oid": "7e5d140057a091dc53ab054e36c119cdde042b89", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/7e5d140057a091dc53ab054e36c119cdde042b89", "committedDate": "2020-06-18T23:11:57Z", "message": "New system property to control null optimization in join.\n\nAlso updating tests."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7e5d140057a091dc53ab054e36c119cdde042b89", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/7e5d140057a091dc53ab054e36c119cdde042b89", "committedDate": "2020-06-18T23:11:57Z", "message": "New system property to control null optimization in join.\n\nAlso updating tests."}, "afterCommit": {"oid": "463ee9d8cc1b2d8b41946a566059a8916adbf6ba", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/463ee9d8cc1b2d8b41946a566059a8916adbf6ba", "committedDate": "2020-06-18T23:50:27Z", "message": "New system property to control null optimization in join.\n\nAlso updating tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MjYxNzU4", "url": "https://github.com/prestodb/presto/pull/14578#pullrequestreview-434261758", "createdAt": "2020-06-19T18:11:40Z", "commit": {"oid": "6f4de1920e1cd2970e66a4d11f54cafe9a79e69b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxODoxMTo0MVrOGmdbvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxODoxMTo0MVrOGmdbvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk4MTMxMQ==", "bodyText": "Do we understand why this would change?", "url": "https://github.com/prestodb/presto/pull/14578#discussion_r442981311", "createdAt": "2020-06-19T18:11:41Z", "author": {"login": "rongrong"}, "path": "presto-benchto-benchmarks/src/test/resources/sql/presto/tpch/q13.plan.txt", "diffHunk": "@@ -8,9 +8,9 @@ remote exchange (GATHER, SINGLE, [])\n                             final aggregation over (custkey)\n                                 local exchange (GATHER, SINGLE, [])\n                                     partial aggregation over (custkey)\n-                                        join (LEFT, PARTITIONED):\n-                                            remote exchange (REPARTITION, HASH, [custkey])\n-                                                scan customer\n+                                        join (RIGHT, PARTITIONED):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f4de1920e1cd2970e66a4d11f54cafe9a79e69b"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "463ee9d8cc1b2d8b41946a566059a8916adbf6ba", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/463ee9d8cc1b2d8b41946a566059a8916adbf6ba", "committedDate": "2020-06-18T23:50:27Z", "message": "New system property to control null optimization in join.\n\nAlso updating tests."}, "afterCommit": {"oid": "3a78565aa22e5d4477f0e07d604ce342643185c3", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/3a78565aa22e5d4477f0e07d604ce342643185c3", "committedDate": "2020-06-19T18:51:27Z", "message": "New system property to control null optimization in join.\n\nAlso updating tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37e49683113dc0c916f758e98b76b4b63920a21d", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/37e49683113dc0c916f758e98b76b4b63920a21d", "committedDate": "2020-06-19T20:00:20Z", "message": "Join optimisation: filtering null rows explicitly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a78565aa22e5d4477f0e07d604ce342643185c3", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/3a78565aa22e5d4477f0e07d604ce342643185c3", "committedDate": "2020-06-19T18:51:27Z", "message": "New system property to control null optimization in join.\n\nAlso updating tests."}, "afterCommit": {"oid": "37e49683113dc0c916f758e98b76b4b63920a21d", "author": {"user": {"login": "ssaumitra", "name": null}}, "url": "https://github.com/prestodb/presto/commit/37e49683113dc0c916f758e98b76b4b63920a21d", "committedDate": "2020-06-19T20:00:20Z", "message": "Join optimisation: filtering null rows explicitly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1Mjc4MzE2", "url": "https://github.com/prestodb/presto/pull/14578#pullrequestreview-435278316", "createdAt": "2020-06-22T21:13:38Z", "commit": {"oid": "37e49683113dc0c916f758e98b76b4b63920a21d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMToxMzozOVrOGnROOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMToxMzozOVrOGnROOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyOTgxOQ==", "bodyText": "Why is the null filter added to complexJoinExpressions rather than leftComparisonExpressions or rightComparisonExpressions?", "url": "https://github.com/prestodb/presto/pull/14578#discussion_r443829819", "createdAt": "2020-06-22T21:13:39Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/RelationPlanner.java", "diffHunk": "@@ -290,11 +291,13 @@ else if (conjunct instanceof ComparisonExpression) {\n                     if (firstDependencies.stream().allMatch(left::canResolve) && secondDependencies.stream().allMatch(right::canResolve)) {\n                         leftComparisonExpressions.add(firstExpression);\n                         rightComparisonExpressions.add(secondExpression);\n+                        addNullFilters(complexJoinExpressions, node.getType(), firstExpression, secondExpression);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37e49683113dc0c916f758e98b76b4b63920a21d"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1702, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}