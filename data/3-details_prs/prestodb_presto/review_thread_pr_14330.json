{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MDA4MTAy", "number": 14330, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODoxMzozNlrODuQmqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwNzoyMzoxNFrODu2McQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODMzMTI4OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcSelectivePageSourceFactory.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODoxMzozNlrOGAKCAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwNzozOToxOVrOGA9n4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxNzUzOA==", "bodyText": "Use separate catch block instead of checking exception class:\n        catch (UncheckedExecutionException e) {\n            if (e.getCause() instanceof PrestoException) {\n                throw (PrestoException) e.getCause();\n            }\n            throw new PrestoException(HIVE_CANNOT_OPEN_SPLIT, splitError(e, path, start, length), e);\n        }\n        catch (BlockMissingException e) {\n            throw new PrestoException(HIVE_MISSING_DATA, splitError(e, path, start, length), e);\n        }\n        catch (PrestoException e) {\n            throw e;\n        }\n        catch (Exception e) {\n            throw new PrestoException(HIVE_CANNOT_OPEN_SPLIT, splitError(e, path, start, length), e);\n        }\n        finally {\n            try {\n                orcDataSource.close();\n            }\n            catch (IOException ignored) {\n            }  \n        }", "url": "https://github.com/prestodb/presto/pull/14330#discussion_r402817538", "createdAt": "2020-04-03T08:13:36Z", "author": {"login": "mbasmanova"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcSelectivePageSourceFactory.java", "diffHunk": "@@ -398,6 +399,9 @@ public static OrcSelectivePageSource createOrcPageSource(\n             }\n             catch (IOException ignored) {\n             }\n+            if (e.getClass().getName().equals(UncheckedExecutionException.class.getName()) && e.getCause() instanceof PrestoException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bb05bc8794a479a4cf22b9d188957f0db768440"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE1MTI4Mw==", "bodyText": "Catching UncheckedExecutionException doesn't seem to work here unfortunately :( I think because the thrown exception's class and UncheckedExecutionException class are loaded by different classloaders. That is why even a simple check like e instanceOf UncheckedExecutionException doesn't work and we may just have to stick to a class name check.\nJust to be sure I tried this on a verifier cluster and it throws the HIVE_CANNOT_OPEN_SPLIT error like before since it doesn't enter the catch (UncheckedExecutionException e) { block. (Can share the link and logs in chat if you are interested)", "url": "https://github.com/prestodb/presto/pull/14330#discussion_r403151283", "createdAt": "2020-04-03T17:03:45Z", "author": {"login": "sujay-jain"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcSelectivePageSourceFactory.java", "diffHunk": "@@ -398,6 +399,9 @@ public static OrcSelectivePageSource createOrcPageSource(\n             }\n             catch (IOException ignored) {\n             }\n+            if (e.getClass().getName().equals(UncheckedExecutionException.class.getName()) && e.getCause() instanceof PrestoException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxNzUzOA=="}, "originalCommit": {"oid": "2bb05bc8794a479a4cf22b9d188957f0db768440"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE1ODk2MA==", "bodyText": "And I'm curious about closing the orcDataSource. Doing this in a finally block will close it even in cases when there's no exception, and at a cusrory glance it seems like callers of this function could still use it..\nUnrelated to this PR but should we be closing the orcDataSource in OrcSelecticePageSource#close() method instead? here", "url": "https://github.com/prestodb/presto/pull/14330#discussion_r403158960", "createdAt": "2020-04-03T17:12:52Z", "author": {"login": "sujay-jain"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcSelectivePageSourceFactory.java", "diffHunk": "@@ -398,6 +399,9 @@ public static OrcSelectivePageSource createOrcPageSource(\n             }\n             catch (IOException ignored) {\n             }\n+            if (e.getClass().getName().equals(UncheckedExecutionException.class.getName()) && e.getCause() instanceof PrestoException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxNzUzOA=="}, "originalCommit": {"oid": "2bb05bc8794a479a4cf22b9d188957f0db768440"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE2NjA1Nw==", "bodyText": "@sujay-jain Thanks for explaining. Makes sense. For the benefit of future readers, would you add a comment explaining why you are comparing exception class manually?", "url": "https://github.com/prestodb/presto/pull/14330#discussion_r403166057", "createdAt": "2020-04-03T17:20:46Z", "author": {"login": "mbasmanova"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcSelectivePageSourceFactory.java", "diffHunk": "@@ -398,6 +399,9 @@ public static OrcSelectivePageSource createOrcPageSource(\n             }\n             catch (IOException ignored) {\n             }\n+            if (e.getClass().getName().equals(UncheckedExecutionException.class.getName()) && e.getCause() instanceof PrestoException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxNzUzOA=="}, "originalCommit": {"oid": "2bb05bc8794a479a4cf22b9d188957f0db768440"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY2MjgxNg==", "bodyText": "And I'm curious about closing the orcDataSource. Doing this in a finally block will close it even in cases when there's no exception, and at a cusrory glance it seems like callers of this function could still use it..\nUnrelated to this PR but should we be closing the orcDataSource in OrcSelecticePageSource#close() method instead? here\n\n@sujay-jain OrcDataSource is closed in AbstractOrcRecordReader.java L380", "url": "https://github.com/prestodb/presto/pull/14330#discussion_r403662816", "createdAt": "2020-04-05T07:39:19Z", "author": {"login": "bhhari"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcSelectivePageSourceFactory.java", "diffHunk": "@@ -398,6 +399,9 @@ public static OrcSelectivePageSource createOrcPageSource(\n             }\n             catch (IOException ignored) {\n             }\n+            if (e.getClass().getName().equals(UncheckedExecutionException.class.getName()) && e.getCause() instanceof PrestoException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxNzUzOA=="}, "originalCommit": {"oid": "2bb05bc8794a479a4cf22b9d188957f0db768440"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDQ5MDA5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcSelectivePageSourceFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwNzoyMzoxNFrOGA9hhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwNzoyMzoxNFrOGA9hhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY2MTE4OA==", "bodyText": "also talk about why .class comparison does not work either, can be something like\ninstanceof and class comparison do not work as they are loaded by different class loaders.", "url": "https://github.com/prestodb/presto/pull/14330#discussion_r403661188", "createdAt": "2020-04-05T07:23:14Z", "author": {"login": "bhhari"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/orc/OrcSelectivePageSourceFactory.java", "diffHunk": "@@ -398,6 +399,10 @@ public static OrcSelectivePageSource createOrcPageSource(\n             }\n             catch (IOException ignored) {\n             }\n+            // instanceof check does not work here since e and UncheckedExecutionException are loaded by different classloaders", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8729c0a71eb6039f556b5899510c12ac2d8e2a7f"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2982, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}