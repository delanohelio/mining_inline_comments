{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NzY5MjIy", "number": 13934, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMDozNjowNlrODWH9lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMDozNjowNlrODWH9lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTI1NzE5OnYy", "diffSide": "RIGHT", "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/metastore/SemiTransactionalHiveMetastore.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMDozNjowNlrOFatINQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxOTo1NjoxNVrOFeluCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0NjY3Nw==", "bodyText": "@viczhang861 I feel that this logic is based on an assumption that this code may not be in a position to make. E.g. this would break if the caller code changes and it seems unlikely that the caller is aware about this logic. If that's not the case, would you explain why this assumption is valid?", "url": "https://github.com/prestodb/presto/pull/13934#discussion_r363546677", "createdAt": "2020-01-07T00:36:06Z", "author": {"login": "mbasmanova"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/metastore/SemiTransactionalHiveMetastore.java", "diffHunk": "@@ -1500,7 +1500,13 @@ private void executeIrreversibleMetastoreOperations()\n                 }\n                 Joiner.on(\"; \").appendTo(message, failedIrreversibleOperationDescriptions);\n \n-                PrestoException prestoException = new PrestoException(HIVE_METASTORE_ERROR, message.toString());\n+                PrestoException prestoException;\n+                if (suppressedExceptions.size() == 1 && suppressedExceptions.get(0) instanceof TableNotFoundException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af5ddf854cee5cf47a64104fc9b7c3b9741b1fc0"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU1NzYyNQ==", "bodyText": "Based on comment in caller of this function, this function is only used for delete operation and caller is aware of possible failure\n\n\"// The next section will deal with \"dropping table/partition\".\" . Commit may still fail in this section.\n\nDoes this answer your question?", "url": "https://github.com/prestodb/presto/pull/13934#discussion_r363557625", "createdAt": "2020-01-07T01:28:55Z", "author": {"login": "viczhang861"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/metastore/SemiTransactionalHiveMetastore.java", "diffHunk": "@@ -1500,7 +1500,13 @@ private void executeIrreversibleMetastoreOperations()\n                 }\n                 Joiner.on(\"; \").appendTo(message, failedIrreversibleOperationDescriptions);\n \n-                PrestoException prestoException = new PrestoException(HIVE_METASTORE_ERROR, message.toString());\n+                PrestoException prestoException;\n+                if (suppressedExceptions.size() == 1 && suppressedExceptions.get(0) instanceof TableNotFoundException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0NjY3Nw=="}, "originalCommit": {"oid": "af5ddf854cee5cf47a64104fc9b7c3b9741b1fc0"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ2MTQzNg==", "bodyText": "Exploring suppressed exceptions seems very fragile to me as well. How sure we are there's no better way of detecting this exception? Maybe it should be replaced with more specific exception on the level below?", "url": "https://github.com/prestodb/presto/pull/13934#discussion_r365461436", "createdAt": "2020-01-10T22:50:19Z", "author": {"login": "arhimondr"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/metastore/SemiTransactionalHiveMetastore.java", "diffHunk": "@@ -1500,7 +1500,13 @@ private void executeIrreversibleMetastoreOperations()\n                 }\n                 Joiner.on(\"; \").appendTo(message, failedIrreversibleOperationDescriptions);\n \n-                PrestoException prestoException = new PrestoException(HIVE_METASTORE_ERROR, message.toString());\n+                PrestoException prestoException;\n+                if (suppressedExceptions.size() == 1 && suppressedExceptions.get(0) instanceof TableNotFoundException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0NjY3Nw=="}, "originalCommit": {"oid": "af5ddf854cee5cf47a64104fc9b7c3b9741b1fc0"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYxOTU5Mg==", "bodyText": "The suppressed exceptions inside this function are not ones extracted from Exception.getSuppressed() . I rearranged code to avoid the confusion.", "url": "https://github.com/prestodb/presto/pull/13934#discussion_r367619592", "createdAt": "2020-01-16T19:56:15Z", "author": {"login": "viczhang861"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/metastore/SemiTransactionalHiveMetastore.java", "diffHunk": "@@ -1500,7 +1500,13 @@ private void executeIrreversibleMetastoreOperations()\n                 }\n                 Joiner.on(\"; \").appendTo(message, failedIrreversibleOperationDescriptions);\n \n-                PrestoException prestoException = new PrestoException(HIVE_METASTORE_ERROR, message.toString());\n+                PrestoException prestoException;\n+                if (suppressedExceptions.size() == 1 && suppressedExceptions.get(0) instanceof TableNotFoundException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU0NjY3Nw=="}, "originalCommit": {"oid": "af5ddf854cee5cf47a64104fc9b7c3b9741b1fc0"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2141, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}