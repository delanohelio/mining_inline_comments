{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNDU0MjI1", "number": 14968, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo0NzoxNFrOEVeL9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMTo1ODoxMVrOEVl5HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTUwMTM0OnYy", "diffSide": "RIGHT", "path": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo0NzoxNFrOG8Ps-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo0NzoxNFrOG8Ps-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgyNTAxNw==", "bodyText": "In general, importing * is discouraged.  Make sure the imports are expanded.", "url": "https://github.com/prestodb/presto/pull/14968#discussion_r465825017", "createdAt": "2020-08-05T15:47:14Z", "author": {"login": "jagill"}, "path": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/GeoFunctions.java", "diffHunk": "@@ -87,17 +87,7 @@\n import static com.facebook.presto.geospatial.GeometryType.MULTI_POLYGON;\n import static com.facebook.presto.geospatial.GeometryType.POINT;\n import static com.facebook.presto.geospatial.GeometryType.POLYGON;\n-import static com.facebook.presto.geospatial.GeometryUtils.createJtsEmptyLineString;\n-import static com.facebook.presto.geospatial.GeometryUtils.createJtsEmptyPoint;\n-import static com.facebook.presto.geospatial.GeometryUtils.createJtsEmptyPolygon;\n-import static com.facebook.presto.geospatial.GeometryUtils.createJtsLineString;\n-import static com.facebook.presto.geospatial.GeometryUtils.createJtsMultiPoint;\n-import static com.facebook.presto.geospatial.GeometryUtils.createJtsPoint;\n-import static com.facebook.presto.geospatial.GeometryUtils.flattenCollection;\n-import static com.facebook.presto.geospatial.GeometryUtils.getGeometryInvalidReason;\n-import static com.facebook.presto.geospatial.GeometryUtils.getPointCount;\n-import static com.facebook.presto.geospatial.GeometryUtils.jtsGeometryFromWkt;\n-import static com.facebook.presto.geospatial.GeometryUtils.wktFromJtsGeometry;\n+import static com.facebook.presto.geospatial.GeometryUtils.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19ae1f3c96a45cd0e3cbf615acffb57513d4f3c6"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTUwMzQ5OnYy", "diffSide": "RIGHT", "path": "presto-geospatial-toolkit/src/main/java/com/facebook/presto/geospatial/GeometryUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo0Nzo0M1rOG8PuUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo0Nzo0M1rOG8PuUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgyNTM2Mw==", "bodyText": "It's not a WKT, so the message should reference GeoJSON.", "url": "https://github.com/prestodb/presto/pull/14968#discussion_r465825363", "createdAt": "2020-08-05T15:47:43Z", "author": {"login": "jagill"}, "path": "presto-geospatial-toolkit/src/main/java/com/facebook/presto/geospatial/GeometryUtils.java", "diffHunk": "@@ -231,6 +233,21 @@ public static boolean isPointOrRectangle(OGCGeometry ogcGeometry, Envelope envel\n         return true;\n     }\n \n+    public static org.locationtech.jts.geom.Geometry jtsGeometryFromJson(String json)\n+    {\n+        try {\n+            return new GeoJsonReader().read(json);\n+        }\n+        catch (ParseException | IllegalArgumentException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT, \"Invalid WKT: \" + e.getMessage(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19ae1f3c96a45cd0e3cbf615acffb57513d4f3c6"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTUxMzk2OnYy", "diffSide": "RIGHT", "path": "presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestGeoFunctions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo1MDoxNFrOG8P1BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo1NDo1NVrOG8QBbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgyNzA3Ng==", "bodyText": "Please add tests for:\n\nEmpty Geometries (of all types)\nDeserializing valid GeoJSON strings\nDeserializing invalid GeoJSON strings", "url": "https://github.com/prestodb/presto/pull/14968#discussion_r465827076", "createdAt": "2020-08-05T15:50:14Z", "author": {"login": "jagill"}, "path": "presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestGeoFunctions.java", "diffHunk": "@@ -1266,4 +1267,26 @@ private void assertGeomFromBinary(String wkt)\n     {\n         assertFunction(format(\"ST_AsText(ST_GeomFromBinary(ST_AsBinary(ST_GeometryFromText('%s'))))\", wkt), VARCHAR, wkt);\n     }\n+\n+    @Test\n+    public void testGeometryJsonConversion() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19ae1f3c96a45cd0e3cbf615acffb57513d4f3c6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzMDI1NQ==", "bodyText": "Should include valid JSON but invalid GeoJSON, as well as invalid JSON.", "url": "https://github.com/prestodb/presto/pull/14968#discussion_r465830255", "createdAt": "2020-08-05T15:54:55Z", "author": {"login": "jagill"}, "path": "presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestGeoFunctions.java", "diffHunk": "@@ -1266,4 +1267,26 @@ private void assertGeomFromBinary(String wkt)\n     {\n         assertFunction(format(\"ST_AsText(ST_GeomFromBinary(ST_AsBinary(ST_GeometryFromText('%s'))))\", wkt), VARCHAR, wkt);\n     }\n+\n+    @Test\n+    public void testGeometryJsonConversion() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgyNzA3Ng=="}, "originalCommit": {"oid": "19ae1f3c96a45cd0e3cbf615acffb57513d4f3c6"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTUxNTM0OnYy", "diffSide": "RIGHT", "path": "presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestGeoFunctions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo1MDozNVrOG8P14g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo1MDozNVrOG8P14g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgyNzI5OA==", "bodyText": "Also include a self-crossing LineString, like (0 0, 1 1, 1 0, 0 1).", "url": "https://github.com/prestodb/presto/pull/14968#discussion_r465827298", "createdAt": "2020-08-05T15:50:35Z", "author": {"login": "jagill"}, "path": "presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestGeoFunctions.java", "diffHunk": "@@ -1266,4 +1267,26 @@ private void assertGeomFromBinary(String wkt)\n     {\n         assertFunction(format(\"ST_AsText(ST_GeomFromBinary(ST_AsBinary(ST_GeometryFromText('%s'))))\", wkt), VARCHAR, wkt);\n     }\n+\n+    @Test\n+    public void testGeometryJsonConversion() throws Exception {\n+        // valid nonempty geometries\n+        assertGeoFromJson(\"POINT (1 2)\");\n+        assertGeoFromJson(\"MULTIPOINT ((1 2), (3 4))\");\n+        assertGeoFromJson(\"LINESTRING (0 0, 1 2, 3 4)\");\n+        assertGeoFromJson(\"MULTILINESTRING ((1 1, 5 1), (2 4, 4 4))\");\n+        assertGeoFromJson(\"POLYGON ((0 0, 0 1, 1 1, 1 0, 0 0))\");\n+        assertGeoFromJson(\"POLYGON ((0 0, 0 3, 3 3, 3 0, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1))\");\n+        assertGeoFromJson(\"MULTIPOLYGON (((1 1, 1 3, 3 3, 3 1, 1 1)), ((2 4, 2 6, 6 6, 6 4, 2 4)))\");\n+        assertGeoFromJson(\"GEOMETRYCOLLECTION (POINT (1 2), LINESTRING (0 0, 1 2, 3 4), POLYGON ((0 0, 0 1, 1 1, 1 0, 0 0)))\");\n+\n+        // invalid geometries\n+        assertGeoFromJson(\"MULTIPOINT ((0 0), (0 1), (1 1), (0 1))\");\n+        assertGeoFromJson(\"LINESTRING (0 0, 0 1, 0 1, 1 1, 1 0, 0 0)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19ae1f3c96a45cd0e3cbf615acffb57513d4f3c6"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDc2MzgxOnYy", "diffSide": "RIGHT", "path": "presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestGeoFunctions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMTo1ODoxMVrOG8cFGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjo0Njo1MlrOG87veg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAyNzgwMQ==", "bodyText": "This is going to be a problem. I will see if there's any quick fix or workarounds we can do.", "url": "https://github.com/prestodb/presto/pull/14968#discussion_r466027801", "createdAt": "2020-08-05T21:58:11Z", "author": {"login": "walterddr"}, "path": "presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestGeoFunctions.java", "diffHunk": "@@ -1266,4 +1266,62 @@ private void assertGeomFromBinary(String wkt)\n     {\n         assertFunction(format(\"ST_AsText(ST_GeomFromBinary(ST_AsBinary(ST_GeometryFromText('%s'))))\", wkt), VARCHAR, wkt);\n     }\n+\n+    @Test\n+    public void testGeometryJsonConversion()\n+    {\n+        // empty geometries\n+        // JTS library has trouble creating correct JSON for empty, non-multi geometry,\n+        // see https://github.com/locationtech/jts/issues/411\n+        // the following tests has been commented out.\n+//        assertGeoFromJson(\"POINT EMPTY\");\n+//        assertGeoFromJson(\"LINESTRING EMPTY\");\n+//        assertGeoFromJson(\"POLYGON EMPTY\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32d7e54d6800cf0de53946944ac3c1d5ca180aab"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0NjU1NA==", "bodyText": "It looks like the advise is that empty atomic (non-multi) geometries should return null: http://lists.geojson.org/pipermail/geojson-geojson.org/2013-October/000839.html\nWe can implement this by checking for those cases explicitly, and having GeometryUtils.jsonFromJtsGeometry return an Optional<String>.  In GeoFunctions, if it's empty, return null.  Else return the contained value.", "url": "https://github.com/prestodb/presto/pull/14968#discussion_r466546554", "createdAt": "2020-08-06T16:46:52Z", "author": {"login": "jagill"}, "path": "presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestGeoFunctions.java", "diffHunk": "@@ -1266,4 +1266,62 @@ private void assertGeomFromBinary(String wkt)\n     {\n         assertFunction(format(\"ST_AsText(ST_GeomFromBinary(ST_AsBinary(ST_GeometryFromText('%s'))))\", wkt), VARCHAR, wkt);\n     }\n+\n+    @Test\n+    public void testGeometryJsonConversion()\n+    {\n+        // empty geometries\n+        // JTS library has trouble creating correct JSON for empty, non-multi geometry,\n+        // see https://github.com/locationtech/jts/issues/411\n+        // the following tests has been commented out.\n+//        assertGeoFromJson(\"POINT EMPTY\");\n+//        assertGeoFromJson(\"LINESTRING EMPTY\");\n+//        assertGeoFromJson(\"POLYGON EMPTY\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAyNzgwMQ=="}, "originalCommit": {"oid": "32d7e54d6800cf0de53946944ac3c1d5ca180aab"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2251, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}