{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MDE4NTk3", "number": 14594, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjowMToyMFrOEBh0lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjowMToyMFrOEBh0lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDM4MTY3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/metadata/DiscoveryNodeManager.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjowMToyMFrOGdblbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTozODowMFrOGiHMhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUxMzgzOA==", "bodyText": "can you clarify why do we need currentNode.getNodeIdentifier().compareTo(...)?", "url": "https://github.com/prestodb/presto/pull/14594#discussion_r433513838", "createdAt": "2020-06-01T22:01:20Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/metadata/DiscoveryNodeManager.java", "diffHunk": "@@ -230,7 +230,7 @@ private synchronized void refreshNodesInternal()\n         // TODO: make it a whitelist (a failure-detecting service selector) and maybe build in support for injecting this in airlift\n         Set<ServiceDescriptor> services = serviceSelector.selectAllServices().stream()\n                 .filter(service -> !failureDetector.getFailed().contains(service))\n-                .filter(service -> nodeStatusService.isAllowed(service.getNodeId()))\n+                .filter(service -> !nodeStatusService.isPresent() || nodeStatusService.get().isAllowed(service.getNodeId()) || currentNode.getNodeIdentifier().compareTo(service.getNodeId()) == 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f225123f0df76a37bffabda690588a97650b0fd4"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1NzI3NQ==", "bodyText": "Given coordinator won't be part of the worker tier, putting this comparison will count coordinator host as well here.", "url": "https://github.com/prestodb/presto/pull/14594#discussion_r433557275", "createdAt": "2020-06-02T00:27:04Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/metadata/DiscoveryNodeManager.java", "diffHunk": "@@ -230,7 +230,7 @@ private synchronized void refreshNodesInternal()\n         // TODO: make it a whitelist (a failure-detecting service selector) and maybe build in support for injecting this in airlift\n         Set<ServiceDescriptor> services = serviceSelector.selectAllServices().stream()\n                 .filter(service -> !failureDetector.getFailed().contains(service))\n-                .filter(service -> nodeStatusService.isAllowed(service.getNodeId()))\n+                .filter(service -> !nodeStatusService.isPresent() || nodeStatusService.get().isAllowed(service.getNodeId()) || currentNode.getNodeIdentifier().compareTo(service.getNodeId()) == 0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUxMzgzOA=="}, "originalCommit": {"oid": "f225123f0df76a37bffabda690588a97650b0fd4"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1Nzc3NQ==", "bodyText": "Can you add a comment for this - it is not obvious by the look of it", "url": "https://github.com/prestodb/presto/pull/14594#discussion_r433557775", "createdAt": "2020-06-02T00:29:06Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/metadata/DiscoveryNodeManager.java", "diffHunk": "@@ -230,7 +230,7 @@ private synchronized void refreshNodesInternal()\n         // TODO: make it a whitelist (a failure-detecting service selector) and maybe build in support for injecting this in airlift\n         Set<ServiceDescriptor> services = serviceSelector.selectAllServices().stream()\n                 .filter(service -> !failureDetector.getFailed().contains(service))\n-                .filter(service -> nodeStatusService.isAllowed(service.getNodeId()))\n+                .filter(service -> !nodeStatusService.isPresent() || nodeStatusService.get().isAllowed(service.getNodeId()) || currentNode.getNodeIdentifier().compareTo(service.getNodeId()) == 0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUxMzgzOA=="}, "originalCommit": {"oid": "f225123f0df76a37bffabda690588a97650b0fd4"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxNTAwMQ==", "bodyText": "Sorry I don't understand this logic. It's comparing whether current node is the same as service. What's the relationship between this and coordinator? There is an isCoordinator method if you want to check for coordinator right? And why nodeStatusService cannot handle both coordinators and workers?", "url": "https://github.com/prestodb/presto/pull/14594#discussion_r438415001", "createdAt": "2020-06-10T21:20:50Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/metadata/DiscoveryNodeManager.java", "diffHunk": "@@ -230,7 +230,7 @@ private synchronized void refreshNodesInternal()\n         // TODO: make it a whitelist (a failure-detecting service selector) and maybe build in support for injecting this in airlift\n         Set<ServiceDescriptor> services = serviceSelector.selectAllServices().stream()\n                 .filter(service -> !failureDetector.getFailed().contains(service))\n-                .filter(service -> nodeStatusService.isAllowed(service.getNodeId()))\n+                .filter(service -> !nodeStatusService.isPresent() || nodeStatusService.get().isAllowed(service.getNodeId()) || currentNode.getNodeIdentifier().compareTo(service.getNodeId()) == 0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUxMzgzOA=="}, "originalCommit": {"oid": "f225123f0df76a37bffabda690588a97650b0fd4"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQyMjY2Mg==", "bodyText": "DiscoveryNodeManager runs on coordinator, and our current implementation we only look for workers status through NodeStatusService. Given it's same machine where coordinator runs and this logic is for coordinator to find the active nodes, we let the same host check and let coordinator to join the active node pool.\nDidn't realize that isCoordinator method can serve the purpose, i can replace this with isCoordinator() method call instead.", "url": "https://github.com/prestodb/presto/pull/14594#discussion_r438422662", "createdAt": "2020-06-10T21:38:00Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/metadata/DiscoveryNodeManager.java", "diffHunk": "@@ -230,7 +230,7 @@ private synchronized void refreshNodesInternal()\n         // TODO: make it a whitelist (a failure-detecting service selector) and maybe build in support for injecting this in airlift\n         Set<ServiceDescriptor> services = serviceSelector.selectAllServices().stream()\n                 .filter(service -> !failureDetector.getFailed().contains(service))\n-                .filter(service -> nodeStatusService.isAllowed(service.getNodeId()))\n+                .filter(service -> !nodeStatusService.isPresent() || nodeStatusService.get().isAllowed(service.getNodeId()) || currentNode.getNodeIdentifier().compareTo(service.getNodeId()) == 0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUxMzgzOA=="}, "originalCommit": {"oid": "f225123f0df76a37bffabda690588a97650b0fd4"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2701, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}