{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MjA2OTgx", "number": 14983, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMjoyNDo1MlrOEWAyLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMjozMDoxMVrOEWA3Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTE2OTc1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMjoyNDo1MlrOG9GNnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMTo0ODo0OFrOG9pZVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxODEwOQ==", "bodyText": "@kaikalur Should this be a parser warning or a performance warning? I'm debating on this...", "url": "https://github.com/prestodb/presto/pull/14983#discussion_r466718109", "createdAt": "2020-08-06T22:24:52Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -1254,10 +1255,24 @@ private boolean isExpensiveUnionDistinct(SetOperation setOperation, Type[] outpu\n                                             type instanceof RowType);\n         }\n \n+        @Override\n+        protected Scope visitUnion(Union node, Optional<Scope> scope)\n+        {\n+            if (!node.isDistinct().isPresent()) {\n+                warningCollector.add(new PrestoWarning(PARSER_WARNING,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "346013c718540c4f0fb4c7d0df00076499bbec0c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcyMDQ4Ng==", "bodyText": "Should be a performance warning given by the parser :)", "url": "https://github.com/prestodb/presto/pull/14983#discussion_r466720486", "createdAt": "2020-08-06T22:31:29Z", "author": {"login": "kaikalur"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -1254,10 +1255,24 @@ private boolean isExpensiveUnionDistinct(SetOperation setOperation, Type[] outpu\n                                             type instanceof RowType);\n         }\n \n+        @Override\n+        protected Scope visitUnion(Union node, Optional<Scope> scope)\n+        {\n+            if (!node.isDistinct().isPresent()) {\n+                warningCollector.add(new PrestoWarning(PARSER_WARNING,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxODEwOQ=="}, "originalCommit": {"oid": "346013c718540c4f0fb4c7d0df00076499bbec0c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI5NDU0OQ==", "bodyText": "Changed to performance warning", "url": "https://github.com/prestodb/presto/pull/14983#discussion_r467294549", "createdAt": "2020-08-07T21:48:48Z", "author": {"login": "prithvip"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -1254,10 +1255,24 @@ private boolean isExpensiveUnionDistinct(SetOperation setOperation, Type[] outpu\n                                             type instanceof RowType);\n         }\n \n+        @Override\n+        protected Scope visitUnion(Union node, Optional<Scope> scope)\n+        {\n+            if (!node.isDistinct().isPresent()) {\n+                warningCollector.add(new PrestoWarning(PARSER_WARNING,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxODEwOQ=="}, "originalCommit": {"oid": "346013c718540c4f0fb4c7d0df00076499bbec0c"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTE4MjUwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMjozMDoxMVrOG9GVHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMTo1ODowM1rOG9p1Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcyMDAyOA==", "bodyText": "Let's not give the option to add DISTINCT here. So encourage them to add ALL. Most people would just do it. And if it's really needed they will figure it out or ask us. So reword it as something like:\n\"UNION without the ALL keyword is a computationally expensive operation and most often unnecessarry. Please add the ALL keyword.\"", "url": "https://github.com/prestodb/presto/pull/14983#discussion_r466720028", "createdAt": "2020-08-06T22:30:11Z", "author": {"login": "kaikalur"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -1254,10 +1255,24 @@ private boolean isExpensiveUnionDistinct(SetOperation setOperation, Type[] outpu\n                                             type instanceof RowType);\n         }\n \n+        @Override\n+        protected Scope visitUnion(Union node, Optional<Scope> scope)\n+        {\n+            if (!node.isDistinct().isPresent()) {\n+                warningCollector.add(new PrestoWarning(PARSER_WARNING,\n+                        \"UNION specified without ALL or DISTINCT\" +\n+                        \" keyword is equivalent to UNION DISTINCT, which is computationally expensive. \" +\n+                        \"Consider using UNION ALL when possible, or specifically add keyword DISTINCT to stop \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "346013c718540c4f0fb4c7d0df00076499bbec0c"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcyNTY3NA==", "bodyText": "That's too much. Do you really want the community to open issues here to ask how to make this warning go away?", "url": "https://github.com/prestodb/presto/pull/14983#discussion_r466725674", "createdAt": "2020-08-06T22:47:05Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -1254,10 +1255,24 @@ private boolean isExpensiveUnionDistinct(SetOperation setOperation, Type[] outpu\n                                             type instanceof RowType);\n         }\n \n+        @Override\n+        protected Scope visitUnion(Union node, Optional<Scope> scope)\n+        {\n+            if (!node.isDistinct().isPresent()) {\n+                warningCollector.add(new PrestoWarning(PARSER_WARNING,\n+                        \"UNION specified without ALL or DISTINCT\" +\n+                        \" keyword is equivalent to UNION DISTINCT, which is computationally expensive. \" +\n+                        \"Consider using UNION ALL when possible, or specifically add keyword DISTINCT to stop \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcyMDAyOA=="}, "originalCommit": {"oid": "346013c718540c4f0fb4c7d0df00076499bbec0c"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcyOTcxOA==", "bodyText": "Let's change it to \"Consider using UNION ALL when possible, or specifically add the keyword DISTINCT if absolutely necessary\".", "url": "https://github.com/prestodb/presto/pull/14983#discussion_r466729718", "createdAt": "2020-08-06T22:59:27Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -1254,10 +1255,24 @@ private boolean isExpensiveUnionDistinct(SetOperation setOperation, Type[] outpu\n                                             type instanceof RowType);\n         }\n \n+        @Override\n+        protected Scope visitUnion(Union node, Optional<Scope> scope)\n+        {\n+            if (!node.isDistinct().isPresent()) {\n+                warningCollector.add(new PrestoWarning(PARSER_WARNING,\n+                        \"UNION specified without ALL or DISTINCT\" +\n+                        \" keyword is equivalent to UNION DISTINCT, which is computationally expensive. \" +\n+                        \"Consider using UNION ALL when possible, or specifically add keyword DISTINCT to stop \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcyMDAyOA=="}, "originalCommit": {"oid": "346013c718540c4f0fb4c7d0df00076499bbec0c"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMwMTY1MA==", "bodyText": "Let's change it to \"Consider using UNION ALL when possible, or specifically add the keyword DISTINCT if absolutely necessary\".\n\nDone.", "url": "https://github.com/prestodb/presto/pull/14983#discussion_r467301650", "createdAt": "2020-08-07T21:58:03Z", "author": {"login": "prithvip"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -1254,10 +1255,24 @@ private boolean isExpensiveUnionDistinct(SetOperation setOperation, Type[] outpu\n                                             type instanceof RowType);\n         }\n \n+        @Override\n+        protected Scope visitUnion(Union node, Optional<Scope> scope)\n+        {\n+            if (!node.isDistinct().isPresent()) {\n+                warningCollector.add(new PrestoWarning(PARSER_WARNING,\n+                        \"UNION specified without ALL or DISTINCT\" +\n+                        \" keyword is equivalent to UNION DISTINCT, which is computationally expensive. \" +\n+                        \"Consider using UNION ALL when possible, or specifically add keyword DISTINCT to stop \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcyMDAyOA=="}, "originalCommit": {"oid": "346013c718540c4f0fb4c7d0df00076499bbec0c"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2268, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}