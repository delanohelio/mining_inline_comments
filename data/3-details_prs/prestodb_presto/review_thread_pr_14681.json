{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MTIyMjg1", "number": 14681, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDowOTozMFrOEHxLYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDoxMToyMVrOEIkdhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTgxMjE2OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDowOTozMFrOGnU6mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNDoxNDoxOFrOGnYnyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg5MDMzMQ==", "bodyText": "nit: keep the name the same as the interface", "url": "https://github.com/prestodb/presto/pull/14681#discussion_r443890331", "createdAt": "2020-06-23T00:09:30Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -2004,7 +2004,7 @@ private String createTableLayoutString(\n     }\n \n     @Override\n-    public List<ConnectorTableLayoutResult> getTableLayouts(ConnectorSession session, ConnectorTableHandle tableHandle, Constraint<ColumnHandle> constraint, Optional<Set<ColumnHandle>> desiredColumns)\n+    public List<ConnectorTableLayoutResult> getTableLayouts(ConnectorSession session, ConnectorTableHandle tableHandle, Constraint<ColumnHandle> constraint, Optional<Set<ColumnHandle>> requestedColumns)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c24cb731aea7541d888a30c7ed50d257009aa8dd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk1MTA1MQ==", "bodyText": "will do", "url": "https://github.com/prestodb/presto/pull/14681#discussion_r443951051", "createdAt": "2020-06-23T04:14:18Z", "author": {"login": "mayankgarg1990"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -2004,7 +2004,7 @@ private String createTableLayoutString(\n     }\n \n     @Override\n-    public List<ConnectorTableLayoutResult> getTableLayouts(ConnectorSession session, ConnectorTableHandle tableHandle, Constraint<ColumnHandle> constraint, Optional<Set<ColumnHandle>> desiredColumns)\n+    public List<ConnectorTableLayoutResult> getTableLayouts(ConnectorSession session, ConnectorTableHandle tableHandle, Constraint<ColumnHandle> constraint, Optional<Set<ColumnHandle>> requestedColumns)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg5MDMzMQ=="}, "originalCommit": {"oid": "c24cb731aea7541d888a30c7ed50d257009aa8dd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTg0NTM2OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDoyODoxMFrOGnVODw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNDoxNToyMlrOGnYo4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg5NTMxMQ==", "bodyText": "you've got a todo left over :)", "url": "https://github.com/prestodb/presto/pull/14681#discussion_r443895311", "createdAt": "2020-06-23T00:28:10Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -1536,6 +1577,8 @@ public HiveInsertTableHandle beginInsert(ConnectorSession session, ConnectorTabl\n                 .collect(toList());\n \n         HiveStorageFormat tableStorageFormat = extractHiveStorageFormat(table.get());\n+\n+        // TODO (mayankgarg): Encryption support needs to come here as well", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a9e6eb30aff65cc83b9d3f8760848d92753f65e"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk1MTMzMQ==", "bodyText": "This is for the write part - added this while I was trying to understand the code. Will remove this.", "url": "https://github.com/prestodb/presto/pull/14681#discussion_r443951331", "createdAt": "2020-06-23T04:15:22Z", "author": {"login": "mayankgarg1990"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -1536,6 +1577,8 @@ public HiveInsertTableHandle beginInsert(ConnectorSession session, ConnectorTabl\n                 .collect(toList());\n \n         HiveStorageFormat tableStorageFormat = extractHiveStorageFormat(table.get());\n+\n+        // TODO (mayankgarg): Encryption support needs to come here as well", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg5NTMxMQ=="}, "originalCommit": {"oid": "9a9e6eb30aff65cc83b9d3f8760848d92753f65e"}, "originalPosition": 148}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDIxNDQ0OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/DwrfEncryptionMetadata.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDoxMToyMVrOGonNAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjoyNjoxOFrOGo4SSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzODUyOQ==", "bodyText": "This should be changed to a fieldReference https://github.com/prestodb/presto/pull/14621/files#diff-bbdd3443793c8f1846fcec59930191df.  But if you want it can be changed later so there's no dependency between the PRs.", "url": "https://github.com/prestodb/presto/pull/14681#discussion_r445238529", "createdAt": "2020-06-25T00:11:21Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/DwrfEncryptionMetadata.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.collect.ImmutableMap;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static java.util.Objects.hash;\n+import static java.util.Objects.requireNonNull;\n+\n+public class DwrfEncryptionMetadata\n+        implements EncryptionMetadata\n+{\n+    private final Map<String, byte[]> fieldToKeyData;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e2058c9bee83f7239a29b6e283c906626cd36b4"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI1NTk2NA==", "bodyText": "HiveColumnHandle seems very heavy for this use case, Given that this information will be attached with every split I wanted it to be light. As of now, can we just not convert it back to a fieldReference using the information in HiveTableLayoutHandle and using ColumnWithStructSubfield", "url": "https://github.com/prestodb/presto/pull/14681#discussion_r445255964", "createdAt": "2020-06-25T01:18:32Z", "author": {"login": "mayankgarg1990"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/DwrfEncryptionMetadata.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.collect.ImmutableMap;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static java.util.Objects.hash;\n+import static java.util.Objects.requireNonNull;\n+\n+public class DwrfEncryptionMetadata\n+        implements EncryptionMetadata\n+{\n+    private final Map<String, byte[]> fieldToKeyData;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzODUyOQ=="}, "originalCommit": {"oid": "4e2058c9bee83f7239a29b6e283c906626cd36b4"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUxODQwOA==", "bodyText": "Sure, that makes sense", "url": "https://github.com/prestodb/presto/pull/14681#discussion_r445518408", "createdAt": "2020-06-25T12:26:18Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/DwrfEncryptionMetadata.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.collect.ImmutableMap;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import static java.util.Objects.hash;\n+import static java.util.Objects.requireNonNull;\n+\n+public class DwrfEncryptionMetadata\n+        implements EncryptionMetadata\n+{\n+    private final Map<String, byte[]> fieldToKeyData;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzODUyOQ=="}, "originalCommit": {"oid": "4e2058c9bee83f7239a29b6e283c906626cd36b4"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2487, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}