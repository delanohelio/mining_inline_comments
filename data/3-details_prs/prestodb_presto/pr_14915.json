{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4MjExMzMx", "number": 14915, "title": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit", "bodyText": "Cherry-pick of trinodb/trino#441 and trinodb/trino#818\n== RELEASE NOTES ==\n\nGeneral Changes\n* Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n* The analyzer will emit a warning if a redundant ORDER BY is present\n\nresolves: #14897", "createdAt": "2020-07-29T05:53:23Z", "url": "https://github.com/prestodb/presto/pull/14915", "merged": true, "mergeCommit": {"oid": "844dbebc2cd417835e4506fac31a7da600cf7e13"}, "closed": true, "closedAt": "2020-12-28T22:03:47Z", "author": {"login": "fgwang7w"}, "timelineItems": {"totalCount": 55, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5xb1bgBqjM2MDA4MjEyNTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdqtRLqgFqTU1OTMxMjYzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e917df00b03a29257548b0b20ebca61d280559c", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/8e917df00b03a29257548b0b20ebca61d280559c", "committedDate": "2020-07-29T05:46:04Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "4cb60861f44106ee515c7ecde756ac498ff2c424", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/4cb60861f44106ee515c7ecde756ac498ff2c424", "committedDate": "2020-07-29T20:54:56Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4cb60861f44106ee515c7ecde756ac498ff2c424", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/4cb60861f44106ee515c7ecde756ac498ff2c424", "committedDate": "2020-07-29T20:54:56Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "16f67a3ad20ba4361be76f48bebdbc144902e006", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/16f67a3ad20ba4361be76f48bebdbc144902e006", "committedDate": "2020-07-29T21:26:00Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "16f67a3ad20ba4361be76f48bebdbc144902e006", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/16f67a3ad20ba4361be76f48bebdbc144902e006", "committedDate": "2020-07-29T21:26:00Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "237c0b027c3cd1d50101afa59e61562e897e52be", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/237c0b027c3cd1d50101afa59e61562e897e52be", "committedDate": "2020-07-29T21:54:38Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "237c0b027c3cd1d50101afa59e61562e897e52be", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/237c0b027c3cd1d50101afa59e61562e897e52be", "committedDate": "2020-07-29T21:54:38Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "915e3e54f543365467696fd42e1e69a2991146d1", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/915e3e54f543365467696fd42e1e69a2991146d1", "committedDate": "2020-07-30T01:04:09Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "915e3e54f543365467696fd42e1e69a2991146d1", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/915e3e54f543365467696fd42e1e69a2991146d1", "committedDate": "2020-07-30T01:04:09Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "01ef4073c67a347cb9ed48fa3c89bacefa128ed9", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/01ef4073c67a347cb9ed48fa3c89bacefa128ed9", "committedDate": "2020-07-30T05:54:10Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "01ef4073c67a347cb9ed48fa3c89bacefa128ed9", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/01ef4073c67a347cb9ed48fa3c89bacefa128ed9", "committedDate": "2020-07-30T05:54:10Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "1ea2d7cd39682d417221ed9aa00761ce5394d010", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/1ea2d7cd39682d417221ed9aa00761ce5394d010", "committedDate": "2020-07-30T18:36:38Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1ea2d7cd39682d417221ed9aa00761ce5394d010", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/1ea2d7cd39682d417221ed9aa00761ce5394d010", "committedDate": "2020-07-30T18:36:38Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "3c4b57f6310f638f6c64b44096ce211dc5d0b39c", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/3c4b57f6310f638f6c64b44096ce211dc5d0b39c", "committedDate": "2020-07-30T21:16:57Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c4b57f6310f638f6c64b44096ce211dc5d0b39c", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/3c4b57f6310f638f6c64b44096ce211dc5d0b39c", "committedDate": "2020-07-30T21:16:57Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "b6e735db3e53a67dda8e2e2e0d22db2cb01657b6", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/b6e735db3e53a67dda8e2e2e0d22db2cb01657b6", "committedDate": "2020-08-03T06:23:40Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b6e735db3e53a67dda8e2e2e0d22db2cb01657b6", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/b6e735db3e53a67dda8e2e2e0d22db2cb01657b6", "committedDate": "2020-08-03T06:23:40Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "de71aadfd33bdf5024fee715f457ff64432578c1", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/de71aadfd33bdf5024fee715f457ff64432578c1", "committedDate": "2020-08-03T17:18:34Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de71aadfd33bdf5024fee715f457ff64432578c1", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/de71aadfd33bdf5024fee715f457ff64432578c1", "committedDate": "2020-08-03T17:18:34Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "318a1b9d9f6a5a9483d03c95b3516ab13e9691a1", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/318a1b9d9f6a5a9483d03c95b3516ab13e9691a1", "committedDate": "2020-08-12T06:18:12Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "318a1b9d9f6a5a9483d03c95b3516ab13e9691a1", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/318a1b9d9f6a5a9483d03c95b3516ab13e9691a1", "committedDate": "2020-08-12T06:18:12Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "c98107bf5b9d08a291e70b8d6d050cb5be8c564f", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/c98107bf5b9d08a291e70b8d6d050cb5be8c564f", "committedDate": "2020-08-17T23:02:03Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c98107bf5b9d08a291e70b8d6d050cb5be8c564f", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/c98107bf5b9d08a291e70b8d6d050cb5be8c564f", "committedDate": "2020-08-17T23:02:03Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "cd080017abc84ce87e97b697e91811b1a0fb5a55", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/cd080017abc84ce87e97b697e91811b1a0fb5a55", "committedDate": "2020-08-18T00:33:55Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd080017abc84ce87e97b697e91811b1a0fb5a55", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/cd080017abc84ce87e97b697e91811b1a0fb5a55", "committedDate": "2020-08-18T00:33:55Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "b77e70e7e891e7f7096018a678785b448f59a855", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/b77e70e7e891e7f7096018a678785b448f59a855", "committedDate": "2020-08-19T03:27:25Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNzcwNzQ1", "url": "https://github.com/prestodb/presto/pull/14915#pullrequestreview-470770745", "createdAt": "2020-08-19T19:27:22Z", "commit": {"oid": "b77e70e7e891e7f7096018a678785b448f59a855"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOToyNzoyMlrOHDV_6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOToyODozMFrOHDWB_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI2ODIwMQ==", "bodyText": "when would this e true.  this doesn't seem related to sort nodes.  Maybe it should be its own rule to replace subplans that would return zero rows with an empty values.", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r473268201", "createdAt": "2020-08-19T19:27:22Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/RemoveRedundantSort.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.sql.planner.iterative.rule;\n+\n+import com.facebook.presto.matching.Captures;\n+import com.facebook.presto.matching.Pattern;\n+import com.facebook.presto.spi.plan.ValuesNode;\n+import com.facebook.presto.sql.planner.iterative.Rule;\n+import com.facebook.presto.sql.planner.plan.SortNode;\n+import com.google.common.collect.ImmutableList;\n+\n+import static com.facebook.presto.sql.planner.optimizations.QueryCardinalityUtil.isAtMost;\n+import static com.facebook.presto.sql.planner.optimizations.QueryCardinalityUtil.isScalar;\n+import static com.facebook.presto.sql.planner.plan.Patterns.sort;\n+\n+public class RemoveRedundantSort\n+        implements Rule<SortNode>\n+{\n+    private static final Pattern<SortNode> PATTERN = sort();\n+\n+    @Override\n+    public Pattern<SortNode> getPattern()\n+    {\n+        return PATTERN;\n+    }\n+\n+    @Override\n+    public Result apply(SortNode node, Captures captures, Context context)\n+    {\n+        if (isAtMost(node.getSource(), context.getLookup(), 0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b77e70e7e891e7f7096018a678785b448f59a855"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI2ODQ0MQ==", "bodyText": "if we change the isAtMost(0) rule to be separate, then this should be isAtMostScalar()", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r473268441", "createdAt": "2020-08-19T19:27:50Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/RemoveRedundantSort.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.sql.planner.iterative.rule;\n+\n+import com.facebook.presto.matching.Captures;\n+import com.facebook.presto.matching.Pattern;\n+import com.facebook.presto.spi.plan.ValuesNode;\n+import com.facebook.presto.sql.planner.iterative.Rule;\n+import com.facebook.presto.sql.planner.plan.SortNode;\n+import com.google.common.collect.ImmutableList;\n+\n+import static com.facebook.presto.sql.planner.optimizations.QueryCardinalityUtil.isAtMost;\n+import static com.facebook.presto.sql.planner.optimizations.QueryCardinalityUtil.isScalar;\n+import static com.facebook.presto.sql.planner.plan.Patterns.sort;\n+\n+public class RemoveRedundantSort\n+        implements Rule<SortNode>\n+{\n+    private static final Pattern<SortNode> PATTERN = sort();\n+\n+    @Override\n+    public Pattern<SortNode> getPattern()\n+    {\n+        return PATTERN;\n+    }\n+\n+    @Override\n+    public Result apply(SortNode node, Captures captures, Context context)\n+    {\n+        if (isAtMost(node.getSource(), context.getLookup(), 0)) {\n+            return Result.ofPlanNode(new ValuesNode(node.getId(), node.getOutputVariables(), ImmutableList.of()));\n+        }\n+        if (isScalar(node.getSource(), context.getLookup())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b77e70e7e891e7f7096018a678785b448f59a855"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI2ODczMg==", "bodyText": "same comment as above regarding zero and scalar", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r473268732", "createdAt": "2020-08-19T19:28:30Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/RemoveRedundantTopN.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.sql.planner.iterative.rule;\n+\n+import com.facebook.presto.matching.Captures;\n+import com.facebook.presto.matching.Pattern;\n+import com.facebook.presto.spi.plan.TopNNode;\n+import com.facebook.presto.spi.plan.ValuesNode;\n+import com.facebook.presto.sql.planner.iterative.Rule;\n+import com.facebook.presto.sql.planner.plan.SortNode;\n+import com.google.common.collect.ImmutableList;\n+\n+import static com.facebook.presto.sql.planner.optimizations.QueryCardinalityUtil.isAtMost;\n+import static com.facebook.presto.sql.planner.optimizations.QueryCardinalityUtil.isScalar;\n+import static com.facebook.presto.sql.planner.plan.Patterns.topN;\n+\n+/**\n+ * Replace TopN node\n+ * 1. With a Sort node when the subplan is guaranteed to produce fewer rows than N\n+ * 2. With its source when the subplan produces only one row\n+ * 3. With a empty ValuesNode when N is 0\n+ */\n+public class RemoveRedundantTopN\n+        implements Rule<TopNNode>\n+{\n+    private static final Pattern<TopNNode> PATTERN = topN();\n+\n+    @Override\n+    public Pattern<TopNNode> getPattern()\n+    {\n+        return PATTERN;\n+    }\n+\n+    @Override\n+    public Result apply(TopNNode node, Captures captures, Context context)\n+    {\n+        if (node.getCount() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b77e70e7e891e7f7096018a678785b448f59a855"}, "originalPosition": 48}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b77e70e7e891e7f7096018a678785b448f59a855", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/b77e70e7e891e7f7096018a678785b448f59a855", "committedDate": "2020-08-19T03:27:25Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "a28c846f895b28e2a0ff2a4cf5a7a368bc1da5ed", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/a28c846f895b28e2a0ff2a4cf5a7a368bc1da5ed", "committedDate": "2020-09-03T02:34:38Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a28c846f895b28e2a0ff2a4cf5a7a368bc1da5ed", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/a28c846f895b28e2a0ff2a4cf5a7a368bc1da5ed", "committedDate": "2020-09-03T02:34:38Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "500dbe99c91d74f805ba0382273c5669ef21af89", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/500dbe99c91d74f805ba0382273c5669ef21af89", "committedDate": "2020-09-03T05:37:18Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "500dbe99c91d74f805ba0382273c5669ef21af89", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/500dbe99c91d74f805ba0382273c5669ef21af89", "committedDate": "2020-09-03T05:37:18Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "af6d37d86d2fd02d52c84739ed05721b90fbf7aa", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/af6d37d86d2fd02d52c84739ed05721b90fbf7aa", "committedDate": "2020-09-03T21:32:59Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af6d37d86d2fd02d52c84739ed05721b90fbf7aa", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/af6d37d86d2fd02d52c84739ed05721b90fbf7aa", "committedDate": "2020-09-03T21:32:59Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441 and https://github.com/prestosql/presto/pull/818\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com> Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "f9d6b145db77be2bc4ca18a502ff9a5e73a67f7c", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/f9d6b145db77be2bc4ca18a502ff9a5e73a67f7c", "committedDate": "2020-09-11T07:52:09Z", "message": "fix comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9d6b145db77be2bc4ca18a502ff9a5e73a67f7c", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/f9d6b145db77be2bc4ca18a502ff9a5e73a67f7c", "committedDate": "2020-09-11T07:52:09Z", "message": "fix comment"}, "afterCommit": {"oid": "3678ea226cff5462a41588493e943fe3af37c1e6", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/3678ea226cff5462a41588493e943fe3af37c1e6", "committedDate": "2020-09-12T22:03:11Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit when relation is know to single row or less rows than requested\n\nCherry-pick of https://github.com/prestosql/presto/pull/441\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "38f5021613f48d33e523492d5345961d1cb696fe", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/38f5021613f48d33e523492d5345961d1cb696fe", "committedDate": "2020-09-12T22:29:01Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}, "afterCommit": {"oid": "c42ce5272883ae7f6fdfec1296c23a9c2bec7411", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/c42ce5272883ae7f6fdfec1296c23a9c2bec7411", "committedDate": "2020-09-13T03:14:19Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c42ce5272883ae7f6fdfec1296c23a9c2bec7411", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/c42ce5272883ae7f6fdfec1296c23a9c2bec7411", "committedDate": "2020-09-13T03:14:19Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}, "afterCommit": {"oid": "a2105e8a454d98c97b5301ae5727bb0d3ec8978c", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/a2105e8a454d98c97b5301ae5727bb0d3ec8978c", "committedDate": "2020-09-14T01:09:22Z", "message": "fix ut"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2105e8a454d98c97b5301ae5727bb0d3ec8978c", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/a2105e8a454d98c97b5301ae5727bb0d3ec8978c", "committedDate": "2020-09-14T01:09:22Z", "message": "fix ut"}, "afterCommit": {"oid": "27255182ebb832d9c9a81c966893a90da950f850", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/27255182ebb832d9c9a81c966893a90da950f850", "committedDate": "2020-09-14T16:51:54Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "27255182ebb832d9c9a81c966893a90da950f850", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/27255182ebb832d9c9a81c966893a90da950f850", "committedDate": "2020-09-14T16:51:54Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}, "afterCommit": {"oid": "4a67797195c33b4fc0843791175b1814073a0ff1", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/4a67797195c33b4fc0843791175b1814073a0ff1", "committedDate": "2020-09-15T17:28:07Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4a67797195c33b4fc0843791175b1814073a0ff1", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/4a67797195c33b4fc0843791175b1814073a0ff1", "committedDate": "2020-09-15T17:28:07Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}, "afterCommit": {"oid": "e75391c436498a1e6b8fb0e5290153877055b74b", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/e75391c436498a1e6b8fb0e5290153877055b74b", "committedDate": "2020-09-15T17:50:01Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e75391c436498a1e6b8fb0e5290153877055b74b", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/e75391c436498a1e6b8fb0e5290153877055b74b", "committedDate": "2020-09-15T17:50:01Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}, "afterCommit": {"oid": "98a884419c1f2cc5c120403f15c22a90491be2db", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/98a884419c1f2cc5c120403f15c22a90491be2db", "committedDate": "2020-09-15T18:42:31Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzI5NzQx", "url": "https://github.com/prestodb/presto/pull/14915#pullrequestreview-491729741", "createdAt": "2020-09-18T19:30:17Z", "commit": {"oid": "f2a76ff6257544cc47e56184bfd2d231d200870c"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTozMDoxOFrOHUZb5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTo0MDoxNFrOHUZsYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MDMwOA==", "bodyText": "you don't need this anymore.", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r491150308", "createdAt": "2020-09-18T19:30:18Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/RemoveRedundantLimit.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.sql.planner.iterative.rule;\n+\n+import com.facebook.presto.matching.Captures;\n+import com.facebook.presto.matching.Pattern;\n+import com.facebook.presto.spi.plan.LimitNode;\n+import com.facebook.presto.spi.plan.ValuesNode;\n+import com.facebook.presto.sql.planner.iterative.Rule;\n+import com.google.common.collect.ImmutableList;\n+\n+import static com.facebook.presto.sql.planner.optimizations.QueryCardinalityUtil.isAtMost;\n+import static com.facebook.presto.sql.planner.plan.Patterns.limit;\n+\n+/**\n+ * Remove Limit node when the subplan is guaranteed to produce fewer rows than the limit and\n+ * replace the plan with empty values if the limit count is 0.\n+ */\n+public class RemoveRedundantLimit\n+        implements Rule<LimitNode>\n+{\n+    // Applies to both LimitNode with ties and LimitNode without ties.\n+    private static final Pattern<LimitNode> PATTERN = limit();\n+\n+    @Override\n+    public Pattern<LimitNode> getPattern()\n+    {\n+        return PATTERN;\n+    }\n+\n+    @Override\n+    public Result apply(LimitNode limit, Captures captures, Context context)\n+    {\n+        if (limit.getCount() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2a76ff6257544cc47e56184bfd2d231d200870c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MDYyNA==", "bodyText": "don't need this if block anymore.", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r491150624", "createdAt": "2020-09-18T19:31:01Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/RemoveRedundantSort.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.sql.planner.iterative.rule;\n+\n+import com.facebook.presto.matching.Captures;\n+import com.facebook.presto.matching.Pattern;\n+import com.facebook.presto.spi.plan.ValuesNode;\n+import com.facebook.presto.sql.planner.iterative.Rule;\n+import com.facebook.presto.sql.planner.plan.SortNode;\n+import com.google.common.collect.ImmutableList;\n+\n+import static com.facebook.presto.sql.planner.optimizations.QueryCardinalityUtil.isAtMost;\n+import static com.facebook.presto.sql.planner.optimizations.QueryCardinalityUtil.isScalar;\n+import static com.facebook.presto.sql.planner.plan.Patterns.sort;\n+\n+public class RemoveRedundantSort\n+        implements Rule<SortNode>\n+{\n+    private static final Pattern<SortNode> PATTERN = sort();\n+\n+    @Override\n+    public Pattern<SortNode> getPattern()\n+    {\n+        return PATTERN;\n+    }\n+\n+    @Override\n+    public Result apply(SortNode node, Captures captures, Context context)\n+    {\n+        if (isAtMost(node.getSource(), context.getLookup(), 0)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI2ODIwMQ=="}, "originalCommit": {"oid": "b77e70e7e891e7f7096018a678785b448f59a855"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MDkzNg==", "bodyText": "use isAtMostScalar()", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r491150936", "createdAt": "2020-09-18T19:31:37Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/RemoveRedundantTopN.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.sql.planner.iterative.rule;\n+\n+import com.facebook.presto.matching.Captures;\n+import com.facebook.presto.matching.Pattern;\n+import com.facebook.presto.spi.plan.TopNNode;\n+import com.facebook.presto.spi.plan.ValuesNode;\n+import com.facebook.presto.sql.planner.iterative.Rule;\n+import com.facebook.presto.sql.planner.plan.SortNode;\n+import com.google.common.collect.ImmutableList;\n+\n+import static com.facebook.presto.sql.planner.optimizations.QueryCardinalityUtil.isAtMost;\n+import static com.facebook.presto.sql.planner.optimizations.QueryCardinalityUtil.isScalar;\n+import static com.facebook.presto.sql.planner.plan.Patterns.topN;\n+\n+/**\n+ * Replace TopN node\n+ * 1. With a Sort node when the subplan is guaranteed to produce fewer rows than N\n+ * 2. With its source when the subplan produces only one row\n+ * 3. With a empty ValuesNode when N is 0\n+ */\n+public class RemoveRedundantTopN\n+        implements Rule<TopNNode>\n+{\n+    private static final Pattern<TopNNode> PATTERN = topN();\n+\n+    @Override\n+    public Pattern<TopNNode> getPattern()\n+    {\n+        return PATTERN;\n+    }\n+\n+    @Override\n+    public Result apply(TopNNode node, Captures captures, Context context)\n+    {\n+        if (isScalar(node.getSource(), context.getLookup())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2a76ff6257544cc47e56184bfd2d231d200870c"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MzQ2NQ==", "bodyText": "Don't use PlanOptimizer for new optimizer rules.  Instead (and instead of deprecating the EvaluateZeroLimit and EvaluateZeroSample rule), create a new Iterative Rule for each of these other cases that you are adding.", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r491153465", "createdAt": "2020-09-18T19:37:38Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/EvaluateZeroCount.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package com.facebook.presto.sql.planner.optimizations;\n+\n+import com.facebook.presto.Session;\n+import com.facebook.presto.spi.WarningCollector;\n+import com.facebook.presto.spi.plan.*;\n+import com.facebook.presto.sql.planner.PlanVariableAllocator;\n+import com.facebook.presto.sql.planner.TypeProvider;\n+import com.facebook.presto.sql.planner.plan.SampleNode;\n+import com.facebook.presto.sql.planner.plan.SimplePlanRewriter;\n+import com.google.common.collect.ImmutableList;\n+\n+public class EvaluateZeroCount\n+    implements PlanOptimizer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2a76ff6257544cc47e56184bfd2d231d200870c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1NDUyOQ==", "bodyText": "update the comment to remove bullet 3 since it's now a part of a different optimizer rule and update bullet 2 to say at most one row.", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r491154529", "createdAt": "2020-09-18T19:40:14Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/RemoveRedundantTopN.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.sql.planner.iterative.rule;\n+\n+import com.facebook.presto.matching.Captures;\n+import com.facebook.presto.matching.Pattern;\n+import com.facebook.presto.spi.plan.TopNNode;\n+import com.facebook.presto.spi.plan.ValuesNode;\n+import com.facebook.presto.sql.planner.iterative.Rule;\n+import com.facebook.presto.sql.planner.plan.SortNode;\n+import com.google.common.collect.ImmutableList;\n+\n+import static com.facebook.presto.sql.planner.optimizations.QueryCardinalityUtil.isAtMost;\n+import static com.facebook.presto.sql.planner.optimizations.QueryCardinalityUtil.isScalar;\n+import static com.facebook.presto.sql.planner.plan.Patterns.topN;\n+\n+/**\n+ * Replace TopN node\n+ * 1. With a Sort node when the subplan is guaranteed to produce fewer rows than N\n+ * 2. With its source when the subplan produces only one row\n+ * 3. With a empty ValuesNode when N is 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2a76ff6257544cc47e56184bfd2d231d200870c"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98a884419c1f2cc5c120403f15c22a90491be2db", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/98a884419c1f2cc5c120403f15c22a90491be2db", "committedDate": "2020-09-15T18:42:31Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}, "afterCommit": {"oid": "6720b52e1fe615f8c6967de653b51d9a8ee8b000", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/6720b52e1fe615f8c6967de653b51d9a8ee8b000", "committedDate": "2020-09-25T01:53:35Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6720b52e1fe615f8c6967de653b51d9a8ee8b000", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/6720b52e1fe615f8c6967de653b51d9a8ee8b000", "committedDate": "2020-09-25T01:53:35Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}, "afterCommit": {"oid": "fbd50bb72bc4393b4f1564c538991d5bc2e5f3c9", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/fbd50bb72bc4393b4f1564c538991d5bc2e5f3c9", "committedDate": "2020-09-25T06:22:57Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbd50bb72bc4393b4f1564c538991d5bc2e5f3c9", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/fbd50bb72bc4393b4f1564c538991d5bc2e5f3c9", "committedDate": "2020-09-25T06:22:57Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}, "afterCommit": {"oid": "f7136147c4f35182e2986c55b4188ed5f8bc5e16", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/f7136147c4f35182e2986c55b4188ed5f8bc5e16", "committedDate": "2020-09-25T17:01:45Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f7136147c4f35182e2986c55b4188ed5f8bc5e16", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/f7136147c4f35182e2986c55b4188ed5f8bc5e16", "committedDate": "2020-09-25T17:01:45Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818"}, "afterCommit": {"oid": "fbf7bc09df0f15412b1c7857a99b9b7cf1d5bc56", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/fbf7bc09df0f15412b1c7857a99b9b7cf1d5bc56", "committedDate": "2020-09-29T18:01:39Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbf7bc09df0f15412b1c7857a99b9b7cf1d5bc56", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/fbf7bc09df0f15412b1c7857a99b9b7cf1d5bc56", "committedDate": "2020-09-29T18:01:39Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "05641decfe7fba9875ac7125c9885ba320237d3a", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/05641decfe7fba9875ac7125c9885ba320237d3a", "committedDate": "2020-10-07T05:10:53Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author by: Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05641decfe7fba9875ac7125c9885ba320237d3a", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/05641decfe7fba9875ac7125c9885ba320237d3a", "committedDate": "2020-10-07T05:10:53Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author by: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "eb2f4e4c9034128c654a95c1e232cba52559d411", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/eb2f4e4c9034128c654a95c1e232cba52559d411", "committedDate": "2020-10-07T15:41:34Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author by: Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjA1NzEz", "url": "https://github.com/prestodb/presto/pull/14915#pullrequestreview-506605713", "createdAt": "2020-10-12T13:11:12Z", "commit": {"oid": "126729c3227522f1f5ab238466fce3760dfd00ed"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzoxMToxMlrOHf-IMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0NjoxNFrOHg0vRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI4NTgxMQ==", "bodyText": "we don't use .* imports.  Can you change this back to explicitly listing all the optimizers", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r503285811", "createdAt": "2020-10-12T13:11:12Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/PlanOptimizers.java", "diffHunk": "@@ -109,27 +113,7 @@\n import com.facebook.presto.sql.planner.iterative.rule.TransformUncorrelatedInPredicateSubqueryToSemiJoin;\n import com.facebook.presto.sql.planner.iterative.rule.TransformUncorrelatedLateralToJoin;\n import com.facebook.presto.sql.planner.iterative.rule.TranslateExpressions;\n-import com.facebook.presto.sql.planner.optimizations.AddExchanges;\n-import com.facebook.presto.sql.planner.optimizations.AddLocalExchanges;\n-import com.facebook.presto.sql.planner.optimizations.ApplyConnectorOptimization;\n-import com.facebook.presto.sql.planner.optimizations.CheckSubqueryNodesAreRewritten;\n-import com.facebook.presto.sql.planner.optimizations.HashGenerationOptimizer;\n-import com.facebook.presto.sql.planner.optimizations.ImplementIntersectAndExceptAsUnion;\n-import com.facebook.presto.sql.planner.optimizations.IndexJoinOptimizer;\n-import com.facebook.presto.sql.planner.optimizations.LimitPushDown;\n-import com.facebook.presto.sql.planner.optimizations.MetadataDeleteOptimizer;\n-import com.facebook.presto.sql.planner.optimizations.MetadataQueryOptimizer;\n-import com.facebook.presto.sql.planner.optimizations.OptimizeMixedDistinctAggregations;\n-import com.facebook.presto.sql.planner.optimizations.PlanOptimizer;\n-import com.facebook.presto.sql.planner.optimizations.PredicatePushDown;\n-import com.facebook.presto.sql.planner.optimizations.PruneUnreferencedOutputs;\n-import com.facebook.presto.sql.planner.optimizations.PushdownSubfields;\n-import com.facebook.presto.sql.planner.optimizations.ReplicateSemiJoinInDelete;\n-import com.facebook.presto.sql.planner.optimizations.SetFlatteningOptimizer;\n-import com.facebook.presto.sql.planner.optimizations.StatsRecordingPlanOptimizer;\n-import com.facebook.presto.sql.planner.optimizations.TransformQuantifiedComparisonApplyToLateralJoin;\n-import com.facebook.presto.sql.planner.optimizations.UnaliasSymbolReferences;\n-import com.facebook.presto.sql.planner.optimizations.WindowFilterPushDown;\n+import com.facebook.presto.sql.planner.optimizations.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "126729c3227522f1f5ab238466fce3760dfd00ed"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3NDk4Nw==", "bodyText": "shouldn't be deprecated", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r504174987", "createdAt": "2020-10-13T18:36:00Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/EvaluateZeroLimit.java", "diffHunk": "@@ -23,6 +23,7 @@\n import static com.facebook.presto.sql.planner.plan.Patterns.Limit.count;\n import static com.facebook.presto.sql.planner.plan.Patterns.limit;\n \n+@Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "126729c3227522f1f5ab238466fce3760dfd00ed"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3NTA4NQ==", "bodyText": "shouldn't be deprecated", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r504175085", "createdAt": "2020-10-13T18:36:08Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/EvaluateZeroSample.java", "diffHunk": "@@ -26,6 +26,7 @@\n /**\n  * Replaces 0% sample node with empty values node.\n  */\n+@Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "126729c3227522f1f5ab238466fce3760dfd00ed"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3Nzk1Mg==", "bodyText": "deleting the newline should be part of the commit that adds this class", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r504177952", "createdAt": "2020-10-13T18:41:26Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/EvaluateZeroDistinctLimit.java", "diffHunk": "@@ -1,4 +1,3 @@\n-\n /*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb2f4e4c9034128c654a95c1e232cba52559d411"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3ODE3OQ==", "bodyText": "this change should be part of the commit that adds this class", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r504178179", "createdAt": "2020-10-13T18:41:52Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/RemoveRedundantTopN.java", "diffHunk": "@@ -25,9 +25,8 @@\n \n /**\n  * Replace TopN node\n- * 1. With a Sort node when the subplan is guaranteed to produce fewer rows than N\n- * 2. With its source when the subplan produces only one row\n- * 3. With a empty ValuesNode when N is 0\n+ * 1. With its source when the subplan is at most one row", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb2f4e4c9034128c654a95c1e232cba52559d411"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3OTUwMQ==", "bodyText": "what's with this todo", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r504179501", "createdAt": "2020-10-13T18:44:19Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/test/java/com/facebook/presto/sql/planner/iterative/rule/TestRemoveRedundantTopN.java", "diffHunk": "@@ -81,6 +82,7 @@ public void testZeroTopN()\n                                                 ImmutableList.of(\n                                                         constantExpressions(BIGINT, 1L, 10L),\n                                                         constantExpressions(BIGINT, 2L, 11L))))))\n+                // TODO: verify contents", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb2f4e4c9034128c654a95c1e232cba52559d411"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3OTU3Mg==", "bodyText": "why is this commented out?", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r504179572", "createdAt": "2020-10-13T18:44:26Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/test/java/com/facebook/presto/sql/planner/iterative/rule/TestRemoveRedundantTopN.java", "diffHunk": "@@ -70,6 +70,7 @@ public void test()\n     public void testZeroTopN()\n     {\n         tester().assertThat(new EvaluateZeroTopN())\n+                //tester().assertThat(new RemoveRedundantTopN())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb2f4e4c9034128c654a95c1e232cba52559d411"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3OTk0NQ==", "bodyText": "can you share more about this change? Also, it should be in the previous commit.", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r504179945", "createdAt": "2020-10-13T18:45:09Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/test/java/com/facebook/presto/sql/planner/iterative/rule/TestEvaluateZeroLimit.java", "diffHunk": "@@ -33,8 +33,7 @@ public void testDoesNotFire()\n                 .on(p ->\n                         p.limit(\n                                 1,\n-                                p.values(p.variable(\"a\"))))\n-                .doesNotFire();\n+                                p.values(p.variable(\"a\"))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb2f4e4c9034128c654a95c1e232cba52559d411"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE4MDM0OA==", "bodyText": "This belongs in the previous commit.", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r504180348", "createdAt": "2020-10-13T18:45:53Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/test/java/com/facebook/presto/sql/planner/iterative/rule/TestEvaluateZeroSample.java", "diffHunk": "@@ -35,8 +35,7 @@ public void testDoesNotFire()\n                         p.sample(\n                                 0.15,\n                                 Type.BERNOULLI,\n-                                p.values(p.variable(\"a\"))))\n-                .doesNotFire();\n+                                p.values(p.variable(\"a\"))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb2f4e4c9034128c654a95c1e232cba52559d411"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE4MDU0OQ==", "bodyText": "this should be in the previous commit and in the evaluateZeroLimit test", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r504180549", "createdAt": "2020-10-13T18:46:14Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/test/java/com/facebook/presto/sql/planner/iterative/rule/TestRemoveRedundantLimit.java", "diffHunk": "@@ -79,7 +79,7 @@ public void testForZeroLimit()\n     @Test\n     public void doesNotFire()\n     {\n-        tester().assertThat(new RemoveRedundantLimit())\n+        tester().assertThat(new EvaluateZeroLimit())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb2f4e4c9034128c654a95c1e232cba52559d411"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb2f4e4c9034128c654a95c1e232cba52559d411", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/eb2f4e4c9034128c654a95c1e232cba52559d411", "committedDate": "2020-10-07T15:41:34Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author by: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "30aad5d91817a2d9b5a25349109cbdce0116e449", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/30aad5d91817a2d9b5a25349109cbdce0116e449", "committedDate": "2020-10-29T02:45:01Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "30aad5d91817a2d9b5a25349109cbdce0116e449", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/30aad5d91817a2d9b5a25349109cbdce0116e449", "committedDate": "2020-10-29T02:45:01Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "a189b815db531c8578ae5fe91cd60db00bee2142", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/a189b815db531c8578ae5fe91cd60db00bee2142", "committedDate": "2020-11-06T07:31:13Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a189b815db531c8578ae5fe91cd60db00bee2142", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/a189b815db531c8578ae5fe91cd60db00bee2142", "committedDate": "2020-11-06T07:31:13Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "b871fe8268f411eb5e12541ad84dfc31faff4d0d", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/b871fe8268f411eb5e12541ad84dfc31faff4d0d", "committedDate": "2020-11-06T17:50:49Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MzYyMDY1", "url": "https://github.com/prestodb/presto/pull/14915#pullrequestreview-549362065", "createdAt": "2020-12-10T16:14:53Z", "commit": {"oid": "581957b1074062b96e651a18a0719b29446e1f9f"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjoxNDo1M1rOIDRPKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjoyMTozMVrOIDRllg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI5OTA0OQ==", "bodyText": "nit: remove this change.", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r540299049", "createdAt": "2020-12-10T16:14:53Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/EvaluateZeroSample.java", "diffHunk": "@@ -26,6 +26,7 @@\n /**\n  * Replaces 0% sample node with empty values node.\n  */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "581957b1074062b96e651a18a0719b29446e1f9f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwMDc1OQ==", "bodyText": "the string should be skip_redundant_sort to match the config property and variable name.", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r540300759", "createdAt": "2020-12-10T16:17:04Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java", "diffHunk": "@@ -170,6 +170,7 @@\n     public static final String INLINE_SQL_FUNCTIONS = \"inline_sql_functions\";\n     public static final String REMOTE_FUNCTIONS_ENABLED = \"remote_functions_enabled\";\n     public static final String CHECK_ACCESS_CONTROL_ON_UTILIZED_COLUMNS_ONLY = \"check_access_control_on_utilized_columns_only\";\n+    public static final String SKIP_REDUNDANT_SORT = \"remove_redundant_sort\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b871fe8268f411eb5e12541ad84dfc31faff4d0d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwMjc5OA==", "bodyText": "this should go in the previous commit (undoing the accidental formatting changes you made there).", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r540302798", "createdAt": "2020-12-10T16:18:59Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/PlanOptimizers.java", "diffHunk": "@@ -186,6 +186,20 @@ public PlanOptimizers(\n                 taskCountEstimator);\n     }\n \n+    @PostConstruct\n+    public void initialize()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b871fe8268f411eb5e12541ad84dfc31faff4d0d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwMzM0OA==", "bodyText": "this belongs in the previous commit where DistinctLimit was introduced.", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r540303348", "createdAt": "2020-12-10T16:19:40Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/plan/Patterns.java", "diffHunk": "@@ -261,6 +253,14 @@ private Patterns() {}\n         }\n     }\n \n+    public static class DistinctLimit", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b871fe8268f411eb5e12541ad84dfc31faff4d0d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwNDAzMQ==", "bodyText": "why is this test removed?", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r540304031", "createdAt": "2020-12-10T16:20:33Z", "author": {"login": "rschlussel"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestOrderByQueries.java", "diffHunk": "@@ -241,12 +240,6 @@ public void testUndistributedOrderBy()\n         assertQueryOrdered(undistributedOrderBy, \"SELECT orderstatus FROM orders ORDER BY orderstatus\");\n     }\n \n-    @Test\n-    public void testOrderLimitCompaction()\n-    {\n-        assertQueryOrdered(\"SELECT * FROM (SELECT * FROM orders ORDER BY orderkey) LIMIT 10\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b871fe8268f411eb5e12541ad84dfc31faff4d0d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMwNDc5MA==", "bodyText": "why is this test removed?", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r540304790", "createdAt": "2020-12-10T16:21:31Z", "author": {"login": "rschlussel"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestOrderByQueries.java", "diffHunk": "@@ -80,7 +80,6 @@ public void testOrderByWithOutputColumnReference()\n         assertQueryOrdered(\"SELECT max(a) FROM (values (1,2), (2,1)) t(a,b) GROUP BY b ORDER BY b\", \"VALUES 2, 1\");\n         assertQueryOrdered(\"SELECT max(a) FROM (values (1,2), (2,1)) t(a,b) GROUP BY t.b ORDER BY t.b*1.0\", \"VALUES 2, 1\");\n         assertQueryOrdered(\"SELECT -(a+b) AS a, -(a+b) AS b, a+b FROM (values (41, 42), (-41, -42)) t(a,b) GROUP BY a+b ORDER BY a+b\", \"VALUES (-83, -83, 83), (83, 83, -83)\");\n-        assertQueryOrdered(\"SELECT c.a FROM (SELECT CAST(ROW(-a.a) AS ROW(a BIGINT)) a FROM (VALUES (2), (1)) a(a) GROUP BY a.a ORDER BY a.a) t(c)\", \"VALUES -2, -1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b871fe8268f411eb5e12541ad84dfc31faff4d0d"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b871fe8268f411eb5e12541ad84dfc31faff4d0d", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/b871fe8268f411eb5e12541ad84dfc31faff4d0d", "committedDate": "2020-11-06T17:50:49Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "9724fcaa0de8560208afb1d8ff3511cbb4326e17", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/9724fcaa0de8560208afb1d8ff3511cbb4326e17", "committedDate": "2020-12-14T06:04:07Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9724fcaa0de8560208afb1d8ff3511cbb4326e17", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/9724fcaa0de8560208afb1d8ff3511cbb4326e17", "committedDate": "2020-12-14T06:04:07Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "8faa9c173b5a401d0a2473d538108dbe8a4bf147", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/8faa9c173b5a401d0a2473d538108dbe8a4bf147", "committedDate": "2020-12-14T07:48:15Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8faa9c173b5a401d0a2473d538108dbe8a4bf147", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/8faa9c173b5a401d0a2473d538108dbe8a4bf147", "committedDate": "2020-12-14T07:48:15Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "c4f55989cf416f0e8baf58c25f8580b7f5d130b8", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/c4f55989cf416f0e8baf58c25f8580b7f5d130b8", "committedDate": "2020-12-14T08:46:03Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4f55989cf416f0e8baf58c25f8580b7f5d130b8", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/c4f55989cf416f0e8baf58c25f8580b7f5d130b8", "committedDate": "2020-12-14T08:46:03Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "bc273fd4f8e16ba4615805ae706098ba13718c38", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/bc273fd4f8e16ba4615805ae706098ba13718c38", "committedDate": "2020-12-14T20:19:23Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit\n\nIn addition to the Cherry-pick for removing redundant Limit/TopN/Sort/DistinctLimit,\nthere are a few more rules added to replace any input that is zero-TopN/DistinctLimit/Limit\n\nCherry-pick of https://github.com/prestosql/presto/pull/441\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b25f56f4ffb9c545bd708d7e926f567c6b026da", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/6b25f56f4ffb9c545bd708d7e926f567c6b026da", "committedDate": "2020-12-14T20:19:54Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "4625b08a75598d34de0d1ddf08d4d486cc0974b4", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/4625b08a75598d34de0d1ddf08d4d486cc0974b4", "committedDate": "2020-12-14T20:21:04Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit\n\nIn addition to the Cherry-pick for removing redundant Limit/TopN/Sort/DistinctLimit,\nthere are a few more rules added to replace any input that is zero-TopN/DistinctLimit/Limit\n\nCherry-pick of https://github.com/prestosql/presto/pull/441\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a958a5f2f63e76bfdf8b6d6d87914a6b436a2ee4", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/a958a5f2f63e76bfdf8b6d6d87914a6b436a2ee4", "committedDate": "2020-12-14T22:33:05Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "a87e1ac6343965c9c399b93c9cd6fd706d891ca9", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/a87e1ac6343965c9c399b93c9cd6fd706d891ca9", "committedDate": "2020-12-14T22:58:50Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a87e1ac6343965c9c399b93c9cd6fd706d891ca9", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/a87e1ac6343965c9c399b93c9cd6fd706d891ca9", "committedDate": "2020-12-14T22:58:50Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "4da8ff677a385ec23817d4d384b216a13f88b99c", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/4da8ff677a385ec23817d4d384b216a13f88b99c", "committedDate": "2020-12-14T23:20:36Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit\n\nIn addition to the Cherry-pick for removing redundant Limit/TopN/Sort/DistinctLimit,\nthere are a few more rules added to replace any input that is zero-TopN/DistinctLimit/Limit\n\nCherry-pick of https://github.com/prestosql/presto/pull/441\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "236b08537ade1448ace9972b51738e7e8d59df64", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/236b08537ade1448ace9972b51738e7e8d59df64", "committedDate": "2020-12-15T01:18:26Z", "message": "fix UT: ordering in subquery is less preserved"}, "afterCommit": {"oid": "ba959e5f3f867b90dd2e8857f03697c82c6ad8d0", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/ba959e5f3f867b90dd2e8857f03697c82c6ad8d0", "committedDate": "2020-12-15T04:18:56Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba959e5f3f867b90dd2e8857f03697c82c6ad8d0", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/ba959e5f3f867b90dd2e8857f03697c82c6ad8d0", "committedDate": "2020-12-15T04:18:56Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "f3eb48cb4e847610540adc8d7a6683d711590d15", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/f3eb48cb4e847610540adc8d7a6683d711590d15", "committedDate": "2020-12-15T05:36:55Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3eb48cb4e847610540adc8d7a6683d711590d15", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/f3eb48cb4e847610540adc8d7a6683d711590d15", "committedDate": "2020-12-15T05:36:55Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "6ffd10f9df84a5aa7e184fafa0dabd96624276b4", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/6ffd10f9df84a5aa7e184fafa0dabd96624276b4", "committedDate": "2020-12-15T18:31:45Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6ffd10f9df84a5aa7e184fafa0dabd96624276b4", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/6ffd10f9df84a5aa7e184fafa0dabd96624276b4", "committedDate": "2020-12-15T18:31:45Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "6d3513b88a471d3b59da8751fd4f249c9f068b2c", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/6d3513b88a471d3b59da8751fd4f249c9f068b2c", "committedDate": "2020-12-16T22:27:42Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MTM3Nzkw", "url": "https://github.com/prestodb/presto/pull/14915#pullrequestreview-558137790", "createdAt": "2020-12-23T17:34:21Z", "commit": {"oid": "5e0f787f631f4d4f0b46d932967bdb9c57024c6b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzozNDoyMVrOIKr1cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzozNzozOVrOIKsAPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA3NDg2Nw==", "bodyText": "It seems in this case the limit is also redundant.  We're just not smart enough to remove it.  Maybe instead have 2 rows in the values node.", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r548074867", "createdAt": "2020-12-23T17:34:21Z", "author": {"login": "rschlussel"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "diffHunk": "@@ -3389,9 +3389,12 @@ public void testCorrelatedScalarSubqueries()\n         // two level of nesting\n         assertQuery(\"SELECT * FROM nation n WHERE 2 = (SELECT (SELECT 2 * n.nationkey))\");\n \n+        // redundant LIMIT in subquery\n+        assertQuery(\"SELECT (SELECT count(*) FROM (VALUES (7,1)) t(orderkey, value) WHERE orderkey = corr_key LIMIT 1) FROM (values 7) t(corr_key)\");\n+\n         // explicit LIMIT in subquery\n         assertQueryFails(\n-                \"SELECT (SELECT count(*) FROM (VALUES (7,1)) t(orderkey, value) WHERE orderkey = corr_key LIMIT 1) FROM (values 7) t(corr_key)\",\n+                \"SELECT (SELECT count(*) FROM (VALUES (7,1)) t(orderkey, value) WHERE orderkey = corr_key GROUP BY value LIMIT 1) FROM (values 7) t(corr_key)\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0f787f631f4d4f0b46d932967bdb9c57024c6b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA3NzYyOA==", "bodyText": "I think limit here was incidental and we still want this test for unsupported subqueries to ensure they throw proper errors.", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r548077628", "createdAt": "2020-12-23T17:37:39Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/test/java/com/facebook/presto/sql/query/TestSubqueries.java", "diffHunk": "@@ -86,16 +86,16 @@ public void testCorrelatedExistsSubqueriesWithOrPredicateAndNull()\n     }\n \n     @Test\n-    public void testUnsupportedSubqueriesWithCoercions()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0f787f631f4d4f0b46d932967bdb9c57024c6b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bd9ac376e0d5223d905427abc0d7044b91fef1c", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/0bd9ac376e0d5223d905427abc0d7044b91fef1c", "committedDate": "2020-12-28T04:48:19Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit\n\nIn addition to the Cherry-pick for removing redundant Limit/TopN/Sort/DistinctLimit,\nthere are a few more rules added to replace any input that is zero-TopN/DistinctLimit/Limit\n\nCherry-pick of https://github.com/prestosql/presto/pull/441\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6d3513b88a471d3b59da8751fd4f249c9f068b2c", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/6d3513b88a471d3b59da8751fd4f249c9f068b2c", "committedDate": "2020-12-16T22:27:42Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}, "afterCommit": {"oid": "0bd9ac376e0d5223d905427abc0d7044b91fef1c", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/0bd9ac376e0d5223d905427abc0d7044b91fef1c", "committedDate": "2020-12-28T04:48:19Z", "message": "Avoid planning unnecessary LIMIT/TopN/Sort/DistinctLimit\n\nIn addition to the Cherry-pick for removing redundant Limit/TopN/Sort/DistinctLimit,\nthere are a few more rules added to replace any input that is zero-TopN/DistinctLimit/Limit\n\nCherry-pick of https://github.com/prestosql/presto/pull/441\n\nCo-authored-by: praveenkrishna <praveenkrishna@tutanota.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bf0c8535a0ba0683dec654b2e205d842900764a", "author": {"user": {"login": "fgwang7w", "name": "countryman4687"}}, "url": "https://github.com/prestodb/presto/commit/4bf0c8535a0ba0683dec654b2e205d842900764a", "committedDate": "2020-12-28T04:49:14Z", "message": "Avoid planning unnecessary Sort\n\nCherry-pick of https://github.com/prestosql/presto/pull/818\n\nCo-author: Martin Traverso <mtraverso@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MTc4Mjkx", "url": "https://github.com/prestodb/presto/pull/14915#pullrequestreview-559178291", "createdAt": "2020-12-28T14:57:22Z", "commit": {"oid": "4bf0c8535a0ba0683dec654b2e205d842900764a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MjgzNDI5", "url": "https://github.com/prestodb/presto/pull/14915#pullrequestreview-559283429", "createdAt": "2020-12-28T19:56:58Z", "commit": {"oid": "4bf0c8535a0ba0683dec654b2e205d842900764a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOTo1Njo1OFrOIMA9mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOTo1Njo1OFrOIMA9mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2OTU5NQ==", "bodyText": "I'm a bit confused why this is here. Shouldn't this be done in the analyzer and result stored somewhere? If not, we should do that.", "url": "https://github.com/prestodb/presto/pull/14915#discussion_r549469595", "createdAt": "2020-12-28T19:56:58Z", "author": {"login": "kaikalur"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -1122,12 +1127,22 @@ protected Scope visitQuerySpecification(QuerySpecification node, Optional<Scope>\n             List<Expression> orderByExpressions = emptyList();\n             Optional<Scope> orderByScope = Optional.empty();\n             if (node.getOrderBy().isPresent()) {\n-                orderByScope = Optional.of(computeAndAssignOrderByScope(node.getOrderBy().get(), sourceScope, outputScope));\n-                orderByExpressions = analyzeOrderBy(node, orderByScope.get(), outputExpressions);\n-            }\n-            else {\n-                analysis.setOrderByExpressions(node, emptyList());\n+                if (node.getSelect().isDistinct()) {\n+                    verifySelectDistinct(node, outputExpressions);\n+                }\n+\n+                OrderBy orderBy = node.getOrderBy().get();\n+                orderByScope = Optional.of(computeAndAssignOrderByScope(orderBy, sourceScope, outputScope));\n+\n+                orderByExpressions = analyzeOrderBy(node, orderBy.getSortItems(), orderByScope.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bf0c8535a0ba0683dec654b2e205d842900764a"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MzEyNjM2", "url": "https://github.com/prestodb/presto/pull/14915#pullrequestreview-559312636", "createdAt": "2020-12-28T21:46:33Z", "commit": {"oid": "4bf0c8535a0ba0683dec654b2e205d842900764a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 364, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}