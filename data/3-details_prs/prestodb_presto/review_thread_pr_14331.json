{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4Mjg2MzA4", "number": 14331, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjowMToyOVrODxtvEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzo1Mjo1OVrODxwfGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDU2MTQ1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/IOPlanPrinter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjowMToyOVrOGFVzMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjowMToyOVrOGFVzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1MzIzNQ==", "bodyText": "Purposefully left this comment to reviews to chime in...", "url": "https://github.com/prestodb/presto/pull/14331#discussion_r408253235", "createdAt": "2020-04-14T16:01:29Z", "author": {"login": "jbroll"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/IOPlanPrinter.java", "diffHunk": "@@ -546,7 +546,12 @@ private String getVarcharValue(Type type, Object value)\n             if (type instanceof BooleanType) {\n                 return ((Boolean) value).toString();\n             }\n-            throw new PrestoException(NOT_SUPPORTED, format(\"Unsupported data type in EXPLAIN (TYPE IO): %s\", type.getDisplayName()));\n+\n+            // Are there additional types that could be partition columns in Aria that we now need to support?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e9bc56482774f7db6c524ddc09ed9559c8a51dc"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDc3ODY4OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo1MzowM1rOGFX8pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo1MzowM1rOGFX8pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI4ODQyMA==", "bodyText": "Explain (Type IO)", "url": "https://github.com/prestodb/presto/pull/14331#discussion_r408288420", "createdAt": "2020-04-14T16:53:03Z", "author": {"login": "bhhari"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -713,6 +713,17 @@ public ColumnMetadata getColumnMetadata(ConnectorSession session, ConnectorTable\n         return ((HiveColumnHandle) columnHandle).getColumnMetadata(typeManager);\n     }\n \n+    /**\n+     * Returns a TupleDomain of constraints that is suitable for ExplainIO", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e9bc56482774f7db6c524ddc09ed9559c8a51dc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDc3OTg3OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo1MzoyMVrOGFX9aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo1MzoyMVrOGFX9aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI4ODYxNw==", "bodyText": "IO planning instead of OI", "url": "https://github.com/prestodb/presto/pull/14331#discussion_r408288617", "createdAt": "2020-04-14T16:53:21Z", "author": {"login": "bhhari"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -713,6 +713,17 @@ public ColumnMetadata getColumnMetadata(ConnectorSession session, ConnectorTable\n         return ((HiveColumnHandle) columnHandle).getColumnMetadata(typeManager);\n     }\n \n+    /**\n+     * Returns a TupleDomain of constraints that is suitable for ExplainIO\n+     *\n+     * Only Hive partition columns that are used in OI planning.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e9bc56482774f7db6c524ddc09ed9559c8a51dc"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDc4NzU0OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/IOPlanPrinter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo1NTowOFrOGFYCPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo1NTowOFrOGFYCPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI4OTg1NQ==", "bodyText": "We need to keep the throw exception as we are not changing the existing behavior", "url": "https://github.com/prestodb/presto/pull/14331#discussion_r408289855", "createdAt": "2020-04-14T16:55:08Z", "author": {"login": "bhhari"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/IOPlanPrinter.java", "diffHunk": "@@ -546,7 +546,12 @@ private String getVarcharValue(Type type, Object value)\n             if (type instanceof BooleanType) {\n                 return ((Boolean) value).toString();\n             }\n-            throw new PrestoException(NOT_SUPPORTED, format(\"Unsupported data type in EXPLAIN (TYPE IO): %s\", type.getDisplayName()));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e9bc56482774f7db6c524ddc09ed9559c8a51dc"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTAxMTc2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/IOPlanPrinter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzo1Mjo1M1rOGFaPdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMDo1MjoyN1rOGFmAXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMyNjAwNg==", "bodyText": "what's the purpose of this filter?", "url": "https://github.com/prestodb/presto/pull/14331#discussion_r408326006", "createdAt": "2020-04-14T17:52:53Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/IOPlanPrinter.java", "diffHunk": "@@ -517,6 +519,7 @@ private FormattedDomain parseDomain(Domain domain)\n                     discreteValues -> formattedRanges.addAll(\n                             discreteValues.getValues().stream()\n                                     .map(value -> getVarcharValue(type, value))\n+                                    .filter(Objects::nonNull)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88260d688f6e82b0e2dfd2e48c02177142691a00"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUxODc0OQ==", "bodyText": "ohh - Thank you.  @bhhari  requested that .getVarcharValue() should throw as it previously did so this filter is no longer necessary.  I had .getVarcharValue() returning null for unknown types and then dropping those here to provide some type of best effort Explain IO.  I can remove the filter.", "url": "https://github.com/prestodb/presto/pull/14331#discussion_r408518749", "createdAt": "2020-04-15T00:52:27Z", "author": {"login": "jbroll"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/IOPlanPrinter.java", "diffHunk": "@@ -517,6 +519,7 @@ private FormattedDomain parseDomain(Domain domain)\n                     discreteValues -> formattedRanges.addAll(\n                             discreteValues.getValues().stream()\n                                     .map(value -> getVarcharValue(type, value))\n+                                    .filter(Objects::nonNull)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMyNjAwNg=="}, "originalCommit": {"oid": "88260d688f6e82b0e2dfd2e48c02177142691a00"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTAxMjExOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/IOPlanPrinter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzo1Mjo1OVrOGFaPtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzo1Mjo1OVrOGFaPtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMyNjA3MQ==", "bodyText": "wrong indentation", "url": "https://github.com/prestodb/presto/pull/14331#discussion_r408326071", "createdAt": "2020-04-14T17:52:59Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/IOPlanPrinter.java", "diffHunk": "@@ -497,7 +499,7 @@ public Void visitTableFinish(TableFinishNode node, IOPlanBuilder context)\n             for (Map.Entry<ColumnHandle, Domain> entry : constraint.getDomains().get().entrySet()) {\n                 ColumnMetadata columnMetadata = metadata.getColumnMetadata(session, tableHandle, entry.getKey());\n                 columnConstraints.add(new ColumnConstraint(\n-                        columnMetadata.getName(),\n+                                columnMetadata.getName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88260d688f6e82b0e2dfd2e48c02177142691a00"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2735, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}