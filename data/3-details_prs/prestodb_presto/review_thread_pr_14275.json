{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxOTc2NDQ2", "number": 14275, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMjoxNToxNFrODtTsYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoxMDo0MFrODtZ0wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODM1MTY5OnYy", "diffSide": "RIGHT", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotClusterInfoFetcher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMjoxNToxNFrOF-qMtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNToyNDoyMVrOF-xOng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0NzQxMw==", "bodyText": "either put all parameters in one line, or one in each line", "url": "https://github.com/prestodb/presto/pull/14275#discussion_r401247413", "createdAt": "2020-03-31T22:15:14Z", "author": {"login": "zhenxiao"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotClusterInfoFetcher.java", "diffHunk": "@@ -359,10 +395,8 @@ public RoutingTables(@JsonProperty(\"routingTableSnapshot\") List<RoutingTableSnap\n             else {\n                 List<Map<String, List<String>>> routingTableEntriesList = snapshot.getRoutingTableEntries();\n                 if (routingTableEntriesList.isEmpty()) {\n-                    throw new PinotException(\n-                            PINOT_UNEXPECTED_RESPONSE,\n-                            Optional.empty(),\n-                            String.format(\"Empty routingTableEntries for %s. RoutingTable: %s\", tableName, responseBody));\n+                    throw new PinotException(PINOT_UNEXPECTED_RESPONSE, Optional.empty(),\n+                        String.format(\"Empty routingTableEntries for %s. RoutingTable: %s\", tableName, responseBody));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5d62277a86272edb9b29db82a89f5ce82460950"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM2MjU5MA==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/14275#discussion_r401362590", "createdAt": "2020-04-01T05:24:21Z", "author": {"login": "xiangfu0"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotClusterInfoFetcher.java", "diffHunk": "@@ -359,10 +395,8 @@ public RoutingTables(@JsonProperty(\"routingTableSnapshot\") List<RoutingTableSnap\n             else {\n                 List<Map<String, List<String>>> routingTableEntriesList = snapshot.getRoutingTableEntries();\n                 if (routingTableEntriesList.isEmpty()) {\n-                    throw new PinotException(\n-                            PINOT_UNEXPECTED_RESPONSE,\n-                            Optional.empty(),\n-                            String.format(\"Empty routingTableEntries for %s. RoutingTable: %s\", tableName, responseBody));\n+                    throw new PinotException(PINOT_UNEXPECTED_RESPONSE, Optional.empty(),\n+                        String.format(\"Empty routingTableEntries for %s. RoutingTable: %s\", tableName, responseBody));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0NzQxMw=="}, "originalCommit": {"oid": "b5d62277a86272edb9b29db82a89f5ce82460950"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODM1NTU3OnYy", "diffSide": "RIGHT", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotClusterInfoFetcher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMjoxNzowM1rOF-qPTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNToyNDowMFrOF-xOSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODA3OQ==", "bodyText": "make \"404\" a constant?\ncheck and guard no array index out of bound exception when accessing [3]? could you please comment error message format", "url": "https://github.com/prestodb/presto/pull/14275#discussion_r401248079", "createdAt": "2020-03-31T22:17:03Z", "author": {"login": "zhenxiao"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotClusterInfoFetcher.java", "diffHunk": "@@ -426,7 +460,21 @@ public TimeBoundary(\n \n     public TimeBoundary getTimeBoundaryForTable(String table)\n     {\n-        String responseBody = sendHttpGetToBroker(table, String.format(TIME_BOUNDARY_API_TEMPLATE, table));\n-        return timeBoundaryJsonCodec.fromJson(responseBody);\n+        try {\n+            String responseBody = sendHttpGetToBroker(table, String.format(TIME_BOUNDARY_API_TEMPLATE, table));\n+            return timeBoundaryJsonCodec.fromJson(responseBody);\n+        }\n+        catch (Exception e) {\n+            if ((e instanceof PinotException)) {\n+                // New Pinot broker will set response code 404 if time boundary is not set.\n+                // This is backward incompatible with old version, as it returns an empty json object.\n+                // In order to gracefully handle this, below check will extract response code and return empty json\n+                // if not found time boundary.\n+                if (e.getMessage().split(\" \")[3].equalsIgnoreCase(\"404\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5d62277a86272edb9b29db82a89f5ce82460950"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM2MjUwNg==", "bodyText": "Done", "url": "https://github.com/prestodb/presto/pull/14275#discussion_r401362506", "createdAt": "2020-04-01T05:24:00Z", "author": {"login": "xiangfu0"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotClusterInfoFetcher.java", "diffHunk": "@@ -426,7 +460,21 @@ public TimeBoundary(\n \n     public TimeBoundary getTimeBoundaryForTable(String table)\n     {\n-        String responseBody = sendHttpGetToBroker(table, String.format(TIME_BOUNDARY_API_TEMPLATE, table));\n-        return timeBoundaryJsonCodec.fromJson(responseBody);\n+        try {\n+            String responseBody = sendHttpGetToBroker(table, String.format(TIME_BOUNDARY_API_TEMPLATE, table));\n+            return timeBoundaryJsonCodec.fromJson(responseBody);\n+        }\n+        catch (Exception e) {\n+            if ((e instanceof PinotException)) {\n+                // New Pinot broker will set response code 404 if time boundary is not set.\n+                // This is backward incompatible with old version, as it returns an empty json object.\n+                // In order to gracefully handle this, below check will extract response code and return empty json\n+                // if not found time boundary.\n+                if (e.getMessage().split(\" \")[3].equalsIgnoreCase(\"404\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0ODA3OQ=="}, "originalCommit": {"oid": "b5d62277a86272edb9b29db82a89f5ce82460950"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTM1NjE4OnYy", "diffSide": "RIGHT", "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotClusterInfoFetcher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoxMDo0MFrOF-zfeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoxNjo1OVrOF-zq5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM5OTY3Mw==", "bodyText": "s/errMsgSplits/errorMessageSplits/g\nminor thing, Presto usually not use abbreviation in variable name", "url": "https://github.com/prestodb/presto/pull/14275#discussion_r401399673", "createdAt": "2020-04-01T07:10:40Z", "author": {"login": "zhenxiao"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotClusterInfoFetcher.java", "diffHunk": "@@ -426,7 +463,26 @@ public TimeBoundary(\n \n     public TimeBoundary getTimeBoundaryForTable(String table)\n     {\n-        String responseBody = sendHttpGetToBroker(table, String.format(TIME_BOUNDARY_API_TEMPLATE, table));\n-        return timeBoundaryJsonCodec.fromJson(responseBody);\n+        try {\n+            String responseBody = sendHttpGetToBroker(table, String.format(TIME_BOUNDARY_API_TEMPLATE, table));\n+            return timeBoundaryJsonCodec.fromJson(responseBody);\n+        }\n+        catch (Exception e) {\n+            if ((e instanceof PinotException)) {\n+                /** New Pinot broker will set response code 404 if time boundary is not set.\n+                 * This is backward incompatible with old version, as it returns an empty json object.\n+                 * In order to gracefully handle this, below check will extract response code and return empty json\n+                 * if not found time boundary.\n+                 *\n+                 * Sample error message:\n+                 *     Unexpected response status: 404 for request  to url http://127.0.0.1:8000/debug/timeBoundary/baseballStats, with headers ...\n+                 */\n+                String[] errMsgSplits = e.getMessage().split(\" \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a3eb74b94aae83e9be878c7dc629974bb8dfbd0"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMjU5Ng==", "bodyText": "Sure! Still getting used to Presto coding style :)", "url": "https://github.com/prestodb/presto/pull/14275#discussion_r401402596", "createdAt": "2020-04-01T07:16:59Z", "author": {"login": "xiangfu0"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotClusterInfoFetcher.java", "diffHunk": "@@ -426,7 +463,26 @@ public TimeBoundary(\n \n     public TimeBoundary getTimeBoundaryForTable(String table)\n     {\n-        String responseBody = sendHttpGetToBroker(table, String.format(TIME_BOUNDARY_API_TEMPLATE, table));\n-        return timeBoundaryJsonCodec.fromJson(responseBody);\n+        try {\n+            String responseBody = sendHttpGetToBroker(table, String.format(TIME_BOUNDARY_API_TEMPLATE, table));\n+            return timeBoundaryJsonCodec.fromJson(responseBody);\n+        }\n+        catch (Exception e) {\n+            if ((e instanceof PinotException)) {\n+                /** New Pinot broker will set response code 404 if time boundary is not set.\n+                 * This is backward incompatible with old version, as it returns an empty json object.\n+                 * In order to gracefully handle this, below check will extract response code and return empty json\n+                 * if not found time boundary.\n+                 *\n+                 * Sample error message:\n+                 *     Unexpected response status: 404 for request  to url http://127.0.0.1:8000/debug/timeBoundary/baseballStats, with headers ...\n+                 */\n+                String[] errMsgSplits = e.getMessage().split(\" \");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM5OTY3Mw=="}, "originalCommit": {"oid": "9a3eb74b94aae83e9be878c7dc629974bb8dfbd0"}, "originalPosition": 102}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2924, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}