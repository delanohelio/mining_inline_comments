{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MDIzMjU5", "number": 13997, "title": "Add release notes for 0.231", "bodyText": "Missing Release Notes\nAriel Weisberg\n\n #13155 Cherry-pick documentation for cost, statistics, CBO (Merged by: Rebecca Schlussel)\n\nKe Wang\n\n #13849 Raptor background jobs (Merged by: Jiexi Lin)\n\nRohit Jain\n\n #13905 Add max buffer size to Raptor session properties (Merged by: James Sun)\n\nSaksham Sachdev\n\n #13815 Revert \"Consuming max buffer size from the session properties \" (Merged by: Shixuan Fan)\n\nptkool\n\n #13668 Fix IS DISTINCT FROM for decimals with precision > 18 (Merged by: Maria Basmanova)\n #10568 Add IGNORE NULLS clause to various Window functions (Merged by: Rongrong Zhong)\n\nExtracted Release Notes\n\n#11262 (Author: Jiexi Lin): Merge partition preference when adding exchange nodes\n\nAdd new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is LEGACY and can be overwritten to TOP_DOWN or BOTTOM_UP.\n\n\n#13604 (Author: James A. Gill): Use JTS instead of ESRI for geometries, Parts 1 and 2\n\nUse JTS instead of Esri for many geometrical operations. + Polygon WKTs must have closed loops.  Previously Esri would close the loops for you. + Certain other invalid geometries will fail to be created from WKTs, such as LINESTRING(0 0, 0 0, 0 0). + Returned WKTs may have a different point order. + Fixes incorrect calculation of extreme points in certain cases.\n\n\n#13729 (Author: Anoop Johnson): Implement Parallel Partition Pruning for Glue Hive Metastore\n\nAdd support for parallel partition fetching for the Glue metastore.\n\n\n#13756 (Author: Ke Wang): Raptor read and write with delta delete functionality\n\nAdd the ability to read and write with delta deletes.\n\n\n#13758 (Author: Leiqing Cai): Verifier: Improve determinism analysis and checksum query recording\n\nFix an issue where checksum query text and ID are not recorded if the checksum query fails.\nAdd new columns control_session_properties and test_session_properties to verifier_queries, and remove column session_properties_json. The value of the removed column can be copied to the two new columns for the schema change.\nAdd details of determinism analysis runs to the output.\nAdd configuration property max-determinism-analysis-runs to control maximum number of determinism analysis runs in case of column mismatch.\nAdd configuration property run-teardown-for-determinism-analysis to allow disabling teardown for determinism analysis runs.\n\n\n#13796 (Author: Rongrong Zhong): Make SQL function work for input parameters with lambda\n\nFix SQL function compilation error when input parameters contain lambda.\n\n\n#13820 (Author: Ariel Weisberg): Sort OOM killer log output\n\nOOM killer log output sorted to put memory heavy nodes and queries first.\n\n\n#13824 (Author: James A. Gill): Use JTS for ST_Buffer\n\nUse more efficient implementation for ST_Buffer.  This produces fewer buffer points on rounded corners, which will produce very similar but different results.  JTS also better handles buffering with small (<1e-9) distances.\n\n\n#13842 (Author: Leiqing Cai): Fix function namespace manager instantiation failure\n\nFix an issue where server fails to start when two function namespace managers of the same type are specified.\n\n\n#13853 (Author: Leiqing Cai): Skip verification when checksum query fails to compile\n\nImprove Verifier to skip verification when checksum query fails to compile.\n\n\n#13857 (Author: Ariel Weisberg): Fix schema mismatch w/Parquet INT64 & Timestamp\n\nFix schema mismatch w/Parquet INT64 & Timestamp.\n\n\n#13858 (Author: Anoop Johnson): Get PrestoS3FileSystem to work with the AWS Default Credentials Provider\n\nGet PrestoS3FileSystem to work with the AWS Default Credentials Provider.\n\n\n#13871 (Author: James A. Gill): Add approx_percentile forms with accuracy\n\nAdd forms of approx_percentile accepting an accuracy parameter.\n\n\n#13873 (Author: James Petty): Fix raw input stats for ScanFilterAndProject\n\nFix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n\n\n#13874 (Author: Wenlei Xie): Optimize array_join by supporting PROVIDED_BLOCKBUILDER convention\n\nOptimizer performance for array_join.\n\n\n#13878 (Author: Yi He): Add query integrity check in AccessControlManager\n\nAdd API to check if the query is unexpectedly modified using the credentials passed in the identity.\n\n\n#13879 (Author: Islam Ismailov): Keep sum stat for string when min/max stat is too long in ORC writer\n\nOutput (sum) string stat even if min/max values are too long. This is needed for the read-path to be able to better estimate the size of row.\n\n\n#13898 (Author: Ajay George): Add support for get partition names by filter\n\nAdd support for get partition names by filter.\n\n\n#13901 (Author: Rebecca Schlussel): Fix invalid plan for repeated lambdas in order by\n\nFix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n\n\n#13904 (Author: Rohit Jain): Add caching file system to hive connector\n\nAllow reading data from HDFS while caching the fetched data on local disks. Turn on the feature by specifying the cache directory config cache.base-directory.\n\n\n#13916 (Author: Yi Shen): Add sum of cardinality for array column verifier results\n\nAdd checks for the cardinalities sum when validating an array column.\n\n\n#13922 (Author: James A. Gill): Improve error handling for geometry deserialization edge cases\n\nImprove error handling for geometry deserialization edge cases.\n\n\n\nAll Commits\n\n9008f5a Extract Verifier intergation test into abstract test (Leiqing Cai)\n9a9ed94 Check retryable errors are all recoginzed (Leiqing Cai)\nca6a2d3 Allow more flexible construction of PrestoExceptionClassifier (Leiqing Cai)\na5bb640 Add support for get partition names by filter (Ajay George)\nd22cd7d Remove totalPartitions from TaskUpdateRequest (Andrii Rosa)\n2b7926f Add approx_percentile forms with accuracy (James A. Gill)\n262b74f Refactor approx_percentile functions (James A. Gill)\nfbb9e98 Capture geometry deserialization failures (James A. Gill)\n910374b Use helper method jtsGeometryFromWkt (James A. Gill)\n82c9ea0 Publish tarball for Verifier (Leiqing Cai)\n628afed Fix corrupted verifier executable jar (Leiqing Cai)\nfd59547 Fix invalid plan for repeated lambdas in order by (Rebecca Schlussel)\nf948092 Move OptimizeMixedDistinctAggregations below Logical Optimization (Saksham Sachdev)\n3f8d9da Inject cache manager for Raptor HdfsModule with provider (James Sun)\n2762513 Add caching file system to hive connector (Rohit Jain)\n5e57428 Add high level CBO documentation (Ariel Weisberg)\n7370838 Add documentation for cost and statistics (Lukasz Osipiuk)\nb219152 Increase visibility of the PrestoSystemRequirements (Andrii Rosa)\n48fe432 Introduce RemoteSourceFactory abstraction (Andrii Rosa)\n8a11650 Expose connector property for TPCH partitioning (Andrii Rosa)\n0f14563 Make require Hadoop native configurable (Andrii Rosa)\n072f645 Refactor TableScanOperator stats collection (James Petty)\n0191168 Fix raw input stats for ScanFilterAndProject (James Petty)\n176e8f8 Add checks for the cardinalities sum when validating an array column (Yi Shen)\nad99885 Repurpose OrderableArrayColumnValidator to support all array types (Yi Shen)\n659c3ee Optimize ByteSelectiveStreamReader for no filter with nulls (Ying Su)\nbdea351 Allow hive outstanding splits size limit larger than 2GB (James Petty)\n58247b0 Skip logging of GCStatusMonitor state if there is no activity (Ajay George)\n3a4f2e3 Optimize boolean reader when reading contiguous rows with no nulls and no filter (Eugene Kalenkovich)\n0185288 Clean up arrays in ORC dictionary after close (James Sun)\nb2a5e70 Make BenchmarkSelectiveStreamReaders load LazyBlock (Eugene Kalenkovich)\n9016a06 This patch updates the description for redis.key-prefix-schema-table to (Joseph Gmitter)\n1a3d5ff Fix IS DISTINCT FROM for long decimals (ptkool)\n49ea39b Add session property to disable adaptive filter reordering (Masha Basmanova)\neb207f8 Cache results of TupleDomainFilterUtils::toFilter (Masha Basmanova)\n7360bce Add max buffer size to Raptor session properties (Rohit Jain)\n84d9f0a Eliminate duplicate table name to avoid conflict in TestRaptorIntegrationSmokeTest (Ke Wang)\n241a3f5 Keep sum stat for string when min/max stat is too long in ORC writer (Islam Ismailov)\n25e1d79 Add query integrity check in AccessControlManager (Yi He)\nc8fc21e Integrate PrestoS3FileSystem with AWS Default Credentials Provider (Anoop Johnson)\nf4f8882 Cache optimized RowExpression predicate (Bhavani Hari)\n5177bea Fix requiredField logic in StructSelectiveStreamReader (Bhavani Hari)\n5f781d3 Add delta in reassign process (Ke Wang)\na60985c Add priority to Compaction process (Ke Wang)\n618b0af Enable delta compaction and organization (Ke Wang)\n145a652 Handle failed queries and execute remaining (Nikhil Collooru)\n522c912 Create benchmark runner entry point (Nikhil Collooru)\n0945361 Add benchmark runner logic (Nikhil Collooru)\nd58d687 Export results using event clients (Nikhil Collooru)\n96d1a04 Support execution of concurrent phases (Nikhil Collooru)\neacf134 Provide retry utilities for benchmark runner (Nikhil Collooru)\n2c4b93b Support querying Presto in benchmark runner (Nikhil Collooru)\nfdb7611 Optimize array_join by supporting PROVIDED_BLOCKBUILDER convention (Wenlei Xie)\nce68813 Move ExtractSpatialJoins to after LogicalOptimization (Saksham Sachdev)\n82e90bf Control merging partitioning in aggregation node via session property (Jiexi Lin)\n43e8c02 Force repartition when aggregation node has mixed grouping sets (Jiexi Lin)\n8abba9e Use JTS for ST_Buffer (James A. Gill)\n584a92f Add Benchmarks for ST_Buffer (James A. Gill)\n7db5fbf Add Geometry construction methods to GeometryBenchmarkUtils (James A. Gill)\n7a38da8 Fix double and float comparisons for NaNs (Bhavani Hari)\n7841028 Refactor OrcPageSource (Ke Wang)\nc533c6f Export statistics of delta delete (Ke Wang)\ne2af436 Commit protocol for rewrite delete, delta delete (Ke Wang)\n2a97a86 Add delta delete functionality on worker (Ke Wang)\n3749dad Enhance RaptorSplit and enable delta read (Ke Wang)\ne01dda2 Increase timeout in TestBackupManager#testCorruption (Leiqing Cai)\n58b3767 Remove unused variable from BigintValuesUsingHashTable (Masha Basmanova)\nc7d8f55 Use bitmask for IN filter when range of values is small (Masha Basmanova)\n49a9cd9 Rename BigintValues to BigintValuesUsingHashTable (Masha Basmanova)\nbdd91af Optimize and refactor array_distinct, array_filter and array_sort (Sreeni Viswanadha)\na123e5c Enable subfield pruning to pass through arbitrary() function (Gautam Parai)\n62c4524 Modify table definition for new testcases (Gautam Parai)\ncb4ffb3 Disable TestDistributedSpilledQueries#testLimitWithJoin (Leiqing Cai)\n5545874 Skip verification when checksum query fail to compile (Leiqing Cai)\nbb17af3 Fix schema mismatch w/Parquet INT64 & Timestamp (Ariel Weisberg)\n53bb79f Fix SQL formatting for CREATE FUNCTION (Leiqing Cai)\nab80d8d Fix function namespace manager instantiation failure (Leiqing Cai)\nc270e80 Sort OOM killer log output (Ariel Weisberg)\n762b183 Fix selective stream readers (Masha Basmanova)\n469637d Set boolean value to 0 if the position is null (Andrii Rosa)\n8c2dac4 Check aggregation mask values for null (Andrii Rosa)\n378e063 Log queries and tasks memory reservation on full GC (Kelvin Fann)\n77eb6e0 Create zero row files without overwrite flag (Andrii Rosa)\nefb0c6b Rename PrestoResourceClient to NodeResourceClient (Nikhil Collooru)\n692eb2d Fix deserailization error in verifier (Nikhil Collooru)\n95eb8a4 Remove Unused Argument in ParquetPageSource (James Petty)\n85fa3e7 Remove Redundant Parquet Column Index Lookups (James Petty)\nb6aa6e9 Populate basic query info for skipped events in Verifier (Leiqing Cai)\n95a6f6d Optimize zero row files creation for bucketed tables (Andrii Rosa)\n0ade474 Optimize loop over filter functions in applyFilterFunctions (Masha Basmanova)\ne91595d Reorder filters at runtime (Masha Basmanova)\n789364e Track filter function performance (Masha Basmanova)\n48e6220 Add toString method to TIMESTAMP reader (Masha Basmanova)\nac93bd6 Evaluate filter function as soon as all inputs have been read (Masha Basmanova)\n5589d3d Read columns of primitive types first (Masha Basmanova)\n3938c79 Use a constant for empty page (Masha Basmanova)\nb526246 Fix BooleanInputStream#getSetBits (Masha Basmanova)\n98b8c8d Minor refactor to TableFinishOperator (Wenlei Xie)\n46ae108 Rename GeometrySerde to EsriGeometrySerde (James A. Gill)\nab32977 Convert GeoFunctions to JTS: Part 2 (James A. Gill)\na5eec6c Convert WKT functions to JTS (James A. Gill)\nf66cb96 Upgrade JTS to 1.16.1 (James Gill)\n951eb8d Reduce Memory used by Finished AsyncQueue Instances (James Petty)\n0f7061f Enable bucket pruning for IN predicates (Gautam Parai)\n40d35ee Display bucket pruning info in hive table layout (Gautam Parai)\ne94f2c1 Revert \"Consuming max buffer size from the session properties instead of configs in the Raptor page sink provider.\" (Saksham)\n1d2be6c Consuming max buffer size from the session properties instead of configs in the Raptor page sink provider. (Rohit Jain)\nb978025 Implement Parallel Partition Pruning for Glue Hive Metastore (Anoop Johnson)\n6436aa6 Fail creation of table with unsupported bucket count (Vic Zhang)\nf582c6f Add a method to compare SqlInvokedFunction (Leiqing Cai)\n22f70d4 Fix pushdown for filters on multiple subfields of a struct (Masha Basmanova)\n1d32324 Make SQL function work for input parameters with lambda (Rongrong Zhong)\n91f3ce7 Make TestUpgradeMetadata single threaded (Leiqing Cai)\nd838c9b Add an option to disable teardown for determinism analysis runs (Leiqing Cai)\n2d5ded9 Fix variable name in VerifierConfig (Leiqing Cai)\n5de945e Make determinism analysis run count configurable (Leiqing Cai)\nbba5aa2 Export determinism analysis details (Leiqing Cai)\n7cedd37 Export checksum query and query id even if the query fails (Leiqing Cai)\n2d3a241 Make tableName required in QueryBundle (Leiqing Cai)\ned547be Move LimitQueryDeterminismAnalyzer.Analysis to top level (Leiqing Cai)\ne91519a Use different columns for control and test session properties (Leiqing Cai)\nf074d63 Move verifier_queries table creation SQL to VerifierDao (Leiqing Cai)\nbc565eb Fix flaky test TestRetryDriver (Leiqing Cai)\n70ab7ac Check column exist before alter table for raptor delta delete (Ke Wang)\n36e4e86 Update hive.rst with Alluxio docs (Haoyuan Li)\n7efeecc Add support for null treatment clause to various window functions (ptkool)\n350f1cd Create NestedField using lowercase field name (Masha Basmanova)\ne9c57c8 Make subfield name matching case insensitive (Masha Basmanova)", "createdAt": "2020-01-22T19:26:03Z", "url": "https://github.com/prestodb/presto/pull/13997", "merged": true, "mergeCommit": {"oid": "fb3f9ce699666847f08e4b071b0d5999082282db"}, "closed": true, "closedAt": "2020-02-03T21:57:18Z", "author": {"login": "caithagoras"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb87M7HABqjI5NzEzNzg5NDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcAzBv4gBqjMwMDM2OTkzODY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91011c3b5d1d0bebe7d4cad5f496a6265da40309", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/91011c3b5d1d0bebe7d4cad5f496a6265da40309", "committedDate": "2020-01-22T19:25:56Z", "message": "Add release notes for 0.231"}, "afterCommit": {"oid": "8425385d23f918bae35e0a7ad81c6ee34b08d88a", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/8425385d23f918bae35e0a7ad81c6ee34b08d88a", "committedDate": "2020-01-22T19:45:52Z", "message": "Add release notes for 0.231"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8425385d23f918bae35e0a7ad81c6ee34b08d88a", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/8425385d23f918bae35e0a7ad81c6ee34b08d88a", "committedDate": "2020-01-22T19:45:52Z", "message": "Add release notes for 0.231"}, "afterCommit": {"oid": "0564e2397a33db6346089b389a349b053bc129f1", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/0564e2397a33db6346089b389a349b053bc129f1", "committedDate": "2020-01-22T22:05:38Z", "message": "Add release notes for 0.231"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMzc5ODgx", "url": "https://github.com/prestodb/presto/pull/13997#pullrequestreview-350379881", "createdAt": "2020-01-29T19:49:44Z", "commit": {"oid": "0564e2397a33db6346089b389a349b053bc129f1"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxOTo0OTo0NFrOFjVcaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMDoxMjozN1rOFjWF8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5NTgxNg==", "bodyText": "i don't know what this means", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372595816", "createdAt": "2020-01-29T19:49:44Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve PrestoS3FileSystem to work with the AWS Default Credentials Provider.\n+* Improve optimizer performance for array_join.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0564e2397a33db6346089b389a349b053bc129f1"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5Njk4NA==", "bodyText": "I don't think \"window\" should be capitalized.  Also, has this been added to the window functions documentation.  Can we link to documentation here?", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372596984", "createdAt": "2020-01-29T19:52:02Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve PrestoS3FileSystem to work with the AWS Default Credentials Provider.\n+* Improve optimizer performance for array_join.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Use more efficient implementation for ST_Buffer. This produces fewer buffer points on rounded corners, which will produce very similar but different results.  JTS also better handles buffering with small (<1e-9) distances.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations.\n+  Polygon WKTs must have closed loops. Previously Esri would close the loops for you.\n+  Certain other invalid geometries will fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order.\n+  Fixes incorrect calculation of extreme points in certain cases.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals\n+* Add IGNORE NULLS clause to various Window functions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0564e2397a33db6346089b389a349b053bc129f1"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5ODc5MA==", "bodyText": "Improve efficiency of ST_Buffer.  The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results.  It also better handles buffering with small (<1e-9) distances.\nAlso, link to the documentation for ST_Buffer", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372598790", "createdAt": "2020-01-29T19:56:01Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve PrestoS3FileSystem to work with the AWS Default Credentials Provider.\n+* Improve optimizer performance for array_join.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Use more efficient implementation for ST_Buffer. This produces fewer buffer points on rounded corners, which will produce very similar but different results.  JTS also better handles buffering with small (<1e-9) distances.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0564e2397a33db6346089b389a349b053bc129f1"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5OTg4NQ==", "bodyText": "How about the following:\nUse JTS instead of Esri for many geometrical operations to improve efficiency\nand fix incorrect calculation of extreme points in certain cases. Polygon WKTs\nare now required to have closed loops, whereas previously Esri would close the\nloops for you. Certain other invalid geometries will also fail to be created from\nWKTs, such as `LINESTRING(0 0, 0 0, 0 0)`. Returned WKTs may have a \ndifferent point order than before.\n\nAlso, @jagill  is it true that this is also about efficiency or is it just about fixing the correctness bug?  I was going off of vague recollections.", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372599885", "createdAt": "2020-01-29T19:58:20Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve PrestoS3FileSystem to work with the AWS Default Credentials Provider.\n+* Improve optimizer performance for array_join.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Use more efficient implementation for ST_Buffer. This produces fewer buffer points on rounded corners, which will produce very similar but different results.  JTS also better handles buffering with small (<1e-9) distances.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0564e2397a33db6346089b389a349b053bc129f1"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwMTUxNA==", "bodyText": "Fix accounting of raw input bytes in ScanFilterAndProjectOperator.", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372601514", "createdAt": "2020-01-29T20:01:42Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0564e2397a33db6346089b389a349b053bc129f1"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwMTczNg==", "bodyText": "I don't know what this means", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372601736", "createdAt": "2020-01-29T20:02:11Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0564e2397a33db6346089b389a349b053bc129f1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwMjA0Nw==", "bodyText": "this should be in the Hive Changes", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372602047", "createdAt": "2020-01-29T20:02:52Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve PrestoS3FileSystem to work with the AWS Default Credentials Provider.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0564e2397a33db6346089b389a349b053bc129f1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwMzU0NQ==", "bodyText": "I don't think this change is about the optimizer performance.  I think it's just optimizing the performance of array_join.  (#13874)\nImprove performance of array_join.", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372603545", "createdAt": "2020-01-29T20:05:59Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve PrestoS3FileSystem to work with the AWS Default Credentials Provider.\n+* Improve optimizer performance for array_join.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0564e2397a33db6346089b389a349b053bc129f1"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwNTg0Nw==", "bodyText": "also, i would say something like\nAdd support for the AWS Default Credentials Provider for s3", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372605847", "createdAt": "2020-01-29T20:11:13Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve PrestoS3FileSystem to work with the AWS Default Credentials Provider.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwMjA0Nw=="}, "originalCommit": {"oid": "0564e2397a33db6346089b389a349b053bc129f1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYwNjQ0OA==", "bodyText": "write out the word \"with\".  Also, put this under Hive changes.", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372606448", "createdAt": "2020-01-29T20:12:37Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix ScanFilterAndProjectOperator raw input bytes accounting for LazyBlocks.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve PrestoS3FileSystem to work with the AWS Default Credentials Provider.\n+* Improve optimizer performance for array_join.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Use more efficient implementation for ST_Buffer. This produces fewer buffer points on rounded corners, which will produce very similar but different results.  JTS also better handles buffering with small (<1e-9) distances.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations.\n+  Polygon WKTs must have closed loops. Previously Esri would close the loops for you.\n+  Certain other invalid geometries will fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order.\n+  Fixes incorrect calculation of extreme points in certain cases.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals\n+* Add IGNORE NULLS clause to various Window functions\n+\n+Verifier Changes\n+________________\n+* Add checks for the cardinalities sum when validating an array column.\n+* Improve Verifier to skip verification when checksum query fails to compile.\n+* Fix an issue where checksum query text and ID are not recorded if the checksum query fails.\n+* Add new columns ``control_session_properties`` and `test_session_properties` to ``verifier_queries``, and remove column ``session_properties_json``. The value of the removed column can be copied to the two new columns for the schema change.\n+* Add details of determinism analysis runs to the output.\n+* Add configuration property ``max-determinism-analysis-runs`` to control maximum number of determinism analysis runs in case of column mismatch.\n+* Add configuration property ``run-teardown-for-determinism-analysis`` to allow disabling teardown for determinism analysis runs.\n+\n+SPI Changes\n+___________\n+* Add API to check if the query is unexpectedly modified using the credentials passed in the identity.\n+\n+Hive Changes\n+____________\n+* Allow reading data from HDFS while caching the fetched data on local disks. Turn on the feature by specifying the cache directory config `cache.base-directory`.\n+* Add support for parallel partition fetching for the Glue metastore.\n+\n+Parquet Changes\n+_______________\n+* Fix schema mismatch w/Parquet INT64 & Timestamp.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0564e2397a33db6346089b389a349b053bc129f1"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNDE0NTA3", "url": "https://github.com/prestodb/presto/pull/13997#pullrequestreview-350414507", "createdAt": "2020-01-29T20:49:52Z", "commit": {"oid": "0564e2397a33db6346089b389a349b053bc129f1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMDo0OTo1MlrOFjXD4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMDo0OTo1MlrOFjXD4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYyMjMwNw==", "bodyText": "According to release note guideline, fixes should go first: https://github.com/prestodb/presto/wiki/Release-Notes-Guidelines#order-of-changes", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372622307", "createdAt": "2020-01-29T20:49:52Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,53 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Improve error handling for geometry deserialization edge cases.\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0564e2397a33db6346089b389a349b053bc129f1"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNDMxMTMw", "url": "https://github.com/prestodb/presto/pull/13997#pullrequestreview-350431130", "createdAt": "2020-01-29T21:19:13Z", "commit": {"oid": "a19edf3039f0731c5f518920cef36b17f7c444b6"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMToxOToxM1rOFjX2jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTo0MDoyN1rOFjYd9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYzNTI3Ng==", "bodyText": "quote IS DISTINCT FROM? But what is the fix? What was the problem before?", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372635276", "createdAt": "2020-01-29T21:19:13Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19edf3039f0731c5f518920cef36b17f7c444b6"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYzNzYyMQ==", "bodyText": "I also don't quite understand this sentence. From #13879 it seems that this is about improving stats. @wenleix could you help reword this? Otherwise I think the commit message itself is better than this: Keep sum stat for string when min/max stat is too long in ORC writer.", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372637621", "createdAt": "2020-01-29T21:24:07Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19edf3039f0731c5f518920cef36b17f7c444b6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0MDc2NA==", "bodyText": "Can we use :ref: instead of hard coded link here?", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372640764", "createdAt": "2020-01-29T21:31:07Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19edf3039f0731c5f518920cef36b17f7c444b6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0MTM4MA==", "bodyText": "This is also a \"improve\". Maybe reword it as Improve efficiency and ... by use JTS instead of Esri for ... and group this together with other geometry related improvement?", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372641380", "createdAt": "2020-01-29T21:32:32Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19edf3039f0731c5f518920cef36b17f7c444b6"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0MTgyNA==", "bodyText": "Also this item is too long. Make it shorter and more abstract with a link to the issue if necessary.", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372641824", "createdAt": "2020-01-29T21:33:30Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0MTM4MA=="}, "originalCommit": {"oid": "a19edf3039f0731c5f518920cef36b17f7c444b6"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0MjI3NA==", "bodyText": "use :ref:", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372642274", "createdAt": "2020-01-29T21:34:20Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.\n+  Polygon WKTs are now required to have closed loops, whereas previously Esri would close the loops for you.\n+  Certain other invalid geometries will also fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order than before.\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Add IGNORE NULLS clause to various window functions. https://prestodb.io/docs/current/functions/window.html.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19edf3039f0731c5f518920cef36b17f7c444b6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0Mzc3MA==", "bodyText": "``ST_Buffer``", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372643770", "createdAt": "2020-01-29T21:37:10Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19edf3039f0731c5f518920cef36b17f7c444b6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0Mzk0NA==", "bodyText": "double ``", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372643944", "createdAt": "2020-01-29T21:37:28Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.\n+  Polygon WKTs are now required to have closed loops, whereas previously Esri would close the loops for you.\n+  Certain other invalid geometries will also fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19edf3039f0731c5f518920cef36b17f7c444b6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NDU4Ng==", "bodyText": ":func:approx_percentile?", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372644586", "createdAt": "2020-01-29T21:38:43Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.\n+  Polygon WKTs are now required to have closed loops, whereas previously Esri would close the loops for you.\n+  Certain other invalid geometries will also fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order than before.\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19edf3039f0731c5f518920cef36b17f7c444b6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NDY2Ng==", "bodyText": "double ``", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372644666", "createdAt": "2020-01-29T21:38:53Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.\n+  Polygon WKTs are now required to have closed loops, whereas previously Esri would close the loops for you.\n+  Certain other invalid geometries will also fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order than before.\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19edf3039f0731c5f518920cef36b17f7c444b6"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NDkwNg==", "bodyText": "Is the convention uppercase S3 or lowercase s3?", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372644906", "createdAt": "2020-01-29T21:39:26Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.\n+  Polygon WKTs are now required to have closed loops, whereas previously Esri would close the loops for you.\n+  Certain other invalid geometries will also fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order than before.\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Add IGNORE NULLS clause to various window functions. https://prestodb.io/docs/current/functions/window.html.\n+\n+Hive Changes\n+____________\n+* Allow reading data from HDFS while caching the fetched data on local disks. Turn on the feature by specifying the cache directory config `cache.base-directory`.\n+* Add support for parallel partition fetching for the Glue metastore.\n+* Add support for the AWS Default Credentials Provider for s3.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19edf3039f0731c5f518920cef36b17f7c444b6"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NTA0Ng==", "bodyText": "quote INT64 and timestamp?", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372645046", "createdAt": "2020-01-29T21:39:47Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.\n+  Polygon WKTs are now required to have closed loops, whereas previously Esri would close the loops for you.\n+  Certain other invalid geometries will also fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order than before.\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Add IGNORE NULLS clause to various window functions. https://prestodb.io/docs/current/functions/window.html.\n+\n+Hive Changes\n+____________\n+* Allow reading data from HDFS while caching the fetched data on local disks. Turn on the feature by specifying the cache directory config `cache.base-directory`.\n+* Add support for parallel partition fetching for the Glue metastore.\n+* Add support for the AWS Default Credentials Provider for s3.\n+\n+Parquet Changes\n+_______________\n+* Fix schema mismatch with Parquet INT64 & Timestamp.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19edf3039f0731c5f518920cef36b17f7c444b6"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0NTM2Ng==", "bodyText": "inconsistent quote", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r372645366", "createdAt": "2020-01-29T21:40:27Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix IS DISTINCT FROM for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve read-path to better estimate the size of row. Output (sum) string stat even if min/max values are too long.\n+* Improve performance of array_join.\n+* Improve efficiency of ST_Buffer. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances. https://prestodb.io/docs/current/functions/geospatial.html.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Use JTS instead of Esri for many geometrical operations to improve efficiency and fix incorrect calculation of extreme points in certain cases.\n+  Polygon WKTs are now required to have closed loops, whereas previously Esri would close the loops for you.\n+  Certain other invalid geometries will also fail to be created from WKTs, such as `LINESTRING(0 0, 0 0, 0 0)`.\n+  Returned WKTs may have a different point order than before.\n+* Add support for get partition names by filter.\n+* Add forms of approx_percentile accepting an accuracy parameter.\n+* Add new session property \"aggregation_partitioning_merging_strategy\" to control merging partitioning preference when adding repartition remote exchange around aggregation node. Default option is `LEGACY` and can be overwritten to `TOP_DOWN` or `BOTTOM_UP`.\n+* Add IGNORE NULLS clause to various window functions. https://prestodb.io/docs/current/functions/window.html.\n+\n+Hive Changes\n+____________\n+* Allow reading data from HDFS while caching the fetched data on local disks. Turn on the feature by specifying the cache directory config `cache.base-directory`.\n+* Add support for parallel partition fetching for the Glue metastore.\n+* Add support for the AWS Default Credentials Provider for s3.\n+\n+Parquet Changes\n+_______________\n+* Fix schema mismatch with Parquet INT64 & Timestamp.\n+\n+Raptor Changes\n+______________\n+* Add the ability to read and write with delta deletes.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where checksum query text and ID are not recorded if the checksum query fails.\n+* Improve Verifier to skip verification when checksum query fails to compile.\n+* Add checks for the cardinalities sum when validating an array column.\n+* Add new columns ``control_session_properties`` and `test_session_properties` to ``verifier_queries``, and remove column ``session_properties_json``. The value of the removed column can be copied to the two new columns for the schema change.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19edf3039f0731c5f518920cef36b17f7c444b6"}, "originalPosition": 45}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a19edf3039f0731c5f518920cef36b17f7c444b6", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/a19edf3039f0731c5f518920cef36b17f7c444b6", "committedDate": "2020-01-29T21:09:07Z", "message": "Add release notes for 0.231"}, "afterCommit": {"oid": "4cfac9666f513095a3e660f89528252d0995604c", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/4cfac9666f513095a3e660f89528252d0995604c", "committedDate": "2020-01-30T01:47:37Z", "message": "Add release notes for 0.231"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4cfac9666f513095a3e660f89528252d0995604c", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/4cfac9666f513095a3e660f89528252d0995604c", "committedDate": "2020-01-30T01:47:37Z", "message": "Add release notes for 0.231"}, "afterCommit": {"oid": "5717cb7e04f63330ff03b0d5fbfcfd8bdfdb3486", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/5717cb7e04f63330ff03b0d5fbfcfd8bdfdb3486", "committedDate": "2020-01-30T01:51:45Z", "message": "Add release notes for 0.231"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5717cb7e04f63330ff03b0d5fbfcfd8bdfdb3486", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/5717cb7e04f63330ff03b0d5fbfcfd8bdfdb3486", "committedDate": "2020-01-30T01:51:45Z", "message": "Add release notes for 0.231"}, "afterCommit": {"oid": "5a5992fef67c56bfdaf9342ada3ed8dc443b4a7f", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/5a5992fef67c56bfdaf9342ada3ed8dc443b4a7f", "committedDate": "2020-01-30T02:06:18Z", "message": "Add release notes for 0.231"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a5992fef67c56bfdaf9342ada3ed8dc443b4a7f", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/5a5992fef67c56bfdaf9342ada3ed8dc443b4a7f", "committedDate": "2020-01-30T02:06:18Z", "message": "Add release notes for 0.231"}, "afterCommit": {"oid": "53550da11a2399174e22273da5541ed8941447c9", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/53550da11a2399174e22273da5541ed8941447c9", "committedDate": "2020-01-30T18:17:13Z", "message": "Add release notes for 0.231"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMDQzMDY0", "url": "https://github.com/prestodb/presto/pull/13997#pullrequestreview-351043064", "createdAt": "2020-01-30T18:25:35Z", "commit": {"oid": "53550da11a2399174e22273da5541ed8941447c9"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxODoyNTozNlrOFj1NHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxODozMDozM1rOFj1W6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNjE5MQ==", "bodyText": ":func:array_join?", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373116191", "createdAt": "2020-01-30T18:25:36Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,49 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of array_join.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53550da11a2399174e22273da5541ed8941447c9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNzI2Mg==", "bodyText": "Maybe just change it to Improve efficiency of :func:ST_Buffer. ... and remove the reference at the end.", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373117262", "createdAt": "2020-01-30T18:27:43Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,49 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of array_join.\n+* Improve efficiency of ``ST_Buffer``. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances :func:`ST_Buffer`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53550da11a2399174e22273da5541ed8941447c9"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNzk3Mg==", "bodyText": "Is this an improvement or a fix? @wenleix", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373117972", "createdAt": "2020-01-30T18:29:08Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,49 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of array_join.\n+* Improve efficiency of ``ST_Buffer``. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances :func:`ST_Buffer`.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Improve efficiency by using JTS instead of Esri for many geometrical operations and fix incorrect calculation of extreme points in certain cases (:issue:`14031`).\n+* Keep sum stat for string when min/max stat is too long in ORC writer.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53550da11a2399174e22273da5541ed8941447c9"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExODY5Ng==", "bodyText": "What does this look like in text? Please check the generated text and make sure they read fluently.", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373118696", "createdAt": "2020-01-30T18:30:33Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,49 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of array_join.\n+* Improve efficiency of ``ST_Buffer``. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances :func:`ST_Buffer`.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Improve efficiency by using JTS instead of Esri for many geometrical operations and fix incorrect calculation of extreme points in certain cases (:issue:`14031`).\n+* Keep sum stat for string when min/max stat is too long in ORC writer.\n+* Add support for get partition names by filter.\n+* Add forms of :func:`approx_percentile` accepting an accuracy parameter.\n+* Add new session property ``aggregation_partitioning_merging_strategy`` to control merging partitions when adding repartition remote exchange around aggregation node. Default option is ``LEGACY`` and can be overwritten to ``TOP_DOWN`` or ``BOTTOM_UP``.\n+* Add ``IGNORE NULLS`` clause to various :doc:`/functions/window`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53550da11a2399174e22273da5541ed8941447c9"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMDU1Nzk4", "url": "https://github.com/prestodb/presto/pull/13997#pullrequestreview-351055798", "createdAt": "2020-01-30T18:45:31Z", "commit": {"oid": "53550da11a2399174e22273da5541ed8941447c9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxODo0NTozMVrOFj10Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxODo0NTozMVrOFj10Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEyNjE3NA==", "bodyText": "This isn't a user focused description @ajaygeorge  @arhimondr is this specific to the Hive connector? Is there an SPI change that goes with this?\nWould something like\nAdd method getPartitionNamesByFilter` to HiveMetastore SPI to get partitions based on a range predicate.\nAlso, if it's specific to the HiveMetastore, it belongs under \"Hive Changes\"", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373126174", "createdAt": "2020-01-30T18:45:31Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,49 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of array_join.\n+* Improve efficiency of ``ST_Buffer``. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances :func:`ST_Buffer`.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Improve efficiency by using JTS instead of Esri for many geometrical operations and fix incorrect calculation of extreme points in certain cases (:issue:`14031`).\n+* Keep sum stat for string when min/max stat is too long in ORC writer.\n+* Add support for get partition names by filter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53550da11a2399174e22273da5541ed8941447c9"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "53550da11a2399174e22273da5541ed8941447c9", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/53550da11a2399174e22273da5541ed8941447c9", "committedDate": "2020-01-30T18:17:13Z", "message": "Add release notes for 0.231"}, "afterCommit": {"oid": "feee79a900eaad2d9d072ab97fd55c861377a78e", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/feee79a900eaad2d9d072ab97fd55c861377a78e", "committedDate": "2020-01-30T23:01:31Z", "message": "Add release notes for 0.231"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "feee79a900eaad2d9d072ab97fd55c861377a78e", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/feee79a900eaad2d9d072ab97fd55c861377a78e", "committedDate": "2020-01-30T23:01:31Z", "message": "Add release notes for 0.231"}, "afterCommit": {"oid": "8d35015ca66f632d4f3424152d33cf27a13ef6dd", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/8d35015ca66f632d4f3424152d33cf27a13ef6dd", "committedDate": "2020-01-31T00:09:05Z", "message": "Add release notes for 0.231"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d35015ca66f632d4f3424152d33cf27a13ef6dd", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/8d35015ca66f632d4f3424152d33cf27a13ef6dd", "committedDate": "2020-01-31T00:09:05Z", "message": "Add release notes for 0.231"}, "afterCommit": {"oid": "c73df8ed7669cc635676c6bf7be70414e92204a7", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/c73df8ed7669cc635676c6bf7be70414e92204a7", "committedDate": "2020-01-31T08:10:40Z", "message": "Add release notes for 0.231"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c73df8ed7669cc635676c6bf7be70414e92204a7", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/c73df8ed7669cc635676c6bf7be70414e92204a7", "committedDate": "2020-01-31T08:10:40Z", "message": "Add release notes for 0.231"}, "afterCommit": {"oid": "0057390d12e7bd068f12ed8c39c3908c76d28ab9", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/0057390d12e7bd068f12ed8c39c3908c76d28ab9", "committedDate": "2020-01-31T16:56:16Z", "message": "Add release notes for 0.231"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNzUyMzQy", "url": "https://github.com/prestodb/presto/pull/13997#pullrequestreview-351752342", "createdAt": "2020-01-31T20:15:37Z", "commit": {"oid": "0057390d12e7bd068f12ed8c39c3908c76d28ab9"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMDoxNTozN1rOFkWzXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMDoxNjowOVrOFkW0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2NjY1Mg==", "bodyText": "Should it be \"all string lengths\" or \"all strings lengths\"? I don't know what's the right grammar. \ud83d\ude02", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373666652", "createdAt": "2020-01-31T20:15:37Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,48 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of :func:`array_join`.\n+* Improve efficiency of :func:`ST_Buffer`. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Improve efficiency by using JTS instead of Esri for many geometrical operations and fix incorrect calculation of extreme points in certain cases (:issue:`14031`).\n+* Add forms of :func:`approx_percentile` accepting an accuracy parameter.\n+* Add a new session property ``aggregation_partitioning_merging_strategy`` to configure partition merging strategy when adding exchange around aggregation node.\n+* Add ``IGNORE NULLS`` clause to various :doc:`/functions/window`.\n+\n+Hive Changes\n+____________\n+* Improve string column stats by including the sum of all strings lengths when the individual min/max of the string is too long in ORC writer.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0057390d12e7bd068f12ed8c39c3908c76d28ab9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2Njg2Ng==", "bodyText": "Should we say \"local storage\" rather than \"local disks\"?", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373666866", "createdAt": "2020-01-31T20:16:09Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,48 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of :func:`array_join`.\n+* Improve efficiency of :func:`ST_Buffer`. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Improve efficiency by using JTS instead of Esri for many geometrical operations and fix incorrect calculation of extreme points in certain cases (:issue:`14031`).\n+* Add forms of :func:`approx_percentile` accepting an accuracy parameter.\n+* Add a new session property ``aggregation_partitioning_merging_strategy`` to configure partition merging strategy when adding exchange around aggregation node.\n+* Add ``IGNORE NULLS`` clause to various :doc:`/functions/window`.\n+\n+Hive Changes\n+____________\n+* Improve string column stats by including the sum of all strings lengths when the individual min/max of the string is too long in ORC writer.\n+* Allow reading data from HDFS while caching the fetched data on local disks. Turn on the feature by specifying the cache directory config ``cache.base-directory``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0057390d12e7bd068f12ed8c39c3908c76d28ab9"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNzU2MDYx", "url": "https://github.com/prestodb/presto/pull/13997#pullrequestreview-351756061", "createdAt": "2020-01-31T20:22:59Z", "commit": {"oid": "0057390d12e7bd068f12ed8c39c3908c76d28ab9"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMDoyMjo1OVrOFkW-Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMDoyNzoxMFrOFkXECg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2OTQ0Ng==", "bodyText": "I still don't think this is very clear -- what is a partition merging strategy? How would a user decide when to set this property or what the appropriate setting should be?\nOr if it's not really user facing, maybe it doesn't need a release note.", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373669446", "createdAt": "2020-01-31T20:22:59Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,48 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of :func:`array_join`.\n+* Improve efficiency of :func:`ST_Buffer`. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Improve efficiency by using JTS instead of Esri for many geometrical operations and fix incorrect calculation of extreme points in certain cases (:issue:`14031`).\n+* Add forms of :func:`approx_percentile` accepting an accuracy parameter.\n+* Add a new session property ``aggregation_partitioning_merging_strategy`` to configure partition merging strategy when adding exchange around aggregation node.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0057390d12e7bd068f12ed8c39c3908c76d28ab9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2OTc1Mw==", "bodyText": "either all strings' lengths (with an apostrophe after the s) or 'all string lengths`  as rongrong suggested.", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373669753", "createdAt": "2020-01-31T20:23:52Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,48 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of :func:`array_join`.\n+* Improve efficiency of :func:`ST_Buffer`. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Improve efficiency by using JTS instead of Esri for many geometrical operations and fix incorrect calculation of extreme points in certain cases (:issue:`14031`).\n+* Add forms of :func:`approx_percentile` accepting an accuracy parameter.\n+* Add a new session property ``aggregation_partitioning_merging_strategy`` to configure partition merging strategy when adding exchange around aggregation node.\n+* Add ``IGNORE NULLS`` clause to various :doc:`/functions/window`.\n+\n+Hive Changes\n+____________\n+* Improve string column stats by including the sum of all strings lengths when the individual min/max of the string is too long in ORC writer.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2NjY1Mg=="}, "originalCommit": {"oid": "0057390d12e7bd068f12ed8c39c3908c76d28ab9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3MDkyMg==", "bodyText": "this can go under \"Hive Changes\"", "url": "https://github.com/prestodb/presto/pull/13997#discussion_r373670922", "createdAt": "2020-01-31T20:27:10Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.231.rst", "diffHunk": "@@ -0,0 +1,48 @@\n+=============\n+Release 0.231\n+=============\n+\n+General Changes\n+_______________\n+* Fix failures caused by invalid plans for queries with repeated lambda expressions in the order by clause.\n+* Fix accounting of raw input bytes in ScanFilterAndProjectOperator.\n+* Fix an issue where server fails to start when two function namespace managers of the same type are specified.\n+* Fix SQL function compilation error when input parameters contain lambda.\n+* Fix ``IS DISTINCT FROM`` for long decimals.\n+* Improve error handling for geometry deserialization edge cases.\n+* Improve performance of :func:`array_join`.\n+* Improve efficiency of :func:`ST_Buffer`. The new implementation produces fewer buffer points on rounded corners, which will produce very similar but different results. It also better handles buffering with small (<1e-9) distances.\n+* Improve OOM killer log output to put memory heavy nodes and queries first.\n+* Improve efficiency by using JTS instead of Esri for many geometrical operations and fix incorrect calculation of extreme points in certain cases (:issue:`14031`).\n+* Add forms of :func:`approx_percentile` accepting an accuracy parameter.\n+* Add a new session property ``aggregation_partitioning_merging_strategy`` to configure partition merging strategy when adding exchange around aggregation node.\n+* Add ``IGNORE NULLS`` clause to various :doc:`/functions/window`.\n+\n+Hive Changes\n+____________\n+* Improve string column stats by including the sum of all strings lengths when the individual min/max of the string is too long in ORC writer.\n+* Allow reading data from HDFS while caching the fetched data on local disks. Turn on the feature by specifying the cache directory config ``cache.base-directory``.\n+* Add support for parallel partition fetching for the Glue metastore.\n+* Add support for the AWS Default Credentials Provider for S3.\n+\n+Parquet Changes\n+_______________\n+* Fix schema mismatch with Parquet ``INT64`` & ``Timestamp``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0057390d12e7bd068f12ed8c39c3908c76d28ab9"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0057390d12e7bd068f12ed8c39c3908c76d28ab9", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/0057390d12e7bd068f12ed8c39c3908c76d28ab9", "committedDate": "2020-01-31T16:56:16Z", "message": "Add release notes for 0.231"}, "afterCommit": {"oid": "ed066502130bfc07e0b1254c6f7369a61225a105", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/ed066502130bfc07e0b1254c6f7369a61225a105", "committedDate": "2020-02-03T19:18:24Z", "message": "Add release notes for 0.231"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de9385ab2831474c8c5cdbc039ddd94f5c0139de", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/de9385ab2831474c8c5cdbc039ddd94f5c0139de", "committedDate": "2020-02-03T20:32:48Z", "message": "Add release notes for 0.231"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed066502130bfc07e0b1254c6f7369a61225a105", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/ed066502130bfc07e0b1254c6f7369a61225a105", "committedDate": "2020-02-03T19:18:24Z", "message": "Add release notes for 0.231"}, "afterCommit": {"oid": "de9385ab2831474c8c5cdbc039ddd94f5c0139de", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/de9385ab2831474c8c5cdbc039ddd94f5c0139de", "committedDate": "2020-02-03T20:32:48Z", "message": "Add release notes for 0.231"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2466, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}