{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NDMyNDI1", "number": 15470, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxODozMzozMVrOFBfjrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMjoxMDozM1rOFBkCmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTA5OTM1OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxODozMzozMVrOIAN1Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMToxNDo0OVrOIAPgNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzA5NzUxNA==", "bodyText": "Let's merge these two lines", "url": "https://github.com/prestodb/presto/pull/15470#discussion_r537097514", "createdAt": "2020-12-06T18:33:31Z", "author": {"login": "kewang1024"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveUtil.java", "diffHunk": "@@ -524,8 +524,8 @@ private static boolean isValidPartitionType(Type type)\n     public static NullableValue parsePartitionValue(String partitionName, String value, Type type, DateTimeZone timeZone)\n     {\n         verifyPartitionTypeSupported(partitionName, type);\n-\n-        boolean isNull = HIVE_DEFAULT_DYNAMIC_PARTITION.equals(value);\n+        byte[] bytes = value.getBytes(UTF_8);\n+        boolean isNull = HIVE_DEFAULT_DYNAMIC_PARTITION.equals(value) || isHiveNull(bytes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bce125070d85eb1150d5279ce646f31c5935627"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEyNDkxOA==", "bodyText": "fixed, thanks for reviewing the PR", "url": "https://github.com/prestodb/presto/pull/15470#discussion_r537124918", "createdAt": "2020-12-06T21:14:49Z", "author": {"login": "fgwang7w"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveUtil.java", "diffHunk": "@@ -524,8 +524,8 @@ private static boolean isValidPartitionType(Type type)\n     public static NullableValue parsePartitionValue(String partitionName, String value, Type type, DateTimeZone timeZone)\n     {\n         verifyPartitionTypeSupported(partitionName, type);\n-\n-        boolean isNull = HIVE_DEFAULT_DYNAMIC_PARTITION.equals(value);\n+        byte[] bytes = value.getBytes(UTF_8);\n+        boolean isNull = HIVE_DEFAULT_DYNAMIC_PARTITION.equals(value) || isHiveNull(bytes);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzA5NzUxNA=="}, "originalCommit": {"oid": "3bce125070d85eb1150d5279ce646f31c5935627"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTgzMzU4OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/com/facebook/presto/hive/statistics/TestMetastoreHiveStatisticsProvider.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMjoxMDoyMlrOIATITg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDowODo1NlrOIBAsQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE4NDMzNA==", "bodyText": "containsValue", "url": "https://github.com/prestodb/presto/pull/15470#discussion_r537184334", "createdAt": "2020-12-07T02:10:22Z", "author": {"login": "highker"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/statistics/TestMetastoreHiveStatisticsProvider.java", "diffHunk": "@@ -116,6 +118,14 @@ public void testGetPartitionsSample()\n         assertEquals(getPartitionsSample(ImmutableList.of(p1, p2, p3, p4, p5), 3), ImmutableList.of(p1, p5, p4));\n     }\n \n+    @Test\n+    public void testNullablePartitionValue()\n+    {\n+        HivePartition part = partition(\"p1=name/p2=\\\\N\");\n+        NullableValue verify = new NullableValue(BIGINT, null);\n+        assertTrue(part.getKeys().values().contains(verify));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee684372eb6b6479837243c210b7cb90327b7f1d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxMTc0OA==", "bodyText": "Collection of NullableValue for partition key does not implement containsValue method, but contains method works fine", "url": "https://github.com/prestodb/presto/pull/15470#discussion_r537211748", "createdAt": "2020-12-07T03:47:24Z", "author": {"login": "fgwang7w"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/statistics/TestMetastoreHiveStatisticsProvider.java", "diffHunk": "@@ -116,6 +118,14 @@ public void testGetPartitionsSample()\n         assertEquals(getPartitionsSample(ImmutableList.of(p1, p2, p3, p4, p5), 3), ImmutableList.of(p1, p5, p4));\n     }\n \n+    @Test\n+    public void testNullablePartitionValue()\n+    {\n+        HivePartition part = partition(\"p1=name/p2=\\\\N\");\n+        NullableValue verify = new NullableValue(BIGINT, null);\n+        assertTrue(part.getKeys().values().contains(verify));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE4NDMzNA=="}, "originalCommit": {"oid": "ee684372eb6b6479837243c210b7cb90327b7f1d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzczMjkzNg==", "bodyText": "What I meant is to change values().contains() to containsValue", "url": "https://github.com/prestodb/presto/pull/15470#discussion_r537732936", "createdAt": "2020-12-07T18:31:11Z", "author": {"login": "highker"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/statistics/TestMetastoreHiveStatisticsProvider.java", "diffHunk": "@@ -116,6 +118,14 @@ public void testGetPartitionsSample()\n         assertEquals(getPartitionsSample(ImmutableList.of(p1, p2, p3, p4, p5), 3), ImmutableList.of(p1, p5, p4));\n     }\n \n+    @Test\n+    public void testNullablePartitionValue()\n+    {\n+        HivePartition part = partition(\"p1=name/p2=\\\\N\");\n+        NullableValue verify = new NullableValue(BIGINT, null);\n+        assertTrue(part.getKeys().values().contains(verify));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE4NDMzNA=="}, "originalCommit": {"oid": "ee684372eb6b6479837243c210b7cb90327b7f1d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzMDgxOQ==", "bodyText": "fixed", "url": "https://github.com/prestodb/presto/pull/15470#discussion_r537930819", "createdAt": "2020-12-08T00:08:56Z", "author": {"login": "fgwang7w"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/statistics/TestMetastoreHiveStatisticsProvider.java", "diffHunk": "@@ -116,6 +118,14 @@ public void testGetPartitionsSample()\n         assertEquals(getPartitionsSample(ImmutableList.of(p1, p2, p3, p4, p5), 3), ImmutableList.of(p1, p5, p4));\n     }\n \n+    @Test\n+    public void testNullablePartitionValue()\n+    {\n+        HivePartition part = partition(\"p1=name/p2=\\\\N\");\n+        NullableValue verify = new NullableValue(BIGINT, null);\n+        assertTrue(part.getKeys().values().contains(verify));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE4NDMzNA=="}, "originalCommit": {"oid": "ee684372eb6b6479837243c210b7cb90327b7f1d"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTgzMzg2OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHiveDistributedJoinQueriesWithDynamicFiltering.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMjoxMDozM1rOIATIcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzo1MjoxNVrOIAU4aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE4NDM3MQ==", "bodyText": "break a line after this", "url": "https://github.com/prestodb/presto/pull/15470#discussion_r537184371", "createdAt": "2020-12-07T02:10:33Z", "author": {"login": "highker"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHiveDistributedJoinQueriesWithDynamicFiltering.java", "diffHunk": "@@ -110,6 +110,22 @@ public void testJoinDynamicFilteringMultiJoin()\n         assertQuery(session, query, \"SELECT 1, 1, 1\");\n     }\n \n+    @Test\n+    public void testJoinOnNullPartitioning()\n+    {\n+        assertUpdate(\"CREATE TABLE t3(c2 bigint, c1 bigint)\");\n+        assertUpdate(\"INSERT INTO t3 VALUES(null, 2)\", 1);\n+        assertUpdate(\"CREATE TABLE t4(c2 bigint, c1 bigint) with(partitioned_by=array['c1'])\");\n+        assertUpdate(\"INSERT INTO t4 VALUES(null, null), (2,2)\", 2);\n+\n+        String query = \"select * from t3, t4 where t3.c1=t4.c2\";\n+        Session session = Session.builder(getSession())\n+                .setSystemProperty(ENABLE_DYNAMIC_FILTERING, \"true\")\n+                .setSystemProperty(JOIN_DISTRIBUTION_TYPE, FeaturesConfig.JoinDistributionType.AUTOMATIC.name())\n+                .setSystemProperty(JOIN_REORDERING_STRATEGY, FeaturesConfig.JoinReorderingStrategy.AUTOMATIC.name())\n+                .build();\n+        assertQuery(session, query, \"SELECT null, 2, 2, 2\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee684372eb6b6479837243c210b7cb90327b7f1d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxMzAzNQ==", "bodyText": "got it, break a new line in between methods, thanks", "url": "https://github.com/prestodb/presto/pull/15470#discussion_r537213035", "createdAt": "2020-12-07T03:52:15Z", "author": {"login": "fgwang7w"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHiveDistributedJoinQueriesWithDynamicFiltering.java", "diffHunk": "@@ -110,6 +110,22 @@ public void testJoinDynamicFilteringMultiJoin()\n         assertQuery(session, query, \"SELECT 1, 1, 1\");\n     }\n \n+    @Test\n+    public void testJoinOnNullPartitioning()\n+    {\n+        assertUpdate(\"CREATE TABLE t3(c2 bigint, c1 bigint)\");\n+        assertUpdate(\"INSERT INTO t3 VALUES(null, 2)\", 1);\n+        assertUpdate(\"CREATE TABLE t4(c2 bigint, c1 bigint) with(partitioned_by=array['c1'])\");\n+        assertUpdate(\"INSERT INTO t4 VALUES(null, null), (2,2)\", 2);\n+\n+        String query = \"select * from t3, t4 where t3.c1=t4.c2\";\n+        Session session = Session.builder(getSession())\n+                .setSystemProperty(ENABLE_DYNAMIC_FILTERING, \"true\")\n+                .setSystemProperty(JOIN_DISTRIBUTION_TYPE, FeaturesConfig.JoinDistributionType.AUTOMATIC.name())\n+                .setSystemProperty(JOIN_REORDERING_STRATEGY, FeaturesConfig.JoinReorderingStrategy.AUTOMATIC.name())\n+                .build();\n+        assertQuery(session, query, \"SELECT null, 2, 2, 2\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE4NDM3MQ=="}, "originalCommit": {"oid": "ee684372eb6b6479837243c210b7cb90327b7f1d"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3426, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}