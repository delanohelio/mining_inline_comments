{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MjAzNDgw", "number": 15163, "title": "Fix performance regression when hive SerDe doesn't prefer Writables", "bodyText": "Introduced in #8206 GenericHiveRecordCursor was modified to avoid extra overhead when the SerDe provided a more efficient String handling implementation with Writables. However, when the SerDe does not provide such an implementation and instead already returned String instances directly, this change introduced an extra conversion from bytes to String just to be converted back to bytes.\nThis change alters the behavior of GenericHiveRecordCursor#parseString to respect the PrimitiveObjectInspector's preference for using writables.\n== RELEASE NOTES ==\nHive Changes\n* Fix a performance regression for String field handling in GenericHiveRecordCursor when the SerDe does not provide an efficient Writable implementation", "createdAt": "2020-09-11T15:41:49Z", "url": "https://github.com/prestodb/presto/pull/15163", "merged": true, "mergeCommit": {"oid": "600c15755840cd3ff4857ded1c06934b2eb7ff98"}, "closed": true, "closedAt": "2020-09-17T01:10:19Z", "author": {"login": "pettyjamesm"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJDy-kgFqTQ4ODQyOTEyNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJmRZggFqTQ5MDE3MzI3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NDI5MTI0", "url": "https://github.com/prestodb/presto/pull/15163#pullrequestreview-488429124", "createdAt": "2020-09-15T08:07:09Z", "commit": {"oid": "5c79a2a9fdea158801bebcd69a48be92b5d2e86a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODowNzowOVrOHR10ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODowNzowOVrOHR10ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ2OTY0Mg==", "bodyText": "nit: Reorder this method to after the next two parseXXX methods().", "url": "https://github.com/prestodb/presto/pull/15163#discussion_r488469642", "createdAt": "2020-09-15T08:07:09Z", "author": {"login": "yingsu00"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/GenericHiveRecordCursor.java", "diffHunk": "@@ -368,39 +369,80 @@ private void parseStringColumn(int column)\n             nulls[column] = true;\n         }\n         else {\n-            Object fieldValue = ((PrimitiveObjectInspector) fieldInspectors[column]).getPrimitiveWritableObject(fieldData);\n-            checkState(fieldValue != null, \"fieldValue should not be null\");\n-            BinaryComparable hiveValue;\n-            if (fieldValue instanceof Text) {\n-                hiveValue = (Text) fieldValue;\n-            }\n-            else if (fieldValue instanceof BytesWritable) {\n-                hiveValue = (BytesWritable) fieldValue;\n-            }\n-            else if (fieldValue instanceof HiveVarcharWritable) {\n-                hiveValue = ((HiveVarcharWritable) fieldValue).getTextValue();\n-            }\n-            else if (fieldValue instanceof HiveCharWritable) {\n-                hiveValue = ((HiveCharWritable) fieldValue).getTextValue();\n+            PrimitiveObjectInspector inspector = (PrimitiveObjectInspector) fieldInspectors[column];\n+            Slice value;\n+            if (inspector.preferWritable()) {\n+                value = parseStringFromPrimitiveWritableObjectValue(types[column], inspector.getPrimitiveWritableObject(fieldData));\n             }\n             else {\n-                throw new IllegalStateException(\"unsupported string field type: \" + fieldValue.getClass().getName());\n+                value = parseStringFromPrimitiveJavaObjectValue(types[column], inspector.getPrimitiveJavaObject(fieldData));\n             }\n+            slices[column] = value;\n+            nulls[column] = false;\n+        }\n+    }\n \n-            // create a slice view over the hive value and trim to character limits\n-            Slice value = Slices.wrappedBuffer(hiveValue.getBytes(), 0, hiveValue.getLength());\n-            Type type = types[column];\n-            if (isVarcharType(type)) {\n-                value = truncateToLength(value, type);\n-            }\n-            if (isCharType(type)) {\n-                value = truncateToLengthAndTrimSpaces(value, type);\n-            }\n+    private static Slice trimStringToCharacterLimits(Type type, Slice value)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c79a2a9fdea158801bebcd69a48be92b5d2e86a"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7042af0d8ba4651580b42eb52b3e0b250bbc0f0b", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/7042af0d8ba4651580b42eb52b3e0b250bbc0f0b", "committedDate": "2020-09-15T12:52:38Z", "message": "Fix performance regression when Hive SerDe doesn't prefer Writables\n\nIntroduced in prestodb#8206, GenericHiveRecordCursor was modified to\navoid extra overhead when the SerDe provided a more efficient String\nhandling implementation with Writables. However, when the SerDe does\nnot provide such an implementation and instead already returned String\ninstances directly, this change introduced an extra conversion from\nbytes to String just to be converted back to bytes.\n\nThis change alters the behavior of GenericHiveRecordCursor parseString\nto respect the PrimitiveObjectInspector's preference for using writables."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bad2ed603a94d6392701d847ee6ee2819e88103", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/2bad2ed603a94d6392701d847ee6ee2819e88103", "committedDate": "2020-09-15T12:52:38Z", "message": "Avoid DateTimeZone.getDefault() in GenericHiveRecordCursor hot path"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c79a2a9fdea158801bebcd69a48be92b5d2e86a", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/5c79a2a9fdea158801bebcd69a48be92b5d2e86a", "committedDate": "2020-09-11T18:15:44Z", "message": "Avoid DateTimeZone.getDefault() in GenericHiveRecordCursor hot path"}, "afterCommit": {"oid": "2bad2ed603a94d6392701d847ee6ee2819e88103", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/2bad2ed603a94d6392701d847ee6ee2819e88103", "committedDate": "2020-09-15T12:52:38Z", "message": "Avoid DateTimeZone.getDefault() in GenericHiveRecordCursor hot path"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMTczMjc2", "url": "https://github.com/prestodb/presto/pull/15163#pullrequestreview-490173276", "createdAt": "2020-09-17T00:57:57Z", "commit": {"oid": "2bad2ed603a94d6392701d847ee6ee2819e88103"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 114, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}