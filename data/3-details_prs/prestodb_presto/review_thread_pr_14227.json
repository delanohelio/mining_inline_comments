{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NzU1NDA5", "number": 14227, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNTowMzo0MlrODrEKMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNTowMzo0MlrODrEKMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDgzNTA1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/operator/PipelineContext.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNTowMzo0MlrOF7MQSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNTowMzo0MlrOF7MQSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYxMTA4MQ==", "bodyText": "nit: instead of (key, value), what about (operatorId, accumulatedSum) ?", "url": "https://github.com/prestodb/presto/pull/14227#discussion_r397611081", "createdAt": "2020-03-25T05:03:42Z", "author": {"login": "wenleix"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/PipelineContext.java", "diffHunk": "@@ -195,19 +195,7 @@ public void driverFinished(DriverContext driverContext)\n         // merge the operator stats into the operator summary\n         List<OperatorStats> operators = driverStats.getOperatorStats();\n         for (OperatorStats operator : operators) {\n-            // TODO: replace with ConcurrentMap.compute() when we migrate to java 8\n-            OperatorStats updated;\n-            OperatorStats current;\n-            do {\n-                current = operatorSummaries.get(operator.getOperatorId());\n-                if (current != null) {\n-                    updated = current.add(operator);\n-                }\n-                else {\n-                    updated = operator;\n-                }\n-            }\n-            while (!compareAndSet(operatorSummaries, operator.getOperatorId(), current, updated));\n+            operatorSummaries.compute(operator.getOperatorId(), (key, value) -> value == null ? operator : value.add(operator));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5ebd95d1ab4a47f83cbb3d393bfa1afbc99123b"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2889, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}