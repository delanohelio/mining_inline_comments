{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5ODQzMjQx", "number": 14159, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMzowNDo1MlrODi4nJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMzowNzoxN1rODi4pZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTA1NzAxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayPositionFunction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMzowNDo1MlrOFuYiCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMzowNDo1MlrOFuYiCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE4MDc0NQ==", "bodyText": "Maybe something like array_position does not support elements of complex types that contain null? In theory T can be a map or a row.", "url": "https://github.com/prestodb/presto/pull/14159#discussion_r384180745", "createdAt": "2020-02-25T23:04:52Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayPositionFunction.java", "diffHunk": "@@ -158,7 +159,9 @@ public static long arrayPosition(\n                 Object arrayValue = type.getObject(array, i);\n                 try {\n                     Boolean result = (Boolean) equalMethodHandle.invoke(arrayValue, element);\n-                    checkNotIndeterminate(result);\n+                    if (result == null) {\n+                        throw new PrestoException(NOT_SUPPORTED, \"array_position does not support element of array type that contains null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5295eeae4b05e26488302706cd850ecc7e1442"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTA2Mjc4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayPositionFunction.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMzowNzoxN1rOFuYldw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNDoxMjowMlrOFus99w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE4MTYyMw==", "bodyText": "nit: This check rather looks like an assertion. No matter what arguments are passed to this function the equals function should never return null, as the null case is explicitly checked before. For such assertions usually verify is preferred. (same for others).", "url": "https://github.com/prestodb/presto/pull/14159#discussion_r384181623", "createdAt": "2020-02-25T23:07:17Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayPositionFunction.java", "diffHunk": "@@ -131,7 +132,7 @@ public static long arrayPosition(\n                 Slice arrayValue = type.getSlice(array, i);\n                 try {\n                     Boolean result = (Boolean) equalMethodHandle.invokeExact(arrayValue, element);\n-                    checkNotIndeterminate(result);\n+                    checkArgument(result != null, \"Array element should not be nulll\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5295eeae4b05e26488302706cd850ecc7e1442"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwMDQyMQ==", "bodyText": "IntelliJ would give warning on if (result) about null pointer exception when using verify. It's slightly annoying to look at but that's fine I suppose.", "url": "https://github.com/prestodb/presto/pull/14159#discussion_r384200421", "createdAt": "2020-02-25T23:59:23Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayPositionFunction.java", "diffHunk": "@@ -131,7 +132,7 @@ public static long arrayPosition(\n                 Slice arrayValue = type.getSlice(array, i);\n                 try {\n                     Boolean result = (Boolean) equalMethodHandle.invokeExact(arrayValue, element);\n-                    checkNotIndeterminate(result);\n+                    checkArgument(result != null, \"Array element should not be nulll\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE4MTYyMw=="}, "originalCommit": {"oid": "ad5295eeae4b05e26488302706cd850ecc7e1442"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUxNTU3NQ==", "bodyText": "It is interesting why Intellij understands checkArgument but doesn't undestand verify =\\", "url": "https://github.com/prestodb/presto/pull/14159#discussion_r384515575", "createdAt": "2020-02-26T14:12:02Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayPositionFunction.java", "diffHunk": "@@ -131,7 +132,7 @@ public static long arrayPosition(\n                 Slice arrayValue = type.getSlice(array, i);\n                 try {\n                     Boolean result = (Boolean) equalMethodHandle.invokeExact(arrayValue, element);\n-                    checkNotIndeterminate(result);\n+                    checkArgument(result != null, \"Array element should not be nulll\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE4MTYyMw=="}, "originalCommit": {"oid": "ad5295eeae4b05e26488302706cd850ecc7e1442"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3104, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}