{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwNjkxMjcy", "number": 14057, "title": "Pinot bugs and making it work with the latest trunk pinot", "bodyText": "Three changes here: 1 medium and 2 tiny:\n\nThe nameToIndex used for the pinot column ordering map should not assume that the variable reference name is the same as the pinot lowercase name. It should be keyed off the keys in the selections map (in the pinot query generator context) and not the value. It was throwing an error with the query below because the output variables were named like player_initial_33, g_old_51 etc instead of just player_initial, g_old. This is because these columns are referenced twice in the query.\nThis again smells like a core bug and it is totally my bad that I screwed this up the last time.\n\nselect * from (select yearid, substr(playerid, 1, 3) as player_initial, sum(homeruns) from pinot.baseballStats.baseballStats group by 1, 2) as m INNER join (select g_old, substr(playername, 1, 3) as player_name_initial, sum(numberofgames) from pinot.baseballStats.baseballStats group by 1, 2) as w ON m.player_initial = w.player_name_initial;\n\n\n[tiny] Make this work with the new pinot trunk code which no longer likes \"Content-Type: Application/json\" for just GET requests and non body POSTS :-). As it shouldn't.\n[tiny] renamed the config prefer broker queries to ! forbid broker queries to be true to the name\n\n== RELEASE NOTES ==\n\nPinot Changes\n*  Replace config `pinot.prefer-broker-queries` with the inverse config `pinot.forbid-broker-queries`.", "createdAt": "2020-02-04T07:44:50Z", "url": "https://github.com/prestodb/presto/pull/14057", "merged": true, "mergeCommit": {"oid": "a3f9aa3566675f4b5fea33a96abc58fddbf56a21"}, "closed": true, "closedAt": "2020-02-06T21:06:51Z", "author": {"login": "agrawaldevesh"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBFpbdgBqjMwMDcxNzI4NTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBxThugFqTM1NDc3MTg2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "911fbf905e26f24b6970d480a7bb79a392a706ef", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/911fbf905e26f24b6970d480a7bb79a392a706ef", "committedDate": "2020-02-04T07:36:10Z", "message": "[Pinot] Fix bug with pinot column scan index generation"}, "afterCommit": {"oid": "47ba557ed7054679776c7113b08fe8a195851330", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/47ba557ed7054679776c7113b08fe8a195851330", "committedDate": "2020-02-04T18:13:42Z", "message": "Don't pass Content-Type header when there is no body to avoid a pinot 415"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MDc1NDg0", "url": "https://github.com/prestodb/presto/pull/14057#pullrequestreview-354075484", "createdAt": "2020-02-05T22:07:55Z", "commit": {"oid": "0a41f5a2b306507b4f06236a05cabea2c9df0c8f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMjowNzo1NlrOFmI4Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMjowNzo1NlrOFmI4Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUzNTY4Nw==", "bodyText": "nit: LinkedHashMap -> Map", "url": "https://github.com/prestodb/presto/pull/14057#discussion_r375535687", "createdAt": "2020-02-05T22:07:56Z", "author": {"login": "highker"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -338,11 +338,11 @@ else if (!groupByColumns.isEmpty()) {\n             query += \" \" + limitKeyWord + \" \" + queryLimit;\n         }\n \n-        List<PinotColumnHandle> columnHandles = ImmutableList.copyOf(getAssignments().values());\n-        return new PinotQueryGenerator.GeneratedPql(tableName, query, getIndicesMappingFromPinotSchemaToPrestoSchema(query, columnHandles), groupByColumns.size(), filter.isPresent(), isQueryShort);\n+        List<Integer> indices = getIndicesMappingFromPinotSchemaToPrestoSchema(query, getAssignments());\n+        return new PinotQueryGenerator.GeneratedPql(tableName, query, indices, groupByColumns.size(), filter.isPresent(), isQueryShort);\n     }\n \n-    private List<Integer> getIndicesMappingFromPinotSchemaToPrestoSchema(String query, List<PinotColumnHandle> handles)\n+    private List<Integer> getIndicesMappingFromPinotSchemaToPrestoSchema(String query, LinkedHashMap<VariableReferenceExpression, PinotColumnHandle> assignments)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a41f5a2b306507b4f06236a05cabea2c9df0c8f"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MDc2NDE2", "url": "https://github.com/prestodb/presto/pull/14057#pullrequestreview-354076416", "createdAt": "2020-02-05T22:09:44Z", "commit": {"oid": "fea79de0b89422c78eeba369a92e975bd17b8bee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMjowOTo0NFrOFmI7Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMjowOTo0NFrOFmI7Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUzNjQxNA==", "bodyText": "move plan.accept(new PinotQueryPlanVisitor(session) to its own line", "url": "https://github.com/prestodb/presto/pull/14057#discussion_r375536414", "createdAt": "2020-02-05T22:09:44Z", "author": {"login": "highker"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGenerator.java", "diffHunk": "@@ -130,10 +130,10 @@ public PinotQueryGeneratorContext getContext()\n     public Optional<PinotQueryGeneratorResult> generate(PlanNode plan, ConnectorSession session)\n     {\n         try {\n-            boolean preferBrokerQueries = PinotSessionProperties.isPreferBrokerQueries(session);\n-            PinotQueryGeneratorContext context = requireNonNull(plan.accept(new PinotQueryPlanVisitor(session, preferBrokerQueries), new PinotQueryGeneratorContext()), \"Resulting context is null\");\n-            boolean isQueryShort = context.isQueryShort(PinotSessionProperties.getNonAggregateLimitForBrokerQueries(session));\n-            return Optional.of(new PinotQueryGeneratorResult(context.toQuery(pinotConfig, preferBrokerQueries, isQueryShort), context));\n+            PinotQueryGeneratorContext context = requireNonNull(plan.accept(new PinotQueryPlanVisitor(session),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fea79de0b89422c78eeba369a92e975bd17b8bee"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MDc4NDEw", "url": "https://github.com/prestodb/presto/pull/14057#pullrequestreview-354078410", "createdAt": "2020-02-05T22:13:30Z", "commit": {"oid": "50812fb788d5c00b41659e23fc5759b5eb4caf1e"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MDc4NzU3", "url": "https://github.com/prestodb/presto/pull/14057#pullrequestreview-354078757", "createdAt": "2020-02-05T22:14:10Z", "commit": {"oid": "50812fb788d5c00b41659e23fc5759b5eb4caf1e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMjoxNDoxMFrOFmJCLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMjoxNjowNFrOFmJFFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUzODIyMA==", "bodyText": "break an empty line after this", "url": "https://github.com/prestodb/presto/pull/14057#discussion_r375538220", "createdAt": "2020-02-05T22:14:10Z", "author": {"login": "highker"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -275,7 +277,9 @@ private boolean hasOrderBy()\n                 .filter(s -> !groupByColumns.contains(s.getKey())) // remove the group by columns from the query as Pinot barfs if the group by column is an expression\n                 .map(s -> s.getValue().getDefinition())\n                 .collect(Collectors.joining(\", \"));\n-\n+        if (expressions.isEmpty()) {\n+            throw new PinotException(PINOT_QUERY_GENERATOR_FAILURE, Optional.empty(), \"No valid expressions in \" + this);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50812fb788d5c00b41659e23fc5759b5eb4caf1e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUzODk2Ng==", "bodyText": "this will provide the memory address (which is not necessary for an error message). What is needed is PinotQueryGeneratorContext.class.getName() I guess.", "url": "https://github.com/prestodb/presto/pull/14057#discussion_r375538966", "createdAt": "2020-02-05T22:16:04Z", "author": {"login": "highker"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -275,7 +277,9 @@ private boolean hasOrderBy()\n                 .filter(s -> !groupByColumns.contains(s.getKey())) // remove the group by columns from the query as Pinot barfs if the group by column is an expression\n                 .map(s -> s.getValue().getDefinition())\n                 .collect(Collectors.joining(\", \"));\n-\n+        if (expressions.isEmpty()) {\n+            throw new PinotException(PINOT_QUERY_GENERATOR_FAILURE, Optional.empty(), \"No valid expressions in \" + this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50812fb788d5c00b41659e23fc5759b5eb4caf1e"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eed8482ea6c471d228c0852f5aa7e2e9bc28b736", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/eed8482ea6c471d228c0852f5aa7e2e9bc28b736", "committedDate": "2020-02-06T08:40:19Z", "message": "Fix bug with pinot column scan index generation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2051c60f0489d7d81270288e09eca72f2896ec4e", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/2051c60f0489d7d81270288e09eca72f2896ec4e", "committedDate": "2020-02-06T08:41:17Z", "message": "Rename preferBrokerQueries to its negate format forbidBrokerQueries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77ba57bc3e39c851dc8e55c709be0abd70c31492", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/77ba57bc3e39c851dc8e55c709be0abd70c31492", "committedDate": "2020-02-06T08:41:48Z", "message": "Avoid passing Content-Type header when Pinot request body is empty"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e14a4487d7773b57e62b2cdccb57ec2d807c835", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/3e14a4487d7773b57e62b2cdccb57ec2d807c835", "committedDate": "2020-02-06T08:43:55Z", "message": "Fail with informative error message if no Pinot expression is selected"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "50812fb788d5c00b41659e23fc5759b5eb4caf1e", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/50812fb788d5c00b41659e23fc5759b5eb4caf1e", "committedDate": "2020-02-04T22:56:34Z", "message": "Fail with a proper error message if expressions are not selected"}, "afterCommit": {"oid": "3e14a4487d7773b57e62b2cdccb57ec2d807c835", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/3e14a4487d7773b57e62b2cdccb57ec2d807c835", "committedDate": "2020-02-06T08:43:55Z", "message": "Fail with informative error message if no Pinot expression is selected"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NzcxODYw", "url": "https://github.com/prestodb/presto/pull/14057#pullrequestreview-354771860", "createdAt": "2020-02-06T21:06:41Z", "commit": {"oid": "3e14a4487d7773b57e62b2cdccb57ec2d807c835"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2563, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}