{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNDIwOTAw", "number": 15534, "title": "Improve error handling for spill", "bodyText": "checkSuccess wrapped exceptions in an IllegalArgumentException, which\nmeant the actual error was buried in the stacktrace. getFutureValue\nwrapped the source exception in a runtime exception, but only included\nthe error stacktrace and not the stack to the  getFutureValue call.\nWithout the other stack trace, you don't know where in the operator\nexecution spill failed, which can make debugging harder.\nTest Plan - Ran tests with max spilled bytes set to 1B and looked at the\nerrors.\n== NO RELEASE NOTE ==", "createdAt": "2020-12-16T20:28:55Z", "url": "https://github.com/prestodb/presto/pull/15534", "merged": true, "mergeCommit": {"oid": "7f3e6940da9cf187f30d8c79f5106d7b2c09db44"}, "closed": true, "closedAt": "2020-12-17T22:36:49Z", "author": {"login": "rschlussel"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdm080VgH2gAyNTQxNDIwOTAwOjY4MTEyMzAyYjI3NTE5ZmM1MjQwMmE0OTNlMGQ0NzMzNjhkYWZiNzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnGPyCgBqjQxMjYwMDMzOTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "68112302b27519fc52402a493e0d473368dafb75", "author": {"user": {"login": "rschlussel", "name": "Rebecca Schlussel"}}, "url": "https://github.com/prestodb/presto/commit/68112302b27519fc52402a493e0d473368dafb75", "committedDate": "2020-12-16T20:27:51Z", "message": "Make AbstractTestXQueries classes abstract"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MDU4NzA5", "url": "https://github.com/prestodb/presto/pull/15534#pullrequestreview-554058709", "createdAt": "2020-12-16T20:29:29Z", "commit": {"oid": "2b492c19ad60100861c69cccc5d508af6b61aa9a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDoyOToyOVrOIHX2nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDoyOToyOVrOIHX2nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwMTc1Nw==", "bodyText": "I wasn't sure if there was a better place to put this", "url": "https://github.com/prestodb/presto/pull/15534#discussion_r544601757", "createdAt": "2020-12-16T20:29:29Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/SpillingUtils.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.operator;\n+\n+import com.facebook.presto.spi.PrestoException;\n+\n+import java.util.concurrent.Future;\n+\n+import static com.facebook.airlift.concurrent.MoreFutures.getFutureValue;\n+import static com.facebook.presto.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n+import static java.lang.String.format;\n+\n+public class SpillingUtils\n+{\n+    private SpillingUtils() {}\n+\n+    public static void checkSpillSucceeded(Future spillInProgress)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b492c19ad60100861c69cccc5d508af6b61aa9a"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MDczMzY4", "url": "https://github.com/prestodb/presto/pull/15534#pullrequestreview-554073368", "createdAt": "2020-12-16T20:51:01Z", "commit": {"oid": "2b492c19ad60100861c69cccc5d508af6b61aa9a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b492c19ad60100861c69cccc5d508af6b61aa9a", "author": {"user": {"login": "rschlussel", "name": "Rebecca Schlussel"}}, "url": "https://github.com/prestodb/presto/commit/2b492c19ad60100861c69cccc5d508af6b61aa9a", "committedDate": "2020-12-16T20:27:52Z", "message": "Improve error handling for spill\n\ncheckSuccess wrapped exceptions in an IllegalArgumentException, which\nmeant the actual error was buried in the stacktrace. getFutureValue\nwrapped the source exception in a runtime exception, but only included\nthe error stacktrace and not the stack to the  getFutureValue call.\nWithout the other stack trace, you don't know where in the operator\nexecution spill failed, which can make debugging harder.\n\nTest Plan: Ran tests with max spilled bytes set to 1B and looked at the\nerrors."}, "afterCommit": {"oid": "9150680f864fb6a19caee43e4ce8a01b3172b933", "author": {"user": {"login": "rschlussel", "name": "Rebecca Schlussel"}}, "url": "https://github.com/prestodb/presto/commit/9150680f864fb6a19caee43e4ce8a01b3172b933", "committedDate": "2020-12-16T21:10:40Z", "message": "Improve error handling for spill\n\ncheckSuccess wrapped exceptions in an IllegalArgumentException, which\nmeant the actual error was buried in the stacktrace. getFutureValue\nwrapped the source exception in a runtime exception, but only included\nthe error stacktrace and not the stack to the  getFutureValue call.\nWithout the other stack trace, you don't know where in the operator\nexecution spill failed, which can make debugging harder.\n\nTest Plan: Ran tests with max spilled bytes set to 1B and looked at the\nerrors."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MzA1NDAw", "url": "https://github.com/prestodb/presto/pull/15534#pullrequestreview-554305400", "createdAt": "2020-12-17T06:13:58Z", "commit": {"oid": "9150680f864fb6a19caee43e4ce8a01b3172b933"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNjoxMzo1OFrOIHmQLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNjoxMzo1OFrOIHmQLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgzNzY3OA==", "bodyText": "nit: irrelevant change?", "url": "https://github.com/prestodb/presto/pull/15534#discussion_r544837678", "createdAt": "2020-12-17T06:13:58Z", "author": {"login": "wenleix"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestOrderByQueries.java", "diffHunk": "@@ -25,7 +25,7 @@\n import static com.facebook.presto.tests.QueryTemplate.parameter;\n import static com.facebook.presto.tests.QueryTemplate.queryTemplate;\n \n-public class AbstractTestOrderByQueries\n+public abstract class AbstractTestOrderByQueries", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9150680f864fb6a19caee43e4ce8a01b3172b933"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MzA2NDQ2", "url": "https://github.com/prestodb/presto/pull/15534#pullrequestreview-554306446", "createdAt": "2020-12-17T06:16:39Z", "commit": {"oid": "9150680f864fb6a19caee43e4ce8a01b3172b933"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNjoxNjozOVrOIHmUDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNjoxODo0N1rOIHmXRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgzODY2OA==", "bodyText": "nit : what's the difference compared with directly rethrowing it?", "url": "https://github.com/prestodb/presto/pull/15534#discussion_r544838668", "createdAt": "2020-12-17T06:16:39Z", "author": {"login": "wenleix"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/SpillingUtils.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.operator;\n+\n+import com.facebook.presto.spi.PrestoException;\n+\n+import java.util.concurrent.Future;\n+\n+import static com.facebook.airlift.concurrent.MoreFutures.getFutureValue;\n+import static com.facebook.presto.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n+import static java.lang.String.format;\n+\n+public class SpillingUtils\n+{\n+    private SpillingUtils() {}\n+\n+    public static void checkSpillSucceeded(Future spillInProgress)\n+    {\n+        try {\n+            getFutureValue(spillInProgress);\n+        }\n+        catch (PrestoException prestoException) {\n+            throw new PrestoException(prestoException::getErrorCode, prestoException.getMessage(), prestoException);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9150680f864fb6a19caee43e4ce8a01b3172b933"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgzOTQ5Mg==", "bodyText": "throwing PrestoException will still bury runtimeException as the cause right? -- curious why this is different from throwing the IllegalArgumentException?", "url": "https://github.com/prestodb/presto/pull/15534#discussion_r544839492", "createdAt": "2020-12-17T06:18:47Z", "author": {"login": "wenleix"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/SpillingUtils.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.operator;\n+\n+import com.facebook.presto.spi.PrestoException;\n+\n+import java.util.concurrent.Future;\n+\n+import static com.facebook.airlift.concurrent.MoreFutures.getFutureValue;\n+import static com.facebook.presto.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n+import static java.lang.String.format;\n+\n+public class SpillingUtils\n+{\n+    private SpillingUtils() {}\n+\n+    public static void checkSpillSucceeded(Future spillInProgress)\n+    {\n+        try {\n+            getFutureValue(spillInProgress);\n+        }\n+        catch (PrestoException prestoException) {\n+            throw new PrestoException(prestoException::getErrorCode, prestoException.getMessage(), prestoException);\n+        }\n+        catch (RuntimeException runtimeException) {\n+            throw new PrestoException(GENERIC_INTERNAL_ERROR, format(\"Spilling failed: %s\", runtimeException.getMessage()), runtimeException);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9150680f864fb6a19caee43e4ce8a01b3172b933"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MzA3NzI3", "url": "https://github.com/prestodb/presto/pull/15534#pullrequestreview-554307727", "createdAt": "2020-12-17T06:20:08Z", "commit": {"oid": "9150680f864fb6a19caee43e4ce8a01b3172b933"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNjoyMDowOVrOIHmZJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNjoyMDowOVrOIHmZJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgzOTk3NQ==", "bodyText": "maybe add comment about why not using checkSuccess in airlift :)", "url": "https://github.com/prestodb/presto/pull/15534#discussion_r544839975", "createdAt": "2020-12-17T06:20:09Z", "author": {"login": "wenleix"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/SpillingUtils.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.operator;\n+\n+import com.facebook.presto.spi.PrestoException;\n+\n+import java.util.concurrent.Future;\n+\n+import static com.facebook.airlift.concurrent.MoreFutures.getFutureValue;\n+import static com.facebook.presto.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n+import static java.lang.String.format;\n+\n+public class SpillingUtils\n+{\n+    private SpillingUtils() {}\n+\n+    public static void checkSpillSucceeded(Future spillInProgress)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9150680f864fb6a19caee43e4ce8a01b3172b933"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e27fbb31b0d15e9d4755e7f53dce74d85bb2fc27", "author": {"user": {"login": "rschlussel", "name": "Rebecca Schlussel"}}, "url": "https://github.com/prestodb/presto/commit/e27fbb31b0d15e9d4755e7f53dce74d85bb2fc27", "committedDate": "2020-12-17T16:36:42Z", "message": "Improve error handling for spill\n\ncheckSuccess wrapped exceptions in an IllegalArgumentException, which\nmeant the actual error was buried in the stacktrace. getFutureValue\nwrapped the source exception in a runtime exception, but only included\nthe error stacktrace and not the stack to the  getFutureValue call.\nWithout the other stack trace, you don't know where in the operator\nexecution spill failed, which can make debugging harder.\n\nTest Plan: Ran tests with max spilled bytes set to 1B and looked at the\nerrors."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9150680f864fb6a19caee43e4ce8a01b3172b933", "author": {"user": {"login": "rschlussel", "name": "Rebecca Schlussel"}}, "url": "https://github.com/prestodb/presto/commit/9150680f864fb6a19caee43e4ce8a01b3172b933", "committedDate": "2020-12-16T21:10:40Z", "message": "Improve error handling for spill\n\ncheckSuccess wrapped exceptions in an IllegalArgumentException, which\nmeant the actual error was buried in the stacktrace. getFutureValue\nwrapped the source exception in a runtime exception, but only included\nthe error stacktrace and not the stack to the  getFutureValue call.\nWithout the other stack trace, you don't know where in the operator\nexecution spill failed, which can make debugging harder.\n\nTest Plan: Ran tests with max spilled bytes set to 1B and looked at the\nerrors."}, "afterCommit": {"oid": "e27fbb31b0d15e9d4755e7f53dce74d85bb2fc27", "author": {"user": {"login": "rschlussel", "name": "Rebecca Schlussel"}}, "url": "https://github.com/prestodb/presto/commit/e27fbb31b0d15e9d4755e7f53dce74d85bb2fc27", "committedDate": "2020-12-17T16:36:42Z", "message": "Improve error handling for spill\n\ncheckSuccess wrapped exceptions in an IllegalArgumentException, which\nmeant the actual error was buried in the stacktrace. getFutureValue\nwrapped the source exception in a runtime exception, but only included\nthe error stacktrace and not the stack to the  getFutureValue call.\nWithout the other stack trace, you don't know where in the operator\nexecution spill failed, which can make debugging harder.\n\nTest Plan: Ran tests with max spilled bytes set to 1B and looked at the\nerrors."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4568, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}