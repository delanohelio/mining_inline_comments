{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MjA0ODA0", "number": 15401, "title": "Add Local Revocable Memory Limit", "bodyText": "This config allows spilling queries to fail after allocating a sufficiently large amount of revocable memory.\nTest plan - Deployed to test cluster with 5MB limit:\nExample stack trace\ncom.facebook.presto.ExceededMemoryLimitException: Query exceeded per-node revocable memory limit of 5MB [Allocated: 4.86MB, Delta: 149.53kB]\n\tat com.facebook.presto.ExceededMemoryLimitException.exceededLocalRevocableMemoryLimit(ExceededMemoryLimitException.java:60)\n\tat com.facebook.presto.memory.QueryContext.enforceRevocableMemoryLimit(QueryContext.java:442)\n\tat com.facebook.presto.memory.QueryContext.updateRevocableMemory(QueryContext.java:175)\n\tat com.facebook.presto.memory.QueryContext$QueryMemoryReservationHandler.reserveMemory(QueryContext.java:390)\n\tat com.facebook.presto.memory.context.RootAggregatedMemoryContext.updateBytes(RootAggregatedMemoryContext.java:37)\n\tat com.facebook.presto.memory.context.ChildAggregatedMemoryContext.updateBytes(ChildAggregatedMemoryContext.java:38)\n\tat com.facebook.presto.memory.context.ChildAggregatedMemoryContext.updateBytes(ChildAggregatedMemoryContext.java:38)\n\tat com.facebook.presto.memory.context.ChildAggregatedMemoryContext.updateBytes(ChildAggregatedMemoryContext.java:38)\n\tat com.facebook.presto.memory.context.ChildAggregatedMemoryContext.updateBytes(ChildAggregatedMemoryContext.java:38)\n\tat com.facebook.presto.memory.context.SimpleLocalMemoryContext.setBytes(SimpleLocalMemoryContext.java:82)\n\tat com.facebook.presto.operator.OperatorContext$InternalLocalMemoryContext.setBytes(OperatorContext.java:618)\n\tat com.facebook.presto.operator.OperatorContext$InternalLocalMemoryContext.setBytes(OperatorContext.java:612)\n\tat com.facebook.presto.operator.WindowOperator$SpillablePagesToPagesIndexes.updateMemoryUsage(WindowOperator.java:749)\n\tat com.facebook.presto.operator.WindowOperator$SpillablePagesToPagesIndexes.process(WindowOperator.java:639)\n\tat com.facebook.presto.operator.WorkProcessorUtils$3.process(WorkProcessorUtils.java:262)\n\tat com.facebook.presto.operator.WorkProcessorUtils$ProcessWorkProcessor.process(WorkProcessorUtils.java:315)\n\tat com.facebook.presto.operator.WorkProcessorUtils$3.process(WorkProcessorUtils.java:249)\n\tat com.facebook.presto.operator.WorkProcessorUtils$ProcessWorkProcessor.process(WorkProcessorUtils.java:315)\n\tat com.facebook.presto.operator.WorkProcessorUtils$3.process(WorkProcessorUtils.java:249)\n\tat com.facebook.presto.operator.WorkProcessorUtils$ProcessWorkProcessor.process(WorkProcessorUtils.java:315)\n\tat com.facebook.presto.operator.WorkProcessorUtils$3.process(WorkProcessorUtils.java:249)\n\tat com.facebook.presto.operator.WorkProcessorUtils$ProcessWorkProcessor.process(WorkProcessorUtils.java:315)\n\tat com.facebook.presto.operator.WorkProcessorUtils$3.process(WorkProcessorUtils.java:249)\n\tat com.facebook.presto.operator.WorkProcessorUtils$ProcessWorkProcessor.process(WorkProcessorUtils.java:315)\n\tat com.facebook.presto.operator.WindowOperator.getOutput(WindowOperator.java:358)\n\tat com.facebook.presto.operator.Driver.processInternal(Driver.java:417)\n\tat com.facebook.presto.operator.Driver.lambda$processFor$8(Driver.java:300)\n\tat com.facebook.presto.operator.Driver.tryWithLock(Driver.java:721)\n\tat com.facebook.presto.operator.Driver.processFor(Driver.java:293)\n\tat com.facebook.presto.execution.SqlTaskExecution$DriverSplitRunner.processFor(SqlTaskExecution.java:1077)\n\tat com.facebook.presto.execution.executor.PrioritizedSplitRunner.process(PrioritizedSplitRunner.java:162)\n\tat com.facebook.presto.execution.executor.TaskExecutor$TaskRunner.run(TaskExecutor.java:545)\n\tat com.facebook.presto.$gen.Presto_0_245_SNAPSHOT_bcd98e2__0_245_20201112_215425_46____20201113_002019_1.run(Unknown Source)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n\nIf release note is NOT required, use:\n== NO RELEASE NOTE ==", "createdAt": "2020-11-05T16:59:29Z", "url": "https://github.com/prestodb/presto/pull/15401", "merged": true, "mergeCommit": {"oid": "2499b40de1599a99eea4f898c5e1cb24aefae9ea"}, "closed": true, "closedAt": "2020-11-16T02:57:12Z", "author": {"login": "sachdevs"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZlaoVgFqTUyNDQ3MTk5NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcO9tFgBqjM5OTU2MTg4MjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NDcxOTk1", "url": "https://github.com/prestodb/presto/pull/15401#pullrequestreview-524471995", "createdAt": "2020-11-05T17:00:55Z", "commit": {"oid": "8f9b11235c653f79f2e2a4c30b178c48f687c010"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzowMDo1NVrOHuM-zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzowMDo1NVrOHuM-zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIwOTIzMQ==", "bodyText": "Default value is a placeholder! I will adjust this depending on how testing goes.", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r518209231", "createdAt": "2020-11-05T17:00:55Z", "author": {"login": "sachdevs"}, "path": "presto-main/src/main/java/com/facebook/presto/spiller/NodeSpillConfig.java", "diffHunk": "@@ -21,6 +21,7 @@\n public class NodeSpillConfig\n {\n     private DataSize maxSpillPerNode = new DataSize(100, DataSize.Unit.GIGABYTE);\n+    private DataSize maxRevocableMemoryPerNode = new DataSize(8, DataSize.Unit.GIGABYTE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f9b11235c653f79f2e2a4c30b178c48f687c010"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NTI5NDg5", "url": "https://github.com/prestodb/presto/pull/15401#pullrequestreview-524529489", "createdAt": "2020-11-05T18:02:59Z", "commit": {"oid": "8f9b11235c653f79f2e2a4c30b178c48f687c010"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NTMxNDg3", "url": "https://github.com/prestodb/presto/pull/15401#pullrequestreview-524531487", "createdAt": "2020-11-05T18:05:33Z", "commit": {"oid": "8f9b11235c653f79f2e2a4c30b178c48f687c010"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f9b11235c653f79f2e2a4c30b178c48f687c010", "author": {"user": {"login": "sachdevs", "name": "Saksham"}}, "url": "https://github.com/prestodb/presto/commit/8f9b11235c653f79f2e2a4c30b178c48f687c010", "committedDate": "2020-11-05T16:56:41Z", "message": "Add per-node revocable memory limit\n\nThis config allows spilling queries to fail after allocating a\nsufficiently large amount of revocable memory."}, "afterCommit": {"oid": "d1f44d2d48111d48cfa3f9a59319e402d9c57195", "author": {"user": {"login": "sachdevs", "name": "Saksham"}}, "url": "https://github.com/prestodb/presto/commit/d1f44d2d48111d48cfa3f9a59319e402d9c57195", "committedDate": "2020-11-05T18:55:27Z", "message": "Add per-node revocable memory limit\n\nThis config allows spilling queries to fail after allocating a\nsufficiently large amount of revocable memory."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NDk0NzE0", "url": "https://github.com/prestodb/presto/pull/15401#pullrequestreview-525494714", "createdAt": "2020-11-06T21:08:19Z", "commit": {"oid": "d1f44d2d48111d48cfa3f9a59319e402d9c57195"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMTowODoxOVrOHu9m0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMToyNTo1NlrOHu-CkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAwNTkwNQ==", "bodyText": "seems like an accidental change", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r519005905", "createdAt": "2020-11-06T21:08:19Z", "author": {"login": "highker"}, "path": "presto-benchmark/src/main/java/com/facebook/presto/benchmark/AbstractOperatorBenchmark.java", "diffHunk": "@@ -225,7 +225,8 @@ protected final OperatorFactory createHashProjectOperator(int operatorId, PlanNo\n         RowExpression translatedHashExpression = translate(hashExpression.get(), variableToInputMapping.build());\n \n         PageFunctionCompiler functionCompiler = new PageFunctionCompiler(localQueryRunner.getMetadata(), 0);\n-        projections.add(new PageProjectionWithOutputs(functionCompiler.compileProjection(session.getSqlFunctionProperties(), translatedHashExpression, Optional.empty()).get(), new int[] {types.size()}));\n+        projections.add(new PageProjectionWithOutputs(functionCompiler.compileProjection(session.getSqlFunctionProperties(), translatedHashExpression, Optional.empty()).get(), new int[] {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1f44d2d48111d48cfa3f9a59319e402d9c57195"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxMDAxNw==", "bodyText": "put the first param to its own line. Unfortunately, the other part of the code followed our old coding style.", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r519010017", "createdAt": "2020-11-06T21:18:53Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/ExceededMemoryLimitException.java", "diffHunk": "@@ -52,6 +53,12 @@ public static ExceededMemoryLimitException exceededLocalTotalMemoryLimit(DataSiz\n                 format(\"Query exceeded per-node total memory limit of %s [%s]\", maxMemory, additionalFailureInfo));\n     }\n \n+    public static ExceededMemoryLimitException exceededLocalRevocableMemoryLimit(DataSize maxMemory, String additionalFailureInfo)\n+    {\n+        return new ExceededMemoryLimitException(EXCEEDED_REVOCABLE_MEMORY_LIMIT,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1f44d2d48111d48cfa3f9a59319e402d9c57195"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxMzAwOA==", "bodyText": "Maybe just make it long. No need to be optional if we set a large number for non-spilling case.", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r519013008", "createdAt": "2020-11-06T21:25:56Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java", "diffHunk": "@@ -81,6 +82,9 @@\n     @GuardedBy(\"this\")\n     private long peakNodeTotalMemory;\n \n+    @GuardedBy(\"this\")\n+    private Optional<Long> maxRevocableMemory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1f44d2d48111d48cfa3f9a59319e402d9c57195"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d1f44d2d48111d48cfa3f9a59319e402d9c57195", "author": {"user": {"login": "sachdevs", "name": "Saksham"}}, "url": "https://github.com/prestodb/presto/commit/d1f44d2d48111d48cfa3f9a59319e402d9c57195", "committedDate": "2020-11-05T18:55:27Z", "message": "Add per-node revocable memory limit\n\nThis config allows spilling queries to fail after allocating a\nsufficiently large amount of revocable memory."}, "afterCommit": {"oid": "f3454f748714230ce7a77b198ed34356f2b666a6", "author": {"user": {"login": "sachdevs", "name": "Saksham"}}, "url": "https://github.com/prestodb/presto/commit/f3454f748714230ce7a77b198ed34356f2b666a6", "committedDate": "2020-11-12T18:38:21Z", "message": "Add per-node revocable memory limit\n\nThis config allows spilling queries to fail after allocating a\nsufficiently large amount of revocable memory."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMjczNjk1", "url": "https://github.com/prestodb/presto/pull/15401#pullrequestreview-530273695", "createdAt": "2020-11-13T17:40:43Z", "commit": {"oid": "f3454f748714230ce7a77b198ed34356f2b666a6"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzo0MDo0M1rOHy4oOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzo0MjozOFrOHy4r_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzExODY1MA==", "bodyText": "this will cause compilation error", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r523118650", "createdAt": "2020-11-13T17:40:43Z", "author": {"login": "highker"}, "path": "presto-benchmark/src/test/java/com/facebook/presto/benchmark/MemoryLocalQueryRunner.java", "diffHunk": "@@ -80,6 +80,7 @@ public void installPlugin(Plugin plugin)\n                 new DataSize(1, GIGABYTE),\n                 new DataSize(2, GIGABYTE),\n                 new DataSize(1, GIGABYTE),\n+                Optional.empty(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3454f748714230ce7a77b198ed34356f2b666a6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzExOTYxNQ==", "bodyText": "Make it final and put it with private final constants. Maybe add a TODO to say this will be tunable from session properties in the future.", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r523119615", "createdAt": "2020-11-13T17:42:38Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java", "diffHunk": "@@ -81,6 +82,9 @@\n     @GuardedBy(\"this\")\n     private long peakNodeTotalMemory;\n \n+    @GuardedBy(\"this\")\n+    private long maxRevocableMemory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3454f748714230ce7a77b198ed34356f2b666a6"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3454f748714230ce7a77b198ed34356f2b666a6", "author": {"user": {"login": "sachdevs", "name": "Saksham"}}, "url": "https://github.com/prestodb/presto/commit/f3454f748714230ce7a77b198ed34356f2b666a6", "committedDate": "2020-11-12T18:38:21Z", "message": "Add per-node revocable memory limit\n\nThis config allows spilling queries to fail after allocating a\nsufficiently large amount of revocable memory."}, "afterCommit": {"oid": "1dcafe956a67ddb2af8d56411aa19e26f8bc67cd", "author": {"user": {"login": "sachdevs", "name": "Saksham"}}, "url": "https://github.com/prestodb/presto/commit/1dcafe956a67ddb2af8d56411aa19e26f8bc67cd", "committedDate": "2020-11-13T18:16:07Z", "message": "Add per-node revocable memory limit\n\nThis config allows spilling queries to fail after allocating a\nsufficiently large amount of revocable memory."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b20c805777784c7022d04113c0bd59c34b122061", "author": {"user": {"login": "sachdevs", "name": "Saksham"}}, "url": "https://github.com/prestodb/presto/commit/b20c805777784c7022d04113c0bd59c34b122061", "committedDate": "2020-11-13T22:32:55Z", "message": "Add per-node revocable memory limit\n\nThis config allows spilling queries to fail after allocating a\nsufficiently large amount of revocable memory."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1dcafe956a67ddb2af8d56411aa19e26f8bc67cd", "author": {"user": {"login": "sachdevs", "name": "Saksham"}}, "url": "https://github.com/prestodb/presto/commit/1dcafe956a67ddb2af8d56411aa19e26f8bc67cd", "committedDate": "2020-11-13T18:16:07Z", "message": "Add per-node revocable memory limit\n\nThis config allows spilling queries to fail after allocating a\nsufficiently large amount of revocable memory."}, "afterCommit": {"oid": "b20c805777784c7022d04113c0bd59c34b122061", "author": {"user": {"login": "sachdevs", "name": "Saksham"}}, "url": "https://github.com/prestodb/presto/commit/b20c805777784c7022d04113c0bd59c34b122061", "committedDate": "2020-11-13T22:32:55Z", "message": "Add per-node revocable memory limit\n\nThis config allows spilling queries to fail after allocating a\nsufficiently large amount of revocable memory."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4679, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}