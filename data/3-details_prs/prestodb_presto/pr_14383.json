{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyOTI4MDQ0", "number": 14383, "title": "Add preferred ordering columns for unbucketed table", "bodyText": "Currently sorted table is only a property of bucketed table. However,\nwe do see sorted file has several benefits, including better\ncompression for storage and faster scanning because of OrcReader\nskipping stripes. Introducing preferred ordering for unbucketed\ntable could bridge the gap. This property only means this table\nwould prefer to have files sorted by specified columns but does\nnot enforce it.\n== RELEASE NOTES ==\n\nHive Changes\n* Added table property preferred_ordering_columns to support writing sorted files for unbucketed table. The list of ordering columns could be specified using the preferred_ordering_columns table property.", "createdAt": "2020-04-14T02:02:58Z", "url": "https://github.com/prestodb/presto/pull/14383", "merged": true, "mergeCommit": {"oid": "3e4f18232ef791188f3388377fc0889922f23333"}, "closed": true, "closedAt": "2020-04-17T22:00:36Z", "author": {"login": "shixuan-fan"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXp7ySgBqjMyMzI4ODI4Mjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYmBw3gBqjMyNDU2MTIzODk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbfcb84b9826b624173ddf7d4d0212862c4a22e6", "author": {"user": {"login": "shixuan-fan", "name": "Shixuan Fan"}}, "url": "https://github.com/prestodb/presto/commit/fbfcb84b9826b624173ddf7d4d0212862c4a22e6", "committedDate": "2020-04-14T01:56:55Z", "message": "Add preferred ordering columns for unbucketed table\n\nCurrently sorted table is only a property of bucketed table. However,\nwe do see sorted file has several benefits, including better\ncompression for storage and faster scanning because of OrcReader\nskipping stripes. Introducing preferred ordering for unbucketed\ntable could bridge the gap. This property only means this table\nwould prefer to have files sorted by specified columns but does\nnot enforce it."}, "afterCommit": {"oid": "8e392fda382366040101fdf595cd27d8c78fe7c6", "author": {"user": {"login": "shixuan-fan", "name": "Shixuan Fan"}}, "url": "https://github.com/prestodb/presto/commit/8e392fda382366040101fdf595cd27d8c78fe7c6", "committedDate": "2020-04-14T20:57:30Z", "message": "Add preferred ordering columns for unbucketed table\n\nCurrently sorted table is only a property of bucketed table. However,\nwe do see sorted file has several benefits, including better\ncompression for storage and faster scanning because of OrcReader\nskipping stripes. Introducing preferred ordering for unbucketed\ntable could bridge the gap. This property only means this table\nwould prefer to have files sorted by specified columns but does\nnot enforce it."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNDQzMTMx", "url": "https://github.com/prestodb/presto/pull/14383#pullrequestreview-393443131", "createdAt": "2020-04-15T04:09:44Z", "commit": {"oid": "8e392fda382366040101fdf595cd27d8c78fe7c6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDowOTo0NFrOGFpFeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoxMDowM1rOGFpF0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU2OTIwOQ==", "bodyText": "Shall we make the stack variable the same as the constructor param? Having one with Optional and the other not is kinda confusing. If empty list means no preferred sorting, then we can just drop Optional.", "url": "https://github.com/prestodb/presto/pull/14383#discussion_r408569209", "createdAt": "2020-04-15T04:09:44Z", "author": {"login": "highker"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/metastore/file/TableMetadata.java", "diffHunk": "@@ -75,7 +78,7 @@ public TableMetadata(\n         this.dataColumns = ImmutableList.copyOf(requireNonNull(dataColumns, \"dataColumns is null\"));\n         this.partitionColumns = ImmutableList.copyOf(requireNonNull(partitionColumns, \"partitionColumns is null\"));\n         this.parameters = ImmutableMap.copyOf(requireNonNull(parameters, \"parameters is null\"));\n-\n+        this.preferredOrderingColumns = ImmutableList.copyOf(requireNonNull(preferredOrderingColumns.orElse(ImmutableList.of()), \"preferredOrderingColumns is null\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e392fda382366040101fdf595cd27d8c78fe7c6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU2OTI5Nw==", "bodyText": "We should just pass preferredOrderingColumns to make it consistent", "url": "https://github.com/prestodb/presto/pull/14383#discussion_r408569297", "createdAt": "2020-04-15T04:10:03Z", "author": {"login": "highker"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/metastore/file/TableMetadata.java", "diffHunk": "@@ -222,6 +232,7 @@ public TableMetadata withDataColumns(List<Column> dataColumns)\n                 parameters,\n                 storageFormat,\n                 bucketProperty,\n+                Optional.of(preferredOrderingColumns),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e392fda382366040101fdf595cd27d8c78fe7c6"}, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e392fda382366040101fdf595cd27d8c78fe7c6", "author": {"user": {"login": "shixuan-fan", "name": "Shixuan Fan"}}, "url": "https://github.com/prestodb/presto/commit/8e392fda382366040101fdf595cd27d8c78fe7c6", "committedDate": "2020-04-14T20:57:30Z", "message": "Add preferred ordering columns for unbucketed table\n\nCurrently sorted table is only a property of bucketed table. However,\nwe do see sorted file has several benefits, including better\ncompression for storage and faster scanning because of OrcReader\nskipping stripes. Introducing preferred ordering for unbucketed\ntable could bridge the gap. This property only means this table\nwould prefer to have files sorted by specified columns but does\nnot enforce it."}, "afterCommit": {"oid": "31d5cbe4fb62efe29aa12c5d3d0c3d53ca081c90", "author": {"user": {"login": "shixuan-fan", "name": "Shixuan Fan"}}, "url": "https://github.com/prestodb/presto/commit/31d5cbe4fb62efe29aa12c5d3d0c3d53ca081c90", "committedDate": "2020-04-16T00:07:45Z", "message": "Add preferred ordering columns for unbucketed table\n\nCurrently sorted table is only a property of bucketed table. However,\nwe do see sorted file has several benefits, including better\ncompression for storage and faster scanning because of OrcReader\nskipping stripes. Introducing preferred ordering for unbucketed\ntable could bridge the gap. This property only means this table\nwould prefer to have files sorted by specified columns but does\nnot enforce it."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MjI0MjUw", "url": "https://github.com/prestodb/presto/pull/14383#pullrequestreview-394224250", "createdAt": "2020-04-16T00:36:03Z", "commit": {"oid": "31d5cbe4fb62efe29aa12c5d3d0c3d53ca081c90"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMDozNjowM1rOGGQXQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMDo0MTowNFrOGGQdAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIxMjczNw==", "bodyText": "Make \",\" a const and add a comment to state that comma is not a reserved keyword even with quotes (https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL)", "url": "https://github.com/prestodb/presto/pull/14383#discussion_r409212737", "createdAt": "2020-04-16T00:36:03Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -2559,6 +2581,43 @@ private static HiveStorageFormat extractHiveStorageFormat(Table table)\n         throw new PrestoException(HIVE_UNSUPPORTED_FORMAT, format(\"Output format %s with SerDe %s is not supported\", outputFormat, serde));\n     }\n \n+    private static String encodePreferredOrderingColumns(List<SortingColumn> preferredOrderingColumns)\n+    {\n+        return Joiner.on(',').join(preferredOrderingColumns.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d5cbe4fb62efe29aa12c5d3d0c3d53ca081c90"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIxNDIxMQ==", "bodyText": "what if two writers write to the same fileNumber?", "url": "https://github.com/prestodb/presto/pull/14383#discussion_r409214211", "createdAt": "2020-04-16T00:41:04Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveWriterFactory.java", "diffHunk": "@@ -366,11 +369,10 @@ public HiveWriter createWriter(Page partitionColumns, int position, OptionalInt\n         }\n \n         if (sortingFileWriterFactory.isPresent()) {\n-            checkState(bucketNumber.isPresent(), \"missing bucket number for sorted table write\");\n             hiveFileWriter = sortingFileWriterFactory.get().createSortingFileWriter(\n                     path,\n                     hiveFileWriter,\n-                    bucketNumber.getAsInt(),\n+                    bucketNumber.orElse(random.nextInt()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d5cbe4fb62efe29aa12c5d3d0c3d53ca081c90"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MjI4OTI0", "url": "https://github.com/prestodb/presto/pull/14383#pullrequestreview-394228924", "createdAt": "2020-04-16T00:51:05Z", "commit": {"oid": "31d5cbe4fb62efe29aa12c5d3d0c3d53ca081c90"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MjQyMzg2", "url": "https://github.com/prestodb/presto/pull/14383#pullrequestreview-394242386", "createdAt": "2020-04-16T01:36:24Z", "commit": {"oid": "31d5cbe4fb62efe29aa12c5d3d0c3d53ca081c90"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMTozNjoyNVrOGGRYrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMTo0NDoxNlrOGGRhmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIyOTQ4Nw==", "bodyText": "Can it be null (similarly to serdeInfo.getParameters()?)", "url": "https://github.com/prestodb/presto/pull/14383#discussion_r409229487", "createdAt": "2020-04-16T01:36:25Z", "author": {"login": "arhimondr"}, "path": "presto-hive-metastore/src/main/java/com/facebook/presto/hive/metastore/thrift/ThriftMetastoreUtil.java", "diffHunk": "@@ -625,7 +625,8 @@ public static void fromMetastoreApiStorageDescriptor(StorageDescriptor storageDe\n                 .setLocation(nullToEmpty(storageDescriptor.getLocation()))\n                 .setBucketProperty(HiveBucketProperty.fromStorageDescriptor(storageDescriptor, tablePartitionName))\n                 .setSkewed(storageDescriptor.isSetSkewedInfo() && storageDescriptor.getSkewedInfo().isSetSkewedColNames() && !storageDescriptor.getSkewedInfo().getSkewedColNames().isEmpty())\n-                .setSerdeParameters(serdeInfo.getParameters() == null ? ImmutableMap.of() : serdeInfo.getParameters());\n+                .setSerdeParameters(serdeInfo.getParameters() == null ? ImmutableMap.of() : serdeInfo.getParameters())\n+                .setParameters(storageDescriptor.getParameters());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d5cbe4fb62efe29aa12c5d3d0c3d53ca081c90"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIzMTE2Ng==", "bodyText": "I would recommend adding a unit test. Try to check for corner cases.", "url": "https://github.com/prestodb/presto/pull/14383#discussion_r409231166", "createdAt": "2020-04-16T01:42:16Z", "author": {"login": "arhimondr"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -2559,6 +2581,43 @@ private static HiveStorageFormat extractHiveStorageFormat(Table table)\n         throw new PrestoException(HIVE_UNSUPPORTED_FORMAT, format(\"Output format %s with SerDe %s is not supported\", outputFormat, serde));\n     }\n \n+    private static String encodePreferredOrderingColumns(List<SortingColumn> preferredOrderingColumns)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d5cbe4fb62efe29aa12c5d3d0c3d53ca081c90"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIzMTM3Nw==", "bodyText": "upper?", "url": "https://github.com/prestodb/presto/pull/14383#discussion_r409231377", "createdAt": "2020-04-16T01:43:02Z", "author": {"login": "arhimondr"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -2559,6 +2581,43 @@ private static HiveStorageFormat extractHiveStorageFormat(Table table)\n         throw new PrestoException(HIVE_UNSUPPORTED_FORMAT, format(\"Output format %s with SerDe %s is not supported\", outputFormat, serde));\n     }\n \n+    private static String encodePreferredOrderingColumns(List<SortingColumn> preferredOrderingColumns)\n+    {\n+        return Joiner.on(',').join(preferredOrderingColumns.stream()\n+                .map(HiveMetadata::sortingColumnToString)\n+                .collect(toImmutableList()));\n+    }\n+\n+    private static List<SortingColumn> decodePreferredOrderingColumnsFromStorage(Storage storage)\n+    {\n+        if (!storage.getParameters().containsKey(PREFERRED_ORDERING_COLUMNS)) {\n+            return ImmutableList.of();\n+        }\n+\n+        return Splitter.on(',').trimResults().omitEmptyStrings().splitToList(storage.getParameters().get(PREFERRED_ORDERING_COLUMNS)).stream()\n+                .map(HiveMetadata::sortingColumnFromString)\n+                .collect(toImmutableList());\n+    }\n+\n+    private static SortingColumn sortingColumnFromString(String name)\n+    {\n+        SortingColumn.Order order = ASCENDING;\n+        String lower = name.toUpperCase(ENGLISH);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d5cbe4fb62efe29aa12c5d3d0c3d53ca081c90"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIzMTUxNg==", "bodyText": "Why do we still need trim?", "url": "https://github.com/prestodb/presto/pull/14383#discussion_r409231516", "createdAt": "2020-04-16T01:43:29Z", "author": {"login": "arhimondr"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -2559,6 +2581,43 @@ private static HiveStorageFormat extractHiveStorageFormat(Table table)\n         throw new PrestoException(HIVE_UNSUPPORTED_FORMAT, format(\"Output format %s with SerDe %s is not supported\", outputFormat, serde));\n     }\n \n+    private static String encodePreferredOrderingColumns(List<SortingColumn> preferredOrderingColumns)\n+    {\n+        return Joiner.on(',').join(preferredOrderingColumns.stream()\n+                .map(HiveMetadata::sortingColumnToString)\n+                .collect(toImmutableList()));\n+    }\n+\n+    private static List<SortingColumn> decodePreferredOrderingColumnsFromStorage(Storage storage)\n+    {\n+        if (!storage.getParameters().containsKey(PREFERRED_ORDERING_COLUMNS)) {\n+            return ImmutableList.of();\n+        }\n+\n+        return Splitter.on(',').trimResults().omitEmptyStrings().splitToList(storage.getParameters().get(PREFERRED_ORDERING_COLUMNS)).stream()\n+                .map(HiveMetadata::sortingColumnFromString)\n+                .collect(toImmutableList());\n+    }\n+\n+    private static SortingColumn sortingColumnFromString(String name)\n+    {\n+        SortingColumn.Order order = ASCENDING;\n+        String lower = name.toUpperCase(ENGLISH);\n+        if (lower.endsWith(\" ASC\")) {\n+            name = name.substring(0, name.length() - 4).trim();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d5cbe4fb62efe29aa12c5d3d0c3d53ca081c90"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIzMTc3MQ==", "bodyText": "Maybe also specify ASC explicitly to be consistent", "url": "https://github.com/prestodb/presto/pull/14383#discussion_r409231771", "createdAt": "2020-04-16T01:44:16Z", "author": {"login": "arhimondr"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -2559,6 +2581,43 @@ private static HiveStorageFormat extractHiveStorageFormat(Table table)\n         throw new PrestoException(HIVE_UNSUPPORTED_FORMAT, format(\"Output format %s with SerDe %s is not supported\", outputFormat, serde));\n     }\n \n+    private static String encodePreferredOrderingColumns(List<SortingColumn> preferredOrderingColumns)\n+    {\n+        return Joiner.on(',').join(preferredOrderingColumns.stream()\n+                .map(HiveMetadata::sortingColumnToString)\n+                .collect(toImmutableList()));\n+    }\n+\n+    private static List<SortingColumn> decodePreferredOrderingColumnsFromStorage(Storage storage)\n+    {\n+        if (!storage.getParameters().containsKey(PREFERRED_ORDERING_COLUMNS)) {\n+            return ImmutableList.of();\n+        }\n+\n+        return Splitter.on(',').trimResults().omitEmptyStrings().splitToList(storage.getParameters().get(PREFERRED_ORDERING_COLUMNS)).stream()\n+                .map(HiveMetadata::sortingColumnFromString)\n+                .collect(toImmutableList());\n+    }\n+\n+    private static SortingColumn sortingColumnFromString(String name)\n+    {\n+        SortingColumn.Order order = ASCENDING;\n+        String lower = name.toUpperCase(ENGLISH);\n+        if (lower.endsWith(\" ASC\")) {\n+            name = name.substring(0, name.length() - 4).trim();\n+        }\n+        else if (lower.endsWith(\" DESC\")) {\n+            name = name.substring(0, name.length() - 5).trim();\n+            order = DESCENDING;\n+        }\n+        return new SortingColumn(name, order);\n+    }\n+\n+    private static String sortingColumnToString(SortingColumn column)\n+    {\n+        return column.getColumnName() + ((column.getOrder() == DESCENDING) ? \" DESC\" : \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d5cbe4fb62efe29aa12c5d3d0c3d53ca081c90"}, "originalPosition": 151}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "31d5cbe4fb62efe29aa12c5d3d0c3d53ca081c90", "author": {"user": {"login": "shixuan-fan", "name": "Shixuan Fan"}}, "url": "https://github.com/prestodb/presto/commit/31d5cbe4fb62efe29aa12c5d3d0c3d53ca081c90", "committedDate": "2020-04-16T00:07:45Z", "message": "Add preferred ordering columns for unbucketed table\n\nCurrently sorted table is only a property of bucketed table. However,\nwe do see sorted file has several benefits, including better\ncompression for storage and faster scanning because of OrcReader\nskipping stripes. Introducing preferred ordering for unbucketed\ntable could bridge the gap. This property only means this table\nwould prefer to have files sorted by specified columns but does\nnot enforce it."}, "afterCommit": {"oid": "326236ffd4199fee5c538c24042ac663ee8996eb", "author": {"user": {"login": "shixuan-fan", "name": "Shixuan Fan"}}, "url": "https://github.com/prestodb/presto/commit/326236ffd4199fee5c538c24042ac663ee8996eb", "committedDate": "2020-04-17T00:41:02Z", "message": "Add preferred ordering columns for unbucketed table\n\nCurrently sorted table is only a property of bucketed table. However,\nwe do see sorted file has several benefits, including better\ncompression for storage and faster scanning because of OrcReader\nskipping stripes. Introducing preferred ordering for unbucketed\ntable could bridge the gap. This property only means this table\nwould prefer to have files sorted by specified columns but does\nnot enforce it."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "326236ffd4199fee5c538c24042ac663ee8996eb", "author": {"user": {"login": "shixuan-fan", "name": "Shixuan Fan"}}, "url": "https://github.com/prestodb/presto/commit/326236ffd4199fee5c538c24042ac663ee8996eb", "committedDate": "2020-04-17T00:41:02Z", "message": "Add preferred ordering columns for unbucketed table\n\nCurrently sorted table is only a property of bucketed table. However,\nwe do see sorted file has several benefits, including better\ncompression for storage and faster scanning because of OrcReader\nskipping stripes. Introducing preferred ordering for unbucketed\ntable could bridge the gap. This property only means this table\nwould prefer to have files sorted by specified columns but does\nnot enforce it."}, "afterCommit": {"oid": "3800724f9ed11c15bbb60d28d130546766f68f79", "author": {"user": {"login": "shixuan-fan", "name": "Shixuan Fan"}}, "url": "https://github.com/prestodb/presto/commit/3800724f9ed11c15bbb60d28d130546766f68f79", "committedDate": "2020-04-17T01:13:22Z", "message": "Add preferred ordering columns for unbucketed table\n\nCurrently sorted table is only a property of bucketed table. However,\nwe do see sorted file has several benefits, including better\ncompression for storage and faster scanning because of OrcReader\nskipping stripes. Introducing preferred ordering for unbucketed\ntable could bridge the gap. This property only means this table\nwould prefer to have files sorted by specified columns but does\nnot enforce it."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8faae9db4200b734d4d1c0b75040271eec9db553", "author": {"user": {"login": "shixuan-fan", "name": "Shixuan Fan"}}, "url": "https://github.com/prestodb/presto/commit/8faae9db4200b734d4d1c0b75040271eec9db553", "committedDate": "2020-04-17T18:31:50Z", "message": "Replace comma string with static constant COMMA"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48c137f9a07d9f90d059b1ff6098c93ad2eec3bd", "author": {"user": {"login": "shixuan-fan", "name": "Shixuan Fan"}}, "url": "https://github.com/prestodb/presto/commit/48c137f9a07d9f90d059b1ff6098c93ad2eec3bd", "committedDate": "2020-04-17T18:31:50Z", "message": "Move sorting column string conversion methods into SortingColumn\n\nAlso fix a minor typo: lower -> upper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a130e0ee719111c488d8533a00c90c832bbf7ba6", "author": {"user": {"login": "shixuan-fan", "name": "Shixuan Fan"}}, "url": "https://github.com/prestodb/presto/commit/a130e0ee719111c488d8533a00c90c832bbf7ba6", "committedDate": "2020-04-17T18:58:17Z", "message": "Add preferred ordering columns for unbucketed table\n\nCurrently sorted table is only a property of bucketed table. However,\nwe do see sorted file has several benefits, including better\ncompression for storage and faster scanning because of OrcReader\nskipping stripes. Introducing preferred ordering for unbucketed\ntable could bridge the gap. This property only means this table\nwould prefer to have files sorted by specified columns but does\nnot enforce it."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3800724f9ed11c15bbb60d28d130546766f68f79", "author": {"user": {"login": "shixuan-fan", "name": "Shixuan Fan"}}, "url": "https://github.com/prestodb/presto/commit/3800724f9ed11c15bbb60d28d130546766f68f79", "committedDate": "2020-04-17T01:13:22Z", "message": "Add preferred ordering columns for unbucketed table\n\nCurrently sorted table is only a property of bucketed table. However,\nwe do see sorted file has several benefits, including better\ncompression for storage and faster scanning because of OrcReader\nskipping stripes. Introducing preferred ordering for unbucketed\ntable could bridge the gap. This property only means this table\nwould prefer to have files sorted by specified columns but does\nnot enforce it."}, "afterCommit": {"oid": "a130e0ee719111c488d8533a00c90c832bbf7ba6", "author": {"user": {"login": "shixuan-fan", "name": "Shixuan Fan"}}, "url": "https://github.com/prestodb/presto/commit/a130e0ee719111c488d8533a00c90c832bbf7ba6", "committedDate": "2020-04-17T18:58:17Z", "message": "Add preferred ordering columns for unbucketed table\n\nCurrently sorted table is only a property of bucketed table. However,\nwe do see sorted file has several benefits, including better\ncompression for storage and faster scanning because of OrcReader\nskipping stripes. Introducing preferred ordering for unbucketed\ntable could bridge the gap. This property only means this table\nwould prefer to have files sorted by specified columns but does\nnot enforce it."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1839, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}