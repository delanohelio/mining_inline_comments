{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyODczMDQ0", "number": 14286, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMjo1NDo1NFrODqxzBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjozNjo1NlrODsC7ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTgyNjYxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/BlockEncodingBuffer.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMjo1NDo1NFrOF6u3Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMToxNDozNFrOF7I1DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyOTUzNQ==", "bodyText": "Do we really need this new parameter here? resetBuffer() seems to be signaling the same condition. Can't values buffer be release in resetBuffers()?", "url": "https://github.com/prestodb/presto/pull/14286#discussion_r397129535", "createdAt": "2020-03-24T12:54:54Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/BlockEncodingBuffer.java", "diffHunk": "@@ -50,8 +50,9 @@\n \n     /**\n      * Signals that this is the last batch in this page, so that the internal buffers in BlockEncodingBuffers can recycled.\n+     * @param bufferFull\n      */\n-    void noMoreBatches();\n+    void noMoreBatches(boolean bufferFull);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b955c4f4b6668f3e6696bfd7460ca13b44a19dc0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUyNjIyNA==", "bodyText": "@mbasmanova There are two conditions that have to be met to recycle these buffers: 1) bufferFull == true (just flushed);  2) This is the last batch in this page. If condition 2) is not met, the buffers are still needed for the next batch in the same page. Even if we returned these buffers if only 1) is met, the next batch would borrow these buffers again for the same partition. Borrowing/Returning the buffers are not free because of the Deque and Set operations are expensive. Therefore we only want to recycle the buffers when both of these two conditions are met. resetBuffer() only happens when flushing, but it doesn't guarantee that it's the last batch. Another way to do this is to signal the lastBatchInPage in flush(lastBatchInPage) but since we have done it in the finally section for the int[] buffers, I think it's better to do it the same way at the same place for the byte[] buffers.", "url": "https://github.com/prestodb/presto/pull/14286#discussion_r397526224", "createdAt": "2020-03-24T23:38:38Z", "author": {"login": "yingsu00"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/BlockEncodingBuffer.java", "diffHunk": "@@ -50,8 +50,9 @@\n \n     /**\n      * Signals that this is the last batch in this page, so that the internal buffers in BlockEncodingBuffers can recycled.\n+     * @param bufferFull\n      */\n-    void noMoreBatches();\n+    void noMoreBatches(boolean bufferFull);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyOTUzNQ=="}, "originalCommit": {"oid": "b955c4f4b6668f3e6696bfd7460ca13b44a19dc0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzMTAyMw==", "bodyText": "@yingsu00 Thanks for explaining. Sounds like the object itself can figure out whether bufferFull is true or not, e.g. it can set a internal flag in resetBuffer, use it in noMoreBatches and reset it in setupDecodedBlocksAndPositions.", "url": "https://github.com/prestodb/presto/pull/14286#discussion_r397531023", "createdAt": "2020-03-24T23:53:07Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/BlockEncodingBuffer.java", "diffHunk": "@@ -50,8 +50,9 @@\n \n     /**\n      * Signals that this is the last batch in this page, so that the internal buffers in BlockEncodingBuffers can recycled.\n+     * @param bufferFull\n      */\n-    void noMoreBatches();\n+    void noMoreBatches(boolean bufferFull);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyOTUzNQ=="}, "originalCommit": {"oid": "b955c4f4b6668f3e6696bfd7460ca13b44a19dc0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNDAwNg==", "bodyText": "@mbasmanova I see. This requires adding an internal flag in AbstractBlockEncodingBuffer to signal if the buffers are just flushed or not. I'll make the change as you suggested.", "url": "https://github.com/prestodb/presto/pull/14286#discussion_r397534006", "createdAt": "2020-03-25T00:02:25Z", "author": {"login": "yingsu00"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/BlockEncodingBuffer.java", "diffHunk": "@@ -50,8 +50,9 @@\n \n     /**\n      * Signals that this is the last batch in this page, so that the internal buffers in BlockEncodingBuffers can recycled.\n+     * @param bufferFull\n      */\n-    void noMoreBatches();\n+    void noMoreBatches(boolean bufferFull);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyOTUzNQ=="}, "originalCommit": {"oid": "b955c4f4b6668f3e6696bfd7460ca13b44a19dc0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU1NDk1Nw==", "bodyText": "@mbasmanova I just updated the PR using the way you suggested. One thing to mention is that I realized that we can't reset the flushed flag in setupDecodedBlocksAndPositions(), but instead, it has to be reset at the beginning of the do...while loop e.g. setNextBatch. Every batch needs to begin with the not-flushed state. Other than this, other changes were the same as you suggested. Thanks for reviewing and bringing up the valuable suggestion!", "url": "https://github.com/prestodb/presto/pull/14286#discussion_r397554957", "createdAt": "2020-03-25T01:14:34Z", "author": {"login": "yingsu00"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/BlockEncodingBuffer.java", "diffHunk": "@@ -50,8 +50,9 @@\n \n     /**\n      * Signals that this is the last batch in this page, so that the internal buffers in BlockEncodingBuffers can recycled.\n+     * @param bufferFull\n      */\n-    void noMoreBatches();\n+    void noMoreBatches(boolean bufferFull);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyOTUzNQ=="}, "originalCommit": {"oid": "b955c4f4b6668f3e6696bfd7460ca13b44a19dc0"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDk2ODgxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/LongArrayBlockEncodingBuffer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0MDo1NlrOF8HXlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzozNToxMVrOF8eMyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU3OTYwNA==", "bodyText": "@yingsu00 debugging leftovers?", "url": "https://github.com/prestodb/presto/pull/14286#discussion_r398579604", "createdAt": "2020-03-26T13:40:56Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/LongArrayBlockEncodingBuffer.java", "diffHunk": "@@ -72,7 +71,12 @@ public void serializeTo(SliceOutput output)\n         serializeNullsTo(output);\n \n         if (valuesBufferIndex > 0) {\n-            output.appendBytes(valuesBuffer, 0, valuesBufferIndex);\n+            try {\n+                output.appendBytes(valuesBuffer, 0, valuesBufferIndex);\n+            }\n+            catch (Exception e) {\n+                e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c492bc6bf5a6c8d435115430a494fb808fb82aed"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk1MzY3Mg==", "bodyText": "@mbasmanova Yes, I'm sorry about it. I checked there're no other debugging leftovers in this PR. Thanks for catching this!", "url": "https://github.com/prestodb/presto/pull/14286#discussion_r398953672", "createdAt": "2020-03-26T23:35:11Z", "author": {"login": "yingsu00"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/LongArrayBlockEncodingBuffer.java", "diffHunk": "@@ -72,7 +71,12 @@ public void serializeTo(SliceOutput output)\n         serializeNullsTo(output);\n \n         if (valuesBufferIndex > 0) {\n-            output.appendBytes(valuesBuffer, 0, valuesBufferIndex);\n+            try {\n+                output.appendBytes(valuesBuffer, 0, valuesBufferIndex);\n+            }\n+            catch (Exception e) {\n+                e.printStackTrace();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU3OTYwNA=="}, "originalCommit": {"oid": "c492bc6bf5a6c8d435115430a494fb808fb82aed"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTExOTQ2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/VariableWidthBlockEncodingBuffer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjozNjo1NlrOF8vQ6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjozNjo1NlrOF8vQ6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzMzI1OQ==", "bodyText": "nit: consider adding a helper method to reduce copy-paste\nsliceBuffer = returnArray(sliceBuffer, bufferAllocator);\n\n\nint[] returnArray(int[] array, ArrayAllocator arrayAllocator)\n{\n   if (array != null) {\n       arrayAllocator.returnArray(array);\n   }\n   return null;\n}", "url": "https://github.com/prestodb/presto/pull/14286#discussion_r399233259", "createdAt": "2020-03-27T12:36:56Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/VariableWidthBlockEncodingBuffer.java", "diffHunk": "@@ -125,16 +124,32 @@ public void resetBuffers()\n         sliceBufferIndex = 0;\n         offsetsBufferIndex = 0;\n         lastOffset = 0;\n+        flushed = true;\n         resetNullsBuffer();\n     }\n \n+    @Override\n+    public void noMoreBatches()\n+    {\n+        super.noMoreBatches();\n+\n+        if (flushed) {\n+            if (sliceBuffer != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edb40d5607f1e15c06c3d343b1638875b77f5286"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2937, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}