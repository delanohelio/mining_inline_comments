{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMTgyNTk4", "number": 13946, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMzo0NTo1M1rODXTAmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMzo0NTo1M1rODXTAmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzU1MjkxOnYy", "diffSide": "RIGHT", "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMzo0NTo1M1rOFcit-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwMDo0MDozMFrOFcjQnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3MzI3Mw==", "bodyText": "Why have this in place of the default constructor. The arguments are the same. We can still have a PrestoExceptionClassifier.default() method for the default methods.", "url": "https://github.com/prestodb/presto/pull/13946#discussion_r365473273", "createdAt": "2020-01-10T23:45:53Z", "author": {"login": "mayankgarg1990"}, "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "diffHunk": "@@ -104,20 +106,23 @@\n     private final Map<Integer, ErrorCodeSupplier> errorByCode;\n     private final Set<ErrorCodeSupplier> retryableErrors;\n \n-    public PrestoExceptionClassifier(\n-            Set<ErrorCodeSupplier> additionalErrors,\n-            Set<ErrorCodeSupplier> additionalRetryableErrors)\n+    private PrestoExceptionClassifier(Set<ErrorCodeSupplier> recognizedErrors, Set<ErrorCodeSupplier> retryableErrors)\n     {\n-        this.errorByCode = ImmutableSet.<ErrorCodeSupplier>builder()\n-                .addAll(DEFAULT_ERRORS)\n-                .addAll(additionalErrors)\n-                .build()\n-                .stream()\n+        this.errorByCode = recognizedErrors.stream()\n                 .collect(toImmutableMap(errorCode -> errorCode.toErrorCode().getCode(), identity()));\n-        this.retryableErrors = ImmutableSet.<ErrorCodeSupplier>builder()\n-                .addAll(DEFAULT_RETRYABLE_ERRORS)\n-                .addAll(additionalRetryableErrors)\n-                .build();\n+        this.retryableErrors = ImmutableSet.copyOf(retryableErrors);\n+    }\n+\n+    public static PrestoExceptionClassifier createDefault()\n+    {\n+        return create(DEFAULT_ERRORS, DEFAULT_RETRYABLE_ERRORS);\n+    }\n+\n+    public static PrestoExceptionClassifier create(Set<ErrorCodeSupplier> recognizedErrors, Set<ErrorCodeSupplier> retryableErrors)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2dc929a06a726de70c6f2da66ac4999612781dc"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ4MjE0Mw==", "bodyText": "We can do either, but I think usually when we use factory constructor for a class, we make the constructor private and require construction only through the factory constructors, instead of allowing a mix of regular constructors and factory constructors.", "url": "https://github.com/prestodb/presto/pull/13946#discussion_r365482143", "createdAt": "2020-01-11T00:40:30Z", "author": {"login": "caithagoras"}, "path": "presto-verifier/src/main/java/com/facebook/presto/verifier/prestoaction/PrestoExceptionClassifier.java", "diffHunk": "@@ -104,20 +106,23 @@\n     private final Map<Integer, ErrorCodeSupplier> errorByCode;\n     private final Set<ErrorCodeSupplier> retryableErrors;\n \n-    public PrestoExceptionClassifier(\n-            Set<ErrorCodeSupplier> additionalErrors,\n-            Set<ErrorCodeSupplier> additionalRetryableErrors)\n+    private PrestoExceptionClassifier(Set<ErrorCodeSupplier> recognizedErrors, Set<ErrorCodeSupplier> retryableErrors)\n     {\n-        this.errorByCode = ImmutableSet.<ErrorCodeSupplier>builder()\n-                .addAll(DEFAULT_ERRORS)\n-                .addAll(additionalErrors)\n-                .build()\n-                .stream()\n+        this.errorByCode = recognizedErrors.stream()\n                 .collect(toImmutableMap(errorCode -> errorCode.toErrorCode().getCode(), identity()));\n-        this.retryableErrors = ImmutableSet.<ErrorCodeSupplier>builder()\n-                .addAll(DEFAULT_RETRYABLE_ERRORS)\n-                .addAll(additionalRetryableErrors)\n-                .build();\n+        this.retryableErrors = ImmutableSet.copyOf(retryableErrors);\n+    }\n+\n+    public static PrestoExceptionClassifier createDefault()\n+    {\n+        return create(DEFAULT_ERRORS, DEFAULT_RETRYABLE_ERRORS);\n+    }\n+\n+    public static PrestoExceptionClassifier create(Set<ErrorCodeSupplier> recognizedErrors, Set<ErrorCodeSupplier> retryableErrors)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3MzI3Mw=="}, "originalCommit": {"oid": "b2dc929a06a726de70c6f2da66ac4999612781dc"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2147, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}