{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMDYyNDE5", "number": 15444, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMTowMjowNlrOE6w5mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzozNjoyNlrOE7KrFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDU0MDQzOnYy", "diffSide": "RIGHT", "path": "presto-common/src/main/java/com/facebook/presto/common/type/LongEnumType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMTowMjowNlrOH2CAbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMTowMjowNlrOH2CAbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxODAzMQ==", "bodyText": "If you want to further improve the performance, we can make this map lazily instantiated. Add an AtomicBoolean to mark whether the map is instantiated, and create it on first call of getKeyForValue. That way, if the query doesn't need it, you don't need to create this.", "url": "https://github.com/prestodb/presto/pull/15444#discussion_r526418031", "createdAt": "2020-11-18T21:02:06Z", "author": {"login": "rongrong"}, "path": "presto-common/src/main/java/com/facebook/presto/common/type/LongEnumType.java", "diffHunk": "@@ -72,12 +80,15 @@ public String getDisplayName()\n     public static class LongEnumMap\n     {\n         private final Map<String, Long> enumMap;\n+        private final Map<Long, String> flippedEnumMap;\n \n         @JsonCreator\n         public LongEnumMap(@JsonProperty(\"enumMap\") Map<String, Long> enumMap)\n         {\n             validateEnumMap(enumMap);\n             this.enumMap = normalizeEnumMap(enumMap);\n+            this.flippedEnumMap = this.enumMap.entrySet().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5128f2e660d2ffdff9f6e221451b113d1f3f7b9"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDczOTM5OnYy", "diffSide": "RIGHT", "path": "presto-common/src/main/java/com/facebook/presto/common/type/LongEnumType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzozMDozOVrOH2pyiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTozNjowN1rOH2yq_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA2OTgzMw==", "bodyText": "You can simply use the existing guava feature.\nprivate Supplier<Map<Long, String>> flippedEnumMap = Supplier.memorize(this::getKeyForValue);\naccording to its Javadoc\n\nReturns a supplier which caches the instance retrieved during the first call to {@code get()} and returns that value on subsequent calls to {@code get()}", "url": "https://github.com/prestodb/presto/pull/15444#discussion_r527069833", "createdAt": "2020-11-19T17:30:39Z", "author": {"login": "caithagoras"}, "path": "presto-common/src/main/java/com/facebook/presto/common/type/LongEnumType.java", "diffHunk": "@@ -72,12 +81,15 @@ public String getDisplayName()\n     public static class LongEnumMap\n     {\n         private final Map<String, Long> enumMap;\n+        private Map<Long, String> flippedEnumMap;\n+        private final AtomicBoolean isFlippedEnumComputed = new AtomicBoolean();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a377190c7bf4193740ce6dfe448c5c7a0ded6d41"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIxNTM1OA==", "bodyText": "same problem there \u2013 guava isn't a runtime dependency of presto-common", "url": "https://github.com/prestodb/presto/pull/15444#discussion_r527215358", "createdAt": "2020-11-19T21:36:07Z", "author": {"login": "daniel-ohayon"}, "path": "presto-common/src/main/java/com/facebook/presto/common/type/LongEnumType.java", "diffHunk": "@@ -72,12 +81,15 @@ public String getDisplayName()\n     public static class LongEnumMap\n     {\n         private final Map<String, Long> enumMap;\n+        private Map<Long, String> flippedEnumMap;\n+        private final AtomicBoolean isFlippedEnumComputed = new AtomicBoolean();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA2OTgzMw=="}, "originalCommit": {"oid": "a377190c7bf4193740ce6dfe448c5c7a0ded6d41"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDc2MzExOnYy", "diffSide": "RIGHT", "path": "presto-common/src/main/java/com/facebook/presto/common/type/LongEnumType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzozNjoyNlrOH2qBPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTozNDoxMFrOH2yjsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3MzU5Nw==", "bodyText": "Have we considered using a BiMap? e.g. ImmutableBiMap.", "url": "https://github.com/prestodb/presto/pull/15444#discussion_r527073597", "createdAt": "2020-11-19T17:36:26Z", "author": {"login": "caithagoras"}, "path": "presto-common/src/main/java/com/facebook/presto/common/type/LongEnumType.java", "diffHunk": "@@ -72,12 +81,15 @@ public String getDisplayName()\n     public static class LongEnumMap\n     {\n         private final Map<String, Long> enumMap;\n+        private Map<Long, String> flippedEnumMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a377190c7bf4193740ce6dfe448c5c7a0ded6d41"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIxMzQ5MA==", "bodyText": "I tried that but that requires adding a maven dependency, and since this code lives in presto-common, that is not desirable", "url": "https://github.com/prestodb/presto/pull/15444#discussion_r527213490", "createdAt": "2020-11-19T21:34:10Z", "author": {"login": "daniel-ohayon"}, "path": "presto-common/src/main/java/com/facebook/presto/common/type/LongEnumType.java", "diffHunk": "@@ -72,12 +81,15 @@ public String getDisplayName()\n     public static class LongEnumMap\n     {\n         private final Map<String, Long> enumMap;\n+        private Map<Long, String> flippedEnumMap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3MzU5Nw=="}, "originalCommit": {"oid": "a377190c7bf4193740ce6dfe448c5c7a0ded6d41"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3402, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}