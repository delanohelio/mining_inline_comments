{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NjIxMjQ4", "number": 15509, "title": "More lock contention reductions", "bodyText": "Continues lock contention reductions from #15477\nSeven commits:\n\nCache isBlocked future in various operators to avoid repeatedly contending for locks and potentially registering new callbacks once those operators are blocked\nAdd unsynchronized fast-paths in ExchangeClient to avoid unnecessary contention\nRefactor ExchangeClient#pollPage to avoid redundant checks and synchronizations\nUse AtomicIntegerFieldUpdater for local exchange PageReference\nReduce synchronization in LocalExchangeMemoryManager by making unblocking an edge-triggered event that only a single caller initiates.\nAdd unsynchronized common-case fast paths in LocalExchangeSource\nRemove synchronized for final field read in MemoryPool#getMaxBytes()\n\n== NO RELEASE NOTE ==", "createdAt": "2020-12-08T17:53:02Z", "url": "https://github.com/prestodb/presto/pull/15509", "merged": true, "mergeCommit": {"oid": "11671e6a1f4b31a32c17d7b655e838e11106682a"}, "closed": true, "closedAt": "2021-01-12T05:06:01Z", "author": {"login": "pettyjamesm"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkS2KzABqjQwODcyNDEwNDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdvLJMAABqjQxOTIyODQyMjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "757f2bb96e7dd9e953ba6890af6959daf9e8d4af", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/757f2bb96e7dd9e953ba6890af6959daf9e8d4af", "committedDate": "2020-12-08T17:48:58Z", "message": "Add unsynchronized fast paths to reduce contention in ExchangeClient"}, "afterCommit": {"oid": "f8c71709b2a9ed6237b971e948c29abfaf12f3a0", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/f8c71709b2a9ed6237b971e948c29abfaf12f3a0", "committedDate": "2020-12-08T23:32:58Z", "message": "Reduce synchronization in LocalExchangeMemoryManager"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f8c71709b2a9ed6237b971e948c29abfaf12f3a0", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/f8c71709b2a9ed6237b971e948c29abfaf12f3a0", "committedDate": "2020-12-08T23:32:58Z", "message": "Reduce synchronization in LocalExchangeMemoryManager"}, "afterCommit": {"oid": "d4182bb3a21227a064a2cff596cc796d778c8ec4", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/d4182bb3a21227a064a2cff596cc796d778c8ec4", "committedDate": "2020-12-09T13:39:18Z", "message": "Reduce synchronization in LocalExchangeMemoryManager"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4182bb3a21227a064a2cff596cc796d778c8ec4", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/d4182bb3a21227a064a2cff596cc796d778c8ec4", "committedDate": "2020-12-09T13:39:18Z", "message": "Reduce synchronization in LocalExchangeMemoryManager"}, "afterCommit": {"oid": "3dca8fd7d5bbf0941cf151113038d849ec505e80", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/3dca8fd7d5bbf0941cf151113038d849ec505e80", "committedDate": "2020-12-09T15:26:42Z", "message": "Reduce synchronization in LocalExchangeMemoryManager"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3dca8fd7d5bbf0941cf151113038d849ec505e80", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/3dca8fd7d5bbf0941cf151113038d849ec505e80", "committedDate": "2020-12-09T15:26:42Z", "message": "Reduce synchronization in LocalExchangeMemoryManager"}, "afterCommit": {"oid": "58a339c3365f9e430590235ffa11496e548981e4", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/58a339c3365f9e430590235ffa11496e548981e4", "committedDate": "2020-12-09T17:19:49Z", "message": "Reduce synchronization in LocalExchangeMemoryManager"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5671e141be0b7d5e626e98f1028c2ccd00803e03", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/5671e141be0b7d5e626e98f1028c2ccd00803e03", "committedDate": "2020-12-09T19:16:14Z", "message": "Improve LocalExchangeSource locking behaviors\n\nAdds an unsynchronized fast path to LocalExchangeSource#waitForReading()\nand removes usages of LinkedBlockingQueue#isEmpty() which is implemented\nas LinkedBlockingQueue#size() == 0 under the hood. Also removes an\nunnecessary \"lock\" object which was obscuring this particular contention\npoint in profiling originally."}, "afterCommit": {"oid": "fb474a90ff6eb63c16f54e8050a87ead2fe56dd6", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/fb474a90ff6eb63c16f54e8050a87ead2fe56dd6", "committedDate": "2020-12-09T20:14:10Z", "message": "Improve LocalExchangeSource locking behaviors\n\nAdds an unsynchronized fast path to LocalExchangeSource#waitForReading()\nand removes usages of LinkedBlockingQueue#isEmpty() which is implemented\nas LinkedBlockingQueue#size() == 0 under the hood. Also removes an\nunnecessary \"lock\" object which was obscuring this particular contention\npoint in profiling originally."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fb474a90ff6eb63c16f54e8050a87ead2fe56dd6", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/fb474a90ff6eb63c16f54e8050a87ead2fe56dd6", "committedDate": "2020-12-09T20:14:10Z", "message": "Improve LocalExchangeSource locking behaviors\n\nAdds an unsynchronized fast path to LocalExchangeSource#waitForReading()\nand removes usages of LinkedBlockingQueue#isEmpty() which is implemented\nas LinkedBlockingQueue#size() == 0 under the hood. Also removes an\nunnecessary \"lock\" object which was obscuring this particular contention\npoint in profiling originally."}, "afterCommit": {"oid": "eccc257857050f3710a243db102fb48305fad889", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/eccc257857050f3710a243db102fb48305fad889", "committedDate": "2020-12-11T15:06:19Z", "message": "Improve LocalExchangeSource locking behaviors\n\nAdds an unsynchronized fast path to LocalExchangeSource#waitForReading()\nand removes usages of LinkedBlockingQueue#isEmpty() which is implemented\nas LinkedBlockingQueue#size() == 0 under the hood. Also removes an\nunnecessary \"lock\" object which was obscuring this particular contention\npoint in profiling originally."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eccc257857050f3710a243db102fb48305fad889", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/eccc257857050f3710a243db102fb48305fad889", "committedDate": "2020-12-11T15:06:19Z", "message": "Improve LocalExchangeSource locking behaviors\n\nAdds an unsynchronized fast path to LocalExchangeSource#waitForReading()\nand removes usages of LinkedBlockingQueue#isEmpty() which is implemented\nas LinkedBlockingQueue#size() == 0 under the hood. Also removes an\nunnecessary \"lock\" object which was obscuring this particular contention\npoint in profiling originally."}, "afterCommit": {"oid": "6b490fb9c9840b235d4ccb177ca7d91898eaae63", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/6b490fb9c9840b235d4ccb177ca7d91898eaae63", "committedDate": "2020-12-11T15:19:58Z", "message": "Improve LocalExchangeSource locking behaviors\n\nAdds an unsynchronized fast path to LocalExchangeSource#waitForReading()\nand removes usages of LinkedBlockingQueue#isEmpty() which is implemented\nas LinkedBlockingQueue#size() == 0 under the hood. Also removes an\nunnecessary \"lock\" object which was obscuring this particular contention\npoint in profiling originally."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b490fb9c9840b235d4ccb177ca7d91898eaae63", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/6b490fb9c9840b235d4ccb177ca7d91898eaae63", "committedDate": "2020-12-11T15:19:58Z", "message": "Improve LocalExchangeSource locking behaviors\n\nAdds an unsynchronized fast path to LocalExchangeSource#waitForReading()\nand removes usages of LinkedBlockingQueue#isEmpty() which is implemented\nas LinkedBlockingQueue#size() == 0 under the hood. Also removes an\nunnecessary \"lock\" object which was obscuring this particular contention\npoint in profiling originally."}, "afterCommit": {"oid": "ada05e5a6ca7113a8907ad17013c990fdcaa3801", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/ada05e5a6ca7113a8907ad17013c990fdcaa3801", "committedDate": "2020-12-14T18:37:28Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ada05e5a6ca7113a8907ad17013c990fdcaa3801", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/ada05e5a6ca7113a8907ad17013c990fdcaa3801", "committedDate": "2020-12-14T18:37:28Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}, "afterCommit": {"oid": "5dc1615a2c8b1cfd7fe9780faa4f51d66d42d36e", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/5dc1615a2c8b1cfd7fe9780faa4f51d66d42d36e", "committedDate": "2020-12-16T17:47:49Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5dc1615a2c8b1cfd7fe9780faa4f51d66d42d36e", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/5dc1615a2c8b1cfd7fe9780faa4f51d66d42d36e", "committedDate": "2020-12-16T17:47:49Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}, "afterCommit": {"oid": "90a4bd9134ccf06420b00eeff224481546da37fc", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/90a4bd9134ccf06420b00eeff224481546da37fc", "committedDate": "2020-12-16T18:00:52Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "90a4bd9134ccf06420b00eeff224481546da37fc", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/90a4bd9134ccf06420b00eeff224481546da37fc", "committedDate": "2020-12-16T18:00:52Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}, "afterCommit": {"oid": "1b1b79a7b9e8774f84b6115ab3ad045769b459f1", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/1b1b79a7b9e8774f84b6115ab3ad045769b459f1", "committedDate": "2020-12-16T18:05:18Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b1b79a7b9e8774f84b6115ab3ad045769b459f1", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/1b1b79a7b9e8774f84b6115ab3ad045769b459f1", "committedDate": "2020-12-16T18:05:18Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}, "afterCommit": {"oid": "d1b44fea810e0feadce1ac6aad9e53d85cf52b02", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/d1b44fea810e0feadce1ac6aad9e53d85cf52b02", "committedDate": "2020-12-16T19:23:51Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d1b44fea810e0feadce1ac6aad9e53d85cf52b02", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/d1b44fea810e0feadce1ac6aad9e53d85cf52b02", "committedDate": "2020-12-16T19:23:51Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}, "afterCommit": {"oid": "37dcb74aaa7e8b3467fcccea79df2542072a6316", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/37dcb74aaa7e8b3467fcccea79df2542072a6316", "committedDate": "2020-12-21T16:05:46Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37dcb74aaa7e8b3467fcccea79df2542072a6316", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/37dcb74aaa7e8b3467fcccea79df2542072a6316", "committedDate": "2020-12-21T16:05:46Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}, "afterCommit": {"oid": "32a80b3448cf5e729dbb4846301c85041639d88f", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/32a80b3448cf5e729dbb4846301c85041639d88f", "committedDate": "2020-12-22T16:32:02Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32a80b3448cf5e729dbb4846301c85041639d88f", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/32a80b3448cf5e729dbb4846301c85041639d88f", "committedDate": "2020-12-22T16:32:02Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}, "afterCommit": {"oid": "f13bd48f9860d4f7d22af4effe044345c8961759", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/f13bd48f9860d4f7d22af4effe044345c8961759", "committedDate": "2021-01-05T19:11:59Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f13bd48f9860d4f7d22af4effe044345c8961759", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/f13bd48f9860d4f7d22af4effe044345c8961759", "committedDate": "2021-01-05T19:11:59Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}, "afterCommit": {"oid": "8f752c536ca85634df2eec5f6b2ad8dedac67601", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/8f752c536ca85634df2eec5f6b2ad8dedac67601", "committedDate": "2021-01-06T16:02:29Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f752c536ca85634df2eec5f6b2ad8dedac67601", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/8f752c536ca85634df2eec5f6b2ad8dedac67601", "committedDate": "2021-01-06T16:02:29Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}, "afterCommit": {"oid": "48b0a366d11de4c7ea08a68e152ad44ff6f6dd00", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/48b0a366d11de4c7ea08a68e152ad44ff6f6dd00", "committedDate": "2021-01-06T16:21:29Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjEyMjM2", "url": "https://github.com/prestodb/presto/pull/15509#pullrequestreview-561212236", "createdAt": "2021-01-04T17:38:17Z", "commit": {"oid": "9fe7d4e3ecba9b779721c24b75e57322a9996adc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNzozODoxN1rOIN6sOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxODoxODoxM1rOIPRPCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ2Mzk5NQ==", "bodyText": "Wondering why this isn't volatile? Are multi-field objects a case where unsafe publishing is a good idea?\nWith primitives, yeah I get it's just about physically impossible for the value to not eventually propagate and propagate atomically because it's word sized, but that isn't the case for references to objects as the stores for their contents can be out of order with publishing the reference.", "url": "https://github.com/prestodb/presto/pull/15509#discussion_r551463995", "createdAt": "2021-01-04T17:38:17Z", "author": {"login": "aweisberg"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java", "diffHunk": "@@ -92,6 +92,7 @@ public void noMoreOperators()\n     private final PlanNodeId sourceId;\n     private final ExchangeClient exchangeClient;\n     private final PagesSerde serde;\n+    private ListenableFuture<?> isBlocked = NOT_BLOCKED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe7d4e3ecba9b779721c24b75e57322a9996adc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ2NTI0NQ==", "bodyText": "Do you need to check this at all before calculating the size? Since it is checked in the synchronized block anyways?\nClosed and failed are rare events.", "url": "https://github.com/prestodb/presto/pull/15509#discussion_r551465245", "createdAt": "2021-01-04T17:40:48Z", "author": {"login": "aweisberg"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/ExchangeClient.java", "diffHunk": "@@ -404,50 +404,66 @@ public synchronized void scheduleRequestIfNecessary()\n         }\n     }\n \n-    public synchronized ListenableFuture<?> isBlocked()\n+    public ListenableFuture<?> isBlocked()\n     {\n+        //  Fast path return without synchronizing\n         if (isClosed() || isFailed() || pageBuffer.peek() != null) {\n             return Futures.immediateFuture(true);\n         }\n-        SettableFuture<?> future = SettableFuture.create();\n-        blockedCallers.add(future);\n-        return future;\n+        synchronized (this) {\n+            //  Re-check after synchronizing\n+            if (isClosed() || isFailed() || pageBuffer.peek() != null) {\n+                return Futures.immediateFuture(true);\n+            }\n+            SettableFuture<?> future = SettableFuture.create();\n+            blockedCallers.add(future);\n+            return future;\n+        }\n     }\n \n-    private synchronized boolean addPages(List<SerializedPage> pages)\n+    private boolean addPages(List<SerializedPage> pages)\n     {\n+        //  Fast path return\n         if (isClosed() || isFailed()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbfe576cb6cd0229361aa59a4855ecfff18e3eef"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ2NjkyOA==", "bodyText": "Notify blocked callers also synchronizes on this so now it has to re-acquire the lock?", "url": "https://github.com/prestodb/presto/pull/15509#discussion_r551466928", "createdAt": "2021-01-04T17:44:15Z", "author": {"login": "aweisberg"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/ExchangeClient.java", "diffHunk": "@@ -404,50 +404,66 @@ public synchronized void scheduleRequestIfNecessary()\n         }\n     }\n \n-    public synchronized ListenableFuture<?> isBlocked()\n+    public ListenableFuture<?> isBlocked()\n     {\n+        //  Fast path return without synchronizing\n         if (isClosed() || isFailed() || pageBuffer.peek() != null) {\n             return Futures.immediateFuture(true);\n         }\n-        SettableFuture<?> future = SettableFuture.create();\n-        blockedCallers.add(future);\n-        return future;\n+        synchronized (this) {\n+            //  Re-check after synchronizing\n+            if (isClosed() || isFailed() || pageBuffer.peek() != null) {\n+                return Futures.immediateFuture(true);\n+            }\n+            SettableFuture<?> future = SettableFuture.create();\n+            blockedCallers.add(future);\n+            return future;\n+        }\n     }\n \n-    private synchronized boolean addPages(List<SerializedPage> pages)\n+    private boolean addPages(List<SerializedPage> pages)\n     {\n+        //  Fast path return\n         if (isClosed() || isFailed()) {\n             return false;\n         }\n \n-        pageBuffer.addAll(pages);\n+        //  Compute stats before acquiring the lock\n+        long pagesRetainedSizeInBytes = 0;\n+        long responseSize = 0;\n+        for (SerializedPage page : pages) {\n+            pagesRetainedSizeInBytes += page.getRetainedSizeInBytes();\n+            responseSize += page.getSizeInBytes();\n+        }\n+\n+        synchronized (this) {\n+            //  Re-check after lock is acquired\n+            if (isClosed() || isFailed()) {\n+                return false;\n+            }\n+\n+            pageBuffer.addAll(pages);\n \n+            bufferRetainedSizeInBytes += pagesRetainedSizeInBytes;\n+            maxBufferRetainedSizeInBytes = max(maxBufferRetainedSizeInBytes, bufferRetainedSizeInBytes);\n+            successfulRequests++;\n+            responseSizeExponentialMovingAverage.update(responseSize);\n+            systemMemoryContext.setBytes(bufferRetainedSizeInBytes);\n+        }\n         if (!pages.isEmpty()) {\n             // notify all blocked callers\n             notifyBlockedCallers();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbfe576cb6cd0229361aa59a4855ecfff18e3eef"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ2OTc3Ng==", "bodyText": "This is a bit different now in that there can be several threads attempting to notify blocked callers in different orders with different sets of blocked callers. Is that OK? Really hard to reason about without knowing how tolerant blocked callers are of being woken up in different orders.\nSeems like they want to pull data so it is fine for them to come up empty?", "url": "https://github.com/prestodb/presto/pull/15509#discussion_r551469776", "createdAt": "2021-01-04T17:49:36Z", "author": {"login": "aweisberg"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/ExchangeClient.java", "diffHunk": "@@ -404,50 +404,66 @@ public synchronized void scheduleRequestIfNecessary()\n         }\n     }\n \n-    public synchronized ListenableFuture<?> isBlocked()\n+    public ListenableFuture<?> isBlocked()\n     {\n+        //  Fast path return without synchronizing\n         if (isClosed() || isFailed() || pageBuffer.peek() != null) {\n             return Futures.immediateFuture(true);\n         }\n-        SettableFuture<?> future = SettableFuture.create();\n-        blockedCallers.add(future);\n-        return future;\n+        synchronized (this) {\n+            //  Re-check after synchronizing\n+            if (isClosed() || isFailed() || pageBuffer.peek() != null) {\n+                return Futures.immediateFuture(true);\n+            }\n+            SettableFuture<?> future = SettableFuture.create();\n+            blockedCallers.add(future);\n+            return future;\n+        }\n     }\n \n-    private synchronized boolean addPages(List<SerializedPage> pages)\n+    private boolean addPages(List<SerializedPage> pages)\n     {\n+        //  Fast path return\n         if (isClosed() || isFailed()) {\n             return false;\n         }\n \n-        pageBuffer.addAll(pages);\n+        //  Compute stats before acquiring the lock\n+        long pagesRetainedSizeInBytes = 0;\n+        long responseSize = 0;\n+        for (SerializedPage page : pages) {\n+            pagesRetainedSizeInBytes += page.getRetainedSizeInBytes();\n+            responseSize += page.getSizeInBytes();\n+        }\n+\n+        synchronized (this) {\n+            //  Re-check after lock is acquired\n+            if (isClosed() || isFailed()) {\n+                return false;\n+            }\n+\n+            pageBuffer.addAll(pages);\n \n+            bufferRetainedSizeInBytes += pagesRetainedSizeInBytes;\n+            maxBufferRetainedSizeInBytes = max(maxBufferRetainedSizeInBytes, bufferRetainedSizeInBytes);\n+            successfulRequests++;\n+            responseSizeExponentialMovingAverage.update(responseSize);\n+            systemMemoryContext.setBytes(bufferRetainedSizeInBytes);\n+        }\n         if (!pages.isEmpty()) {\n             // notify all blocked callers\n             notifyBlockedCallers();\n         }\n-\n-        long pagesRetainedSizeInBytes = pages.stream()\n-                .mapToLong(SerializedPage::getRetainedSizeInBytes)\n-                .sum();\n-\n-        bufferRetainedSizeInBytes += pagesRetainedSizeInBytes;\n-        maxBufferRetainedSizeInBytes = max(maxBufferRetainedSizeInBytes, bufferRetainedSizeInBytes);\n-        systemMemoryContext.setBytes(bufferRetainedSizeInBytes);\n-        successfulRequests++;\n-\n-        long responseSize = pages.stream()\n-                .mapToLong(SerializedPage::getSizeInBytes)\n-                .sum();\n-        responseSizeExponentialMovingAverage.update(responseSize);\n-\n         return true;\n     }\n \n-    private synchronized void notifyBlockedCallers()\n+    private void notifyBlockedCallers()\n     {\n-        List<SettableFuture<?>> callers = ImmutableList.copyOf(blockedCallers);\n-        blockedCallers.clear();\n+        List<SettableFuture<?>> callers;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbfe576cb6cd0229361aa59a4855ecfff18e3eef"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ3NDY2Mw==", "bodyText": "This change doesn't look very controversial, LGTM.", "url": "https://github.com/prestodb/presto/pull/15509#discussion_r551474663", "createdAt": "2021-01-04T17:58:46Z", "author": {"login": "aweisberg"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/exchange/BroadcastExchanger.java", "diffHunk": "@@ -19,6 +19,7 @@\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bd7bd4a5d6a1485b6d312701bf025fe5cd9bd69"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU1OTk4NQ==", "bodyText": "This change seems not very controversial to me.", "url": "https://github.com/prestodb/presto/pull/15509#discussion_r551559985", "createdAt": "2021-01-04T20:47:49Z", "author": {"login": "aweisberg"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/exchange/LocalExchangeMemoryManager.java", "diffHunk": "@@ -16,28 +16,26 @@\n import com.google.common.util.concurrent.ListenableFuture;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22f80c425c2192cf76fbb6cfdf892e69d2870b3c"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU2MzMzOQ==", "bodyText": "In some ways this feels a bit copy-pasta heavy. Not sure if it is better/worse to try and shoe-horn things into the base class.", "url": "https://github.com/prestodb/presto/pull/15509#discussion_r551563339", "createdAt": "2021-01-04T20:55:02Z", "author": {"login": "aweisberg"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java", "diffHunk": "@@ -92,6 +92,7 @@ public void noMoreOperators()\n     private final PlanNodeId sourceId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe7d4e3ecba9b779721c24b75e57322a9996adc"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg4MTkzMQ==", "bodyText": "Not controversial either. But do the changes around managing the future have an impact? You are removing some volatile reads yes, but you are also adding conditional logic under the lock.", "url": "https://github.com/prestodb/presto/pull/15509#discussion_r552881931", "createdAt": "2021-01-06T18:18:13Z", "author": {"login": "aweisberg"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/exchange/LocalExchangeSource.java", "diffHunk": "@@ -19,6 +19,7 @@\n import com.google.common.util.concurrent.ListenableFuture;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ea85926d19184c3cc023bb75ceccc886a3a8e36"}, "originalPosition": 1}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "48b0a366d11de4c7ea08a68e152ad44ff6f6dd00", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/48b0a366d11de4c7ea08a68e152ad44ff6f6dd00", "committedDate": "2021-01-06T16:21:29Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}, "afterCommit": {"oid": "7b537aea72485f9fef74319f252259417fe7656f", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/7b537aea72485f9fef74319f252259417fe7656f", "committedDate": "2021-01-06T20:53:00Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b537aea72485f9fef74319f252259417fe7656f", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/7b537aea72485f9fef74319f252259417fe7656f", "committedDate": "2021-01-06T20:53:00Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}, "afterCommit": {"oid": "5027cdb12ca0d3f6e9603dd029e6faf871925744", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/5027cdb12ca0d3f6e9603dd029e6faf871925744", "committedDate": "2021-01-06T21:03:10Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzMDY3NTEy", "url": "https://github.com/prestodb/presto/pull/15509#pullrequestreview-563067512", "createdAt": "2021-01-06T22:04:28Z", "commit": {"oid": "5027cdb12ca0d3f6e9603dd029e6faf871925744"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebbda4670de2b7d9a2e83abaac13f68329ee086a", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/ebbda4670de2b7d9a2e83abaac13f68329ee086a", "committedDate": "2021-01-11T15:50:23Z", "message": "Cache isBlocked future in various operator implementations\n\nAvoids re-checking the same isBlocked condition when the operator\nblocks which reduces contention for locks and registering duplicate\nisBlocked callback events."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d28a0b16cd4377c9196155f95a1009000c5043d9", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/d28a0b16cd4377c9196155f95a1009000c5043d9", "committedDate": "2021-01-11T15:56:04Z", "message": "Add unsynchronized fast paths to reduce contention in ExchangeClient"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5027cdb12ca0d3f6e9603dd029e6faf871925744", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/5027cdb12ca0d3f6e9603dd029e6faf871925744", "committedDate": "2021-01-06T21:03:10Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}, "afterCommit": {"oid": "71af1e9ea09da8f5f93e8217341bc14d8500de6f", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/71af1e9ea09da8f5f93e8217341bc14d8500de6f", "committedDate": "2021-01-11T15:56:05Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ca13df409e24e13753aae8209625858afdf00a5", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/5ca13df409e24e13753aae8209625858afdf00a5", "committedDate": "2021-01-11T18:50:09Z", "message": "Refactor ExchangeClient#pollPage\n\nMerges ExchangeClient#postProcessPage into ExchangeClient#pollPage\n(its only usage) to avoid a redundant lock holder check, removes\na redundant peek into the pagesBuffer for NO_MORE_PAGES, and coalesces\nthe synchronized section of scheduleRequestIfNecessary into the\nsynchronized block that immediately preceeded it anyway"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "222bd3f72f2458fc3d14ee96f51162861c47a6b7", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/222bd3f72f2458fc3d14ee96f51162861c47a6b7", "committedDate": "2021-01-11T18:50:09Z", "message": "Use AtomicIntegerFieldUpdater for LocalExchange PageReference"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "046bf4b51d565781a0a45d0706443d3994b7f72b", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/046bf4b51d565781a0a45d0706443d3994b7f72b", "committedDate": "2021-01-11T18:50:09Z", "message": "Reduce synchronization in LocalExchangeMemoryManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "151b6758599765d537584f897e077fb7fcfba293", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/151b6758599765d537584f897e077fb7fcfba293", "committedDate": "2021-01-11T18:50:09Z", "message": "Improve LocalExchangeSource locking behaviors\n\nAdds an unsynchronized fast path to LocalExchangeSource#waitForReading()\nand LocalExchangeSource#isFinished(). Also removes an unnecessary \"lock\"\nObject which was obscuring this particular contention point in profiling\noriginally."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b1478ac641002ecdb6011a5a79c4e3cdf77ca38", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/6b1478ac641002ecdb6011a5a79c4e3cdf77ca38", "committedDate": "2021-01-11T18:50:09Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "71af1e9ea09da8f5f93e8217341bc14d8500de6f", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/71af1e9ea09da8f5f93e8217341bc14d8500de6f", "committedDate": "2021-01-11T15:56:05Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}, "afterCommit": {"oid": "6b1478ac641002ecdb6011a5a79c4e3cdf77ca38", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/6b1478ac641002ecdb6011a5a79c4e3cdf77ca38", "committedDate": "2021-01-11T18:50:09Z", "message": "Remove synchronized for final field read in MemoryPool#getMaxBytes()"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4531, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}