{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNzU4Nzg0", "number": 15438, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjo1ODoyNlrOE5QMmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjo1ODoyNlrOE5QMmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDY5NjU5OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/GenericAccumulatorFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjo1ODoyNlrOHzmxzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo0Nzo0M1rOH0KZnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg3NDc2Nw==", "bodyText": "Shall we check if this is safe to do so? If yes, make a comment above this line?", "url": "https://github.com/prestodb/presto/pull/15438#discussion_r523874767", "createdAt": "2020-11-16T02:58:26Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/GenericAccumulatorFactory.java", "diffHunk": "@@ -718,6 +719,7 @@ public void evaluateIntermediate(int groupId, BlockBuilder output)\n                 singleArrayBlockWriter.appendStructure(rowBlock.getBlock(i));\n             }\n             output.closeEntry();\n+            blockBuilders.set(groupId, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e56e03329e09be1053fa3b13ad9e667994163bd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1ODM5Nw==", "bodyText": "Yeah, I have deployed this to test clusters and this is safe. This is because\n\nevaluateIntermediate is only called once spilling is invoked (never before that point) I.e. SpillableHashAggregationBuilder.buildResult/spillToDisk() occurs. Once we do this, aggregation Step is set to PARTIAL.\nThen, we get the corresponding partial result for every aggregator by iterating over every groupId: https://fburl.com/kdl3hbhk. This groupId iterator is created in hashSortedGroupIds https://fburl.com/wrgy9wrc. As we can see in the line we are assigning each groupId an ordinal and it is impossible to have repeated groupIds in this list.\n\nWill add a comment.", "url": "https://github.com/prestodb/presto/pull/15438#discussion_r524458397", "createdAt": "2020-11-16T17:47:43Z", "author": {"login": "sachdevs"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/GenericAccumulatorFactory.java", "diffHunk": "@@ -718,6 +719,7 @@ public void evaluateIntermediate(int groupId, BlockBuilder output)\n                 singleArrayBlockWriter.appendStructure(rowBlock.getBlock(i));\n             }\n             output.closeEntry();\n+            blockBuilders.set(groupId, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg3NDc2Nw=="}, "originalCommit": {"oid": "7e56e03329e09be1053fa3b13ad9e667994163bd"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3394, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}