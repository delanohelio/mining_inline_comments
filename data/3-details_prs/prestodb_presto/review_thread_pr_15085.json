{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNjE3Mzcy", "number": 15085, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOTozODowM1rOEcuGiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOTozODowM1rOEcuGiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTUwOTIwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/dispatcher/LocalDispatchQuery.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOTozODowM1rOHHa8Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOTo0MTo0MVrOHHbD8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU0MzQ0Mw==", "bodyText": "can this just invoke the fail function?", "url": "https://github.com/prestodb/presto/pull/15085#discussion_r477543443", "createdAt": "2020-08-26T19:38:03Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/dispatcher/LocalDispatchQuery.java", "diffHunk": "@@ -71,14 +73,16 @@ public LocalDispatchQuery(\n             Consumer<QueryExecution> querySubmitter)\n     {\n         this.stateMachine = requireNonNull(stateMachine, \"stateMachine is null\");\n+        this.queryMonitor = requireNonNull(queryMonitor, \"queryMonitor is null\");\n         this.queryExecutionFuture = requireNonNull(queryExecutionFuture, \"queryExecutionFuture is null\");\n         this.clusterSizeMonitor = requireNonNull(clusterSizeMonitor, \"clusterSizeMonitor is null\");\n         this.queryExecutor = requireNonNull(queryExecutor, \"queryExecutor is null\");\n         this.querySubmitter = requireNonNull(querySubmitter, \"querySubmitter is null\");\n \n         addExceptionCallback(queryExecutionFuture, throwable -> {\n-            stateMachine.transitionToFailed(throwable);\n-            queryMonitor.queryImmediateFailureEvent(stateMachine.getBasicQueryInfo(Optional.empty()), toFailure(throwable));\n+            if (stateMachine.transitionToFailed(throwable)) {\n+                queryMonitor.queryImmediateFailureEvent(stateMachine.getBasicQueryInfo(Optional.empty()), toFailure(throwable));\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f15a59dc06ad8f1d229e811beb072f890c20416"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU0NTQ1OQ==", "bodyText": "I was wary of referencing a method in the constructor before the object is fully initialized.", "url": "https://github.com/prestodb/presto/pull/15085#discussion_r477545459", "createdAt": "2020-08-26T19:41:41Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/dispatcher/LocalDispatchQuery.java", "diffHunk": "@@ -71,14 +73,16 @@ public LocalDispatchQuery(\n             Consumer<QueryExecution> querySubmitter)\n     {\n         this.stateMachine = requireNonNull(stateMachine, \"stateMachine is null\");\n+        this.queryMonitor = requireNonNull(queryMonitor, \"queryMonitor is null\");\n         this.queryExecutionFuture = requireNonNull(queryExecutionFuture, \"queryExecutionFuture is null\");\n         this.clusterSizeMonitor = requireNonNull(clusterSizeMonitor, \"clusterSizeMonitor is null\");\n         this.queryExecutor = requireNonNull(queryExecutor, \"queryExecutor is null\");\n         this.querySubmitter = requireNonNull(querySubmitter, \"querySubmitter is null\");\n \n         addExceptionCallback(queryExecutionFuture, throwable -> {\n-            stateMachine.transitionToFailed(throwable);\n-            queryMonitor.queryImmediateFailureEvent(stateMachine.getBasicQueryInfo(Optional.empty()), toFailure(throwable));\n+            if (stateMachine.transitionToFailed(throwable)) {\n+                queryMonitor.queryImmediateFailureEvent(stateMachine.getBasicQueryInfo(Optional.empty()), toFailure(throwable));\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU0MzQ0Mw=="}, "originalCommit": {"oid": "8f15a59dc06ad8f1d229e811beb072f890c20416"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3582, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}