{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MTIzMjAw", "number": 14215, "title": "Add release notes for 0.233", "bodyText": "Missing Release Notes\nBhavani Hari\n\n #14161 Add classification_fallout function to FunctionManager (Merged by: Rongrong Zhong)\n\nMasha Basmanova\n\n jinyangzhen#1 latest presto changes (Merged by: \u661f\u79fb)\n\nSujay Jain\n\n #14087 Revert \"Improve error message for the array_agg function\" (Merged by: Wenlei Xie)\n\nTim Meehan\n\n 0208f73 Always use JSON for PlanFragment serialization\n\nYing Su\n\n 9c1a7fe Materialize LazyBlock in scan\n\nZhenxiao Luo\n\n #14073 Fix Druid connector pom to new release (Merged by: Zhenxiao Luo)\n\nExtracted Release Notes\n\n#13823 (Author: Yifeng Jiang): Extend ST_Points to support major Well-Known spatial objects\n\nImprove ST_Points to add support for major Well-Known spatial objects. ST_Points now supports POINT, LINESTRING, POLYGON, MULTIPOINT, MULTILINESTRING, MULTIPOLYGON and GEOMETRYCOLLECTION.\n\n\n#13907 (Author: Vic Zhang): Support non-blocking IO for page transport\n\nAdd configuration property exchange.async-page-transport-enabled to turn on non-blocking IO for page transport.\nAdd configuration property exchange.async-page-transport-timeout for server side timeout.\nUse URL prefix '/v1/task/async' for async page transport request.\n\n\n#13966 (Author: Ke Wang): Add ability of soft affinity node selection\n\nIntroduce NodeSelectionStrategy with options NO_PREFERENCE to indicate data is remotely accessible from workers, HARD_AFFINITY to indicate data and workers are colocated, and SOFT_AFFINITY to indicate data is remotely accessible but scheduler will make the best effort to fetch the same piece of data from the same worker.\nReplace isRemoteAccessible() in ConnectorSplit with getNodeSelectionStrategy(). isRemoteAccessible() is true if and only if getNodeSelectionStrategy() returns HARD_AFFINITY.\nReplace getAddresses() in ConnectorSplit with getPreferredNodes(). The returned list of addresses hints the scheduler where to schedule splits.\nAdd soft affinity scheduling. It makes the best effort to fetch the same piece of data from the same worker. If the preferred workers are too busy to handle more splits, it will fallback to random workers. The option is enabled by connector indicated by getNodeSelectionStrategy().\nAdd config hive.node-selection-strategy to choose NodeSelectionStrategy. When SOFT_AFFINITY is selected, scheduler will make the best effort to request the same worker to fetch the same file.\nDeprecate hive.force-local-scheduling config. It will be replaced by setting hive.node-selection-strategy to HARD_AFFINITY.\n\n\n#13977 (Author: James Gill): Use JTS for ST_IsValid and ST_IsSimple\n\nST_IsValid and ST_IsSimple adhere to the ISO/OGC standards more closely.  In particular, previously ST_IsValid and ST_IsSimple always gave the same answer; now they may be different. Users should check both IsValid and IsSimple to be sure their geometries are well-behaved.\nGeometry_invalid_reason will return different but semantically similar strings.  It will return the reason for invalidity if it exists; else it will return the reason for non-simplicity if it exists; else it will return null.\n\n\n#14042 (Author: Zhenxiao Luo): Presto Druid Connector\n\nAdd Druid Connector.\n\n\n#14045 (Author: Zhenxiao Luo): Add Hive directory listing cache\n\nAdd directory listing cache for Hive Connector.\n\n\n#14054 (Author: Brendan Driscoll): Improve verification for map columns\n\nAdd checks for keys, values, and cardinality sum when validating a map column.\n\n\n#14076 (Author: James Sun): Fix like pattern interpretation\n\nFix an optimizer failure introduced since 0.229, where a LIKE pattern can be deduced into a constant. For example, col LIKE 'a' and col = 'b'.\n\n\n#14083 (Author: James Petty): Balance ArbitraryOutputbuffer distribution over clients\n\nFix ArbitraryOutputBuffer to avoid skewing output data distribution.\n\n\n#14090 (Author: Nikhil Collooru): Add IPPREFIX functions\n\nAdd :func:ip_subnet_min, :func:ip_subnet_max, :func:ip_subnet_range, and :func:is_subnet_of functions.\n\n\n#14095 (Author: Ke Wang): Add soft affinity in scheduling bucketed split for Hive Connector\n\nAdd parameter NodeSelectionStrategy nodeSelectionStrategy in method createBucketNodeMap in ConnectorBucketNodeMap , indicating which affinity strategy to use when we create bucket nodeMap.\nAdd parameter List<Node> sortedNodes in method getBucketNodeMap in ConnectorNodePartitioningProvider , providing a sorted node list for connector to choose from when doing affinity scheduling.\nAdd soft affinity scheduling to bucketed split. It makes the best effort to fetch the same bucket data from the same worker. When using dynamic group scheduling, if the preferred workers are unavailable to handle the specific bucket splits, it will fallback to random workers.\n\n\n#14096 (Author: James Petty): Remove unnecessary copies in StreamingAggregationOperator\n\nImprove performance of StreamingAggregationOperator.\n\n\n#14098 (Author: Andrew Smith): Provide view metadata to the Hive Metastore\n\nStore column names and types for views in the metastore.  Views in the Hive connector can now only use types supported by Hive.\nChange signature for createView in ConnectorMetadata to take a ConnectorTableMetadata instead of a SchemaTableName.\n\n\n#14103 (Author: Wenlei Xie): Allow insert overwrite as default behavior for Hive connector\n\nIntroduce  a new Hive client configurationhive.insert-overwrite-immutable-partitions-enabled to allow admin set insert overwrite as the default insertion behavior for Hive connector.\n\n\n#14106 (Author: James Gill): Add cheap ST_Intersection method for certain cases\n\nWhen calculating ST_Intersection of a geometry with an enclosing envelope, just return the geometry.  This reduces the cost by up to 10^5x or more for complex polygons when this occurs.\n\n\n#14128 (Author: Zac Blanco): Add HadoopDefaultConfigurationUpdater\n\nAllow server to start when hive.s3-file-system-type is set to HADOOP_DEFAULT.\n\n\n#14131 (Author: Vic Zhang): Use concurrent scheduler for timeout executor\n\nAdd configuration task.http-timeout-concurrency to improve performance of task timeout executors.\n\n\n#14134 (Author: Leiqing Cai): Fix checksum queries for columns of RowType\n\nFix an issue where invalid checksum queries can be generated for certain queries containing columns of RowType.\n\n\n#14139 (Author: Widagdo Setiawan): Adding fnv1 and fnv1a hash functions\n\nAdded fnv1_32, fnv1_64, fnv1a_32, fnv1a_64,.\n\n\n#14147 (Author: Leiqing Cai): Use absolute error when a floating point column mean is close to 0\n\nImprove correctness check for floating point columns whose mean values of either the control query or the test query is closed to 0.\n\n\n#14148 (Author: Leiqing Cai): Failure resolver improvements\n\nAdd support to disable individual failure resolvers (:pr:14148).\nAdd support to auto-resolve control checksum query failures with ``COMPILER_ERROR`, instead of skipping the verification.\n\n\n#14149 (Author: Leiqing Cai): Fix checksum column generation for map keys and map values\n\nFix an issue where checksum query would fail for queries containing map columns whose key or value types are arrays or rows.\n\n\n#14150 (Author: Leiqing Cai): Treat queriers referencing certain catalogs as non-deterministic\n\nAdd support for specifying non-deterministic catalogs by configuration property determinism.non-determinism-catalogs. Queries explicitly referencing tables from those catalogs are treated as non-deterministic.\n\n\n#14155 (Author: Zhenxiao Luo): Predicate Pushdown for Druid connector\n\nAdd filter pushdown for Druid connector to improve query performance.\n\n\n#14165 (Author: Rongrong Zhong): Remove presto-thrift-connector-api's dependency on presto-main\n\nMove JsonType to SPI.\n\n\n#14176 (Author: Leiqing Cai): Improve determinism analysis of queries with top-level LIMIT clause\n\nFix incorrect decision for determinism analysis of queries with top-level LIMIT clause. (:pr:14176).\nImprove query performance during determinism analysis of queries with top-level LIMIT clause.\n\n\n\nAll Commits\n\n9c1a7fe Materialize LazyBlock in scan (Ying Su)\n0208f73 Always use JSON for PlanFragment serialization (Tim Meehan)\nf39f9ab Add configuration for async page transport timeout (Vic Zhang)\n2eee499 Create new URL for async page transport (Vic Zhang)\n8b35969 Support non-blocking IO for page transport (Vic Zhang)\n3952dce Allow custom hive session in AbstractTestHiveClient (Mayank Garg)\n6642993 Disable Redis integration test by default (Sujay Jain)\nefa6632 Support ifNotExists when copying TPCH tables (Leiqing Cai)\nd52db96 Refactor cacheable for BucketNodeMap (Ke Wang)\n66e4101 Resolve checksum query compiler error instead of skipping it (Leiqing Cai)\nc5e0c03 Distinguish between control, test, and determinism analysis checksum (Leiqing Cai)\n03ff7c5 Allow failure resolvers to be disabled individually (Leiqing Cai)\ne56754e Remove AbstractPrestoQueryFailureResolver (Leiqing Cai)\n7c36df9 Separate QueryException into two classes (Leiqing Cai)\n3f98081 Fix and improve performance for limit query determinism analysis (Leiqing Cai)\nf083d2a Restructure LimitQueryDeterminismAnalyzer (Leiqing Cai)\n778e885 Adding fnv1 and fnv1a hash functions (Widagdo Setiawan)\nd8eb92b Assign HiveFileContext values from splitContext (Ke Wang)\n8d4a18b Fix SimpleNodeSelector node selection for HARD AFFINITY (Ke Wang)\n58df378 Introduce cacheable for bucketed splits (Ke Wang)\ne1e16b8 Fix generated nodeList when using DynamicBucketNodeMap (Ke Wang)\n342afc8 Decide cacheable when scheduling unbucketed splits (Ke Wang)\nae2af70 Add SplitContext in SPI ConnectorPageSourceProvider (Ke Wang)\n0cc2047 Introduce SPI SplitContext in Split (Ke Wang)\n070670e Disable Cassandra and Mongo integration tests (Leiqing Cai)\ne6b43bf Disable failure detector for TestMemoryWorkerCrash (Rebecca Schlussel)\n7809294 Use HiveFileContext for StripeMetadataSource (Ke Wang)\nd9eb193 Update Verifier documentation (Leiqing Cai)\nca8d9c8 Add toString() to BlockEncodingBuffers and DecodedBlockNode (Ying Su)\n9c842b7 Add toString() to ColumnarXXX (Ying Su)\n7218b40 Improve toString() for DictionaryBlock and RunLengthEncodedBlock (Ying Su)\n16d3008 Streamline identity projections (Masha Basmanova)\ne18b45a Optimize scan of integers with many nulls (Masha Basmanova)\n74c874f Extract readNoFilter and readWithFilter methods (Masha Basmanova)\n816efa9 Fix predicate pushdown condition for Druid connector (Zhenxiao Luo)\nfcbfc61 Fix Druid DeterminismEvaluator injector (Zhenxiao Luo)\n5f7e187 Cache PlanFragment serialization (Tim Meehan)\nfedef20 Add fromBytes to Codec (Tim Meehan)\n50ddaa4 Remove presto-thrift-connector-spi to presto-main (Rongrong Zhong)\nf5e4998 Move JsonType to presto-spi (Rongrong Zhong)\nd2cb512 Code cleanup for Druid predicate pushdown (Zhenxiao Luo)\n63c5777 Get rid of presto util dependency in Druid connector (Zhenxiao Luo)\n88cdbdf Add Testcase for Druid connector (Zhenxiao Luo)\n72ca98f Predicate Pushdown for Druid connector (Zhenxiao Luo)\nbbd61d8 Druid Connector PlanOptimizer (Zhenxiao Luo)\n9be680b Remove unnecessary maven-shade-plugin run from presto-spark-base (Andrii Rosa)\n93dfdf6 Reduce presto-spark-classloader-interface scope in presto-spark-base (Andrii Rosa)\n5c305b4 Remove dependencies from the shaded presto-launcher pom (Andrii Rosa)\na0be44c Provide view metadata to the Hive Metastore (Andrew Smith)\nbce54d8 Add HadoopDefaultConfigurationUpdater (Zac Blanco)\n7b8c2da Make sure spark service is created only once (Andrii Rosa)\n0f1ad66 Optimize presto on spark configuration deployment (Andrii Rosa)\n8cfcd15 Minor refactor of array_position (Rongrong Zhong)\ne20ca08 Use HiveFileContext for OrcFileTailSource (Ke Wang)\n7ece9f7 Add classification_fallout function to FunctionManager (Bhavani Hari)\n6eb0293 Implement row base exchange in Presto on Spark (Andrii Rosa)\n2fd3fe8 Refactor RemoteSourceFactory (Andrii Rosa)\nad6a5b6 Refactor LocalExecutionPlanner (Andrii Rosa)\n97817e0 Implement serialize/deserializePosition in Block/BlockBuilder (Andrii Rosa)\nf1e0a80 Create normal block with all null positions in createAllNullsBlock (Andrii Rosa)\n20aa322 Use concurrent scheduler for timeout executor (Vic Zhang)\nf4bc471 Use JTS for ST_IsValid, ST_IsSimple, and geometry_invalid_reason (James Gill)\nf6534c7 Separate testing ST_IsValid from geometry_invalid_reason (James Gill)\n4e81ed1 Increase test runner heap size (Andrii Rosa)\n5455da8 Treat queriers referencing certain catalogs as non-deterministic (Leiqing Cai)\nd5dfeba Extract determinism analyzer to a separate class (Leiqing Cai)\nfb05233 Use absolute error when a floating point column mean is close to 0 (Leiqing Cai)\n0d66630 Rename presto-hive-base to presto-hive-common (Wenlei Xie)\n4236e47 Remove redundant default constructors in column validators (Leiqing Cai)\n0edd361 Fix checksum column generation for map keys and map values (Leiqing Cai)\n2fb54ed Support soft affinity in DynamicLifespanScheduler (Ke Wang)\ndf528a0 Support soft affinity for bucketed splits (Ke Wang)\n951c565 Use HiveFileContext for FileOpener and FileDescriptorSource (James Sun)\n1e7780e Optimize aggregation of nulls (Masha Basmanova)\nc756603 Add position to 'position is not valid' error message (Masha Basmanova)\n0ed6c7d Provide additional details and docs for Alluxio (Haoyuan Li)\n697eaea Fail task with large update size (Nikhil Collooru)\n3994a9d Create empty blocks when there is a mismatch in struct schema (Bhavani Hari)\nfec2fc1 Disable hanging test in TestDistributedSpilledQueries (Leiqing Cai)\nadfbe15 Fix checksum queries for columns of RowType (Leiqing Cai)\n63f5240 Use consistent naming convension for checksum column aliases (Leiqing Cai)\na553d1c Optimize scan of filter-only no-nulls integers (Masha Basmanova)\n1b84650 Optimize scan of floats with many nulls (Masha Basmanova)\n6647e13 Create presto-hive-base package (Shixuan Fan)\ne0d58cd Add IPPREFIX functions (Nikhil Collooru)\n99b0ac3 Update Airlift to 0.190 (Vic Zhang)\n768b4a0 Fix hash function for soft affnity in Hive (Ke Wang)\n8e07e49 Add Alluxio Catalog Service doc (Haoyuan Li)\nbfb18d6 Add cheap ST_Intersection method for certain cases (James A. Gill)\n3c674ca Add Benchmark tests for ST_Intersection (James A. Gill)\nc49add0 Fix null pointer when creating ConnectorSession for LocalExchange (Ke Wang)\n0529b40 Do not run docker based spark integration tests by default (Andrii Rosa)\n6e24976 Improve verification for map columns (Brendan Driscoll)\n6853030 Add SampleNode stats and cost rule (Saumitra Shahapure)\n4a914eb Balance ArbitraryOutputbuffer distribution over clients (James Petty)\na5195e8 Allow insert overwrite as default behavior for Hive connector (Wenlei Xie)\n5e4bfdf Use INFO level log for Presto-on-Spark plan (Wenlei Xie)\n6817038 Allow create table with customized table properties (James Sun)\n22bcbbc Move Raptor metadata related singletons to metastore module (James Sun)\nccbb3bf Remove forceLocalScheduling for hive connector (Ke Wang)\n047b4c9 Add nodeSelectionStrategy to getInfo in HiveSplit (Ke Wang)\nda1161d Add simple soft affinity support for HiveSplit (Ke Wang)\n55c5add Add SoftAffinityNodeSelection ability for unbucketed splits (Ke Wang)\n76b4087 Extract RandomNodeSelection logic from SimpleNodeSelector (Ke Wang)\n7fd2c9a Refactor getAddresses in SPI ConnectorSplit (Ke Wang)\na7c78f2 Refactor isRemotelyAccessible in SPI ConnectorSplit (Ke Wang)\na2d55c1 Add nodeSelectionStrategy in Hive ClientConfig and SessionProperties (Ke Wang)\ne53af1a Move node select related class to nodeSelection package (Ke Wang)\n85b45fb Extend ST_Points to support major Well-Known spatial objects (Yifeng Jiang)\n980a75c Increase Heap size to fix test timeouts (Bhavani Hari)\n26be3fd Run presto spark tests in forked VM (Andrii Rosa)\n4ae5d1e Remove unnecessary copies in StreamingAggregationOperator (James Petty)\nceb5784 Implement CachingDirectoryListor with delegation (Zhenxiao Luo)\nf0b57fe Make file status cache disabled by default (Zhenxiao Luo)\n954f1ce Add Hive directory listing cache (qqibrow)\necb9167 Fix like pattern interpretation (James Sun)\n52786cf Strip more dependencies from Hudi (Bhavani Sudha Saktheeswaran)\nd097309 Add getPartitionNames support to Alluxio Metastore (Haoyuan Li)\n4ce85cf Revert \"Improve error message for the array_agg function\" (sujay-jain)\ne067843 Strip httpcomponents dependency from Hudi (James Sun)\n419ba19 Disable too-many-stages warning for exchange materialization (Wenlei Xie)\n9fd2459 Support PathFilter when fetching splits for Hudi tables (Bhavani Sudha Saktheeswaran)\na5a9347 Fix hostname related assertion failure in PrestoSparkQueryRunner (Andrii Rosa)\n303e640 Fix Druid connector pom to new release (Zhenxiao Luo)\n687f0b4 Fix Druid ErrorCode (Zhenxiao Luo)\n905778a Remove unused files and comments from druid connector (Zhenxiao Luo)\nf0145ee Druid connector schema configurable (Zhenxiao Luo)\n8c8c2aa Add Druid connector documentation (Zhenxiao Luo)\nbf91489 Fix getReadTimeNanos for DruidSegmentPageSource (Zhenxiao Luo)\n92b1f31 Fix Druid 0.17.0 index generation (Zhenxiao Luo)\na53178d Fix Druid metadata Json format (Zhenxiao Luo)\nae7489e Add DruidQueryRunner (Zhenxiao Luo)\n9fcd940 Remove unused variable and methods from druid connector (Zhenxiao Luo)\ne745e10 Upgrade to druid 0.17.0 (Zhenxiao Luo)\n895650f Fix coding style for Druid connector (Zhenxiao Luo)\nd03ffc9 Presto Druid Connector (Hao Luo)", "createdAt": "2020-03-05T08:00:15Z", "url": "https://github.com/prestodb/presto/pull/14215", "merged": true, "mergeCommit": {"oid": "ddee77630e8306e55a3086b6994692e38d4e39d8"}, "closed": true, "closedAt": "2020-03-16T22:49:35Z", "author": {"login": "caithagoras"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKnevcABqjMxMDAxOTIxNTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOWBT_ABqjMxMzUyMDA0MzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "329cdbbe14ce366071fa949616571a4d60b568d4", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/329cdbbe14ce366071fa949616571a4d60b568d4", "committedDate": "2020-03-05T08:00:07Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "a48e2898185c31545ca9b64c9feafc51353e5b72", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/a48e2898185c31545ca9b64c9feafc51353e5b72", "committedDate": "2020-03-05T08:44:58Z", "message": "Add release notes for 0.233"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a48e2898185c31545ca9b64c9feafc51353e5b72", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/a48e2898185c31545ca9b64c9feafc51353e5b72", "committedDate": "2020-03-05T08:44:58Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "2e56413a28b80592ef2aa3b9f15be3a49c72ef3c", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/2e56413a28b80592ef2aa3b9f15be3a49c72ef3c", "committedDate": "2020-03-05T08:47:38Z", "message": "Add release notes for 0.233"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MzgzOTYw", "url": "https://github.com/prestodb/presto/pull/14215#pullrequestreview-369383960", "createdAt": "2020-03-05T08:48:35Z", "commit": {"oid": "2e56413a28b80592ef2aa3b9f15be3a49c72ef3c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwODo0ODozNVrOFyKxFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwODo0ODozNVrOFyKxFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE0OTUyNw==", "bodyText": "@rschlussel How can we rephrase this? #14098", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388149527", "createdAt": "2020-03-05T08:48:35Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for :func:`classification_fallout function`.\n+* Add configuration property ``exchange.async-page-transport-enabled`` to turn on non-blocking IO for page transport,\n+  and add configuration property ``exchange.async-page-transport-timeout`` to set for server side timeout.\n+  Use URL prefix ``/v1/task/async`` for async page transport request.\n+* Add configuration property ``task.http-timeout-concurrency`` to improve performance of task timeout executors.\n+* Add support for soft affinity scheduling, which makes the best effort to fetch the same piece of data from the same worker,\n+  while allowing fallback to random workers if the preferred workers are too busy to handle additional splits.\n+  The feature can be turned on by ``ConnectorSplit#getNodeSelectionStrategy()``.\n+* Add soft affinity scheduling to bucketed split. It makes the best effort to fetch the same bucket data from the same worker.\n+  When using dynamic group scheduling, if the preferred workers are unavailable to handle the specific bucket splits, it will fallback to random workers.\n+* Add hash functions ``fnv1_32``, ``fnv1_64``, ``fnv1a_32``, and ``fnv1a_64``.\n+* Add IP address function :func:`ip_subnet_min`, :func:`ip_subnet_max`, :func:`ip_subnet_range`, and :func:`is_subnet_of`.\n+* Improve performance of ``StreamingAggregationOperator``.\n+\n+\n+Hive Changes\n+____________\n+* Add directory listing cache for Hive Connector.\n+* Allow server to start when ``hive.s3-file-system-type`` is set to ``HADOOP_DEFAULT``.\n+* Add configuration property ``hive.insert-overwrite-immutable-partitions-enabled`` to allow admin set insert overwrite\n+  as the default insertion behavior for Hive connector.\n+* Add configuration property ``hive.node-selection-strategy`` to choose ``NodeSelectionStrategy``. When ``SOFT_AFFINITY`` is selected,\n+  scheduler will make the best effort to request the same worker to fetch the same file.\n+* Remove configuration property ``hive.force-local-scheduling``. The same functionality can be achieved by setting\n+  ``hive.node-selection-strategy`` to ``HARD_AFFINITY``.\n+* Store column names and types for views in the metastore. Views in the Hive connector can now only use types supported by Hive.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e56413a28b80592ef2aa3b9f15be3a49c72ef3c"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5Mzg1NDAx", "url": "https://github.com/prestodb/presto/pull/14215#pullrequestreview-369385401", "createdAt": "2020-03-05T08:50:53Z", "commit": {"oid": "2e56413a28b80592ef2aa3b9f15be3a49c72ef3c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwODo1MDo1M1rOFyK1ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwODo1MDo1M1rOFyK1ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE1MDY1MQ==", "bodyText": "Seems a bit too verbose to me. Should we make it more concise? @kewang1024", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388150651", "createdAt": "2020-03-05T08:50:53Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for :func:`classification_fallout function`.\n+* Add configuration property ``exchange.async-page-transport-enabled`` to turn on non-blocking IO for page transport,\n+  and add configuration property ``exchange.async-page-transport-timeout`` to set for server side timeout.\n+  Use URL prefix ``/v1/task/async`` for async page transport request.\n+* Add configuration property ``task.http-timeout-concurrency`` to improve performance of task timeout executors.\n+* Add support for soft affinity scheduling, which makes the best effort to fetch the same piece of data from the same worker,\n+  while allowing fallback to random workers if the preferred workers are too busy to handle additional splits.\n+  The feature can be turned on by ``ConnectorSplit#getNodeSelectionStrategy()``.\n+* Add soft affinity scheduling to bucketed split. It makes the best effort to fetch the same bucket data from the same worker.\n+  When using dynamic group scheduling, if the preferred workers are unavailable to handle the specific bucket splits, it will fallback to random workers.\n+* Add hash functions ``fnv1_32``, ``fnv1_64``, ``fnv1a_32``, and ``fnv1a_64``.\n+* Add IP address function :func:`ip_subnet_min`, :func:`ip_subnet_max`, :func:`ip_subnet_range`, and :func:`is_subnet_of`.\n+* Improve performance of ``StreamingAggregationOperator``.\n+\n+\n+Hive Changes\n+____________\n+* Add directory listing cache for Hive Connector.\n+* Allow server to start when ``hive.s3-file-system-type`` is set to ``HADOOP_DEFAULT``.\n+* Add configuration property ``hive.insert-overwrite-immutable-partitions-enabled`` to allow admin set insert overwrite\n+  as the default insertion behavior for Hive connector.\n+* Add configuration property ``hive.node-selection-strategy`` to choose ``NodeSelectionStrategy``. When ``SOFT_AFFINITY`` is selected,\n+  scheduler will make the best effort to request the same worker to fetch the same file.\n+* Remove configuration property ``hive.force-local-scheduling``. The same functionality can be achieved by setting\n+  ``hive.node-selection-strategy`` to ``HARD_AFFINITY``.\n+* Store column names and types for views in the metastore. Views in the Hive connector can now only use types supported by Hive.\n+\n+\n+Verifier Changes\n+________________\n+* Fix an issue where invalid checksum queries can be generated for certain queries containing columns of ``RowType``.\n+* Fix an issue where checksum query would fail for queries containing map columns whose key or value types are arrays or rows.\n+* Fix incorrect decision for determinism analysis of queries with top-level ``LIMIT`` clause. (:pr:`14176`).\n+* Add checks for keys, values, and cardinality sum when validating a map column.\n+* Add support to disable individual failure resolvers (:pr:`14148`).\n+* Add support to auto-resolve control checksum query failures with ``COMPILER_ERROR``, instead of skipping the verification.\n+* Add support for specifying non-deterministic catalogs by configuration property ``determinism.non-determinism-catalogs``.\n+  Queries explicitly referencing tables from those catalogs are treated as non-deterministic.\n+* Improve query performance during determinism analysis of queries with top-level ``LIMIT`` clause.\n+* Improve correctness check for floating point columns whose mean values of either the control query or the test query is closed to 0.\n+\n+\n+Druid Changes\n+_____________\n+* Add Druid Connector.\n+* Improve query performance with filter pushdown.\n+\n+\n+Geospatial Changes\n+__________________\n+* Improve :func:`ST_Points` to add support for major well-known spatial objects.\n+  :func:`ST_Points` now supports ``POINT``, ``LINESTRING``, ``POLYGON``, ``MULTIPOINT``, ``MULTILINESTRING``, ``MULTIPOLYGON`` and ``GEOMETRYCOLLECTION``.\n+* Improve :func:`ST_IsValid` and :func:`ST_IsSimple` to adhere to the ISO/OGC standards more closely.\n+  The two functions used to return the same result but may now be different. Users should check both functions to be sure their geometries are well-behaved.\n+  :func:`geometry_invalid_reason` will return different but semantically similar strings.\n+* Improve performance of :func:`ST_Intersection` by reduces the cost by returning simply the geometry if it is with an enclosing envelope.\n+  This can reduce the cost by ``10^5x`` or more for complex polygons when this occurs.\n+\n+SPI Changes\n+___________\n+* Add parameter ``NodeSelectionStrategy nodeSelectionStrategy`` in method ``ConnectorBucketNodeMap#createBucketNodeMap`` to indicate\n+  which affinity strategy to use when creating a bucket node map.\n+* Add parameter ``List<Node> sortedNodes`` in method ``ConnectorNodePartitioningProvider#getBucketNodeMap`` to provide\n+  a sorted list of nodes from which a connector can choose to perform affinity scheduling.\n+* Add enum ``NodeSelectionStrategy``. ``NO_PREFERENCE`` indicates data is remotely accessible from workers,\n+  ``HARD_AFFINITY`` to indicate data and workers are collocated, and ``SOFT_AFFINITY`` to indicate data is remotely accessible", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e56413a28b80592ef2aa3b9f15be3a49c72ef3c"}, "originalPosition": 74}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e56413a28b80592ef2aa3b9f15be3a49c72ef3c", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/2e56413a28b80592ef2aa3b9f15be3a49c72ef3c", "committedDate": "2020-03-05T08:47:38Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/d6b37f119d3ccd40b4036efbb530313d8da36c4c", "committedDate": "2020-03-05T11:40:47Z", "message": "Add release notes for 0.233"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5ODE2MjE2", "url": "https://github.com/prestodb/presto/pull/14215#pullrequestreview-369816216", "createdAt": "2020-03-05T18:37:00Z", "commit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODozNzowMVrOFyfNZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODo0NjoxNlrOFyfgGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4NDQ1Mg==", "bodyText": "Not relevant, we can remove this", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388484452", "createdAt": "2020-03-05T18:37:01Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for function :func:`classification_fall_out`.\n+* Add configuration property ``exchange.async-page-transport-enabled`` to turn on non-blocking IO for page transport,\n+  and add configuration property ``exchange.async-page-transport-timeout`` to set for server side timeout.\n+  Use URL prefix ``/v1/task/async`` for async page transport request.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4NDk3MA==", "bodyText": "My sense is we don't need to add this to our release notes, as it will eventually become the default", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388484970", "createdAt": "2020-03-05T18:38:09Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for function :func:`classification_fall_out`.\n+* Add configuration property ``exchange.async-page-transport-enabled`` to turn on non-blocking IO for page transport,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4NTE3Nw==", "bodyText": "Not clear how one would use this", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388485177", "createdAt": "2020-03-05T18:38:35Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for function :func:`classification_fall_out`.\n+* Add configuration property ``exchange.async-page-transport-enabled`` to turn on non-blocking IO for page transport,\n+  and add configuration property ``exchange.async-page-transport-timeout`` to set for server side timeout.\n+  Use URL prefix ``/v1/task/async`` for async page transport request.\n+* Add configuration property ``task.http-timeout-concurrency`` to improve performance of task timeout executors.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4NjI1Mg==", "bodyText": "I think we can remove this and refer to the SPI changes section below", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388486252", "createdAt": "2020-03-05T18:40:39Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for function :func:`classification_fall_out`.\n+* Add configuration property ``exchange.async-page-transport-enabled`` to turn on non-blocking IO for page transport,\n+  and add configuration property ``exchange.async-page-transport-timeout`` to set for server side timeout.\n+  Use URL prefix ``/v1/task/async`` for async page transport request.\n+* Add configuration property ``task.http-timeout-concurrency`` to improve performance of task timeout executors.\n+* Add support for soft affinity scheduling, which makes the best effort to fetch the same piece of data from the same worker,\n+  while allowing fallback to random workers if the preferred workers are too busy to handle additional splits.\n+  The feature can be turned on by ``ConnectorSplit#getNodeSelectionStrategy()``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4Njk3Nw==", "bodyText": "Should we refer to the connectors documentation?  It will be missed in release notes", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388486977", "createdAt": "2020-03-05T18:42:03Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for function :func:`classification_fall_out`.\n+* Add configuration property ``exchange.async-page-transport-enabled`` to turn on non-blocking IO for page transport,\n+  and add configuration property ``exchange.async-page-transport-timeout`` to set for server side timeout.\n+  Use URL prefix ``/v1/task/async`` for async page transport request.\n+* Add configuration property ``task.http-timeout-concurrency`` to improve performance of task timeout executors.\n+* Add support for soft affinity scheduling, which makes the best effort to fetch the same piece of data from the same worker,\n+  while allowing fallback to random workers if the preferred workers are too busy to handle additional splits.\n+  The feature can be turned on by ``ConnectorSplit#getNodeSelectionStrategy()``.\n+* Add soft affinity scheduling to bucketed split. It makes the best effort to fetch the same bucket data from the same worker.\n+  When using dynamic group scheduling, if the preferred workers are unavailable to handle the specific bucket splits, it will fallback to random workers.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4ODQ1NQ==", "bodyText": "We just added the connector, so it's being introduced with this optimization.  Can't we remove this line then?", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388488455", "createdAt": "2020-03-05T18:44:47Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for function :func:`classification_fall_out`.\n+* Add configuration property ``exchange.async-page-transport-enabled`` to turn on non-blocking IO for page transport,\n+  and add configuration property ``exchange.async-page-transport-timeout`` to set for server side timeout.\n+  Use URL prefix ``/v1/task/async`` for async page transport request.\n+* Add configuration property ``task.http-timeout-concurrency`` to improve performance of task timeout executors.\n+* Add support for soft affinity scheduling, which makes the best effort to fetch the same piece of data from the same worker,\n+  while allowing fallback to random workers if the preferred workers are too busy to handle additional splits.\n+  The feature can be turned on by ``ConnectorSplit#getNodeSelectionStrategy()``.\n+* Add soft affinity scheduling to bucketed split. It makes the best effort to fetch the same bucket data from the same worker.\n+  When using dynamic group scheduling, if the preferred workers are unavailable to handle the specific bucket splits, it will fallback to random workers.\n+* Add hash functions ``fnv1_32``, ``fnv1_64``, ``fnv1a_32``, and ``fnv1a_64``.\n+* Add IP address function :func:`ip_subnet_min`, :func:`ip_subnet_max`, :func:`ip_subnet_range`, and :func:`is_subnet_of`.\n+* Improve performance of ``StreamingAggregationOperator``.\n+\n+\n+Hive Changes\n+____________\n+* Add directory listing cache for Hive Connector.\n+* Allow server to start when ``hive.s3-file-system-type`` is set to ``HADOOP_DEFAULT``.\n+* Add configuration property ``hive.insert-overwrite-immutable-partitions-enabled`` to allow admin set insert overwrite\n+  as the default insertion behavior for Hive connector.\n+* Add configuration property ``hive.node-selection-strategy`` to choose ``NodeSelectionStrategy``. When ``SOFT_AFFINITY`` is selected,\n+  scheduler will make the best effort to request the same worker to fetch the same file.\n+* Remove configuration property ``hive.force-local-scheduling``. The same functionality can be achieved by setting\n+  ``hive.node-selection-strategy`` to ``HARD_AFFINITY``.\n+* Store column names and types for views in the metastore. Views in the Hive connector can now only use types supported by Hive.\n+\n+\n+Verifier Changes\n+________________\n+* Fix an issue where invalid checksum queries can be generated for certain queries containing columns of ``RowType``.\n+* Fix an issue where checksum query would fail for queries containing map columns whose key or value types are arrays or rows.\n+* Fix incorrect decision for determinism analysis of queries with top-level ``LIMIT`` clause. (:pr:`14176`).\n+* Add checks for keys, values, and cardinality sum when validating a map column.\n+* Add support to disable individual failure resolvers (:pr:`14148`).\n+* Add support to auto-resolve control checksum query failures with ``COMPILER_ERROR``, instead of skipping the verification.\n+* Add support for specifying non-deterministic catalogs by configuration property ``determinism.non-determinism-catalogs``.\n+  Queries explicitly referencing tables from those catalogs are treated as non-deterministic.\n+* Improve query performance during determinism analysis of queries with top-level ``LIMIT`` clause.\n+* Improve correctness check for floating point columns whose mean values of either the control query or the test query is closed to 0.\n+\n+\n+Druid Changes\n+_____________\n+* Add Druid Connector.\n+* Improve query performance with filter pushdown.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4ODc5Mg==", "bodyText": "Can improve this bullet", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388488792", "createdAt": "2020-03-05T18:45:29Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for function :func:`classification_fall_out`.\n+* Add configuration property ``exchange.async-page-transport-enabled`` to turn on non-blocking IO for page transport,\n+  and add configuration property ``exchange.async-page-transport-timeout`` to set for server side timeout.\n+  Use URL prefix ``/v1/task/async`` for async page transport request.\n+* Add configuration property ``task.http-timeout-concurrency`` to improve performance of task timeout executors.\n+* Add support for soft affinity scheduling, which makes the best effort to fetch the same piece of data from the same worker,\n+  while allowing fallback to random workers if the preferred workers are too busy to handle additional splits.\n+  The feature can be turned on by ``ConnectorSplit#getNodeSelectionStrategy()``.\n+* Add soft affinity scheduling to bucketed split. It makes the best effort to fetch the same bucket data from the same worker.\n+  When using dynamic group scheduling, if the preferred workers are unavailable to handle the specific bucket splits, it will fallback to random workers.\n+* Add hash functions ``fnv1_32``, ``fnv1_64``, ``fnv1a_32``, and ``fnv1a_64``.\n+* Add IP address function :func:`ip_subnet_min`, :func:`ip_subnet_max`, :func:`ip_subnet_range`, and :func:`is_subnet_of`.\n+* Improve performance of ``StreamingAggregationOperator``.\n+\n+\n+Hive Changes\n+____________\n+* Add directory listing cache for Hive Connector.\n+* Allow server to start when ``hive.s3-file-system-type`` is set to ``HADOOP_DEFAULT``.\n+* Add configuration property ``hive.insert-overwrite-immutable-partitions-enabled`` to allow admin set insert overwrite\n+  as the default insertion behavior for Hive connector.\n+* Add configuration property ``hive.node-selection-strategy`` to choose ``NodeSelectionStrategy``. When ``SOFT_AFFINITY`` is selected,\n+  scheduler will make the best effort to request the same worker to fetch the same file.\n+* Remove configuration property ``hive.force-local-scheduling``. The same functionality can be achieved by setting\n+  ``hive.node-selection-strategy`` to ``HARD_AFFINITY``.\n+* Store column names and types for views in the metastore. Views in the Hive connector can now only use types supported by Hive.\n+\n+\n+Verifier Changes\n+________________\n+* Fix an issue where invalid checksum queries can be generated for certain queries containing columns of ``RowType``.\n+* Fix an issue where checksum query would fail for queries containing map columns whose key or value types are arrays or rows.\n+* Fix incorrect decision for determinism analysis of queries with top-level ``LIMIT`` clause. (:pr:`14176`).\n+* Add checks for keys, values, and cardinality sum when validating a map column.\n+* Add support to disable individual failure resolvers (:pr:`14148`).\n+* Add support to auto-resolve control checksum query failures with ``COMPILER_ERROR``, instead of skipping the verification.\n+* Add support for specifying non-deterministic catalogs by configuration property ``determinism.non-determinism-catalogs``.\n+  Queries explicitly referencing tables from those catalogs are treated as non-deterministic.\n+* Improve query performance during determinism analysis of queries with top-level ``LIMIT`` clause.\n+* Improve correctness check for floating point columns whose mean values of either the control query or the test query is closed to 0.\n+\n+\n+Druid Changes\n+_____________\n+* Add Druid Connector.\n+* Improve query performance with filter pushdown.\n+\n+\n+Geospatial Changes\n+__________________\n+* Improve :func:`ST_Points` to add support for major well-known spatial objects.\n+  :func:`ST_Points` now supports ``POINT``, ``LINESTRING``, ``POLYGON``, ``MULTIPOINT``, ``MULTILINESTRING``, ``MULTIPOLYGON`` and ``GEOMETRYCOLLECTION``.\n+* Improve :func:`ST_IsValid` and :func:`ST_IsSimple` to adhere to the ISO/OGC standards more closely.\n+  The two functions used to return the same result but may now be different. Users should check both functions to be sure their geometries are well-behaved.\n+  :func:`geometry_invalid_reason` will return different but semantically similar strings.\n+* Improve performance of :func:`ST_Intersection` by reduces the cost by returning simply the geometry if it is with an enclosing envelope.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4OTI0MA==", "bodyText": "Hard to interpret this", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388489240", "createdAt": "2020-03-05T18:46:16Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for function :func:`classification_fall_out`.\n+* Add configuration property ``exchange.async-page-transport-enabled`` to turn on non-blocking IO for page transport,\n+  and add configuration property ``exchange.async-page-transport-timeout`` to set for server side timeout.\n+  Use URL prefix ``/v1/task/async`` for async page transport request.\n+* Add configuration property ``task.http-timeout-concurrency`` to improve performance of task timeout executors.\n+* Add support for soft affinity scheduling, which makes the best effort to fetch the same piece of data from the same worker,\n+  while allowing fallback to random workers if the preferred workers are too busy to handle additional splits.\n+  The feature can be turned on by ``ConnectorSplit#getNodeSelectionStrategy()``.\n+* Add soft affinity scheduling to bucketed split. It makes the best effort to fetch the same bucket data from the same worker.\n+  When using dynamic group scheduling, if the preferred workers are unavailable to handle the specific bucket splits, it will fallback to random workers.\n+* Add hash functions ``fnv1_32``, ``fnv1_64``, ``fnv1a_32``, and ``fnv1a_64``.\n+* Add IP address function :func:`ip_subnet_min`, :func:`ip_subnet_max`, :func:`ip_subnet_range`, and :func:`is_subnet_of`.\n+* Improve performance of ``StreamingAggregationOperator``.\n+\n+\n+Hive Changes\n+____________\n+* Add directory listing cache for Hive Connector.\n+* Allow server to start when ``hive.s3-file-system-type`` is set to ``HADOOP_DEFAULT``.\n+* Add configuration property ``hive.insert-overwrite-immutable-partitions-enabled`` to allow admin set insert overwrite\n+  as the default insertion behavior for Hive connector.\n+* Add configuration property ``hive.node-selection-strategy`` to choose ``NodeSelectionStrategy``. When ``SOFT_AFFINITY`` is selected,\n+  scheduler will make the best effort to request the same worker to fetch the same file.\n+* Remove configuration property ``hive.force-local-scheduling``. The same functionality can be achieved by setting\n+  ``hive.node-selection-strategy`` to ``HARD_AFFINITY``.\n+* Store column names and types for views in the metastore. Views in the Hive connector can now only use types supported by Hive.\n+\n+\n+Verifier Changes\n+________________\n+* Fix an issue where invalid checksum queries can be generated for certain queries containing columns of ``RowType``.\n+* Fix an issue where checksum query would fail for queries containing map columns whose key or value types are arrays or rows.\n+* Fix incorrect decision for determinism analysis of queries with top-level ``LIMIT`` clause. (:pr:`14176`).\n+* Add checks for keys, values, and cardinality sum when validating a map column.\n+* Add support to disable individual failure resolvers (:pr:`14148`).\n+* Add support to auto-resolve control checksum query failures with ``COMPILER_ERROR``, instead of skipping the verification.\n+* Add support for specifying non-deterministic catalogs by configuration property ``determinism.non-determinism-catalogs``.\n+  Queries explicitly referencing tables from those catalogs are treated as non-deterministic.\n+* Improve query performance during determinism analysis of queries with top-level ``LIMIT`` clause.\n+* Improve correctness check for floating point columns whose mean values of either the control query or the test query is closed to 0.\n+\n+\n+Druid Changes\n+_____________\n+* Add Druid Connector.\n+* Improve query performance with filter pushdown.\n+\n+\n+Geospatial Changes\n+__________________\n+* Improve :func:`ST_Points` to add support for major well-known spatial objects.\n+  :func:`ST_Points` now supports ``POINT``, ``LINESTRING``, ``POLYGON``, ``MULTIPOINT``, ``MULTILINESTRING``, ``MULTIPOLYGON`` and ``GEOMETRYCOLLECTION``.\n+* Improve :func:`ST_IsValid` and :func:`ST_IsSimple` to adhere to the ISO/OGC standards more closely.\n+  The two functions used to return the same result but may now be different. Users should check both functions to be sure their geometries are well-behaved.\n+  :func:`geometry_invalid_reason` will return different but semantically similar strings.\n+* Improve performance of :func:`ST_Intersection` by reduces the cost by returning simply the geometry if it is with an enclosing envelope.\n+  This can reduce the cost by ``10^5x`` or more for complex polygons when this occurs.\n+\n+SPI Changes\n+___________\n+* Add parameter ``NodeSelectionStrategy nodeSelectionStrategy`` in method ``ConnectorBucketNodeMap#createBucketNodeMap`` to indicate\n+  which affinity strategy to use when creating a bucket node map.\n+* Add parameter ``List<Node> sortedNodes`` in method ``ConnectorNodePartitioningProvider#getBucketNodeMap`` to provide\n+  a sorted list of nodes from which a connector can choose to perform affinity scheduling.\n+* Add enum ``NodeSelectionStrategy``. ``NO_PREFERENCE`` indicates data is remotely accessible from workers,\n+  ``HARD_AFFINITY`` to indicate data and workers are collocated, and ``SOFT_AFFINITY`` to indicate data is remotely accessible\n+  but scheduler will make the best effort to fetch the same piece of data from the same worker.\n+* Replace ``ConnectorSplit#isRemoteAccessible`` with ``isRemoteAccessible`` is true if and only if ``getNodeSelectionStrategy`` returns ``HARD_AFFINITY``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5ODI2MTc3", "url": "https://github.com/prestodb/presto/pull/14215#pullrequestreview-369826177", "createdAt": "2020-03-05T18:51:59Z", "commit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODo1MTo1OVrOFyfsUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODo1MTo1OVrOFyfsUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ5MjM2OA==", "bodyText": "Fix function registration for :func:classification_fall_out.", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388492368", "createdAt": "2020-03-05T18:51:59Z", "author": {"login": "bhhari"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for function :func:`classification_fall_out`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5ODQ2Nzkx", "url": "https://github.com/prestodb/presto/pull/14215#pullrequestreview-369846791", "createdAt": "2020-03-05T19:21:56Z", "commit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxOToyMTo1NlrOFygwwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxOTozMDowOVrOFyhCmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUwOTg5MA==", "bodyText": "Both of these points are too specific - can we talk about the end impact? For ArbitraryOutputBuffer what kind of improvement should we see - errors or performance?\nFor function registration - does this mean the function was not usable?", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388509890", "createdAt": "2020-03-05T19:21:56Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for function :func:`classification_fall_out`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUxMjIzOQ==", "bodyText": "nit: Add IP address function->s<-", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388512239", "createdAt": "2020-03-05T19:26:05Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for function :func:`classification_fall_out`.\n+* Add configuration property ``exchange.async-page-transport-enabled`` to turn on non-blocking IO for page transport,\n+  and add configuration property ``exchange.async-page-transport-timeout`` to set for server side timeout.\n+  Use URL prefix ``/v1/task/async`` for async page transport request.\n+* Add configuration property ``task.http-timeout-concurrency`` to improve performance of task timeout executors.\n+* Add support for soft affinity scheduling, which makes the best effort to fetch the same piece of data from the same worker,\n+  while allowing fallback to random workers if the preferred workers are too busy to handle additional splits.\n+  The feature can be turned on by ``ConnectorSplit#getNodeSelectionStrategy()``.\n+* Add soft affinity scheduling to bucketed split. It makes the best effort to fetch the same bucket data from the same worker.\n+  When using dynamic group scheduling, if the preferred workers are unavailable to handle the specific bucket splits, it will fallback to random workers.\n+* Add hash functions ``fnv1_32``, ``fnv1_64``, ``fnv1a_32``, and ``fnv1a_64``.\n+* Add IP address function :func:`ip_subnet_min`, :func:`ip_subnet_max`, :func:`ip_subnet_range`, and :func:`is_subnet_of`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUxMjU5NQ==", "bodyText": "Is this by default or needs to be enabled?", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388512595", "createdAt": "2020-03-05T19:26:43Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for function :func:`classification_fall_out`.\n+* Add configuration property ``exchange.async-page-transport-enabled`` to turn on non-blocking IO for page transport,\n+  and add configuration property ``exchange.async-page-transport-timeout`` to set for server side timeout.\n+  Use URL prefix ``/v1/task/async`` for async page transport request.\n+* Add configuration property ``task.http-timeout-concurrency`` to improve performance of task timeout executors.\n+* Add support for soft affinity scheduling, which makes the best effort to fetch the same piece of data from the same worker,\n+  while allowing fallback to random workers if the preferred workers are too busy to handle additional splits.\n+  The feature can be turned on by ``ConnectorSplit#getNodeSelectionStrategy()``.\n+* Add soft affinity scheduling to bucketed split. It makes the best effort to fetch the same bucket data from the same worker.\n+  When using dynamic group scheduling, if the preferred workers are unavailable to handle the specific bucket splits, it will fallback to random workers.\n+* Add hash functions ``fnv1_32``, ``fnv1_64``, ``fnv1a_32``, and ``fnv1a_64``.\n+* Add IP address function :func:`ip_subnet_min`, :func:`ip_subnet_max`, :func:`ip_subnet_range`, and :func:`is_subnet_of`.\n+* Improve performance of ``StreamingAggregationOperator``.\n+\n+\n+Hive Changes\n+____________\n+* Add directory listing cache for Hive Connector.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUxMzY0Mw==", "bodyText": "to allow admin set insert overwrite -> is the intent to say to allow the admin to set insert overwrite ?", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388513643", "createdAt": "2020-03-05T19:28:37Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for function :func:`classification_fall_out`.\n+* Add configuration property ``exchange.async-page-transport-enabled`` to turn on non-blocking IO for page transport,\n+  and add configuration property ``exchange.async-page-transport-timeout`` to set for server side timeout.\n+  Use URL prefix ``/v1/task/async`` for async page transport request.\n+* Add configuration property ``task.http-timeout-concurrency`` to improve performance of task timeout executors.\n+* Add support for soft affinity scheduling, which makes the best effort to fetch the same piece of data from the same worker,\n+  while allowing fallback to random workers if the preferred workers are too busy to handle additional splits.\n+  The feature can be turned on by ``ConnectorSplit#getNodeSelectionStrategy()``.\n+* Add soft affinity scheduling to bucketed split. It makes the best effort to fetch the same bucket data from the same worker.\n+  When using dynamic group scheduling, if the preferred workers are unavailable to handle the specific bucket splits, it will fallback to random workers.\n+* Add hash functions ``fnv1_32``, ``fnv1_64``, ``fnv1a_32``, and ``fnv1a_64``.\n+* Add IP address function :func:`ip_subnet_min`, :func:`ip_subnet_max`, :func:`ip_subnet_range`, and :func:`is_subnet_of`.\n+* Improve performance of ``StreamingAggregationOperator``.\n+\n+\n+Hive Changes\n+____________\n+* Add directory listing cache for Hive Connector.\n+* Allow server to start when ``hive.s3-file-system-type`` is set to ``HADOOP_DEFAULT``.\n+* Add configuration property ``hive.insert-overwrite-immutable-partitions-enabled`` to allow admin set insert overwrite", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUxNDQ1OQ==", "bodyText": "Add support for storing column names and types for views in the Hive metastore. <second sentence>", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r388514459", "createdAt": "2020-03-05T19:30:09Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,79 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix function registration for :func:`classification_fallout function`.\n+* Add configuration property ``exchange.async-page-transport-enabled`` to turn on non-blocking IO for page transport,\n+  and add configuration property ``exchange.async-page-transport-timeout`` to set for server side timeout.\n+  Use URL prefix ``/v1/task/async`` for async page transport request.\n+* Add configuration property ``task.http-timeout-concurrency`` to improve performance of task timeout executors.\n+* Add support for soft affinity scheduling, which makes the best effort to fetch the same piece of data from the same worker,\n+  while allowing fallback to random workers if the preferred workers are too busy to handle additional splits.\n+  The feature can be turned on by ``ConnectorSplit#getNodeSelectionStrategy()``.\n+* Add soft affinity scheduling to bucketed split. It makes the best effort to fetch the same bucket data from the same worker.\n+  When using dynamic group scheduling, if the preferred workers are unavailable to handle the specific bucket splits, it will fallback to random workers.\n+* Add hash functions ``fnv1_32``, ``fnv1_64``, ``fnv1a_32``, and ``fnv1a_64``.\n+* Add IP address function :func:`ip_subnet_min`, :func:`ip_subnet_max`, :func:`ip_subnet_range`, and :func:`is_subnet_of`.\n+* Improve performance of ``StreamingAggregationOperator``.\n+\n+\n+Hive Changes\n+____________\n+* Add directory listing cache for Hive Connector.\n+* Allow server to start when ``hive.s3-file-system-type`` is set to ``HADOOP_DEFAULT``.\n+* Add configuration property ``hive.insert-overwrite-immutable-partitions-enabled`` to allow admin set insert overwrite\n+  as the default insertion behavior for Hive connector.\n+* Add configuration property ``hive.node-selection-strategy`` to choose ``NodeSelectionStrategy``. When ``SOFT_AFFINITY`` is selected,\n+  scheduler will make the best effort to request the same worker to fetch the same file.\n+* Remove configuration property ``hive.force-local-scheduling``. The same functionality can be achieved by setting\n+  ``hive.node-selection-strategy`` to ``HARD_AFFINITY``.\n+* Store column names and types for views in the metastore. Views in the Hive connector can now only use types supported by Hive.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE0OTUyNw=="}, "originalCommit": {"oid": "2e56413a28b80592ef2aa3b9f15be3a49c72ef3c"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d6b37f119d3ccd40b4036efbb530313d8da36c4c", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/d6b37f119d3ccd40b4036efbb530313d8da36c4c", "committedDate": "2020-03-05T11:40:47Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "7d631ec8a1f439f1a0839bd1239b4739c2810885", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/7d631ec8a1f439f1a0839bd1239b4739c2810885", "committedDate": "2020-03-07T22:23:26Z", "message": "Add release notes for 0.233"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7d631ec8a1f439f1a0839bd1239b4739c2810885", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/7d631ec8a1f439f1a0839bd1239b4739c2810885", "committedDate": "2020-03-07T22:23:26Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "4dfafa907c70db0a0591be0d9c8e4e65868b34db", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/4dfafa907c70db0a0591be0d9c8e4e65868b34db", "committedDate": "2020-03-09T03:27:37Z", "message": "Add release notes for 0.233"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMzM5MzM2", "url": "https://github.com/prestodb/presto/pull/14215#pullrequestreview-371339336", "createdAt": "2020-03-09T16:32:42Z", "commit": {"oid": "4dfafa907c70db0a0591be0d9c8e4e65868b34db"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjozMjo0MlrOFzwHvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjozMjo0MlrOFzwHvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgxMDExMA==", "bodyText": "Add support for async page transport with non-blocking IO. This can be enabled with the exchange.async-page-transport-enabled configuration property.  Server side page transport timeout is controlled with the exchange.async-page-transport-timeout configuration property.\nAdd support to handle timeouts of http requests using multiple thread pools. This can be controlled with the task.http-timeout-concurrency configuration property.", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r389810110", "createdAt": "2020-03-09T16:32:42Z", "author": {"login": "viczhang861"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,76 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution.\n+* Fix an issue where :func:`classification_fall_out` cannot be found.\n+* Add configuration property ``exchange.async-page-transport-timeout`` to set for server side timeout.\n+* Add configuration property ``task.http-timeout-concurrency`` to improve performance of task timeout executors.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dfafa907c70db0a0591be0d9c8e4e65868b34db"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4dfafa907c70db0a0591be0d9c8e4e65868b34db", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/4dfafa907c70db0a0591be0d9c8e4e65868b34db", "committedDate": "2020-03-09T03:27:37Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "1fae7ef1486ddde9a8fb90dc8c67c1cf114e2e44", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/1fae7ef1486ddde9a8fb90dc8c67c1cf114e2e44", "committedDate": "2020-03-10T22:56:50Z", "message": "Add release notes for 0.233"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1fae7ef1486ddde9a8fb90dc8c67c1cf114e2e44", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/1fae7ef1486ddde9a8fb90dc8c67c1cf114e2e44", "committedDate": "2020-03-10T22:56:50Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "ecd6babdc08fa10748d5bec413e84512a5c3add7", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/ecd6babdc08fa10748d5bec413e84512a5c3add7", "committedDate": "2020-03-10T23:02:52Z", "message": "Add release notes for 0.233"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ecd6babdc08fa10748d5bec413e84512a5c3add7", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/ecd6babdc08fa10748d5bec413e84512a5c3add7", "committedDate": "2020-03-10T23:02:52Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "c98913d50ca0a25432e0fa6eb8a89ca62e6c98fe", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/c98913d50ca0a25432e0fa6eb8a89ca62e6c98fe", "committedDate": "2020-03-10T23:05:10Z", "message": "Add release notes for 0.233"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c98913d50ca0a25432e0fa6eb8a89ca62e6c98fe", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/c98913d50ca0a25432e0fa6eb8a89ca62e6c98fe", "committedDate": "2020-03-10T23:05:10Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "eabbf88916708d29cbc76adb2fb5cd1579376ea6", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/eabbf88916708d29cbc76adb2fb5cd1579376ea6", "committedDate": "2020-03-11T21:08:41Z", "message": "Add release notes for 0.233"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTMzNTc4", "url": "https://github.com/prestodb/presto/pull/14215#pullrequestreview-373133578", "createdAt": "2020-03-11T21:20:21Z", "commit": {"oid": "eabbf88916708d29cbc76adb2fb5cd1579376ea6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eabbf88916708d29cbc76adb2fb5cd1579376ea6", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/eabbf88916708d29cbc76adb2fb5cd1579376ea6", "committedDate": "2020-03-11T21:08:41Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "7516e50f11db9dec874c1b0237a26ac8281a4254", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/7516e50f11db9dec874c1b0237a26ac8281a4254", "committedDate": "2020-03-11T21:53:33Z", "message": "Add release notes for 0.233"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7516e50f11db9dec874c1b0237a26ac8281a4254", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/7516e50f11db9dec874c1b0237a26ac8281a4254", "committedDate": "2020-03-11T21:53:33Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "4d8f0c88e26caace8d9f550408002a54600ee56b", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/4d8f0c88e26caace8d9f550408002a54600ee56b", "committedDate": "2020-03-11T21:55:00Z", "message": "Add release notes for 0.233"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d8f0c88e26caace8d9f550408002a54600ee56b", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/4d8f0c88e26caace8d9f550408002a54600ee56b", "committedDate": "2020-03-11T21:55:00Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "161ac34a273220dadbbf91a58ad39db55f6afa31", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/161ac34a273220dadbbf91a58ad39db55f6afa31", "committedDate": "2020-03-11T21:55:51Z", "message": "Add release notes for 0.233"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTU2ODcz", "url": "https://github.com/prestodb/presto/pull/14215#pullrequestreview-373156873", "createdAt": "2020-03-11T22:05:34Z", "commit": {"oid": "161ac34a273220dadbbf91a58ad39db55f6afa31"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTYwMTQ1", "url": "https://github.com/prestodb/presto/pull/14215#pullrequestreview-373160145", "createdAt": "2020-03-11T22:08:34Z", "commit": {"oid": "161ac34a273220dadbbf91a58ad39db55f6afa31"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczOTE4NjEz", "url": "https://github.com/prestodb/presto/pull/14215#pullrequestreview-373918613", "createdAt": "2020-03-12T21:34:39Z", "commit": {"oid": "161ac34a273220dadbbf91a58ad39db55f6afa31"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMTozNDozOVrOF1wTzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMTozNDozOVrOF1wTzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkxMDM1MA==", "bodyText": "Extra space before period.", "url": "https://github.com/prestodb/presto/pull/14215#discussion_r391910350", "createdAt": "2020-03-12T21:34:39Z", "author": {"login": "viczhang861"}, "path": "presto-docs/src/main/sphinx/release/release-0.233.rst", "diffHunk": "@@ -0,0 +1,69 @@\n+=============\n+Release 0.233\n+=============\n+\n+General Changes\n+_______________\n+* Fix an optimizer failure introduced in ``0.229``, where a ``LIKE`` pattern is deduced into a constant, e.g., ``col LIKE 'a' and col = 'b'``.\n+* Fix ``ArbitraryOutputBuffer`` to avoid skewing output data distribution. (:pr:`14083`).\n+* Fix an issue where :func:`classification_fall_out` cannot be found.\n+* Add support for async page transport with non-blocking IO. This can be enabled by the ``exchange.async-page-transport-enabled`` configuration property .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "161ac34a273220dadbbf91a58ad39db55f6afa31"}, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "161ac34a273220dadbbf91a58ad39db55f6afa31", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/161ac34a273220dadbbf91a58ad39db55f6afa31", "committedDate": "2020-03-11T21:55:51Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "ad16fbbd7c2f3ad46e687380b2b18bcbc9daf8ea", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/ad16fbbd7c2f3ad46e687380b2b18bcbc9daf8ea", "committedDate": "2020-03-13T20:30:44Z", "message": "Add release notes for 0.233"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad16fbbd7c2f3ad46e687380b2b18bcbc9daf8ea", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/ad16fbbd7c2f3ad46e687380b2b18bcbc9daf8ea", "committedDate": "2020-03-13T20:30:44Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "4d55e7d183f9601117d9896c6d98d4df1648968c", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/4d55e7d183f9601117d9896c6d98d4df1648968c", "committedDate": "2020-03-16T21:34:00Z", "message": "Add release notes for 0.233"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d55e7d183f9601117d9896c6d98d4df1648968c", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/4d55e7d183f9601117d9896c6d98d4df1648968c", "committedDate": "2020-03-16T21:34:00Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "834366d3319cb8e051136a815bd5c139094b6d8f", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/834366d3319cb8e051136a815bd5c139094b6d8f", "committedDate": "2020-03-16T22:37:35Z", "message": "Add release notes for 0.233"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "834366d3319cb8e051136a815bd5c139094b6d8f", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/834366d3319cb8e051136a815bd5c139094b6d8f", "committedDate": "2020-03-16T22:37:35Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "3169260203bcbdab88df9339fdfb3a569ee05eca", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/3169260203bcbdab88df9339fdfb3a569ee05eca", "committedDate": "2020-03-16T22:39:44Z", "message": "Add release notes for 0.233"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4494ac63eca52374294d2788c7b08032974839df", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/4494ac63eca52374294d2788c7b08032974839df", "committedDate": "2020-03-16T22:40:12Z", "message": "Add release notes for 0.233"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3169260203bcbdab88df9339fdfb3a569ee05eca", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/3169260203bcbdab88df9339fdfb3a569ee05eca", "committedDate": "2020-03-16T22:39:44Z", "message": "Add release notes for 0.233"}, "afterCommit": {"oid": "4494ac63eca52374294d2788c7b08032974839df", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/4494ac63eca52374294d2788c7b08032974839df", "committedDate": "2020-03-16T22:40:12Z", "message": "Add release notes for 0.233"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1994, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}