{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMzgzMTQx", "number": 15360, "title": "Fix integer overflow in newBlockBuilderLike()", "bodyText": "When newBlockBuilderLike() is called on BlockBuilders for complex types,\ntoIntExact() could throw \"Integer Overflow\" exception when the expected\nnew size exceeds integer boundary. Example stack trace is as follows:\njava.lang.ArithmeticException: integer overflow\nat java.base/java.lang.Math.toIntExact(Math.java:1071)\nat com.facebook.presto.common.block.VariableWidthBlockBuilder.newBlockBuilderLike(VariableWidthBlockBuilder.java:393)\n\nThis commit fixes the problem by introducing a new method\ncalculateBlockResetSize() that calculates the new size and bound it\nby MAX_ARRAY_SIZE.\n== NO RELEASE NOTE ==", "createdAt": "2020-10-27T00:19:38Z", "url": "https://github.com/prestodb/presto/pull/15360", "merged": true, "mergeCommit": {"oid": "8e5b6902533149588d69dea19ec5581fd9fd925e"}, "closed": true, "closedAt": "2020-11-07T01:31:56Z", "author": {"login": "yingsu00"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWuxpnABqjM5Mjc5NTY5OTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXiuU6AFqTUyMDQ2NzgyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "623ab2658bc8fae037523ec299b2c2940d06fed5", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/623ab2658bc8fae037523ec299b2c2940d06fed5", "committedDate": "2020-10-27T00:17:49Z", "message": "Fix integer overflow in newBlockBuilderLike()\n\nWhen newBlockBuilderLike() is called on BlockBuilders for complex types,\ntoIntExact() could throw \"Integer Overflow\" exception when the expected\nnew size exceeds integer boundary. Example stack trace is as follows:\n\njava.lang.ArithmeticException: integer overflow\nat java.base/java.lang.Math.toIntExact(Math.java:1071)\nat com.facebook.presto.common.block.VariableWidthBlockBuilder.\n    newBlockBuilderLike(VariableWidthBlockBuilder.java:393)\n\nThis commit fixes the problem by introducing a new method\ncalculateBlockResetSize() that calculates the new size and bound it\nby MAX_ARRAY_SIZE."}, "afterCommit": {"oid": "b394742239efd6ff43489fce0d6a5c2f3fbb1528", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/b394742239efd6ff43489fce0d6a5c2f3fbb1528", "committedDate": "2020-10-27T20:10:22Z", "message": "Fix integer overflow in newBlockBuilderLike()\n\nWhen newBlockBuilderLike() is called on BlockBuilders for complex types,\ntoIntExact() could throw \"Integer Overflow\" exception when the expected\nnew size exceeds integer boundary. Example stack trace is as follows:\n\njava.lang.ArithmeticException: integer overflow\nat java.base/java.lang.Math.toIntExact(Math.java:1071)\nat com.facebook.presto.common.block.VariableWidthBlockBuilder.\n    newBlockBuilderLike(VariableWidthBlockBuilder.java:393)\n\nThis commit fixes the problem by introducing a new method\ncalculateBlockResetSize() that calculates the new size and bound it\nby MAX_ARRAY_SIZE."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b394742239efd6ff43489fce0d6a5c2f3fbb1528", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/b394742239efd6ff43489fce0d6a5c2f3fbb1528", "committedDate": "2020-10-27T20:10:22Z", "message": "Fix integer overflow in newBlockBuilderLike()\n\nWhen newBlockBuilderLike() is called on BlockBuilders for complex types,\ntoIntExact() could throw \"Integer Overflow\" exception when the expected\nnew size exceeds integer boundary. Example stack trace is as follows:\n\njava.lang.ArithmeticException: integer overflow\nat java.base/java.lang.Math.toIntExact(Math.java:1071)\nat com.facebook.presto.common.block.VariableWidthBlockBuilder.\n    newBlockBuilderLike(VariableWidthBlockBuilder.java:393)\n\nThis commit fixes the problem by introducing a new method\ncalculateBlockResetSize() that calculates the new size and bound it\nby MAX_ARRAY_SIZE."}, "afterCommit": {"oid": "befe39c54b3ef475dc49196d4d3fbc481de0a9b2", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/befe39c54b3ef475dc49196d4d3fbc481de0a9b2", "committedDate": "2020-10-28T05:31:09Z", "message": "Fix integer overflow in newBlockBuilderLike()\n\nWhen newBlockBuilderLike() is called on BlockBuilders for complex types,\ntoIntExact() could throw \"Integer Overflow\" exception when the expected\nnew size exceeds integer boundary. Example stack trace is as follows:\n\njava.lang.ArithmeticException: integer overflow\nat java.base/java.lang.Math.toIntExact(Math.java:1071)\nat com.facebook.presto.common.block.VariableWidthBlockBuilder.\n    newBlockBuilderLike(VariableWidthBlockBuilder.java:393)\n\nThis commit fixes the problem by introducing a new method\ncalculateBlockResetSize() that calculates the new size and bound it\nby MAX_ARRAY_SIZE."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "befe39c54b3ef475dc49196d4d3fbc481de0a9b2", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/befe39c54b3ef475dc49196d4d3fbc481de0a9b2", "committedDate": "2020-10-28T05:31:09Z", "message": "Fix integer overflow in newBlockBuilderLike()\n\nWhen newBlockBuilderLike() is called on BlockBuilders for complex types,\ntoIntExact() could throw \"Integer Overflow\" exception when the expected\nnew size exceeds integer boundary. Example stack trace is as follows:\n\njava.lang.ArithmeticException: integer overflow\nat java.base/java.lang.Math.toIntExact(Math.java:1071)\nat com.facebook.presto.common.block.VariableWidthBlockBuilder.\n    newBlockBuilderLike(VariableWidthBlockBuilder.java:393)\n\nThis commit fixes the problem by introducing a new method\ncalculateBlockResetSize() that calculates the new size and bound it\nby MAX_ARRAY_SIZE."}, "afterCommit": {"oid": "6b72ee3be202642b00092e9286ed1da3ea97b780", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/6b72ee3be202642b00092e9286ed1da3ea97b780", "committedDate": "2020-10-28T07:57:12Z", "message": "Fix integer overflow in newBlockBuilderLike()\n\nWhen newBlockBuilderLike() is called on BlockBuilders for complex types,\ntoIntExact() could throw \"Integer Overflow\" exception when the expected\nnew size exceeds integer boundary. Example stack trace is as follows:\n\njava.lang.ArithmeticException: integer overflow\nat java.base/java.lang.Math.toIntExact(Math.java:1071)\nat com.facebook.presto.common.block.VariableWidthBlockBuilder.\n    newBlockBuilderLike(VariableWidthBlockBuilder.java:393)\n\nThis commit fixes the problem by introducing a new method\ncalculateBlockResetSize() that calculates the new size and bound it\nby MAX_ARRAY_SIZE."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MTM5MDAz", "url": "https://github.com/prestodb/presto/pull/15360#pullrequestreview-519139003", "createdAt": "2020-10-28T22:44:25Z", "commit": {"oid": "6b72ee3be202642b00092e9286ed1da3ea97b780"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MTQyMDQ2", "url": "https://github.com/prestodb/presto/pull/15360#pullrequestreview-519142046", "createdAt": "2020-10-28T22:51:28Z", "commit": {"oid": "6b72ee3be202642b00092e9286ed1da3ea97b780"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMjo1MToyOFrOHqAXfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMjo1NDowMVrOHqAbBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwODI1NQ==", "bodyText": "Having currentSize currentPositionCount parameters is confusing. In the original calculateBlockResetSize method currentSize is current-position-count, but here it is not. Maybe renaming the method to calculateNestedBlockResetSize would help. Parameter still need to be renamed, but I don't have any specific suggestions just yet.", "url": "https://github.com/prestodb/presto/pull/15360#discussion_r513808255", "createdAt": "2020-10-28T22:51:28Z", "author": {"login": "mbasmanova"}, "path": "presto-common/src/main/java/com/facebook/presto/common/block/BlockUtil.java", "diffHunk": "@@ -106,6 +108,17 @@ else if (newSize > MAX_ARRAY_SIZE) {\n         return (int) newSize;\n     }\n \n+    static int calculateBlockResetSize(int currentSize, int currentPositionCount, int expectedPositionCount)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b72ee3be202642b00092e9286ed1da3ea97b780"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwOTE1OA==", "bodyText": "The need to add these separators suggests that this test needs to be split into multiple.", "url": "https://github.com/prestodb/presto/pull/15360#discussion_r513809158", "createdAt": "2020-10-28T22:54:01Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/test/java/com/facebook/presto/block/TestBlockBuilder.java", "diffHunk": "@@ -108,6 +112,24 @@ public void testNewBlockBuilderLike()\n         assertEquals(newArrayBlockBuilder.getPositionCount(), 1);\n         // Reserved 200 ARRAY(ARRAY(BIGINT)), and 201 ints for offsets and 200 booleans for nulls\n         assertEquals(newArrayBlockBuilder.getRetainedSizeInBytes(), 5848);\n+\n+        //------------------------- Test newBlockBuilderLike(BlockBuilderStatus, int) on large BlockBuilders so that there is no Integer overflow-------------------------", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b72ee3be202642b00092e9286ed1da3ea97b780"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b72ee3be202642b00092e9286ed1da3ea97b780", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/6b72ee3be202642b00092e9286ed1da3ea97b780", "committedDate": "2020-10-28T07:57:12Z", "message": "Fix integer overflow in newBlockBuilderLike()\n\nWhen newBlockBuilderLike() is called on BlockBuilders for complex types,\ntoIntExact() could throw \"Integer Overflow\" exception when the expected\nnew size exceeds integer boundary. Example stack trace is as follows:\n\njava.lang.ArithmeticException: integer overflow\nat java.base/java.lang.Math.toIntExact(Math.java:1071)\nat com.facebook.presto.common.block.VariableWidthBlockBuilder.\n    newBlockBuilderLike(VariableWidthBlockBuilder.java:393)\n\nThis commit fixes the problem by introducing a new method\ncalculateBlockResetSize() that calculates the new size and bound it\nby MAX_ARRAY_SIZE."}, "afterCommit": {"oid": "b357f12c4293eb641684e777d5126907fe9aef5f", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/b357f12c4293eb641684e777d5126907fe9aef5f", "committedDate": "2020-10-30T00:17:38Z", "message": "Fix integer overflow in newBlockBuilderLike()\n\nWhen newBlockBuilderLike() is called on BlockBuilders for complex types,\ntoIntExact() could throw \"Integer Overflow\" exception when the expected\nnew size exceeds integer boundary. Example stack trace is as follows:\n\njava.lang.ArithmeticException: integer overflow\nat java.base/java.lang.Math.toIntExact(Math.java:1071)\nat com.facebook.presto.common.block.VariableWidthBlockBuilder.\n    newBlockBuilderLike(VariableWidthBlockBuilder.java:393)\n\nThis commit fixes the problem by introducing a new method\ncalculateBlockResetSize() that calculates the new size and bound it\nby MAX_ARRAY_SIZE."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5e59bb65b8f709eca9a805feb969fed3805c191", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/c5e59bb65b8f709eca9a805feb969fed3805c191", "committedDate": "2020-10-30T07:49:17Z", "message": "Fix integer overflow in newBlockBuilderLike()\n\nWhen newBlockBuilderLike() is called on BlockBuilders for complex types,\ntoIntExact() could throw \"Integer Overflow\" exception when the expected\nnew size exceeds integer boundary. Example stack trace is as follows:\n\njava.lang.ArithmeticException: integer overflow\nat java.base/java.lang.Math.toIntExact(Math.java:1071)\nat com.facebook.presto.common.block.VariableWidthBlockBuilder.\n    newBlockBuilderLike(VariableWidthBlockBuilder.java:393)\n\nThis commit fixes the problem by introducing a new method\ncalculateBlockResetSize() that calculates the new size and bound it\nby MAX_ARRAY_SIZE."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b357f12c4293eb641684e777d5126907fe9aef5f", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/b357f12c4293eb641684e777d5126907fe9aef5f", "committedDate": "2020-10-30T00:17:38Z", "message": "Fix integer overflow in newBlockBuilderLike()\n\nWhen newBlockBuilderLike() is called on BlockBuilders for complex types,\ntoIntExact() could throw \"Integer Overflow\" exception when the expected\nnew size exceeds integer boundary. Example stack trace is as follows:\n\njava.lang.ArithmeticException: integer overflow\nat java.base/java.lang.Math.toIntExact(Math.java:1071)\nat com.facebook.presto.common.block.VariableWidthBlockBuilder.\n    newBlockBuilderLike(VariableWidthBlockBuilder.java:393)\n\nThis commit fixes the problem by introducing a new method\ncalculateBlockResetSize() that calculates the new size and bound it\nby MAX_ARRAY_SIZE."}, "afterCommit": {"oid": "c5e59bb65b8f709eca9a805feb969fed3805c191", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/c5e59bb65b8f709eca9a805feb969fed3805c191", "committedDate": "2020-10-30T07:49:17Z", "message": "Fix integer overflow in newBlockBuilderLike()\n\nWhen newBlockBuilderLike() is called on BlockBuilders for complex types,\ntoIntExact() could throw \"Integer Overflow\" exception when the expected\nnew size exceeds integer boundary. Example stack trace is as follows:\n\njava.lang.ArithmeticException: integer overflow\nat java.base/java.lang.Math.toIntExact(Math.java:1071)\nat com.facebook.presto.common.block.VariableWidthBlockBuilder.\n    newBlockBuilderLike(VariableWidthBlockBuilder.java:393)\n\nThis commit fixes the problem by introducing a new method\ncalculateBlockResetSize() that calculates the new size and bound it\nby MAX_ARRAY_SIZE."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f5ad827f8eea64543792dfbd38ef808db750a1e", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/4f5ad827f8eea64543792dfbd38ef808db750a1e", "committedDate": "2020-10-30T08:04:13Z", "message": "Remove calculateBlockResetBytes in BlockUtil"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNDY3ODI1", "url": "https://github.com/prestodb/presto/pull/15360#pullrequestreview-520467825", "createdAt": "2020-10-30T08:44:52Z", "commit": {"oid": "4f5ad827f8eea64543792dfbd38ef808db750a1e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4633, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}