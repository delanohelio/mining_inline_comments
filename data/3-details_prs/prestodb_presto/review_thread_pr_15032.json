{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MTg3Nzg0", "number": 15032, "reviewThreads": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo0ODozNFrOEaOJcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMDowMzozMVrOEcOU0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTMwMjI1OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo0ODozNFrOHDg0Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMToyMToyMVrOHF2uVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ0NTQzOA==", "bodyText": "What is the user impact?  Needs to be rephrased", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473445438", "createdAt": "2020-08-19T23:48:34Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.240\n+=============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a32d18a5d7b7cb484f5a7a0e8051117cd09214f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU1ODUwMQ==", "bodyText": "@rongrong This is from #14912  . Can you rephrase this and comment here. I can update the notes.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473558501", "createdAt": "2020-08-20T02:58:27Z", "author": {"login": "ajaygeorge"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.240\n+=============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ0NTQzOA=="}, "originalCommit": {"oid": "5a32d18a5d7b7cb484f5a7a0e8051117cd09214f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwMTUyNQ==", "bodyText": "Fix compiler error due to incorrect LambdaDefinitionExpression canonicalization.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r475901525", "createdAt": "2020-08-24T21:21:21Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.240\n+=============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ0NTQzOA=="}, "originalCommit": {"oid": "5a32d18a5d7b7cb484f5a7a0e8051117cd09214f"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTMwNzQ2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo0OTo1MlrOHDg3vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMjozMzo1NFrOHDnVRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ0NjMzMw==", "bodyText": "Doesn't seem to follow our convention.  Add optional parameters to procedures?", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473446333", "createdAt": "2020-08-19T23:49:52Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.240\n+=============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Allow procedures to have optional arguments with default values.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a32d18a5d7b7cb484f5a7a0e8051117cd09214f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU1MjE5OQ==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473552199", "createdAt": "2020-08-20T02:33:54Z", "author": {"login": "ajaygeorge"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.240\n+=============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Allow procedures to have optional arguments with default values.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ0NjMzMw=="}, "originalCommit": {"oid": "5a32d18a5d7b7cb484f5a7a0e8051117cd09214f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTMwOTg2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo1MDoyNlrOHDg5Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo1MDoyNlrOHDg5Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ0NjczMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Push down dereference expression.\n          \n          \n            \n            * Add support for pushdown of dereference expressions.\n          \n      \n    \n    \n  \n\n?", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473446730", "createdAt": "2020-08-19T23:50:26Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.240\n+=============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Allow procedures to have optional arguments with default values.\n+* Push down dereference expression.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a32d18a5d7b7cb484f5a7a0e8051117cd09214f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTMyMTQ0OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo1MzoxNFrOHDhBCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo1MzoxNFrOHDhBCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ0ODcxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Support union all operation with more than 1 druid source\n          \n          \n            \n            * Add support for union all operation with more than 1 druid source", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473448713", "createdAt": "2020-08-19T23:53:14Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.240\n+=============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Allow procedures to have optional arguments with default values.\n+* Push down dereference expression.\n+* Use local private credentials (json key file) to refresh GCS access token presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add window function spilling capacity to local disk.\n+* Add support for limit pushdown through union\n+\n+Thrift Connector Changes\n+________________________\n+* Rename ``presto-thrift-connector-api`` to ``presto-thrift-api`` and have separate packages for datatypes, valuesets and connector.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where Verifier fails to start when failure resolver is disabled.\n+* Add configuration property ``test_name``, to be passed in to the client info blob.\n+* Add support to implement customized way of launching Presto queries.\n+* Add support to populate client info for the queries issued by Verifier.\n+* Add support to resubmit verification if test query fails with ``HIVE_PARTITION_OFFLINE``.\n+* Add support to run helper queries on a separate cluster other than the control cluster.\n+* Add support to skip running control queries and comparing results. This can be enabled by configuration property ``skip-control``.\n+\n+Cassandra Changes\n+_________________\n+* Add TLS security support.\n+\n+Druid Changes\n+_____________\n+* Support union all operation with more than 1 druid source", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a32d18a5d7b7cb484f5a7a0e8051117cd09214f"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTMyMjM3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo1MzoyOFrOHDhBnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo1MzoyOFrOHDhBnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ0ODg2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Support Filter on top of Aggregation\n          \n          \n            \n            * Add support for filter on top of Aggregation", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473448863", "createdAt": "2020-08-19T23:53:28Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.240\n+=============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Allow procedures to have optional arguments with default values.\n+* Push down dereference expression.\n+* Use local private credentials (json key file) to refresh GCS access token presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add window function spilling capacity to local disk.\n+* Add support for limit pushdown through union\n+\n+Thrift Connector Changes\n+________________________\n+* Rename ``presto-thrift-connector-api`` to ``presto-thrift-api`` and have separate packages for datatypes, valuesets and connector.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where Verifier fails to start when failure resolver is disabled.\n+* Add configuration property ``test_name``, to be passed in to the client info blob.\n+* Add support to implement customized way of launching Presto queries.\n+* Add support to populate client info for the queries issued by Verifier.\n+* Add support to resubmit verification if test query fails with ``HIVE_PARTITION_OFFLINE``.\n+* Add support to run helper queries on a separate cluster other than the control cluster.\n+* Add support to skip running control queries and comparing results. This can be enabled by configuration property ``skip-control``.\n+\n+Cassandra Changes\n+_________________\n+* Add TLS security support.\n+\n+Druid Changes\n+_____________\n+* Support union all operation with more than 1 druid source\n+* Support Filter on top of Aggregation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a32d18a5d7b7cb484f5a7a0e8051117cd09214f"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTMyNDQ0OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo1Mzo1OVrOHDhC8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo1Mzo1OVrOHDhC8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ0OTIwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Add support for ip data type in ES Connector\n          \n          \n            \n            * Add support for IP data type.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473449200", "createdAt": "2020-08-19T23:53:59Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.240\n+=============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Allow procedures to have optional arguments with default values.\n+* Push down dereference expression.\n+* Use local private credentials (json key file) to refresh GCS access token presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add window function spilling capacity to local disk.\n+* Add support for limit pushdown through union\n+\n+Thrift Connector Changes\n+________________________\n+* Rename ``presto-thrift-connector-api`` to ``presto-thrift-api`` and have separate packages for datatypes, valuesets and connector.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where Verifier fails to start when failure resolver is disabled.\n+* Add configuration property ``test_name``, to be passed in to the client info blob.\n+* Add support to implement customized way of launching Presto queries.\n+* Add support to populate client info for the queries issued by Verifier.\n+* Add support to resubmit verification if test query fails with ``HIVE_PARTITION_OFFLINE``.\n+* Add support to run helper queries on a separate cluster other than the control cluster.\n+* Add support to skip running control queries and comparing results. This can be enabled by configuration property ``skip-control``.\n+\n+Cassandra Changes\n+_________________\n+* Add TLS security support.\n+\n+Druid Changes\n+_____________\n+* Support union all operation with more than 1 druid source\n+* Support Filter on top of Aggregation\n+* Fix unhandled HTTP response error for druid client\n+\n+Elasticserarch Changes\n+______________________\n+* Add support for ip data type in ES Connector", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a32d18a5d7b7cb484f5a7a0e8051117cd09214f"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTMyOTE4OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo1NTowNFrOHDhF-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo1NTowNFrOHDhF-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ0OTk3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Improve geometry_to_bing_tiles.  It is 50x faster on complex polygons, the limit on polygon complexity is removed, and some correctness bugs have been fixed.\n          \n          \n            \n            * Improve func:`geometry_to_bing_tiles` performance.  It is 50x faster on complex polygons, the limit on polygon complexity is removed, and some correctness bugs have been fixed.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473449977", "createdAt": "2020-08-19T23:55:04Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.240\n+=============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Allow procedures to have optional arguments with default values.\n+* Push down dereference expression.\n+* Use local private credentials (json key file) to refresh GCS access token presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add window function spilling capacity to local disk.\n+* Add support for limit pushdown through union\n+\n+Thrift Connector Changes\n+________________________\n+* Rename ``presto-thrift-connector-api`` to ``presto-thrift-api`` and have separate packages for datatypes, valuesets and connector.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where Verifier fails to start when failure resolver is disabled.\n+* Add configuration property ``test_name``, to be passed in to the client info blob.\n+* Add support to implement customized way of launching Presto queries.\n+* Add support to populate client info for the queries issued by Verifier.\n+* Add support to resubmit verification if test query fails with ``HIVE_PARTITION_OFFLINE``.\n+* Add support to run helper queries on a separate cluster other than the control cluster.\n+* Add support to skip running control queries and comparing results. This can be enabled by configuration property ``skip-control``.\n+\n+Cassandra Changes\n+_________________\n+* Add TLS security support.\n+\n+Druid Changes\n+_____________\n+* Support union all operation with more than 1 druid source\n+* Support Filter on top of Aggregation\n+* Fix unhandled HTTP response error for druid client\n+\n+Elasticserarch Changes\n+______________________\n+* Add support for ip data type in ES Connector\n+\n+Geospatial Changes\n+__________________\n+* Improve geometry_to_bing_tiles.  It is 50x faster on complex polygons, the limit on polygon complexity is removed, and some correctness bugs have been fixed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a32d18a5d7b7cb484f5a7a0e8051117cd09214f"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTMzMTE3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo1NTozNlrOHDhHaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo1NTozNlrOHDhHaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ1MDM0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Improves split generation by avoiding an unncessary splittable check when files are smaller than the initial split max size, regardless of their input format.\n          \n          \n            \n            * Improve split generation performance.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473450347", "createdAt": "2020-08-19T23:55:36Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.240\n+=============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Allow procedures to have optional arguments with default values.\n+* Push down dereference expression.\n+* Use local private credentials (json key file) to refresh GCS access token presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add window function spilling capacity to local disk.\n+* Add support for limit pushdown through union\n+\n+Thrift Connector Changes\n+________________________\n+* Rename ``presto-thrift-connector-api`` to ``presto-thrift-api`` and have separate packages for datatypes, valuesets and connector.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where Verifier fails to start when failure resolver is disabled.\n+* Add configuration property ``test_name``, to be passed in to the client info blob.\n+* Add support to implement customized way of launching Presto queries.\n+* Add support to populate client info for the queries issued by Verifier.\n+* Add support to resubmit verification if test query fails with ``HIVE_PARTITION_OFFLINE``.\n+* Add support to run helper queries on a separate cluster other than the control cluster.\n+* Add support to skip running control queries and comparing results. This can be enabled by configuration property ``skip-control``.\n+\n+Cassandra Changes\n+_________________\n+* Add TLS security support.\n+\n+Druid Changes\n+_____________\n+* Support union all operation with more than 1 druid source\n+* Support Filter on top of Aggregation\n+* Fix unhandled HTTP response error for druid client\n+\n+Elasticserarch Changes\n+______________________\n+* Add support for ip data type in ES Connector\n+\n+Geospatial Changes\n+__________________\n+* Improve geometry_to_bing_tiles.  It is 50x faster on complex polygons, the limit on polygon complexity is removed, and some correctness bugs have been fixed.\n+* Add geometry_to_dissolved_bing_tiles function, which dissolves complete sets of child tiles to their parent.\n+* Introduce ``bing_tile_children`` and ``bing_tile_parent`` functions to get parents and children of a Bing tile.\n+\n+Hive Changes\n+____________\n+* Fix parquet statistics when min/max is not set.\n+* Improves split generation by avoiding an unncessary splittable check when files are smaller than the initial split max size, regardless of their input format.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a32d18a5d7b7cb484f5a7a0e8051117cd09214f"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTMzMzY4OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo1NjoxNFrOHDhJLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo1NjoxNFrOHDhJLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ1MDc5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Support insert in Kafka connector.\n          \n          \n            \n            * Support `INSERT` in Kafka connector.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473450797", "createdAt": "2020-08-19T23:56:14Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.240\n+=============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Allow procedures to have optional arguments with default values.\n+* Push down dereference expression.\n+* Use local private credentials (json key file) to refresh GCS access token presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add window function spilling capacity to local disk.\n+* Add support for limit pushdown through union\n+\n+Thrift Connector Changes\n+________________________\n+* Rename ``presto-thrift-connector-api`` to ``presto-thrift-api`` and have separate packages for datatypes, valuesets and connector.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where Verifier fails to start when failure resolver is disabled.\n+* Add configuration property ``test_name``, to be passed in to the client info blob.\n+* Add support to implement customized way of launching Presto queries.\n+* Add support to populate client info for the queries issued by Verifier.\n+* Add support to resubmit verification if test query fails with ``HIVE_PARTITION_OFFLINE``.\n+* Add support to run helper queries on a separate cluster other than the control cluster.\n+* Add support to skip running control queries and comparing results. This can be enabled by configuration property ``skip-control``.\n+\n+Cassandra Changes\n+_________________\n+* Add TLS security support.\n+\n+Druid Changes\n+_____________\n+* Support union all operation with more than 1 druid source\n+* Support Filter on top of Aggregation\n+* Fix unhandled HTTP response error for druid client\n+\n+Elasticserarch Changes\n+______________________\n+* Add support for ip data type in ES Connector\n+\n+Geospatial Changes\n+__________________\n+* Improve geometry_to_bing_tiles.  It is 50x faster on complex polygons, the limit on polygon complexity is removed, and some correctness bugs have been fixed.\n+* Add geometry_to_dissolved_bing_tiles function, which dissolves complete sets of child tiles to their parent.\n+* Introduce ``bing_tile_children`` and ``bing_tile_parent`` functions to get parents and children of a Bing tile.\n+\n+Hive Changes\n+____________\n+* Fix parquet statistics when min/max is not set.\n+* Improves split generation by avoiding an unncessary splittable check when files are smaller than the initial split max size, regardless of their input format.\n+* Add support for Hudi realtime input format for hudi realtime queries.\n+* Add support for splitting hive files when skip.header.line.count=1.\n+* Allow presto-hive to use custom parquet input formats.\n+\n+Kafka Changes\n+_____________\n+* Support insert in Kafka connector.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a32d18a5d7b7cb484f5a7a0e8051117cd09214f"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MjU0NzQ1OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMzozMDo0NFrOHEBIRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMjo1MjoyMVrOHE_zdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk3NDg1NA==", "bodyText": "I think this is missing some words between token and presto-cli.  Is that how you use it?", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473974854", "createdAt": "2020-08-20T13:30:44Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.\n+* Add support for pushdown of dereference expressions.\n+* Use local private credentials (json key file) to refresh GCS access token presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwMTcxOA==", "bodyText": "I think this should be in two separate lines. See original PR for this #14585 .\nLet me add token. Usage : presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r475001718", "createdAt": "2020-08-21T22:52:21Z", "author": {"login": "ajaygeorge"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.\n+* Add support for pushdown of dereference expressions.\n+* Use local private credentials (json key file) to refresh GCS access token presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk3NDg1NA=="}, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MjU1MDMyOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMzozMToxNVrOHEBKSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMToyNDoyOVrOHF20AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk3NTM2OA==", "bodyText": "not a user friendly description", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473975368", "createdAt": "2020-08-20T13:31:15Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.\n+* Add support for pushdown of dereference expressions.\n+* Use local private credentials (json key file) to refresh GCS access token presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add window function spilling capacity to local disk.\n+* Add support for limit pushdown through union", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwMjkwMw==", "bodyText": "@rongrong this is from #14895 . Can you help me rephrase this in a user friendly way.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r475002903", "createdAt": "2020-08-21T22:57:26Z", "author": {"login": "ajaygeorge"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.\n+* Add support for pushdown of dereference expressions.\n+* Use local private credentials (json key file) to refresh GCS access token presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add window function spilling capacity to local disk.\n+* Add support for limit pushdown through union", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk3NTM2OA=="}, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwMjk3Nw==", "bodyText": "I don't know how to rephrase it. It basically pushes limit through union. I think it's pretty easy to understand and if we consider description of plan optimization not user friendly / not user facing we can remove this from release note.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r475902977", "createdAt": "2020-08-24T21:24:29Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.\n+* Add support for pushdown of dereference expressions.\n+* Use local private credentials (json key file) to refresh GCS access token presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add window function spilling capacity to local disk.\n+* Add support for limit pushdown through union", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk3NTM2OA=="}, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MjU2MDIxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMzozMjo1MVrOHEBQvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMjo0NDozMlrOHE_sEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk3NzAyMw==", "bodyText": "Add ability to spill window functions to local disk when a worker is out of memory.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473977023", "createdAt": "2020-08-20T13:32:51Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.\n+* Add support for pushdown of dereference expressions.\n+* Use local private credentials (json key file) to refresh GCS access token presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add window function spilling capacity to local disk.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk5OTgyNA==", "bodyText": "done.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r474999824", "createdAt": "2020-08-21T22:44:32Z", "author": {"login": "ajaygeorge"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.\n+* Add support for pushdown of dereference expressions.\n+* Use local private credentials (json key file) to refresh GCS access token presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add window function spilling capacity to local disk.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk3NzAyMw=="}, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MjU3Njg2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMzozNTozM1rOHEBbzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMToxMzo0N1rOHF2fqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk3OTg1NQ==", "bodyText": "this isn't a user friendly description", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473979855", "createdAt": "2020-08-20T13:35:33Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.\n+* Add support for pushdown of dereference expressions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwMjQxOQ==", "bodyText": "@zhenxiao this is from #14829 . Can you help me rephrase this in a user friendly way.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r475002419", "createdAt": "2020-08-21T22:55:22Z", "author": {"login": "ajaygeorge"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.\n+* Add support for pushdown of dereference expressions.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk3OTg1NQ=="}, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwNzcwOQ==", "bodyText": "Provide experimental.pushdown-dereference-enabled to enable pushdown of dereference expressions for querying nested data", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r475007709", "createdAt": "2020-08-21T23:20:00Z", "author": {"login": "zhenxiao"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.\n+* Add support for pushdown of dereference expressions.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk3OTg1NQ=="}, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg5Nzc2OA==", "bodyText": "I'm going to reword it as\nAdd support for pushdown of dereference expressions for querying nested data.  This can be enabled with the pushdown_dereference_enabled  session property or the experimental.pushdown-dereference-enabled configuration property.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r475897768", "createdAt": "2020-08-24T21:13:47Z", "author": {"login": "ajaygeorge"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.\n+* Add support for pushdown of dereference expressions.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk3OTg1NQ=="}, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MjYwNTYxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMzo0MDowNFrOHEBvGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMjo0MjozNlrOHE_qXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk4NDc5NA==", "bodyText": "Allow procedures to accept optional parameters", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473984794", "createdAt": "2020-08-20T13:40:04Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk4NTc3MA==", "bodyText": "also this is an spi change", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473985770", "createdAt": "2020-08-20T13:40:57Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk4NDc5NA=="}, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk5OTM5MQ==", "bodyText": "Moved to spi with the suggested rewording.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r474999391", "createdAt": "2020-08-21T22:42:36Z", "author": {"login": "ajaygeorge"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk4NDc5NA=="}, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MjYyMjYwOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMzo0MjozNlrOHEB6Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMjo0MjoxOVrOHE_qGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk4NzYxOA==", "bodyText": "these release notes are missing periods at the end of the sentences", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r473987618", "createdAt": "2020-08-20T13:42:36Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.\n+* Add support for pushdown of dereference expressions.\n+* Use local private credentials (json key file) to refresh GCS access token presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add window function spilling capacity to local disk.\n+* Add support for limit pushdown through union\n+\n+Thrift Connector Changes\n+________________________\n+* Rename ``presto-thrift-connector-api`` to ``presto-thrift-api`` and have separate packages for datatypes, valuesets and connector.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where Verifier fails to start when failure resolver is disabled.\n+* Add configuration property ``test_name``, to be passed in to the client info blob.\n+* Add support to implement customized way of launching Presto queries.\n+* Add support to populate client info for the queries issued by Verifier.\n+* Add support to resubmit verification if test query fails with ``HIVE_PARTITION_OFFLINE``.\n+* Add support to run helper queries on a separate cluster other than the control cluster.\n+* Add support to skip running control queries and comparing results. This can be enabled by configuration property ``skip-control``.\n+\n+Cassandra Changes\n+_________________\n+* Add TLS security support.\n+\n+Druid Changes\n+_____________\n+* Add support for union all operation with more than 1 druid source", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk5OTMyMg==", "bodyText": "Added periods.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r474999322", "createdAt": "2020-08-21T22:42:19Z", "author": {"login": "ajaygeorge"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add optional parameters to procedures.\n+* Add support for pushdown of dereference expressions.\n+* Use local private credentials (json key file) to refresh GCS access token presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add window function spilling capacity to local disk.\n+* Add support for limit pushdown through union\n+\n+Thrift Connector Changes\n+________________________\n+* Rename ``presto-thrift-connector-api`` to ``presto-thrift-api`` and have separate packages for datatypes, valuesets and connector.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where Verifier fails to start when failure resolver is disabled.\n+* Add configuration property ``test_name``, to be passed in to the client info blob.\n+* Add support to implement customized way of launching Presto queries.\n+* Add support to populate client info for the queries issued by Verifier.\n+* Add support to resubmit verification if test query fails with ``HIVE_PARTITION_OFFLINE``.\n+* Add support to run helper queries on a separate cluster other than the control cluster.\n+* Add support to skip running control queries and comparing results. This can be enabled by configuration property ``skip-control``.\n+\n+Cassandra Changes\n+_________________\n+* Add TLS security support.\n+\n+Druid Changes\n+_____________\n+* Add support for union all operation with more than 1 druid source", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk4NzYxOA=="}, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDAxOTA5OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOToxNTo0NlrOHEPqHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMjo0ODo0NFrOHE_wDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMjg5Mg==", "bodyText": "This can go into the highlights.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r474212892", "createdAt": "2020-08-20T19:15:46Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwMDg0NA==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r475000844", "createdAt": "2020-08-21T22:48:44Z", "author": {"login": "ajaygeorge"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,70 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Highlights placeholder\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix LambdaDefinitionExpression canonicalization did not handle CAST.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.\n+* Add `query.max-scan-physical-bytes` configuration and `query_max_scan_physical_bytes` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMjg5Mg=="}, "originalCommit": {"oid": "2063b0eee2bc9f67f07853148e8bbc61fa5b890f"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NTM2MTQxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMTo0NDoyN1rOHF3WXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMTo1MzoyMlrOHF3l4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkxMTc3NQ==", "bodyText": "Use double back quotes, and fix misplace whitespace.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r475911775", "createdAt": "2020-08-24T21:44:27Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,73 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Add support for inlining SQL functions at query planning time.\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix compiler error due to incorrect LambdaDefinitionExpression canonicalization.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ec5ffe0cc38287969042ff0ef211d15ac07857a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkxNTc0NA==", "bodyText": "done. corrected in a couple of other locations as well.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r475915744", "createdAt": "2020-08-24T21:53:22Z", "author": {"login": "ajaygeorge"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,73 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Add support for inlining SQL functions at query planning time.\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix compiler error due to incorrect LambdaDefinitionExpression canonicalization.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add `IF EXISTS `and `IF NOT EXISTS` syntax to `ALTER TABLE`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkxMTc3NQ=="}, "originalCommit": {"oid": "8ec5ffe0cc38287969042ff0ef211d15ac07857a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MDI5ODU5OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMDowMjowMFrOHGnuVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMToxOTo0NlrOHGqKYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcwNDM0Mw==", "bodyText": "Let add those 2 items to highlights.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r476704343", "createdAt": "2020-08-25T20:02:00Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,73 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Add support for inlining SQL functions at query planning time.\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix compiler error due to incorrect LambdaDefinitionExpression canonicalization.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add ``IF EXISTS`` and ``IF NOT EXISTS`` syntax to ``ALTER TABLE``.\n+* Add ``query.max-scan-physical-bytes`` configuration and ``query_max_scan_physical_bytes`` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add support for pushdown of dereference expressions for querying nested data. This can be enabled with the ``pushdown_dereference_enabled`` session property or the ``experimental.pushdown-dereference-enabled`` configuration property.\n+* Use local private credentials (json key file) to refresh GCS access token. Usage : presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add ability to spill window functions to local disk when a worker is out of memory.\n+* Add support for limit pushdown through union.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d2ab33b3daa495478429e824066ffc7d2ee751e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0NDI4OA==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r476744288", "createdAt": "2020-08-25T21:19:46Z", "author": {"login": "ajaygeorge"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,73 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Add support for inlining SQL functions at query planning time.\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix compiler error due to incorrect LambdaDefinitionExpression canonicalization.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add ``IF EXISTS`` and ``IF NOT EXISTS`` syntax to ``ALTER TABLE``.\n+* Add ``query.max-scan-physical-bytes`` configuration and ``query_max_scan_physical_bytes`` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add support for pushdown of dereference expressions for querying nested data. This can be enabled with the ``pushdown_dereference_enabled`` session property or the ``experimental.pushdown-dereference-enabled`` configuration property.\n+* Use local private credentials (json key file) to refresh GCS access token. Usage : presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add ability to spill window functions to local disk when a worker is out of memory.\n+* Add support for limit pushdown through union.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcwNDM0Mw=="}, "originalCommit": {"oid": "8d2ab33b3daa495478429e824066ffc7d2ee751e"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MDI5OTYwOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMDowMjoyMFrOHGnu_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMToxOTo1M1rOHGqK2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcwNDUxMQ==", "bodyText": "Let's add this to highlight.", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r476704511", "createdAt": "2020-08-25T20:02:20Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,73 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Add support for inlining SQL functions at query planning time.\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix compiler error due to incorrect LambdaDefinitionExpression canonicalization.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add ``IF EXISTS`` and ``IF NOT EXISTS`` syntax to ``ALTER TABLE``.\n+* Add ``query.max-scan-physical-bytes`` configuration and ``query_max_scan_physical_bytes`` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d2ab33b3daa495478429e824066ffc7d2ee751e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0NDQxMA==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r476744410", "createdAt": "2020-08-25T21:19:53Z", "author": {"login": "ajaygeorge"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,73 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Add support for inlining SQL functions at query planning time.\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix compiler error due to incorrect LambdaDefinitionExpression canonicalization.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add ``IF EXISTS`` and ``IF NOT EXISTS`` syntax to ``ALTER TABLE``.\n+* Add ``query.max-scan-physical-bytes`` configuration and ``query_max_scan_physical_bytes`` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcwNDUxMQ=="}, "originalCommit": {"oid": "8d2ab33b3daa495478429e824066ffc7d2ee751e"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MDMwMTA0OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMDowMjo1M1rOHGnwAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMToyMDowMFrOHGqLPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcwNDc2OQ==", "bodyText": ":func:", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r476704769", "createdAt": "2020-08-25T20:02:53Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,73 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Add support for inlining SQL functions at query planning time.\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix compiler error due to incorrect LambdaDefinitionExpression canonicalization.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add ``IF EXISTS`` and ``IF NOT EXISTS`` syntax to ``ALTER TABLE``.\n+* Add ``query.max-scan-physical-bytes`` configuration and ``query_max_scan_physical_bytes`` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add support for pushdown of dereference expressions for querying nested data. This can be enabled with the ``pushdown_dereference_enabled`` session property or the ``experimental.pushdown-dereference-enabled`` configuration property.\n+* Use local private credentials (json key file) to refresh GCS access token. Usage : presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add ability to spill window functions to local disk when a worker is out of memory.\n+* Add support for limit pushdown through union.\n+\n+Thrift Connector Changes\n+________________________\n+* Rename ``presto-thrift-connector-api`` to ``presto-thrift-api`` and have separate packages for datatypes, valuesets and connector.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where Verifier fails to start when failure resolver is disabled.\n+* Add configuration property ``test_name``, to be passed in to the client info blob.\n+* Add support to implement customized way of launching Presto queries.\n+* Add support to populate client info for the queries issued by Verifier.\n+* Add support to resubmit verification if test query fails with ``HIVE_PARTITION_OFFLINE``.\n+* Add support to run helper queries on a separate cluster other than the control cluster.\n+* Add support to skip running control queries and comparing results. This can be enabled by configuration property ``skip-control``.\n+\n+Cassandra Changes\n+_________________\n+* Add TLS security support.\n+\n+Druid Changes\n+_____________\n+* Add support for union all operation with more than 1 druid source.\n+* Add support for filter on top of Aggregation.\n+* Fix unhandled HTTP response error for druid client.\n+\n+Elasticserarch Changes\n+______________________\n+* Add support for IP data type.\n+\n+Geospatial Changes\n+__________________\n+* Improve func:`geometry_to_bing_tiles` performance.  It is 50x faster on complex polygons, the limit on polygon complexity is removed, and some correctness bugs have been fixed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d2ab33b3daa495478429e824066ffc7d2ee751e"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0NDUxMQ==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r476744511", "createdAt": "2020-08-25T21:20:00Z", "author": {"login": "ajaygeorge"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,73 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Add support for inlining SQL functions at query planning time.\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix compiler error due to incorrect LambdaDefinitionExpression canonicalization.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add ``IF EXISTS`` and ``IF NOT EXISTS`` syntax to ``ALTER TABLE``.\n+* Add ``query.max-scan-physical-bytes`` configuration and ``query_max_scan_physical_bytes`` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add support for pushdown of dereference expressions for querying nested data. This can be enabled with the ``pushdown_dereference_enabled`` session property or the ``experimental.pushdown-dereference-enabled`` configuration property.\n+* Use local private credentials (json key file) to refresh GCS access token. Usage : presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add ability to spill window functions to local disk when a worker is out of memory.\n+* Add support for limit pushdown through union.\n+\n+Thrift Connector Changes\n+________________________\n+* Rename ``presto-thrift-connector-api`` to ``presto-thrift-api`` and have separate packages for datatypes, valuesets and connector.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where Verifier fails to start when failure resolver is disabled.\n+* Add configuration property ``test_name``, to be passed in to the client info blob.\n+* Add support to implement customized way of launching Presto queries.\n+* Add support to populate client info for the queries issued by Verifier.\n+* Add support to resubmit verification if test query fails with ``HIVE_PARTITION_OFFLINE``.\n+* Add support to run helper queries on a separate cluster other than the control cluster.\n+* Add support to skip running control queries and comparing results. This can be enabled by configuration property ``skip-control``.\n+\n+Cassandra Changes\n+_________________\n+* Add TLS security support.\n+\n+Druid Changes\n+_____________\n+* Add support for union all operation with more than 1 druid source.\n+* Add support for filter on top of Aggregation.\n+* Fix unhandled HTTP response error for druid client.\n+\n+Elasticserarch Changes\n+______________________\n+* Add support for IP data type.\n+\n+Geospatial Changes\n+__________________\n+* Improve func:`geometry_to_bing_tiles` performance.  It is 50x faster on complex polygons, the limit on polygon complexity is removed, and some correctness bugs have been fixed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcwNDc2OQ=="}, "originalCommit": {"oid": "8d2ab33b3daa495478429e824066ffc7d2ee751e"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MDMwMjkxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMDowMzozMVrOHGnxNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMToyMDowNFrOHGqLbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcwNTA3OA==", "bodyText": ":func:`bing_tile_children` :func:`bing_tile_parent`", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r476705078", "createdAt": "2020-08-25T20:03:31Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,73 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Add support for inlining SQL functions at query planning time.\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix compiler error due to incorrect LambdaDefinitionExpression canonicalization.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add ``IF EXISTS`` and ``IF NOT EXISTS`` syntax to ``ALTER TABLE``.\n+* Add ``query.max-scan-physical-bytes`` configuration and ``query_max_scan_physical_bytes`` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add support for pushdown of dereference expressions for querying nested data. This can be enabled with the ``pushdown_dereference_enabled`` session property or the ``experimental.pushdown-dereference-enabled`` configuration property.\n+* Use local private credentials (json key file) to refresh GCS access token. Usage : presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add ability to spill window functions to local disk when a worker is out of memory.\n+* Add support for limit pushdown through union.\n+\n+Thrift Connector Changes\n+________________________\n+* Rename ``presto-thrift-connector-api`` to ``presto-thrift-api`` and have separate packages for datatypes, valuesets and connector.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where Verifier fails to start when failure resolver is disabled.\n+* Add configuration property ``test_name``, to be passed in to the client info blob.\n+* Add support to implement customized way of launching Presto queries.\n+* Add support to populate client info for the queries issued by Verifier.\n+* Add support to resubmit verification if test query fails with ``HIVE_PARTITION_OFFLINE``.\n+* Add support to run helper queries on a separate cluster other than the control cluster.\n+* Add support to skip running control queries and comparing results. This can be enabled by configuration property ``skip-control``.\n+\n+Cassandra Changes\n+_________________\n+* Add TLS security support.\n+\n+Druid Changes\n+_____________\n+* Add support for union all operation with more than 1 druid source.\n+* Add support for filter on top of Aggregation.\n+* Fix unhandled HTTP response error for druid client.\n+\n+Elasticserarch Changes\n+______________________\n+* Add support for IP data type.\n+\n+Geospatial Changes\n+__________________\n+* Improve func:`geometry_to_bing_tiles` performance.  It is 50x faster on complex polygons, the limit on polygon complexity is removed, and some correctness bugs have been fixed.\n+* Add geometry_to_dissolved_bing_tiles function, which dissolves complete sets of child tiles to their parent.\n+* Introduce ``bing_tile_children`` and ``bing_tile_parent`` functions to get parents and children of a Bing tile.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d2ab33b3daa495478429e824066ffc7d2ee751e"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0NDU1OQ==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/15032#discussion_r476744559", "createdAt": "2020-08-25T21:20:04Z", "author": {"login": "ajaygeorge"}, "path": "presto-docs/src/main/sphinx/release/release-0.240.rst", "diffHunk": "@@ -0,0 +1,73 @@\n+=============\n+Release 0.240\n+=============\n+\n+**Highlights**\n+==============\n+* Add support for inlining SQL functions at query planning time.\n+\n+**Details**\n+==============\n+\n+General Changes\n+_______________\n+* Fix compiler error due to incorrect LambdaDefinitionExpression canonicalization.\n+* Fix compiler error in certain situations where sql functions with same lambda are used multiple times.\n+* Add ``IF EXISTS`` and ``IF NOT EXISTS`` syntax to ``ALTER TABLE``.\n+* Add ``query.max-scan-physical-bytes`` configuration and ``query_max_scan_physical_bytes`` session properties to limit total number of bytes read from storage during table scan. The default limit is 1PB.\n+* Add support for inlining SQL functions at query planning time. This feature is enabled by default, and can be disabled with the ``inline_sql_functions`` session property.\n+* Add :func:`geometry_from_geojson` and :func:`geometry_as_geojson` to convert geometries from and to GeoJSON format.\n+* Add support for pushdown of dereference expressions for querying nested data. This can be enabled with the ``pushdown_dereference_enabled`` session property or the ``experimental.pushdown-dereference-enabled`` configuration property.\n+* Use local private credentials (json key file) to refresh GCS access token. Usage : presto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\".\n+* Add ability to spill window functions to local disk when a worker is out of memory.\n+* Add support for limit pushdown through union.\n+\n+Thrift Connector Changes\n+________________________\n+* Rename ``presto-thrift-connector-api`` to ``presto-thrift-api`` and have separate packages for datatypes, valuesets and connector.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where Verifier fails to start when failure resolver is disabled.\n+* Add configuration property ``test_name``, to be passed in to the client info blob.\n+* Add support to implement customized way of launching Presto queries.\n+* Add support to populate client info for the queries issued by Verifier.\n+* Add support to resubmit verification if test query fails with ``HIVE_PARTITION_OFFLINE``.\n+* Add support to run helper queries on a separate cluster other than the control cluster.\n+* Add support to skip running control queries and comparing results. This can be enabled by configuration property ``skip-control``.\n+\n+Cassandra Changes\n+_________________\n+* Add TLS security support.\n+\n+Druid Changes\n+_____________\n+* Add support for union all operation with more than 1 druid source.\n+* Add support for filter on top of Aggregation.\n+* Fix unhandled HTTP response error for druid client.\n+\n+Elasticserarch Changes\n+______________________\n+* Add support for IP data type.\n+\n+Geospatial Changes\n+__________________\n+* Improve func:`geometry_to_bing_tiles` performance.  It is 50x faster on complex polygons, the limit on polygon complexity is removed, and some correctness bugs have been fixed.\n+* Add geometry_to_dissolved_bing_tiles function, which dissolves complete sets of child tiles to their parent.\n+* Introduce ``bing_tile_children`` and ``bing_tile_parent`` functions to get parents and children of a Bing tile.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcwNTA3OA=="}, "originalCommit": {"oid": "8d2ab33b3daa495478429e824066ffc7d2ee751e"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3748, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}