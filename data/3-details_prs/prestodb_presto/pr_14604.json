{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NTg5ODUy", "number": 14604, "title": "Optimize ArrayAllocator CPU usage in OptimizedPartitionedOutputOperator", "bodyText": "The SimpleArrayAllocator takes a substantial CPU amount in OptimizedPartitionedOutputOperator. This PR introduces UncheckedStackArrayAllocator which is 7x faster than SimpleArrayAllocator. The new UncheckedStackArrayAllocator does not keep track of borrowed arrays, therefore the user shall make sure there are no duplicate returnArray calls.\n== RELEASE NOTES ==\n\nGeneral Changes\n* Remove max buffer count config property `driver.max-page-partitioning-buffer-count` for optimized repartitioning", "createdAt": "2020-06-04T05:01:06Z", "url": "https://github.com/prestodb/presto/pull/14604", "merged": true, "mergeCommit": {"oid": "239519575308058cf97d46e9d5aecf0cf924c73d"}, "closed": true, "closedAt": "2020-06-18T14:09:55Z", "author": {"login": "yingsu00"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcn3_0igBqjM0MDUyNTQ0NTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsIKhagFqTQzMjMwODQ3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "930f0e246e3189bf1a96bc8158a95123438d777f", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/930f0e246e3189bf1a96bc8158a95123438d777f", "committedDate": "2020-06-04T04:57:18Z", "message": "Use UncheckedStackArrayAllocator instead of SimpleArrayAllocator"}, "afterCommit": {"oid": "abbcfbd14404c342ccd38b0d39f3b002a82a59e5", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/abbcfbd14404c342ccd38b0d39f3b002a82a59e5", "committedDate": "2020-06-04T06:22:12Z", "message": "Use UncheckedStackArrayAllocator instead of SimpleArrayAllocator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNTMzMzcw", "url": "https://github.com/prestodb/presto/pull/14604#pullrequestreview-431533370", "createdAt": "2020-06-16T13:57:29Z", "commit": {"oid": "93f910fb3dc4230cbfe63c0af7a12c05cea8945f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzo1NzozMFrOGkcpvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzo1NzozMFrOGkcpvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg3MTM1OQ==", "bodyText": "Shouldn't this loop release memory of \"discarded\" arrays? E.g. intArrays[intArraysTop] = null?", "url": "https://github.com/prestodb/presto/pull/14604#discussion_r440871359", "createdAt": "2020-06-16T13:57:30Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/UncheckedStackArrayAllocator.java", "diffHunk": "@@ -0,0 +1,156 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.facebook.presto.operator;\n+\n+import com.facebook.presto.common.block.ArrayAllocator;\n+\n+import javax.annotation.concurrent.NotThreadSafe;\n+\n+import java.util.Arrays;\n+\n+import static com.google.common.base.MoreObjects.toStringHelper;\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static io.airlift.slice.SizeOf.sizeOfByteArray;\n+import static io.airlift.slice.SizeOf.sizeOfIntArray;\n+import static java.util.Objects.requireNonNull;\n+\n+/**\n+ * A simple stack based {@link ArrayAllocator} that caches returned arrays.  When retrieving an array which is\n+ * cached, this implementation will first discard all smaller arrays encountered to ensure amortized\n+ * constant time access to the appropriately sized array. The implementation does NOT keep track of borrowed\n+ * arrays therefore user need to make sure do not return the same array more than once.\n+ */\n+@NotThreadSafe\n+public class UncheckedStackArrayAllocator\n+        implements ArrayAllocator\n+{\n+    private static final int DEFAULT_CAPACITY = 1000;\n+\n+    private int[][] intArrays;\n+    private int intArraysTop = -1;\n+    private int borrowedIntArrays;\n+\n+    private byte[][] byteArrays;\n+    private int byteArraysTop = -1;\n+    private int borrowedByteArrays;\n+\n+    private long estimatedSizeInBytes;\n+\n+    public UncheckedStackArrayAllocator()\n+    {\n+        this(DEFAULT_CAPACITY);\n+    }\n+\n+    public UncheckedStackArrayAllocator(int initialCapacity)\n+    {\n+        checkArgument(initialCapacity > 0, \"initialCapacity must be positive\");\n+        intArrays = new int[initialCapacity][];\n+        byteArrays = new byte[initialCapacity][];\n+    }\n+\n+    @Override\n+    public int[] borrowIntArray(int positionCount)\n+    {\n+        int[] array;\n+        while (intArraysTop >= 0 && intArrays[intArraysTop].length < positionCount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93f910fb3dc4230cbfe63c0af7a12c05cea8945f"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1350c865fe5cfc216a1cf553abcd53732ba7c55d", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/1350c865fe5cfc216a1cf553abcd53732ba7c55d", "committedDate": "2020-06-17T10:01:52Z", "message": "Refactor TestSimpleArrayAllocator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa50efef12260456df559182de8bbc50e19f2b27", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/fa50efef12260456df559182de8bbc50e19f2b27", "committedDate": "2020-06-17T10:01:52Z", "message": "Introduce UncheckedStackArrayAllocator\n\nUncheckedStackArrayAllocator has about 7x performance improvement than\nSimpleArrayAllocator:\n\nBenchmark                                              (arrayAllocatorType)  Mode  Cnt     Score     Error  Units\nBenchmarkArrayAllocator.borrowAndReturnArrays          SimpleArrayAllocator  avgt   30  2900.559 \u00b1 115.698  ms/op\nBenchmarkArrayAllocator.borrowAndReturnArrays  UncheckedStackArrayAllocator  avgt   30   423.383 \u00b1  20.460  ms/op"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cbc33456b3b92bda1ca19a8d1d34ee311f9a1a3", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/8cbc33456b3b92bda1ca19a8d1d34ee311f9a1a3", "committedDate": "2020-06-17T10:01:52Z", "message": "Revert \"Add max buffer count config property for optimized repartitioning\"\n\nThis reverts commit 726e18ae85e583b8493c39f97761e9f2976e2298."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae31eded99b75e7de49fa0d3860c8fdc3488e3ac", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/ae31eded99b75e7de49fa0d3860c8fdc3488e3ac", "committedDate": "2020-06-17T10:01:52Z", "message": "Use UncheckedStackArrayAllocator instead of SimpleArrayAllocator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abbcfbd14404c342ccd38b0d39f3b002a82a59e5", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/abbcfbd14404c342ccd38b0d39f3b002a82a59e5", "committedDate": "2020-06-04T06:22:12Z", "message": "Use UncheckedStackArrayAllocator instead of SimpleArrayAllocator"}, "afterCommit": {"oid": "ae31eded99b75e7de49fa0d3860c8fdc3488e3ac", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/ae31eded99b75e7de49fa0d3860c8fdc3488e3ac", "committedDate": "2020-06-17T10:01:52Z", "message": "Use UncheckedStackArrayAllocator instead of SimpleArrayAllocator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMzA4NDc1", "url": "https://github.com/prestodb/presto/pull/14604#pullrequestreview-432308475", "createdAt": "2020-06-17T11:29:29Z", "commit": {"oid": "ae31eded99b75e7de49fa0d3860c8fdc3488e3ac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1750, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}