{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NDk4Nzc3", "number": 15464, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxOTozOToyOFrOE7sAcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxOTozOToyOFrOE7sAcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMDIyNDUxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/NodePartitioningManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxOTozOToyOFrOH3eWFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMDowODoyMlrOH3fKVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkzMDkwMQ==", "bodyText": "I might miss something, but why is hard affinity not cacheable?", "url": "https://github.com/prestodb/presto/pull/15464#discussion_r527930901", "createdAt": "2020-11-20T19:39:28Z", "author": {"login": "shixuan-fan"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/NodePartitioningManager.java", "diffHunk": "@@ -127,15 +127,21 @@ public NodePartitionMap getNodePartitioningMap(Session session, PartitioningHand\n \n         List<InternalNode> bucketToNode;\n         NodeSelectionStrategy nodeSelectionStrategy = connectorBucketNodeMap.getNodeSelectionStrategy();\n+        boolean cacheable;\n         switch (nodeSelectionStrategy) {\n             case HARD_AFFINITY:\n+                bucketToNode = getFixedMapping(connectorBucketNodeMap);\n+                cacheable = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45ac5e3dcbea5b212c7e7fc68f1c3b005c0d34e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk0MDMyOA==", "bodyText": "Hard affinity is for connectors that use its own storage like Raptor, we don't want to do cache for them", "url": "https://github.com/prestodb/presto/pull/15464#discussion_r527940328", "createdAt": "2020-11-20T19:59:26Z", "author": {"login": "kewang1024"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/NodePartitioningManager.java", "diffHunk": "@@ -127,15 +127,21 @@ public NodePartitionMap getNodePartitioningMap(Session session, PartitioningHand\n \n         List<InternalNode> bucketToNode;\n         NodeSelectionStrategy nodeSelectionStrategy = connectorBucketNodeMap.getNodeSelectionStrategy();\n+        boolean cacheable;\n         switch (nodeSelectionStrategy) {\n             case HARD_AFFINITY:\n+                bucketToNode = getFixedMapping(connectorBucketNodeMap);\n+                cacheable = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkzMDkwMQ=="}, "originalCommit": {"oid": "f45ac5e3dcbea5b212c7e7fc68f1c3b005c0d34e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk0NDI3OA==", "bodyText": "Okay, sounds good. I thought hard affinity could also apply for disaggregated storage (though should never be more preferable than soft affinity), but let's not worry about it for now.", "url": "https://github.com/prestodb/presto/pull/15464#discussion_r527944278", "createdAt": "2020-11-20T20:08:22Z", "author": {"login": "shixuan-fan"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/NodePartitioningManager.java", "diffHunk": "@@ -127,15 +127,21 @@ public NodePartitionMap getNodePartitioningMap(Session session, PartitioningHand\n \n         List<InternalNode> bucketToNode;\n         NodeSelectionStrategy nodeSelectionStrategy = connectorBucketNodeMap.getNodeSelectionStrategy();\n+        boolean cacheable;\n         switch (nodeSelectionStrategy) {\n             case HARD_AFFINITY:\n+                bucketToNode = getFixedMapping(connectorBucketNodeMap);\n+                cacheable = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkzMDkwMQ=="}, "originalCommit": {"oid": "f45ac5e3dcbea5b212c7e7fc68f1c3b005c0d34e"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3421, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}