{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMjU1MTg5", "number": 14726, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTowNjoxMFrOEI7JKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTowNzoxN1rOEI7Kcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzkzMDY2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/sql/show-functions.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTowNjoxMFrOGpLzGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMToyMDoyOVrOGpMM1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgzODEwNQ==", "bodyText": "Also add escape?", "url": "https://github.com/prestodb/presto/pull/14726#discussion_r445838105", "createdAt": "2020-06-25T21:06:10Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/sql/show-functions.rst", "diffHunk": "@@ -7,9 +7,10 @@ Synopsis\n \n .. code-block:: none\n \n-    SHOW FUNCTIONS\n+    SHOW FUNCTIONS [ LIKE pattern ]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa72db6f6089317bebc0d19065c89e64821b500"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NDY5Mg==", "bodyText": "Done. Also added escape for show-tables.rst.", "url": "https://github.com/prestodb/presto/pull/14726#discussion_r445844692", "createdAt": "2020-06-25T21:20:29Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/sql/show-functions.rst", "diffHunk": "@@ -7,9 +7,10 @@ Synopsis\n \n .. code-block:: none\n \n-    SHOW FUNCTIONS\n+    SHOW FUNCTIONS [ LIKE pattern ]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgzODEwNQ=="}, "originalCommit": {"oid": "2aa72db6f6089317bebc0d19065c89e64821b500"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzkzMzk1OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/sql/show-create-function.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTowNzoxN1rOGpL1Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMToyMzowOVrOGpMRvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgzODYzNQ==", "bodyText": "I think from next release this will show as input without the double quote. Maybe you want to double check and update if that's the case.", "url": "https://github.com/prestodb/presto/pull/14726#discussion_r445838635", "createdAt": "2020-06-25T21:07:17Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/sql/show-create-function.rst", "diffHunk": "@@ -0,0 +1,73 @@\n+====================\n+SHOW CREATE FUNCTION\n+====================\n+\n+Synopsis\n+--------\n+\n+.. code-block:: none\n+\n+    SHOW CREATE FUNCTION function_name [ ( parameter_type[, ...] ) ]\n+\n+Description\n+-----------\n+\n+Show the SQL statement that creates the specified function if the optional list of\n+parameter types is specified.\n+\n+If parameter type list is omitted, show one row for each signature with the given ``function_name``.\n+\n+Examples\n+--------\n+\n+Show the SQL statement that can be run to create the ``example.default.array_sum(ARRAY<BIGINT>)`` function::\n+\n+    SHOW CREATE FUNCTION example.default.array_sum(ARRAY<BIGINT>)\n+\n+.. code-block:: none\n+\n+                                               Create Function                                            | Argument Types\n+    ------------------------------------------------------------------------------------------------------+----------------\n+     CREATE FUNCTION example.default.array_sum (                                                          | ARRAY(bigint)\n+        \"input\" ARRAY(bigint)                                                                             |\n+     )                                                                                                    |\n+     RETURNS bigint                                                                                       |\n+     COMMENT 'Calculate sum of all array elements. Nulls elements are ignored. Returns 0 on empty array.' |\n+     LANGUAGE SQL                                                                                         |\n+     DETERMINISTIC                                                                                        |\n+     RETURNS NULL ON NULL INPUT                                                                           |\n+     RETURN \"reduce\"(input, 0, (s, x) -> (s + COALESCE(x, 0)), (s) -> s)                                  |\n+    (1 row)\n+\n+Show all SQL statements that can be run to create the ``example.default.array_sum`` functions::\n+\n+    SHOW CREATE FUNCTION example.default.array_sum\n+\n+.. code-block:: none\n+\n+                                               Create Function                                            | Argument Types\n+    ------------------------------------------------------------------------------------------------------+----------------\n+     CREATE FUNCTION example.default.array_sum (                                                         +| ARRAY(bigint)\n+        \"input\" ARRAY(bigint)                                                                            +|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa72db6f6089317bebc0d19065c89e64821b500"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NTk0OA==", "bodyText": "You're right. Test cases in TestSqlFunctions confirms that.", "url": "https://github.com/prestodb/presto/pull/14726#discussion_r445845948", "createdAt": "2020-06-25T21:23:09Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/sql/show-create-function.rst", "diffHunk": "@@ -0,0 +1,73 @@\n+====================\n+SHOW CREATE FUNCTION\n+====================\n+\n+Synopsis\n+--------\n+\n+.. code-block:: none\n+\n+    SHOW CREATE FUNCTION function_name [ ( parameter_type[, ...] ) ]\n+\n+Description\n+-----------\n+\n+Show the SQL statement that creates the specified function if the optional list of\n+parameter types is specified.\n+\n+If parameter type list is omitted, show one row for each signature with the given ``function_name``.\n+\n+Examples\n+--------\n+\n+Show the SQL statement that can be run to create the ``example.default.array_sum(ARRAY<BIGINT>)`` function::\n+\n+    SHOW CREATE FUNCTION example.default.array_sum(ARRAY<BIGINT>)\n+\n+.. code-block:: none\n+\n+                                               Create Function                                            | Argument Types\n+    ------------------------------------------------------------------------------------------------------+----------------\n+     CREATE FUNCTION example.default.array_sum (                                                          | ARRAY(bigint)\n+        \"input\" ARRAY(bigint)                                                                             |\n+     )                                                                                                    |\n+     RETURNS bigint                                                                                       |\n+     COMMENT 'Calculate sum of all array elements. Nulls elements are ignored. Returns 0 on empty array.' |\n+     LANGUAGE SQL                                                                                         |\n+     DETERMINISTIC                                                                                        |\n+     RETURNS NULL ON NULL INPUT                                                                           |\n+     RETURN \"reduce\"(input, 0, (s, x) -> (s + COALESCE(x, 0)), (s) -> s)                                  |\n+    (1 row)\n+\n+Show all SQL statements that can be run to create the ``example.default.array_sum`` functions::\n+\n+    SHOW CREATE FUNCTION example.default.array_sum\n+\n+.. code-block:: none\n+\n+                                               Create Function                                            | Argument Types\n+    ------------------------------------------------------------------------------------------------------+----------------\n+     CREATE FUNCTION example.default.array_sum (                                                         +| ARRAY(bigint)\n+        \"input\" ARRAY(bigint)                                                                            +|", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgzODYzNQ=="}, "originalCommit": {"oid": "2aa72db6f6089317bebc0d19065c89e64821b500"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2536, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}