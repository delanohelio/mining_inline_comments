{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNzA3MjYz", "number": 14194, "title": "Keep queries in the queue when task count is high", "bodyText": "Use total running task count as a proxy for cluster load and keep\nqueries in the queue if load is too high.\n\nAttached figure shows the result from getTaskLimitExceeded() in a real cluster,  correlation of this chart with queue size makes debugging easier.\n\n\n== RELEASE NOTES ==\n\nGeneral Changes\n* Add support for stopping new query execution when total number of tasks exceeds a set limit to help with reliability. The limit can be set by configuration property ``experimental.max-total-running-task-count-to-not-execute-new-query``.", "createdAt": "2020-03-03T02:17:48Z", "url": "https://github.com/prestodb/presto/pull/14194", "merged": true, "mergeCommit": {"oid": "f35c6608120572f8d81fe2beb0bc374021a90510"}, "closed": true, "closedAt": "2020-03-12T00:19:16Z", "author": {"login": "viczhang861"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKMgOXgBqjMwOTQ1MjY4Nzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMtW4xABqjMxMjA0NTQxNDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0e0dcd2bfc5fc9933f65512af08ebe5912fb65f", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/b0e0dcd2bfc5fc9933f65512af08ebe5912fb65f", "committedDate": "2020-03-03T01:16:53Z", "message": "Queue queries when cluster load is high\n\nSince resource group manager is not effective to throttle high-stage\nqueries, use task count as metrics to keep waiting queries in the\nqueue and improve cluster reliability."}, "afterCommit": {"oid": "a0a6002fe74a69d382c41de10c2813234159f1c6", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/a0a6002fe74a69d382c41de10c2813234159f1c6", "committedDate": "2020-03-04T01:19:00Z", "message": "Keep queries in queue when cluster load is high\n\nCurrently, resource group manager is not effective to throttle\nhigh-stage queries. Use total running task count as metrics to\nkeep queries in queue and improve cluster reliability."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0a6002fe74a69d382c41de10c2813234159f1c6", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/a0a6002fe74a69d382c41de10c2813234159f1c6", "committedDate": "2020-03-04T01:19:00Z", "message": "Keep queries in queue when cluster load is high\n\nCurrently, resource group manager is not effective to throttle\nhigh-stage queries. Use total running task count as metrics to\nkeep queries in queue and improve cluster reliability."}, "afterCommit": {"oid": "44f73eae4ecaafbde5632a8bfe36ad57668cc540", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/44f73eae4ecaafbde5632a8bfe36ad57668cc540", "committedDate": "2020-03-04T01:32:38Z", "message": "Keep queries in queue when cluster load is high\n\nCurrently, resource group manager is not effective to throttle\nhigh-stage queries. Use total running task count as metrics to\nkeep queries in queue and improve cluster reliability."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NDUyMjAy", "url": "https://github.com/prestodb/presto/pull/14194#pullrequestreview-368452202", "createdAt": "2020-03-04T01:44:34Z", "commit": {"oid": "f32bdd9e1373a882011241863ac4c0ac65ead1b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMTo0NDozNFrOFxdTYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMTo0NDozNFrOFxdTYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQwNDY0Mw==", "bodyText": "get -> is?", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r387404643", "createdAt": "2020-03-04T01:44:34Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java", "diffHunk": "@@ -258,6 +259,19 @@ public int getMaxQueryRunningTaskCount()\n         return maxQueryRunningTaskCount;\n     }\n \n+    @Config(\"enqueue-query-when-task-limit-exceeded\")\n+    @ConfigDescription(\"Keep queries in queue if max-total-running-task-count is violated\")\n+    public QueryManagerConfig setEnqueueQueryWhenTaskLimitExceeded(boolean enqueueQueryWhenTaskLimitExceeded)\n+    {\n+        this.enqueueQueryWhenTaskLimitExceeded = enqueueQueryWhenTaskLimitExceeded;\n+        return this;\n+    }\n+\n+    public boolean getEnqueueQueryWhenTaskLimitExceeded()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f32bdd9e1373a882011241863ac4c0ac65ead1b4"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NDU1Mzc4", "url": "https://github.com/prestodb/presto/pull/14194#pullrequestreview-368455378", "createdAt": "2020-03-04T01:54:58Z", "commit": {"oid": "44f73eae4ecaafbde5632a8bfe36ad57668cc540"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NDkzMzU3", "url": "https://github.com/prestodb/presto/pull/14194#pullrequestreview-368493357", "createdAt": "2020-03-04T04:08:56Z", "commit": {"oid": "44f73eae4ecaafbde5632a8bfe36ad57668cc540"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNDowODo1NlrOFxfbPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNDowODo1NlrOFxfbPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQzOTQyMQ==", "bodyText": "This is going to be really tough to fix once we move to a world where resource manager is out of process.  I would prefer that we think of a way of accomplishing this without having to set an atomic boolean on the resource group manager itself.", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r387439421", "createdAt": "2020-03-04T04:08:56Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryTracker.java", "diffHunk": "@@ -68,20 +70,26 @@\n \n     private final Duration clientTimeout;\n \n+    private final ResourceGroupManager<?> resourceGroupManager;\n     private final ScheduledExecutorService queryManagementExecutor;\n \n     @GuardedBy(\"this\")\n     private ScheduledFuture<?> backgroundTask;\n \n-    public QueryTracker(QueryManagerConfig queryManagerConfig, ScheduledExecutorService queryManagementExecutor)\n+    public QueryTracker(\n+            QueryManagerConfig queryManagerConfig,\n+            ResourceGroupManager resourceGroupManager,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44f73eae4ecaafbde5632a8bfe36ad57668cc540"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NDk1MjU5", "url": "https://github.com/prestodb/presto/pull/14194#pullrequestreview-368495259", "createdAt": "2020-03-04T04:16:49Z", "commit": {"oid": "3a1c7b6866abd120b9b2e37d0feace184cc7d3bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNDoxNjo0OVrOFxfhhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNDoxNjo0OVrOFxfhhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ0MTAzMQ==", "bodyText": "This very PR is changing the semantics of this field.  Isn't it premature to rename this?", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r387441031", "createdAt": "2020-03-04T04:16:49Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java", "diffHunk": "@@ -258,8 +258,8 @@ public int getMaxQueryRunningTaskCount()\n         return maxQueryRunningTaskCount;\n     }\n \n-    @Config(\"experimental.max-query-running-task-count\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a1c7b6866abd120b9b2e37d0feace184cc7d3bc"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NDk4ODUw", "url": "https://github.com/prestodb/presto/pull/14194#pullrequestreview-368498850", "createdAt": "2020-03-04T04:32:30Z", "commit": {"oid": "44f73eae4ecaafbde5632a8bfe36ad57668cc540"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNDozMjozMVrOFxftaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNTozNjoyOVrOFxghHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ0NDA3NQ==", "bodyText": "Backing Tim's point - should we use the @LegacyConfig() flag for this for a while?", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r387444075", "createdAt": "2020-03-04T04:32:31Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java", "diffHunk": "@@ -258,8 +258,8 @@ public int getMaxQueryRunningTaskCount()\n         return maxQueryRunningTaskCount;\n     }\n \n-    @Config(\"experimental.max-query-running-task-count\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ0MTAzMQ=="}, "originalCommit": {"oid": "3a1c7b6866abd120b9b2e37d0feace184cc7d3bc"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ0NDQ3MQ==", "bodyText": "should we rename this to haltQuerySchedulingWhenTaskLimitExceeded -> we are not really queuing the queries, we are just not picking the queries from the existing queue.", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r387444471", "createdAt": "2020-03-04T04:34:31Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java", "diffHunk": "@@ -51,6 +51,7 @@\n     private int stageCountWarningThreshold = 50;\n     private int maxTotalRunningTaskCount = Integer.MAX_VALUE;\n     private int maxQueryRunningTaskCount = Integer.MAX_VALUE;\n+    private boolean enqueueQueryWhenTaskLimitExceeded;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44f73eae4ecaafbde5632a8bfe36ad57668cc540"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ0Nzc2Nw==", "bodyText": "Should this logic be simplified? Can we just say something like:\nif (enqueueQueryWhenTaskLimitExceeded) {\n    resourceGroupManager.setTaskLimitExceeded(totalRunningTaskCount <= maxTotalRunningTaskCount);\n}", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r387447767", "createdAt": "2020-03-04T04:51:17Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryTracker.java", "diffHunk": "@@ -235,12 +245,19 @@ private void enforceTaskLimits()\n             }\n             int runningTaskCount = query.getRunningTaskCount();\n             totalRunningTaskCount += runningTaskCount;\n+            if (enqueueQueryWhenTaskLimitExceeded && totalRunningTaskCount > maxTotalRunningTaskCount) {\n+                resourceGroupManager.setTaskLimitExceeded(true);\n+            }\n             if (runningTaskCount > highestRunningTaskCount) {\n                 highestRunningTaskCount = runningTaskCount;\n                 highestRunningTaskQuery = Optional.of(query);\n             }\n         }\n \n+        if (enqueueQueryWhenTaskLimitExceeded && totalRunningTaskCount <= maxTotalRunningTaskCount) {\n+            resourceGroupManager.setTaskLimitExceeded(false);\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44f73eae4ecaafbde5632a8bfe36ad57668cc540"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ0NzgyMQ==", "bodyText": "I am curious, why have this in the middle of the loop ?", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r387447821", "createdAt": "2020-03-04T04:51:33Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryTracker.java", "diffHunk": "@@ -235,12 +245,19 @@ private void enforceTaskLimits()\n             }\n             int runningTaskCount = query.getRunningTaskCount();\n             totalRunningTaskCount += runningTaskCount;\n+            if (enqueueQueryWhenTaskLimitExceeded && totalRunningTaskCount > maxTotalRunningTaskCount) {\n+                resourceGroupManager.setTaskLimitExceeded(true);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44f73eae4ecaafbde5632a8bfe36ad57668cc540"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ1Njk3NA==", "bodyText": "I don't think this is the correct semantic. If isResourceLimitExceeded is expected to be a root level property, then we should just prevent running internalStartNext from RootInternalResourceGroup.processQueuedQueries. As of now I feel there is too much plumbing done through the resource groups which can be completely avoided.", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r387456974", "createdAt": "2020-03-04T05:34:58Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -862,6 +863,10 @@ private boolean canRunMore()\n                 return false;\n             }\n \n+            if (((RootInternalResourceGroup) root).isResourceLimitExceeded()) {\n+                return false;\n+            }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44f73eae4ecaafbde5632a8bfe36ad57668cc540"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ1NzMxMQ==", "bodyText": "If we follow my suggestion above, we can avoid this call. I will say that the plumbing is not worth it and we should just implement it when we have a concrete use case.", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r387457311", "createdAt": "2020-03-04T05:36:29Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -935,5 +942,16 @@ public synchronized void generateCpuQuota(long elapsedSeconds)\n                 internalGenerateCpuQuota(elapsedSeconds);\n             }\n         }\n+\n+        public void setTaskLimitExceeded(boolean exceeded)\n+        {\n+            this.taskLimitExceeded.set(exceeded);\n+        }\n+\n+        private boolean isResourceLimitExceeded()\n+        {\n+            // can be expanded to include other metrics\n+            return taskLimitExceeded.get();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44f73eae4ecaafbde5632a8bfe36ad57668cc540"}, "originalPosition": 42}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44f73eae4ecaafbde5632a8bfe36ad57668cc540", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/44f73eae4ecaafbde5632a8bfe36ad57668cc540", "committedDate": "2020-03-04T01:32:38Z", "message": "Keep queries in queue when cluster load is high\n\nCurrently, resource group manager is not effective to throttle\nhigh-stage queries. Use total running task count as metrics to\nkeep queries in queue and improve cluster reliability."}, "afterCommit": {"oid": "48f94be2ee1ec937637734953fbc466cecd33348", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/48f94be2ee1ec937637734953fbc466cecd33348", "committedDate": "2020-03-04T15:53:17Z", "message": "Keep queries in the queue when task count is high\n\nUse total running task count as a proxy for cluster load and keep\nqueries in the queue if load is high."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "48f94be2ee1ec937637734953fbc466cecd33348", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/48f94be2ee1ec937637734953fbc466cecd33348", "committedDate": "2020-03-04T15:53:17Z", "message": "Keep queries in the queue when task count is high\n\nUse total running task count as a proxy for cluster load and keep\nqueries in the queue if load is high."}, "afterCommit": {"oid": "e1be727d48083657cae4513d33af4759455339de", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/e1be727d48083657cae4513d33af4759455339de", "committedDate": "2020-03-05T00:35:50Z", "message": "Keep queries in the queue when task count is high\n\nUse total running task count as a proxy for cluster load and keep\nqueries in the queue if load is high."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5Nzc5MTky", "url": "https://github.com/prestodb/presto/pull/14194#pullrequestreview-369779192", "createdAt": "2020-03-05T17:42:24Z", "commit": {"oid": "e1be727d48083657cae4513d33af4759455339de"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNzo0MjoyNVrOFydb1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNzo1NjowN1rOFyd3rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ1NTM4MA==", "bodyText": "Maybe it makes sense to make this optional, so we don't need a magic number (MAX_VALUE).", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r388455380", "createdAt": "2020-03-05T17:42:25Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java", "diffHunk": "@@ -51,6 +51,7 @@\n     private int stageCountWarningThreshold = 50;\n     private int maxTotalRunningTaskCount = Integer.MAX_VALUE;\n     private int maxQueryRunningTaskCount = Integer.MAX_VALUE;\n+    private int maxTotalRunningTaskCountToHaltScheduling = Integer.MAX_VALUE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1be727d48083657cae4513d33af4759455339de"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ1NjE1Ng==", "bodyText": "Alternatively, a negative number would never make sense here, so instead of MAX_VALUE we could simply check if it's non-negative.", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r388456156", "createdAt": "2020-03-05T17:44:00Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java", "diffHunk": "@@ -51,6 +51,7 @@\n     private int stageCountWarningThreshold = 50;\n     private int maxTotalRunningTaskCount = Integer.MAX_VALUE;\n     private int maxQueryRunningTaskCount = Integer.MAX_VALUE;\n+    private int maxTotalRunningTaskCountToHaltScheduling = Integer.MAX_VALUE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ1NTM4MA=="}, "originalCommit": {"oid": "e1be727d48083657cae4513d33af4759455339de"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2MDk4OA==", "bodyText": "This might conflict with what @mayankgarg1990 was suggesting, but for consistency with how we compute other stats I think we could move this into InternalResourceGroup", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r388460988", "createdAt": "2020-03-05T17:53:17Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroupManager.java", "diffHunk": "@@ -278,6 +295,46 @@ private static int getQueriesQueuedOnInternal(InternalResourceGroup resourceGrou\n         return queriesQueuedInternal;\n     }\n \n+    @Managed\n+    public int getTaskLimitExceeded()\n+    {\n+        return taskLimitExceeded.get() ? 1 : 0;\n+    }\n+\n+    private int calculateRunningTaskCount()\n+    {\n+        int taskCount = 0;\n+        for (RootInternalResourceGroup rootGroup : rootGroups) {\n+            synchronized (rootGroup) {\n+                taskCount += calculateRunningTaskCount(rootGroup);\n+            }\n+        }\n+        return taskCount;\n+    }\n+\n+    private int calculateRunningTaskCount(InternalResourceGroup resourceGroup)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1be727d48083657cae4513d33af4759455339de"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2MjUxMQ==", "bodyText": "Unrelated change?", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r388462511", "createdAt": "2020-03-05T17:56:07Z", "author": {"login": "tdcmeehan"}, "path": "presto-tests/src/test/java/com/facebook/presto/tests/TestQueryTaskLimit.java", "diffHunk": "@@ -26,42 +28,55 @@\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Future;\n \n+import static com.facebook.presto.execution.QueryState.FAILED;\n+import static com.facebook.presto.execution.QueryState.QUEUED;\n+import static com.facebook.presto.execution.QueryState.RUNNING;\n+import static com.facebook.presto.execution.TestQueryRunnerUtil.cancelQuery;\n+import static com.facebook.presto.execution.TestQueryRunnerUtil.createQuery;\n+import static com.facebook.presto.execution.TestQueryRunnerUtil.waitForQueryState;\n+import static com.facebook.presto.execution.TestQueues.LONG_LASTING_QUERY;\n+import static com.facebook.presto.execution.TestQueues.newSession;\n import static com.facebook.presto.spi.StandardErrorCode.QUERY_HAS_TOO_MANY_STAGES;\n import static com.facebook.presto.testing.TestingSession.testSessionBuilder;\n import static java.util.concurrent.Executors.newCachedThreadPool;\n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n import static org.testng.Assert.assertEquals;\n import static org.testng.Assert.assertNotNull;\n+import static org.testng.Assert.assertTrue;\n \n+@Test(singleThreaded = true)\n public class TestQueryTaskLimit\n {\n     private ExecutorService executor;\n+    private Session defaultSession;\n \n     @BeforeClass\n     public void setUp()\n     {\n         executor = newCachedThreadPool();\n+        defaultSession = testSessionBuilder()\n+                .setCatalog(\"tpch\")\n+                .setSchema(\"sf1000\")\n+                .build();\n     }\n \n     @AfterClass(alwaysRun = true)\n     public void shutdown()\n+            throws Exception\n     {\n         executor.shutdownNow();\n+        assertTrue(executor.awaitTermination(10, SECONDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1be727d48083657cae4513d33af4759455339de"}, "originalPosition": 53}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1be727d48083657cae4513d33af4759455339de", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/e1be727d48083657cae4513d33af4759455339de", "committedDate": "2020-03-05T00:35:50Z", "message": "Keep queries in the queue when task count is high\n\nUse total running task count as a proxy for cluster load and keep\nqueries in the queue if load is high."}, "afterCommit": {"oid": "634be5d11b3fd7699eea97ba30cb51faf4a94594", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/634be5d11b3fd7699eea97ba30cb51faf4a94594", "committedDate": "2020-03-05T18:53:38Z", "message": "Keep queries in the queue when task count is high\n\nUse total running task count as a proxy for cluster load and keep\nqueries in the queue if load is high."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "634be5d11b3fd7699eea97ba30cb51faf4a94594", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/634be5d11b3fd7699eea97ba30cb51faf4a94594", "committedDate": "2020-03-05T18:53:38Z", "message": "Keep queries in the queue when task count is high\n\nUse total running task count as a proxy for cluster load and keep\nqueries in the queue if load is high."}, "afterCommit": {"oid": "09677ca34e36ee1056d14cf065aa77f0a2856f08", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/09677ca34e36ee1056d14cf065aa77f0a2856f08", "committedDate": "2020-03-06T19:51:35Z", "message": "Keep queries in the queue when task count is high\n\nUse total running task count as a proxy for cluster load and keep\nqueries in the queue if load is high."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjEyNjM3", "url": "https://github.com/prestodb/presto/pull/14194#pullrequestreview-370612637", "createdAt": "2020-03-06T20:40:46Z", "commit": {"oid": "09677ca34e36ee1056d14cf065aa77f0a2856f08"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjEzOTA3", "url": "https://github.com/prestodb/presto/pull/14194#pullrequestreview-370613907", "createdAt": "2020-03-06T20:43:14Z", "commit": {"oid": "09677ca34e36ee1056d14cf065aa77f0a2856f08"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMTY3MDAx", "url": "https://github.com/prestodb/presto/pull/14194#pullrequestreview-372167001", "createdAt": "2020-03-10T17:25:11Z", "commit": {"oid": "d58987a1234098575b081b1fdab4a7601345aa76"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzoyNToxMVrOF0ZR0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzoyNToxMVrOF0ZR0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ4NDQzNQ==", "bodyText": "Isn't the idea of \"experimental\" configs is that they can change without notice and therefore don't require @LegacyConfig-style transition?", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r390484435", "createdAt": "2020-03-10T17:25:11Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java", "diffHunk": "@@ -244,7 +244,8 @@ public int getMaxTotalRunningTaskCount()\n         return maxTotalRunningTaskCount;\n     }\n \n-    @Config(\"experimental.max-total-running-task-count\")\n+    @Config(\"max-total-running-task-count-to-kill-query\")\n+    @LegacyConfig(\"experimental.max-total-running-task-count\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d58987a1234098575b081b1fdab4a7601345aa76"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMTY4OTAx", "url": "https://github.com/prestodb/presto/pull/14194#pullrequestreview-372168901", "createdAt": "2020-03-10T17:27:27Z", "commit": {"oid": "517eef2a7ab33c74afe9abdab17b66aa18f406a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzoyNzoyN1rOF0ZX7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzoyNzoyN1rOF0ZX7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ4NTk5OA==", "bodyText": "nit: I suggest to not repeat the property name in the description: Keep queries in the queue if total task count exceeds this threshold", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r390485998", "createdAt": "2020-03-10T17:27:27Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java", "diffHunk": "@@ -259,6 +260,19 @@ public int getMaxQueryRunningTaskCount()\n         return maxQueryRunningTaskCount;\n     }\n \n+    @Config(\"experimental.max-total-running-task-count-to-halt-scheduling\")\n+    @ConfigDescription(\"Keep queries in the queue if total task count exceeds experimental.max-total-running-task-count-to-halt-scheduling\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "517eef2a7ab33c74afe9abdab17b66aa18f406a7"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMTcwNTMy", "url": "https://github.com/prestodb/presto/pull/14194#pullrequestreview-372170532", "createdAt": "2020-03-10T17:29:23Z", "commit": {"oid": "09677ca34e36ee1056d14cf065aa77f0a2856f08"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzoyOToyM1rOF0ZdHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzoyOToyM1rOF0ZdHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ4NzMyNA==", "bodyText": "nit: SqlQueryExecution.class::isInstance", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r390487324", "createdAt": "2020-03-10T17:29:23Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -581,6 +583,23 @@ public InternalResourceGroup getOrCreateSubGroup(String name)\n         }\n     }\n \n+    public int getRunningTaskCount()\n+    {\n+        if (subGroups().isEmpty()) {\n+            return runningQueries.stream()\n+                    .filter(query -> query instanceof SqlQueryExecution)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09677ca34e36ee1056d14cf065aa77f0a2856f08"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMTcxMTQ3", "url": "https://github.com/prestodb/presto/pull/14194#pullrequestreview-372171147", "createdAt": "2020-03-10T17:30:09Z", "commit": {"oid": "09677ca34e36ee1056d14cf065aa77f0a2856f08"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzozMDowOVrOF0Ze4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzozMDowOVrOF0Ze4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ4Nzc3Ng==", "bodyText": "nit: drop \"this.\"", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r390487776", "createdAt": "2020-03-10T17:30:09Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -935,5 +960,15 @@ public synchronized void generateCpuQuota(long elapsedSeconds)\n                 internalGenerateCpuQuota(elapsedSeconds);\n             }\n         }\n+\n+        public void setTaskLimitExceeded(boolean exceeded)\n+        {\n+            this.taskLimitExceeded.set(exceeded);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09677ca34e36ee1056d14cf065aa77f0a2856f08"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMTcxOTU1", "url": "https://github.com/prestodb/presto/pull/14194#pullrequestreview-372171955", "createdAt": "2020-03-10T17:31:09Z", "commit": {"oid": "09677ca34e36ee1056d14cf065aa77f0a2856f08"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09677ca34e36ee1056d14cf065aa77f0a2856f08", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/09677ca34e36ee1056d14cf065aa77f0a2856f08", "committedDate": "2020-03-06T19:51:35Z", "message": "Keep queries in the queue when task count is high\n\nUse total running task count as a proxy for cluster load and keep\nqueries in the queue if load is high."}, "afterCommit": {"oid": "bb5786f9cf39dcb777760a007e0fc17874498b8d", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/bb5786f9cf39dcb777760a007e0fc17874498b8d", "committedDate": "2020-03-10T18:35:37Z", "message": "Keep queries in the queue when task count is high\n\nUse total running task count as a proxy for cluster load and keep\nqueries in the queue if load is high."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyOTg4NjU3", "url": "https://github.com/prestodb/presto/pull/14194#pullrequestreview-372988657", "createdAt": "2020-03-11T17:46:30Z", "commit": {"oid": "cb3c98cd0b2d6249b49b54765fb381c5da5f599f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzo0NjozMVrOF1CFtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzo0NjozMVrOF1CFtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE1MzA3Ng==", "bodyText": "nit: scheduling usually means task scheduling or stage scheduling in Presto. What about\nexperimental.max-total-running-task-count-for-new-query-execution", "url": "https://github.com/prestodb/presto/pull/14194#discussion_r391153076", "createdAt": "2020-03-11T17:46:31Z", "author": {"login": "wenleix"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/QueryManagerConfig.java", "diffHunk": "@@ -258,6 +259,19 @@ public int getMaxQueryRunningTaskCount()\n         return maxQueryRunningTaskCount;\n     }\n \n+    @Config(\"experimental.max-total-running-task-count-to-halt-scheduling\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb3c98cd0b2d6249b49b54765fb381c5da5f599f"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyOTg5OTI5", "url": "https://github.com/prestodb/presto/pull/14194#pullrequestreview-372989929", "createdAt": "2020-03-11T17:48:10Z", "commit": {"oid": "bb5786f9cf39dcb777760a007e0fc17874498b8d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cc5cf5cfdfee3e7391cccc5ad9f18e5dae3c0c9", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/4cc5cf5cfdfee3e7391cccc5ad9f18e5dae3c0c9", "committedDate": "2020-03-11T20:28:29Z", "message": "Rename configuration properties for task count limit\n\nThese properties have been proved to be effective to\nthrottle high stage queryies and improve reliability."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5968f5cccadd69d0628e78d70ad93b6a406cc265", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/5968f5cccadd69d0628e78d70ad93b6a406cc265", "committedDate": "2020-03-11T20:29:56Z", "message": "Add configuration property to control query queuing\n\nWhen total running task count exceeds limit specified by this property,\nqueries will stay in the queue."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "378ffffcc6984a84e6516199508febc1fa10453e", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/378ffffcc6984a84e6516199508febc1fa10453e", "committedDate": "2020-03-11T20:30:02Z", "message": "Refactor TestQueryTaskLimit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9edf98010f1747fbdad75e09989ef6a86381507f", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/9edf98010f1747fbdad75e09989ef6a86381507f", "committedDate": "2020-03-11T20:38:57Z", "message": "Keep queries in the queue when task count is high\n\nUse total running task count as a proxy for cluster load and keep\nqueries in the queue if load is high."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb5786f9cf39dcb777760a007e0fc17874498b8d", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/bb5786f9cf39dcb777760a007e0fc17874498b8d", "committedDate": "2020-03-10T18:35:37Z", "message": "Keep queries in the queue when task count is high\n\nUse total running task count as a proxy for cluster load and keep\nqueries in the queue if load is high."}, "afterCommit": {"oid": "9edf98010f1747fbdad75e09989ef6a86381507f", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/9edf98010f1747fbdad75e09989ef6a86381507f", "committedDate": "2020-03-11T20:38:57Z", "message": "Keep queries in the queue when task count is high\n\nUse total running task count as a proxy for cluster load and keep\nqueries in the queue if load is high."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2384, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}