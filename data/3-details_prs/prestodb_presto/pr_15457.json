{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNTk5NTkx", "number": 15457, "title": "Allow serialized presto page in remote UDF thrift service", "bodyText": "Test plan - (Please fill in how you tested your changes)\n== NO RELEASE NOTE ==", "createdAt": "2020-11-19T00:41:59Z", "url": "https://github.com/prestodb/presto/pull/15457", "merged": true, "mergeCommit": {"oid": "4d5afceed18cc4f71a1574adafcd506db6e33e83"}, "closed": true, "closedAt": "2020-12-12T00:57:28Z", "author": {"login": "rongrong"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdd4cvfgBqjQwMTM1MjcxMDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdk--pZgBqjQwOTgyMTIwMjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2068b76701b28ffaa6a691bf2a859a5aa026bed7", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/2068b76701b28ffaa6a691bf2a859a5aa026bed7", "committedDate": "2020-11-19T00:30:34Z", "message": "Support Serialized Presto Page in Thrift UDF service"}, "afterCommit": {"oid": "20f1737a8d37b7fd19de1e95bee31f58da2196d3", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/20f1737a8d37b7fd19de1e95bee31f58da2196d3", "committedDate": "2020-11-19T01:26:47Z", "message": "Support Serialized Presto Page in Thrift UDF service"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20f1737a8d37b7fd19de1e95bee31f58da2196d3", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/20f1737a8d37b7fd19de1e95bee31f58da2196d3", "committedDate": "2020-11-19T01:26:47Z", "message": "Support Serialized Presto Page in Thrift UDF service"}, "afterCommit": {"oid": "8850a0983cde4f6df68bc3837e70ab11b0d61e02", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/8850a0983cde4f6df68bc3837e70ab11b0d61e02", "committedDate": "2020-11-19T22:46:20Z", "message": "Support Serialized Presto Page in Thrift UDF service"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8850a0983cde4f6df68bc3837e70ab11b0d61e02", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/8850a0983cde4f6df68bc3837e70ab11b0d61e02", "committedDate": "2020-11-19T22:46:20Z", "message": "Support Serialized Presto Page in Thrift UDF service"}, "afterCommit": {"oid": "a0347f9afab28cc42e14c725ae7dc7c566a3fc09", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/a0347f9afab28cc42e14c725ae7dc7c566a3fc09", "committedDate": "2020-11-19T23:05:41Z", "message": "Support Serialized Presto Page in Thrift UDF service"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0347f9afab28cc42e14c725ae7dc7c566a3fc09", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/a0347f9afab28cc42e14c725ae7dc7c566a3fc09", "committedDate": "2020-11-19T23:05:41Z", "message": "Support Serialized Presto Page in Thrift UDF service"}, "afterCommit": {"oid": "0656f562a5453a47851244f9f8e1a12149d90b0c", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/0656f562a5453a47851244f9f8e1a12149d90b0c", "committedDate": "2020-11-19T23:48:21Z", "message": "Support Serialized Presto Page in Thrift UDF service"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0656f562a5453a47851244f9f8e1a12149d90b0c", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/0656f562a5453a47851244f9f8e1a12149d90b0c", "committedDate": "2020-11-19T23:48:21Z", "message": "Support Serialized Presto Page in Thrift UDF service"}, "afterCommit": {"oid": "e8fc7ed45d818fb085e9e853ecc9d8205cafa714", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/e8fc7ed45d818fb085e9e853ecc9d8205cafa714", "committedDate": "2020-12-03T00:53:20Z", "message": "Remove redundant logic in EchoFirstInputThriftUdfService"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e8fc7ed45d818fb085e9e853ecc9d8205cafa714", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/e8fc7ed45d818fb085e9e853ecc9d8205cafa714", "committedDate": "2020-12-03T00:53:20Z", "message": "Remove redundant logic in EchoFirstInputThriftUdfService"}, "afterCommit": {"oid": "c498fe37be301555edee9673063e43ce7576a25a", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/c498fe37be301555edee9673063e43ce7576a25a", "committedDate": "2020-12-03T01:29:29Z", "message": "Remove redundant logic in EchoFirstInputThriftUdfService"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c498fe37be301555edee9673063e43ce7576a25a", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/c498fe37be301555edee9673063e43ce7576a25a", "committedDate": "2020-12-03T01:29:29Z", "message": "Remove redundant logic in EchoFirstInputThriftUdfService"}, "afterCommit": {"oid": "938f8d7d6661b94279de610e41f71b5f7d06737b", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/938f8d7d6661b94279de610e41f71b5f7d06737b", "committedDate": "2020-12-03T03:01:54Z", "message": "Remove redundant logic in EchoFirstInputThriftUdfService"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "938f8d7d6661b94279de610e41f71b5f7d06737b", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/938f8d7d6661b94279de610e41f71b5f7d06737b", "committedDate": "2020-12-03T03:01:54Z", "message": "Remove redundant logic in EchoFirstInputThriftUdfService"}, "afterCommit": {"oid": "bd08951a7d9a02c3356b392d3053f0bd5a76ece0", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/bd08951a7d9a02c3356b392d3053f0bd5a76ece0", "committedDate": "2020-12-05T00:45:38Z", "message": "Remove redundant logic in EchoFirstInputThriftUdfService"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd08951a7d9a02c3356b392d3053f0bd5a76ece0", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/bd08951a7d9a02c3356b392d3053f0bd5a76ece0", "committedDate": "2020-12-05T00:45:38Z", "message": "Remove redundant logic in EchoFirstInputThriftUdfService"}, "afterCommit": {"oid": "5566a4752e3a7d4cd22d26e60613b42b28d78a94", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/5566a4752e3a7d4cd22d26e60613b42b28d78a94", "committedDate": "2020-12-05T01:59:07Z", "message": "Remove redundant logic in EchoFirstInputThriftUdfService"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjYxODEz", "url": "https://github.com/prestodb/presto/pull/15457#pullrequestreview-546661813", "createdAt": "2020-12-08T00:53:28Z", "commit": {"oid": "5566a4752e3a7d4cd22d26e60613b42b28d78a94"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDo1MzoyOFrOIBBxSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDo1Nzo0OFrOIBB38g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk0ODQ5MA==", "bodyText": "Is it possible to inject Optional? If it is not possible to inject Optional could we inject it via a setter and make the field Optional at least?", "url": "https://github.com/prestodb/presto/pull/15457#discussion_r537948490", "createdAt": "2020-12-08T00:53:28Z", "author": {"login": "arhimondr"}, "path": "presto-function-namespace-managers/src/main/java/com/facebook/presto/functionNamespace/execution/SqlFunctionExecutors.java", "diffHunk": "@@ -41,7 +42,7 @@\n     public SqlFunctionExecutors(Map<Language, FunctionImplementationType> supportedLanguages, ThriftSqlFunctionExecutor thriftSqlFunctionExecutor)\n     {\n         this.supportedLanguages = requireNonNull(supportedLanguages, \"supportedLanguages is null\");\n-        this.thriftSqlFunctionExecutor = requireNonNull(thriftSqlFunctionExecutor, \"thriftSqlFunctionExecutor is null\");\n+        this.thriftSqlFunctionExecutor = thriftSqlFunctionExecutor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5566a4752e3a7d4cd22d26e60613b42b28d78a94"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk0ODgyNg==", "bodyText": "PagesSerde is not thread safe", "url": "https://github.com/prestodb/presto/pull/15457#discussion_r537948826", "createdAt": "2020-12-08T00:54:21Z", "author": {"login": "arhimondr"}, "path": "presto-function-namespace-managers/src/main/java/com/facebook/presto/functionNamespace/execution/thrift/ThriftSqlFunctionExecutor.java", "diffHunk": "@@ -17,49 +17,60 @@\n import com.facebook.drift.client.DriftClient;\n import com.facebook.presto.common.Page;\n import com.facebook.presto.common.block.Block;\n+import com.facebook.presto.common.block.BlockEncodingSerde;\n import com.facebook.presto.common.type.Type;\n import com.facebook.presto.common.type.TypeSignature;\n import com.facebook.presto.spi.PrestoException;\n+import com.facebook.presto.spi.function.RoutineCharacteristics.Language;\n import com.facebook.presto.spi.function.SqlFunctionHandle;\n import com.facebook.presto.spi.function.SqlFunctionId;\n import com.facebook.presto.spi.function.ThriftScalarFunctionImplementation;\n+import com.facebook.presto.spi.page.PagesSerde;\n import com.facebook.presto.thrift.api.datatypes.PrestoThriftBlock;\n import com.facebook.presto.thrift.api.udf.ThriftFunctionHandle;\n+import com.facebook.presto.thrift.api.udf.ThriftUdfPage;\n+import com.facebook.presto.thrift.api.udf.ThriftUdfPageFormat;\n+import com.facebook.presto.thrift.api.udf.ThriftUdfResult;\n import com.facebook.presto.thrift.api.udf.ThriftUdfService;\n import com.facebook.presto.thrift.api.udf.ThriftUdfServiceException;\n import com.google.common.collect.ImmutableList;\n import com.google.inject.Inject;\n \n import java.util.List;\n+import java.util.Map;\n import java.util.Optional;\n import java.util.concurrent.CompletableFuture;\n \n import static com.facebook.airlift.concurrent.MoreFutures.toCompletableFuture;\n+import static com.facebook.presto.common.Page.wrapBlocksWithoutCopy;\n import static com.facebook.presto.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n+import static com.facebook.presto.thrift.api.udf.ThriftUdfPage.prestoPage;\n import static com.facebook.presto.thrift.api.udf.ThriftUdfPage.thriftPage;\n import static com.google.common.collect.ImmutableList.toImmutableList;\n import static com.google.common.collect.Iterables.getOnlyElement;\n+import static java.lang.String.format;\n+import static java.util.Objects.requireNonNull;\n \n public class ThriftSqlFunctionExecutor\n {\n     private final DriftClient<ThriftUdfService> thriftUdfClient;\n+    private final PagesSerde pagesSerde;\n+    private final Map<Language, ThriftSqlFunctionExecutionConfig> executionConfigs;\n \n     @Inject\n-    public ThriftSqlFunctionExecutor(DriftClient<ThriftUdfService> thriftUdfClient)\n+    public ThriftSqlFunctionExecutor(DriftClient<ThriftUdfService> thriftUdfClient, BlockEncodingSerde blockEncodingSerde, Map<Language, ThriftSqlFunctionExecutionConfig> executionConfigs)\n     {\n-        this.thriftUdfClient = thriftUdfClient;\n+        this.thriftUdfClient = requireNonNull(thriftUdfClient, \"thriftUdfClient is null\");\n+        this.pagesSerde = new PagesSerde(requireNonNull(blockEncodingSerde, \"blockEncodingSerde is null\"), Optional.empty(), Optional.empty(), Optional.empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5566a4752e3a7d4cd22d26e60613b42b28d78a94"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk0OTExOA==", "bodyText": "It should be possible to make it Optional", "url": "https://github.com/prestodb/presto/pull/15457#discussion_r537949118", "createdAt": "2020-12-08T00:55:02Z", "author": {"login": "arhimondr"}, "path": "presto-thrift-api/src/main/java/com/facebook/presto/thrift/api/udf/ThriftUdfPage.java", "diffHunk": "@@ -24,21 +25,25 @@\n import java.util.Objects;\n \n import static com.facebook.drift.annotations.ThriftField.Requiredness.OPTIONAL;\n+import static com.facebook.presto.thrift.api.udf.ThriftUdfPageFormat.PRESTO_SERIALIZED;\n import static com.facebook.presto.thrift.api.udf.ThriftUdfPageFormat.PRESTO_THRIFT;\n \n @ThriftStruct(\"UdfPage\")\n public class ThriftUdfPage\n {\n     private final ThriftUdfPageFormat pageFormat;\n     private final List<PrestoThriftBlock> thriftBlocks;\n+    private final ThriftSerializedPage prestoPage;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5566a4752e3a7d4cd22d26e60613b42b28d78a94"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk0OTE0OA==", "bodyText": "Ditto", "url": "https://github.com/prestodb/presto/pull/15457#discussion_r537949148", "createdAt": "2020-12-08T00:55:08Z", "author": {"login": "arhimondr"}, "path": "presto-thrift-api/src/main/java/com/facebook/presto/thrift/api/udf/ThriftUdfPage.java", "diffHunk": "@@ -54,6 +59,13 @@ public ThriftUdfPageFormat getPageFormat()\n         return thriftBlocks;\n     }\n \n+    @Nullable\n+    @ThriftField(value = 3, requiredness = OPTIONAL)\n+    public ThriftSerializedPage getPrestoPage()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5566a4752e3a7d4cd22d26e60613b42b28d78a94"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk0OTQ4Ng==", "bodyText": "PagesSerde is not thread safe", "url": "https://github.com/prestodb/presto/pull/15457#discussion_r537949486", "createdAt": "2020-12-08T00:56:00Z", "author": {"login": "arhimondr"}, "path": "presto-thrift-testing-udf-server/src/main/java/com/facebook/presto/udf/thrift/EchoFirstInputThriftUdfService.java", "diffHunk": "@@ -13,35 +13,54 @@\n  */\n package com.facebook.presto.udf.thrift;\n \n+import com.facebook.presto.common.Page;\n+import com.facebook.presto.common.block.BlockEncodingSerde;\n+import com.facebook.presto.spi.page.PagesSerde;\n import com.facebook.presto.thrift.api.udf.ThriftFunctionHandle;\n import com.facebook.presto.thrift.api.udf.ThriftUdfPage;\n import com.facebook.presto.thrift.api.udf.ThriftUdfResult;\n import com.facebook.presto.thrift.api.udf.ThriftUdfService;\n import com.facebook.presto.thrift.api.udf.ThriftUdfStats;\n import com.google.common.collect.ImmutableList;\n import com.google.common.util.concurrent.ListenableFuture;\n-import com.google.common.util.concurrent.ListeningExecutorService;\n+import com.google.inject.Inject;\n \n-import static com.facebook.airlift.concurrent.Threads.threadsNamed;\n-import static com.facebook.presto.thrift.api.udf.ThriftUdfPageFormat.PRESTO_THRIFT;\n-import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.util.concurrent.MoreExecutors.listeningDecorator;\n-import static java.util.concurrent.Executors.newFixedThreadPool;\n+import java.util.Optional;\n+\n+import static com.facebook.presto.thrift.api.udf.ThriftUdfPage.prestoPage;\n+import static com.facebook.presto.thrift.api.udf.ThriftUdfPage.thriftPage;\n+import static com.google.common.util.concurrent.Futures.immediateFuture;\n \n public class EchoFirstInputThriftUdfService\n         implements ThriftUdfService\n {\n-    private final ListeningExecutorService executor = listeningDecorator(\n-            newFixedThreadPool(Runtime.getRuntime().availableProcessors(), threadsNamed(\"udf-thrift-%s\")));\n+    private final PagesSerde pagesSerde;\n+\n+    @Inject\n+    public EchoFirstInputThriftUdfService(BlockEncodingSerde blockEncodingSerde)\n+    {\n+        this.pagesSerde = new PagesSerde(blockEncodingSerde, Optional.empty(), Optional.empty(), Optional.empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5566a4752e3a7d4cd22d26e60613b42b28d78a94"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk1MDE5NA==", "bodyText": "question: Is this going to bind a new instance? Should we reuse the instance bound and initialized in the presto-main? Connectors are free to register custom block serializer. We should make sure that for function namespace the same instance, where the custom serializers are bound, is used", "url": "https://github.com/prestodb/presto/pull/15457#discussion_r537950194", "createdAt": "2020-12-08T00:57:48Z", "author": {"login": "arhimondr"}, "path": "presto-function-namespace-managers/src/main/java/com/facebook/presto/functionNamespace/execution/thrift/SimpleAddressThriftSqlFunctionExecutionModule.java", "diffHunk": "@@ -41,6 +43,8 @@ public SimpleAddressThriftSqlFunctionExecutionModule(Map<Language, SimpleAddress\n     public void configure(Binder binder)\n     {\n         binder.bind(ThriftSqlFunctionExecutor.class).in(SINGLETON);\n+        binder.bind(BlockEncodingManager.class).in(SINGLETON);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5566a4752e3a7d4cd22d26e60613b42b28d78a94"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5566a4752e3a7d4cd22d26e60613b42b28d78a94", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/5566a4752e3a7d4cd22d26e60613b42b28d78a94", "committedDate": "2020-12-05T01:59:07Z", "message": "Remove redundant logic in EchoFirstInputThriftUdfService"}, "afterCommit": {"oid": "818274e5b108dc44ad23b58736c6897bdfa674b1", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/818274e5b108dc44ad23b58736c6897bdfa674b1", "committedDate": "2020-12-10T00:43:54Z", "message": "Remove redundant logic in EchoFirstInputThriftUdfService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81d03c067cee67a6be9da82f3d4b29259de68e4e", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/81d03c067cee67a6be9da82f3d4b29259de68e4e", "committedDate": "2020-12-11T03:00:42Z", "message": "Remove redundant code in EchoFirstInputThriftUdfService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ba6b55e37c9d4ad33dd1de69389e1261c5fc016", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/1ba6b55e37c9d4ad33dd1de69389e1261c5fc016", "committedDate": "2020-12-11T03:00:42Z", "message": "Move BlockEncodingManager to presto-common"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36433ab1fa4421e037a44cd45bf2aa3fb9ea25c9", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/36433ab1fa4421e037a44cd45bf2aa3fb9ea25c9", "committedDate": "2020-12-11T03:00:42Z", "message": "Support Serialized Presto Page in Thrift UDF service\n\nPrestoThriftBlock has limited type support (only supports array<bigint> for\narray types, no support for map types). The overall performance of Presto\nSerializedPage is better than using PrestoThriftBLock.\n\nBenchmark                                         (typeSignature)  Mode  Cnt        Score        Error  Units\nBenchmarkThriftPageSerDe.testSerializedPageSerde          boolean  avgt   20   166566.169 \u00b1  18267.340  ns/op\nBenchmarkThriftPageSerDe.testSerializedPageSerde           bigint  avgt   20   216654.607 \u00b1  32235.276  ns/op\nBenchmarkThriftPageSerDe.testSerializedPageSerde          varchar  avgt   20  1250560.212 \u00b1 176070.250  ns/op\nBenchmarkThriftPageSerDe.testSerializedPageSerde    array<bigint>  avgt   20   488109.753 \u00b1  55165.876  ns/op\nBenchmarkThriftPageSerDe.testSerializedPageSerde   map<int, real>  avgt   20   633627.296 \u00b1  73473.657  ns/op\nBenchmarkThriftPageSerDe.testThriftPageSerde              boolean  avgt   20   335448.969 \u00b1  22666.853  ns/op\nBenchmarkThriftPageSerDe.testThriftPageSerde               bigint  avgt   20   432328.947 \u00b1  46902.591  ns/op\nBenchmarkThriftPageSerDe.testThriftPageSerde              varchar  avgt   20  1658012.817 \u00b1 196150.353  ns/op\nBenchmarkThriftPageSerDe.testThriftPageSerde        array<bigint>  avgt   20  1291312.373 \u00b1 128077.209  ns/op\nBenchmarkThriftPageSerDe.testThriftPageSerde       map<int, real>  avgt   20        2.971 \u00b1      0.373  ns/op"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "818274e5b108dc44ad23b58736c6897bdfa674b1", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/818274e5b108dc44ad23b58736c6897bdfa674b1", "committedDate": "2020-12-10T00:43:54Z", "message": "Remove redundant logic in EchoFirstInputThriftUdfService"}, "afterCommit": {"oid": "36433ab1fa4421e037a44cd45bf2aa3fb9ea25c9", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/36433ab1fa4421e037a44cd45bf2aa3fb9ea25c9", "committedDate": "2020-12-11T03:00:42Z", "message": "Support Serialized Presto Page in Thrift UDF service\n\nPrestoThriftBlock has limited type support (only supports array<bigint> for\narray types, no support for map types). The overall performance of Presto\nSerializedPage is better than using PrestoThriftBLock.\n\nBenchmark                                         (typeSignature)  Mode  Cnt        Score        Error  Units\nBenchmarkThriftPageSerDe.testSerializedPageSerde          boolean  avgt   20   166566.169 \u00b1  18267.340  ns/op\nBenchmarkThriftPageSerDe.testSerializedPageSerde           bigint  avgt   20   216654.607 \u00b1  32235.276  ns/op\nBenchmarkThriftPageSerDe.testSerializedPageSerde          varchar  avgt   20  1250560.212 \u00b1 176070.250  ns/op\nBenchmarkThriftPageSerDe.testSerializedPageSerde    array<bigint>  avgt   20   488109.753 \u00b1  55165.876  ns/op\nBenchmarkThriftPageSerDe.testSerializedPageSerde   map<int, real>  avgt   20   633627.296 \u00b1  73473.657  ns/op\nBenchmarkThriftPageSerDe.testThriftPageSerde              boolean  avgt   20   335448.969 \u00b1  22666.853  ns/op\nBenchmarkThriftPageSerDe.testThriftPageSerde               bigint  avgt   20   432328.947 \u00b1  46902.591  ns/op\nBenchmarkThriftPageSerDe.testThriftPageSerde              varchar  avgt   20  1658012.817 \u00b1 196150.353  ns/op\nBenchmarkThriftPageSerDe.testThriftPageSerde        array<bigint>  avgt   20  1291312.373 \u00b1 128077.209  ns/op\nBenchmarkThriftPageSerDe.testThriftPageSerde       map<int, real>  avgt   20        2.971 \u00b1      0.373  ns/op"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4738, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}