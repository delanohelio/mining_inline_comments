{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MjE3Njkx", "number": 15270, "title": "Add release notes for 0.242", "bodyText": "Missing Release Notes\nAriel Weisberg\n\n #15243 Link to attribution guidelines in PR template (Merged by: Andrii Rosa)\n\nDaniel Ohayon\n\n #15219 Core support for enums, take #2 (Merged by: Rongrong Zhong)\n\nMayank Garg\n\n #15187 Consider predicate columns for encryption (Merged by: Rebecca Schlussel)\n\nNikhil Collooru\n\n #15044 Add support for versioning metastore API (Merged by: Shixuan Fan)\n\nRongrong Zhong\n\n #14012 Remote plan execution (Merged by: Rongrong Zhong)\n\nSaumitra Shahapure\n\n #15128 Fixing bug: IS DISTINCT FROM NULL should work for NULL column values (Merged by: Rongrong Zhong)\n\nXiang Fu\n\n #15135 Pinot Connector: Adding limit to push down order by for broker query (Merged by: Zhenxiao Luo)\n\nYuya Ebihara\n\n #15147 Support smallint, tinyint, date type of Cassandra (Merged by: James Sun)\n\nasdf2014\n\n #15148 Bump Apache Druid to 0.19.0 (Merged by: Zhenxiao Luo)\n\nExtracted Release Notes\n\n#14974 (Author: Nikhil Collooru): Rename files written by PageSink\n\nAdd support for file renaming for Hive connector. This can be enabled with hive.file_renaming_enabled configuration property.\n\n\n#15074 (Author: Sanjay Sundaresan): Add support in parquet reader for reading TIMESTAMP_MICROS type.\n\nParquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp can now be queried by presto.\n\n\n#15101 (Author: Leiqing Cai): Support explain verification\n\nAdd support to run explain verification. (:pr:15101). This can be enabled by configuration property explain.\n\n\n#15108 (Author: Mayank Garg): Add property to limit output size of a query\n\nAdd session property query_max_output_bytes and configuration property query.max-output-bytes to control how much data a query can output.\n\n\n#15132 (Author: Leiqing Cai): Support fetching queries to be verified using a Presto query\n\nAdd support to fetch the list of queries to be verified by running a Presto query.\n\n\n#15155 (Author: Shixuan Fan): Support fragment result caching\n\nAdd support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting fragment-result-cache.enabled to true and tuned by other configs started with fragment-result-cache. Query could use fragment result cache by setting config experimental.fragment-result-caching-enabled or session property fragment_result_caching_enabled to true.\nAdd getSplitIdentifier to ConnectorSplit. Split identifier is used in fragment result caching to identify if splits are identical.\nAdd getIdentifier to ConnectorTableLayoutHandle. Layout identifier is used in fragment result caching to construct canonical plan.\n\n\n#15163 (Author: James Petty): Fix performance regression when hive SerDe doesn't prefer Writables\n\nFix a performance regression for String field handling in GenericHiveRecordCursor when the SerDe does not provide an efficient Writable implementation.\n\n\n#15173 (Author: Saksham Sachdev): Implement Spilling Strategies\n\nAdd config experimental.spiller.task-spilling-strategy for choosing different spilling strategy to use.\n\n\n#15181 (Author: Leiqing Cai): Fix LimitQueryDeterminismAnalyzer\n\nFix an issue in determinism analysis would indicate failing due to data being changed while the data is not changed.\n\n\n#15183 (Author: Rongrong Zhong): Fix compiler error in LambdaBytecodeGenerator\n\nFix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n\n\n#15191 (Author: Palash Goel): [Verifier] Add application-name config\n\nAdd application-name config to override source passed in ClientInfo.\n\n\n#15198 (Author: Leiqing Cai): Improve plan comparison for explain verification\n\nImprove JSON plan comparison for explain verification. (:pr:15198).\n\n\n#15199 (Author: Rebecca Schlussel): Fix encrypt large value\n\nFix a bug where DWRF encryption would fail for large uncompressed column values.\n\n\n#15200 (Author: James Gill): Upgrade Esri to 2.2.4\n\nUpgrade Esri to 2.2.4.  This includes two fixes for bug (Esri/geometry-api-java#266 and Esri/geometry-api-java#247) that were seen in production.\n\n\n#15208 (Author: James Petty): Clamp BackgroundHiveSplitLoader concurrency to usable parallelism\n\nImprove split loading thread utilization by reducing the number of tasks submitted for small scans.\n\n\n#15214 (Author: Rebecca Schlussel): Fix order of dwrf encryption group stats\n\nFix a bug where non-Presto readers could not read encrypted DWRF files written by Presto if the encryption group listed columns out of order.\n\n\n#15220 (Author: James Petty): Fix potential deadlock when PageBufferClient exceeds memory limit\n\nFix possible permanent stuck queries when memory limit exceeded during shuffle.\n\n\n\nAll Commits\n\n4cd2141 Add integration tests for file renaming (Nikhil Collooru)\nd3ef69a Add config parameters to enable hive file renaming (Nikhil Collooru)\na786699 POST the metadata results to worker (Nikhil Collooru)\nc2b2b0d Rename files written by HivePageSink (Nikhil Collooru)\na74b034 Add new POST {taskId}/metadataresults endpoint on worker (Nikhil Collooru)\nf15fe1f Piggyback MetadataUpdateRequests to coordinator as part of TaskInfo (Nikhil Collooru)\n9eaa655 Support fragment result caching (Shixuan Fan)\n99445d9 Use static import and lambda in TestDriver (Shixuan Fan)\n1489cac Introduce fragment result cache manager (Shixuan Fan)\n069629b Introduce split identifier (Shixuan Fan)\na1b9176 Introduce CanonicalPlanGenerator (Shixuan Fan)\n53aa7f6 Reserve memory before projecting rows (Ying Su)\n00e61e4 Do not ignore table bucketing when query uses bucket column (Vic Zhang)\nd57ce0f Remove TypeManager.resolveOperator (Rongrong Zhong)\ne6ad497 Collapse nested DEREF expressions into a single one. (Sreeni Viswanadha)\nd8be70d Add extra config and session property to toggle join spilling (Saksham Sachdev)\n9a11908 Use newer Alluxio client (Bin Fan)\n544b5a4 Introduce TaskSpillingStrategy and multiple spilling strategies (Saksham Sachdev)\n30e4606 Link to attribution guidelines in PR template (Ariel Weisberg)\ncef58ff Add enum operators (Daniel Ohayon)\n9fe32b5 Support enum literals in queries (Daniel Ohayon)\n7e880e6 Support type bound in TypeVariableConstraint (Daniel Ohayon)\n5e20973 Add long and varchar enum types (Daniel Ohayon)\n2dfb7cd Remove BlockEncodingManager's dependency on TypeManager (Rongrong Zhong)\nef5843a Make TestQueryManager#testFailQueryPrerun more reliable (Tim Meehan)\nb57f7ff Upgrade Esri to 2.2.4 (James Gill)\n139f15a [Verifier] Add application-name config (Palash Goel)\ne2ff32e Simplify PinotQueryGenerator pushdown logic (Zhenxiao Luo)\n2d1416e Pinot Connector: Adding config to push down order by for broker query (Xiang Fu)\nbb0d04a Add docs for exchange materialization (Wenlei Xie)\n6b97e58 Update peak memory in TaskContext for Presto-on-Spark task (Wenlei Xie)\nc9e550b Minor tweak in Presto-on-Spark peak task user memory report (Wenlei Xie)\nebf428a Add peak task user memory to TaskStats (Wenlei Xie)\n46bcc63 Add comment to SerializedTaskInfo (Wenlei Xie)\n746824c Fix potential deadlock when PageBufferClient exceeds memory limit (James Petty)\n35f267d Disable Elasticsearch connector flaky test (Zhenxiao Luo)\n8ae554d Enable nullifying iterator for broadcast join (Andrii Rosa)\n77bfa04 Cassandra connector ccreate table (Yuya Ebihara)\nc857741 Fix order of dwrf encryption group stats (Rebecca Schlussel)\nd57bbfd Implement pass through mode UNION ALL on Presto-on-Spark (Vic Zhang)\n4d91a60 Improve plan matching for explain verification (Leiqing Cai)\nfdfd9be Remove special rule to skip control queries for explain verification (Leiqing Cai)\n1fc69dc Handle storage connection exceptions correctly (Nikhil Collooru)\n6bb12b6 Fix error message formatting (Rebecca Schlussel)\nda0d5c2 Fix dwrf encryption for large column values (Rebecca Schlussel)\n913be28 Clamp BackgroundHiveSplitLoader concurrency to usable parallelism (James Petty)\n79c3a3f Improve Elasticsearch connector documentation (fornaix)\n00fbb9b Update default Presto Pinot Connector Configs (Xiang Fu)\n14ba79c Refactor more operators to use applicate Page method helpers (James Petty)\n20a6c40 Add Page#extractChannel(int) to enable efficient single channel extraction (James Petty)\nfa513e2 Consider predicate columns for encryption (Mayank Garg)\nc0b38fe Disallow partial aggregation pushdown when (Vivek)\nc065b1d Do not support dynamic filtering with grouped-execution (Ke Wang)\n244d880 Update drift library to 1.28 (Vic Zhang)\n95bcfcd Include storage format name to temporary table name (Vic Zhang)\n28bd920 Use PAGEFILE format for hive unsupported type (Vic Zhang)\n2d228db Add session property to automatically use PAGEFILE (Vic Zhang)\n20b72bd Parquet code cleanup (Zhenxiao Luo)\n4b8021f Add unit tests for partition versioning enabled Metastore (Nikhil Collooru)\n584fd8c Add new getPartitionNamesWithVersionByFilter metastore api (Nikhil Collooru)\ncdbd177 Add config to enable Partition versioning (Nikhil Collooru)\n9dcc558 Add optional version parameter to metastore Partition (Nikhil Collooru)\n9ae10f0 Skip unsupported types when pushing down in Cassandra (Yuya Ebihara)\nad2a1c7 Add support in parquet reader for reading TIMESTAMP_MICROS type. (Sanjay Sundaresan)\nd9c8807 Remove unused Parquet classes (Vivek)\nb88a9a9 Fix compiler error in LambdaBytecodeGenerator (Rongrong Zhong)\n30d2588 Remove unused configuration property from properties.rst (Ying Su)\n4ea4139 Revert \"Add long and varchar enum types\" (Ying Su)\n748e69e Revert \"Support type bound in TypeVariableConstraint\" (Ying Su)\n93bf9be Revert \"Support enum literals in queries\" (Ying Su)\n923d3ed Revert \"Add enum operators\" (Ying Su)\n77c442c Revert \"Fix IllegalArgumentException in RelationPlanner\" (Ying Su)\nd79804d Fixing bug: IS DISTINCT FROM NULL should work for NULL column values (Saumitra Shahapure)\nee1627e Bug fix in LimitQueryDeterminismAnalyzer (Leiqing Cai)\n600c157 Avoid DateTimeZone.getDefault() in GenericHiveRecordCursor hot path (James Petty)\ne7e8ecc Fix performance regression when Hive SerDe doesn't prefer Writables (James Petty)\n06d5f49 Support smallint, tinyint, date type of Cassandra (Yuya Ebihara)\n5bdb41d Parser warnings when the query contains mixed AND/OR operator without proper parenthesis. (ankit0811)\ndf8228f Fix wrong group by column definition in druid connector (Weidong Duan)\naf273e1 Fix broken link in presto-verifier README (Palash Goel)\nfaebf2a Add more functions to TestHiveExternalWorkersQueries (Masha Basmanova)\n2108955 Add waitForMinimumCoordinators to ClusterSizeMonitor (Tim Meehan)\ndd7dad9 Fix IllegalArgumentException in RelationPlanner (Rongrong Zhong)\naaeff3f Support Remote function execution (Rongrong Zhong)\n3825bdb Remote function execution with thrift executor (Rongrong Zhong)\nb1b5e8f Fix ProjectNode locality in PlanFragmenter (Rongrong Zhong)\n219c7d7 Introduce large dictionary mode in SliceDictionarySelectiveReader (Ying Su)\n0006741 Remove stripeDictionaryData buffer in SliceDictionarySelectiveReader (Ying Su)\n7994754 Defer the creation of dictionary in SliceDictionarySelectiveReader (Ying Su)\n93d1b04 Bump Apache Druid to 0.19.0 (asdf2014)\n405ebe6 Adding multivalued column support in Pinot connector (Dharak Kharod)\nec9b5cf Add tests for sum, min, max and avg queries running on native workers (Masha Basmanova)\n926df09 TupleDomain cleanup (Zhenxiao Luo)\na7bf06f Add property to limit output size of a query (Mayank Garg)\n1bc26f0 Dynamic partition pruning on workers (Ke Wang)\n710f04e Support explain verification (Leiqing Cai)\nb388a1b Extract class QueryBundle (Leiqing Cai)\nd385583 Extract interface MatchResult (Leiqing Cai)\nf2d19cf Extract determinism analysis from AbstractVerification (Leiqing Cai)\nb050fc1 Extract query rewrite from AbstractVerification (Leiqing Cai)\naae0157 Minor fixes in Verifier (Leiqing Cai)\nf3a43a8 Add test infrastructure to run queries using native workers (Masha Basmanova)\n2e179d3 Support fetching queries to be verified using a Presto query (Leiqing Cai)\n6a763b2 Cleanup of partial aggregation pushdown for ORC/Parquet (Zhenxiao Luo)\nb66f102 Remove dependency on javafx (Vivek)\nbaece53 Restore commented out tests (Ying Su)", "createdAt": "2020-10-06T02:10:50Z", "url": "https://github.com/prestodb/presto/pull/15270", "merged": true, "mergeCommit": {"oid": "93149ae7704799d0a4d5ac46a76440372cd9f3c2"}, "closed": true, "closedAt": "2020-10-10T01:23:20Z", "author": {"login": "caithagoras"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQHSo1gBqjM4NDg4NDcxMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQ_l_GABqjM4NjIxNjQyNDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ad65c7e2117c2b6240c6ca99700f00e0800b693", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/7ad65c7e2117c2b6240c6ca99700f00e0800b693", "committedDate": "2020-10-06T02:10:45Z", "message": "Add release notes for 0.242"}, "afterCommit": {"oid": "e5a9c8393429d513beaae05f1976e38e3aeabfc2", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/e5a9c8393429d513beaae05f1976e38e3aeabfc2", "committedDate": "2020-10-07T06:48:56Z", "message": "Add release notes for 0.242"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5a9c8393429d513beaae05f1976e38e3aeabfc2", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/e5a9c8393429d513beaae05f1976e38e3aeabfc2", "committedDate": "2020-10-07T06:48:56Z", "message": "Add release notes for 0.242"}, "afterCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/715285b14bb213fb2e12f52f278bd7d2baa55c8c", "committedDate": "2020-10-07T06:54:36Z", "message": "Add release notes for 0.242"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MzEyNDgz", "url": "https://github.com/prestodb/presto/pull/15270#pullrequestreview-504312483", "createdAt": "2020-10-07T22:30:19Z", "commit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMjozMDoxOVrOHeHwrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMjo0MTowM1rOHeIAyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0NjQ3Nw==", "bodyText": "My bad, let's change \"when CSE is enabled\" to \"when common sub-expression optimization is enabled\"", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501346477", "createdAt": "2020-10-07T22:30:19Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0NjcwNA==", "bodyText": "\"permanently\" stuck queries ...  memory limit \"is\" exceeded..", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501346704", "createdAt": "2020-10-07T22:30:52Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0NzU5MQ==", "bodyText": "This should be a Hive connector change? @NikhilCollooru", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501347591", "createdAt": "2020-10-07T22:33:09Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0ODI0OA==", "bodyText": "Is there a separate rst file documenting how this could be used? This should not be explained in release notes. @shixuan-fan", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501348248", "createdAt": "2020-10-07T22:34:56Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0OTAzMA==", "bodyText": "This probably also should be under hive changes? cc @zhenxiao", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501349030", "createdAt": "2020-10-07T22:36:55Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0OTQyOQ==", "bodyText": "This and the next one also should be in hive changes. @NikhilCollooru", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501349429", "createdAt": "2020-10-07T22:37:56Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.\n+* Add support for partition versioning. This can be enabled with ``hive.partition-versioning-enabled`` configuration property", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1MDQ0Ng==", "bodyText": "What's the user impact for this? @pettyjamesm @arhimondr @highker", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501350446", "createdAt": "2020-10-07T22:40:39Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.\n+* Add support for partition versioning. This can be enabled with ``hive.partition-versioning-enabled`` configuration property\n+* Add support for caching HiveMetastore calls at a more granular level . Supported levels:  'PARTITION' and 'ALL'(default). This can be set with ``hive.metastore-cache-scope`` configuration property.\n+\n+Hive Changes\n+_______________\n+* Fix a bug where DWRF encryption would fail for large uncompressed column values.\n+* Fix a bug where non-Presto readers could not read encrypted DWRF files written by Presto if the encryption group listed columns out of order.\n+* Fix a performance regression for String field handling in GenericHiveRecordCursor when the SerDe does not provide an efficient Writable implementation.\n+* Improve split loading thread utilization by reducing the number of tasks submitted for small scans.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1MDYwMg==", "bodyText": "Format:\nAdd config pinot.xxxx", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501350602", "createdAt": "2020-10-07T22:41:03Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.\n+* Add support for partition versioning. This can be enabled with ``hive.partition-versioning-enabled`` configuration property\n+* Add support for caching HiveMetastore calls at a more granular level . Supported levels:  'PARTITION' and 'ALL'(default). This can be set with ``hive.metastore-cache-scope`` configuration property.\n+\n+Hive Changes\n+_______________\n+* Fix a bug where DWRF encryption would fail for large uncompressed column values.\n+* Fix a bug where non-Presto readers could not read encrypted DWRF files written by Presto if the encryption group listed columns out of order.\n+* Fix a performance regression for String field handling in GenericHiveRecordCursor when the SerDe does not provide an efficient Writable implementation.\n+* Improve split loading thread utilization by reducing the number of tasks submitted for small scans.\n+\n+Pinot Changes\n+_______________\n+* Adding config: ``pinot.pushdown-topn-broker-queries`` to allow pushing down TOPN queries to Pinot.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MzI3NzQ1", "url": "https://github.com/prestodb/presto/pull/15270#pullrequestreview-504327745", "createdAt": "2020-10-07T23:07:19Z", "commit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMzowNzoxOVrOHeIkgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMzoxNDo1NVrOHeIt8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1OTc0NA==", "bodyText": "Add configuration property ...", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501359744", "createdAt": "2020-10-07T23:07:19Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MDIyMQ==", "bodyText": "Let move this to Hive Connector Change. Also,\n... with the ``hive.file_renaming_enabled`` ...", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501360221", "createdAt": "2020-10-07T23:08:42Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM0NzU5MQ=="}, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MTA5OQ==", "bodyText": "Add support for caching HiveMetastore calls at a more granular level. This can be specified by the ``hive.metastore-cache-scope`` configuration property.", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501361099", "createdAt": "2020-10-07T23:11:16Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.\n+* Add support for partition versioning. This can be enabled with ``hive.partition-versioning-enabled`` configuration property\n+* Add support for caching HiveMetastore calls at a more granular level . Supported levels:  'PARTITION' and 'ALL'(default). This can be set with ``hive.metastore-cache-scope`` configuration property.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MTI0Ng==", "bodyText": "double back quotes:\n``LambdaBytecodeGenerator``", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501361246", "createdAt": "2020-10-07T23:11:49Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MTQzMw==", "bodyText": "Double back quotes\n``TIMESTAMP_MICROS`` as the ``OriginalType``", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501361433", "createdAt": "2020-10-07T23:12:28Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MTcyOA==", "bodyText": "No need to mention Cassandra because of the section title.\nAdd support for ``SMALLINT``, ``TINYINT``, and ``DATE`` types.", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501361728", "createdAt": "2020-10-07T23:13:25Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.\n+* Add support for partition versioning. This can be enabled with ``hive.partition-versioning-enabled`` configuration property\n+* Add support for caching HiveMetastore calls at a more granular level . Supported levels:  'PARTITION' and 'ALL'(default). This can be set with ``hive.metastore-cache-scope`` configuration property.\n+\n+Hive Changes\n+_______________\n+* Fix a bug where DWRF encryption would fail for large uncompressed column values.\n+* Fix a bug where non-Presto readers could not read encrypted DWRF files written by Presto if the encryption group listed columns out of order.\n+* Fix a performance regression for String field handling in GenericHiveRecordCursor when the SerDe does not provide an efficient Writable implementation.\n+* Improve split loading thread utilization by reducing the number of tasks submitted for small scans.\n+\n+Pinot Changes\n+_______________\n+* Adding config: ``pinot.pushdown-topn-broker-queries`` to allow pushing down TOPN queries to Pinot.\n+\n+Cassandra Change\n+_______________\n+* Add ``SMALLINT``, ``TINYINT``, and ``DATE`` type support to Cassandra connector.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MTk0Ng==", "bodyText": "@zhenxiao What is the user-facing impact here?", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501361946", "createdAt": "2020-10-07T23:14:09Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.\n+* Add support for partition versioning. This can be enabled with ``hive.partition-versioning-enabled`` configuration property\n+* Add support for caching HiveMetastore calls at a more granular level . Supported levels:  'PARTITION' and 'ALL'(default). This can be set with ``hive.metastore-cache-scope`` configuration property.\n+\n+Hive Changes\n+_______________\n+* Fix a bug where DWRF encryption would fail for large uncompressed column values.\n+* Fix a bug where non-Presto readers could not read encrypted DWRF files written by Presto if the encryption group listed columns out of order.\n+* Fix a performance regression for String field handling in GenericHiveRecordCursor when the SerDe does not provide an efficient Writable implementation.\n+* Improve split loading thread utilization by reducing the number of tasks submitted for small scans.\n+\n+Pinot Changes\n+_______________\n+* Adding config: ``pinot.pushdown-topn-broker-queries`` to allow pushing down TOPN queries to Pinot.\n+\n+Cassandra Change\n+_______________\n+* Add ``SMALLINT``, ``TINYINT``, and ``DATE`` type support to Cassandra connector.\n+\n+Druid Changes\n+_______________\n+* Upgrade apache druid version to 0.19.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM2MjE2Mw==", "bodyText": "Remove duplicated white space.", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r501362163", "createdAt": "2020-10-07T23:14:55Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.242\n+=============\n+\n+General Changes\n+_______________\n+* Fix compiler error in LambdaBytecodeGenerator when CSE is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanent stuck queries when memory limit exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add config ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for file renaming for Hive connector. This can be enabled with ``hive.file_renaming_enabled`` configuration property.\n+* Add support for fragment result caching. When enabled, if the same plan fragment and same connector split hit the same worker, engine would directly fetch result from cache and skip computation. Currently only partial aggregation is supported. Cache could be enabled by setting ``fragment-result-cache.enabled`` to ``true`` and tuned by other configs started with ``fragment-result-cache``. Query could use fragment result cache by setting config ``experimental.fragment-result-caching-enabled`` or session property ``fragment_result_caching_enabled`` to ``true``.\n+* Add support to query parquet files written by parquet-avro library that uses TIMESTAMP_MICROS as the OriginalType to represent timestamp.\n+* Add support for partition versioning. This can be enabled with ``hive.partition-versioning-enabled`` configuration property\n+* Add support for caching HiveMetastore calls at a more granular level . Supported levels:  'PARTITION' and 'ALL'(default). This can be set with ``hive.metastore-cache-scope`` configuration property.\n+\n+Hive Changes\n+_______________\n+* Fix a bug where DWRF encryption would fail for large uncompressed column values.\n+* Fix a bug where non-Presto readers could not read encrypted DWRF files written by Presto if the encryption group listed columns out of order.\n+* Fix a performance regression for String field handling in GenericHiveRecordCursor when the SerDe does not provide an efficient Writable implementation.\n+* Improve split loading thread utilization by reducing the number of tasks submitted for small scans.\n+\n+Pinot Changes\n+_______________\n+* Adding config: ``pinot.pushdown-topn-broker-queries`` to allow pushing down TOPN queries to Pinot.\n+\n+Cassandra Change\n+_______________\n+* Add ``SMALLINT``, ``TINYINT``, and ``DATE`` type support to Cassandra connector.\n+\n+Druid Changes\n+_______________\n+* Upgrade apache druid version to 0.19.0\n+\n+Verifier Changes\n+_______________\n+* Fix an issue in determinism analysis which would indicate failing due to data being changed while the data is not changed.\n+* Improve JSON plan comparison for explain verification. (:pr:`15198`).\n+* Add application-name config to override source passed in ClientInfo.\n+* Add support to fetch the list of queries to be verified by running a Presto query.\n+* Add support to run explain verification. (:pr:`15101`). This can be enabled by configuration property ``explain``.\n+\n+SPI Changes\n+_______________\n+* Add ``getIdentifier`` to ``ConnectorTableLayoutHandle``. Layout identifier is used in fragment result caching to construct canonical plan.\n+* Add ``getSplitIdentifier`` to ``ConnectorSplit``. Split identifier is used in fragment result caching to identify if splits are identical.\n+\n+Geospatial Changes\n+_______________\n+* Upgrade Esri to [2.2.4](https://github.com/Esri/geometry-api-java/releases/tag/v2.2.4).  This includes two fixes for bug (https://github.com/Esri/geometry-api-java/issues/266 and https://github.com/Esri/geometry-api-java/issues/247) that were seen in production.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c"}, "originalPosition": 52}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "715285b14bb213fb2e12f52f278bd7d2baa55c8c", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/715285b14bb213fb2e12f52f278bd7d2baa55c8c", "committedDate": "2020-10-07T06:54:36Z", "message": "Add release notes for 0.242"}, "afterCommit": {"oid": "ce667f5acee41ab611486422854d3ad6af9af292", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/ce667f5acee41ab611486422854d3ad6af9af292", "committedDate": "2020-10-08T00:22:01Z", "message": "Add release notes for 0.242"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce667f5acee41ab611486422854d3ad6af9af292", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/ce667f5acee41ab611486422854d3ad6af9af292", "committedDate": "2020-10-08T00:22:01Z", "message": "Add release notes for 0.242"}, "afterCommit": {"oid": "2ed68a63aff87ad7a512c505b5887b39e3cd708a", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/2ed68a63aff87ad7a512c505b5887b39e3cd708a", "committedDate": "2020-10-08T00:28:29Z", "message": "Add release notes for 0.242"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2ed68a63aff87ad7a512c505b5887b39e3cd708a", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/2ed68a63aff87ad7a512c505b5887b39e3cd708a", "committedDate": "2020-10-08T00:28:29Z", "message": "Add release notes for 0.242"}, "afterCommit": {"oid": "0ca8b3d21a4b83f0a4e092e87c8c087133ed884c", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/0ca8b3d21a4b83f0a4e092e87c8c087133ed884c", "committedDate": "2020-10-08T21:34:32Z", "message": "Add release notes for 0.242"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ca8b3d21a4b83f0a4e092e87c8c087133ed884c", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/0ca8b3d21a4b83f0a4e092e87c8c087133ed884c", "committedDate": "2020-10-08T21:34:32Z", "message": "Add release notes for 0.242"}, "afterCommit": {"oid": "1766971dc3c47611941ba152d87f49e04e54237c", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/1766971dc3c47611941ba152d87f49e04e54237c", "committedDate": "2020-10-09T06:34:47Z", "message": "Add release notes for 0.242"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MDQwMzMx", "url": "https://github.com/prestodb/presto/pull/15270#pullrequestreview-506040331", "createdAt": "2020-10-09T23:50:06Z", "commit": {"oid": "1766971dc3c47611941ba152d87f49e04e54237c"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMzo1MDowN1rOHfbTvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMzo1MTozMVrOHfbUmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxNTMyNQ==", "bodyText": "\".\" at the end?", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r502715325", "createdAt": "2020-10-09T23:50:07Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,60 @@\n+=============\n+Release 0.242\n+=============\n+\n+**Highlights**\n+==============\n+* Add configuration property ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add support for fragment result caching.\n+* Add support for partition versioning.\n+* Add support for caching HiveMetastore calls at a more granular level.\n+\n+General Changes\n+_______________\n+* Fix compiler error in ``LambdaBytecodeGenerator`` when common sub-expression optimization is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanently stucked queries when memory limit is exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add configuration property ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for fragment result caching. This can be enabled by ``fragment-result-cache.enabled`` and ``experimental.fragment-result-caching-enabled``", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1766971dc3c47611941ba152d87f49e04e54237c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxNTU0NA==", "bodyText": "Not a feedback to the release notes but I thought we normally use \"-\" rather than \"_\" in configs?", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r502715544", "createdAt": "2020-10-09T23:51:31Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,60 @@\n+=============\n+Release 0.242\n+=============\n+\n+**Highlights**\n+==============\n+* Add configuration property ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add support for fragment result caching.\n+* Add support for partition versioning.\n+* Add support for caching HiveMetastore calls at a more granular level.\n+\n+General Changes\n+_______________\n+* Fix compiler error in ``LambdaBytecodeGenerator`` when common sub-expression optimization is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanently stucked queries when memory limit is exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add configuration property ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for fragment result caching. This can be enabled by ``fragment-result-cache.enabled`` and ``experimental.fragment-result-caching-enabled``\n+\n+Hive Changes\n+____________\n+* Fix a bug where DWRF encryption would fail for large uncompressed column values.\n+* Fix a bug where non-Presto readers could not read encrypted DWRF files written by Presto if the encryption group listed columns out of order.\n+* Fix a performance regression for String field handling in GenericHiveRecordCursor when the SerDe does not provide an efficient Writable implementation.\n+* Improve split loading efficiency by only using as many threads as are required.\n+* Add support for file renaming for Hive connector. This can be enabled with the ``hive.file_renaming_enabled`` configuration property.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1766971dc3c47611941ba152d87f49e04e54237c"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1766971dc3c47611941ba152d87f49e04e54237c", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/1766971dc3c47611941ba152d87f49e04e54237c", "committedDate": "2020-10-09T06:34:47Z", "message": "Add release notes for 0.242"}, "afterCommit": {"oid": "767313a791eea2f0e36c2f4d0cea5f3f6fd275f7", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/767313a791eea2f0e36c2f4d0cea5f3f6fd275f7", "committedDate": "2020-10-09T23:56:57Z", "message": "Add release notes for 0.242"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MDQ0MTI1", "url": "https://github.com/prestodb/presto/pull/15270#pullrequestreview-506044125", "createdAt": "2020-10-10T00:13:47Z", "commit": {"oid": "767313a791eea2f0e36c2f4d0cea5f3f6fd275f7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwMDoxMzo0N1rOHfbiwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwMDoxODo0MlrOHfbloQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxOTE2OQ==", "bodyText": "@NikhilCollooru", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r502719169", "createdAt": "2020-10-10T00:13:47Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,60 @@\n+=============\n+Release 0.242\n+=============\n+\n+**Highlights**\n+==============\n+* Add configuration property ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add support for fragment result caching.\n+* Add support for partition versioning.\n+* Add support for caching HiveMetastore calls at a more granular level.\n+\n+General Changes\n+_______________\n+* Fix compiler error in ``LambdaBytecodeGenerator`` when common sub-expression optimization is enabled and multiple SQL functions contain lambda expressions.\n+* Fix possible permanently stucked queries when memory limit is exceeded during shuffle.\n+* Fix a bug where ``IS DISTINCT FROM NULL`` produces wrong results for columns with null values.\n+* Add configuration property ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add session property ``query_max_output_bytes`` and configuration property ``query.max-output-bytes`` to control how much data a query can output.\n+* Add support for fragment result caching. This can be enabled by ``fragment-result-cache.enabled`` and ``experimental.fragment-result-caching-enabled``\n+\n+Hive Changes\n+____________\n+* Fix a bug where DWRF encryption would fail for large uncompressed column values.\n+* Fix a bug where non-Presto readers could not read encrypted DWRF files written by Presto if the encryption group listed columns out of order.\n+* Fix a performance regression for String field handling in GenericHiveRecordCursor when the SerDe does not provide an efficient Writable implementation.\n+* Improve split loading efficiency by only using as many threads as are required.\n+* Add support for file renaming for Hive connector. This can be enabled with the ``hive.file_renaming_enabled`` configuration property.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxNTU0NA=="}, "originalCommit": {"oid": "1766971dc3c47611941ba152d87f49e04e54237c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxOTkwNQ==", "bodyText": "Add the section header for details above General Changed:\n**Details**\n===========\n\nGeneral Changes", "url": "https://github.com/prestodb/presto/pull/15270#discussion_r502719905", "createdAt": "2020-10-10T00:18:42Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.242.rst", "diffHunk": "@@ -0,0 +1,60 @@\n+=============\n+Release 0.242\n+=============\n+\n+**Highlights**\n+==============\n+* Add configuration property ``experimental.spiller.task-spilling-strategy`` for choosing different spilling strategy to use.\n+* Add support for fragment result caching.\n+* Add support for partition versioning.\n+* Add support for caching HiveMetastore calls at a more granular level.\n+\n+General Changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "767313a791eea2f0e36c2f4d0cea5f3f6fd275f7"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "767313a791eea2f0e36c2f4d0cea5f3f6fd275f7", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/767313a791eea2f0e36c2f4d0cea5f3f6fd275f7", "committedDate": "2020-10-09T23:56:57Z", "message": "Add release notes for 0.242"}, "afterCommit": {"oid": "0693cbc1002843e7b12cbc98cd85bafcc8e63484", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/0693cbc1002843e7b12cbc98cd85bafcc8e63484", "committedDate": "2020-10-10T00:24:00Z", "message": "Add release notes for 0.242"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0557975243ef2e7572272865a40960b0fea4e6a2", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/0557975243ef2e7572272865a40960b0fea4e6a2", "committedDate": "2020-10-10T00:25:25Z", "message": "Add release notes for 0.242"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0693cbc1002843e7b12cbc98cd85bafcc8e63484", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/0693cbc1002843e7b12cbc98cd85bafcc8e63484", "committedDate": "2020-10-10T00:24:00Z", "message": "Add release notes for 0.242"}, "afterCommit": {"oid": "0557975243ef2e7572272865a40960b0fea4e6a2", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/0557975243ef2e7572272865a40960b0fea4e6a2", "committedDate": "2020-10-10T00:25:25Z", "message": "Add release notes for 0.242"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4847, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}