{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MjM4ODMw", "number": 13979, "title": "Improve error message for the array_agg function", "bodyText": "When a single row in ArrayAggregationFunction exceeds the MAX_ARRAY_SIZE (aka INT_MAX - 8) we return an internal error to the customer from the Airlift precondition checks. This PR changes the behavior to return a USER_ERROR when an array's retained size crosses a large enough size (~1G) instead by actively checking for the size of the block being appended to.\nCurrently the limit check comes from here: https://github.com/airlift/slice/blob/master/src/main/java/io/airlift/slice/Slices.java#L40\n== NO RELEASE NOTE ==", "createdAt": "2020-01-17T17:11:42Z", "url": "https://github.com/prestodb/presto/pull/13979", "merged": true, "mergeCommit": {"oid": "c4878275a2bead060da509a183de46b310c99e08"}, "closed": true, "closedAt": "2020-01-27T18:27:03Z", "author": {"login": "sujay-jain"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8pZcWgFqTM0NjI0ODY2OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-frQIAFqTM0ODgxNzYzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MjQ4NjY5", "url": "https://github.com/prestodb/presto/pull/13979#pullrequestreview-346248669", "createdAt": "2020-01-21T22:54:40Z", "commit": {"oid": "4e1e3ad3cd43615bef269af93abfabca411a1f06"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMjo1NDo0MFrOFgLjAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMzowMzoyNFrOFgLvDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI4NzkzOQ==", "bodyText": "Do we need this new error code? Maybe just use EXCEEDED_FUNCTION_MEMORY_LIMIT. @wenleix what do you think?", "url": "https://github.com/prestodb/presto/pull/13979#discussion_r369287939", "createdAt": "2020-01-21T22:54:40Z", "author": {"login": "yingsu00"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/StandardErrorCode.java", "diffHunk": "@@ -63,6 +63,7 @@\n     QUERY_HAS_TOO_MANY_STAGES(0x0000_0028, USER_ERROR),\n     INVALID_SPATIAL_PARTITIONING(0x0000_0029, USER_ERROR),\n     INVALID_ANALYZE_PROPERTY(0x0000_002A, USER_ERROR),\n+    EXCEEDED_MAX_ARRAY_SIZE(0x0000_002B, USER_ERROR),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e1e3ad3cd43615bef269af93abfabca411a1f06"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI4OTUyNQ==", "bodyText": "nit: I don't see other places using () around the values in the output message. Remove the brackets.", "url": "https://github.com/prestodb/presto/pull/13979#discussion_r369289525", "createdAt": "2020-01-21T22:59:15Z", "author": {"login": "yingsu00"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/arrayagg/ArrayAggregationFunction.java", "diffHunk": "@@ -137,7 +141,13 @@ public static void output(Type elementType, ArrayAggregationState state, BlockBu\n         }\n         else {\n             BlockBuilder entryBuilder = out.beginBlockEntry();\n-            state.forEach((block, position) -> elementType.appendTo(block, position, entryBuilder));\n+            state.forEach((block, position) -> {\n+                if (entryBuilder.getRetainedSizeInBytes() > MAX_ARRAY_SIZE) {\n+                    throw new PrestoException(EXCEEDED_MAX_ARRAY_SIZE, format(\"Array size (%s) exceeds the maximum array size (%s)\", entryBuilder.getRetainedSizeInBytes(), MAX_ARRAY_SIZE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e1e3ad3cd43615bef269af93abfabca411a1f06"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5MTAyMg==", "bodyText": "Could you please run BenchmarkArrayAggregation with and without the change to see how much regression this size check introduces?", "url": "https://github.com/prestodb/presto/pull/13979#discussion_r369291022", "createdAt": "2020-01-21T23:03:24Z", "author": {"login": "yingsu00"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/arrayagg/ArrayAggregationFunction.java", "diffHunk": "@@ -137,7 +141,13 @@ public static void output(Type elementType, ArrayAggregationState state, BlockBu\n         }\n         else {\n             BlockBuilder entryBuilder = out.beginBlockEntry();\n-            state.forEach((block, position) -> elementType.appendTo(block, position, entryBuilder));\n+            state.forEach((block, position) -> {\n+                if (entryBuilder.getRetainedSizeInBytes() > MAX_ARRAY_SIZE) {\n+                    throw new PrestoException(EXCEEDED_MAX_ARRAY_SIZE, format(\"Array size (%s) exceeds the maximum array size (%s)\", entryBuilder.getRetainedSizeInBytes(), MAX_ARRAY_SIZE));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI4OTUyNQ=="}, "originalCommit": {"oid": "4e1e3ad3cd43615bef269af93abfabca411a1f06"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2Mzc5NjMz", "url": "https://github.com/prestodb/presto/pull/13979#pullrequestreview-346379633", "createdAt": "2020-01-22T07:08:33Z", "commit": {"oid": "4e1e3ad3cd43615bef269af93abfabca411a1f06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNzowODozM1rOFgSRGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNzowODozM1rOFgSRGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM5ODA0MQ==", "bodyText": "I think you might want to \"cut the line\" earlier. For example, if the current retained size is already MAX_ARRAY_SIZE - 10, and the next element has length 11 (thinking about ARRAY<VARCHAR>). You will still get cannot allocate Slice XXX error.\nI would say just define an constant like MAX_ENTRY_RETAINED_SIZE = 1_000_000_000 in this class.", "url": "https://github.com/prestodb/presto/pull/13979#discussion_r369398041", "createdAt": "2020-01-22T07:08:33Z", "author": {"login": "wenleix"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/arrayagg/ArrayAggregationFunction.java", "diffHunk": "@@ -137,7 +141,13 @@ public static void output(Type elementType, ArrayAggregationState state, BlockBu\n         }\n         else {\n             BlockBuilder entryBuilder = out.beginBlockEntry();\n-            state.forEach((block, position) -> elementType.appendTo(block, position, entryBuilder));\n+            state.forEach((block, position) -> {\n+                if (entryBuilder.getRetainedSizeInBytes() > MAX_ARRAY_SIZE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e1e3ad3cd43615bef269af93abfabca411a1f06"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4e1e3ad3cd43615bef269af93abfabca411a1f06", "author": {"user": {"login": "sujay-jain", "name": null}}, "url": "https://github.com/prestodb/presto/commit/4e1e3ad3cd43615bef269af93abfabca411a1f06", "committedDate": "2020-01-17T17:01:53Z", "message": "Throw UserError instead of InternalError when array aggregation exceeds max size"}, "afterCommit": {"oid": "d98d79508092abceb89c5254bf94a05fcecf2fbd", "author": {"user": {"login": "sujay-jain", "name": null}}, "url": "https://github.com/prestodb/presto/commit/d98d79508092abceb89c5254bf94a05fcecf2fbd", "committedDate": "2020-01-23T18:50:03Z", "message": "Improve error message for the array_agg function\n\nCurrently, array_agg throws a `GENERIC_INTERNAL_ERROR` when an array\nis too large. eg: \"Cannot allocate slice larger than 2147483639 bytes\"\nmessage is reported when the underlying data is stored in Slice.\nThis was confusing to users.\n\nThis commit throws `PrestoException` with\n`EXCEEDED_FUNCTION_MEMORY_LIMIT` error code\nwhen the retained size of a single array exceeds 1G."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MTY3MDkx", "url": "https://github.com/prestodb/presto/pull/13979#pullrequestreview-348167091", "createdAt": "2020-01-24T19:14:38Z", "commit": {"oid": "d98d79508092abceb89c5254bf94a05fcecf2fbd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d98d79508092abceb89c5254bf94a05fcecf2fbd", "author": {"user": {"login": "sujay-jain", "name": null}}, "url": "https://github.com/prestodb/presto/commit/d98d79508092abceb89c5254bf94a05fcecf2fbd", "committedDate": "2020-01-23T18:50:03Z", "message": "Improve error message for the array_agg function\n\nCurrently, array_agg throws a `GENERIC_INTERNAL_ERROR` when an array\nis too large. eg: \"Cannot allocate slice larger than 2147483639 bytes\"\nmessage is reported when the underlying data is stored in Slice.\nThis was confusing to users.\n\nThis commit throws `PrestoException` with\n`EXCEEDED_FUNCTION_MEMORY_LIMIT` error code\nwhen the retained size of a single array exceeds 1G."}, "afterCommit": {"oid": "1b17656ba6d53a0725a370687d6b5ff5f83b4f96", "author": {"user": {"login": "sujay-jain", "name": null}}, "url": "https://github.com/prestodb/presto/commit/1b17656ba6d53a0725a370687d6b5ff5f83b4f96", "committedDate": "2020-01-24T21:38:36Z", "message": "Improve error message for the array_agg function\n\nCurrently, array_agg throws a `GENERIC_INTERNAL_ERROR` when an array\nis too large. eg: \"Cannot allocate slice larger than 2147483639 bytes\"\nmessage is reported when the underlying data is stored in Slice.\nThis was confusing to users.\n\nThis commit throws `PrestoException` with\n`EXCEEDED_FUNCTION_MEMORY_LIMIT` error code\nwhen the retained size of a single array exceeds 1G."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4Mjg3MDA3", "url": "https://github.com/prestodb/presto/pull/13979#pullrequestreview-348287007", "createdAt": "2020-01-25T00:04:35Z", "commit": {"oid": "1b17656ba6d53a0725a370687d6b5ff5f83b4f96"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4Mjg5Mjgw", "url": "https://github.com/prestodb/presto/pull/13979#pullrequestreview-348289280", "createdAt": "2020-01-25T00:15:56Z", "commit": {"oid": "1b17656ba6d53a0725a370687d6b5ff5f83b4f96"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMDoxNTo1NlrOFhtkvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMDoxOTo1NVrOFhtnbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5NDAxMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final int MAX_ENTRY_RETAINED_SIZE = 1_000_000_000;\n          \n          \n            \n                private static final int MAX_ENTRY_RETAINED_SIZE_IN_BYTES = 1_000_000_000;", "url": "https://github.com/prestodb/presto/pull/13979#discussion_r370894013", "createdAt": "2020-01-25T00:15:56Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/arrayagg/ArrayAggregationFunction.java", "diffHunk": "@@ -41,16 +42,19 @@\n import static com.facebook.presto.operator.aggregation.AggregationMetadata.ParameterMetadata.ParameterType.NULLABLE_BLOCK_INPUT_CHANNEL;\n import static com.facebook.presto.operator.aggregation.AggregationMetadata.ParameterMetadata.ParameterType.STATE;\n import static com.facebook.presto.operator.aggregation.AggregationUtils.generateAggregationName;\n+import static com.facebook.presto.spi.StandardErrorCode.CELL_TOO_LARGE;\n import static com.facebook.presto.spi.function.Signature.typeVariable;\n import static com.facebook.presto.spi.type.TypeSignature.parseTypeSignature;\n import static com.facebook.presto.util.Reflection.methodHandle;\n import static com.google.common.collect.ImmutableList.toImmutableList;\n+import static java.lang.String.format;\n import static java.util.Objects.requireNonNull;\n \n public class ArrayAggregationFunction\n         extends SqlAggregationFunction\n {\n     private static final String NAME = \"array_agg\";\n+    private static final int MAX_ENTRY_RETAINED_SIZE = 1_000_000_000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b17656ba6d53a0725a370687d6b5ff5f83b4f96"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5NDcwMg==", "bodyText": "Maybe consider using DataSize in format string so we can use the nice toString which includes units?", "url": "https://github.com/prestodb/presto/pull/13979#discussion_r370894702", "createdAt": "2020-01-25T00:19:55Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/arrayagg/ArrayAggregationFunction.java", "diffHunk": "@@ -137,7 +141,13 @@ public static void output(Type elementType, ArrayAggregationState state, BlockBu\n         }\n         else {\n             BlockBuilder entryBuilder = out.beginBlockEntry();\n-            state.forEach((block, position) -> elementType.appendTo(block, position, entryBuilder));\n+            state.forEach((block, position) -> {\n+                elementType.appendTo(block, position, entryBuilder);\n+\n+                if (entryBuilder.getRetainedSizeInBytes() > MAX_ENTRY_RETAINED_SIZE) {\n+                    throw new PrestoException(CELL_TOO_LARGE, format(\"Array size %s exceeds the maximum supported array size %s\", entryBuilder.getRetainedSizeInBytes(), MAX_ENTRY_RETAINED_SIZE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b17656ba6d53a0725a370687d6b5ff5f83b4f96"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzYwNDkw", "url": "https://github.com/prestodb/presto/pull/13979#pullrequestreview-348360490", "createdAt": "2020-01-26T06:14:30Z", "commit": {"oid": "1b17656ba6d53a0725a370687d6b5ff5f83b4f96"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwNjoxNDozMFrOFhyluA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwNjoxNDozMFrOFhyluA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3NjE4NA==", "bodyText": "MAX_ENTRY_RETAINED_SIZE_IN_BYTES = new DataSize(1, GIGABYTE).toBytes", "url": "https://github.com/prestodb/presto/pull/13979#discussion_r370976184", "createdAt": "2020-01-26T06:14:30Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/arrayagg/ArrayAggregationFunction.java", "diffHunk": "@@ -41,16 +42,19 @@\n import static com.facebook.presto.operator.aggregation.AggregationMetadata.ParameterMetadata.ParameterType.NULLABLE_BLOCK_INPUT_CHANNEL;\n import static com.facebook.presto.operator.aggregation.AggregationMetadata.ParameterMetadata.ParameterType.STATE;\n import static com.facebook.presto.operator.aggregation.AggregationUtils.generateAggregationName;\n+import static com.facebook.presto.spi.StandardErrorCode.CELL_TOO_LARGE;\n import static com.facebook.presto.spi.function.Signature.typeVariable;\n import static com.facebook.presto.spi.type.TypeSignature.parseTypeSignature;\n import static com.facebook.presto.util.Reflection.methodHandle;\n import static com.google.common.collect.ImmutableList.toImmutableList;\n+import static java.lang.String.format;\n import static java.util.Objects.requireNonNull;\n \n public class ArrayAggregationFunction\n         extends SqlAggregationFunction\n {\n     private static final String NAME = \"array_agg\";\n+    private static final int MAX_ENTRY_RETAINED_SIZE = 1_000_000_000;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5NDAxMw=="}, "originalCommit": {"oid": "1b17656ba6d53a0725a370687d6b5ff5f83b4f96"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a79ed41ca8545559b73c9571f0a4ab7d582d1a43", "author": {"user": {"login": "sujay-jain", "name": null}}, "url": "https://github.com/prestodb/presto/commit/a79ed41ca8545559b73c9571f0a4ab7d582d1a43", "committedDate": "2020-01-26T20:32:44Z", "message": "Improve error message for the array_agg function\n\nCurrently, array_agg throws a `GENERIC_INTERNAL_ERROR` when an array\nis too large. eg: \"Cannot allocate slice larger than 2147483639 bytes\"\nmessage is reported when the underlying data is stored in Slice.\nThis was confusing to users.\n\nThis commit throws `PrestoException` with\n`CELL_TOO_LARGE` error code\nwhen the retained size of a single array exceeds 1G."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b17656ba6d53a0725a370687d6b5ff5f83b4f96", "author": {"user": {"login": "sujay-jain", "name": null}}, "url": "https://github.com/prestodb/presto/commit/1b17656ba6d53a0725a370687d6b5ff5f83b4f96", "committedDate": "2020-01-24T21:38:36Z", "message": "Improve error message for the array_agg function\n\nCurrently, array_agg throws a `GENERIC_INTERNAL_ERROR` when an array\nis too large. eg: \"Cannot allocate slice larger than 2147483639 bytes\"\nmessage is reported when the underlying data is stored in Slice.\nThis was confusing to users.\n\nThis commit throws `PrestoException` with\n`EXCEEDED_FUNCTION_MEMORY_LIMIT` error code\nwhen the retained size of a single array exceeds 1G."}, "afterCommit": {"oid": "a79ed41ca8545559b73c9571f0a4ab7d582d1a43", "author": {"user": {"login": "sujay-jain", "name": null}}, "url": "https://github.com/prestodb/presto/commit/a79ed41ca8545559b73c9571f0a4ab7d582d1a43", "committedDate": "2020-01-26T20:32:44Z", "message": "Improve error message for the array_agg function\n\nCurrently, array_agg throws a `GENERIC_INTERNAL_ERROR` when an array\nis too large. eg: \"Cannot allocate slice larger than 2147483639 bytes\"\nmessage is reported when the underlying data is stored in Slice.\nThis was confusing to users.\n\nThis commit throws `PrestoException` with\n`CELL_TOO_LARGE` error code\nwhen the retained size of a single array exceeds 1G."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4ODE3NjMz", "url": "https://github.com/prestodb/presto/pull/13979#pullrequestreview-348817633", "createdAt": "2020-01-27T16:52:32Z", "commit": {"oid": "a79ed41ca8545559b73c9571f0a4ab7d582d1a43"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2434, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}