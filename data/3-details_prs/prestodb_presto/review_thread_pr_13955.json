{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjc1NDY0", "number": 13955, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMjo0NjoxOVrODXuBDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMjo0NzoxMlrODXuBgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTk3NzczOnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/com/facebook/presto/sql/planner/iterative/rule/TestReorderJoins.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMjo0NjoxOVrOFdK0IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMjo0NjoxOVrOFdK0IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEzMDIwOA==", "bodyText": "Use left and right", "url": "https://github.com/prestodb/presto/pull/13955#discussion_r366130208", "createdAt": "2020-01-14T02:46:19Z", "author": {"login": "highker"}, "path": "presto-main/src/test/java/com/facebook/presto/sql/planner/iterative/rule/TestReorderJoins.java", "diffHunk": "@@ -495,6 +502,11 @@ public void testReplicatesWhenNotRestricted()\n \n     private RuleAssert assertReorderJoins()\n     {\n-        return tester.assertThat(new ReorderJoins(new CostComparator(1, 1, 1)));\n+        return tester.assertThat(new ReorderJoins(new CostComparator(1, 1, 1), tester.getMetadata()));\n+    }\n+\n+    private RowExpression comparisonRowExpression(OperatorType type, RowExpression arg1, RowExpression arg2)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ef07e29575910b1f4f0288ca05dcba977b956e1"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTk3ODg4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/com/facebook/presto/sql/planner/iterative/rule/TestReorderJoins.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMjo0NzoxMlrOFdK0zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMjo0NzoxMlrOFdK0zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEzMDM4Mg==", "bodyText": "Use Expressions.variable. Same for other places.", "url": "https://github.com/prestodb/presto/pull/13955#discussion_r366130382", "createdAt": "2020-01-14T02:47:12Z", "author": {"login": "highker"}, "path": "presto-main/src/test/java/com/facebook/presto/sql/planner/iterative/rule/TestReorderJoins.java", "diffHunk": "@@ -397,7 +404,7 @@ public void testSmallerJoinFirst()\n                                 ImmutableList.of(\n                                         new EquiJoinClause(p.variable(\"B2\"), p.variable(\"C1\"))),\n                                 ImmutableList.of(p.variable(\"A1\")),\n-                                Optional.of(castToRowExpression(new ComparisonExpression(EQUAL, new SymbolReference(\"A1\"), new SymbolReference(\"B1\"))))))\n+                                Optional.of(comparisonRowExpression(EQUAL, new VariableReferenceExpression(\"A1\", BIGINT), new VariableReferenceExpression(\"B1\", BIGINT)))))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ef07e29575910b1f4f0288ca05dcba977b956e1"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2156, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}