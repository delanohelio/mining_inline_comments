{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1Nzk2MjA4", "number": 15256, "title": "Add thrift serde support for TaskStatus", "bodyText": "depended by facebookexternal/presto-facebook#1231\nAdd thrift serde support for TaskStatus.\nAdded Drift annotations to TaskStatus and related classes to support thrift serde.\nTest plan - Unit tests\nVerifier tests : https://www.internalfb.com/intern/presto/verifier/results/?test_id=46590\n== NO RELEASE NOTE ==", "createdAt": "2020-09-30T21:21:51Z", "url": "https://github.com/prestodb/presto/pull/15256", "merged": true, "mergeCommit": {"oid": "57a1b204f542344f1607e478744100fa78dd1138"}, "closed": true, "closedAt": "2020-10-14T03:06:16Z", "author": {"login": "ajaygeorge"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdODt5GgBqjM4MjY1NDAyNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSUSbTAFqTUwNzk2MjE5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7440ebd76f10e78d7bd29cdc513e1e20458b4839", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/7440ebd76f10e78d7bd29cdc513e1e20458b4839", "committedDate": "2020-09-30T21:21:02Z", "message": "Add thrift support for TaskStatus serde"}, "afterCommit": {"oid": "0b6097d5eb1fb2092803bbf5c38f1e3fca0a7a95", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/0b6097d5eb1fb2092803bbf5c38f1e3fca0a7a95", "committedDate": "2020-09-30T21:31:48Z", "message": "Add thrift support for TaskStatus serde"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b6097d5eb1fb2092803bbf5c38f1e3fca0a7a95", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/0b6097d5eb1fb2092803bbf5c38f1e3fca0a7a95", "committedDate": "2020-09-30T21:31:48Z", "message": "Add thrift support for TaskStatus serde"}, "afterCommit": {"oid": "1b8765bd9aed72d967793d6d7495c2e699568b9b", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/1b8765bd9aed72d967793d6d7495c2e699568b9b", "committedDate": "2020-09-30T21:34:48Z", "message": "Add thrift serde support for TaskStatus"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5ODQ2OTQw", "url": "https://github.com/prestodb/presto/pull/15256#pullrequestreview-499846940", "createdAt": "2020-09-30T22:08:33Z", "commit": {"oid": "1b8765bd9aed72d967793d6d7495c2e699568b9b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMjowODozM1rOHaxDwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMjowODozM1rOHaxDwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgyODgwMg==", "bodyText": "Had to make this a public constructor since drift did not have support for factory methods like Jackson (We can add in something if there are more use cases that require this). At present drift only supports constructors and Builder method . Let me know if there is a better way.", "url": "https://github.com/prestodb/presto/pull/15256#discussion_r497828802", "createdAt": "2020-09-30T22:08:33Z", "author": {"login": "ajaygeorge"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/HostAddress.java", "diffHunk": "@@ -73,7 +77,8 @@\n      */\n     private final int port;\n \n-    private HostAddress(String host, int port)\n+    @ThriftConstructor\n+    public HostAddress(String host, int port)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b8765bd9aed72d967793d6d7495c2e699568b9b"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b8765bd9aed72d967793d6d7495c2e699568b9b", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/1b8765bd9aed72d967793d6d7495c2e699568b9b", "committedDate": "2020-09-30T21:34:48Z", "message": "Add thrift serde support for TaskStatus"}, "afterCommit": {"oid": "3fcdbc67fee0c055292a10c2d98a77423ea6160b", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/3fcdbc67fee0c055292a10c2d98a77423ea6160b", "committedDate": "2020-09-30T22:10:02Z", "message": "Add thrift serde support for TaskStatus\n\nAdded Drift annotations to TaskStatus and related classes\nto support thrift serde."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5ODQ3OTMx", "url": "https://github.com/prestodb/presto/pull/15256#pullrequestreview-499847931", "createdAt": "2020-09-30T22:10:42Z", "commit": {"oid": "1b8765bd9aed72d967793d6d7495c2e699568b9b"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMjoxMDo1NVrOHaxHVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMjoxNTowM1rOHaxNdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgyOTcxNg==", "bodyText": "We'll need to get concrete versions of these before merge.", "url": "https://github.com/prestodb/presto/pull/15256#discussion_r497829716", "createdAt": "2020-09-30T22:10:55Z", "author": {"login": "tdcmeehan"}, "path": "pom.xml", "diffHunk": "@@ -45,15 +45,15 @@\n         <air.maven.version>3.3.9</air.maven.version>\n \n         <dep.antlr.version>4.7.1</dep.antlr.version>\n-        <dep.airlift.version>0.194</dep.airlift.version>\n+        <dep.airlift.version>0.195-SNAPSHOT</dep.airlift.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fcdbc67fee0c055292a10c2d98a77423ea6160b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgyOTg2OQ==", "bodyText": "Can you move this up (so it's not next to the test dependencies)?", "url": "https://github.com/prestodb/presto/pull/15256#discussion_r497829869", "createdAt": "2020-09-30T22:11:18Z", "author": {"login": "tdcmeehan"}, "path": "presto-client/pom.xml", "diffHunk": "@@ -87,5 +87,9 @@\n             <artifactId>testng</artifactId>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fcdbc67fee0c055292a10c2d98a77423ea6160b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgzMDEyOQ==", "bodyText": "isRecursive = TRUE -- Cool!  Did not know of this trick.", "url": "https://github.com/prestodb/presto/pull/15256#discussion_r497830129", "createdAt": "2020-09-30T22:12:04Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/ExecutionFailureInfo.java", "diffHunk": "@@ -72,53 +79,61 @@ public ExecutionFailureInfo(\n     }\n \n     @JsonProperty\n+    @ThriftField(1)\n     public String getType()\n     {\n         return type;\n     }\n \n     @Nullable\n     @JsonProperty\n+    @ThriftField(2)\n     public String getMessage()\n     {\n         return message;\n     }\n \n     @Nullable\n     @JsonProperty\n+    @ThriftField(value = 3, isRecursive = TRUE, requiredness = OPTIONAL)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fcdbc67fee0c055292a10c2d98a77423ea6160b"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgzMDkxMw==", "bodyText": "While we're doing this exercise, it would be nice not have to do String parsing for these values.  Did you consider an alternate constructor, perhaps that takes in a boolean with OptionalInt, and validates that when it's not grouped it's empty, and when it's grouped it's not empty?", "url": "https://github.com/prestodb/presto/pull/15256#discussion_r497830913", "createdAt": "2020-09-30T22:14:05Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/Lifespan.java", "diffHunk": "@@ -67,7 +71,22 @@ public static Lifespan jsonCreator(String value)\n         return Lifespan.driverGroup(parseInt(value.substring(\"Group\".length())));\n     }\n \n+    @ThriftConstructor", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fcdbc67fee0c055292a10c2d98a77423ea6160b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgzMTI4Nw==", "bodyText": "I would add a comment saying that the order needs to be backwards compatible, because in theory the TaskState could be persisted.", "url": "https://github.com/prestodb/presto/pull/15256#discussion_r497831287", "createdAt": "2020-09-30T22:15:03Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/TaskState.java", "diffHunk": "@@ -13,11 +13,15 @@\n  */\n package com.facebook.presto.execution;\n \n+import com.facebook.drift.annotations.ThriftEnum;\n+import com.facebook.drift.annotations.ThriftEnumValue;\n+\n import java.util.Set;\n import java.util.stream.Stream;\n \n import static com.google.common.collect.ImmutableSet.toImmutableSet;\n \n+@ThriftEnum\n public enum TaskState", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fcdbc67fee0c055292a10c2d98a77423ea6160b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5ODUxMjI4", "url": "https://github.com/prestodb/presto/pull/15256#pullrequestreview-499851228", "createdAt": "2020-09-30T22:18:05Z", "commit": {"oid": "3fcdbc67fee0c055292a10c2d98a77423ea6160b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMjoxODowNVrOHaxR3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMjoxODo0MVrOHaxSqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgzMjQxMg==", "bodyText": "Move this up please.", "url": "https://github.com/prestodb/presto/pull/15256#discussion_r497832412", "createdAt": "2020-09-30T22:18:05Z", "author": {"login": "tdcmeehan"}, "path": "presto-spi/pom.xml", "diffHunk": "@@ -115,5 +115,9 @@\n             <artifactId>assertj-core</artifactId>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fcdbc67fee0c055292a10c2d98a77423ea6160b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgzMjU5OQ==", "bodyText": "Similar here--please comment saying that the ordinal needs to be backwards compatible.", "url": "https://github.com/prestodb/presto/pull/15256#discussion_r497832599", "createdAt": "2020-09-30T22:18:36Z", "author": {"login": "tdcmeehan"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/ErrorType.java", "diffHunk": "@@ -13,10 +13,20 @@\n  */\n package com.facebook.presto.spi;\n \n+import com.facebook.drift.annotations.ThriftEnum;\n+import com.facebook.drift.annotations.ThriftEnumValue;\n+\n+@ThriftEnum", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fcdbc67fee0c055292a10c2d98a77423ea6160b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgzMjYxOQ==", "bodyText": "I think it's fine.", "url": "https://github.com/prestodb/presto/pull/15256#discussion_r497832619", "createdAt": "2020-09-30T22:18:41Z", "author": {"login": "tdcmeehan"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/HostAddress.java", "diffHunk": "@@ -73,7 +77,8 @@\n      */\n     private final int port;\n \n-    private HostAddress(String host, int port)\n+    @ThriftConstructor\n+    public HostAddress(String host, int port)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgyODgwMg=="}, "originalCommit": {"oid": "1b8765bd9aed72d967793d6d7495c2e699568b9b"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3fcdbc67fee0c055292a10c2d98a77423ea6160b", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/3fcdbc67fee0c055292a10c2d98a77423ea6160b", "committedDate": "2020-09-30T22:10:02Z", "message": "Add thrift serde support for TaskStatus\n\nAdded Drift annotations to TaskStatus and related classes\nto support thrift serde."}, "afterCommit": {"oid": "bc8bddee5e7d0daeeb3d3a25e04bda3a3e1a73e6", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/bc8bddee5e7d0daeeb3d3a25e04bda3a3e1a73e6", "committedDate": "2020-10-01T04:42:33Z", "message": "Add thrift serde support for TaskStatus\n\nAdded Drift annotations to TaskStatus and related classes\nto support thrift serde."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc8bddee5e7d0daeeb3d3a25e04bda3a3e1a73e6", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/bc8bddee5e7d0daeeb3d3a25e04bda3a3e1a73e6", "committedDate": "2020-10-01T04:42:33Z", "message": "Add thrift serde support for TaskStatus\n\nAdded Drift annotations to TaskStatus and related classes\nto support thrift serde."}, "afterCommit": {"oid": "bf32528d0cb1a0ae57263a52d360144d6b36223d", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/bf32528d0cb1a0ae57263a52d360144d6b36223d", "committedDate": "2020-10-02T19:37:21Z", "message": "Add thrift serde support for TaskStatus\n\nAdded Drift annotations to TaskStatus and related classes\nto support thrift serde."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MTI3OTQw", "url": "https://github.com/prestodb/presto/pull/15256#pullrequestreview-504127940", "createdAt": "2020-10-07T17:52:27Z", "commit": {"oid": "bf32528d0cb1a0ae57263a52d360144d6b36223d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNzo1MjoyN1rOHd-6vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNzo1MjoyN1rOHd-6vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIwMTU5Nw==", "bodyText": "Are we sure about covering the case when ExecutionFailureInfo is recursive?", "url": "https://github.com/prestodb/presto/pull/15256#discussion_r501201597", "createdAt": "2020-10-07T17:52:27Z", "author": {"login": "cemcayiroglu"}, "path": "presto-main/src/test/java/com/facebook/presto/execution/TestThriftTaskStatus.java", "diffHunk": "@@ -0,0 +1,209 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.execution;\n+\n+import com.facebook.drift.codec.ThriftCodec;\n+import com.facebook.drift.codec.ThriftCodecManager;\n+import com.facebook.drift.codec.internal.compiler.CompilerThriftCodecFactory;\n+import com.facebook.drift.codec.internal.reflection.ReflectionThriftCodecFactory;\n+import com.facebook.drift.protocol.TBinaryProtocol;\n+import com.facebook.drift.protocol.TCompactProtocol;\n+import com.facebook.drift.protocol.TFacebookCompactProtocol;\n+import com.facebook.drift.protocol.TMemoryBuffer;\n+import com.facebook.drift.protocol.TProtocol;\n+import com.facebook.drift.protocol.TTransport;\n+import com.facebook.presto.spi.HostAddress;\n+import com.facebook.presto.spi.PrestoException;\n+import com.facebook.presto.spi.PrestoTransportException;\n+import com.facebook.presto.sql.parser.ParsingException;\n+import com.facebook.presto.sql.tree.NodeLocation;\n+import com.facebook.presto.util.Failures;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.function.Function;\n+\n+import static com.facebook.presto.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n+import static com.facebook.presto.spi.StandardErrorCode.REMOTE_TASK_ERROR;\n+import static com.facebook.presto.spi.StandardErrorCode.SYNTAX_ERROR;\n+import static com.facebook.presto.spi.StandardErrorCode.TOO_MANY_REQUESTS_FAILED;\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestThriftTaskStatus\n+{\n+    private static final ThriftCodecManager COMPILER_READ_CODEC_MANAGER = new ThriftCodecManager(new CompilerThriftCodecFactory(false));\n+    private static final ThriftCodecManager COMPILER_WRITE_CODEC_MANAGER = new ThriftCodecManager(new CompilerThriftCodecFactory(false));\n+    private static final ThriftCodec<TaskStatus> COMPILER_READ_CODEC = COMPILER_READ_CODEC_MANAGER.getCodec(TaskStatus.class);\n+    private static final ThriftCodec<TaskStatus> COMPILER_WRITE_CODEC = COMPILER_WRITE_CODEC_MANAGER.getCodec(TaskStatus.class);\n+    private static final ThriftCodecManager REFLECTION_READ_CODEC_MANAGER = new ThriftCodecManager(new ReflectionThriftCodecFactory());\n+    private static final ThriftCodecManager REFLECTION_WRITE_CODEC_MANAGER = new ThriftCodecManager(new ReflectionThriftCodecFactory());\n+    private static final ThriftCodec<TaskStatus> REFLECTION_READ_CODEC = REFLECTION_READ_CODEC_MANAGER.getCodec(TaskStatus.class);\n+    private static final ThriftCodec<TaskStatus> REFLECTION_WRITE_CODEC = REFLECTION_WRITE_CODEC_MANAGER.getCodec(TaskStatus.class);\n+    private static final TMemoryBuffer transport = new TMemoryBuffer(100 * 1024);\n+    public static final long TASK_INSTANCE_ID_LEAST_SIGNIFICANT_BITS = 123L;\n+    public static final long TASK_INSTANCE_ID_MOST_SIGNIFICANT_BITS = 456L;\n+    public static final long VERSION = 789L;\n+    public static final TaskState RUNNING = TaskState.RUNNING;\n+    public static final URI SELF_URI = java.net.URI.create(\"fake://task/\" + \"1\");\n+    public static final Set<Lifespan> LIFESPANS = ImmutableSet.of(Lifespan.taskWide(), Lifespan.taskWide());\n+    public static final int QUEUED_PARTITIONED_DRIVERS = 100;\n+    public static final int RUNNING_PARTITIONED_DRIVERS = 200;\n+    public static final double OUTPUT_BUFFER_UTILIZATION = 99.9;\n+    public static final boolean OUTPUT_BUFFER_OVERUTILIZED = true;\n+    public static final int PHYSICAL_WRITTEN_DATA_SIZE_IN_BYTES = 1024 * 1024;\n+    public static final int MEMORY_RESERVATION_IN_BYTES = 1024 * 1024 * 1024;\n+    public static final int SYSTEM_MEMORY_RESERVATION_IN_BYTES = 2 * 1024 * 1024 * 1024;\n+    public static final int FULL_GC_COUNT = 10;\n+    public static final int FULL_GC_TIME_IN_MILLIS = 1001;\n+    public static final HostAddress REMOTE_HOST = HostAddress.fromParts(\"www.fake.invalid\", 8080);\n+    private TaskStatus taskStatus;\n+\n+    @BeforeMethod\n+    public void setUp()\n+    {\n+        taskStatus = getTaskStatus();\n+    }\n+\n+    @DataProvider\n+    public Object[][] codecCombinations()\n+    {\n+        return new Object[][] {\n+                {COMPILER_READ_CODEC, COMPILER_WRITE_CODEC},\n+                {COMPILER_READ_CODEC, REFLECTION_WRITE_CODEC},\n+                {REFLECTION_READ_CODEC, COMPILER_WRITE_CODEC},\n+                {REFLECTION_READ_CODEC, REFLECTION_WRITE_CODEC}\n+        };\n+    }\n+\n+    @Test(dataProvider = \"codecCombinations\")\n+    public void testRoundTripSerializeBinaryProtocol(ThriftCodec<TaskStatus> readCodec, ThriftCodec<TaskStatus> writeCodec)\n+            throws Exception\n+    {\n+        TaskStatus taskStatus = getRoundTripSerialize(readCodec, writeCodec, TBinaryProtocol::new);\n+        assertSerde(taskStatus);\n+    }\n+\n+    @Test(dataProvider = \"codecCombinations\")\n+    public void testRoundTripSerializeTCompactProtocol(ThriftCodec<TaskStatus> readCodec, ThriftCodec<TaskStatus> writeCodec)\n+            throws Exception\n+    {\n+        TaskStatus taskStatus = getRoundTripSerialize(readCodec, writeCodec, TCompactProtocol::new);\n+        assertSerde(taskStatus);\n+    }\n+\n+    @Test(dataProvider = \"codecCombinations\")\n+    public void testRoundTripSerializeTFacebookCompactProtocol(ThriftCodec<TaskStatus> readCodec, ThriftCodec<TaskStatus> writeCodec)\n+            throws Exception\n+    {\n+        TaskStatus taskStatus = getRoundTripSerialize(readCodec, writeCodec, TFacebookCompactProtocol::new);\n+        assertSerde(taskStatus);\n+    }\n+\n+    private void assertSerde(TaskStatus taskStatus)\n+    {\n+        assertEquals(taskStatus.getTaskInstanceIdLeastSignificantBits(), 123L);\n+        assertEquals(taskStatus.getTaskInstanceIdMostSignificantBits(), 456L);\n+        assertEquals(taskStatus.getVersion(), 789L);\n+        assertEquals(taskStatus.getState(), TaskState.RUNNING);\n+        assertEquals(taskStatus.getSelf(), SELF_URI);\n+        assertEquals(taskStatus.getCompletedDriverGroups(), LIFESPANS);\n+        assertEquals(taskStatus.getQueuedPartitionedDrivers(), QUEUED_PARTITIONED_DRIVERS);\n+        assertEquals(taskStatus.getRunningPartitionedDrivers(), RUNNING_PARTITIONED_DRIVERS);\n+        assertEquals(taskStatus.getOutputBufferUtilization(), OUTPUT_BUFFER_UTILIZATION);\n+        assertEquals(taskStatus.isOutputBufferOverutilized(), OUTPUT_BUFFER_OVERUTILIZED);\n+        assertEquals(taskStatus.getPhysicalWrittenDataSizeInBytes(), PHYSICAL_WRITTEN_DATA_SIZE_IN_BYTES);\n+        assertEquals(taskStatus.getSystemMemoryReservationInBytes(), SYSTEM_MEMORY_RESERVATION_IN_BYTES);\n+        assertEquals(taskStatus.getFullGcCount(), FULL_GC_COUNT);\n+        assertEquals(taskStatus.getFullGcTimeInMillis(), FULL_GC_TIME_IN_MILLIS);\n+\n+        List<ExecutionFailureInfo> failures = taskStatus.getFailures();\n+        assertEquals(failures.size(), 3);\n+\n+        ExecutionFailureInfo firstFailure = failures.get(0);\n+        assertEquals(firstFailure.getType(), IOException.class.getName());\n+        assertEquals(firstFailure.getMessage(), \"Remote call timed out\");\n+        assertEquals(firstFailure.getErrorCode(), GENERIC_INTERNAL_ERROR.toErrorCode());\n+        List<ExecutionFailureInfo> suppressedFailures = firstFailure.getSuppressed();\n+        assertEquals(suppressedFailures.size(), 1);\n+        ExecutionFailureInfo suppressedFailure = suppressedFailures.get(0);\n+        assertEquals(suppressedFailure.getType(), IOException.class.getName());\n+        assertEquals(suppressedFailure.getMessage(), \"Thrift call timed out\");\n+        assertEquals(suppressedFailure.getErrorCode(), GENERIC_INTERNAL_ERROR.toErrorCode());\n+\n+        ExecutionFailureInfo secondFailure = failures.get(1);\n+        assertEquals(secondFailure.getType(), PrestoTransportException.class.getName());\n+        assertEquals(secondFailure.getMessage(), \"Too many requests failed\");\n+        assertEquals(secondFailure.getRemoteHost(), REMOTE_HOST);\n+        assertEquals(secondFailure.getErrorCode(), TOO_MANY_REQUESTS_FAILED.toErrorCode());\n+        ExecutionFailureInfo cause = secondFailure.getCause();\n+        assertEquals(cause.getType(), PrestoException.class.getName());\n+        assertEquals(cause.getMessage(), \"Remote Task Error\");\n+        assertEquals(cause.getErrorCode(), REMOTE_TASK_ERROR.toErrorCode());\n+\n+        ExecutionFailureInfo thirdFailure = failures.get(2);\n+        assertEquals(thirdFailure.getType(), ParsingException.class.getName());\n+        assertEquals(thirdFailure.getErrorCode(), SYNTAX_ERROR.toErrorCode());\n+        assertEquals(thirdFailure.getErrorLocation().getLineNumber(), 100);\n+        assertEquals(thirdFailure.getErrorLocation().getColumnNumber(), 3);\n+    }\n+\n+    private TaskStatus getRoundTripSerialize(ThriftCodec<TaskStatus> readCodec, ThriftCodec<TaskStatus> writeCodec, Function<TTransport, TProtocol> protocolFactory)\n+            throws Exception\n+    {\n+        TProtocol protocol = protocolFactory.apply(transport);\n+        writeCodec.write(taskStatus, protocol);\n+        return readCodec.read(protocol);\n+    }\n+\n+    private TaskStatus getTaskStatus()\n+    {\n+        List<ExecutionFailureInfo> executionFailureInfos = getExecutionFailureInfos();\n+        return new TaskStatus(\n+                TASK_INSTANCE_ID_LEAST_SIGNIFICANT_BITS,\n+                TASK_INSTANCE_ID_MOST_SIGNIFICANT_BITS,\n+                VERSION,\n+                RUNNING,\n+                SELF_URI,\n+                LIFESPANS,\n+                executionFailureInfos,\n+                QUEUED_PARTITIONED_DRIVERS,\n+                RUNNING_PARTITIONED_DRIVERS,\n+                OUTPUT_BUFFER_UTILIZATION,\n+                OUTPUT_BUFFER_OVERUTILIZED,\n+                PHYSICAL_WRITTEN_DATA_SIZE_IN_BYTES,\n+                MEMORY_RESERVATION_IN_BYTES,\n+                SYSTEM_MEMORY_RESERVATION_IN_BYTES,\n+                FULL_GC_COUNT,\n+                FULL_GC_TIME_IN_MILLIS);\n+    }\n+\n+    private List<ExecutionFailureInfo> getExecutionFailureInfos()\n+    {\n+        IOException ioException = new IOException(\"Remote call timed out\");\n+        ioException.addSuppressed(new IOException(\"Thrift call timed out\"));\n+        PrestoTransportException prestoTransportException = new PrestoTransportException(TOO_MANY_REQUESTS_FAILED,\n+                REMOTE_HOST,\n+                \"Too many requests failed\",\n+                new PrestoException(REMOTE_TASK_ERROR, \"Remote Task Error\"));\n+        ParsingException parsingException = new ParsingException(\"Parsing Exception\", new NodeLocation(100, 1));\n+        return Failures.toFailures(ImmutableList.of(ioException, prestoTransportException, parsingException));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf32528d0cb1a0ae57263a52d360144d6b36223d"}, "originalPosition": 207}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MTI4MjA2", "url": "https://github.com/prestodb/presto/pull/15256#pullrequestreview-504128206", "createdAt": "2020-10-07T17:52:47Z", "commit": {"oid": "bf32528d0cb1a0ae57263a52d360144d6b36223d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bf32528d0cb1a0ae57263a52d360144d6b36223d", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/bf32528d0cb1a0ae57263a52d360144d6b36223d", "committedDate": "2020-10-02T19:37:21Z", "message": "Add thrift serde support for TaskStatus\n\nAdded Drift annotations to TaskStatus and related classes\nto support thrift serde."}, "afterCommit": {"oid": "197c00e7d41279291c70ee5f7ad38bbec372ca9f", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/197c00e7d41279291c70ee5f7ad38bbec372ca9f", "committedDate": "2020-10-09T00:43:11Z", "message": "Add thrift serde support for TaskStatus\n\nAdded Drift annotations to TaskStatus and related classes\nto support thrift serde."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "197c00e7d41279291c70ee5f7ad38bbec372ca9f", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/197c00e7d41279291c70ee5f7ad38bbec372ca9f", "committedDate": "2020-10-09T00:43:11Z", "message": "Add thrift serde support for TaskStatus\n\nAdded Drift annotations to TaskStatus and related classes\nto support thrift serde."}, "afterCommit": {"oid": "d0c210685e9a65286de88e2e8f30cfe92b0ff96b", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/d0c210685e9a65286de88e2e8f30cfe92b0ff96b", "committedDate": "2020-10-12T06:00:15Z", "message": "Add thrift serde support for TaskStatus\n\nAdded Drift annotations to TaskStatus and related classes\nto support thrift serde."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9de351f281ad32a903af7b4bd47ef5a9bb3d48ac", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/9de351f281ad32a903af7b4bd47ef5a9bb3d48ac", "committedDate": "2020-10-12T06:34:28Z", "message": "Update drift-api module's scope to be provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}, "afterCommit": {"oid": "0e90d41091955f88de576b90dc9dbb716648c5b5", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/0e90d41091955f88de576b90dc9dbb716648c5b5", "committedDate": "2020-10-12T06:36:28Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e90d41091955f88de576b90dc9dbb716648c5b5", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/0e90d41091955f88de576b90dc9dbb716648c5b5", "committedDate": "2020-10-12T06:36:28Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}, "afterCommit": {"oid": "bc8398147000dff1a459dc40b674fe8c390dea14", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/bc8398147000dff1a459dc40b674fe8c390dea14", "committedDate": "2020-10-12T07:14:54Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc8398147000dff1a459dc40b674fe8c390dea14", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/bc8398147000dff1a459dc40b674fe8c390dea14", "committedDate": "2020-10-12T07:14:54Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}, "afterCommit": {"oid": "a404543d957049bf448f5aab8166094d2af81d2b", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/a404543d957049bf448f5aab8166094d2af81d2b", "committedDate": "2020-10-12T17:42:21Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a404543d957049bf448f5aab8166094d2af81d2b", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/a404543d957049bf448f5aab8166094d2af81d2b", "committedDate": "2020-10-12T17:42:21Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}, "afterCommit": {"oid": "b6a7acb7d677227db2f012711afa474150846a1f", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/b6a7acb7d677227db2f012711afa474150846a1f", "committedDate": "2020-10-12T23:23:09Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b6a7acb7d677227db2f012711afa474150846a1f", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/b6a7acb7d677227db2f012711afa474150846a1f", "committedDate": "2020-10-12T23:23:09Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}, "afterCommit": {"oid": "e7e72c16e52502dc90ad0e661eb04001e892009e", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/e7e72c16e52502dc90ad0e661eb04001e892009e", "committedDate": "2020-10-13T17:35:37Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e7e72c16e52502dc90ad0e661eb04001e892009e", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/e7e72c16e52502dc90ad0e661eb04001e892009e", "committedDate": "2020-10-13T17:35:37Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}, "afterCommit": {"oid": "b4f99f747fcede8d0f783a30ac9e957c83e3ff12", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/b4f99f747fcede8d0f783a30ac9e957c83e3ff12", "committedDate": "2020-10-13T18:31:42Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b4f99f747fcede8d0f783a30ac9e957c83e3ff12", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/b4f99f747fcede8d0f783a30ac9e957c83e3ff12", "committedDate": "2020-10-13T18:31:42Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}, "afterCommit": {"oid": "c8959df05868c1fb8953609c57f823a3822cc518", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/c8959df05868c1fb8953609c57f823a3822cc518", "committedDate": "2020-10-13T21:26:58Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10635d0b63e7ee47f9572b8d0e81a4613c8b9b41", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/10635d0b63e7ee47f9572b8d0e81a4613c8b9b41", "committedDate": "2020-10-14T00:35:09Z", "message": "Add thrift serde support for TaskStatus\n\nAdded Drift annotations to TaskStatus and related classes\nto support thrift serde."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "169ac6a5d6faace69f1229288df35f5590ed57a5", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/169ac6a5d6faace69f1229288df35f5590ed57a5", "committedDate": "2020-10-14T00:35:16Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c8959df05868c1fb8953609c57f823a3822cc518", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/c8959df05868c1fb8953609c57f823a3822cc518", "committedDate": "2020-10-13T21:26:58Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}, "afterCommit": {"oid": "169ac6a5d6faace69f1229288df35f5590ed57a5", "author": {"user": {"login": "ajaygeorge", "name": "Ajay George"}}, "url": "https://github.com/prestodb/presto/commit/169ac6a5d6faace69f1229288df35f5590ed57a5", "committedDate": "2020-10-14T00:35:16Z", "message": "Update drift-api module's scope to provided\n\ndrift-api maven module is now part of SPI and should\nbe in provided scope."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3OTYyMTk3", "url": "https://github.com/prestodb/presto/pull/15256#pullrequestreview-507962197", "createdAt": "2020-10-14T03:06:06Z", "commit": {"oid": "169ac6a5d6faace69f1229288df35f5590ed57a5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4820, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}