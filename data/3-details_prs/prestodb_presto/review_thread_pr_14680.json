{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MTEzNjA0", "number": 14680, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwODo0Mzo0MlrOEHWI3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowNjoyNVrOEIdDxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTM4MjA3OnYy", "diffSide": "RIGHT", "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwODo0Mzo0MlrOGmqlww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwMTowMTozOVrOGmvbhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE5Njg2Nw==", "bodyText": "We also need all other information other than identity. Schema and table are available in handle. Same for all other places.", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443196867", "createdAt": "2020-06-21T08:43:42Z", "author": {"login": "highker"}, "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "diffHunk": "@@ -59,7 +59,7 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n \n         RaptorOutputTableHandle handle = (RaptorOutputTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new FileSystemContext(session),\n+                new HdfsContext(session.getIdentity()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59fd045de2a55b221ca75292014eebfa46d43216"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI3NjE2Nw==", "bodyText": "Got it. I see that I can get schema and table names from RaptorOutputTableHandle:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            new HdfsContext(session.getIdentity()),\n          \n          \n            \n                            new HdfsContext(session, handle.getSchemaName(), handle.getTableName())", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443276167", "createdAt": "2020-06-22T01:01:39Z", "author": {"login": "fvcortes"}, "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "diffHunk": "@@ -59,7 +59,7 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n \n         RaptorOutputTableHandle handle = (RaptorOutputTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new FileSystemContext(session),\n+                new HdfsContext(session.getIdentity()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE5Njg2Nw=="}, "originalCommit": {"oid": "59fd045de2a55b221ca75292014eebfa46d43216"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTM4MzQ1OnYy", "diffSide": "LEFT", "path": "presto-raptor/src/test/java/com/facebook/presto/raptor/storage/TestOrcStorageManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwODo0NjowNlrOGmqmgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwODo0NjowNlrOGmqmgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE5NzA1Nw==", "bodyText": "leave an empty line between constants and variables", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443197057", "createdAt": "2020-06-21T08:46:06Z", "author": {"login": "highker"}, "path": "presto-raptor/src/test/java/com/facebook/presto/raptor/storage/TestOrcStorageManager.java", "diffHunk": "@@ -140,7 +141,7 @@\n     private static final DataSize MAX_FILE_SIZE = new DataSize(1, MEGABYTE);\n     private static final Duration MISSING_SHARD_DISCOVERY = new Duration(5, TimeUnit.MINUTES);\n     private static final ReaderAttributes READER_ATTRIBUTES = new ReaderAttributes(new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), true, false);\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59fd045de2a55b221ca75292014eebfa46d43216"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTM4MzU3OnYy", "diffSide": "LEFT", "path": "presto-raptor/src/test/java/com/facebook/presto/raptor/storage/organization/TestShardCompactor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwODo0NjoxN1rOGmqmkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwODo0NjoxN1rOGmqmkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE5NzA3Mg==", "bodyText": "same", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443197072", "createdAt": "2020-06-21T08:46:17Z", "author": {"login": "highker"}, "path": "presto-raptor/src/test/java/com/facebook/presto/raptor/storage/organization/TestShardCompactor.java", "diffHunk": "@@ -80,7 +81,7 @@\n     private static final int MAX_SHARD_ROWS = 1000;\n     private static final PagesIndexPageSorter PAGE_SORTER = new PagesIndexPageSorter(new PagesIndex.TestingFactory(false));\n     private static final ReaderAttributes READER_ATTRIBUTES = new ReaderAttributes(new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), new DataSize(1, MEGABYTE), true, false);\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59fd045de2a55b221ca75292014eebfa46d43216"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTk3MDMxOnYy", "diffSide": "RIGHT", "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwMTowMzozM1rOGmvcjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNjozODo1MlrOGnbOJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI3NjQyOQ==", "bodyText": "But schema and table names are not available in RaptorInsertTableHandle.", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443276429", "createdAt": "2020-06-22T01:03:33Z", "author": {"login": "fvcortes"}, "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "diffHunk": "@@ -82,7 +82,7 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n \n         RaptorInsertTableHandle handle = (RaptorInsertTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new FileSystemContext(session),\n+                new HdfsContext(session.getIdentity()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59fd045de2a55b221ca75292014eebfa46d43216"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk5MzYzNw==", "bodyText": "We can ignore schema/table. But we should populate other fields.", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443993637", "createdAt": "2020-06-23T06:38:52Z", "author": {"login": "highker"}, "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "diffHunk": "@@ -82,7 +82,7 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n \n         RaptorInsertTableHandle handle = (RaptorInsertTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new FileSystemContext(session),\n+                new HdfsContext(session.getIdentity()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI3NjQyOQ=="}, "originalCommit": {"oid": "59fd045de2a55b221ca75292014eebfa46d43216"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTk3MjMyOnYy", "diffSide": "RIGHT", "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSourceProvider.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwMTowNjowOFrOGmvdwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNjozODo1OFrOGnbOTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI3NjczOA==", "bodyText": "So does here.", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443276738", "createdAt": "2020-06-22T01:06:08Z", "author": {"login": "fvcortes"}, "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSourceProvider.java", "diffHunk": "@@ -69,7 +69,7 @@ public ConnectorPageSource createPageSource(\n         Optional<Map<String, Type>> columnTypes = raptorSplit.getColumnTypes();\n         boolean tableSupportsDeltaDelete = raptorSplit.isTableSupportsDeltaDelete();\n \n-        FileSystemContext context = new FileSystemContext(session);\n+        HdfsContext context = new HdfsContext(session.getIdentity());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59fd045de2a55b221ca75292014eebfa46d43216"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc3MjU1MQ==", "bodyText": "We can ignore schema and table for page source/sink provider at the moment", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443772551", "createdAt": "2020-06-22T19:16:48Z", "author": {"login": "highker"}, "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSourceProvider.java", "diffHunk": "@@ -69,7 +69,7 @@ public ConnectorPageSource createPageSource(\n         Optional<Map<String, Type>> columnTypes = raptorSplit.getColumnTypes();\n         boolean tableSupportsDeltaDelete = raptorSplit.isTableSupportsDeltaDelete();\n \n-        FileSystemContext context = new FileSystemContext(session);\n+        HdfsContext context = new HdfsContext(session.getIdentity());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI3NjczOA=="}, "originalCommit": {"oid": "59fd045de2a55b221ca75292014eebfa46d43216"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk5MzY3OQ==", "bodyText": "Same", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r443993679", "createdAt": "2020-06-23T06:38:58Z", "author": {"login": "highker"}, "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSourceProvider.java", "diffHunk": "@@ -69,7 +69,7 @@ public ConnectorPageSource createPageSource(\n         Optional<Map<String, Type>> columnTypes = raptorSplit.getColumnTypes();\n         boolean tableSupportsDeltaDelete = raptorSplit.isTableSupportsDeltaDelete();\n \n-        FileSystemContext context = new FileSystemContext(session);\n+        HdfsContext context = new HdfsContext(session.getIdentity());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI3NjczOA=="}, "originalCommit": {"oid": "59fd045de2a55b221ca75292014eebfa46d43216"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODg1MzEzOnYy", "diffSide": "RIGHT", "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzowNzozNVrOGnypEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMTo1OTowN1rOGoAWDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NzM2Mw==", "bodyText": "Could you address the comments https://github.com/prestodb/presto/pull/14680/files#r443993637? We need more than identity.", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r444377363", "createdAt": "2020-06-23T17:07:35Z", "author": {"login": "highker"}, "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "diffHunk": "@@ -82,7 +82,7 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n \n         RaptorInsertTableHandle handle = (RaptorInsertTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new FileSystemContext(session),\n+                new HdfsContext(session.getIdentity()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caec03f534e390a1d3acde1794b70bb295beea41"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MjQ1MQ==", "bodyText": "Should I populate the fields with an empty string?", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r444562451", "createdAt": "2020-06-23T23:27:33Z", "author": {"login": "fvcortes"}, "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "diffHunk": "@@ -82,7 +82,7 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n \n         RaptorInsertTableHandle handle = (RaptorInsertTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new FileSystemContext(session),\n+                new HdfsContext(session.getIdentity()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NzM2Mw=="}, "originalCommit": {"oid": "caec03f534e390a1d3acde1794b70bb295beea41"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MzExMA==", "bodyText": "Create a new interface public HdfsContext(ConnectorSession session) for HdfsContext", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r444563110", "createdAt": "2020-06-23T23:29:53Z", "author": {"login": "highker"}, "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "diffHunk": "@@ -82,7 +82,7 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n \n         RaptorInsertTableHandle handle = (RaptorInsertTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new FileSystemContext(session),\n+                new HdfsContext(session.getIdentity()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NzM2Mw=="}, "originalCommit": {"oid": "caec03f534e390a1d3acde1794b70bb295beea41"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU5MjgyNw==", "bodyText": "BTW, the constructors for HdfsContext is really bad. We should have something like this\n    public HdfsContext(ConnectorSession session)\n    {\n        this(session, Optional.empty(), Optional.empty());\n    }\n\n    public HdfsContext(ConnectorSession session, String schemaName)\n    {\n        this(session, Optional.of(schemaName), Optional.empty());\n    }\n\n    public HdfsContext(ConnectorSession session, String schemaName, String tableName)\n    {\n        this(session, Optional.of(schemaName), Optional.of(tableName));\n    }\n\n    private HdfsContext(ConnectorSession session, Optional<String> schemaName, Optional<String> tableName)\n    {\n        requireNonNull(session, \"session is null\");\n        this.identity = requireNonNull(session.getIdentity(), \"session.getIdentity() is null\");\n        this.source = requireNonNull(session.getSource(), \"session.getSource() is null\");\n        this.queryId = Optional.of(session.getQueryId());\n        this.schemaName = requireNonNull(schemaName, \"schemaName is null\");\n        this.tableName = requireNonNull(tableName, \"tableName is null\");\n        this.clientInfo = session.getClientInfo();\n    }", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r444592827", "createdAt": "2020-06-24T01:23:36Z", "author": {"login": "highker"}, "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "diffHunk": "@@ -82,7 +82,7 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n \n         RaptorInsertTableHandle handle = (RaptorInsertTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new FileSystemContext(session),\n+                new HdfsContext(session.getIdentity()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NzM2Mw=="}, "originalCommit": {"oid": "caec03f534e390a1d3acde1794b70bb295beea41"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYwMTg3MQ==", "bodyText": "Ok! Doing an explicit constructor invocation makes it clearer.", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r444601871", "createdAt": "2020-06-24T01:59:07Z", "author": {"login": "fvcortes"}, "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "diffHunk": "@@ -82,7 +82,7 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n \n         RaptorInsertTableHandle handle = (RaptorInsertTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new FileSystemContext(session),\n+                new HdfsContext(session.getIdentity()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3NzM2Mw=="}, "originalCommit": {"oid": "caec03f534e390a1d3acde1794b70bb295beea41"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Mjk4OTc4OnYy", "diffSide": "RIGHT", "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowMjo1N1rOGobL0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMToxMToxMVrOGooJpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MTYxNg==", "bodyText": "requireNonNull for schemaName and tableName", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r445041616", "createdAt": "2020-06-24T17:02:57Z", "author": {"login": "highker"}, "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java", "diffHunk": "@@ -40,28 +40,29 @@ public HdfsContext(ConnectorIdentity identity)\n         this.clientInfo = Optional.empty();\n     }\n \n+    public HdfsContext(ConnectorSession session)\n+    {\n+        this(session, Optional.empty(), Optional.empty());\n+    }\n+\n     public HdfsContext(ConnectorSession session, String schemaName)\n     {\n-        requireNonNull(session, \"session is null\");\n-        requireNonNull(schemaName, \"schemaName is null\");\n-        this.identity = requireNonNull(session.getIdentity(), \"session.getIdentity() is null\");\n-        this.source = requireNonNull(session.getSource(), \"session.getSource()\");\n-        this.queryId = Optional.of(session.getQueryId());\n-        this.schemaName = Optional.of(schemaName);\n-        this.tableName = Optional.empty();\n-        this.clientInfo = session.getClientInfo();\n+        this(session, Optional.of(schemaName), Optional.empty());\n     }\n \n     public HdfsContext(ConnectorSession session, String schemaName, String tableName)\n+    {\n+        this(session, Optional.of(schemaName), Optional.of(tableName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "122ea18e8544a828bb6a8a05457192481b1a2cdd"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI0OTc1Mg==", "bodyText": "Wouldn't requireNonNull already in the last constructor be enough?\nthis.schemaName = requireNonNull(schemaName, \"schemaName is null\");\nthis.tableName = requireNonNull(tableName, \"tableName is null\");", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r445249752", "createdAt": "2020-06-25T00:54:50Z", "author": {"login": "fvcortes"}, "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java", "diffHunk": "@@ -40,28 +40,29 @@ public HdfsContext(ConnectorIdentity identity)\n         this.clientInfo = Optional.empty();\n     }\n \n+    public HdfsContext(ConnectorSession session)\n+    {\n+        this(session, Optional.empty(), Optional.empty());\n+    }\n+\n     public HdfsContext(ConnectorSession session, String schemaName)\n     {\n-        requireNonNull(session, \"session is null\");\n-        requireNonNull(schemaName, \"schemaName is null\");\n-        this.identity = requireNonNull(session.getIdentity(), \"session.getIdentity() is null\");\n-        this.source = requireNonNull(session.getSource(), \"session.getSource()\");\n-        this.queryId = Optional.of(session.getQueryId());\n-        this.schemaName = Optional.of(schemaName);\n-        this.tableName = Optional.empty();\n-        this.clientInfo = session.getClientInfo();\n+        this(session, Optional.of(schemaName), Optional.empty());\n     }\n \n     public HdfsContext(ConnectorSession session, String schemaName, String tableName)\n+    {\n+        this(session, Optional.of(schemaName), Optional.of(tableName));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MTYxNg=="}, "originalCommit": {"oid": "122ea18e8544a828bb6a8a05457192481b1a2cdd"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI1MDkxNg==", "bodyText": "They are completely different. This is of type String; the other is of type Optional<String>. A null input here will throw NPE.", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r445250916", "createdAt": "2020-06-25T00:59:27Z", "author": {"login": "highker"}, "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java", "diffHunk": "@@ -40,28 +40,29 @@ public HdfsContext(ConnectorIdentity identity)\n         this.clientInfo = Optional.empty();\n     }\n \n+    public HdfsContext(ConnectorSession session)\n+    {\n+        this(session, Optional.empty(), Optional.empty());\n+    }\n+\n     public HdfsContext(ConnectorSession session, String schemaName)\n     {\n-        requireNonNull(session, \"session is null\");\n-        requireNonNull(schemaName, \"schemaName is null\");\n-        this.identity = requireNonNull(session.getIdentity(), \"session.getIdentity() is null\");\n-        this.source = requireNonNull(session.getSource(), \"session.getSource()\");\n-        this.queryId = Optional.of(session.getQueryId());\n-        this.schemaName = Optional.of(schemaName);\n-        this.tableName = Optional.empty();\n-        this.clientInfo = session.getClientInfo();\n+        this(session, Optional.of(schemaName), Optional.empty());\n     }\n \n     public HdfsContext(ConnectorSession session, String schemaName, String tableName)\n+    {\n+        this(session, Optional.of(schemaName), Optional.of(tableName));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MTYxNg=="}, "originalCommit": {"oid": "122ea18e8544a828bb6a8a05457192481b1a2cdd"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI1NDA1NA==", "bodyText": "Understood, thanks.", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r445254054", "createdAt": "2020-06-25T01:11:11Z", "author": {"login": "fvcortes"}, "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java", "diffHunk": "@@ -40,28 +40,29 @@ public HdfsContext(ConnectorIdentity identity)\n         this.clientInfo = Optional.empty();\n     }\n \n+    public HdfsContext(ConnectorSession session)\n+    {\n+        this(session, Optional.empty(), Optional.empty());\n+    }\n+\n     public HdfsContext(ConnectorSession session, String schemaName)\n     {\n-        requireNonNull(session, \"session is null\");\n-        requireNonNull(schemaName, \"schemaName is null\");\n-        this.identity = requireNonNull(session.getIdentity(), \"session.getIdentity() is null\");\n-        this.source = requireNonNull(session.getSource(), \"session.getSource()\");\n-        this.queryId = Optional.of(session.getQueryId());\n-        this.schemaName = Optional.of(schemaName);\n-        this.tableName = Optional.empty();\n-        this.clientInfo = session.getClientInfo();\n+        this(session, Optional.of(schemaName), Optional.empty());\n     }\n \n     public HdfsContext(ConnectorSession session, String schemaName, String tableName)\n+    {\n+        this(session, Optional.of(schemaName), Optional.of(tableName));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MTYxNg=="}, "originalCommit": {"oid": "122ea18e8544a828bb6a8a05457192481b1a2cdd"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Mjk5MDM5OnYy", "diffSide": "RIGHT", "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowMzowNVrOGobMLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowMzowNVrOGobMLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MTcwOA==", "bodyText": "requireNonNull for schemaName", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r445041708", "createdAt": "2020-06-24T17:03:05Z", "author": {"login": "highker"}, "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/HdfsContext.java", "diffHunk": "@@ -40,28 +40,29 @@ public HdfsContext(ConnectorIdentity identity)\n         this.clientInfo = Optional.empty();\n     }\n \n+    public HdfsContext(ConnectorSession session)\n+    {\n+        this(session, Optional.empty(), Optional.empty());\n+    }\n+\n     public HdfsContext(ConnectorSession session, String schemaName)\n     {\n-        requireNonNull(session, \"session is null\");\n-        requireNonNull(schemaName, \"schemaName is null\");\n-        this.identity = requireNonNull(session.getIdentity(), \"session.getIdentity() is null\");\n-        this.source = requireNonNull(session.getSource(), \"session.getSource()\");\n-        this.queryId = Optional.of(session.getQueryId());\n-        this.schemaName = Optional.of(schemaName);\n-        this.tableName = Optional.empty();\n-        this.clientInfo = session.getClientInfo();\n+        this(session, Optional.of(schemaName), Optional.empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "122ea18e8544a828bb6a8a05457192481b1a2cdd"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Mjk5NDQwOnYy", "diffSide": "RIGHT", "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowNDoxM1rOGobO3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowNDoxM1rOGobO3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MjM5Ng==", "bodyText": "Pass in schema and table as well from handle", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r445042396", "createdAt": "2020-06-24T17:04:13Z", "author": {"login": "highker"}, "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java", "diffHunk": "@@ -59,7 +59,7 @@ public ConnectorPageSink createPageSink(ConnectorTransactionHandle transactionHa\n \n         RaptorOutputTableHandle handle = (RaptorOutputTableHandle) tableHandle;\n         return new RaptorPageSink(\n-                new FileSystemContext(session),\n+                new HdfsContext(session),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "122ea18e8544a828bb6a8a05457192481b1a2cdd"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzAwMTY2OnYy", "diffSide": "LEFT", "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/filesystem/HdfsStorageService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowNjoyNVrOGobTqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowNjoyNVrOGobTqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MzYyNQ==", "bodyText": "move DEFAULT_RAPTOR_CONTEXT to FileSystemUtil", "url": "https://github.com/prestodb/presto/pull/14680#discussion_r445043625", "createdAt": "2020-06-24T17:06:25Z", "author": {"login": "highker"}, "path": "presto-raptor/src/main/java/com/facebook/presto/raptor/filesystem/HdfsStorageService.java", "diffHunk": "@@ -118,7 +121,7 @@ private void createDirectory(Path directory)\n     {\n         boolean madeDirectory;\n         try {\n-            FileSystem fileSystem = environment.getFileSystem(FileSystemContext.DEFAULT_RAPTOR_CONTEXT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "122ea18e8544a828bb6a8a05457192481b1a2cdd"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2484, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}