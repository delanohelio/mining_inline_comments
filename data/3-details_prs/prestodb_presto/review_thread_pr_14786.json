{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0OTIyMzk1", "number": 14786, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMToxNToxNVrOEMPsKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMToxNzoyMlrOEMPu5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjc1NDMyOnYy", "diffSide": "RIGHT", "path": "presto-spark-classloader-interface/src/main/java/com/facebook/presto/spark/classloader_interface/PrestoSparkShuffleSerializer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMToxNToxNVrOGuP3YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMzo1NTowM1rOGvAx-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE0NzYxNw==", "bodyText": "nit: should this have @Override?", "url": "https://github.com/prestodb/presto/pull/14786#discussion_r451147617", "createdAt": "2020-07-07T21:15:15Z", "author": {"login": "wenleix"}, "path": "presto-spark-classloader-interface/src/main/java/com/facebook/presto/spark/classloader_interface/PrestoSparkShuffleSerializer.java", "diffHunk": "@@ -78,6 +83,14 @@ public DeserializationStream deserializeStream(InputStream inputStream)\n             throw new UnsupportedOperationException(\"this method is never used by shuffle\");\n         }\n \n+        public <T> T deserialize(byte[] array, int offset, int length, ClassTag<T> classTag)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a3571d55d04115b82cb1448bffbf8688f24a343"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk0OTA1MA==", "bodyText": "Unfortunately this method is not defined in the interface (in the opensource version)", "url": "https://github.com/prestodb/presto/pull/14786#discussion_r451949050", "createdAt": "2020-07-09T03:55:03Z", "author": {"login": "arhimondr"}, "path": "presto-spark-classloader-interface/src/main/java/com/facebook/presto/spark/classloader_interface/PrestoSparkShuffleSerializer.java", "diffHunk": "@@ -78,6 +83,14 @@ public DeserializationStream deserializeStream(InputStream inputStream)\n             throw new UnsupportedOperationException(\"this method is never used by shuffle\");\n         }\n \n+        public <T> T deserialize(byte[] array, int offset, int length, ClassTag<T> classTag)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE0NzYxNw=="}, "originalCommit": {"oid": "8a3571d55d04115b82cb1448bffbf8688f24a343"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjc1Nzc4OnYy", "diffSide": "RIGHT", "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/execution/PrestoSparkMutableRowPageInput.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMToxNjoyM1rOGuP5kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNDowOTo0OVrOGvA_hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE0ODE3Nw==", "bodyText": "curious: when the PrestoSparkMutableRow will be backed by ByteBuffer and when it will be backed by byte[]? -- maybe add a comment to explain it?", "url": "https://github.com/prestodb/presto/pull/14786#discussion_r451148177", "createdAt": "2020-07-07T21:16:23Z", "author": {"login": "wenleix"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/execution/PrestoSparkMutableRowPageInput.java", "diffHunk": "@@ -96,8 +96,16 @@ public Page getNextPage()\n                 Iterator<Tuple2<MutablePartitionId, PrestoSparkMutableRow>> currentIterator = rowIterators.get(currentIteratorIndex);\n                 if (currentIterator.hasNext()) {\n                     PrestoSparkMutableRow row = currentIterator.next()._2;\n-                    ByteBuffer buffer = row.getBuffer();\n-                    output.writeBytes(buffer.array(), buffer.arrayOffset() + buffer.position(), buffer.remaining());\n+                    if (row.getBuffer() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a3571d55d04115b82cb1448bffbf8688f24a343"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk0OTE5OA==", "bodyText": "I will be backed by byte[] only when deserialized with public <T> T deserialize(byte[] array, int offset, int length, ClassTag<T> classTag)", "url": "https://github.com/prestodb/presto/pull/14786#discussion_r451949198", "createdAt": "2020-07-09T03:55:33Z", "author": {"login": "arhimondr"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/execution/PrestoSparkMutableRowPageInput.java", "diffHunk": "@@ -96,8 +96,16 @@ public Page getNextPage()\n                 Iterator<Tuple2<MutablePartitionId, PrestoSparkMutableRow>> currentIterator = rowIterators.get(currentIteratorIndex);\n                 if (currentIterator.hasNext()) {\n                     PrestoSparkMutableRow row = currentIterator.next()._2;\n-                    ByteBuffer buffer = row.getBuffer();\n-                    output.writeBytes(buffer.array(), buffer.arrayOffset() + buffer.position(), buffer.remaining());\n+                    if (row.getBuffer() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE0ODE3Nw=="}, "originalCommit": {"oid": "8a3571d55d04115b82cb1448bffbf8688f24a343"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk1MjUxNw==", "bodyText": "Added more comments", "url": "https://github.com/prestodb/presto/pull/14786#discussion_r451952517", "createdAt": "2020-07-09T04:09:49Z", "author": {"login": "arhimondr"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/execution/PrestoSparkMutableRowPageInput.java", "diffHunk": "@@ -96,8 +96,16 @@ public Page getNextPage()\n                 Iterator<Tuple2<MutablePartitionId, PrestoSparkMutableRow>> currentIterator = rowIterators.get(currentIteratorIndex);\n                 if (currentIterator.hasNext()) {\n                     PrestoSparkMutableRow row = currentIterator.next()._2;\n-                    ByteBuffer buffer = row.getBuffer();\n-                    output.writeBytes(buffer.array(), buffer.arrayOffset() + buffer.position(), buffer.remaining());\n+                    if (row.getBuffer() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE0ODE3Nw=="}, "originalCommit": {"oid": "8a3571d55d04115b82cb1448bffbf8688f24a343"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjc2MTMzOnYy", "diffSide": "RIGHT", "path": "presto-spark-classloader-interface/src/main/java/com/facebook/presto/spark/classloader_interface/PrestoSparkMutableRow.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMToxNzoyMlrOGuP7qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMzo1NTo1MlrOGvAy-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE0ODcxMg==", "bodyText": "when the mutable row is backed by ByteBuffer, will length be set correctly?", "url": "https://github.com/prestodb/presto/pull/14786#discussion_r451148712", "createdAt": "2020-07-07T21:17:22Z", "author": {"login": "wenleix"}, "path": "presto-spark-classloader-interface/src/main/java/com/facebook/presto/spark/classloader_interface/PrestoSparkMutableRow.java", "diffHunk": "@@ -38,6 +43,39 @@ public void setBuffer(ByteBuffer buffer)\n         this.buffer = buffer;\n     }\n \n+    public byte[] getArray()\n+    {\n+        return array;\n+    }\n+\n+    public PrestoSparkMutableRow setArray(byte[] array)\n+    {\n+        this.array = array;\n+        return this;\n+    }\n+\n+    public int getOffset()\n+    {\n+        return offset;\n+    }\n+\n+    public PrestoSparkMutableRow setOffset(int offset)\n+    {\n+        this.offset = offset;\n+        return this;\n+    }\n+\n+    public int getLength()\n+    {\n+        return length;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a3571d55d04115b82cb1448bffbf8688f24a343"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk0OTMwNA==", "bodyText": "No. offset is length is set only when it is backed by the byte[]", "url": "https://github.com/prestodb/presto/pull/14786#discussion_r451949304", "createdAt": "2020-07-09T03:55:52Z", "author": {"login": "arhimondr"}, "path": "presto-spark-classloader-interface/src/main/java/com/facebook/presto/spark/classloader_interface/PrestoSparkMutableRow.java", "diffHunk": "@@ -38,6 +43,39 @@ public void setBuffer(ByteBuffer buffer)\n         this.buffer = buffer;\n     }\n \n+    public byte[] getArray()\n+    {\n+        return array;\n+    }\n+\n+    public PrestoSparkMutableRow setArray(byte[] array)\n+    {\n+        this.array = array;\n+        return this;\n+    }\n+\n+    public int getOffset()\n+    {\n+        return offset;\n+    }\n+\n+    public PrestoSparkMutableRow setOffset(int offset)\n+    {\n+        this.offset = offset;\n+        return this;\n+    }\n+\n+    public int getLength()\n+    {\n+        return length;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE0ODcxMg=="}, "originalCommit": {"oid": "8a3571d55d04115b82cb1448bffbf8688f24a343"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2316, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}