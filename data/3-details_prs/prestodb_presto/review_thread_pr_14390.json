{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMzk4NTI0", "number": 14390, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoxODoxNFrOD030_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoxODoxNFrOD030_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NzY3MjMxOnYy", "diffSide": "RIGHT", "path": "presto-geospatial-toolkit/src/test/java/com/facebook/presto/geospatial/TestGeometryUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoxODoxNFrOGKB0MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoxODoxNFrOGKB0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE2ODY4OA==", "bodyText": "put OGCGeometry.fromText(\"GEOMETRYCOLLECTION (GEOMETRYCOLLECTION (POINT (0 1), POINT (1 2)))\"), to its own line", "url": "https://github.com/prestodb/presto/pull/14390#discussion_r413168688", "createdAt": "2020-04-22T17:18:14Z", "author": {"login": "highker"}, "path": "presto-geospatial-toolkit/src/test/java/com/facebook/presto/geospatial/TestGeometryUtils.java", "diffHunk": "@@ -69,4 +75,48 @@ private void assertGetExtent(String wkt, Rectangle expected)\n     {\n         assertEquals(getExtent(OGCGeometry.fromText(wkt)), expected);\n     }\n+\n+    @Test\n+    public void testFlattenCollection()\n+    {\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"POINT EMPTY\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"POINT (1 2)\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTIPOINT EMPTY\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTIPOINT (1 2)\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTIPOINT (1 2, 3 4)\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"LINESTRING EMPTY\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"LINESTRING (1 2, 3 4)\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTILINESTRING EMPTY\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTILINESTRING ((1 2, 3 4))\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTILINESTRING ((1 2, 3 4), (5 6, 7 8))\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"POLYGON EMPTY\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"POLYGON ((0 0, 0 1, 1 1, 0 0))\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTIPOLYGON EMPTY\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTIPOLYGON (((0 0, 0 1, 1 1, 0 0)))\"));\n+        assertFlattenLeavesUnchanged(OGCGeometry.fromText(\"MULTIPOLYGON (((0 0, 0 1, 1 1, 0 0)), ((10 10, 10 11, 11 11, 10 10)))\"));\n+\n+        assertFlattens(OGCGeometry.fromText(\"GEOMETRYCOLLECTION EMPTY\"), ImmutableList.of());\n+        assertFlattens(OGCGeometry.fromText(\"GEOMETRYCOLLECTION (POINT EMPTY)\"), OGCGeometry.fromText(\"POINT EMPTY\"));\n+        assertFlattens(OGCGeometry.fromText(\"GEOMETRYCOLLECTION (POINT (0 1))\"), OGCGeometry.fromText(\"POINT (0 1)\"));\n+        assertFlattens(OGCGeometry.fromText(\"GEOMETRYCOLLECTION (GEOMETRYCOLLECTION EMPTY)\"), ImmutableList.of());\n+        assertFlattens(OGCGeometry.fromText(\"GEOMETRYCOLLECTION (GEOMETRYCOLLECTION (POINT (0 1), POINT (1 2)))\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01c06de1a5cf7c10787b4798f77bc24a682229d2"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2787, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}