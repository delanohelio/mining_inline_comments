{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwODI3OTYz", "number": 15206, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjozMDo1OVrOEnonKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODozMDozMVrOEob9Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTk1MzA2OnYy", "diffSide": "RIGHT", "path": "presto-common/src/main/java/com/facebook/presto/common/block/MapBlockBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjozMDo1OVrOHYVw6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOToxOToxMlrOHZkDzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI4NDQ1OQ==", "bodyText": "curious why we don't updateDataSize here? It is coz the primitive types take care of it for complex types?", "url": "https://github.com/prestodb/presto/pull/15206#discussion_r495284459", "createdAt": "2020-09-25T22:30:59Z", "author": {"login": "sujay-jain"}, "path": "presto-common/src/main/java/com/facebook/presto/common/block/MapBlockBuilder.java", "diffHunk": "@@ -470,6 +471,15 @@ public BlockBuilder newBlockBuilderLike(BlockBuilderStatus blockBuilderStatus)\n                 newNegativeOneFilledArray(newSize * HASH_MULTIPLIER));\n     }\n \n+    @Override\n+    public void reserve(int positionCount)\n+    {\n+        assert positionCount > 0;\n+\n+        mapIsNull = ensureCapacity(mapIsNull, positionCount);\n+        offsets = ensureCapacity(offsets, positionCount + 1);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11519738e4dd5f5a598eb83648346d07c7ce193b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2NzI0Nw==", "bodyText": "@sujay-jain There is no updateDataSize in the MapBlockBuilder and RowBlockBuilder. I guess there were some historic reasons why they were treated differently. My understanding is the introduction of updateDataSize was to relieve the costly calculation in getRetainedSizeInBytes() but I don't have first hand data showing the benefit. So I'm just following the existing ways for now.", "url": "https://github.com/prestodb/presto/pull/15206#discussion_r496567247", "createdAt": "2020-09-29T09:19:12Z", "author": {"login": "yingsu00"}, "path": "presto-common/src/main/java/com/facebook/presto/common/block/MapBlockBuilder.java", "diffHunk": "@@ -470,6 +471,15 @@ public BlockBuilder newBlockBuilderLike(BlockBuilderStatus blockBuilderStatus)\n                 newNegativeOneFilledArray(newSize * HASH_MULTIPLIER));\n     }\n \n+    @Override\n+    public void reserve(int positionCount)\n+    {\n+        assert positionCount > 0;\n+\n+        mapIsNull = ensureCapacity(mapIsNull, positionCount);\n+        offsets = ensureCapacity(offsets, positionCount + 1);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI4NDQ1OQ=="}, "originalCommit": {"oid": "11519738e4dd5f5a598eb83648346d07c7ce193b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODM1OTYyOnYy", "diffSide": "RIGHT", "path": "presto-common/src/main/java/com/facebook/presto/common/block/BlockBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODoyOTozOFrOHZhqfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODoyOTozOFrOHZhqfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUyNzk5OA==", "bodyText": "This method needs a comment.", "url": "https://github.com/prestodb/presto/pull/15206#discussion_r496527998", "createdAt": "2020-09-29T08:29:38Z", "author": {"login": "mbasmanova"}, "path": "presto-common/src/main/java/com/facebook/presto/common/block/BlockBuilder.java", "diffHunk": "@@ -118,4 +118,6 @@ default BlockBuilder appendStructureInternal(Block block, int position)\n      * Creates a new block builder of the same type based on the current usage statistics of this block builder.\n      */\n     BlockBuilder newBlockBuilderLike(BlockBuilderStatus blockBuilderStatus);\n+\n+    void reserve(int positionCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d07458192512d65b0fd0c4d6c6534246356ecec"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODM2NTYzOnYy", "diffSide": "RIGHT", "path": "presto-common/src/main/java/com/facebook/presto/common/block/BlockUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODozMDozMVrOHZhuQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODozMDozMVrOHZhuQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUyODk2MA==", "bodyText": "typo: byte -> boolean", "url": "https://github.com/prestodb/presto/pull/15206#discussion_r496528960", "createdAt": "2020-09-29T08:30:31Z", "author": {"login": "mbasmanova"}, "path": "presto-common/src/main/java/com/facebook/presto/common/block/BlockUtil.java", "diffHunk": "@@ -266,6 +266,22 @@ else if (buffer.length < capacity) {\n         return buffer;\n     }\n \n+    /**\n+     * Returns a byte array of size capacity if the input buffer is null or smaller than the capacity.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d07458192512d65b0fd0c4d6c6534246356ecec"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3702, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}