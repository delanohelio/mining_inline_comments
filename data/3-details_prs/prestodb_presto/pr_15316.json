{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NDA0Mjc0", "number": 15316, "title": "Fix caching and case-sensitivity issues with enum type signatures", "bodyText": "This adds the hashCode and equals method to enum types, which fixes a caching bug for enum UDF lookup \u2013 without this, CAST(string as SomeEnum) always resolved to the same cast function implementation of the first enum encountered\nBy fixing this bug, I uncovered another bug: in a number of places, we assume that TypeSignatures are case-insensitive and we lowercase them \u2013 however the way we represent varchar enum type signatures is not case-insensitive because we store the map's values. Here I encode them in Base 32, which is a case-insensitive encoding. I figured this would be more robust than trying to patch all the places where we make the assumption, and break it only in specific cases.\n\nIf instead of using Base32, we go for requiring case-sensitive signatures, we'd need at least to change logic in sql/tree/Cast.java, sql/tree/QualifiedName.java and common/function/QualifiedFunctionName.java \u2013 one complication there is that we'd also make function signatures case-sensitive, especially $literal function names \u2013 this seemed like a problematic thing to introduce just for this one type, so I went for the Base32 \"trick\" instead.\nBenchmarking\nI added benchmarks for parseTypeSignature on varchar and long enum signatures with 35,000 keys. Results on my Mac are as follows (added the row type signature times for comparison). Takes around 150ms per call for the varchar enum signature, and 60ms per call for the long enum signature:\nBenchmark                                                       Mode  Cnt    Score    Error  Units\nBenchmarkTypeSignatureParsing.parseBigLongEnumTypeSignature     avgt   10   60.033 \u00b1 10.942  ms/op\nBenchmarkTypeSignatureParsing.parseBigVarcharEnumTypeSignature  avgt   10  155.382 \u00b1  6.885  ms/op\n\nBenchmarkTypeSignatureParsing.parseRowTypeSignature             avgt   10    2.269 \u00b1  0.297  ms/op\nBenchmarkTypeSignatureParsing.parseRowTypeSignatureWithEnums    avgt   10    2.596 \u00b1  0.204  ms/op\n\nThese numbers are a bit concerning  given that last time we saw timeouts in communication between worker-coordinator when parsing the type signatures took more than 500ms, but I don't know that we can do much better if we keep the full enum definition within the signature.\n== RELEASE NOTES ==\nGeneral Changes\n\nFix caching and case-sensitivity bugs with type signatures for enum types.", "createdAt": "2020-10-15T21:43:15Z", "url": "https://github.com/prestodb/presto/pull/15316", "merged": true, "mergeCommit": {"oid": "fc757d05e44d1bc6c2902922a11a6bf1c70f7ad2"}, "closed": true, "closedAt": "2020-10-23T17:09:30Z", "author": {"login": "daniel-ohayon"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdS-mbzABqjM4ODQ0OTczMDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdU1J7aAFqTUxNDIzNTg4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa0a8fbd0b93465d58a8e830ed703fe498cf7f01", "author": {"user": {"login": "daniel-ohayon", "name": "Daniel Ohayon"}}, "url": "https://github.com/prestodb/presto/commit/fa0a8fbd0b93465d58a8e830ed703fe498cf7f01", "committedDate": "2020-10-15T21:42:25Z", "message": "Handle case-sensitive type signatures"}, "afterCommit": {"oid": "ee76b9b16a28a54afb0b4e4e9a30e0f02ac0530c", "author": {"user": {"login": "daniel-ohayon", "name": "Daniel Ohayon"}}, "url": "https://github.com/prestodb/presto/commit/ee76b9b16a28a54afb0b4e4e9a30e0f02ac0530c", "committedDate": "2020-10-16T04:23:48Z", "message": "Handle case-sensitive type signatures"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ee76b9b16a28a54afb0b4e4e9a30e0f02ac0530c", "author": {"user": {"login": "daniel-ohayon", "name": "Daniel Ohayon"}}, "url": "https://github.com/prestodb/presto/commit/ee76b9b16a28a54afb0b4e4e9a30e0f02ac0530c", "committedDate": "2020-10-16T04:23:48Z", "message": "Handle case-sensitive type signatures"}, "afterCommit": {"oid": "27696d3264cc52075196c63b00a507f7ea6d73ab", "author": {"user": {"login": "daniel-ohayon", "name": "Daniel Ohayon"}}, "url": "https://github.com/prestodb/presto/commit/27696d3264cc52075196c63b00a507f7ea6d73ab", "committedDate": "2020-10-16T04:25:43Z", "message": "Handle case-sensitive type signatures"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "27696d3264cc52075196c63b00a507f7ea6d73ab", "author": {"user": {"login": "daniel-ohayon", "name": "Daniel Ohayon"}}, "url": "https://github.com/prestodb/presto/commit/27696d3264cc52075196c63b00a507f7ea6d73ab", "committedDate": "2020-10-16T04:25:43Z", "message": "Handle case-sensitive type signatures"}, "afterCommit": {"oid": "68228ddad1f3769f516d6a05e1f660b08ebb1584", "author": {"user": {"login": "daniel-ohayon", "name": "Daniel Ohayon"}}, "url": "https://github.com/prestodb/presto/commit/68228ddad1f3769f516d6a05e1f660b08ebb1584", "committedDate": "2020-10-16T04:27:30Z", "message": "Make varchar enum signatures case-insensitive"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODM3ODk0", "url": "https://github.com/prestodb/presto/pull/15316#pullrequestreview-511837894", "createdAt": "2020-10-19T14:39:01Z", "commit": {"oid": "68228ddad1f3769f516d6a05e1f660b08ebb1584"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDozOTowMVrOHkSF_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDo1NjoyNFrOHkS73g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgwNzIzMQ==", "bodyText": "This library is a part of our SPI, and we are trying to keep it clean of any dependencies. Is there an implementation in Java? If not - then we should probably implement it / copy it to the source.", "url": "https://github.com/prestodb/presto/pull/15316#discussion_r507807231", "createdAt": "2020-10-19T14:39:01Z", "author": {"login": "arhimondr"}, "path": "presto-common/pom.xml", "diffHunk": "@@ -37,6 +37,12 @@\n             <artifactId>jol-core</artifactId>\n         </dependency>\n \n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68228ddad1f3769f516d6a05e1f660b08ebb1584"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgxODcxMQ==", "bodyText": "why not to keep it in lower case?", "url": "https://github.com/prestodb/presto/pull/15316#discussion_r507818711", "createdAt": "2020-10-19T14:53:30Z", "author": {"login": "arhimondr"}, "path": "presto-common/src/main/java/com/facebook/presto/common/type/TypeSignature.java", "diffHunk": "@@ -221,7 +222,10 @@ LongEnumMap getLongEnumMap()\n         VarcharEnumMap getVarcharEnumMap()\n         {\n             checkArgument(!isLongEnum, \"Invalid enum map format\");\n-            return new VarcharEnumMap(map);\n+            // Varchar enum values are base32-encoded so that they are case-insensitive, which is expected of TypeSigntures\n+            Base32 base32 = new Base32();\n+            return new VarcharEnumMap(map.entrySet().stream()\n+                    .collect(Collectors.toMap(Map.Entry::getKey, e -> new String(base32.decode(e.getValue().toUpperCase(ENGLISH))))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68228ddad1f3769f516d6a05e1f660b08ebb1584"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgyMTAyMg==", "bodyText": "Why are only the values that are encoded with base32? Are the keys not prone to this problem?", "url": "https://github.com/prestodb/presto/pull/15316#discussion_r507821022", "createdAt": "2020-10-19T14:56:24Z", "author": {"login": "arhimondr"}, "path": "presto-common/src/test/java/com/facebook/presto/common/type/TestTypeSignature.java", "diffHunk": "@@ -296,23 +296,23 @@ public void testIsCalculated()\n     public void testEnumSignature()\n     {\n         assertEquals(\n-                parseTypeSignature(\"test_enum(enum:varchar{\\\"test\\\" :\\\"\\\"\\\"\\\", \\\"hello\\\": \\\" \\\" , \\\"a\\\":\\\"}{{\\\" })\"),\n+                parseTypeSignature(\"test_enum(enum:varchar{\\\"test\\\" :\\\"EI======\\\", \\\"hello\\\": \\\"EA======\\\" , \\\"a\\\":\\\"PV5XW===\\\" })\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68228ddad1f3769f516d6a05e1f660b08ebb1584"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "68228ddad1f3769f516d6a05e1f660b08ebb1584", "author": {"user": {"login": "daniel-ohayon", "name": "Daniel Ohayon"}}, "url": "https://github.com/prestodb/presto/commit/68228ddad1f3769f516d6a05e1f660b08ebb1584", "committedDate": "2020-10-16T04:27:30Z", "message": "Make varchar enum signatures case-insensitive"}, "afterCommit": {"oid": "70a371ea004630c113576ce418ab3d20f3630aba", "author": {"user": {"login": "daniel-ohayon", "name": "Daniel Ohayon"}}, "url": "https://github.com/prestodb/presto/commit/70a371ea004630c113576ce418ab3d20f3630aba", "committedDate": "2020-10-19T22:41:21Z", "message": "Use base32-encoding in enum type signatures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9de494b1a2ce39fea204cc7ab18468c067065ed5", "author": {"user": {"login": "daniel-ohayon", "name": "Daniel Ohayon"}}, "url": "https://github.com/prestodb/presto/commit/9de494b1a2ce39fea204cc7ab18468c067065ed5", "committedDate": "2020-10-20T16:06:28Z", "message": "Add hashCode to VarcharEnumType and LongEnumType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da69fb398e71565195af99ec4a1219ae7957c588", "author": {"user": {"login": "daniel-ohayon", "name": "Daniel Ohayon"}}, "url": "https://github.com/prestodb/presto/commit/da69fb398e71565195af99ec4a1219ae7957c588", "committedDate": "2020-10-20T16:06:28Z", "message": "Handle enum literals in SqlToRowExpressionTranslator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f72c2293cf837b616659f473d5cb98ad7ec79e6c", "author": {"user": {"login": "daniel-ohayon", "name": "Daniel Ohayon"}}, "url": "https://github.com/prestodb/presto/commit/f72c2293cf837b616659f473d5cb98ad7ec79e6c", "committedDate": "2020-10-20T16:06:28Z", "message": "Vendor in Base32 codec from apache.commons.codec"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19b5c29bf08b4fdb8039e6c90c73d6c79b4119f7", "author": {"user": {"login": "daniel-ohayon", "name": "Daniel Ohayon"}}, "url": "https://github.com/prestodb/presto/commit/19b5c29bf08b4fdb8039e6c90c73d6c79b4119f7", "committedDate": "2020-10-20T16:06:28Z", "message": "Use base32-encoding in enum type signatures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8a4b8815b288cd826bacec8b41d73e2ef3d7465", "author": {"user": {"login": "daniel-ohayon", "name": "Daniel Ohayon"}}, "url": "https://github.com/prestodb/presto/commit/e8a4b8815b288cd826bacec8b41d73e2ef3d7465", "committedDate": "2020-10-20T16:39:43Z", "message": "Add benchmarks for big enum signatures"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70a371ea004630c113576ce418ab3d20f3630aba", "author": {"user": {"login": "daniel-ohayon", "name": "Daniel Ohayon"}}, "url": "https://github.com/prestodb/presto/commit/70a371ea004630c113576ce418ab3d20f3630aba", "committedDate": "2020-10-19T22:41:21Z", "message": "Use base32-encoding in enum type signatures"}, "afterCommit": {"oid": "e8a4b8815b288cd826bacec8b41d73e2ef3d7465", "author": {"user": {"login": "daniel-ohayon", "name": "Daniel Ohayon"}}, "url": "https://github.com/prestodb/presto/commit/e8a4b8815b288cd826bacec8b41d73e2ef3d7465", "committedDate": "2020-10-20T16:39:43Z", "message": "Add benchmarks for big enum signatures"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MjM1ODg3", "url": "https://github.com/prestodb/presto/pull/15316#pullrequestreview-514235887", "createdAt": "2020-10-21T22:31:32Z", "commit": {"oid": "e8a4b8815b288cd826bacec8b41d73e2ef3d7465"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4911, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}