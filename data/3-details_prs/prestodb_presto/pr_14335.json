{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4NDQ1OTAz", "number": 14335, "title": "Add native parquet writer", "bodyText": "Cherry-pick of trinodb/trino@70b1289\nCo-authored-by: Zhenxiao Luo zluo@twitter.com\n== RELEASE NOTES ==\n\nHive Changes\n* Native Parquet Writer for Presto", "createdAt": "2020-04-04T01:19:51Z", "url": "https://github.com/prestodb/presto/pull/14335", "merged": true, "mergeCommit": {"oid": "c615632b9d2fe0332097a4c0a043fdd68fee6e23"}, "closed": true, "closedAt": "2020-04-07T00:29:32Z", "author": {"login": "zhenxiao"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUK5auAH2gAyMzk4NDQ1OTAzOjhhYWM5YzE4YzcxNjlkNGZmY2RjMzRiMWE5MTkzYzMxNjA0N2NhNGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVGR4NgH2gAyMzk4NDQ1OTAzOmM5MGMzNTQ2NGRkNDBjYWJjY2VlOGY3NWUzZTk3OGM1OGIwOGZlZWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8aac9c18c7169d4ffcdc34b1a9193c316047ca4a", "author": {"user": {"login": "qqibrow", "name": "qqibrow"}}, "url": "https://github.com/prestodb/presto/commit/8aac9c18c7169d4ffcdc34b1a9193c316047ca4a", "committedDate": "2020-04-04T01:06:20Z", "message": "Add native parquet writer\n\nCherry-pick of https://github.com/prestosql/presto/commit/70b12894bc867c29491cf1eb6ac3da4935f91980\n\nCo-authored-by: Zhenxiao Luo <zluo@twitter.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDQ1MDE5", "url": "https://github.com/prestodb/presto/pull/14335#pullrequestreview-388445019", "createdAt": "2020-04-06T17:01:06Z", "commit": {"oid": "8aac9c18c7169d4ffcdc34b1a9193c316047ca4a"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzowMTowNlrOGBhT0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzowNToyMlrOGBheog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0NzUwNA==", "bodyText": "No strong opinion, but have we considered using full name for this class, say, DefinitionLevelIterable?", "url": "https://github.com/prestodb/presto/pull/14335#discussion_r404247504", "createdAt": "2020-04-06T17:01:06Z", "author": {"login": "shixuan-fan"}, "path": "presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ColumnChunk.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.parquet.writer;\n+\n+import com.facebook.presto.parquet.writer.repdef.DefLevelIterable;\n+import com.facebook.presto.parquet.writer.repdef.RepLevelIterable;\n+import com.facebook.presto.spi.block.Block;\n+import com.google.common.collect.ImmutableList;\n+\n+import java.util.List;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class ColumnChunk\n+{\n+    private final Block block;\n+    private final List<DefLevelIterable> defLevelIterables;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aac9c18c7169d4ffcdc34b1a9193c316047ca4a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0NzU4Nw==", "bodyText": "ditto", "url": "https://github.com/prestodb/presto/pull/14335#discussion_r404247587", "createdAt": "2020-04-06T17:01:14Z", "author": {"login": "shixuan-fan"}, "path": "presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ColumnChunk.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.parquet.writer;\n+\n+import com.facebook.presto.parquet.writer.repdef.DefLevelIterable;\n+import com.facebook.presto.parquet.writer.repdef.RepLevelIterable;\n+import com.facebook.presto.spi.block.Block;\n+import com.google.common.collect.ImmutableList;\n+\n+import java.util.List;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class ColumnChunk\n+{\n+    private final Block block;\n+    private final List<DefLevelIterable> defLevelIterables;\n+    private final List<RepLevelIterable> repLevelIterables;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aac9c18c7169d4ffcdc34b1a9193c316047ca4a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI1MDI3NA==", "bodyText": "Is this supposed to be WriterBuilder?", "url": "https://github.com/prestodb/presto/pull/14335#discussion_r404250274", "createdAt": "2020-04-06T17:05:22Z", "author": {"login": "shixuan-fan"}, "path": "presto-parquet/src/main/java/com/facebook/presto/parquet/writer/ParquetWriters.java", "diffHunk": "@@ -0,0 +1,182 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.parquet.writer;\n+\n+import com.facebook.presto.parquet.writer.valuewriter.BigintValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.BooleanValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.CharValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.DateValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.DecimalValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.DoubleValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.IntegerValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.PrimitiveValueWriter;\n+import com.facebook.presto.parquet.writer.valuewriter.RealValueWriter;\n+import com.facebook.presto.spi.PrestoException;\n+import com.facebook.presto.spi.type.CharType;\n+import com.facebook.presto.spi.type.DecimalType;\n+import com.facebook.presto.spi.type.RealType;\n+import com.facebook.presto.spi.type.Type;\n+import com.facebook.presto.spi.type.VarbinaryType;\n+import com.facebook.presto.spi.type.VarcharType;\n+import com.google.common.collect.ImmutableList;\n+import org.apache.parquet.column.ColumnDescriptor;\n+import org.apache.parquet.column.ParquetProperties;\n+import org.apache.parquet.column.values.ValuesWriter;\n+import org.apache.parquet.hadoop.metadata.CompressionCodecName;\n+import org.apache.parquet.schema.GroupType;\n+import org.apache.parquet.schema.MessageType;\n+import org.apache.parquet.schema.PrimitiveType;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static com.facebook.presto.spi.StandardErrorCode.NOT_SUPPORTED;\n+import static com.facebook.presto.spi.type.BigintType.BIGINT;\n+import static com.facebook.presto.spi.type.BooleanType.BOOLEAN;\n+import static com.facebook.presto.spi.type.DateType.DATE;\n+import static com.facebook.presto.spi.type.DoubleType.DOUBLE;\n+import static com.facebook.presto.spi.type.IntegerType.INTEGER;\n+import static com.facebook.presto.spi.type.SmallintType.SMALLINT;\n+import static com.facebook.presto.spi.type.TimestampType.TIMESTAMP;\n+import static com.facebook.presto.spi.type.TinyintType.TINYINT;\n+import static java.lang.String.format;\n+import static java.util.Objects.requireNonNull;\n+\n+class ParquetWriters\n+{\n+    private ParquetWriters() {}\n+\n+    static List<ColumnWriter> getColumnWriters(MessageType messageType, Map<List<String>, Type> prestoTypes, ParquetProperties parquetProperties, CompressionCodecName compressionCodecName)\n+    {\n+        WriteBuilder writeBuilder = new WriteBuilder(messageType, prestoTypes, parquetProperties, compressionCodecName);\n+        ParquetTypeVisitor.visit(messageType, writeBuilder);\n+        return writeBuilder.build();\n+    }\n+\n+    private static class WriteBuilder", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aac9c18c7169d4ffcdc34b1a9193c316047ca4a"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c90c35464dd40cabccee8f75e3e978c58b08feed", "author": {"user": {"login": "zhenxiao", "name": "Zhenxiao Luo"}}, "url": "https://github.com/prestodb/presto/commit/c90c35464dd40cabccee8f75e3e978c58b08feed", "committedDate": "2020-04-06T22:17:27Z", "message": "Use full name for Parquet classes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1783, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}