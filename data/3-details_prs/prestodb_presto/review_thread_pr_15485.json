{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5ODk4MjEz", "number": 15485, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQyMjoxNDoxMlrOFJ4bNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNDoxNToxM1rOFJ7MWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTA1OTczOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQyMjoxNDoxMlrOIMZdBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQyMjoyMDowN1rOIMZiIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg3MDg1Mg==", "bodyText": "Do you want to call it ordinals or literals? Just pick one! :P", "url": "https://github.com/prestodb/presto/pull/15485#discussion_r549870852", "createdAt": "2020-12-29T22:14:12Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java", "diffHunk": "@@ -171,6 +171,7 @@\n     public static final String REMOTE_FUNCTIONS_ENABLED = \"remote_functions_enabled\";\n     public static final String CHECK_ACCESS_CONTROL_ON_UTILIZED_COLUMNS_ONLY = \"check_access_control_on_utilized_columns_only\";\n     public static final String SKIP_REDUNDANT_SORT = \"skip_redundant_sort\";\n+    public static final String ALLOW_WINDOW_ORDER_BY_ORDINALS = \"allow_window_order_by_ordinals\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e5b7f1b9f4b90c596bbf19978f0dc6f5577cb58"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg3MjE2Mw==", "bodyText": "Oh yeah - I think literals is more appropriate as that's what we are doing. Fixed.", "url": "https://github.com/prestodb/presto/pull/15485#discussion_r549872163", "createdAt": "2020-12-29T22:20:07Z", "author": {"login": "kaikalur"}, "path": "presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java", "diffHunk": "@@ -171,6 +171,7 @@\n     public static final String REMOTE_FUNCTIONS_ENABLED = \"remote_functions_enabled\";\n     public static final String CHECK_ACCESS_CONTROL_ON_UTILIZED_COLUMNS_ONLY = \"check_access_control_on_utilized_columns_only\";\n     public static final String SKIP_REDUNDANT_SORT = \"skip_redundant_sort\";\n+    public static final String ALLOW_WINDOW_ORDER_BY_ORDINALS = \"allow_window_order_by_ordinals\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg3MDg1Mg=="}, "originalCommit": {"oid": "2e5b7f1b9f4b90c596bbf19978f0dc6f5577cb58"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTUwNzQzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNDoxMDowMFrOIMdAUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjowNTo0MFrOIMeAjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkyOTA0Mg==", "bodyText": "We normally use toImmutableList() rather than Collectors.toList()\nWe normally format this as\norderBy.getSortItems().stream()\n        .filter(...)\n        .collect(toImmutableList())\n\nYou can use\nList<SortItem> constSortItems = window.getOrderBy()\n        .ifPresent(orderBy -> orderBy.getSortItems()....)\n        .orElse(ImmutableList.of());", "url": "https://github.com/prestodb/presto/pull/15485#discussion_r549929042", "createdAt": "2020-12-30T04:10:00Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -1535,6 +1538,34 @@ private void analyzeWindowFunctions(QuerySpecification node, List<Expression> ou\n \n                 Window window = windowFunction.getWindow().get();\n \n+                ImmutableList.Builder<SortItem> orderbyConst = ImmutableList.builder();\n+                window.getOrderBy().ifPresent(\n+                        orderBy -> orderbyConst.addAll(\n+                                orderBy.getSortItems()\n+                                .stream()\n+                                .filter(item -> item.getSortKey() instanceof Literal).collect(Collectors.toList())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11d2e53bfb3ccd0077e77bcf53d602e3072d971b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0NTQ4Ng==", "bodyText": "Done", "url": "https://github.com/prestodb/presto/pull/15485#discussion_r549945486", "createdAt": "2020-12-30T06:05:40Z", "author": {"login": "kaikalur"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -1535,6 +1538,34 @@ private void analyzeWindowFunctions(QuerySpecification node, List<Expression> ou\n \n                 Window window = windowFunction.getWindow().get();\n \n+                ImmutableList.Builder<SortItem> orderbyConst = ImmutableList.builder();\n+                window.getOrderBy().ifPresent(\n+                        orderBy -> orderbyConst.addAll(\n+                                orderBy.getSortItems()\n+                                .stream()\n+                                .filter(item -> item.getSortKey() instanceof Literal).collect(Collectors.toList())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkyOTA0Mg=="}, "originalCommit": {"oid": "11d2e53bfb3ccd0077e77bcf53d602e3072d971b"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTUxMjUxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNDoxNDo0M1rOIMdC2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNTo0Njo1NFrOIMd1lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkyOTY4OA==", "bodyText": "instead of?", "url": "https://github.com/prestodb/presto/pull/15485#discussion_r549929688", "createdAt": "2020-12-30T04:14:43Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -1535,6 +1538,34 @@ private void analyzeWindowFunctions(QuerySpecification node, List<Expression> ou\n \n                 Window window = windowFunction.getWindow().get();\n \n+                ImmutableList.Builder<SortItem> orderbyConst = ImmutableList.builder();\n+                window.getOrderBy().ifPresent(\n+                        orderBy -> orderbyConst.addAll(\n+                                orderBy.getSortItems()\n+                                .stream()\n+                                .filter(item -> item.getSortKey() instanceof Literal).collect(Collectors.toList())));\n+\n+                List<SortItem> constSortItems = orderbyConst.build();\n+                if (!constSortItems.isEmpty()) {\n+                    if (isAllowWindowOrderByLiterals(session)) {\n+                        warningCollector.add(\n+                                new PrestoWarning(\n+                                        PERFORMANCE_WARNING,\n+                                        String.format(\n+                                                \"ORDER BY literals/constants with window function: '%s' is unnecessary and expensive. If you intend to ORDER BY using ordinals, please use the actual expression instead: '%s'\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11d2e53bfb3ccd0077e77bcf53d602e3072d971b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0MjY3Ng==", "bodyText": "Well we already set the context in the first clause. Anyway I fixed it and also removed the unnecessary information.", "url": "https://github.com/prestodb/presto/pull/15485#discussion_r549942676", "createdAt": "2020-12-30T05:46:54Z", "author": {"login": "kaikalur"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java", "diffHunk": "@@ -1535,6 +1538,34 @@ private void analyzeWindowFunctions(QuerySpecification node, List<Expression> ou\n \n                 Window window = windowFunction.getWindow().get();\n \n+                ImmutableList.Builder<SortItem> orderbyConst = ImmutableList.builder();\n+                window.getOrderBy().ifPresent(\n+                        orderBy -> orderbyConst.addAll(\n+                                orderBy.getSortItems()\n+                                .stream()\n+                                .filter(item -> item.getSortKey() instanceof Literal).collect(Collectors.toList())));\n+\n+                List<SortItem> constSortItems = orderbyConst.build();\n+                if (!constSortItems.isEmpty()) {\n+                    if (isAllowWindowOrderByLiterals(session)) {\n+                        warningCollector.add(\n+                                new PrestoWarning(\n+                                        PERFORMANCE_WARNING,\n+                                        String.format(\n+                                                \"ORDER BY literals/constants with window function: '%s' is unnecessary and expensive. If you intend to ORDER BY using ordinals, please use the actual expression instead: '%s'\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkyOTY4OA=="}, "originalCommit": {"oid": "11d2e53bfb3ccd0077e77bcf53d602e3072d971b"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTUxMzIzOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNDoxNToxM1rOIMdDMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNTo0NDozOFrOIMd0Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkyOTc3Nw==", "bodyText": "I think the description is not accurate.", "url": "https://github.com/prestodb/presto/pull/15485#discussion_r549929777", "createdAt": "2020-12-30T04:15:13Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java", "diffHunk": "@@ -890,6 +891,11 @@ public SystemSessionProperties(\n                         CHECK_ACCESS_CONTROL_ON_UTILIZED_COLUMNS_ONLY,\n                         \"Apply access control rules on only those columns that are required to produce the query output\",\n                         featuresConfig.isCheckAccessControlOnUtilizedColumnsOnly(),\n+                        false),\n+                booleanProperty(\n+                        ALLOW_WINDOW_ORDER_BY_LITERALS,\n+                        \"Skip redundant sort operations\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11d2e53bfb3ccd0077e77bcf53d602e3072d971b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0MjI4Ng==", "bodyText": "Fixed.", "url": "https://github.com/prestodb/presto/pull/15485#discussion_r549942286", "createdAt": "2020-12-30T05:44:38Z", "author": {"login": "kaikalur"}, "path": "presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java", "diffHunk": "@@ -890,6 +891,11 @@ public SystemSessionProperties(\n                         CHECK_ACCESS_CONTROL_ON_UTILIZED_COLUMNS_ONLY,\n                         \"Apply access control rules on only those columns that are required to produce the query output\",\n                         featuresConfig.isCheckAccessControlOnUtilizedColumnsOnly(),\n+                        false),\n+                booleanProperty(\n+                        ALLOW_WINDOW_ORDER_BY_LITERALS,\n+                        \"Skip redundant sort operations\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkyOTc3Nw=="}, "originalCommit": {"oid": "11d2e53bfb3ccd0077e77bcf53d602e3072d971b"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3432, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}