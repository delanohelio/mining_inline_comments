{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MjA0ODA0", "number": 15401, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzowMDo1NVrOE1wGow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzo0MjozOFrOE4xIHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0Nzk4MTE1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/spiller/NodeSpillConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzowMDo1NVrOHuM-zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzowMDo1NVrOHuM-zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIwOTIzMQ==", "bodyText": "Default value is a placeholder! I will adjust this depending on how testing goes.", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r518209231", "createdAt": "2020-11-05T17:00:55Z", "author": {"login": "sachdevs"}, "path": "presto-main/src/main/java/com/facebook/presto/spiller/NodeSpillConfig.java", "diffHunk": "@@ -21,6 +21,7 @@\n public class NodeSpillConfig\n {\n     private DataSize maxSpillPerNode = new DataSize(100, DataSize.Unit.GIGABYTE);\n+    private DataSize maxRevocableMemoryPerNode = new DataSize(8, DataSize.Unit.GIGABYTE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f9b11235c653f79f2e2a4c30b178c48f687c010"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MzEwMDgyOnYy", "diffSide": "RIGHT", "path": "presto-benchmark/src/main/java/com/facebook/presto/benchmark/AbstractOperatorBenchmark.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMTowODoxOVrOHu9m0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODozODo0OVrOHyIhGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAwNTkwNQ==", "bodyText": "seems like an accidental change", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r519005905", "createdAt": "2020-11-06T21:08:19Z", "author": {"login": "highker"}, "path": "presto-benchmark/src/main/java/com/facebook/presto/benchmark/AbstractOperatorBenchmark.java", "diffHunk": "@@ -225,7 +225,8 @@ protected final OperatorFactory createHashProjectOperator(int operatorId, PlanNo\n         RowExpression translatedHashExpression = translate(hashExpression.get(), variableToInputMapping.build());\n \n         PageFunctionCompiler functionCompiler = new PageFunctionCompiler(localQueryRunner.getMetadata(), 0);\n-        projections.add(new PageProjectionWithOutputs(functionCompiler.compileProjection(session.getSqlFunctionProperties(), translatedHashExpression, Optional.empty()).get(), new int[] {types.size()}));\n+        projections.add(new PageProjectionWithOutputs(functionCompiler.compileProjection(session.getSqlFunctionProperties(), translatedHashExpression, Optional.empty()).get(), new int[] {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1f44d2d48111d48cfa3f9a59319e402d9c57195"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMzMDM5NQ==", "bodyText": "It was auto fixed by checkstyle due to changing this file on save since line is too long.", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r522330395", "createdAt": "2020-11-12T18:38:49Z", "author": {"login": "sachdevs"}, "path": "presto-benchmark/src/main/java/com/facebook/presto/benchmark/AbstractOperatorBenchmark.java", "diffHunk": "@@ -225,7 +225,8 @@ protected final OperatorFactory createHashProjectOperator(int operatorId, PlanNo\n         RowExpression translatedHashExpression = translate(hashExpression.get(), variableToInputMapping.build());\n \n         PageFunctionCompiler functionCompiler = new PageFunctionCompiler(localQueryRunner.getMetadata(), 0);\n-        projections.add(new PageProjectionWithOutputs(functionCompiler.compileProjection(session.getSqlFunctionProperties(), translatedHashExpression, Optional.empty()).get(), new int[] {types.size()}));\n+        projections.add(new PageProjectionWithOutputs(functionCompiler.compileProjection(session.getSqlFunctionProperties(), translatedHashExpression, Optional.empty()).get(), new int[] {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAwNTkwNQ=="}, "originalCommit": {"oid": "d1f44d2d48111d48cfa3f9a59319e402d9c57195"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MzEyODE3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/ExceededMemoryLimitException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMToxODo1M1rOHu924Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMToxODo1M1rOHu924Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxMDAxNw==", "bodyText": "put the first param to its own line. Unfortunately, the other part of the code followed our old coding style.", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r519010017", "createdAt": "2020-11-06T21:18:53Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/ExceededMemoryLimitException.java", "diffHunk": "@@ -52,6 +53,12 @@ public static ExceededMemoryLimitException exceededLocalTotalMemoryLimit(DataSiz\n                 format(\"Query exceeded per-node total memory limit of %s [%s]\", maxMemory, additionalFailureInfo));\n     }\n \n+    public static ExceededMemoryLimitException exceededLocalRevocableMemoryLimit(DataSize maxMemory, String additionalFailureInfo)\n+    {\n+        return new ExceededMemoryLimitException(EXCEEDED_REVOCABLE_MEMORY_LIMIT,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1f44d2d48111d48cfa3f9a59319e402d9c57195"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MzE0ODI3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMToyNTo1NlrOHu-CkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMToyNTo1NlrOHu-CkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxMzAwOA==", "bodyText": "Maybe just make it long. No need to be optional if we set a large number for non-spilling case.", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r519013008", "createdAt": "2020-11-06T21:25:56Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java", "diffHunk": "@@ -81,6 +82,9 @@\n     @GuardedBy(\"this\")\n     private long peakNodeTotalMemory;\n \n+    @GuardedBy(\"this\")\n+    private Optional<Long> maxRevocableMemory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1f44d2d48111d48cfa3f9a59319e402d9c57195"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3OTU5OTkxOnYy", "diffSide": "RIGHT", "path": "presto-benchmark/src/test/java/com/facebook/presto/benchmark/MemoryLocalQueryRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzo0MDo0M1rOHy4oOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzo1NToxNlrOHy5Gcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzExODY1MA==", "bodyText": "this will cause compilation error", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r523118650", "createdAt": "2020-11-13T17:40:43Z", "author": {"login": "highker"}, "path": "presto-benchmark/src/test/java/com/facebook/presto/benchmark/MemoryLocalQueryRunner.java", "diffHunk": "@@ -80,6 +80,7 @@ public void installPlugin(Plugin plugin)\n                 new DataSize(1, GIGABYTE),\n                 new DataSize(2, GIGABYTE),\n                 new DataSize(1, GIGABYTE),\n+                Optional.empty(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3454f748714230ce7a77b198ed34356f2b666a6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEyNjM4Nw==", "bodyText": "Yeah let me fix, just found a couple of these. My maven has been acting up all week, I just cleaned out .m2. Let me push again.", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r523126387", "createdAt": "2020-11-13T17:55:16Z", "author": {"login": "sachdevs"}, "path": "presto-benchmark/src/test/java/com/facebook/presto/benchmark/MemoryLocalQueryRunner.java", "diffHunk": "@@ -80,6 +80,7 @@ public void installPlugin(Plugin plugin)\n                 new DataSize(1, GIGABYTE),\n                 new DataSize(2, GIGABYTE),\n                 new DataSize(1, GIGABYTE),\n+                Optional.empty(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzExODY1MA=="}, "originalCommit": {"oid": "f3454f748714230ce7a77b198ed34356f2b666a6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3OTYwNjA3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzo0MjozOFrOHy4r_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzo0MjozOFrOHy4r_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzExOTYxNQ==", "bodyText": "Make it final and put it with private final constants. Maybe add a TODO to say this will be tunable from session properties in the future.", "url": "https://github.com/prestodb/presto/pull/15401#discussion_r523119615", "createdAt": "2020-11-13T17:42:38Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/memory/QueryContext.java", "diffHunk": "@@ -81,6 +82,9 @@\n     @GuardedBy(\"this\")\n     private long peakNodeTotalMemory;\n \n+    @GuardedBy(\"this\")\n+    private long maxRevocableMemory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3454f748714230ce7a77b198ed34356f2b666a6"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3369, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}