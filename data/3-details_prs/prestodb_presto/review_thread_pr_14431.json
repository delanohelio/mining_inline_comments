{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MzM1MzE0", "number": 14431, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxODo1OTowN1rOD16bmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOTowMToxOFrOD16ezw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODU4NDU2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxODo1OTowN1rOGLlKBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOToxODoxOFrOGLlytQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NjI5Mg==", "bodyText": "Why do we need to recreate the server for each method? Starting and stopping a server is usually slow and prone to memory leaks", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414796292", "createdAt": "2020-04-24T18:59:07Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java", "diffHunk": "@@ -44,48 +49,38 @@\n     private final HttpClient client = new JettyHttpClient();\n     private TestingPrestoServer server;\n \n-    public TestQueryResource()\n-            throws Exception\n-    {\n-        server = new TestingPrestoServer();\n-    }\n-\n-    @BeforeClass\n+    @BeforeMethod", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0769cac3bb940fd02117222c08aa08a505c6486a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgwMTc1NA==", "bodyText": "I see why is it needed. Basically you need to recreate the server to reset the counters.\nWhat do you think about simply moving the runToCompletion  statements to the test itself? Then you can simply add the runToQueued and adjust the counters.", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414801754", "createdAt": "2020-04-24T19:09:00Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java", "diffHunk": "@@ -44,48 +49,38 @@\n     private final HttpClient client = new JettyHttpClient();\n     private TestingPrestoServer server;\n \n-    public TestQueryResource()\n-            throws Exception\n-    {\n-        server = new TestingPrestoServer();\n-    }\n-\n-    @BeforeClass\n+    @BeforeMethod", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NjI5Mg=="}, "originalCommit": {"oid": "0769cac3bb940fd02117222c08aa08a505c6486a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgwNjcwOQ==", "bodyText": "Sounds reasonable", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414806709", "createdAt": "2020-04-24T19:18:18Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java", "diffHunk": "@@ -44,48 +49,38 @@\n     private final HttpClient client = new JettyHttpClient();\n     private TestingPrestoServer server;\n \n-    public TestQueryResource()\n-            throws Exception\n-    {\n-        server = new TestingPrestoServer();\n-    }\n-\n-    @BeforeClass\n+    @BeforeMethod", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NjI5Mg=="}, "originalCommit": {"oid": "0769cac3bb940fd02117222c08aa08a505c6486a"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODU4NjE1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxODo1OTozMlrOGLlK9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOToxNjo0NVrOGLlveA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NjUzMw==", "bodyText": "We should initialize it in setup and close and nullify it in teardown to avoid memory leaks", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414796533", "createdAt": "2020-04-24T18:59:32Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java", "diffHunk": "@@ -44,48 +49,38 @@\n     private final HttpClient client = new JettyHttpClient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0769cac3bb940fd02117222c08aa08a505c6486a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgwNTg4MA==", "bodyText": "I close it in teardownClass, will nullify too", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414805880", "createdAt": "2020-04-24T19:16:45Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java", "diffHunk": "@@ -44,48 +49,38 @@\n     private final HttpClient client = new JettyHttpClient();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NjUzMw=="}, "originalCommit": {"oid": "0769cac3bb940fd02117222c08aa08a505c6486a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODU5Mjc5OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOTowMToxOFrOGLlOxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOTo1ODowNVrOGLnFtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NzUxMQ==", "bodyText": "Can we have lover timeouts? e.g.: 10s / 20s?", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414797511", "createdAt": "2020-04-24T19:01:18Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java", "diffHunk": "@@ -103,12 +98,64 @@ public void testGetQueryInfos()\n         assertStateCounts(infos, 0, 0, 0);\n     }\n \n+    @Test(timeOut = 60_000)\n+    public void testExpiredQueryInfo()\n+            throws Exception\n+    {\n+        runToQueued(\"SELECT 1\");\n+\n+        Thread.sleep(TimeUnit.SECONDS.toMillis(40));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0769cac3bb940fd02117222c08aa08a505c6486a"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgwNjgyNw==", "bodyText": "Sure", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414806827", "createdAt": "2020-04-24T19:18:30Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java", "diffHunk": "@@ -103,12 +98,64 @@ public void testGetQueryInfos()\n         assertStateCounts(infos, 0, 0, 0);\n     }\n \n+    @Test(timeOut = 60_000)\n+    public void testExpiredQueryInfo()\n+            throws Exception\n+    {\n+        runToQueued(\"SELECT 1\");\n+\n+        Thread.sleep(TimeUnit.SECONDS.toMillis(40));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NzUxMQ=="}, "originalCommit": {"oid": "0769cac3bb940fd02117222c08aa08a505c6486a"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgyNzk1OQ==", "bodyText": "nit: static import Thread.sleep and TimeUnit.SECONDS", "url": "https://github.com/prestodb/presto/pull/14431#discussion_r414827959", "createdAt": "2020-04-24T19:58:05Z", "author": {"login": "caithagoras"}, "path": "presto-main/src/test/java/com/facebook/presto/server/TestQueryResource.java", "diffHunk": "@@ -103,12 +98,64 @@ public void testGetQueryInfos()\n         assertStateCounts(infos, 0, 0, 0);\n     }\n \n+    @Test(timeOut = 60_000)\n+    public void testExpiredQueryInfo()\n+            throws Exception\n+    {\n+        runToQueued(\"SELECT 1\");\n+\n+        Thread.sleep(TimeUnit.SECONDS.toMillis(40));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5NzUxMQ=="}, "originalCommit": {"oid": "0769cac3bb940fd02117222c08aa08a505c6486a"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2812, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}