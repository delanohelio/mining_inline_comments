{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzOTA0ODQ4", "number": 15504, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjo1NTozOFrOFCUOGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjo1NTozOFrOFCUOGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTcyNzYyOnYy", "diffSide": "RIGHT", "path": "presto-password-authenticators/src/main/java/com/facebook/presto/password/file/FileAuthenticator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjo1NTozOFrOIBZZgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzo1OTowM1rOIGYhkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMzNTYxNg==", "bodyText": "Need a check to validate if file exists", "url": "https://github.com/prestodb/presto/pull/15504#discussion_r538335616", "createdAt": "2020-12-08T12:55:38Z", "author": {"login": "ashishtadose"}, "path": "presto-password-authenticators/src/main/java/com/facebook/presto/password/file/FileAuthenticator.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.password.file;\n+\n+import com.facebook.airlift.http.server.BasicPrincipal;\n+import com.facebook.presto.spi.security.AccessDeniedException;\n+import com.facebook.presto.spi.security.PasswordAuthenticator;\n+\n+import javax.inject.Inject;\n+\n+import java.io.File;\n+import java.security.Principal;\n+import java.util.function.Supplier;\n+\n+import static com.google.common.base.Suppliers.memoizeWithExpiration;\n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n+\n+public class FileAuthenticator\n+        implements PasswordAuthenticator\n+{\n+    private final Supplier<PasswordStore> passwordStoreSupplier;\n+\n+    @Inject\n+    public FileAuthenticator(FileConfig config)\n+    {\n+        File file = config.getPasswordFile();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c085b6737361db43d030ec756f09a313cbf6bf50"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk4NzUzNQ==", "bodyText": "@ashishtadose I have added the validation", "url": "https://github.com/prestodb/presto/pull/15504#discussion_r541987535", "createdAt": "2020-12-13T19:22:12Z", "author": {"login": "imjalpreet"}, "path": "presto-password-authenticators/src/main/java/com/facebook/presto/password/file/FileAuthenticator.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.password.file;\n+\n+import com.facebook.airlift.http.server.BasicPrincipal;\n+import com.facebook.presto.spi.security.AccessDeniedException;\n+import com.facebook.presto.spi.security.PasswordAuthenticator;\n+\n+import javax.inject.Inject;\n+\n+import java.io.File;\n+import java.security.Principal;\n+import java.util.function.Supplier;\n+\n+import static com.google.common.base.Suppliers.memoizeWithExpiration;\n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n+\n+public class FileAuthenticator\n+        implements PasswordAuthenticator\n+{\n+    private final Supplier<PasswordStore> passwordStoreSupplier;\n+\n+    @Inject\n+    public FileAuthenticator(FileConfig config)\n+    {\n+        File file = config.getPasswordFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMzNTYxNg=="}, "originalCommit": {"oid": "c085b6737361db43d030ec756f09a313cbf6bf50"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2NDE3OQ==", "bodyText": "looks good now", "url": "https://github.com/prestodb/presto/pull/15504#discussion_r543564179", "createdAt": "2020-12-15T17:59:03Z", "author": {"login": "ashishtadose"}, "path": "presto-password-authenticators/src/main/java/com/facebook/presto/password/file/FileAuthenticator.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.password.file;\n+\n+import com.facebook.airlift.http.server.BasicPrincipal;\n+import com.facebook.presto.spi.security.AccessDeniedException;\n+import com.facebook.presto.spi.security.PasswordAuthenticator;\n+\n+import javax.inject.Inject;\n+\n+import java.io.File;\n+import java.security.Principal;\n+import java.util.function.Supplier;\n+\n+import static com.google.common.base.Suppliers.memoizeWithExpiration;\n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n+\n+public class FileAuthenticator\n+        implements PasswordAuthenticator\n+{\n+    private final Supplier<PasswordStore> passwordStoreSupplier;\n+\n+    @Inject\n+    public FileAuthenticator(FileConfig config)\n+    {\n+        File file = config.getPasswordFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMzNTYxNg=="}, "originalCommit": {"oid": "c085b6737361db43d030ec756f09a313cbf6bf50"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3258, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}