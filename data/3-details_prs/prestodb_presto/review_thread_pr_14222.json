{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NjY3MTA2", "number": 14222, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOTo1NzowOFrODmnKew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMzo1OToxMlrODnSvuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODE0MTM5OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/OptimizedPartitionedOutputOperator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOTo1NzowOFrOF0IE8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOTowMDoyM1rOF0uEQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwMjYwOA==", "bodyText": "@yingsu00 perhaps, add a comment explaining this calculation and maybe consider moving it to the caller; e.g.  have the caller provide an estimate of how many rows there will be in a partition\nresetPositions(int estimatedPositionCount)", "url": "https://github.com/prestodb/presto/pull/14222#discussion_r390202608", "createdAt": "2020-03-10T09:57:08Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/OptimizedPartitionedOutputOperator.java", "diffHunk": "@@ -561,12 +565,13 @@ private static int getFixedWidthTypeSize(Type type)\n \n         private void resetPositions(int positionCount)\n         {\n-            positions = ensureCapacity(positions, positionCount);\n+            positions = ensureCapacity(positions, min(positionCount, (positionCount / partitionCount + 1) * 2));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f4e2723b6be8ca110beb8597ae9774efd0928e"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgyNTAyNw==", "bodyText": "@mbasmanova Thanks for the suggestion! I updated the PR with the change and added the following comments\n// We initialize the size of the positions array in each partitionBuffers to be at most the incoming page's positionCount, or roughly two times of positionCount \n// divided by the number of partitions. This is because the latter could be greater than the positionCount when the number of partitions is 1 or positionCount is 1.", "url": "https://github.com/prestodb/presto/pull/14222#discussion_r390825027", "createdAt": "2020-03-11T09:00:23Z", "author": {"login": "yingsu00"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/OptimizedPartitionedOutputOperator.java", "diffHunk": "@@ -561,12 +565,13 @@ private static int getFixedWidthTypeSize(Type type)\n \n         private void resetPositions(int positionCount)\n         {\n-            positions = ensureCapacity(positions, positionCount);\n+            positions = ensureCapacity(positions, min(positionCount, (positionCount / partitionCount + 1) * 2));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwMjYwOA=="}, "originalCommit": {"oid": "68f4e2723b6be8ca110beb8597ae9774efd0928e"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjg5NjExOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/OptimizedPartitionedOutputOperator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzowMzo1OFrOF018lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMzo1Mjo0MVrOF1NHcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk1NDEzMw==", "bodyText": "@yingsu00 nit: consider moving this comment and calculation of the estimated position count out of the loop to avoid repeating this computation over and over.", "url": "https://github.com/prestodb/presto/pull/14222#discussion_r390954133", "createdAt": "2020-03-11T13:03:58Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/OptimizedPartitionedOutputOperator.java", "diffHunk": "@@ -435,7 +437,9 @@ public void partitionPage(Page page)\n             int positionCount = page.getPositionCount();\n \n             for (int i = 0; i < partitionBuffers.length; i++) {\n-                partitionBuffers[i].resetPositions(positionCount);\n+                // We initialize the size of the positions array in each partitionBuffers to be at most the incoming page's positionCount, or roughly two times of positionCount", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddc219ecaae6f171d4c42d6c2fbe4177dfe46baa"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMzMzc0NA==", "bodyText": "@mbasmanova Thanks Masha. I moved the computation out of the loop as you suggested:\n            // We initialize the size of the positions array in each partitionBuffers to be at most the incoming page's positionCount, or roughly two times of positionCount\n            // divided by the number of partitions. This is because the latter could be greater than the positionCount when the number of partitions is 1 or positionCount is 1.\n            int initialPositionCountForEachBuffer = min(positionCount, (positionCount / partitionFunction.getPartitionCount() + 1) * 2);\n            for (int i = 0; i < partitionBuffers.length; i++) {\n                partitionBuffers[i].resetPositions(initialPositionCountForEachBuffer);\n            }", "url": "https://github.com/prestodb/presto/pull/14222#discussion_r391333744", "createdAt": "2020-03-11T23:52:41Z", "author": {"login": "yingsu00"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/OptimizedPartitionedOutputOperator.java", "diffHunk": "@@ -435,7 +437,9 @@ public void partitionPage(Page page)\n             int positionCount = page.getPositionCount();\n \n             for (int i = 0; i < partitionBuffers.length; i++) {\n-                partitionBuffers[i].resetPositions(positionCount);\n+                // We initialize the size of the positions array in each partitionBuffers to be at most the incoming page's positionCount, or roughly two times of positionCount", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk1NDEzMw=="}, "originalCommit": {"oid": "ddc219ecaae6f171d4c42d6c2fbe4177dfe46baa"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTI4MTg1OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/OptimizedPartitionedOutputOperator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMzo1OToxMlrOF1NOpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMzo1OToxMlrOF1NOpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMzNTU4OA==", "bodyText": "nit: estimatedPositionCountPerPartition ?", "url": "https://github.com/prestodb/presto/pull/14222#discussion_r391335588", "createdAt": "2020-03-11T23:59:12Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/OptimizedPartitionedOutputOperator.java", "diffHunk": "@@ -434,8 +436,11 @@ public void partitionPage(Page page)\n             // Populate positions to copy for each destination partition.\n             int positionCount = page.getPositionCount();\n \n+            // We initialize the size of the positions array in each partitionBuffers to be at most the incoming page's positionCount, or roughly two times of positionCount\n+            // divided by the number of partitions. This is because the latter could be greater than the positionCount when the number of partitions is 1 or positionCount is 1.\n+            int initialPositionCountForEachBuffer = min(positionCount, (positionCount / partitionFunction.getPartitionCount() + 1) * 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0328962d4e16d36f69ec54b70ea9c16f427402ca"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2876, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}