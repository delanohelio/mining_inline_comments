{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NDA0Mjc0", "number": 15316, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDozOTowMVrOEvWayw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDo1NjoyNFrOEvW9QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDg1ODM1OnYy", "diffSide": "RIGHT", "path": "presto-common/pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDozOTowMVrOHkSF_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMjoyNjo1MlrOHmJKkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgwNzIzMQ==", "bodyText": "This library is a part of our SPI, and we are trying to keep it clean of any dependencies. Is there an implementation in Java? If not - then we should probably implement it / copy it to the source.", "url": "https://github.com/prestodb/presto/pull/15316#discussion_r507807231", "createdAt": "2020-10-19T14:39:01Z", "author": {"login": "arhimondr"}, "path": "presto-common/pom.xml", "diffHunk": "@@ -37,6 +37,12 @@\n             <artifactId>jol-core</artifactId>\n         </dependency>\n \n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68228ddad1f3769f516d6a05e1f660b08ebb1584"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEwNDQ3Mg==", "bodyText": "@arhimondr I now vendored in the code from apache, lmk if that works", "url": "https://github.com/prestodb/presto/pull/15316#discussion_r508104472", "createdAt": "2020-10-19T22:42:25Z", "author": {"login": "daniel-ohayon"}, "path": "presto-common/pom.xml", "diffHunk": "@@ -37,6 +37,12 @@\n             <artifactId>jol-core</artifactId>\n         </dependency>\n \n+        <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgwNzIzMQ=="}, "originalCommit": {"oid": "68228ddad1f3769f516d6a05e1f660b08ebb1584"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc1ODA5OA==", "bodyText": "Sounds good", "url": "https://github.com/prestodb/presto/pull/15316#discussion_r509758098", "createdAt": "2020-10-21T22:26:52Z", "author": {"login": "arhimondr"}, "path": "presto-common/pom.xml", "diffHunk": "@@ -37,6 +37,12 @@\n             <artifactId>jol-core</artifactId>\n         </dependency>\n \n+        <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgwNzIzMQ=="}, "originalCommit": {"oid": "68228ddad1f3769f516d6a05e1f660b08ebb1584"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDkzMTYwOnYy", "diffSide": "RIGHT", "path": "presto-common/src/main/java/com/facebook/presto/common/type/TypeSignature.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDo1MzozMFrOHkSy1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyNTowNFrOHkW9_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgxODcxMQ==", "bodyText": "why not to keep it in lower case?", "url": "https://github.com/prestodb/presto/pull/15316#discussion_r507818711", "createdAt": "2020-10-19T14:53:30Z", "author": {"login": "arhimondr"}, "path": "presto-common/src/main/java/com/facebook/presto/common/type/TypeSignature.java", "diffHunk": "@@ -221,7 +222,10 @@ LongEnumMap getLongEnumMap()\n         VarcharEnumMap getVarcharEnumMap()\n         {\n             checkArgument(!isLongEnum, \"Invalid enum map format\");\n-            return new VarcharEnumMap(map);\n+            // Varchar enum values are base32-encoded so that they are case-insensitive, which is expected of TypeSigntures\n+            Base32 base32 = new Base32();\n+            return new VarcharEnumMap(map.entrySet().stream()\n+                    .collect(Collectors.toMap(Map.Entry::getKey, e -> new String(base32.decode(e.getValue().toUpperCase(ENGLISH))))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68228ddad1f3769f516d6a05e1f660b08ebb1584"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4NzEwMQ==", "bodyText": "because the base32 decoder expects uppercase letters in its encoding", "url": "https://github.com/prestodb/presto/pull/15316#discussion_r507887101", "createdAt": "2020-10-19T16:25:04Z", "author": {"login": "daniel-ohayon"}, "path": "presto-common/src/main/java/com/facebook/presto/common/type/TypeSignature.java", "diffHunk": "@@ -221,7 +222,10 @@ LongEnumMap getLongEnumMap()\n         VarcharEnumMap getVarcharEnumMap()\n         {\n             checkArgument(!isLongEnum, \"Invalid enum map format\");\n-            return new VarcharEnumMap(map);\n+            // Varchar enum values are base32-encoded so that they are case-insensitive, which is expected of TypeSigntures\n+            Base32 base32 = new Base32();\n+            return new VarcharEnumMap(map.entrySet().stream()\n+                    .collect(Collectors.toMap(Map.Entry::getKey, e -> new String(base32.decode(e.getValue().toUpperCase(ENGLISH))))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgxODcxMQ=="}, "originalCommit": {"oid": "68228ddad1f3769f516d6a05e1f660b08ebb1584"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDk0NjU3OnYy", "diffSide": "RIGHT", "path": "presto-common/src/test/java/com/facebook/presto/common/type/TestTypeSignature.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDo1NjoyNFrOHkS73g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyNDoyN1rOHkW8OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgyMTAyMg==", "bodyText": "Why are only the values that are encoded with base32? Are the keys not prone to this problem?", "url": "https://github.com/prestodb/presto/pull/15316#discussion_r507821022", "createdAt": "2020-10-19T14:56:24Z", "author": {"login": "arhimondr"}, "path": "presto-common/src/test/java/com/facebook/presto/common/type/TestTypeSignature.java", "diffHunk": "@@ -296,23 +296,23 @@ public void testIsCalculated()\n     public void testEnumSignature()\n     {\n         assertEquals(\n-                parseTypeSignature(\"test_enum(enum:varchar{\\\"test\\\" :\\\"\\\"\\\"\\\", \\\"hello\\\": \\\" \\\" , \\\"a\\\":\\\"}{{\\\" })\"),\n+                parseTypeSignature(\"test_enum(enum:varchar{\\\"test\\\" :\\\"EI======\\\", \\\"hello\\\": \\\"EA======\\\" , \\\"a\\\":\\\"PV5XW===\\\" })\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68228ddad1f3769f516d6a05e1f660b08ebb1584"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4NjY0OA==", "bodyText": "the keys must be case-insensitive because they can be used as qualified names (SELECT country.UK) which must be case-insensitive according to the SQL spec iiuc", "url": "https://github.com/prestodb/presto/pull/15316#discussion_r507886648", "createdAt": "2020-10-19T16:24:27Z", "author": {"login": "daniel-ohayon"}, "path": "presto-common/src/test/java/com/facebook/presto/common/type/TestTypeSignature.java", "diffHunk": "@@ -296,23 +296,23 @@ public void testIsCalculated()\n     public void testEnumSignature()\n     {\n         assertEquals(\n-                parseTypeSignature(\"test_enum(enum:varchar{\\\"test\\\" :\\\"\\\"\\\"\\\", \\\"hello\\\": \\\" \\\" , \\\"a\\\":\\\"}{{\\\" })\"),\n+                parseTypeSignature(\"test_enum(enum:varchar{\\\"test\\\" :\\\"EI======\\\", \\\"hello\\\": \\\"EA======\\\" , \\\"a\\\":\\\"PV5XW===\\\" })\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgyMTAyMg=="}, "originalCommit": {"oid": "68228ddad1f3769f516d6a05e1f660b08ebb1584"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3509, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}