{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczOTk3NDM3", "number": 14086, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMDo0MjowNFrODfsSQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMTowNjowNlrODgBGxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTU4MDE4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/cost/SampleStatsRule.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMDo0MjowNFrOFpi4UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNjoyMToxMlrOFp8JLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEwNzQwOA==", "bodyText": "extend SimpleStatsRule instead so the stats get normalized", "url": "https://github.com/prestodb/presto/pull/14086#discussion_r379107408", "createdAt": "2020-02-13T20:42:04Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/cost/SampleStatsRule.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.facebook.presto.cost;\n+\n+import com.facebook.presto.Session;\n+import com.facebook.presto.cost.ComposableStatsCalculator.Rule;\n+import com.facebook.presto.matching.Pattern;\n+import com.facebook.presto.sql.planner.TypeProvider;\n+import com.facebook.presto.sql.planner.iterative.Lookup;\n+import com.facebook.presto.sql.planner.plan.SampleNode;\n+\n+import java.util.Optional;\n+\n+import static com.facebook.presto.sql.planner.plan.Patterns.sample;\n+\n+public class SampleStatsRule\n+        implements Rule<SampleNode>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9110a8bedf81c731cad66ee314b876bd3e80f9c3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2Mzg1MA==", "bodyText": "Why do some rules need normalization but others don't?", "url": "https://github.com/prestodb/presto/pull/14086#discussion_r379163850", "createdAt": "2020-02-13T22:50:51Z", "author": {"login": "aweisberg"}, "path": "presto-main/src/main/java/com/facebook/presto/cost/SampleStatsRule.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.facebook.presto.cost;\n+\n+import com.facebook.presto.Session;\n+import com.facebook.presto.cost.ComposableStatsCalculator.Rule;\n+import com.facebook.presto.matching.Pattern;\n+import com.facebook.presto.sql.planner.TypeProvider;\n+import com.facebook.presto.sql.planner.iterative.Lookup;\n+import com.facebook.presto.sql.planner.plan.SampleNode;\n+\n+import java.util.Optional;\n+\n+import static com.facebook.presto.sql.planner.plan.Patterns.sample;\n+\n+public class SampleStatsRule\n+        implements Rule<SampleNode>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEwNzQwOA=="}, "originalCommit": {"oid": "9110a8bedf81c731cad66ee314b876bd3e80f9c3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE4MzQ0NQ==", "bodyText": "Thanks @rschlussel  for your help and review. I have amended the change now. I have similar question as @aweisberg . Can you help in terms of when normalization is required?", "url": "https://github.com/prestodb/presto/pull/14086#discussion_r379183445", "createdAt": "2020-02-13T23:49:53Z", "author": {"login": "ssaumitra"}, "path": "presto-main/src/main/java/com/facebook/presto/cost/SampleStatsRule.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.facebook.presto.cost;\n+\n+import com.facebook.presto.Session;\n+import com.facebook.presto.cost.ComposableStatsCalculator.Rule;\n+import com.facebook.presto.matching.Pattern;\n+import com.facebook.presto.sql.planner.TypeProvider;\n+import com.facebook.presto.sql.planner.iterative.Lookup;\n+import com.facebook.presto.sql.planner.plan.SampleNode;\n+\n+import java.util.Optional;\n+\n+import static com.facebook.presto.sql.planner.plan.Patterns.sample;\n+\n+public class SampleStatsRule\n+        implements Rule<SampleNode>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEwNzQwOA=="}, "originalCommit": {"oid": "9110a8bedf81c731cad66ee314b876bd3e80f9c3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwNzQxNQ==", "bodyText": "If you're only adjusting one field from stats but not others, you'd want to normalize. Normalization makes it so that e.g. if you set the row count less than the distinct value count, we reduce the distinct value count to match.\nAlmost all rules extend SimpleStatsRule right now. I think it would be quite reasonable to require it for every rule, or even to do it in the PlanNodeStatsEstimate builder or constructor, but that's beyond the scope here.", "url": "https://github.com/prestodb/presto/pull/14086#discussion_r379507415", "createdAt": "2020-02-14T15:55:31Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/cost/SampleStatsRule.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.facebook.presto.cost;\n+\n+import com.facebook.presto.Session;\n+import com.facebook.presto.cost.ComposableStatsCalculator.Rule;\n+import com.facebook.presto.matching.Pattern;\n+import com.facebook.presto.sql.planner.TypeProvider;\n+import com.facebook.presto.sql.planner.iterative.Lookup;\n+import com.facebook.presto.sql.planner.plan.SampleNode;\n+\n+import java.util.Optional;\n+\n+import static com.facebook.presto.sql.planner.plan.Patterns.sample;\n+\n+public class SampleStatsRule\n+        implements Rule<SampleNode>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEwNzQwOA=="}, "originalCommit": {"oid": "9110a8bedf81c731cad66ee314b876bd3e80f9c3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUxNDg1OQ==", "bodyText": "IMO implicit non-obvious knowledge like this should be documented somewhere. We can't rely on always having the right experts around to safely make changes to this code.", "url": "https://github.com/prestodb/presto/pull/14086#discussion_r379514859", "createdAt": "2020-02-14T16:09:07Z", "author": {"login": "aweisberg"}, "path": "presto-main/src/main/java/com/facebook/presto/cost/SampleStatsRule.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.facebook.presto.cost;\n+\n+import com.facebook.presto.Session;\n+import com.facebook.presto.cost.ComposableStatsCalculator.Rule;\n+import com.facebook.presto.matching.Pattern;\n+import com.facebook.presto.sql.planner.TypeProvider;\n+import com.facebook.presto.sql.planner.iterative.Lookup;\n+import com.facebook.presto.sql.planner.plan.SampleNode;\n+\n+import java.util.Optional;\n+\n+import static com.facebook.presto.sql.planner.plan.Patterns.sample;\n+\n+public class SampleStatsRule\n+        implements Rule<SampleNode>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEwNzQwOA=="}, "originalCommit": {"oid": "9110a8bedf81c731cad66ee314b876bd3e80f9c3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyMTMyNw==", "bodyText": "Agreed, though I think instead we should make it happen automatically by default, so that it's impossible to mess it up.", "url": "https://github.com/prestodb/presto/pull/14086#discussion_r379521327", "createdAt": "2020-02-14T16:21:12Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/cost/SampleStatsRule.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.facebook.presto.cost;\n+\n+import com.facebook.presto.Session;\n+import com.facebook.presto.cost.ComposableStatsCalculator.Rule;\n+import com.facebook.presto.matching.Pattern;\n+import com.facebook.presto.sql.planner.TypeProvider;\n+import com.facebook.presto.sql.planner.iterative.Lookup;\n+import com.facebook.presto.sql.planner.plan.SampleNode;\n+\n+import java.util.Optional;\n+\n+import static com.facebook.presto.sql.planner.plan.Patterns.sample;\n+\n+public class SampleStatsRule\n+        implements Rule<SampleNode>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEwNzQwOA=="}, "originalCommit": {"oid": "9110a8bedf81c731cad66ee314b876bd3e80f9c3"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODg1MTk0OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/cost/ComposableStatsCalculator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMDowODoxMVrOFqCUEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMDowODoxMVrOFqCUEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYyMjQxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    SimpleStatsRule has an advantage that cost rules get normalized.\n          \n          \n            \n                    SimpleStatsRule has an advantage that PlanNodeStatsEstimates get normalized.", "url": "https://github.com/prestodb/presto/pull/14086#discussion_r379622418", "createdAt": "2020-02-14T20:08:11Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/cost/ComposableStatsCalculator.java", "diffHunk": "@@ -82,6 +82,10 @@ public PlanNodeStatsEstimate calculateStats(PlanNode node, StatsProvider sourceS\n \n     public interface Rule<T extends PlanNode>\n     {\n+        /*\n+        It's preferable to extend SimpleStatsRule than using this Rule interface directly.\n+        SimpleStatsRule has an advantage that cost rules get normalized.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45e8d765a576fd02b344f6226b3a76799b6015e0"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODk5MTQwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/cost/ComposableStatsCalculator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMTowNjowNlrOFqDpFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMjozOTo1NVrOFqFoUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY0NDE4Mg==", "bodyText": "Use the /**\n*\n*/\nStyle of comment.\nThis should also be on the interface not the method.", "url": "https://github.com/prestodb/presto/pull/14086#discussion_r379644182", "createdAt": "2020-02-14T21:06:06Z", "author": {"login": "aweisberg"}, "path": "presto-main/src/main/java/com/facebook/presto/cost/ComposableStatsCalculator.java", "diffHunk": "@@ -82,6 +82,10 @@ public PlanNodeStatsEstimate calculateStats(PlanNode node, StatsProvider sourceS\n \n     public interface Rule<T extends PlanNode>\n     {\n+        /*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0344a83754b2db647773c8b60484cdb612e6ba3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY3Njc1Mw==", "bodyText": "Okay. Done.", "url": "https://github.com/prestodb/presto/pull/14086#discussion_r379676753", "createdAt": "2020-02-14T22:39:55Z", "author": {"login": "ssaumitra"}, "path": "presto-main/src/main/java/com/facebook/presto/cost/ComposableStatsCalculator.java", "diffHunk": "@@ -82,6 +82,10 @@ public PlanNodeStatsEstimate calculateStats(PlanNode node, StatsProvider sourceS\n \n     public interface Rule<T extends PlanNode>\n     {\n+        /*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY0NDE4Mg=="}, "originalCommit": {"oid": "f0344a83754b2db647773c8b60484cdb612e6ba3"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2992, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}