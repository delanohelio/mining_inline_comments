{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2NTMwMjIx", "number": 15569, "title": "Fix memory revoking accounting", "bodyText": "Previously, MemoryRevokingScheduler (and its task-threshold flavored counterpart) would find running tasks but then operate on them by traversing their QueryContext. This led to two significant problems:\n\nMemoryRevokingScheduler would over-count the amount of memory that was already being revoked since it would traverse each task for a given query from all other tasks in that query.\nBoth flavors of memory revoking scheduler would repeatedly perform the same traversals and attempt to revoke memory from the same tasks and operators based on the number of tasks a given query had\n\nThis PR also contains some cleanup commits that refactor related methods to avoid redundant work and to use cheaper methods than SqlTask#getTaskStatus() when possible.\n== RELEASE NOTES ==\n\nGeneral Changes\n* Fix accounting for revocable memory that could cause some queries not to spill when they should.", "createdAt": "2020-12-29T15:27:49Z", "url": "https://github.com/prestodb/presto/pull/15569", "merged": true, "mergeCommit": {"oid": "a60b08124b7d64d37eedda67de78f8fa2c10b005"}, "closed": true, "closedAt": "2021-01-12T19:50:20Z", "author": {"login": "pettyjamesm"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdq89l5ABqjQxNTUwNTgzNTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdvgl5hAFqTU2NjYzNTQ0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14db8e0d0fe62f786a8867ec618b400cd073b5aa", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/14db8e0d0fe62f786a8867ec618b400cd073b5aa", "committedDate": "2020-12-29T15:06:01Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}, "afterCommit": {"oid": "63ef64ca352ef0f20f7748c3793889d33f368665", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/63ef64ca352ef0f20f7748c3793889d33f368665", "committedDate": "2020-12-29T16:00:58Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63ef64ca352ef0f20f7748c3793889d33f368665", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/63ef64ca352ef0f20f7748c3793889d33f368665", "committedDate": "2020-12-29T16:00:58Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}, "afterCommit": {"oid": "9d26bdf8e9098174a5f66756a70d1ff6dbadcac4", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/9d26bdf8e9098174a5f66756a70d1ff6dbadcac4", "committedDate": "2020-12-29T17:10:03Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d26bdf8e9098174a5f66756a70d1ff6dbadcac4", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/9d26bdf8e9098174a5f66756a70d1ff6dbadcac4", "committedDate": "2020-12-29T17:10:03Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}, "afterCommit": {"oid": "e1112aeee6826fe08acac1f09b5035b582e51c86", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/e1112aeee6826fe08acac1f09b5035b582e51c86", "committedDate": "2021-01-04T14:14:58Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1112aeee6826fe08acac1f09b5035b582e51c86", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/e1112aeee6826fe08acac1f09b5035b582e51c86", "committedDate": "2021-01-04T14:14:58Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}, "afterCommit": {"oid": "9c6c9606baf7176edffd053b2e8150b3f99fbe1b", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/9c6c9606baf7176edffd053b2e8150b3f99fbe1b", "committedDate": "2021-01-04T19:40:07Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c6c9606baf7176edffd053b2e8150b3f99fbe1b", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/9c6c9606baf7176edffd053b2e8150b3f99fbe1b", "committedDate": "2021-01-04T19:40:07Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}, "afterCommit": {"oid": "2748e99e4576894afea6124ea72ca3d7e83a7e41", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/2748e99e4576894afea6124ea72ca3d7e83a7e41", "committedDate": "2021-01-07T14:20:08Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2748e99e4576894afea6124ea72ca3d7e83a7e41", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/2748e99e4576894afea6124ea72ca3d7e83a7e41", "committedDate": "2021-01-07T14:20:08Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}, "afterCommit": {"oid": "05da68e375d3e0ebfc4155cf11faa2f183aaf113", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/05da68e375d3e0ebfc4155cf11faa2f183aaf113", "committedDate": "2021-01-08T14:47:01Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9e5298175ffed69f3630394a4786a5f0cca20fe", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/a9e5298175ffed69f3630394a4786a5f0cca20fe", "committedDate": "2021-01-08T21:09:21Z", "message": "Add SqlTask#getTaskState() and SqlTask#getTaskCreateTime()\n\nAvoids using comparatively more expensive methods like getTaskStats()\nor getTaskStatus() when only these specific fields are required and\nno particular synchronization order is being enforced."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2305f97e8f60ff083902546768185a67156e3c77", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/2305f97e8f60ff083902546768185a67156e3c77", "committedDate": "2021-01-08T21:09:37Z", "message": "Use cheaper SqlTask#getTaskId() in TaskThresholdMemoryRevokingScheduler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "835ad33828f17ba3c0528ab0096d0939ca152cb0", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/835ad33828f17ba3c0528ab0096d0939ca152cb0", "committedDate": "2021-01-08T21:11:46Z", "message": "Refactor MemoryRevokingScheduler to avoid redundant work\n\nAvoids repeatedly traversing the tasks collection to filter running\ntasks for the given memory pool and sorting them between summing the\nin progress revoking and initiating subsequent revoking actions on\noperators"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05da68e375d3e0ebfc4155cf11faa2f183aaf113", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/05da68e375d3e0ebfc4155cf11faa2f183aaf113", "committedDate": "2021-01-08T14:47:01Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}, "afterCommit": {"oid": "e06a278bcd9ebc352963d324ca70bafa704794fa", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/e06a278bcd9ebc352963d324ca70bafa704794fa", "committedDate": "2021-01-08T21:12:00Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e06a278bcd9ebc352963d324ca70bafa704794fa", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/e06a278bcd9ebc352963d324ca70bafa704794fa", "committedDate": "2021-01-08T21:12:00Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}, "afterCommit": {"oid": "3190e1306d3b8e2e5e32a516ca5b98ff52916e47", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/3190e1306d3b8e2e5e32a516ca5b98ff52916e47", "committedDate": "2021-01-08T21:13:08Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1NjQzNTEz", "url": "https://github.com/prestodb/presto/pull/15569#pullrequestreview-565643513", "createdAt": "2021-01-11T18:50:36Z", "commit": {"oid": "3190e1306d3b8e2e5e32a516ca5b98ff52916e47"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODo1MDozNlrOIRivFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODo1Mzo1N1rOIRi2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTI2NTgxMw==", "bodyText": "@pettyjamesm  can you add a simple test which tests specifically the change made by this PR? I.e. something that catches the original bug that would fail without this PR.", "url": "https://github.com/prestodb/presto/pull/15569#discussion_r555265813", "createdAt": "2021-01-11T18:50:36Z", "author": {"login": "sachdevs"}, "path": "presto-main/src/test/java/com/facebook/presto/execution/TestMemoryRevokingScheduler.java", "diffHunk": "@@ -553,31 +557,47 @@ private void assertMemoryRevokingNotRequested()\n         assertMemoryRevokingRequestedFor();\n     }\n \n-    private SqlTask newSqlTask()\n+    private SqlTask newSqlTask(QueryId queryId)\n     {\n-        TaskId taskId = new TaskId(\"query\", 0, 0, idGeneator.incrementAndGet());\n+        QueryContext queryContext = getOrCreateQueryContext(queryId);\n+\n+        TaskId taskId = new TaskId(queryId.getId(), 0, 0, idGeneator.incrementAndGet());\n         URI location = URI.create(\"fake://task/\" + taskId);\n \n         return createSqlTask(\n                 taskId,\n                 location,\n                 \"fake\",\n-                new QueryContext(new QueryId(\"query\"),\n-                        new DataSize(1, MEGABYTE),\n-                        new DataSize(2, MEGABYTE),\n-                        new DataSize(1, MEGABYTE),\n-                        new DataSize(1, GIGABYTE),\n-                        memoryPool,\n-                        new TestingGcMonitor(),\n-                        executor,\n-                        scheduledExecutor,\n-                        new DataSize(1, GIGABYTE),\n-                        spillSpaceTracker),\n+                queryContext,\n                 sqlTaskExecutionFactory,\n                 new MockExchangeClientSupplier(),\n                 executor,\n                 Functions.identity(),\n                 new DataSize(32, MEGABYTE),\n                 new CounterStat());\n     }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3190e1306d3b8e2e5e32a516ca5b98ff52916e47"}, "originalPosition": 213}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTI2NzYzNw==", "bodyText": "nit: functional style instead\nreturn taskContext.filter(context -> context.getTaskMemoryContext().getRevocableMemory() >= maxRevocableMemoryPerTask).isPresent();", "url": "https://github.com/prestodb/presto/pull/15569#discussion_r555267637", "createdAt": "2021-01-11T18:53:57Z", "author": {"login": "sachdevs"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/TaskThresholdMemoryRevokingScheduler.java", "diffHunk": "@@ -167,41 +168,38 @@ private void scheduleRevoking()\n \n     private boolean memoryRevokingNeeded(SqlTask task)\n     {\n-        return task.getTaskInfo().getStats().getRevocableMemoryReservationInBytes() >= maxRevocableMemoryPerTask;\n+        Optional<TaskContext> taskContext = task.getTaskContext();\n+        if (taskContext.isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3190e1306d3b8e2e5e32a516ca5b98ff52916e47"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "089f92bc9545c56ea58b1c8167c3596304e6b35f", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/089f92bc9545c56ea58b1c8167c3596304e6b35f", "committedDate": "2021-01-11T19:48:42Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3190e1306d3b8e2e5e32a516ca5b98ff52916e47", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/3190e1306d3b8e2e5e32a516ca5b98ff52916e47", "committedDate": "2021-01-08T21:13:08Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}, "afterCommit": {"oid": "089f92bc9545c56ea58b1c8167c3596304e6b35f", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/089f92bc9545c56ea58b1c8167c3596304e6b35f", "committedDate": "2021-01-11T19:48:42Z", "message": "Fix MemoryRevokingScheduler from re-visiting tasks for the same query\n\nPreviously, MemoryRevokingScheduler (and its task-threshold flavored\ncounterpart) would find running tasks but then operate on them by\ntraversing their QueryContext. This led to two significant problems:\n- MemoryRevokingScheduler would over-count the amount of memory that\n  was already being revoked since it would traverse each task for a\n  given query from all other tasks in that query.\n- Both flavors of memory revoking scheduler would repeatedly perform\n  the same traversals and attempt to revoke memory from the same tasks\n  and operators based on the number of tasks a given query had"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2NjM1NDQ3", "url": "https://github.com/prestodb/presto/pull/15569#pullrequestreview-566635447", "createdAt": "2021-01-12T19:50:02Z", "commit": {"oid": "089f92bc9545c56ea58b1c8167c3596304e6b35f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4612, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}