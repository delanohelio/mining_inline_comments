{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5ODI0NDM2", "number": 14449, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDowNjo0N1rOD4MD6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDowNzoxNFrOD4MEZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjQ0NDU3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDowNjo0N1rOGO4ebw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDowNjo0N1rOGO4ebw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1ODU0Mw==", "bodyText": "Spell out CSE?", "url": "https://github.com/prestodb/presto/pull/14449#discussion_r418258543", "createdAt": "2020-04-30T20:06:47Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java", "diffHunk": "@@ -328,10 +327,7 @@ private ClassDefinition definePageProjectWorkClass(SqlFunctionProperties sqlFunc\n                 .append(thisVariable.setField(nextIndexOrPositionField, selectedPositions.invoke(\"getOffset\", int.class)))\n                 .append(thisVariable.setField(resultField, constantNull(Block.class)));\n \n-        cseFields.values().forEach(fields -> {\n-            body.append(thisVariable.setField(fields.evaluatedField, constantBoolean(false)));\n-            body.append(thisVariable.setField(fields.resultField, constantNull(fields.resultType)));\n-        });\n+        initializeCSEFields(cseFields.values(), thisVariable, body);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b50b6e94e1ee4c0de34c1f282aeccf1ec8c2eb1d"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjQ0NTEyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDowNzowMVrOGO4e0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDowNzowMVrOGO4e0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1ODY0Mg==", "bodyText": "same", "url": "https://github.com/prestodb/presto/pull/14449#discussion_r418258642", "createdAt": "2020-04-30T20:07:01Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java", "diffHunk": "@@ -580,7 +576,22 @@ private ClassDefinition defineFilterClass(SqlFunctionProperties sqlFunctionPrope\n         CachedInstanceBinder cachedInstanceBinder = new CachedInstanceBinder(classDefinition, callSiteBinder);\n \n         Map<LambdaDefinitionExpression, CompiledLambda> compiledLambdaMap = generateMethodsForLambda(classDefinition, callSiteBinder, cachedInstanceBinder, filter, metadata, sqlFunctionProperties);\n-        generateFilterMethod(sqlFunctionProperties, classDefinition, callSiteBinder, cachedInstanceBinder, compiledLambdaMap, filter);\n+\n+        // cse\n+        Map<VariableReferenceExpression, CommonSubExpressionFields> cseFields = ImmutableMap.of();\n+        if (isOptimizeCommonSubExpression) {\n+            Map<Integer, Map<RowExpression, VariableReferenceExpression>> commonSubExpressionsByLevel = collectCSEByLevel(filter);\n+            if (!commonSubExpressionsByLevel.isEmpty()) {\n+                cseFields = declareCommonSubExpressionFields(classDefinition, commonSubExpressionsByLevel);\n+                generateCSEMethods(sqlFunctionProperties, classDefinition, callSiteBinder, cachedInstanceBinder, compiledLambdaMap, commonSubExpressionsByLevel, cseFields);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b50b6e94e1ee4c0de34c1f282aeccf1ec8c2eb1d"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjQ0NTgxOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDowNzoxNFrOGO4fQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDowNzoxNFrOGO4fQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1ODc1NA==", "bodyText": "same", "url": "https://github.com/prestodb/presto/pull/14449#discussion_r418258754", "createdAt": "2020-04-30T20:07:14Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java", "diffHunk": "@@ -686,15 +707,17 @@ private MethodDefinition generateFilterMethod(\n \n         Scope scope = method.getScope();\n         BytecodeBlock body = method.getBody();\n+        Variable thisVariable = scope.getThis();\n \n         declareBlockVariables(ImmutableList.of(filter), page, scope, body);\n+        cseFields.values().forEach(fields -> body.append(thisVariable.setField(fields.evaluatedField, constantBoolean(false))));\n \n         Variable wasNullVariable = scope.declareVariable(\"wasNull\", body, constantFalse());\n         RowExpressionCompiler compiler = new RowExpressionCompiler(\n                 classDefinition,\n                 callSiteBinder,\n                 cachedInstanceBinder,\n-                fieldReferenceCompiler(callSiteBinder),\n+                new CSEFieldAndVariableReferenceCompiler(callSiteBinder, cseFields, thisVariable),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b50b6e94e1ee4c0de34c1f282aeccf1ec8c2eb1d"}, "originalPosition": 149}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2825, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}