{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNTA3ODU5", "number": 15537, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNjoyNzoyNVrOFICjPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzoyMjoyMVrOFLenog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTc0NzE4OnYy", "diffSide": "RIGHT", "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/TeradataDateFunctions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNjoyNzoyNVrOIJv4RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzo1NDozNFrOIJ78fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA5MjU0OQ==", "bodyText": "lets add a comment telling why we need a different parser and formatter", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r547092549", "createdAt": "2020-12-22T06:27:25Z", "author": {"login": "ajaygeorge"}, "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/TeradataDateFunctions.java", "diffHunk": "@@ -35,23 +39,30 @@\n import static com.facebook.presto.common.type.TimeZoneKey.getTimeZoneKeys;\n import static com.facebook.presto.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n import static com.facebook.presto.spi.StandardErrorCode.INVALID_FUNCTION_ARGUMENT;\n-import static com.facebook.presto.teradata.functions.dateformat.DateFormatParser.createDateTimeFormatter;\n import static com.google.common.base.Throwables.throwIfInstanceOf;\n import static io.airlift.slice.Slices.utf8Slice;\n import static java.nio.charset.StandardCharsets.UTF_8;\n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n \n public final class TeradataDateFunctions\n {\n+    private static final ThreadLocalCache<Slice, DateTimeFormatter> DATETIME_PARSER_CACHE =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "025073af7012a3f4d134458b9ebfd7ff445b5547"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI5MDIzNw==", "bodyText": "Resolved in 2b89c16", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r547290237", "createdAt": "2020-12-22T13:54:34Z", "author": {"login": "rk13"}, "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/TeradataDateFunctions.java", "diffHunk": "@@ -35,23 +39,30 @@\n import static com.facebook.presto.common.type.TimeZoneKey.getTimeZoneKeys;\n import static com.facebook.presto.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n import static com.facebook.presto.spi.StandardErrorCode.INVALID_FUNCTION_ARGUMENT;\n-import static com.facebook.presto.teradata.functions.dateformat.DateFormatParser.createDateTimeFormatter;\n import static com.google.common.base.Throwables.throwIfInstanceOf;\n import static io.airlift.slice.Slices.utf8Slice;\n import static java.nio.charset.StandardCharsets.UTF_8;\n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n \n public final class TeradataDateFunctions\n {\n+    private static final ThreadLocalCache<Slice, DateTimeFormatter> DATETIME_PARSER_CACHE =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA5MjU0OQ=="}, "originalCommit": {"oid": "025073af7012a3f4d134458b9ebfd7ff445b5547"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTc0ODM1OnYy", "diffSide": "RIGHT", "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/dateformat/DateFormatParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNjoyODowMFrOIJv44Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzo1NzoyMlrOIJ8CWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA5MjcwNQ==", "bodyText": "Is this comment still valid ?", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r547092705", "createdAt": "2020-12-22T06:28:00Z", "author": {"login": "ajaygeorge"}, "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/dateformat/DateFormatParser.java", "diffHunk": "@@ -40,28 +70,29 @@ public static DateTimeFormatter createDateTimeFormatter(String format)\n                     builder.appendLiteral(token.getText());\n                     break;\n                 case DateFormat.DD:\n-                    builder.appendDayOfMonth(2);\n+                    builder.appendValue(ChronoField.DAY_OF_MONTH, mode.minTwoPositionFieldWidth, 2, SignStyle.NOT_NEGATIVE);\n                     break;\n                 case DateFormat.HH24:\n-                    builder.appendHourOfDay(2);\n+                    builder.appendValue(ChronoField.HOUR_OF_DAY, mode.minTwoPositionFieldWidth, 2, SignStyle.NOT_NEGATIVE);\n                     break;\n                 case DateFormat.HH:\n-                    builder.appendHourOfHalfday(2);\n+                    // ChronoField.HOUR_OF_AMPM should be used for HH after format extended to include AM/PM token", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "025073af7012a3f4d134458b9ebfd7ff445b5547"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI5MTczOQ==", "bodyText": "At the moment format does not allow to include AM/PM token, thus it was never possible to specify f.e. PM hours using 'HH' token in format. In 2b89c16 added more explanation on the matter.", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r547291739", "createdAt": "2020-12-22T13:57:22Z", "author": {"login": "rk13"}, "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/dateformat/DateFormatParser.java", "diffHunk": "@@ -40,28 +70,29 @@ public static DateTimeFormatter createDateTimeFormatter(String format)\n                     builder.appendLiteral(token.getText());\n                     break;\n                 case DateFormat.DD:\n-                    builder.appendDayOfMonth(2);\n+                    builder.appendValue(ChronoField.DAY_OF_MONTH, mode.minTwoPositionFieldWidth, 2, SignStyle.NOT_NEGATIVE);\n                     break;\n                 case DateFormat.HH24:\n-                    builder.appendHourOfDay(2);\n+                    builder.appendValue(ChronoField.HOUR_OF_DAY, mode.minTwoPositionFieldWidth, 2, SignStyle.NOT_NEGATIVE);\n                     break;\n                 case DateFormat.HH:\n-                    builder.appendHourOfHalfday(2);\n+                    // ChronoField.HOUR_OF_AMPM should be used for HH after format extended to include AM/PM token", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA5MjcwNQ=="}, "originalCommit": {"oid": "025073af7012a3f4d134458b9ebfd7ff445b5547"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTc1MzM4OnYy", "diffSide": "RIGHT", "path": "presto-teradata-functions/src/test/java/com/facebook/presto/teradata/functions/TestTeradataDateFunctions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNjozMDoxOFrOIJv7vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNDowMjowNVrOIJ8L6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA5MzQzNw==", "bodyText": "aren't these all testing the same thing?", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r547093437", "createdAt": "2020-12-22T06:30:18Z", "author": {"login": "ajaygeorge"}, "path": "presto-teradata-functions/src/test/java/com/facebook/presto/teradata/functions/TestTeradataDateFunctions.java", "diffHunk": "@@ -93,16 +93,23 @@ public void testYY()\n         assertVarchar(\"to_char(TIMESTAMP '1988-04-08','yy')\", \"88\");\n         assertTimestamp(\"to_timestamp('88/04/08','yy/mm/dd')\", 2088, 4, 8, 0, 0, 0);\n         assertDate(\"to_date('88/04/08','yy/mm/dd')\", 2088, 4, 8);\n+\n+        assertTimestamp(\"to_timestamp('00/04/08','yy/mm/dd')\", 2000, 4, 8, 0, 0, 0);\n+        assertTimestamp(\"to_timestamp('20/04/08','yy/mm/dd')\", 2020, 4, 8, 0, 0, 0);\n+        assertTimestamp(\"to_timestamp('40/04/08','yy/mm/dd')\", 2040, 4, 8, 0, 0, 0);\n+        assertTimestamp(\"to_timestamp('60/04/08','yy/mm/dd')\", 2060, 4, 8, 0, 0, 0);\n+        assertTimestamp(\"to_timestamp('80/04/08','yy/mm/dd')\", 2080, 4, 8, 0, 0, 0);\n+        assertTimestamp(\"to_timestamp('99/04/08','yy/mm/dd')\", 2099, 4, 8, 0, 0, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "025073af7012a3f4d134458b9ebfd7ff445b5547"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI5NDE4NQ==", "bodyText": "Thank you, good point. Removed unnecessary asserts in 2b89c16", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r547294185", "createdAt": "2020-12-22T14:02:05Z", "author": {"login": "rk13"}, "path": "presto-teradata-functions/src/test/java/com/facebook/presto/teradata/functions/TestTeradataDateFunctions.java", "diffHunk": "@@ -93,16 +93,23 @@ public void testYY()\n         assertVarchar(\"to_char(TIMESTAMP '1988-04-08','yy')\", \"88\");\n         assertTimestamp(\"to_timestamp('88/04/08','yy/mm/dd')\", 2088, 4, 8, 0, 0, 0);\n         assertDate(\"to_date('88/04/08','yy/mm/dd')\", 2088, 4, 8);\n+\n+        assertTimestamp(\"to_timestamp('00/04/08','yy/mm/dd')\", 2000, 4, 8, 0, 0, 0);\n+        assertTimestamp(\"to_timestamp('20/04/08','yy/mm/dd')\", 2020, 4, 8, 0, 0, 0);\n+        assertTimestamp(\"to_timestamp('40/04/08','yy/mm/dd')\", 2040, 4, 8, 0, 0, 0);\n+        assertTimestamp(\"to_timestamp('60/04/08','yy/mm/dd')\", 2060, 4, 8, 0, 0, 0);\n+        assertTimestamp(\"to_timestamp('80/04/08','yy/mm/dd')\", 2080, 4, 8, 0, 0, 0);\n+        assertTimestamp(\"to_timestamp('99/04/08','yy/mm/dd')\", 2099, 4, 8, 0, 0, 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA5MzQzNw=="}, "originalCommit": {"oid": "025073af7012a3f4d134458b9ebfd7ff445b5547"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTc1NjUzOnYy", "diffSide": "RIGHT", "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/TeradataDateFunctions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNjozMTo1MlrOIJv9gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNDowMzo0OVrOIJ8Piw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA5Mzg5MQ==", "bodyText": "ZoneRulesException is a runtime exception.\nIf we are catching it let us log the error so that we are not silently moving on.", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r547093891", "createdAt": "2020-12-22T06:31:52Z", "author": {"login": "ajaygeorge"}, "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/TeradataDateFunctions.java", "diffHunk": "@@ -35,23 +39,30 @@\n import static com.facebook.presto.common.type.TimeZoneKey.getTimeZoneKeys;\n import static com.facebook.presto.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n import static com.facebook.presto.spi.StandardErrorCode.INVALID_FUNCTION_ARGUMENT;\n-import static com.facebook.presto.teradata.functions.dateformat.DateFormatParser.createDateTimeFormatter;\n import static com.google.common.base.Throwables.throwIfInstanceOf;\n import static io.airlift.slice.Slices.utf8Slice;\n import static java.nio.charset.StandardCharsets.UTF_8;\n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n \n public final class TeradataDateFunctions\n {\n+    private static final ThreadLocalCache<Slice, DateTimeFormatter> DATETIME_PARSER_CACHE =\n+            new ThreadLocalCache<>(100, format -> DateFormatParser.createDateTimeParser(format.toStringUtf8()));\n+\n     private static final ThreadLocalCache<Slice, DateTimeFormatter> DATETIME_FORMATTER_CACHE =\n-            new ThreadLocalCache<>(100, format -> createDateTimeFormatter(format.toStringUtf8()));\n+            new ThreadLocalCache<>(100, format -> DateFormatParser.createDateTimeFormatter(format.toStringUtf8()));\n \n-    private static final ISOChronology[] CHRONOLOGIES = new ISOChronology[MAX_TIME_ZONE_KEY + 1];\n+    private static final ZoneId[] ZONE_IDS = new ZoneId[MAX_TIME_ZONE_KEY + 1];\n \n     static {\n         for (TimeZoneKey timeZoneKey : getTimeZoneKeys()) {\n-            DateTimeZone dateTimeZone = DateTimeZone.forID(timeZoneKey.getId());\n-            CHRONOLOGIES[timeZoneKey.getKey()] = ISOChronology.getInstance(dateTimeZone);\n+            try {\n+                ZONE_IDS[timeZoneKey.getKey()] = ZoneId.of(timeZoneKey.getId());\n+            }\n+            catch (ZoneRulesException ignored) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "025073af7012a3f4d134458b9ebfd7ff445b5547"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI5NTExNQ==", "bodyText": "Log added in 2b89c16", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r547295115", "createdAt": "2020-12-22T14:03:49Z", "author": {"login": "rk13"}, "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/TeradataDateFunctions.java", "diffHunk": "@@ -35,23 +39,30 @@\n import static com.facebook.presto.common.type.TimeZoneKey.getTimeZoneKeys;\n import static com.facebook.presto.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n import static com.facebook.presto.spi.StandardErrorCode.INVALID_FUNCTION_ARGUMENT;\n-import static com.facebook.presto.teradata.functions.dateformat.DateFormatParser.createDateTimeFormatter;\n import static com.google.common.base.Throwables.throwIfInstanceOf;\n import static io.airlift.slice.Slices.utf8Slice;\n import static java.nio.charset.StandardCharsets.UTF_8;\n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n \n public final class TeradataDateFunctions\n {\n+    private static final ThreadLocalCache<Slice, DateTimeFormatter> DATETIME_PARSER_CACHE =\n+            new ThreadLocalCache<>(100, format -> DateFormatParser.createDateTimeParser(format.toStringUtf8()));\n+\n     private static final ThreadLocalCache<Slice, DateTimeFormatter> DATETIME_FORMATTER_CACHE =\n-            new ThreadLocalCache<>(100, format -> createDateTimeFormatter(format.toStringUtf8()));\n+            new ThreadLocalCache<>(100, format -> DateFormatParser.createDateTimeFormatter(format.toStringUtf8()));\n \n-    private static final ISOChronology[] CHRONOLOGIES = new ISOChronology[MAX_TIME_ZONE_KEY + 1];\n+    private static final ZoneId[] ZONE_IDS = new ZoneId[MAX_TIME_ZONE_KEY + 1];\n \n     static {\n         for (TimeZoneKey timeZoneKey : getTimeZoneKeys()) {\n-            DateTimeZone dateTimeZone = DateTimeZone.forID(timeZoneKey.getId());\n-            CHRONOLOGIES[timeZoneKey.getKey()] = ISOChronology.getInstance(dateTimeZone);\n+            try {\n+                ZONE_IDS[timeZoneKey.getKey()] = ZoneId.of(timeZoneKey.getId());\n+            }\n+            catch (ZoneRulesException ignored) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA5Mzg5MQ=="}, "originalCommit": {"oid": "025073af7012a3f4d134458b9ebfd7ff445b5547"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NTc2NDQxOnYy", "diffSide": "RIGHT", "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/dateformat/DateFormatParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzowNTo1NFrOIOqxFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzowNTo1NFrOIOqxFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1MTY2OQ==", "bodyText": "static import DAY_OF_MONTH and all the various ChronoFields you use here.\nstatic import NOT_NEGATIVE", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r552251669", "createdAt": "2021-01-05T23:05:54Z", "author": {"login": "rschlussel"}, "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/dateformat/DateFormatParser.java", "diffHunk": "@@ -18,50 +18,82 @@\n import com.facebook.presto.teradata.functions.DateFormat;\n import org.antlr.v4.runtime.ANTLRInputStream;\n import org.antlr.v4.runtime.Token;\n-import org.joda.time.format.DateTimeFormatter;\n-import org.joda.time.format.DateTimeFormatterBuilder;\n \n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeFormatterBuilder;\n+import java.time.format.SignStyle;\n+import java.time.temporal.ChronoField;\n import java.util.List;\n \n import static com.facebook.presto.spi.StandardErrorCode.INVALID_FUNCTION_ARGUMENT;\n \n public class DateFormatParser\n {\n+    private enum Mode\n+    {\n+        // Do not require leading zero for parsing two position date fields (MM, DD, HH, HH24, MI, SS)\n+        // E.g. \"to_timestamp('1988/4/8 2:3:4','yyyy/mm/dd hh24:mi:ss')\"\n+        PARSER(1),\n+\n+        // Add leading zero for formatting single valued two position date fields (MM, DD, HH, HH24, MI, SS)\n+        // E.g. \"to_char(TIMESTAMP '1988-4-8 2:3:4','yyyy/mm/dd hh24:mi:ss')\" evaluates to \"1988/04/08 02:03:04\"\n+        FORMATTER(2);\n+\n+        final int minTwoPositionFieldWidth;\n+\n+        Mode(int value)\n+        {\n+            this.minTwoPositionFieldWidth = value;\n+        }\n+    }\n+\n     private DateFormatParser()\n     {\n     }\n \n     public static DateTimeFormatter createDateTimeFormatter(String format)\n+    {\n+        return createDateTimeFormatterImpl(format, Mode.FORMATTER);\n+    }\n+\n+    public static DateTimeFormatter createDateTimeParser(String format)\n+    {\n+        return createDateTimeFormatterImpl(format, Mode.PARSER);\n+    }\n+\n+    private static DateTimeFormatter createDateTimeFormatterImpl(String format, Mode mode)\n     {\n         DateTimeFormatterBuilder builder = new DateTimeFormatterBuilder();\n+        boolean formatContainsHourOfAMPM = false;\n         for (Token token : tokenize(format)) {\n             switch (token.getType()) {\n                 case DateFormat.TEXT:\n                     builder.appendLiteral(token.getText());\n                     break;\n                 case DateFormat.DD:\n-                    builder.appendDayOfMonth(2);\n+                    builder.appendValue(ChronoField.DAY_OF_MONTH, mode.minTwoPositionFieldWidth, 2, SignStyle.NOT_NEGATIVE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5aee06525dcf26c833371433f655eda9d135358"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NTc5MDg2OnYy", "diffSide": "RIGHT", "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/dateformat/DateFormatParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzoxNzowOVrOIOrAqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzo0Mzo0MFrOIOrkAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1NTY1Nw==", "bodyText": "Could we set all three of the parseDefaultings regardless of whether the format contains hour of AMPM (if a format doesn't have HOUR_OF_AMPM, then this won't be relevant, and similarly for HOUR_OF_DAY if it does have HOUR_OF_AMPM)?", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r552255657", "createdAt": "2021-01-05T23:17:09Z", "author": {"login": "rschlussel"}, "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/dateformat/DateFormatParser.java", "diffHunk": "@@ -70,9 +102,22 @@ public static DateTimeFormatter createDateTimeFormatter(String format)\n                             String.format(\"Failed to tokenize string [%s] at offset [%d]\", token.getText(), token.getCharPositionInLine()));\n             }\n         }\n-\n         try {\n-            return builder.toFormatter();\n+            // Append default values(0) for time fields(HH24, HH, MI, SS) because JSR-310 does not accept bare Date value as DateTime\n+\n+            if (formatContainsHourOfAMPM) {\n+                // At the moment format does not allow to include AM/PM token, thus it was never possible to specify PM hours using 'HH' token in format\n+                // Keep existing behaviour by defaulting to 0(AM) for AMPM_OF_DAY if format string contains 'HH'\n+                builder.parseDefaulting(ChronoField.HOUR_OF_AMPM, 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5aee06525dcf26c833371433f655eda9d135358"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI2NDcwNg==", "bodyText": "Unfortunately, not.\nConflicts can happen if both HOUR_OF_DAY and HOUR_OF_AMPM values provided (e.g. one with parseDefaultings and another in the input).\nExample: to_timestamp('1988/04/08 2','yyyy/mm/dd hh') will trigger \"Conflict found: HourOfDay 0 differs from HourOfDay 2\" error if we set all three of the parseDefaultings", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r552264706", "createdAt": "2021-01-05T23:43:40Z", "author": {"login": "rk13"}, "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/dateformat/DateFormatParser.java", "diffHunk": "@@ -70,9 +102,22 @@ public static DateTimeFormatter createDateTimeFormatter(String format)\n                             String.format(\"Failed to tokenize string [%s] at offset [%d]\", token.getText(), token.getCharPositionInLine()));\n             }\n         }\n-\n         try {\n-            return builder.toFormatter();\n+            // Append default values(0) for time fields(HH24, HH, MI, SS) because JSR-310 does not accept bare Date value as DateTime\n+\n+            if (formatContainsHourOfAMPM) {\n+                // At the moment format does not allow to include AM/PM token, thus it was never possible to specify PM hours using 'HH' token in format\n+                // Keep existing behaviour by defaulting to 0(AM) for AMPM_OF_DAY if format string contains 'HH'\n+                builder.parseDefaulting(ChronoField.HOUR_OF_AMPM, 0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1NTY1Nw=="}, "originalCommit": {"oid": "b5aee06525dcf26c833371433f655eda9d135358"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NTc5NTY0OnYy", "diffSide": "RIGHT", "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/dateformat/DateFormatParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzoxODo1N1rOIOrDbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzoxODo1N1rOIOrDbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1NjM2Ng==", "bodyText": "Personally, I find these extra methods don't add much.  I would just have a single method createDateTimeFormatter(String format, Mode mode), i.e. just what's called createDateTimeFormatterImpl() here.", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r552256366", "createdAt": "2021-01-05T23:18:57Z", "author": {"login": "rschlussel"}, "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/dateformat/DateFormatParser.java", "diffHunk": "@@ -18,50 +18,82 @@\n import com.facebook.presto.teradata.functions.DateFormat;\n import org.antlr.v4.runtime.ANTLRInputStream;\n import org.antlr.v4.runtime.Token;\n-import org.joda.time.format.DateTimeFormatter;\n-import org.joda.time.format.DateTimeFormatterBuilder;\n \n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeFormatterBuilder;\n+import java.time.format.SignStyle;\n+import java.time.temporal.ChronoField;\n import java.util.List;\n \n import static com.facebook.presto.spi.StandardErrorCode.INVALID_FUNCTION_ARGUMENT;\n \n public class DateFormatParser\n {\n+    private enum Mode\n+    {\n+        // Do not require leading zero for parsing two position date fields (MM, DD, HH, HH24, MI, SS)\n+        // E.g. \"to_timestamp('1988/4/8 2:3:4','yyyy/mm/dd hh24:mi:ss')\"\n+        PARSER(1),\n+\n+        // Add leading zero for formatting single valued two position date fields (MM, DD, HH, HH24, MI, SS)\n+        // E.g. \"to_char(TIMESTAMP '1988-4-8 2:3:4','yyyy/mm/dd hh24:mi:ss')\" evaluates to \"1988/04/08 02:03:04\"\n+        FORMATTER(2);\n+\n+        final int minTwoPositionFieldWidth;\n+\n+        Mode(int value)\n+        {\n+            this.minTwoPositionFieldWidth = value;\n+        }\n+    }\n+\n     private DateFormatParser()\n     {\n     }\n \n     public static DateTimeFormatter createDateTimeFormatter(String format)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5aee06525dcf26c833371433f655eda9d135358"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NTc5NzYzOnYy", "diffSide": "RIGHT", "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/TeradataDateFunctions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzoxOTo0OVrOIOrEkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzoxOTo0OVrOIOrEkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1NjY1OA==", "bodyText": "static import createDateTimeFormatter", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r552256658", "createdAt": "2021-01-05T23:19:49Z", "author": {"login": "rschlussel"}, "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/TeradataDateFunctions.java", "diffHunk": "@@ -35,23 +40,38 @@\n import static com.facebook.presto.common.type.TimeZoneKey.getTimeZoneKeys;\n import static com.facebook.presto.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n import static com.facebook.presto.spi.StandardErrorCode.INVALID_FUNCTION_ARGUMENT;\n-import static com.facebook.presto.teradata.functions.dateformat.DateFormatParser.createDateTimeFormatter;\n import static com.google.common.base.Throwables.throwIfInstanceOf;\n import static io.airlift.slice.Slices.utf8Slice;\n import static java.nio.charset.StandardCharsets.UTF_8;\n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n \n public final class TeradataDateFunctions\n {\n+    // Separate DateTimeFormatter instance caches (for formatting and parsing) in order to keep support the following use cases:\n+    // 1. Do not require leading zero for parsing two position date fields (MM, DD, HH, HH24, MI, SS)\n+    //    e.g. allow \"to_timestamp('1988/4/8 2:3:4','yyyy/mm/dd hh24:mi:ss')\"\n+    // 2. Always add leading zero for formatting single valued two position date fields (MM, DD, HH, HH24, MI, SS)\n+    //    e.g. evaluate \"to_char(TIMESTAMP '1988-4-8 2:3:4','yyyy/mm/dd hh24:mi:ss')\" to \"1988/04/08 02:03:04\"\n+\n+    private static final ThreadLocalCache<Slice, DateTimeFormatter> DATETIME_PARSER_CACHE =\n+            new ThreadLocalCache<>(100, format -> DateFormatParser.createDateTimeParser(format.toStringUtf8()));\n+\n     private static final ThreadLocalCache<Slice, DateTimeFormatter> DATETIME_FORMATTER_CACHE =\n-            new ThreadLocalCache<>(100, format -> createDateTimeFormatter(format.toStringUtf8()));\n+            new ThreadLocalCache<>(100, format -> DateFormatParser.createDateTimeFormatter(format.toStringUtf8()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5aee06525dcf26c833371433f655eda9d135358"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NTc5ODUzOnYy", "diffSide": "RIGHT", "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/TeradataDateFunctions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzoyMDoxMFrOIOrFFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzoyMDoxMFrOIOrFFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1Njc4OA==", "bodyText": "static import createDateTimeParser", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r552256788", "createdAt": "2021-01-05T23:20:10Z", "author": {"login": "rschlussel"}, "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/TeradataDateFunctions.java", "diffHunk": "@@ -35,23 +40,38 @@\n import static com.facebook.presto.common.type.TimeZoneKey.getTimeZoneKeys;\n import static com.facebook.presto.spi.StandardErrorCode.GENERIC_INTERNAL_ERROR;\n import static com.facebook.presto.spi.StandardErrorCode.INVALID_FUNCTION_ARGUMENT;\n-import static com.facebook.presto.teradata.functions.dateformat.DateFormatParser.createDateTimeFormatter;\n import static com.google.common.base.Throwables.throwIfInstanceOf;\n import static io.airlift.slice.Slices.utf8Slice;\n import static java.nio.charset.StandardCharsets.UTF_8;\n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n \n public final class TeradataDateFunctions\n {\n+    // Separate DateTimeFormatter instance caches (for formatting and parsing) in order to keep support the following use cases:\n+    // 1. Do not require leading zero for parsing two position date fields (MM, DD, HH, HH24, MI, SS)\n+    //    e.g. allow \"to_timestamp('1988/4/8 2:3:4','yyyy/mm/dd hh24:mi:ss')\"\n+    // 2. Always add leading zero for formatting single valued two position date fields (MM, DD, HH, HH24, MI, SS)\n+    //    e.g. evaluate \"to_char(TIMESTAMP '1988-4-8 2:3:4','yyyy/mm/dd hh24:mi:ss')\" to \"1988/04/08 02:03:04\"\n+\n+    private static final ThreadLocalCache<Slice, DateTimeFormatter> DATETIME_PARSER_CACHE =\n+            new ThreadLocalCache<>(100, format -> DateFormatParser.createDateTimeParser(format.toStringUtf8()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5aee06525dcf26c833371433f655eda9d135358"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NTgwMTY4OnYy", "diffSide": "RIGHT", "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/dateformat/DateFormatParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzoyMTozOVrOIOrG8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMDoxNzowMlrOIOshZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1NzI2NA==", "bodyText": "Is there any reason we couldn't  or shouldn't support an AM/PM token?", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r552257264", "createdAt": "2021-01-05T23:21:39Z", "author": {"login": "rschlussel"}, "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/dateformat/DateFormatParser.java", "diffHunk": "@@ -70,9 +102,22 @@ public static DateTimeFormatter createDateTimeFormatter(String format)\n                             String.format(\"Failed to tokenize string [%s] at offset [%d]\", token.getText(), token.getCharPositionInLine()));\n             }\n         }\n-\n         try {\n-            return builder.toFormatter();\n+            // Append default values(0) for time fields(HH24, HH, MI, SS) because JSR-310 does not accept bare Date value as DateTime\n+\n+            if (formatContainsHourOfAMPM) {\n+                // At the moment format does not allow to include AM/PM token, thus it was never possible to specify PM hours using 'HH' token in format", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5aee06525dcf26c833371433f655eda9d135358"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI4MDQyMw==", "bodyText": "No, I do not know about any reason why we should not.\nTeradata date format arguments support AM/PM actually (https://www.docs.teradata.com/r/~_sY_PYVxZzTnqKq45UXkQ/DlNXnvtMQTAeWXYLHvEarQ).\nOriginal grammar used to tokenise input should be extended in this case\nhttps://github.com/prestodb/presto/blob/master/presto-teradata-functions/src/main/antlr4/com/facebook/presto/teradata/functions/DateFormat.g4\nIt is better to be implemented in separate PR as a new feature I think.", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r552280423", "createdAt": "2021-01-06T00:17:02Z", "author": {"login": "rk13"}, "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/dateformat/DateFormatParser.java", "diffHunk": "@@ -70,9 +102,22 @@ public static DateTimeFormatter createDateTimeFormatter(String format)\n                             String.format(\"Failed to tokenize string [%s] at offset [%d]\", token.getText(), token.getCharPositionInLine()));\n             }\n         }\n-\n         try {\n-            return builder.toFormatter();\n+            // Append default values(0) for time fields(HH24, HH, MI, SS) because JSR-310 does not accept bare Date value as DateTime\n+\n+            if (formatContainsHourOfAMPM) {\n+                // At the moment format does not allow to include AM/PM token, thus it was never possible to specify PM hours using 'HH' token in format", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1NzI2NA=="}, "originalCommit": {"oid": "b5aee06525dcf26c833371433f655eda9d135358"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NTgwMzIyOnYy", "diffSide": "RIGHT", "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/dateformat/DateFormatParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzoyMjoyMVrOIOrH4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMzoyMjoyMVrOIOrH4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1NzUwNA==", "bodyText": "make this private and add a getter", "url": "https://github.com/prestodb/presto/pull/15537#discussion_r552257504", "createdAt": "2021-01-05T23:22:21Z", "author": {"login": "rschlussel"}, "path": "presto-teradata-functions/src/main/java/com/facebook/presto/teradata/functions/dateformat/DateFormatParser.java", "diffHunk": "@@ -18,50 +18,82 @@\n import com.facebook.presto.teradata.functions.DateFormat;\n import org.antlr.v4.runtime.ANTLRInputStream;\n import org.antlr.v4.runtime.Token;\n-import org.joda.time.format.DateTimeFormatter;\n-import org.joda.time.format.DateTimeFormatterBuilder;\n \n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeFormatterBuilder;\n+import java.time.format.SignStyle;\n+import java.time.temporal.ChronoField;\n import java.util.List;\n \n import static com.facebook.presto.spi.StandardErrorCode.INVALID_FUNCTION_ARGUMENT;\n \n public class DateFormatParser\n {\n+    private enum Mode\n+    {\n+        // Do not require leading zero for parsing two position date fields (MM, DD, HH, HH24, MI, SS)\n+        // E.g. \"to_timestamp('1988/4/8 2:3:4','yyyy/mm/dd hh24:mi:ss')\"\n+        PARSER(1),\n+\n+        // Add leading zero for formatting single valued two position date fields (MM, DD, HH, HH24, MI, SS)\n+        // E.g. \"to_char(TIMESTAMP '1988-4-8 2:3:4','yyyy/mm/dd hh24:mi:ss')\" evaluates to \"1988/04/08 02:03:04\"\n+        FORMATTER(2);\n+\n+        final int minTwoPositionFieldWidth;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5aee06525dcf26c833371433f655eda9d135358"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3299, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}