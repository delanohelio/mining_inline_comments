{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzMDgzNzQ3", "number": 14771, "title": "Allow configure SQL invoked function implementation type", "bodyText": "== NO RELEASE NOTE ==", "createdAt": "2020-07-01T23:56:16Z", "url": "https://github.com/prestodb/presto/pull/14771", "merged": true, "mergeCommit": {"oid": "ee71bf56891477f1cceb95695de89588ec60ed59"}, "closed": true, "closedAt": "2020-07-06T23:12:15Z", "author": {"login": "rongrong"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcw0sFqABqjM1MDQ5MTE4MjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyXjSFgFqTQ0MzM5NzQxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "430e7d99913a0c960f05d6dd8156542d9c69db0e", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/430e7d99913a0c960f05d6dd8156542d9c69db0e", "committedDate": "2020-07-01T23:37:37Z", "message": "Allow configure SQL invoked function implementation type"}, "afterCommit": {"oid": "6108b07b8f31ce24b9a6ebc9aec852fd31a6abc4", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/6108b07b8f31ce24b9a6ebc9aec852fd31a6abc4", "committedDate": "2020-07-02T01:37:15Z", "message": "Allow configure SQL invoked function implementation type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTQxNzMw", "url": "https://github.com/prestodb/presto/pull/14771#pullrequestreview-441541730", "createdAt": "2020-07-02T10:14:37Z", "commit": {"oid": "6108b07b8f31ce24b9a6ebc9aec852fd31a6abc4"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMDoxNDozN1rOGsGkWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMDoxNDozN1rOGsGkWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg5ODEzNg==", "bodyText": "Can we static import? You can ask IntelliJ to do this for you by pressing option + return and select the 1st option \"Add on-demand static import\" ...", "url": "https://github.com/prestodb/presto/pull/14771#discussion_r448898136", "createdAt": "2020-07-02T10:14:37Z", "author": {"login": "caithagoras"}, "path": "presto-function-namespace-managers/src/main/java/com/facebook/presto/functionNamespace/SqlInvokedFunctionNamespaceManagerConfig.java", "diffHunk": "@@ -14,25 +14,28 @@\n package com.facebook.presto.functionNamespace;\n \n import com.facebook.airlift.configuration.Config;\n+import com.facebook.airlift.json.JsonCodec;\n+import com.facebook.presto.spi.function.FunctionImplementationType;\n import com.facebook.presto.spi.function.RoutineCharacteristics;\n-import com.google.common.base.Splitter;\n-import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.ImmutableMap;\n import io.airlift.units.Duration;\n import io.airlift.units.MinDuration;\n \n-import java.util.Set;\n+import java.util.Map;\n \n+import static com.facebook.airlift.json.JsonCodec.mapJsonCodec;\n+import static com.facebook.presto.spi.function.FunctionImplementationType.BUILTIN;\n import static com.facebook.presto.spi.function.RoutineCharacteristics.Language.SQL;\n import static java.util.concurrent.TimeUnit.HOURS;\n import static java.util.concurrent.TimeUnit.MINUTES;\n \n public class SqlInvokedFunctionNamespaceManagerConfig\n {\n-    private static final Splitter LANGUAGE_SPLITTER = Splitter.on(',').omitEmptyStrings().trimResults();\n+    private static final JsonCodec<Map<RoutineCharacteristics.Language, FunctionImplementationType>> FUNCTION_LANGUAGES_CODEC = mapJsonCodec(RoutineCharacteristics.Language.class, FunctionImplementationType.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6108b07b8f31ce24b9a6ebc9aec852fd31a6abc4"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTQ1NjEz", "url": "https://github.com/prestodb/presto/pull/14771#pullrequestreview-441545613", "createdAt": "2020-07-02T10:20:11Z", "commit": {"oid": "6108b07b8f31ce24b9a6ebc9aec852fd31a6abc4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMDoyMDoxMlrOGsGwTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMDoyMDoxMlrOGsGwTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkwMTE5OA==", "bodyText": "Are we going to remove getFunctionImplementationType this method now that it does not have any callers?", "url": "https://github.com/prestodb/presto/pull/14771#discussion_r448901198", "createdAt": "2020-07-02T10:20:12Z", "author": {"login": "caithagoras"}, "path": "presto-function-namespace-managers/src/main/java/com/facebook/presto/functionNamespace/AbstractSqlInvokedFunctionNamespaceManager.java", "diffHunk": "@@ -219,14 +219,20 @@ protected static FunctionMetadata sqlInvokedFunctionToMetadata(SqlInvokedFunctio\n                         .collect(toImmutableList())),\n                 function.getSignature().getReturnType(),\n                 SCALAR,\n-                function.getFunctionImplementationType(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6108b07b8f31ce24b9a6ebc9aec852fd31a6abc4"}, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6108b07b8f31ce24b9a6ebc9aec852fd31a6abc4", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/6108b07b8f31ce24b9a6ebc9aec852fd31a6abc4", "committedDate": "2020-07-02T01:37:15Z", "message": "Allow configure SQL invoked function implementation type"}, "afterCommit": {"oid": "181c313707d29f7312c26fd616b07c395d2b7b0f", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/181c313707d29f7312c26fd616b07c395d2b7b0f", "committedDate": "2020-07-02T19:28:26Z", "message": "Allow configure SQL invoked function implementation type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26585f21ba06615e027f776a797d07c54a30a789", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/26585f21ba06615e027f776a797d07c54a30a789", "committedDate": "2020-07-06T19:16:28Z", "message": "Allow configure SQL invoked function implementation type"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "181c313707d29f7312c26fd616b07c395d2b7b0f", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/181c313707d29f7312c26fd616b07c395d2b7b0f", "committedDate": "2020-07-02T19:28:26Z", "message": "Allow configure SQL invoked function implementation type"}, "afterCommit": {"oid": "26585f21ba06615e027f776a797d07c54a30a789", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/26585f21ba06615e027f776a797d07c54a30a789", "committedDate": "2020-07-06T19:16:28Z", "message": "Allow configure SQL invoked function implementation type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzk3NDE2", "url": "https://github.com/prestodb/presto/pull/14771#pullrequestreview-443397416", "createdAt": "2020-07-06T20:48:36Z", "commit": {"oid": "26585f21ba06615e027f776a797d07c54a30a789"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMDo0ODozNlrOGtmnkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMDo0ODozNlrOGtmnkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3MTgyNA==", "bodyText": "It seems a bit awkward to me that a json map needs to be specified in config, and also only string-to-string json map is allowed here. Since the engine does need to understand the enums, what about changing the config properties to\nremote-thrift-languages=language1,language2\n\nThis way, json is avoided, and user also don't need to specify the redundant entry for Language=SQL.\nEven if we want to support implementation type http, the enum value needs to be added to spi and we can support that in FNM by adding a new config like\nremote-http-languages=language3,language4", "url": "https://github.com/prestodb/presto/pull/14771#discussion_r450471824", "createdAt": "2020-07-06T20:48:36Z", "author": {"login": "caithagoras"}, "path": "presto-function-namespace-managers/src/main/java/com/facebook/presto/functionNamespace/SqlInvokedFunctionNamespaceManagerConfig.java", "diffHunk": "@@ -60,17 +62,15 @@ public SqlInvokedFunctionNamespaceManagerConfig setFunctionInstanceCacheExpirati\n         return this;\n     }\n \n-    public Set<RoutineCharacteristics.Language> getSupportedFunctionLanguages()\n+    public Map<Language, FunctionImplementationType> getSupportedFunctionLanguages()\n     {\n         return supportedFunctionLanguages;\n     }\n \n     @Config(\"supported-function-languages\")\n     public SqlInvokedFunctionNamespaceManagerConfig setSupportedFunctionLanguages(String languages)\n     {\n-        ImmutableSet.Builder<RoutineCharacteristics.Language> languageBuilder = ImmutableSet.builder();\n-        Splitter.on(',').omitEmptyStrings().trimResults().split(languages).forEach(language -> languageBuilder.add(new RoutineCharacteristics.Language(language)));\n-        this.supportedFunctionLanguages = languageBuilder.build();\n+        this.supportedFunctionLanguages = FUNCTION_LANGUAGES_CODEC.fromJson(languages);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26585f21ba06615e027f776a797d07c54a30a789"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1175, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}