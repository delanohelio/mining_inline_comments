{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5ODE1NzAy", "number": 14552, "title": "Update compiledLambdaMap in RowExpressionCompiler for SQL functions", "bodyText": "== NO RELEASE NOTE ==", "createdAt": "2020-05-19T00:56:56Z", "url": "https://github.com/prestodb/presto/pull/14552", "merged": true, "mergeCommit": {"oid": "35ea4f32f0ef98ad7a60d68fce9f37b4640cb749"}, "closed": true, "closedAt": "2020-06-01T21:38:19Z", "author": {"login": "rongrong"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci4eZ2ABqjMzNTMwOTc5Mjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclnYMMAFqTQxOTc5NTgzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1492e64c949ea922651a4e804aca89e5c4b3f68e", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/1492e64c949ea922651a4e804aca89e5c4b3f68e", "committedDate": "2020-05-19T00:51:32Z", "message": "Update compiledLambdaMap in RowExpressionCompiler for SQL functions\n\nWith the introduction of SQL function, we might find new lambdas while processing SQL functions.\nSince we are adding the compiled lambda function to the same class as the expression containing lambda,\nwe need to update the compiledLambdaMap to make sure it always has all the previous compiled lambdas\nand do not try to create the same method again."}, "afterCommit": {"oid": "cb8935ebf31ce635acb573be682adaa56d50ce25", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/cb8935ebf31ce635acb573be682adaa56d50ce25", "committedDate": "2020-05-19T18:06:36Z", "message": "Update compiledLambdaMap in RowExpressionCompiler for SQL functions\n\nWith the introduction of SQL function, we might find new lambdas while processing SQL functions.\nSince we are adding the compiled lambda function to the same class as the expression containing lambda,\nwe need to update the compiledLambdaMap to make sure it always has all the previous compiled lambdas\nand do not try to create the same method again."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0OTk1MzUz", "url": "https://github.com/prestodb/presto/pull/14552#pullrequestreview-414995353", "createdAt": "2020-05-20T05:08:52Z", "commit": {"oid": "cb8935ebf31ce635acb573be682adaa56d50ce25"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNTowODo1MlrOGX7bhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNTowODo1MlrOGX7bhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc0NDEzMg==", "bodyText": "nit: what about something like alreadyCompiledLambdas ?", "url": "https://github.com/prestodb/presto/pull/14552#discussion_r427744132", "createdAt": "2020-05-20T05:08:52Z", "author": {"login": "wenleix"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/LambdaBytecodeGenerator.java", "diffHunk": "@@ -101,6 +102,19 @@ private LambdaBytecodeGenerator()\n         return generateMethodsForLambda(containerClassDefinition, callSiteBinder, cachedInstanceBinder, ImmutableList.of(expression), metadata, sqlFunctionProperties, methodNamePrefix);\n     }\n \n+    public static Map<LambdaDefinitionExpression, CompiledLambda> generateMethodsForLambda(\n+            ClassDefinition containerClassDefinition,\n+            CallSiteBinder callSiteBinder,\n+            CachedInstanceBinder cachedInstanceBinder,\n+            RowExpression expression,\n+            Metadata metadata,\n+            SqlFunctionProperties sqlFunctionProperties,\n+            String methodNamePrefix,\n+            Set<LambdaDefinitionExpression> compiledLambdas)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb8935ebf31ce635acb573be682adaa56d50ce25"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcac7ca60e21f70f2cb0591031096aef60e205b8", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/fcac7ca60e21f70f2cb0591031096aef60e205b8", "committedDate": "2020-05-27T21:09:10Z", "message": "Update compiledLambdaMap in RowExpressionCompiler for SQL functions\n\nWith the introduction of SQL function, we might find new lambdas while processing SQL functions.\nSince we are adding the compiled lambda function to the same class as the expression containing lambda,\nwe need to update the compiledLambdaMap to make sure it always has all the previous compiled lambdas\nand do not try to create the same method again."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb8935ebf31ce635acb573be682adaa56d50ce25", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/cb8935ebf31ce635acb573be682adaa56d50ce25", "committedDate": "2020-05-19T18:06:36Z", "message": "Update compiledLambdaMap in RowExpressionCompiler for SQL functions\n\nWith the introduction of SQL function, we might find new lambdas while processing SQL functions.\nSince we are adding the compiled lambda function to the same class as the expression containing lambda,\nwe need to update the compiledLambdaMap to make sure it always has all the previous compiled lambdas\nand do not try to create the same method again."}, "afterCommit": {"oid": "fcac7ca60e21f70f2cb0591031096aef60e205b8", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/fcac7ca60e21f70f2cb0591031096aef60e205b8", "committedDate": "2020-05-27T21:09:10Z", "message": "Update compiledLambdaMap in RowExpressionCompiler for SQL functions\n\nWith the introduction of SQL function, we might find new lambdas while processing SQL functions.\nSince we are adding the compiled lambda function to the same class as the expression containing lambda,\nwe need to update the compiledLambdaMap to make sure it always has all the previous compiled lambdas\nand do not try to create the same method again."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5Nzk1ODM0", "url": "https://github.com/prestodb/presto/pull/14552#pullrequestreview-419795834", "createdAt": "2020-05-28T05:54:00Z", "commit": {"oid": "fcac7ca60e21f70f2cb0591031096aef60e205b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1672, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}