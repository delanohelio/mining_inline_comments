{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMjA3Mzky", "number": 14476, "reviewThreads": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzo1MTo1MFrOD7cUew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozNzo1NVrOD8gidw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjU2NTcxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzo1MTo1MFrOGTxTgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzo1MTo1MFrOGTxTgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM4MzkzOA==", "bodyText": "For #14352 - how about\nAdd an Internationalization Functions plugin plus MYANMAR_FONT_ENCODING and MYANMAR_NORMALIZE_UNICODE to support working with Burmese text", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r423383938", "createdAt": "2020-05-11T23:51:50Z", "author": {"login": "nlagrow"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,61 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add ``scale_qdigest`` function to scale a ``qdigest`` to a new weight\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efe9c0422166ba373421ef11a3e562fd194d1b34"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDU3NDAyOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTowMzozN1rOGUY39g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoxMjo0OFrOGUcIsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMjI0Ng==", "bodyText": "Need some clarification / short description what the error is. Does it cause query failure? Avoid \"analysis phase\" if possible since user does not need to understand that, as user sees \"query failure\" or \"incorrect result\", etc.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424032246", "createdAt": "2020-05-12T21:03:37Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1ODkxOA==", "bodyText": "Let's just remove this one. It's very hard to describe. And it's not necessarily tied to certain user facing features. Or maybe \"fix query failure with NullPointerException during analysis. :issue:14340\".", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424058918", "createdAt": "2020-05-12T22:00:15Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMjI0Ng=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NTY4Mg==", "bodyText": "I'll just remove it.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424085682", "createdAt": "2020-05-12T23:12:48Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMjI0Ng=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDU3ODg2OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTowNToxMFrOGUY66Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoxNjoyNVrOGUcM6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzAwMQ==", "bodyText": "What about\nAdd support for pre-checking if bytecode size is within limits.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424033001", "createdAt": "2020-05-12T21:05:10Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0MTQ3MA==", "bodyText": "I think that's still too low level for users.  Maybe:\nFix issue where queries with large filters in the where clause would cause full GCs.  Now such queries will fail quickly with <expected exception>", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424041470", "createdAt": "2020-05-12T21:22:30Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzAwMQ=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4Njc2MA==", "bodyText": "Technically, it may not cause full gc.  How about\n* Fix issue where queries with large filters in the where clause would cause excessive memory usage.  Now such queries will fail quickly with ``GENERATED_BYTECODE_TOO_LARGE``.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424086760", "createdAt": "2020-05-12T23:16:25Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzAwMQ=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDU4MDQyOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTowNTozNlrOGUY75Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjo1OToyMlrOGVlvug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzI1Mw==", "bodyText": "Did it cause query failure?", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424033253", "createdAt": "2020-05-12T21:05:36Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NTkyMw==", "bodyText": "Yes", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424085923", "createdAt": "2020-05-12T23:13:35Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzI1Mw=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NzYyMg==", "bodyText": "Yes. Queries were failing.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424087622", "createdAt": "2020-05-12T23:19:25Z", "author": {"login": "jainxrohit"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzI1Mw=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI5MTcwNg==", "bodyText": "@tdcmeehan Shouldn't this be hive connector change?", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r425291706", "createdAt": "2020-05-14T16:59:22Z", "author": {"login": "jainxrohit"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzI1Mw=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDU4MTQ3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTowNTo1MlrOGUY8fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTowNTo1MlrOGUY8fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzQwNg==", "bodyText": "missing \".\" at the end of the line.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424033406", "createdAt": "2020-05-12T21:05:52Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDU4NDE5OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTowNjo0OVrOGUY-Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozMToyNVrOGUZsiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzg4Nw==", "bodyText": "Add configuration properties ...\n\nAlso, default value may be omitted.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424033887", "createdAt": "2020-05-12T21:06:49Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NTcwNw==", "bodyText": "Put the relevant config properties in the bullet where we say support is added (bullets 2 and 3 i think)", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424045707", "createdAt": "2020-05-12T21:31:25Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzg4Nw=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDU5ODk5OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxMTozNlrOGUZHyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoxOTo1MVrOGUcQ8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNjI5OQ==", "bodyText": "Use the structure recommended by the release notes wiki. Also, is there a corresponding session property?\nAdd support for limiting the total number of buffers per optimized repartitioning operator. The limit can be set by the configuration property ``driver.max-page-partitioning-buffer-count``.\n\nDefault value can be omitted.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424036299", "createdAt": "2020-05-12T21:11:36Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4Nzc5NA==", "bodyText": "Looks like there's no session property.\nCC: @yingsu00", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424087794", "createdAt": "2020-05-12T23:19:51Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNjI5OQ=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDYwMjc1OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxMjo0OFrOGUZKCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxMjo0OFrOGUZKCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNjg3NQ==", "bodyText": "Remove \"for druid connector\" as the section header has already made that clear.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424036875", "createdAt": "2020-05-12T21:12:48Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDYxMjY4OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxNTo1OVrOGUZQXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzo1Nzo1N1rOGVHiIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzODQ5Mg==", "bodyText": "According to #14357, I think this should be\nFix an issue where `distinct` is not respected in count aggregation\n\n@zhenxiao", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424038492", "createdAt": "2020-05-12T21:15:59Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5NTk4NA==", "bodyText": "CC: @zhenxiao", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424795984", "createdAt": "2020-05-13T23:55:40Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzODQ5Mg=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5NjcwNg==", "bodyText": "this is another commit.\nYes, we could add:\nFix an issue where distinct is not respected in count aggregation\nWe also need:\nFix an issue when Druid connector scan segments", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424796706", "createdAt": "2020-05-13T23:57:57Z", "author": {"login": "zhenxiao"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzODQ5Mg=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDYxNDIxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxNjozNFrOGUZRUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxNjozNFrOGUZRUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzODczOQ==", "bodyText": "nit: multi-HMS", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424038739", "createdAt": "2020-05-12T21:16:34Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.\n+\n+Geospatial Computation Changes\n+______________________________\n+* Add support for :func:`ST_AsText` to accept Spherical Geographies.\n+* Add support for :func:`ST_Centroid` to accept Spherical Geography Points and MultiPoints.\n+\n+Hive Changes\n+____________\n+* Fix a bug in Hive split calculation which affects Parquet reader in few corner cases.\n+* Fix AWS client metric reporting when using S3 select.\n+* Add AWS client retry pause time metrics to PrestoS3FileSystemStats.\n+* Add table property ``preferred_ordering_columns`` to support writing sorted files for unbucketed table.\n+* Add native Parquet Writer for Presto.\n+* Add support for impersonation access by using HMS delegation token.\n+* Add support for multi HMS instances load balancing and breakdown metrics by HMS hosts.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDYxNTMyOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxNzowMVrOGUZSCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxNzowMVrOGUZSCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzODkyMg==", "bodyText": "``PrestoS3FileSystemStats``", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424038922", "createdAt": "2020-05-12T21:17:01Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.\n+\n+Geospatial Computation Changes\n+______________________________\n+* Add support for :func:`ST_AsText` to accept Spherical Geographies.\n+* Add support for :func:`ST_Centroid` to accept Spherical Geography Points and MultiPoints.\n+\n+Hive Changes\n+____________\n+* Fix a bug in Hive split calculation which affects Parquet reader in few corner cases.\n+* Fix AWS client metric reporting when using S3 select.\n+* Add AWS client retry pause time metrics to PrestoS3FileSystemStats.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDYxNjY0OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxNzozMlrOGUZS-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxNzozMlrOGUZS-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzOTE2MQ==", "bodyText": "Add support for pushing down ...", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424039161", "createdAt": "2020-05-12T21:17:32Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.\n+\n+Geospatial Computation Changes\n+______________________________\n+* Add support for :func:`ST_AsText` to accept Spherical Geographies.\n+* Add support for :func:`ST_Centroid` to accept Spherical Geography Points and MultiPoints.\n+\n+Hive Changes\n+____________\n+* Fix a bug in Hive split calculation which affects Parquet reader in few corner cases.\n+* Fix AWS client metric reporting when using S3 select.\n+* Add AWS client retry pause time metrics to PrestoS3FileSystemStats.\n+* Add table property ``preferred_ordering_columns`` to support writing sorted files for unbucketed table.\n+* Add native Parquet Writer for Presto.\n+* Add support for impersonation access by using HMS delegation token.\n+* Add support for multi HMS instances load balancing and breakdown metrics by HMS hosts.\n+* Add support in file status cache to cache all tables. This could be enabled by setting ``hive.file-status-cache-tables`` to ``*``.\n+\n+Pinot Changes\n+_____________\n+* Add feature to push down distinct count query to Pinot on a best-effort basis.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDYxNzcxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxNzo1NVrOGUZTpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxNzo1NVrOGUZTpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzOTMzNQ==", "bodyText": "... by setting configuration property ``hive.file- ...", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424039335", "createdAt": "2020-05-12T21:17:55Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.\n+\n+Geospatial Computation Changes\n+______________________________\n+* Add support for :func:`ST_AsText` to accept Spherical Geographies.\n+* Add support for :func:`ST_Centroid` to accept Spherical Geography Points and MultiPoints.\n+\n+Hive Changes\n+____________\n+* Fix a bug in Hive split calculation which affects Parquet reader in few corner cases.\n+* Fix AWS client metric reporting when using S3 select.\n+* Add AWS client retry pause time metrics to PrestoS3FileSystemStats.\n+* Add table property ``preferred_ordering_columns`` to support writing sorted files for unbucketed table.\n+* Add native Parquet Writer for Presto.\n+* Add support for impersonation access by using HMS delegation token.\n+* Add support for multi HMS instances load balancing and breakdown metrics by HMS hosts.\n+* Add support in file status cache to cache all tables. This could be enabled by setting ``hive.file-status-cache-tables`` to ``*``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDY0MzM1OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToyNjozNFrOGUZj5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoyODo0NVrOGUcb3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0MzQ5Mw==", "bodyText": "This note is a bit confusing to me. Would the following be correct?\nAdd optimization for filters and projections to extract common subexpressions \nand evaluate them only once.  This optimization can be turned off by the \nsession property ``optimize_common_sub_expressions``.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424043493", "createdAt": "2020-05-12T21:26:34Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1NjY5Nw==", "bodyText": "This is correct. It removes some nuances specific to the implementation, but I guess that's what makes it more readable. I guess the only thing really matters is that we only extract cse among projections in the same project operator, and cse among the same filter (but not cross filter and project). If you could help me phrase that it would be awesome. Otherwise your description is good. Thanks!", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424056697", "createdAt": "2020-05-12T21:55:24Z", "author": {"login": "rongrong"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0MzQ5Mw=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5MDU4OA==", "bodyText": "Is there a Github issue I could reference that someone could click into to understand that?  I'm not sure it's worth it or necessary to add the additional distinction you mention above in the release notes, but it would make a good read in a Github issue.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424090588", "createdAt": "2020-05-12T23:28:45Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0MzQ5Mw=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDY0ODkwOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToyODozNVrOGUZneQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMzowNTo0N1rOGWWA6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NDQwOQ==", "bodyText": "is there any documentation about how/why someone would configure this?", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424044409", "createdAt": "2020-05-12T21:28:35Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5MDcwMg==", "bodyText": "CC: @yingsu00  any thoughts on that?", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424090702", "createdAt": "2020-05-12T23:29:10Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NDQwOQ=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk4MzQ2NQ==", "bodyText": "@tdcmeehan @rschlussel This number should be set large enough so that no exceptions can occur. I will add documentation to it shortly.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r425983465", "createdAt": "2020-05-15T18:43:13Z", "author": {"login": "yingsu00"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NDQwOQ=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyNjU3OA==", "bodyText": "@tdcmeehan @rschlussel The PR to add documentation for this property is here #14542\nBut it seems like https://prestodb.io/docs/current/admin/properties.html only contains most important config properties. I'm not sure if this one is important enough. What do you think?", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r426026578", "createdAt": "2020-05-15T20:17:05Z", "author": {"login": "yingsu00"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NDQwOQ=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA4MjUzOA==", "bodyText": "@rschlussel already approved so let's just follow up with the documentation in a separate thread.  I don't think we need to hold up release notes for it.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r426082538", "createdAt": "2020-05-15T23:05:47Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NDQwOQ=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDY1MDk0OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToyOToyNVrOGUZo3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoyOToyNFrOGUccoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NDc2Ng==", "bodyText": "should this be in hive connector changes?", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424044766", "createdAt": "2020-05-12T21:29:25Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5MDc4NQ==", "bodyText": "Good catch, thanks.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424090785", "createdAt": "2020-05-12T23:29:24Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NDc2Ng=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDY1OTc3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozMjo0MlrOGUZuuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzo0Nzo0M1rOGUczHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NjI2NQ==", "bodyText": "what kinds of things can be pushed down?  if this is a new feature, then we probably don't need the note about count distinct pushdown", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424046265", "createdAt": "2020-05-12T21:32:42Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5NDczNg==", "bodyText": "CC: @zhenxiao this is based on the original:\nSession property, druid.pushdown, it added, to control whether to pushdown all query processing to druid.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424094736", "createdAt": "2020-05-12T23:42:12Z", "author": {"login": "tdcmeehan"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NjI2NQ=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5NjU0MQ==", "bodyText": "my bad, should be:\nAdd session property druid.compute-pushdown-enabled to pushdown all computation to druid for Presto Druid connector", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424096541", "createdAt": "2020-05-12T23:47:43Z", "author": {"login": "zhenxiao"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NjI2NQ=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDY2NDI3OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozNDoyOFrOGUZxsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozNDoyOFrOGUZxsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NzAyNQ==", "bodyText": "This should go after all the connector changes", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424047025", "createdAt": "2020-05-12T21:34:28Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDY2NDkwOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozNDo0M1rOGUZyDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozNDo0M1rOGUZyDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NzExOQ==", "bodyText": "Should be called Druid Connector Changes", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424047119", "createdAt": "2020-05-12T21:34:43Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDY2NjcwOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozNToyM1rOGUZzOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozNToyM1rOGUZzOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NzQxOA==", "bodyText": "Hive Connector Changes -- also should go with the other connectors", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424047418", "createdAt": "2020-05-12T21:35:23Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.\n+\n+Geospatial Computation Changes\n+______________________________\n+* Add support for :func:`ST_AsText` to accept Spherical Geographies.\n+* Add support for :func:`ST_Centroid` to accept Spherical Geography Points and MultiPoints.\n+\n+Hive Changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDY2NzQwOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozNTo0MlrOGUZzsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozNTo0MlrOGUZzsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NzUzNw==", "bodyText": "merge this with the  \"Pinot Connector Changes\" above", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424047537", "createdAt": "2020-05-12T21:35:42Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.\n+\n+Geospatial Computation Changes\n+______________________________\n+* Add support for :func:`ST_AsText` to accept Spherical Geographies.\n+* Add support for :func:`ST_Centroid` to accept Spherical Geography Points and MultiPoints.\n+\n+Hive Changes\n+____________\n+* Fix a bug in Hive split calculation which affects Parquet reader in few corner cases.\n+* Fix AWS client metric reporting when using S3 select.\n+* Add AWS client retry pause time metrics to PrestoS3FileSystemStats.\n+* Add table property ``preferred_ordering_columns`` to support writing sorted files for unbucketed table.\n+* Add native Parquet Writer for Presto.\n+* Add support for impersonation access by using HMS delegation token.\n+* Add support for multi HMS instances load balancing and breakdown metrics by HMS hosts.\n+* Add support in file status cache to cache all tables. This could be enabled by setting ``hive.file-status-cache-tables`` to ``*``.\n+\n+Pinot Changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDY3MDM1OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozNjo0NVrOGUZ1eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozNjo0NVrOGUZ1eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0Nzk5Mg==", "bodyText": "I think this can go under \"general changes\"", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424047992", "createdAt": "2020-05-12T21:36:45Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.\n+\n+Geospatial Computation Changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDkxMzYxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoxNTo1OVrOGUcMdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoxNTo1OVrOGUcMdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NjY0NQ==", "bodyText": "Instead of returned stats - lets just saw query stats", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424086645", "createdAt": "2020-05-12T23:15:59Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NzczMTM5OnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozNToyN1rOGVfT-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozNToyN1rOGVfT-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4NjI5Nw==", "bodyText": "nit: put this with the other \"fix\"es", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r425186297", "createdAt": "2020-05-14T14:35:27Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,56 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Fix issue where queries with large filters in the where clause would cause excessive memory usage.  Now such queries will fail quickly with ``GENERATED_BYTECODE_TOO_LARGE``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ea5d4cc62fcdfcac19b693d431bc6ff36a8f191"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NzczNTQxOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozNjoyMlrOGVfWhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozNjoyMlrOGVfWhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4Njk0OA==", "bodyText": "nit: this one's technically an improvement, so I guess put it above the previous thing.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r425186948", "createdAt": "2020-05-14T14:36:22Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,56 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Fix issue where queries with large filters in the where clause would cause excessive memory usage.  Now such queries will fail quickly with ``GENERATED_BYTECODE_TOO_LARGE``.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for filters and projections to extract common subexpressions and evaluate them only once.  This optimization can be turned off by the session property ``optimize_common_sub_expressions``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ea5d4cc62fcdfcac19b693d431bc6ff36a8f191"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0Nzc0MjYzOnYy", "diffSide": "RIGHT", "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozNzo1NlrOGVfbDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozNzo1NlrOGVfbDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4ODEwOA==", "bodyText": "nit: I think this isn't needed because all of the query processing pushdown is new.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r425188108", "createdAt": "2020-05-14T14:37:56Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,56 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Fix issue where queries with large filters in the where clause would cause excessive memory usage.  Now such queries will fail quickly with ``GENERATED_BYTECODE_TOO_LARGE``.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for filters and projections to extract common subexpressions and evaluate them only once.  This optimization can be turned off by the session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add support for limiting the total number of buffers per optimized repartitioning operator. The limit can be set by the configuration property ``driver.max-page-partitioning-buffer-count``.\n+* Add peak task total memory to query stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight.\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add support for :func:`ST_AsText` to accept Spherical Geographies.\n+* Add support for :func:`ST_Centroid` to accept Spherical Geography Points and MultiPoints.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type via the system property ``pinot.infer-date-type-in-schema``.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type via the system prpoerty ``pinot.infer-timestamp-type-in-schema``.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add support for pushing down distinct count query to Pinot on a best-effort basis.\n+* Add support for new Pinot Routing Table APIs.\n+\n+Hive Connector Changes\n+______________________\n+* Fix a bug in Hive split calculation which affects Parquet reader in few corner cases.\n+* Fix AWS client metric reporting when using S3 select.\n+* Add AWS client retry pause time metrics to ``PrestoS3FileSystemStats``.\n+* Add table property ``preferred_ordering_columns`` to support writing sorted files for unbucketed table.\n+* Add native Parquet Writer for Presto.\n+* Add support for impersonation access by using HMS delegation token.\n+* Add support for multi-HMS instances load balancing and breakdown metrics by HMS hosts.\n+* Add support in file status cache to cache all tables. This could be enabled by setting the configuration property ``hive.file-status-cache-tables`` to ``*``.\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Druid Connector Changes\n+_______________________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.compute-pushdown-enabled`` configuration property.\n+* Add support for count distinct pushdown.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ea5d4cc62fcdfcac19b693d431bc6ff36a8f191"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2578, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}