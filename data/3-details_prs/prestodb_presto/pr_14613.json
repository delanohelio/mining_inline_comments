{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MDg0MzEw", "number": 14613, "title": "Register kryo classes", "bodyText": "When classes are not registered, Kryo falls back to inlining fully specified\nclass name as part of the serialization algorithm\n== NO RELEASE NOTE ==", "createdAt": "2020-06-04T20:56:00Z", "url": "https://github.com/prestodb/presto/pull/14613", "merged": true, "mergeCommit": {"oid": "3781361c1e0c6e9ab4d8930b6e2af2e95781c619"}, "closed": true, "closedAt": "2020-06-05T15:19:35Z", "author": {"login": "arhimondr"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoEcxbAH2gAyNDI4MDg0MzEwOjhkZjEzYjI4MTQ4MWE2NmM5NGZiMDMzNzIyZGMxYWFjM2QwMjM4OTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoUaSYAFqTQyNTQwMzU2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8df13b281481a66c94fb033722dc1aac3d023895", "author": {"user": {"login": "arhimondr", "name": "Andrii Rosa"}}, "url": "https://github.com/prestodb/presto/commit/8df13b281481a66c94fb033722dc1aac3d023895", "committedDate": "2020-06-04T20:54:06Z", "message": "Update spark-core to 2.0.2-6\n\nThe new version contains non relocated kryo classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84774806752a84b23b965b12345a702f7f9066cb", "author": {"user": {"login": "arhimondr", "name": "Andrii Rosa"}}, "url": "https://github.com/prestodb/presto/commit/84774806752a84b23b965b12345a702f7f9066cb", "committedDate": "2020-06-04T20:56:30Z", "message": "Register Kryo classes for more efficient serialization\n\nWhen classes are not registered, Kryo falls back to inlining fully specified\nclass name, similar to standard Java serialization"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9a05311b606730ac9919a87828b3ed19c875de3", "author": {"user": {"login": "arhimondr", "name": "Andrii Rosa"}}, "url": "https://github.com/prestodb/presto/commit/d9a05311b606730ac9919a87828b3ed19c875de3", "committedDate": "2020-06-04T20:54:18Z", "message": "Register Kryo classes for more efficien serialization\n\nWhen classes are not registered, Kryo falls back to inlining fully specified\nclass name as part of the serialization algorithm"}, "afterCommit": {"oid": "84774806752a84b23b965b12345a702f7f9066cb", "author": {"user": {"login": "arhimondr", "name": "Andrii Rosa"}}, "url": "https://github.com/prestodb/presto/commit/84774806752a84b23b965b12345a702f7f9066cb", "committedDate": "2020-06-04T20:56:30Z", "message": "Register Kryo classes for more efficient serialization\n\nWhen classes are not registered, Kryo falls back to inlining fully specified\nclass name, similar to standard Java serialization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MDc1NzQ2", "url": "https://github.com/prestodb/presto/pull/14613#pullrequestreview-425075746", "createdAt": "2020-06-05T07:54:24Z", "commit": {"oid": "84774806752a84b23b965b12345a702f7f9066cb"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzo1NDoyNVrOGfkIpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzo1NDoyNVrOGfkIpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc1MTA3OQ==", "bodyText": "is this the standard trick in SparkConf? (set a marker )", "url": "https://github.com/prestodb/presto/pull/14613#discussion_r435751079", "createdAt": "2020-06-05T07:54:25Z", "author": {"login": "wenleix"}, "path": "presto-spark-classloader-interface/src/main/java/com/facebook/presto/spark/classloader_interface/PrestoSparkConfInitializer.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.spark.classloader_interface;\n+\n+import org.apache.spark.SparkConf;\n+import org.apache.spark.SparkContext;\n+\n+public class PrestoSparkConfInitializer\n+{\n+    private static final String INITIALIZED_MARKER = \"presto.spark.conf.initialized\";\n+\n+    private PrestoSparkConfInitializer() {}\n+\n+    public static void initialize(SparkConf sparkConf)\n+    {\n+        if (sparkConf.get(INITIALIZED_MARKER, null) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84774806752a84b23b965b12345a702f7f9066cb"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NDAzNTYw", "url": "https://github.com/prestodb/presto/pull/14613#pullrequestreview-425403560", "createdAt": "2020-06-05T15:29:52Z", "commit": {"oid": "84774806752a84b23b965b12345a702f7f9066cb"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1765, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}