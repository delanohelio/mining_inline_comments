{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4ODE3Njc0", "number": 15187, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjo0OToyMFrOElC19A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNTo0MjoxMFrOEmJirQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3Mjc5MzQ4OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjo0OToyMFrOHUUrpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOToyNDoyOFrOHUZRoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA3MjQyMg==", "bodyText": "can you remind me again why requested columns is optional?  requested columns being optional and predicate columns not makes the logic here kind of confusing. Is it possible to always provide it?", "url": "https://github.com/prestodb/presto/pull/15187#discussion_r491072422", "createdAt": "2020-09-18T16:49:20Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -470,6 +481,43 @@ public CounterStat getHighMemorySplitSource()\n         return concat(partitionBatches);\n     }\n \n+    private static Optional<Set<HiveColumnHandle>> mergeRequestedAndPredicateColumns(Optional<Set<HiveColumnHandle>> requestedColumns, Set<HiveColumnHandle> predicateColumns)\n+    {\n+        if (!requestedColumns.isPresent() || predicateColumns.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87d4e2e8554c8bf5e61bbb410f567a838b6d01ab"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0NzY4MQ==", "bodyText": "I am just going with the structure of HiveTableLayoutHandle and in this class - requestedColumns is optional and predicateColumns is not. Given this is where I get the data from, I don't think it is possible for me to always provide requestedColumns", "url": "https://github.com/prestodb/presto/pull/15187#discussion_r491147681", "createdAt": "2020-09-18T19:24:28Z", "author": {"login": "mayankgarg1990"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -470,6 +481,43 @@ public CounterStat getHighMemorySplitSource()\n         return concat(partitionBatches);\n     }\n \n+    private static Optional<Set<HiveColumnHandle>> mergeRequestedAndPredicateColumns(Optional<Set<HiveColumnHandle>> requestedColumns, Set<HiveColumnHandle> predicateColumns)\n+    {\n+        if (!requestedColumns.isPresent() || predicateColumns.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA3MjQyMg=="}, "originalCommit": {"oid": "87d4e2e8554c8bf5e61bbb410f567a838b6d01ab"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzE3MzQ5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODo1MTozNFrOHUYWjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODo1MTozNFrOHUYWjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEzMjU1OQ==", "bodyText": "You can use the groupingBy collector https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html#groupingBy-java.util.function.Function-java.util.stream.Collector-", "url": "https://github.com/prestodb/presto/pull/15187#discussion_r491132559", "createdAt": "2020-09-18T18:51:34Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -470,6 +481,43 @@ public CounterStat getHighMemorySplitSource()\n         return concat(partitionBatches);\n     }\n \n+    private static Optional<Set<HiveColumnHandle>> mergeRequestedAndPredicateColumns(Optional<Set<HiveColumnHandle>> requestedColumns, Set<HiveColumnHandle> predicateColumns)\n+    {\n+        if (!requestedColumns.isPresent() || predicateColumns.isEmpty()) {\n+            return requestedColumns;\n+        }\n+\n+        Map<String, Set<HiveColumnHandle>> nameToColumnHandles = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87d4e2e8554c8bf5e61bbb410f567a838b6d01ab"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzIwOTcwOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTowNDozNVrOHUYttA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOToyNjowM1rOHUZUfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEzODQ4NA==", "bodyText": "why can we short circuit for non-structs?  is it because there will never be any subfields?  I think the shortcircuiting is more confusing.", "url": "https://github.com/prestodb/presto/pull/15187#discussion_r491138484", "createdAt": "2020-09-18T19:04:35Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -470,6 +481,43 @@ public CounterStat getHighMemorySplitSource()\n         return concat(partitionBatches);\n     }\n \n+    private static Optional<Set<HiveColumnHandle>> mergeRequestedAndPredicateColumns(Optional<Set<HiveColumnHandle>> requestedColumns, Set<HiveColumnHandle> predicateColumns)\n+    {\n+        if (!requestedColumns.isPresent() || predicateColumns.isEmpty()) {\n+            return requestedColumns;\n+        }\n+\n+        Map<String, Set<HiveColumnHandle>> nameToColumnHandles = new HashMap<>();\n+        Stream.concat(requestedColumns.get().stream(), predicateColumns.stream())\n+                .filter(column -> column.getColumnType() == REGULAR)\n+                .forEach(column -> nameToColumnHandles.computeIfAbsent(column.getName(), (key) -> new HashSet<>()).add(column));\n+\n+        return Optional.of(nameToColumnHandles.values().stream()\n+                .map(columnHandles -> {\n+                    HiveColumnHandle finalHandle = null;\n+                    for (HiveColumnHandle columnHandle : columnHandles) {\n+                        if (finalHandle == null) {\n+                            finalHandle = columnHandle;\n+                            continue;\n+                        }\n+\n+                        if (finalHandle.getHiveType().getCategory() != STRUCT || finalHandle.getRequiredSubfields().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87d4e2e8554c8bf5e61bbb410f567a838b6d01ab"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0ODQxNQ==", "bodyText": "Yes, because there will never be subfields in NON-structs. Well, there might be key, value stuff for maps, but that doesn't really impact encryption implementation since either the full map/array is encrypted or not.", "url": "https://github.com/prestodb/presto/pull/15187#discussion_r491148415", "createdAt": "2020-09-18T19:26:03Z", "author": {"login": "mayankgarg1990"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -470,6 +481,43 @@ public CounterStat getHighMemorySplitSource()\n         return concat(partitionBatches);\n     }\n \n+    private static Optional<Set<HiveColumnHandle>> mergeRequestedAndPredicateColumns(Optional<Set<HiveColumnHandle>> requestedColumns, Set<HiveColumnHandle> predicateColumns)\n+    {\n+        if (!requestedColumns.isPresent() || predicateColumns.isEmpty()) {\n+            return requestedColumns;\n+        }\n+\n+        Map<String, Set<HiveColumnHandle>> nameToColumnHandles = new HashMap<>();\n+        Stream.concat(requestedColumns.get().stream(), predicateColumns.stream())\n+                .filter(column -> column.getColumnType() == REGULAR)\n+                .forEach(column -> nameToColumnHandles.computeIfAbsent(column.getName(), (key) -> new HashSet<>()).add(column));\n+\n+        return Optional.of(nameToColumnHandles.values().stream()\n+                .map(columnHandles -> {\n+                    HiveColumnHandle finalHandle = null;\n+                    for (HiveColumnHandle columnHandle : columnHandles) {\n+                        if (finalHandle == null) {\n+                            finalHandle = columnHandle;\n+                            continue;\n+                        }\n+\n+                        if (finalHandle.getHiveType().getCategory() != STRUCT || finalHandle.getRequiredSubfields().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEzODQ4NA=="}, "originalCommit": {"oid": "87d4e2e8554c8bf5e61bbb410f567a838b6d01ab"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzIyNDcxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOToxMDoxM1rOHUY3Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMDozMzo1N1rOHUbFjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0MDkzNQ==", "bodyText": "Can this whole section be simplified to\nif (finalHandle == null || finalHandle.getRequiredSubfields.isEmpty() || columnHandle.getRequiredSubfields.isEmpty()) {\n   finalHandle = columnHandle;\n}\nelse {\n   finalHandle = (HiveColumnHandle) finalHandle.withRequiredSubfields(ImmutableList.copyOf(ImmutableSet.copyOf(\n                                    ImmutableList.<Subfield>builder().addAll(finalHandle.getRequiredSubfields()).addAll(columnHandle.getRequiredSubfields()).build())));\n}\n\nAlso, can we do it as a reduce on the stream instead of having a forloop inside the stream? (if we use groupingBy, don't even need to collect to map first)", "url": "https://github.com/prestodb/presto/pull/15187#discussion_r491140935", "createdAt": "2020-09-18T19:10:13Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -470,6 +481,43 @@ public CounterStat getHighMemorySplitSource()\n         return concat(partitionBatches);\n     }\n \n+    private static Optional<Set<HiveColumnHandle>> mergeRequestedAndPredicateColumns(Optional<Set<HiveColumnHandle>> requestedColumns, Set<HiveColumnHandle> predicateColumns)\n+    {\n+        if (!requestedColumns.isPresent() || predicateColumns.isEmpty()) {\n+            return requestedColumns;\n+        }\n+\n+        Map<String, Set<HiveColumnHandle>> nameToColumnHandles = new HashMap<>();\n+        Stream.concat(requestedColumns.get().stream(), predicateColumns.stream())\n+                .filter(column -> column.getColumnType() == REGULAR)\n+                .forEach(column -> nameToColumnHandles.computeIfAbsent(column.getName(), (key) -> new HashSet<>()).add(column));\n+\n+        return Optional.of(nameToColumnHandles.values().stream()\n+                .map(columnHandles -> {\n+                    HiveColumnHandle finalHandle = null;\n+                    for (HiveColumnHandle columnHandle : columnHandles) {\n+                        if (finalHandle == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87d4e2e8554c8bf5e61bbb410f567a838b6d01ab"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE3NzM1Ng==", "bodyText": "Thanks for advise on grouping by and reduce - this has made the code a lot simpler now.", "url": "https://github.com/prestodb/presto/pull/15187#discussion_r491177356", "createdAt": "2020-09-18T20:33:57Z", "author": {"login": "mayankgarg1990"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -470,6 +481,43 @@ public CounterStat getHighMemorySplitSource()\n         return concat(partitionBatches);\n     }\n \n+    private static Optional<Set<HiveColumnHandle>> mergeRequestedAndPredicateColumns(Optional<Set<HiveColumnHandle>> requestedColumns, Set<HiveColumnHandle> predicateColumns)\n+    {\n+        if (!requestedColumns.isPresent() || predicateColumns.isEmpty()) {\n+            return requestedColumns;\n+        }\n+\n+        Map<String, Set<HiveColumnHandle>> nameToColumnHandles = new HashMap<>();\n+        Stream.concat(requestedColumns.get().stream(), predicateColumns.stream())\n+                .filter(column -> column.getColumnType() == REGULAR)\n+                .forEach(column -> nameToColumnHandles.computeIfAbsent(column.getName(), (key) -> new HashSet<>()).add(column));\n+\n+        return Optional.of(nameToColumnHandles.values().stream()\n+                .map(columnHandles -> {\n+                    HiveColumnHandle finalHandle = null;\n+                    for (HiveColumnHandle columnHandle : columnHandles) {\n+                        if (finalHandle == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0MDkzNQ=="}, "originalCommit": {"oid": "87d4e2e8554c8bf5e61bbb410f567a838b6d01ab"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NDM3Njc3OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNTo0MjoxMFrOHWAo5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNTo1OTo1N1rOHWBcWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg0MTE4OA==", "bodyText": "@mayankgarg1990 Is this the right logic? For a SELECT count(*) FROM t WHERE a > 10 we can have requestedColumns empty and predicateColumns containing \"a\". In this case, don't we need to make sure user has access to \"a\" ?", "url": "https://github.com/prestodb/presto/pull/15187#discussion_r492841188", "createdAt": "2020-09-22T15:42:10Z", "author": {"login": "mbasmanova"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -470,6 +481,37 @@ public CounterStat getHighMemorySplitSource()\n         return concat(partitionBatches);\n     }\n \n+    @VisibleForTesting\n+    static Optional<Set<HiveColumnHandle>> mergeRequestedAndPredicateColumns(Optional<Set<HiveColumnHandle>> requestedColumns, Set<HiveColumnHandle> predicateColumns)\n+    {\n+        if (!requestedColumns.isPresent() || predicateColumns.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f86b23a3e5ec123c9b0a4c4a8932fc5f0c2ecdc"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg1NDM2Mg==", "bodyText": "In this case - I am checking for requestedColumns.isPresent() and the situation you are talking about will actually be requestedColumns.get().isEmpty().\nSo this check mainly ensures that due to some reason if we don't end up getting the requestedColumns field populated at all, the encryption provider will now try to get the credentials for all columns.", "url": "https://github.com/prestodb/presto/pull/15187#discussion_r492854362", "createdAt": "2020-09-22T15:59:57Z", "author": {"login": "mayankgarg1990"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -470,6 +481,37 @@ public CounterStat getHighMemorySplitSource()\n         return concat(partitionBatches);\n     }\n \n+    @VisibleForTesting\n+    static Optional<Set<HiveColumnHandle>> mergeRequestedAndPredicateColumns(Optional<Set<HiveColumnHandle>> requestedColumns, Set<HiveColumnHandle> predicateColumns)\n+    {\n+        if (!requestedColumns.isPresent() || predicateColumns.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg0MTE4OA=="}, "originalCommit": {"oid": "4f86b23a3e5ec123c9b0a4c4a8932fc5f0c2ecdc"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3678, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}