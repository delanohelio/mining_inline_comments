{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMzkyNDQw", "number": 14967, "title": "Fix druid connector bugs related to pushed down queries", "bodyText": "", "createdAt": "2020-08-05T13:41:47Z", "url": "https://github.com/prestodb/presto/pull/14967", "merged": true, "mergeCommit": {"oid": "521df87997f05fa4393826e858135f041dd27c52"}, "closed": true, "closedAt": "2020-08-07T23:04:45Z", "author": {"login": "weidongduan37"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc77X0pAH2gAyNDYzMzkyNDQwOmUzNzMzZTg4OGExYTcwMWI1ZDMwOTQwZTJhODkwMjBjMDNmNzMyOWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8srQ4gFqTQ2MzY4MTI3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e3733e888a1a701b5d30940e2a89020c03f7329b", "author": {"user": {"login": "weidongduan37", "name": null}}, "url": "https://github.com/prestodb/presto/commit/e3733e888a1a701b5d30940e2a89020c03f7329b", "committedDate": "2020-08-05T13:38:02Z", "message": "Fix unhandled HTTP response error for druid client"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTc4MDY1", "url": "https://github.com/prestodb/presto/pull/14967#pullrequestreview-461978065", "createdAt": "2020-08-05T19:56:16Z", "commit": {"oid": "7007046d1413d5f469c27dce2b5ef9ed2d7da7e0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTo1NjoxNlrOG8YaaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTo1NjoxNlrOG8YaaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk2NzcyMA==", "bodyText": "I think better not through PrestoException here. Could we do:\ncheckState(!hasAggregation && !hasFilter, ...)", "url": "https://github.com/prestodb/presto/pull/14967#discussion_r465967720", "createdAt": "2020-08-05T19:56:16Z", "author": {"login": "zhenxiao"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java", "diffHunk": "@@ -104,7 +105,12 @@ private DruidQueryGeneratorContext(\n \n     public DruidQueryGeneratorContext withFilter(String filter)\n     {\n-        checkState(!hasFilter(), \"Druid doesn't support filters at multiple levels\");\n+        if (!hasAggregation()) {\n+            checkState(!hasFilter(), \"Druid doesn't support filters at multiple levels under AggregationNode\");\n+        }\n+        else {\n+            throw new PrestoException(DRUID_PUSHDOWN_UNSUPPORTED_EXPRESSION, \"Druid does not support filter on top of AggregationNode.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7007046d1413d5f469c27dce2b5ef9ed2d7da7e0"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyOTcxMDg1", "url": "https://github.com/prestodb/presto/pull/14967#pullrequestreview-462971085", "createdAt": "2020-08-07T01:02:38Z", "commit": {"oid": "7007046d1413d5f469c27dce2b5ef9ed2d7da7e0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyOTc2NTYx", "url": "https://github.com/prestodb/presto/pull/14967#pullrequestreview-462976561", "createdAt": "2020-08-07T01:21:19Z", "commit": {"oid": "48c530fa238ac9dce29e3c47e011c8dd1da35556"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMToyMToyMFrOG9JUaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMToyMToyMFrOG9JUaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2OTAwMw==", "bodyText": "Can I have the query you are using for test?   For the query below I ran, this 'if' statement is not reachable.\nselect * from druid.wikipedia where __time > timestamp '2016-06-26 19:00:00.000';\nBecause for the call 'greater_than(__time, timestamp)', it will go through line 177.  And the second argument of this call is a constant which will go to the 'visitConstant' method and then call the getLiteralAsString", "url": "https://github.com/prestodb/presto/pull/14967#discussion_r466769003", "createdAt": "2020-08-07T01:21:20Z", "author": {"login": "beinan"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidFilterExpressionConverter.java", "diffHunk": "@@ -185,7 +185,7 @@ public DruidExpression visitCall(CallExpression call, Function<VariableReference\n                 throw new PrestoException(DRUID_PUSHDOWN_UNSUPPORTED_EXPRESSION, \"Invalid Timestamp literal in Druid filter: \" + argument.toString());\n             }\n             SqlTimestamp value = new SqlTimestamp((long) ((ConstantExpression) argument).getValue());\n-            return new DruidExpression(\"'\" + value.toString() + \"'\", Origin.LITERAL);\n+            return derived(\" TIMESTAMP '\" + value.toString() + \"'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48c530fa238ac9dce29e3c47e011c8dd1da35556"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMDI4MjQz", "url": "https://github.com/prestodb/presto/pull/14967#pullrequestreview-463028243", "createdAt": "2020-08-07T04:36:02Z", "commit": {"oid": "4cf91f1c7e6327512343f482a398342e5fd67872"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNDozNjowM1rOG9MK9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNDozNjowM1rOG9MK9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgxNTczNA==", "bodyText": "I don't think we can ignore the timezone here.  The session here is the ConnectorSession,  we cannot assume the connection to druid is always using UTC (though now it's just using UTC).\n\nBy default, time operations use the UTC time zone. You can change the time zone by setting the connection context parameter \"sqlTimeZone\" to the name of another time zone, like \"America/Los_Angeles\", or to an offset like \"-08:00\". If you need to mix multiple time zones in the same query, or if you need to use a time zone other than the connection time zone, some functions also accept time zones as parameters. These parameters always take precedence over the connection time zone.\nfrom Druid https://druid.apache.org/docs/latest/querying/sql.html#time-functions", "url": "https://github.com/prestodb/presto/pull/14967#discussion_r466815734", "createdAt": "2020-08-07T04:36:03Z", "author": {"login": "beinan"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidFilterExpressionConverter.java", "diffHunk": "@@ -184,7 +184,7 @@ public DruidExpression visitCall(CallExpression call, Function<VariableReference\n             if (!(argument instanceof ConstantExpression)) {\n                 throw new PrestoException(DRUID_PUSHDOWN_UNSUPPORTED_EXPRESSION, \"Invalid Timestamp literal in Druid filter: \" + argument.toString());\n             }\n-            SqlTimestamp value = new SqlTimestamp((long) ((ConstantExpression) argument).getValue(), session.getSqlFunctionProperties().getTimeZoneKey());\n+            SqlTimestamp value = new SqlTimestamp((long) ((ConstantExpression) argument).getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cf91f1c7e6327512343f482a398342e5fd67872"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNDg0ODE4", "url": "https://github.com/prestodb/presto/pull/14967#pullrequestreview-463484818", "createdAt": "2020-08-07T17:31:48Z", "commit": {"oid": "7007046d1413d5f469c27dce2b5ef9ed2d7da7e0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzozMTo0OFrOG9iI6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzozMTo0OFrOG9iI6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3NTY1OA==", "bodyText": "To simplify the logic, could we use:\nif (hasAggregation) {\nthrow new PrestoException...\n}\ncheckState(...)", "url": "https://github.com/prestodb/presto/pull/14967#discussion_r467175658", "createdAt": "2020-08-07T17:31:48Z", "author": {"login": "zhenxiao"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidQueryGeneratorContext.java", "diffHunk": "@@ -104,7 +105,12 @@ private DruidQueryGeneratorContext(\n \n     public DruidQueryGeneratorContext withFilter(String filter)\n     {\n-        checkState(!hasFilter(), \"Druid doesn't support filters at multiple levels\");\n+        if (!hasAggregation()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7007046d1413d5f469c27dce2b5ef9ed2d7da7e0"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28da710f0ac821536dafe84750798a2a75c3a6f2", "author": {"user": {"login": "weidongduan37", "name": null}}, "url": "https://github.com/prestodb/presto/commit/28da710f0ac821536dafe84750798a2a75c3a6f2", "committedDate": "2020-08-07T21:02:23Z", "message": "Support FilterNode on top of AggregationNode\n\n\"having\" condition for sql involves \"group by\" is common case, and it\nwill generate a FilterNode on top of AggregationNode. Previously,\nThe SQL will fail directly, and now it allows such case. However, such\nfilter is not pushed down to Druid, just filter at presto side because\nwe could not confirm all filters on top of AggregationNode have\ncorresponding 'dql' pattern to describe it."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7007046d1413d5f469c27dce2b5ef9ed2d7da7e0", "author": {"user": {"login": "weidongduan37", "name": null}}, "url": "https://github.com/prestodb/presto/commit/7007046d1413d5f469c27dce2b5ef9ed2d7da7e0", "committedDate": "2020-08-05T13:38:45Z", "message": "Support FilterNode on top of AggregationNode\n\n\"having\" condition for sql involves \"group by\" is common case, and it\nwill generate a FilterNode on top of AggregationNode. Previously,\nThe SQL will fail directly, and now it allows such case. However, such\nfilter is not pushed down to Druid, just filter at presto side because\nwe could not confirm all filters on top of AggregationNode have\ncorresponding 'dql' pattern to describe it."}, "afterCommit": {"oid": "28da710f0ac821536dafe84750798a2a75c3a6f2", "author": {"user": {"login": "weidongduan37", "name": null}}, "url": "https://github.com/prestodb/presto/commit/28da710f0ac821536dafe84750798a2a75c3a6f2", "committedDate": "2020-08-07T21:02:23Z", "message": "Support FilterNode on top of AggregationNode\n\n\"having\" condition for sql involves \"group by\" is common case, and it\nwill generate a FilterNode on top of AggregationNode. Previously,\nThe SQL will fail directly, and now it allows such case. However, such\nfilter is not pushed down to Druid, just filter at presto side because\nwe could not confirm all filters on top of AggregationNode have\ncorresponding 'dql' pattern to describe it."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjgxMjc0", "url": "https://github.com/prestodb/presto/pull/14967#pullrequestreview-463681274", "createdAt": "2020-08-07T23:04:37Z", "commit": {"oid": "28da710f0ac821536dafe84750798a2a75c3a6f2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 434, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}