{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NjY2OTQ1", "number": 14922, "title": "Handle create page source for Druid segment on s3", "bodyText": "Please make sure your submission complies with our Development, Formatting, and Commit Message guidelines.\nFill in the release notes towards the bottom of the PR description.\nSee Release Notes Guidelines for details.\n== RELEASE NOTES ==\n\nDruid Changes\n* Fix errors when reading Druid segment file on S3\n\nTo address: #14921", "createdAt": "2020-07-29T20:11:02Z", "url": "https://github.com/prestodb/presto/pull/14922", "merged": true, "mergeCommit": {"oid": "a4f14e433587ad325a4f2ec18f1ef300cab36809"}, "closed": true, "closedAt": "2020-08-01T05:34:10Z", "author": {"login": "jinyangli34"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc51HP1gFqTQ1Nzk5MzYxNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6dhiTABqjM2MTA4NzAxNTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3OTkzNjE1", "url": "https://github.com/prestodb/presto/pull/14922#pullrequestreview-457993615", "createdAt": "2020-07-30T00:56:39Z", "commit": {"oid": "0e1a62155e3e66d3d6868a9d5170272fc1e47559"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMDo1NjozOVrOG5PROg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMToxMDoxOFrOG5PfQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3MjE4Ng==", "bodyText": "Is there anything else we need escaping in the uri?  something like '?' and  '='.\nI'm thinking if we can use any existing '%' encoding function to do this.", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r462672186", "createdAt": "2020-07-30T00:56:39Z", "author": {"login": "beinan"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -112,11 +114,41 @@ public DeepStorageType getDeepStorageType()\n         return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n     }\n \n-    public String getDeepStoragePath()\n+    public URI getDeepStoragePath() throws IOException\n     {\n-        Map<String, String> loadSpecification = getLoadSpecification()\n+        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n+        final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return loadSpecification.get(SEGMENT_PATH_KEY);\n+        final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n+        final URI segmentLocURI;\n+        switch (type) {\n+            case \"s3_zip\":\n+                final String s3schema = \"s3a\".equals(loadSpec.get(\"S3Schema\")) ? \"s3a\" : \"s3n\";\n+                segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(\"bucket\"), loadSpec.get(\"key\")));\n+                break;\n+            case \"hdfs\":\n+                segmentLocURI = URI.create(loadSpec.get(\"path\"));\n+                break;\n+            case \"google\":\n+                segmentLocURI = URI.create(\n+                    format(\n+                        \"gs://%s/%s\",\n+                        loadSpec.get(\"bucket\"),\n+                        loadSpec.get(\"path\").replace(\":\", \"%3A\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1a62155e3e66d3d6868a9d5170272fc1e47559"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3NDY1Ng==", "bodyText": "extract s3a, s3n, S2Schema and etc. as constants?", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r462674656", "createdAt": "2020-07-30T01:06:03Z", "author": {"login": "beinan"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -112,11 +114,41 @@ public DeepStorageType getDeepStorageType()\n         return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n     }\n \n-    public String getDeepStoragePath()\n+    public URI getDeepStoragePath() throws IOException\n     {\n-        Map<String, String> loadSpecification = getLoadSpecification()\n+        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n+        final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return loadSpecification.get(SEGMENT_PATH_KEY);\n+        final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n+        final URI segmentLocURI;\n+        switch (type) {\n+            case \"s3_zip\":\n+                final String s3schema = \"s3a\".equals(loadSpec.get(\"S3Schema\")) ? \"s3a\" : \"s3n\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1a62155e3e66d3d6868a9d5170272fc1e47559"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3NTc3Nw==", "bodyText": "Is it better to throw a PrestoException(DRUID_METADATA_ERROR`, ...)?  also for line 144", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r462675777", "createdAt": "2020-07-30T01:10:18Z", "author": {"login": "beinan"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -112,11 +114,41 @@ public DeepStorageType getDeepStorageType()\n         return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n     }\n \n-    public String getDeepStoragePath()\n+    public URI getDeepStoragePath() throws IOException\n     {\n-        Map<String, String> loadSpecification = getLoadSpecification()\n+        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n+        final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return loadSpecification.get(SEGMENT_PATH_KEY);\n+        final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n+        final URI segmentLocURI;\n+        switch (type) {\n+            case \"s3_zip\":\n+                final String s3schema = \"s3a\".equals(loadSpec.get(\"S3Schema\")) ? \"s3a\" : \"s3n\";\n+                segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(\"bucket\"), loadSpec.get(\"key\")));\n+                break;\n+            case \"hdfs\":\n+                segmentLocURI = URI.create(loadSpec.get(\"path\"));\n+                break;\n+            case \"google\":\n+                segmentLocURI = URI.create(\n+                    format(\n+                        \"gs://%s/%s\",\n+                        loadSpec.get(\"bucket\"),\n+                        loadSpec.get(\"path\").replace(\":\", \"%3A\")));\n+                break;\n+            case \"local\":\n+                try {\n+                    segmentLocURI = new URI(\"file\", null, loadSpec.get(\"path\"), null, null);\n+                }\n+                catch (URISyntaxException e) {\n+                    throw new IOException(e);\n+                }\n+                break;\n+            default:\n+                throw new IOException(\"Unable to determine segment filesystem: \" + type);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1a62155e3e66d3d6868a9d5170272fc1e47559"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NTI1MzM3", "url": "https://github.com/prestodb/presto/pull/14922#pullrequestreview-458525337", "createdAt": "2020-07-30T15:41:01Z", "commit": {"oid": "0e1a62155e3e66d3d6868a9d5170272fc1e47559"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4ODk3NzAx", "url": "https://github.com/prestodb/presto/pull/14922#pullrequestreview-458897701", "createdAt": "2020-07-31T03:39:20Z", "commit": {"oid": "dcc401a95f24667b9ccbf815cd629f2f0fdda745"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMzozOToyMVrOG56_4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMzo1MDo1MVrOG57JnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4ODY0Mg==", "bodyText": "Any chance to switch by the enum you just defined -- DeepStorageType ?", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463388642", "createdAt": "2020-07-31T03:39:21Z", "author": {"login": "beinan"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -114,38 +123,37 @@ public DeepStorageType getDeepStorageType()\n         return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n     }\n \n-    public URI getDeepStoragePath() throws IOException\n+    public URI getDeepStoragePath()\n     {\n         // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n         final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n         final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n         final URI segmentLocURI;\n-        switch (type) {\n-            case \"s3_zip\":\n-                final String s3schema = \"s3a\".equals(loadSpec.get(\"S3Schema\")) ? \"s3a\" : \"s3n\";\n-                segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(\"bucket\"), loadSpec.get(\"key\")));\n-                break;\n-            case \"hdfs\":\n-                segmentLocURI = URI.create(loadSpec.get(\"path\"));\n-                break;\n-            case \"google\":\n-                segmentLocURI = URI.create(\n-                    format(\n-                        \"gs://%s/%s\",\n-                        loadSpec.get(\"bucket\"),\n-                        loadSpec.get(\"path\").replace(\":\", \"%3A\")));\n-                break;\n-            case \"local\":\n-                try {\n-                    segmentLocURI = new URI(\"file\", null, loadSpec.get(\"path\"), null, null);\n-                }\n-                catch (URISyntaxException e) {\n-                    throw new IOException(e);\n-                }\n-                break;\n-            default:\n-                throw new IOException(\"Unable to determine segment filesystem: \" + type);\n+        try {\n+            switch (type) {\n+                case \"s3_zip\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcc401a95f24667b9ccbf815cd629f2f0fdda745"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM5MTEzMg==", "bodyText": "Any document or github issue we can link here rather than a piece of source code?", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463391132", "createdAt": "2020-07-31T03:50:51Z", "author": {"login": "beinan"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -114,38 +123,37 @@ public DeepStorageType getDeepStorageType()\n         return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n     }\n \n-    public URI getDeepStoragePath() throws IOException\n+    public URI getDeepStoragePath()\n     {\n         // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcc401a95f24667b9ccbf815cd629f2f0fdda745"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4OTM1NTY5", "url": "https://github.com/prestodb/presto/pull/14922#pullrequestreview-458935569", "createdAt": "2020-07-31T06:05:37Z", "commit": {"oid": "dcc401a95f24667b9ccbf815cd629f2f0fdda745"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNjowNTozN1rOG59BJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNjoxMDozNlrOG59GTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMTczNQ==", "bodyText": "s/S3_ZIP/S3/g\nzip is the file format, we just use S3 for storage type", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463421735", "createdAt": "2020-07-31T06:05:37Z", "author": {"login": "zhenxiao"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -42,7 +50,10 @@\n \n     public enum DeepStorageType\n     {\n-        HDFS(\"hdfs\");\n+        HDFS(\"hdfs\"),\n+        S3_ZIP(\"s3_zip\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcc401a95f24667b9ccbf815cd629f2f0fdda745"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMTc4OQ==", "bodyText": "s/GOOGLE/GCS/g", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463421789", "createdAt": "2020-07-31T06:05:55Z", "author": {"login": "zhenxiao"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -42,7 +50,10 @@\n \n     public enum DeepStorageType\n     {\n-        HDFS(\"hdfs\");\n+        HDFS(\"hdfs\"),\n+        S3_ZIP(\"s3_zip\"),\n+        GOOGLE(\"google\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcc401a95f24667b9ccbf815cd629f2f0fdda745"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMjkwOA==", "bodyText": "Unsupported segment filesystem", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463422908", "createdAt": "2020-07-31T06:10:01Z", "author": {"login": "zhenxiao"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -112,11 +123,40 @@ public DeepStorageType getDeepStorageType()\n         return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n     }\n \n-    public String getDeepStoragePath()\n+    public URI getDeepStoragePath()\n     {\n-        Map<String, String> loadSpecification = getLoadSpecification()\n+        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n+        final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return loadSpecification.get(SEGMENT_PATH_KEY);\n+        final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n+        final URI segmentLocURI;\n+        try {\n+            switch (type) {\n+                case \"s3_zip\":\n+                    final String s3schema = S3A_SCHEMA.equals(loadSpec.get(DEEP_STORAGE_S3_SCHEMA_KEY)) ? S3A_SCHEMA : S3N_SCHEMA;\n+                    segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(DEEP_STORAGE_BUCKET_KEY), loadSpec.get(\"key\")));\n+                    break;\n+                case \"hdfs\":\n+                    segmentLocURI = URI.create(loadSpec.get(DEEP_STORAGE_PATH_KEY));\n+                    break;\n+                case \"google\":\n+                    segmentLocURI = URI.create(\n+                            format(\"gs://%s/%s\",\n+                                loadSpec.get(DEEP_STORAGE_BUCKET_KEY),\n+                                URLEncoder.encode(loadSpec.get(DEEP_STORAGE_PATH_KEY), \"UTF-8\")));\n+                    break;\n+                case \"local\":\n+                    segmentLocURI = new URI(\"file\", null, loadSpec.get(DEEP_STORAGE_PATH_KEY), null, null);\n+                    break;\n+                default:\n+                    throw new PrestoException(DRUID_METADATA_ERROR, format(\"Unable to determine segment filesystem: %s\", type));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcc401a95f24667b9ccbf815cd629f2f0fdda745"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQyMzA1Mw==", "bodyText": "remove this blank line", "url": "https://github.com/prestodb/presto/pull/14922#discussion_r463423053", "createdAt": "2020-07-31T06:10:36Z", "author": {"login": "zhenxiao"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/metadata/DruidSegmentInfo.java", "diffHunk": "@@ -112,11 +123,40 @@ public DeepStorageType getDeepStorageType()\n         return DeepStorageType.valueOf(loadSpecification.get(DEEP_STORAGE_TYPE_KEY).toUpperCase());\n     }\n \n-    public String getDeepStoragePath()\n+    public URI getDeepStoragePath()\n     {\n-        Map<String, String> loadSpecification = getLoadSpecification()\n+        // Logic from https://github.com/apache/druid/blob/63c1746fe40fc40d60dbc77f411e58949c102bfa/indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java#L776\n+        final Map<String, String> loadSpec = getLoadSpecification()\n                 .orElseThrow(() -> new PrestoException(DRUID_METADATA_ERROR, format(\"Malformed segment loadSpecification: %s\", getLoadSpecification())));\n-        return loadSpecification.get(SEGMENT_PATH_KEY);\n+        final String type = loadSpec.get(DEEP_STORAGE_TYPE_KEY);\n+        final URI segmentLocURI;\n+        try {\n+            switch (type) {\n+                case \"s3_zip\":\n+                    final String s3schema = S3A_SCHEMA.equals(loadSpec.get(DEEP_STORAGE_S3_SCHEMA_KEY)) ? S3A_SCHEMA : S3N_SCHEMA;\n+                    segmentLocURI = URI.create(format(\"%s://%s/%s\", s3schema, loadSpec.get(DEEP_STORAGE_BUCKET_KEY), loadSpec.get(\"key\")));\n+                    break;\n+                case \"hdfs\":\n+                    segmentLocURI = URI.create(loadSpec.get(DEEP_STORAGE_PATH_KEY));\n+                    break;\n+                case \"google\":\n+                    segmentLocURI = URI.create(\n+                            format(\"gs://%s/%s\",\n+                                loadSpec.get(DEEP_STORAGE_BUCKET_KEY),\n+                                URLEncoder.encode(loadSpec.get(DEEP_STORAGE_PATH_KEY), \"UTF-8\")));\n+                    break;\n+                case \"local\":\n+                    segmentLocURI = new URI(\"file\", null, loadSpec.get(DEEP_STORAGE_PATH_KEY), null, null);\n+                    break;\n+                default:\n+                    throw new PrestoException(DRUID_METADATA_ERROR, format(\"Unable to determine segment filesystem: %s\", type));\n+            }\n+        }\n+        catch (URISyntaxException | UnsupportedEncodingException e) {\n+            throw new PrestoException(DRUID_METADATA_ERROR, e);\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcc401a95f24667b9ccbf815cd629f2f0fdda745"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NTIxNTU4", "url": "https://github.com/prestodb/presto/pull/14922#pullrequestreview-459521558", "createdAt": "2020-07-31T23:23:39Z", "commit": {"oid": "e8ebd9cc68c484f12ae21ac8c6815a7b653f88d2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "680a43fc9becd4ec872a3f7ea75389e5bf864978", "author": {"user": {"login": "jinyangli34", "name": null}}, "url": "https://github.com/prestodb/presto/commit/680a43fc9becd4ec872a3f7ea75389e5bf864978", "committedDate": "2020-08-01T00:17:17Z", "message": "Handle create page source for Druid segment on s3"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e8ebd9cc68c484f12ae21ac8c6815a7b653f88d2", "author": {"user": {"login": "jinyangli34", "name": null}}, "url": "https://github.com/prestodb/presto/commit/e8ebd9cc68c484f12ae21ac8c6815a7b653f88d2", "committedDate": "2020-07-31T07:19:55Z", "message": "Address comments"}, "afterCommit": {"oid": "680a43fc9becd4ec872a3f7ea75389e5bf864978", "author": {"user": {"login": "jinyangli34", "name": null}}, "url": "https://github.com/prestodb/presto/commit/680a43fc9becd4ec872a3f7ea75389e5bf864978", "committedDate": "2020-08-01T00:17:17Z", "message": "Handle create page source for Druid segment on s3"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 368, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}