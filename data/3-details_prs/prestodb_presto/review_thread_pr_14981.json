{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MTAwMjAw", "number": 14981, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQwOToyMToxNlrOEWjvGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQwOToyMToxNlrOEWjvGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMDg5NjI1OnYy", "diffSide": "RIGHT", "path": "presto-common/src/main/java/com/facebook/presto/common/Page.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQwOToyMToxNlrOG95jKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxODozNjo1NlrOG988Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU1OTIxMQ==", "bodyText": "Should we validate the channel ranges?", "url": "https://github.com/prestodb/presto/pull/14981#discussion_r467559211", "createdAt": "2020-08-09T09:21:16Z", "author": {"login": "yingsu00"}, "path": "presto-common/src/main/java/com/facebook/presto/common/Page.java", "diffHunk": "@@ -318,6 +318,28 @@ public Page getPositions(int[] retainedPositions, int offset, int length)\n         return wrapBlocksWithoutCopy(length, blocks);\n     }\n \n+    public Page copyPositions(int[] retainedPositions, int offset, int length)\n+    {\n+        requireNonNull(retainedPositions, \"retainedPositions is null\");\n+\n+        Block[] blocks = new Block[this.blocks.length];\n+        for (int i = 0; i < blocks.length; i++) {\n+            blocks[i] = this.blocks[i].copyPositions(retainedPositions, offset, length);\n+        }\n+        return wrapBlocksWithoutCopy(length, blocks);\n+    }\n+\n+    public Page extractChannels(int[] channels)\n+    {\n+        requireNonNull(channels, \"channels is null\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b2c8a57b575abab73d8b5cce73500c3148edd1d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYxNDgxNA==", "bodyText": "I thought about that, but decided against it because none of the usage sites that were previously doing this kind of operation before we\u2019re checking the ranges (with one exception that checked that all indexes were positive in its constructor, and still does).\nMy worry would be about adding more overhead in checking per call rather than once during construction that the JIT may or may not be able to leverage to elide range checks during access anyway, so I left it out.", "url": "https://github.com/prestodb/presto/pull/14981#discussion_r467614814", "createdAt": "2020-08-09T18:36:56Z", "author": {"login": "pettyjamesm"}, "path": "presto-common/src/main/java/com/facebook/presto/common/Page.java", "diffHunk": "@@ -318,6 +318,28 @@ public Page getPositions(int[] retainedPositions, int offset, int length)\n         return wrapBlocksWithoutCopy(length, blocks);\n     }\n \n+    public Page copyPositions(int[] retainedPositions, int offset, int length)\n+    {\n+        requireNonNull(retainedPositions, \"retainedPositions is null\");\n+\n+        Block[] blocks = new Block[this.blocks.length];\n+        for (int i = 0; i < blocks.length; i++) {\n+            blocks[i] = this.blocks[i].copyPositions(retainedPositions, offset, length);\n+        }\n+        return wrapBlocksWithoutCopy(length, blocks);\n+    }\n+\n+    public Page extractChannels(int[] channels)\n+    {\n+        requireNonNull(channels, \"channels is null\");\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU1OTIxMQ=="}, "originalCommit": {"oid": "8b2c8a57b575abab73d8b5cce73500c3148edd1d"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2264, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}