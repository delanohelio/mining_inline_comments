{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5ODI0NDM2", "number": 14449, "title": "Cse filter", "bodyText": "Depends on #14303\n== RELEASE NOTES ==\n\nGeneral Changes\n* Enable `optimize_common_sub_expressions` for filter", "createdAt": "2020-04-28T01:03:38Z", "url": "https://github.com/prestodb/presto/pull/14449", "merged": true, "mergeCommit": {"oid": "a75114b306232a7565075da4f53cb83a9157ca62"}, "closed": true, "closedAt": "2020-04-30T23:56:15Z", "author": {"login": "rongrong"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccc1ncABqjMyODU5MDQ2Nzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcc0ySQgBqjMyOTE1Nzg2MjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "842617c5567ff315a9a7c678273b02724863699d", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/842617c5567ff315a9a7c678273b02724863699d", "committedDate": "2020-04-28T01:00:36Z", "message": "Enable common sub expression optimization in PageFunctionCompiler filter"}, "afterCommit": {"oid": "b50b6e94e1ee4c0de34c1f282aeccf1ec8c2eb1d", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/b50b6e94e1ee4c0de34c1f282aeccf1ec8c2eb1d", "committedDate": "2020-04-29T18:29:12Z", "message": "Enable common sub expression optimization in PageFunctionCompiler filter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzODM5Njk0", "url": "https://github.com/prestodb/presto/pull/14449#pullrequestreview-403839694", "createdAt": "2020-04-30T20:06:47Z", "commit": {"oid": "b50b6e94e1ee4c0de34c1f282aeccf1ec8c2eb1d"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDowNjo0N1rOGO4ebw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDowNzoxNFrOGO4fQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1ODU0Mw==", "bodyText": "Spell out CSE?", "url": "https://github.com/prestodb/presto/pull/14449#discussion_r418258543", "createdAt": "2020-04-30T20:06:47Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java", "diffHunk": "@@ -328,10 +327,7 @@ private ClassDefinition definePageProjectWorkClass(SqlFunctionProperties sqlFunc\n                 .append(thisVariable.setField(nextIndexOrPositionField, selectedPositions.invoke(\"getOffset\", int.class)))\n                 .append(thisVariable.setField(resultField, constantNull(Block.class)));\n \n-        cseFields.values().forEach(fields -> {\n-            body.append(thisVariable.setField(fields.evaluatedField, constantBoolean(false)));\n-            body.append(thisVariable.setField(fields.resultField, constantNull(fields.resultType)));\n-        });\n+        initializeCSEFields(cseFields.values(), thisVariable, body);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b50b6e94e1ee4c0de34c1f282aeccf1ec8c2eb1d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1ODY0Mg==", "bodyText": "same", "url": "https://github.com/prestodb/presto/pull/14449#discussion_r418258642", "createdAt": "2020-04-30T20:07:01Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java", "diffHunk": "@@ -580,7 +576,22 @@ private ClassDefinition defineFilterClass(SqlFunctionProperties sqlFunctionPrope\n         CachedInstanceBinder cachedInstanceBinder = new CachedInstanceBinder(classDefinition, callSiteBinder);\n \n         Map<LambdaDefinitionExpression, CompiledLambda> compiledLambdaMap = generateMethodsForLambda(classDefinition, callSiteBinder, cachedInstanceBinder, filter, metadata, sqlFunctionProperties);\n-        generateFilterMethod(sqlFunctionProperties, classDefinition, callSiteBinder, cachedInstanceBinder, compiledLambdaMap, filter);\n+\n+        // cse\n+        Map<VariableReferenceExpression, CommonSubExpressionFields> cseFields = ImmutableMap.of();\n+        if (isOptimizeCommonSubExpression) {\n+            Map<Integer, Map<RowExpression, VariableReferenceExpression>> commonSubExpressionsByLevel = collectCSEByLevel(filter);\n+            if (!commonSubExpressionsByLevel.isEmpty()) {\n+                cseFields = declareCommonSubExpressionFields(classDefinition, commonSubExpressionsByLevel);\n+                generateCSEMethods(sqlFunctionProperties, classDefinition, callSiteBinder, cachedInstanceBinder, compiledLambdaMap, commonSubExpressionsByLevel, cseFields);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b50b6e94e1ee4c0de34c1f282aeccf1ec8c2eb1d"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1ODc1NA==", "bodyText": "same", "url": "https://github.com/prestodb/presto/pull/14449#discussion_r418258754", "createdAt": "2020-04-30T20:07:14Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java", "diffHunk": "@@ -686,15 +707,17 @@ private MethodDefinition generateFilterMethod(\n \n         Scope scope = method.getScope();\n         BytecodeBlock body = method.getBody();\n+        Variable thisVariable = scope.getThis();\n \n         declareBlockVariables(ImmutableList.of(filter), page, scope, body);\n+        cseFields.values().forEach(fields -> body.append(thisVariable.setField(fields.evaluatedField, constantBoolean(false))));\n \n         Variable wasNullVariable = scope.declareVariable(\"wasNull\", body, constantFalse());\n         RowExpressionCompiler compiler = new RowExpressionCompiler(\n                 classDefinition,\n                 callSiteBinder,\n                 cachedInstanceBinder,\n-                fieldReferenceCompiler(callSiteBinder),\n+                new CSEFieldAndVariableReferenceCompiler(callSiteBinder, cseFields, thisVariable),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b50b6e94e1ee4c0de34c1f282aeccf1ec8c2eb1d"}, "originalPosition": 149}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b50b6e94e1ee4c0de34c1f282aeccf1ec8c2eb1d", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/b50b6e94e1ee4c0de34c1f282aeccf1ec8c2eb1d", "committedDate": "2020-04-29T18:29:12Z", "message": "Enable common sub expression optimization in PageFunctionCompiler filter"}, "afterCommit": {"oid": "5718d201988ae6afbfb90b1d83621b48283bd246", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/5718d201988ae6afbfb90b1d83621b48283bd246", "committedDate": "2020-04-30T20:38:09Z", "message": "Enable common sub expression optimization in PageFunctionCompiler filter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b042ac77dca5091b4c9cb5558e31ef3d4255087d", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/b042ac77dca5091b4c9cb5558e31ef3d4255087d", "committedDate": "2020-04-30T22:24:38Z", "message": "Enable common sub expression optimization in PageFunctionCompiler filter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5718d201988ae6afbfb90b1d83621b48283bd246", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/5718d201988ae6afbfb90b1d83621b48283bd246", "committedDate": "2020-04-30T20:38:09Z", "message": "Enable common sub expression optimization in PageFunctionCompiler filter"}, "afterCommit": {"oid": "b042ac77dca5091b4c9cb5558e31ef3d4255087d", "author": {"user": {"login": "rongrong", "name": "Rongrong Zhong"}}, "url": "https://github.com/prestodb/presto/commit/b042ac77dca5091b4c9cb5558e31ef3d4255087d", "committedDate": "2020-04-30T22:24:38Z", "message": "Enable common sub expression optimization in PageFunctionCompiler filter"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1923, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}