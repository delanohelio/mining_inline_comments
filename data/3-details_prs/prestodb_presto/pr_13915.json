{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NzU3MjI4", "number": 13915, "title": "Add release notes for 0.230", "bodyText": "Missing Release Notes\nAmi Tavory\n\n #13574 Refactor Differential Entropy for Mutual Information Classification (Merged by: Rebecca Schlussel)\n\nAndrii Rosa\n\n 621eda4 Set boolean value to 0 if the position is null\n c446291 Check aggregation mask values for null\n\nGaurav Mittal\n\n #13704 Add support for JNI based decompression for zstd files (Merged by: James Sun)\n #13697 Wrap OrcReader parameters into OrcReaderOptions (Merged by: James Sun)\n\nLeiqing Cai\n\n ec9f477 Disable TestDistributedSpilledQueries#testLimitWithJoin\n f189ca7 Make TestUpgradeMetadata single threaded\n\nMasha Basmanova\n\n 08dba52 Fix selective stream readers\n 20653ea Fix BooleanInputStream#getSetBits\n c4d0c7f Fix pushdown for filters on multiple subfields of a struct\n 9d60d38 Create NestedField using lowercase field name\n 2b6e974 Make subfield name matching case insensitive\n\nSahar Massachi\n\n mayunlei#2 merge\n\nSaksham Sachdev\n\n #13660 Transaction Sharing across Connectors (Merged by: James Sun)\n\nExtracted Release Notes\n\n#13283 (Author: Laila A. Wahedi): imported combinations function from prestosql, complete with tests an\u2026\n\nAdded combinations function, a function that returns n combinations of values in an array, up to n=5.\n\n\n#13405 (Author: Venki Korukanti): Reduce the identifier length in generated code for nested columns\n\nFix compilation errors for expressions over types containing an extremely large number of nested types.\n\n\n#13412 (Author: Leiqing Cai): Support DROP FUNCTION\n\nAdd support for DROP FUNCTION.\n\n\n#13601 (Author: Islam Ismailov): Modularize Hive Metastore\n\nMetastore interface is separated into a separate module to reduce monolithicness.\n\n\n#13602 (Author: Ying Su): Improve BatchStreamReader - Part 1\n\nImprove BatchStreamReader performance.\n\n\n#13616 (Author: James A. Gill): Add geospatial expand_envelope function.\n\nAdd expand_envelope function to return a geometry's envelope expanded by a distance.\n\n\n#13644 (Author: James Sun): Introduce caching file system\n\nIntroduced new cache module to allow using local disk for to cache files from remote file systems.\nAllow Raptor to read data from HDFS while caching the files on local disks.\n\n\n#13645 (Author: James A. Gill): Fix GeometryToBingTiles for certain geometries\n\nFix geometry_to_bing_tile for geometries at -180 longitude or 85.05112878 latitude.\n\n\n#13647 (Author: Leiqing Cai): Output verifier events for queries being skipped by pre-filters\n\nAdd skipped verification results to the output for queries being filtered.\n\n\n#13650 (Author: Yi He): Optimize lambda body when possible\n\nFix regression on lambda evaluation (Issue#13648).\n\n\n#13651 (Author: Shixuan Fan): Make commitPartition an async operation\n\nChange ConnectorMetadata#commitPartition into async operation, and rename it to ConnectorMetadata#commitPartitionAsync.\n\n\n#13652 (Author: Ke Wang): fix organizationDiscoveryIntervalMillis bug\n\nFix organizer not running scheduled job due to misreading storage.organization-discovery-interval config.\n\n\n#13653 (Author: Yi He): Fix PRESTO_EXTRA_CREDENTIAL parsing\n\nImproved PRESTO_EXTRA_CREDENTIAL header parsing to allow value contain multiple '=' and urlEncode characters.\n\n\n#13734 (Author: Wenlei Xie): Add all_match, any_match and none_match functions for arrays\n\nAdd all_match(), any_match(), and none_match() functions.\n\n\n#13741 (Author: Ke Wang): Enable creating table with table_supports_delta_delete property for raptor\n\nAdd table_supports_delta_delete property in Raptor to allow deletion happening in background. DELETE queries in Raptor can now delete data logically but relying on compactors to delete physical data.\n\n\n#13743 (Author: Bin Fan): Add Alluxio client jar to hive-hadoop2\n\nAdd an Alluxio client jar to plugin/hive-hadoop2/ (as a runtime dependency) to avoid copying Alluxio client jar to all Presto servers manually to connect to Alluxio.\n\n\n#13748 (Author: Rongrong Zhong): Fix SQL function compilation failure\n\nFix SQL function compilation failure when the function parameter is not referenced in function body.\n\n\n#13764 (Author: Rongrong Zhong): Respect null-call clause in SQL function execution\n\nFix SQL function execution not respecting null-call clause.\n\n\n#13784 (Author: Rongrong Zhong): Cast constants in SQL function to proper types\n\nFix SQL function byte code compilation error for functions implemented with constants.\n\n\n#13787 (Author: Leiqing Cai): List non built-in functions in SHOW FUNCTIONS\n\nAdd support to list non-builtin functions in SHOW FUNCTIONS. The feature can be turned on by the configuration property list-non-built-in-functions.\n\n\n\nAll Commits\n\nec9f477 Disable TestDistributedSpilledQueries#testLimitWithJoin (Leiqing Cai)\n08dba52 Fix selective stream readers (Masha Basmanova)\n621eda4 Set boolean value to 0 if the position is null (Andrii Rosa)\nc446291 Check aggregation mask values for null (Andrii Rosa)\n20653ea Fix BooleanInputStream#getSetBits (Masha Basmanova)\nc4d0c7f Fix pushdown for filters on multiple subfields of a struct (Masha Basmanova)\nf189ca7 Make TestUpgradeMetadata single threaded (Leiqing Cai)\n9d60d38 Create NestedField using lowercase field name (Masha Basmanova)\n2b6e974 Make subfield name matching case insensitive (Masha Basmanova)\nc5c3c67 Use LazyBlock for columns with no filters (Masha Basmanova)\n23e4773 Add Alluxio client jar to hive-hadoop2 (Bin Fan)\n2b7baf2 List non built-in functions in SHOW FUNCTIONS (Leiqing Cai)\n7236e03 Cast constants in SQL function to proper types (Rongrong Zhong)\nb35550c Remove some usages of QualifiedFunctionName#of(String) (Leiqing Cai)\ncb1b514 Throw SYNTAX_ERROR when creating function with invalid name (Leiqing Cai)\n943b4d0 Support DROP FUNCTION execution (Leiqing Cai)\n71a23da Support dropFunction in FunctionNamespaceManager (Leiqing Cai)\n8138d2f Add syntax support for DROP FUNCTION (Leiqing Cai)\neb47fcf Remove print statement in TestFunctionNamespaceManager (Leiqing Cai)\n7c26b6e Invert if condition for better readability (Ajay George)\n1fbfb8e Add support for column names with slashes to SubfieldTokenizer (Masha Basmanova)\n0f1fe83 Fix backward compatible issue of Raptor delta delete (Ke Wang)\nd254d5f Fix materialized exchange planning with filter pushdown (Masha Basmanova)\ndf0fd4d Fix slice size overflow in DictionaryBlock.getIds() (Ying Su)\n80613f9 Add support for column names with hyphen to SubfieldTokenizer (Masha Basmanova)\n3242715 Respect null-call clause in SQL function execution (Rongrong Zhong)\n9aa8f80 Optimize lambda body when possible (Yi He)\n83b7d17 Propagate correct error code in RowExpressionInterpreter (Yi He)\nbf4f7ec introduce warnings for nonReserved words moving to reserved (Sujay Jain)\n5772869 Materialize stripe stream slice when caching (Shixuan Fan)\n98f54e7 Fix stripe metadata cache weigher to use retained size (Shixuan Fan)\na472c23 Fix filter pushdown for always-true range filter on a boolean column (Bhavani Hari)\nbc2e8b2 chunk merge files during cache write to avoid reading excessively large data into memory and other optimizations (Sujay Jain)\ndcb3e1b Construct QualifiedFunctionName with CatalogSchemaName and function name (Vic Zhang)\n5985800 Add array combinations function (Laila A. Wahedi)\n36ec9d2 Enable creating table with table_supports_delta_delete property (Ke Wang)\nd355b8b Add support for filter functions on columns with coercions (Bhavani Hari)\n6dc5468 Fix SQL function compilation failure (Rongrong Zhong)\ndedea3b Support supplying benchmark queries through MySQL (Nikhil Collooru)\n456487e Minor refactor of ApplyNode constructor (Vic Zhang)\n19339ee Throw PrestoException for unsupported correlated subquery (Vic Zhang)\nbd08887 Use distinct table names in TestHiveRecoverableGroupedExecution (Shixuan Fan)\ne18bb83 Expose H2QueryRunner Handle for Modular Testing (Saksham Sachdev)\n0a0a443 Add support for Companion Catalogs in Transactions (Saksham Sachdev)\n57f9632 Revert \"Optimize PlanFragment serialization\" (Nikhil Collooru)\ncafa9e2 Minor fixes to documents (Wenlei Xie)\n4eb8549 Rename session variable to be more specific (Bhavani Hari)\n0426340 Fix size type when calculating retained size. (Ying Su)\n48e58fd Make restProxyServiceForQuery nullable for the Pinot connector (Devesh Agrawal)\nfca4353 Add all_match, any_match and none_match functions for arrays (Wenlei Xie)\n2bee126 Extract and rename functional interfaces in ArrayFilterFunction (Wenlei Xie)\ndf7a0e5 Remove unused FilterVoidLambda interface in ArrayFilterFunction (Wenlei Xie)\n7a5cc80 Fix minor typo in CLA instructions (Brian Warner)\nbba36ec Update CLA information to reflect EasyCLA (Brian Warner)\nef3456a Introduce caching file system (James Sun)\n229b60b Make commitPartition an async operation (Shixuan Fan)\n3d2f2a1 Add JNI decompressor for zstd files (Gaurav Mittal)\n01c66c7 Fix selective struct reader to make a copy of input positions (Bhavani Hari)\n8e5051c Wrap OrcReader parameters into OrcReaderOptions (Gaurav Mittal)\n70308fa Fix Values are too large error message (Masha Basmanova)\ncbf1ee7 Allow range filters on newly added struct fields (Masha Basmanova)\n998db97 Add test for range filter on a newly added column (Masha Basmanova)\nd294ebc Allow range filters on subfields of structs with coercion (Masha Basmanova)\ne668b1a Reset allNulls flag in SliceDirectxxx#read (Masha Basmanova)\ndb8067e Reset allNulls flag in SliceDictxxx#read (Masha Basmanova)\nc0fdc90 Skip map entries with null keys (Masha Basmanova)\nd9e9f39 Run filters without inputs first in OrcSelectiveStreamReader (Sahar Massachi)\nc0b0edd Evalute predicate on partition columns to prune partitions (Masha Basmanova)\ndd16d8a Add a method to interpret an expression to ExpressionOptimizer (Masha Basmanova)\nca4e94c Add functionMetadataManager to HiveMetadataFactory (Masha Basmanova)\n39a16b3 Fix filter pushdown for DELETE queries (Masha Basmanova)\n6cced01 Support reading RC, TEXTFILE fromats with pushdown enabled (Bhavani Hari)\nd3ee8ec Replace Joda-Time libraries with java.time (Ajay George)\n315868d Add final to histogram class members (Ami Tavory)\n9f2359a Fixe minor issues in reservoir sample tests (Ami Tavory)\n4b11292 Move logic for handling different strategy implementations to DifferentialEntropyStateStrategy (Ami Tavory)\n62299ab Add cloneEmpty method to differential entropy strategy classes (Ami Tavory)\n3530831 Add population weight/count methods to reservoir samples (Ami Tavory)\n8e15a3a Expand entropy utils class and rename methods (Ami Tavory)\n9b0a1a0 Update names of variables in code, and function letters in docs. (Ami Tavory)\ndacfc45 Remove unused types from CostCalculator (James Sun)\n6cc6e5b Fix the build broken by 9633991 (Ying Su)\n906006b Add memory tracking from StreamReader local buffers (Ying Su)\n7be0c9f Improve BenchmarkBatchStreamReaders (Ying Su)\nf92fa25 Improve ORC LongReader (Ying Su)\n61408c2 Improve ORC timestamp reader (Ying Su)\n0814f33 Improve ORC list and map readers (Ying Su)\nbf96a44 Improve ORC slice direct reader (Ying Su)\n9633991 Improve ORC byte reader (Ying Su)\n95a57bd Improve ORC boolean reader (Ying Su)\nd45be17 Remove type from OrcRecordReader.readBlock (Ying Su)\n96bdef0 Add support for bucket adaptation (Masha Basmanova)\n97bd945 Fix getTableStatistics with subfield pruning (Masha Basmanova)\nfb2079e Clarify variable names in getTableStatistics (Masha Basmanova)\n9805be6 Refactor FilterStatsCalculatorService (Masha Basmanova)\nc851382 Fix subfield pruning for legacy unnest (Masha Basmanova)\n53a84b0 Add test to verify the size of all-null blocks returned (Bhavani Hari)\nbd306cb Fix the size of all-null blocks returned from Decimal reader (Bhavani Hari)\n7ae9f43 Fix the size of all-null blocks returned from MapFlat reader (Bhavani Hari)\n5b294b0 Fix the size of all-null blocks returned from Timestamp reader (Bhavani Hari)\nb835ac1 Fix the size of all-null blocks returned from List reader (Bhavani Hari)\n1b5d86d Fix the size of all-null blocks returned from Slice reader (Bhavani Hari)\n874255d Fix the size of all-null blocks returned from Long reader (Bhavani Hari)\n6d4250a Fix the size of all-null blocks returned from Double reader (Bhavani Hari)\n68ca8a6 Fix the size of all-null blocks returned from Float reader (Bhavani Hari)\n300ba88 Fix the size of all-null blocks returned from Byte reader (Bhavani Hari)\n1b6d7f9 Fix the size of all-null blocks returned from Boolean reader (Bhavani Hari)\n91af80f Enable testGroupByKeyPredicatePushdown with filter pushdown (Masha Basmanova)\n4e71bf3 Optimize byte reader when reading contiguous rows with no nulls and no filter (Ying Su)\n4e66289 Test filter-only columns with coercions (Masha Basmanova)\n604b707 Allow range filters on columns with coercion (Masha Basmanova)\nf5e14e9 Static import TupleDomain.withColumnDomains (Masha Basmanova)\n7e19193 Add coercing tuple domain filters (Masha Basmanova)\n5b874b4 Introduce HiveCoercer interface (Masha Basmanova)\n9c21aaa Move out the entire Hive metastore (James Sun)\nb7dcdb9 Add requireNonNull checks to ConnectorManager (Sahar Massachi)\n8f1b1ae Incorporate pushed down filter into stats used by CBO (Sahar Massachi)\n272a0e9 Rename toSymbolStatistics to toVariableStatsEstimate (Sahar Massachi)\n154c446 Extract toSymbolStatistics from TableScanStatsRule (Sahar Massachi)\n04019d4 Add layout handle parameter to ConnectorMetadata.getTableStatistics (Masha Basmanova)\nabfef50 Change DomainTranslator.toPredicate to allow any RowExpression (Sahar Massachi)\n282a7f1 Add Subfield to RowExpression converter (Sahar Massachi)\n35970d3 Fix filter pushdown for non-partitioned tables (Masha Basmanova)\ned16368 Static import Domain.singleValue (Masha Basmanova)\n669f9b5 Move ExtendedHiveMetastore with its deps to new presto-hive-metastore module (Islam Ismailov)\n1a18eb9 Do not prune subfields when filter uses entire column (Masha Basmanova)\nd2a3157 Add basic support for schema evolution to OrcSelectiveRecordReader (Masha Basmanova)\n685475f Extract coercers from HivePageSource (Masha Basmanova)\n7c61a7e Add TestHiveClientInMemoryMetastoreWithFilterPushdown (Masha Basmanova)\nf180de3 Refactor getTableLayouts logic in AbstractTestHiveClient (Masha Basmanova)\n564d288 Change testBucketSortedTables to use ORC format (Masha Basmanova)\n630a592 Add TestHiveUtils.getDefaultHiveSelectivePageSourceFactories (Masha Basmanova)\nfadcc90 Rename HiveTestUtils.getDefaultHiveDataStreamFactories (Masha Basmanova)\n40f9db0 Fix selective readers to make a copy of input positions (Bhavani Hari)\nb8acb68 Reset values after getBlock in LongSelectiveStreamReader (Bhavani Hari)\n662a00a Decode urlencoded property for PRESTO_EXTRA_CREDENTIAL parsing (Yi He)\n323bd92 Add Hive tests with filter pushdown and subfield pruning (Bhavani Hari)\ndcc5bb2 Output verifier events for queries being skipped by pre-filters (Leiqing Cai)\ncad9d12 Revert \"Add Subfield to RowExpression converter\" (Sahar Massachi)\neac554c Add Subfield to RowExpression converter (Sahar Massachi)\n0637dcc Revert \"Add non-linear transformation for structural hash\" (Wenlei Xie)\nd9c1e20 fix organizationDiscoveryIntervalMillis bug (Ke Wang)\nf601571 Fix double and float NaN comparisons (Bhavani Hari)\n22adf22 Move TestHiveDistributedQueriesWithOptimizedRepartitioning to separate Travis Job (Bhavani Hari)\ne4769ad Add Hive smoke tests with filter pushdown and subfield pruning (Bhavani Hari)\n89a41a9 Allow creating flat-map reader for non-supported key types (Bhavani Hari)\n1a65486 Allow reading non-ORC tables when pushdown filter is enabled (Bhavani Hari)\nffed56f Fix GeometryToBingTiles for certain geometries (James A. Gill)\n7018ccd Reduce the identifier length in generated code for nested columns (Venki Korukanti)\n69c6573 Add expand_envelope function. (James A. Gill)\n593e790 Allow empty Envelope serialization (James A. Gill)\n60aa23d Verify that outputPositions increase monotonically (Bhavani Hari)\n2def2e1 Add JSON annotations to SqlFunctionId (Leiqing Cai)", "createdAt": "2020-01-02T18:54:26Z", "url": "https://github.com/prestodb/presto/pull/13915", "merged": true, "mergeCommit": {"oid": "51092e0e0a414c4d883dda4ba8e0901a6490bee3"}, "closed": true, "closedAt": "2020-01-08T20:19:46Z", "author": {"login": "caithagoras"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2e1EAgBqjI5MTg1NTUzNDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4YvhbgBqjI5MzIwNzM0NzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f0956b8e06f20e6c281f4a7b71eff29cce8860d", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/5f0956b8e06f20e6c281f4a7b71eff29cce8860d", "committedDate": "2020-01-02T18:54:19Z", "message": "Add release notes for 0.230"}, "afterCommit": {"oid": "014bb52d40c11b59b694f3168af3531342e5dad8", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/014bb52d40c11b59b694f3168af3531342e5dad8", "committedDate": "2020-01-02T19:21:48Z", "message": "Add release notes for 0.230"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "014bb52d40c11b59b694f3168af3531342e5dad8", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/014bb52d40c11b59b694f3168af3531342e5dad8", "committedDate": "2020-01-02T19:21:48Z", "message": "Add release notes for 0.230"}, "afterCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/b9c400272da24cf938ca7b03840c73da13bf12da", "committedDate": "2020-01-02T19:28:09Z", "message": "Add release notes for 0.230"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3ODI1NDQx", "url": "https://github.com/prestodb/presto/pull/13915#pullrequestreview-337825441", "createdAt": "2020-01-02T19:45:48Z", "commit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxOTo0NTo0OFrOFZznMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxOTo1Mzo0MlrOFZzyIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwNDMzNg==", "bodyText": "shouldn't this be\n:issue: `13648`", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362604336", "createdAt": "2020-01-02T19:45:48Z", "author": {"login": "mbasmanova"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.\n+* Fix a regression in lambda evaluation (Issue#13648).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwNTE3Mg==", "bodyText": "It is not clear if users understand what BatchStreamReader is. Perhaps, change to Improve ORC reader performance.", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362605172", "createdAt": "2020-01-02T19:48:06Z", "author": {"login": "mbasmanova"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.\n+* Fix a regression in lambda evaluation (Issue#13648).\n+* Fix :func:`geometry_to_bing_tile` function for geometries at -180 longitude or 85.05112878 latitude.\n+* Add support to list non-builtin functions in SHOW FUNCTIONS. The feature can be turned on by the configuration property ``list-non-built-in-functions``.\n+* Add support for ``DROP FUNCTION``.\n+* Add :func:`combinations` function, which returns n combinations of values in an array, up to ``n = 5``.\n+* Add :func:`all_match()`, :func:`any_match()`, and :func:`none_match()` functions.\n+* Add :func:`expand_envelope` function to return a geometry's envelope expanded by a distance.\n+* Add population counts/weights to reservoir samples.\n+* Improved ``PRESTO_EXTRA_CREDENTIAL`` header parsing to allow value contain multiple ``=`` characters and url-encoding characters.\n+\n+Hive Changes\n+____________\n+* Add Alluxio client jar to ``plugin/hive-hadoop2/`` (as a runtime dependency) to avoid having to copy the jar file to all Presto servers manually when connecting to Alluxio.\n+* Improve ``BatchStreamReader`` performance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwNjE2OA==", "bodyText": "'*' is missing\nPerhaps, modify this sentence to start with a verb and remove Raptor (this whole section is about Raptor): Modify DELETE queries to perform logical data deletion and rely on compactors to physically delete the data at a later point in time.", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362606168", "createdAt": "2020-01-02T19:50:58Z", "author": {"login": "mbasmanova"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.\n+* Fix a regression in lambda evaluation (Issue#13648).\n+* Fix :func:`geometry_to_bing_tile` function for geometries at -180 longitude or 85.05112878 latitude.\n+* Add support to list non-builtin functions in SHOW FUNCTIONS. The feature can be turned on by the configuration property ``list-non-built-in-functions``.\n+* Add support for ``DROP FUNCTION``.\n+* Add :func:`combinations` function, which returns n combinations of values in an array, up to ``n = 5``.\n+* Add :func:`all_match()`, :func:`any_match()`, and :func:`none_match()` functions.\n+* Add :func:`expand_envelope` function to return a geometry's envelope expanded by a distance.\n+* Add population counts/weights to reservoir samples.\n+* Improved ``PRESTO_EXTRA_CREDENTIAL`` header parsing to allow value contain multiple ``=`` characters and url-encoding characters.\n+\n+Hive Changes\n+____________\n+* Add Alluxio client jar to ``plugin/hive-hadoop2/`` (as a runtime dependency) to avoid having to copy the jar file to all Presto servers manually when connecting to Alluxio.\n+* Improve ``BatchStreamReader`` performance.\n+\n+Raptor Changes\n+______________\n+* Fix an issue where organizer does not run scheduled job due to the misreading configuration property ``storage.organization-discovery-interval``.\n+* Add ``table_supports_delta_delete`` table property in Raptor to allow deletions in the background.\n+  ``DELETE`` queries in Raptor can now delete the data logically while relying on compactors to delete the data physically.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwNjQ0MA==", "bodyText": "Is this enabled via a config/session property? If so, please, mention which one.\nDrop Raptor (this whole section is about Raptor): Add support for caching data read from HDFS on a local disk", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362606440", "createdAt": "2020-01-02T19:51:43Z", "author": {"login": "mbasmanova"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.\n+* Fix a regression in lambda evaluation (Issue#13648).\n+* Fix :func:`geometry_to_bing_tile` function for geometries at -180 longitude or 85.05112878 latitude.\n+* Add support to list non-builtin functions in SHOW FUNCTIONS. The feature can be turned on by the configuration property ``list-non-built-in-functions``.\n+* Add support for ``DROP FUNCTION``.\n+* Add :func:`combinations` function, which returns n combinations of values in an array, up to ``n = 5``.\n+* Add :func:`all_match()`, :func:`any_match()`, and :func:`none_match()` functions.\n+* Add :func:`expand_envelope` function to return a geometry's envelope expanded by a distance.\n+* Add population counts/weights to reservoir samples.\n+* Improved ``PRESTO_EXTRA_CREDENTIAL`` header parsing to allow value contain multiple ``=`` characters and url-encoding characters.\n+\n+Hive Changes\n+____________\n+* Add Alluxio client jar to ``plugin/hive-hadoop2/`` (as a runtime dependency) to avoid having to copy the jar file to all Presto servers manually when connecting to Alluxio.\n+* Improve ``BatchStreamReader`` performance.\n+\n+Raptor Changes\n+______________\n+* Fix an issue where organizer does not run scheduled job due to the misreading configuration property ``storage.organization-discovery-interval``.\n+* Add ``table_supports_delta_delete`` table property in Raptor to allow deletions in the background.\n+  ``DELETE`` queries in Raptor can now delete the data logically while relying on compactors to delete the data physically.\n+* Add support for Raptor to read data from HDFS while caching the files on local disks.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwNjU0Mg==", "bodyText": "This is an implementation detail that users cannot understand. Let's remove.", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362606542", "createdAt": "2020-01-02T19:52:01Z", "author": {"login": "mbasmanova"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.\n+* Fix a regression in lambda evaluation (Issue#13648).\n+* Fix :func:`geometry_to_bing_tile` function for geometries at -180 longitude or 85.05112878 latitude.\n+* Add support to list non-builtin functions in SHOW FUNCTIONS. The feature can be turned on by the configuration property ``list-non-built-in-functions``.\n+* Add support for ``DROP FUNCTION``.\n+* Add :func:`combinations` function, which returns n combinations of values in an array, up to ``n = 5``.\n+* Add :func:`all_match()`, :func:`any_match()`, and :func:`none_match()` functions.\n+* Add :func:`expand_envelope` function to return a geometry's envelope expanded by a distance.\n+* Add population counts/weights to reservoir samples.\n+* Improved ``PRESTO_EXTRA_CREDENTIAL`` header parsing to allow value contain multiple ``=`` characters and url-encoding characters.\n+\n+Hive Changes\n+____________\n+* Add Alluxio client jar to ``plugin/hive-hadoop2/`` (as a runtime dependency) to avoid having to copy the jar file to all Presto servers manually when connecting to Alluxio.\n+* Improve ``BatchStreamReader`` performance.\n+\n+Raptor Changes\n+______________\n+* Fix an issue where organizer does not run scheduled job due to the misreading configuration property ``storage.organization-discovery-interval``.\n+* Add ``table_supports_delta_delete`` table property in Raptor to allow deletions in the background.\n+  ``DELETE`` queries in Raptor can now delete the data logically while relying on compactors to delete the data physically.\n+* Add support for Raptor to read data from HDFS while caching the files on local disks.\n+* Add new cache module to allow using local disk for caching files from remote file systems.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwNzEzNg==", "bodyText": "@caithagoras This sentence is hard to understand. Would you rephrase?", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362607136", "createdAt": "2020-01-02T19:53:42Z", "author": {"login": "mbasmanova"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.\n+* Fix a regression in lambda evaluation (Issue#13648).\n+* Fix :func:`geometry_to_bing_tile` function for geometries at -180 longitude or 85.05112878 latitude.\n+* Add support to list non-builtin functions in SHOW FUNCTIONS. The feature can be turned on by the configuration property ``list-non-built-in-functions``.\n+* Add support for ``DROP FUNCTION``.\n+* Add :func:`combinations` function, which returns n combinations of values in an array, up to ``n = 5``.\n+* Add :func:`all_match()`, :func:`any_match()`, and :func:`none_match()` functions.\n+* Add :func:`expand_envelope` function to return a geometry's envelope expanded by a distance.\n+* Add population counts/weights to reservoir samples.\n+* Improved ``PRESTO_EXTRA_CREDENTIAL`` header parsing to allow value contain multiple ``=`` characters and url-encoding characters.\n+\n+Hive Changes\n+____________\n+* Add Alluxio client jar to ``plugin/hive-hadoop2/`` (as a runtime dependency) to avoid having to copy the jar file to all Presto servers manually when connecting to Alluxio.\n+* Improve ``BatchStreamReader`` performance.\n+\n+Raptor Changes\n+______________\n+* Fix an issue where organizer does not run scheduled job due to the misreading configuration property ``storage.organization-discovery-interval``.\n+* Add ``table_supports_delta_delete`` table property in Raptor to allow deletions in the background.\n+  ``DELETE`` queries in Raptor can now delete the data logically while relying on compactors to delete the data physically.\n+* Add support for Raptor to read data from HDFS while caching the files on local disks.\n+* Add new cache module to allow using local disk for caching files from remote file systems.\n+\n+Verifier Changes\n+________________\n+* Add skipped verification results to the output for queries being filtered.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3ODI1Njg4", "url": "https://github.com/prestodb/presto/pull/13915#pullrequestreview-337825688", "createdAt": "2020-01-02T19:46:22Z", "commit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxOTo0NjoyMlrOFZzn-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMDowMjozNlrOFZz-Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwNDUzNw==", "bodyText": "do not respect. There is an extra to. It is not clear to me what is a null-call, if you feel this is the right word, then it is fine, otherwise, can you find a better word?", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362604537", "createdAt": "2020-01-02T19:46:22Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwNTE2OQ==", "bodyText": "Can you use the correct formatting syntax - https://github.com/prestodb/presto/wiki/Release-Notes-Guidelines#formatting", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362605169", "createdAt": "2020-01-02T19:48:05Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.\n+* Fix a regression in lambda evaluation (Issue#13648).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwNTYxNw==", "bodyText": "n", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362605617", "createdAt": "2020-01-02T19:49:19Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.\n+* Fix a regression in lambda evaluation (Issue#13648).\n+* Fix :func:`geometry_to_bing_tile` function for geometries at -180 longitude or 85.05112878 latitude.\n+* Add support to list non-builtin functions in SHOW FUNCTIONS. The feature can be turned on by the configuration property ``list-non-built-in-functions``.\n+* Add support for ``DROP FUNCTION``.\n+* Add :func:`combinations` function, which returns n combinations of values in an array, up to ``n = 5``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwNjQ2Ng==", "bodyText": "I believe that this is with respect to the differential entropy functions. Should we call this out. @atavory ?", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362606466", "createdAt": "2020-01-02T19:51:47Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.\n+* Fix a regression in lambda evaluation (Issue#13648).\n+* Fix :func:`geometry_to_bing_tile` function for geometries at -180 longitude or 85.05112878 latitude.\n+* Add support to list non-builtin functions in SHOW FUNCTIONS. The feature can be turned on by the configuration property ``list-non-built-in-functions``.\n+* Add support for ``DROP FUNCTION``.\n+* Add :func:`combinations` function, which returns n combinations of values in an array, up to ``n = 5``.\n+* Add :func:`all_match()`, :func:`any_match()`, and :func:`none_match()` functions.\n+* Add :func:`expand_envelope` function to return a geometry's envelope expanded by a distance.\n+* Add population counts/weights to reservoir samples.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwNzExMA==", "bodyText": "Add support to header parsing for PRESTO_EXTRA_CREDENTIAL to allow for values with multiple = characters and url-encoded characters.", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362607110", "createdAt": "2020-01-02T19:53:37Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.\n+* Fix a regression in lambda evaluation (Issue#13648).\n+* Fix :func:`geometry_to_bing_tile` function for geometries at -180 longitude or 85.05112878 latitude.\n+* Add support to list non-builtin functions in SHOW FUNCTIONS. The feature can be turned on by the configuration property ``list-non-built-in-functions``.\n+* Add support for ``DROP FUNCTION``.\n+* Add :func:`combinations` function, which returns n combinations of values in an array, up to ``n = 5``.\n+* Add :func:`all_match()`, :func:`any_match()`, and :func:`none_match()` functions.\n+* Add :func:`expand_envelope` function to return a geometry's envelope expanded by a distance.\n+* Add population counts/weights to reservoir samples.\n+* Improved ``PRESTO_EXTRA_CREDENTIAL`` header parsing to allow value contain multiple ``=`` characters and url-encoding characters.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwNzU0Ng==", "bodyText": "I don't think that we need the (, ) here, so just say -\nto ``plugin/hive-hadoop2`` as a runtime dependency to avoid", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362607546", "createdAt": "2020-01-02T19:54:56Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.\n+* Fix a regression in lambda evaluation (Issue#13648).\n+* Fix :func:`geometry_to_bing_tile` function for geometries at -180 longitude or 85.05112878 latitude.\n+* Add support to list non-builtin functions in SHOW FUNCTIONS. The feature can be turned on by the configuration property ``list-non-built-in-functions``.\n+* Add support for ``DROP FUNCTION``.\n+* Add :func:`combinations` function, which returns n combinations of values in an array, up to ``n = 5``.\n+* Add :func:`all_match()`, :func:`any_match()`, and :func:`none_match()` functions.\n+* Add :func:`expand_envelope` function to return a geometry's envelope expanded by a distance.\n+* Add population counts/weights to reservoir samples.\n+* Improved ``PRESTO_EXTRA_CREDENTIAL`` header parsing to allow value contain multiple ``=`` characters and url-encoding characters.\n+\n+Hive Changes\n+____________\n+* Add Alluxio client jar to ``plugin/hive-hadoop2/`` (as a runtime dependency) to avoid having to copy the jar file to all Presto servers manually when connecting to Alluxio.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwNzc2NA==", "bodyText": "We should add more context here. What does this impact from a bit more user perspective - reads? what kinds of reads? Or we should link to the issue/PR for more context.", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362607764", "createdAt": "2020-01-02T19:55:35Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.\n+* Fix a regression in lambda evaluation (Issue#13648).\n+* Fix :func:`geometry_to_bing_tile` function for geometries at -180 longitude or 85.05112878 latitude.\n+* Add support to list non-builtin functions in SHOW FUNCTIONS. The feature can be turned on by the configuration property ``list-non-built-in-functions``.\n+* Add support for ``DROP FUNCTION``.\n+* Add :func:`combinations` function, which returns n combinations of values in an array, up to ``n = 5``.\n+* Add :func:`all_match()`, :func:`any_match()`, and :func:`none_match()` functions.\n+* Add :func:`expand_envelope` function to return a geometry's envelope expanded by a distance.\n+* Add population counts/weights to reservoir samples.\n+* Improved ``PRESTO_EXTRA_CREDENTIAL`` header parsing to allow value contain multiple ``=`` characters and url-encoding characters.\n+\n+Hive Changes\n+____________\n+* Add Alluxio client jar to ``plugin/hive-hadoop2/`` (as a runtime dependency) to avoid having to copy the jar file to all Presto servers manually when connecting to Alluxio.\n+* Improve ``BatchStreamReader`` performance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwODM4Mg==", "bodyText": "Lets switch line 31 and 32. Lets first say that we have support for caching and then say that you can cache data from HDFS.", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362608382", "createdAt": "2020-01-02T19:57:19Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.\n+* Fix a regression in lambda evaluation (Issue#13648).\n+* Fix :func:`geometry_to_bing_tile` function for geometries at -180 longitude or 85.05112878 latitude.\n+* Add support to list non-builtin functions in SHOW FUNCTIONS. The feature can be turned on by the configuration property ``list-non-built-in-functions``.\n+* Add support for ``DROP FUNCTION``.\n+* Add :func:`combinations` function, which returns n combinations of values in an array, up to ``n = 5``.\n+* Add :func:`all_match()`, :func:`any_match()`, and :func:`none_match()` functions.\n+* Add :func:`expand_envelope` function to return a geometry's envelope expanded by a distance.\n+* Add population counts/weights to reservoir samples.\n+* Improved ``PRESTO_EXTRA_CREDENTIAL`` header parsing to allow value contain multiple ``=`` characters and url-encoding characters.\n+\n+Hive Changes\n+____________\n+* Add Alluxio client jar to ``plugin/hive-hadoop2/`` (as a runtime dependency) to avoid having to copy the jar file to all Presto servers manually when connecting to Alluxio.\n+* Improve ``BatchStreamReader`` performance.\n+\n+Raptor Changes\n+______________\n+* Fix an issue where organizer does not run scheduled job due to the misreading configuration property ``storage.organization-discovery-interval``.\n+* Add ``table_supports_delta_delete`` table property in Raptor to allow deletions in the background.\n+  ``DELETE`` queries in Raptor can now delete the data logically while relying on compactors to delete the data physically.\n+* Add support for Raptor to read data from HDFS while caching the files on local disks.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwOTMzNQ==", "bodyText": "This is unclear to me. I don't think we generally mention how we fix things, rather just what we fixed. Either we should go for - Fix an issue where the organizer does not run scheduled jobs or we can extend this by saying - <initial message> when the configuration ...", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362609335", "createdAt": "2020-01-02T19:59:54Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.\n+* Fix a regression in lambda evaluation (Issue#13648).\n+* Fix :func:`geometry_to_bing_tile` function for geometries at -180 longitude or 85.05112878 latitude.\n+* Add support to list non-builtin functions in SHOW FUNCTIONS. The feature can be turned on by the configuration property ``list-non-built-in-functions``.\n+* Add support for ``DROP FUNCTION``.\n+* Add :func:`combinations` function, which returns n combinations of values in an array, up to ``n = 5``.\n+* Add :func:`all_match()`, :func:`any_match()`, and :func:`none_match()` functions.\n+* Add :func:`expand_envelope` function to return a geometry's envelope expanded by a distance.\n+* Add population counts/weights to reservoir samples.\n+* Improved ``PRESTO_EXTRA_CREDENTIAL`` header parsing to allow value contain multiple ``=`` characters and url-encoding characters.\n+\n+Hive Changes\n+____________\n+* Add Alluxio client jar to ``plugin/hive-hadoop2/`` (as a runtime dependency) to avoid having to copy the jar file to all Presto servers manually when connecting to Alluxio.\n+* Improve ``BatchStreamReader`` performance.\n+\n+Raptor Changes\n+______________\n+* Fix an issue where organizer does not run scheduled job due to the misreading configuration property ``storage.organization-discovery-interval``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwOTkzNA==", "bodyText": "Is the property new or the capability new? If it is the latter (which seems to be the case to me) - we should say something like\nAdd support for deleting data ..... . This can be enabled by adding the property ``table_supports...`` to the table property.", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362609934", "createdAt": "2020-01-02T20:01:38Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.\n+* Fix a regression in lambda evaluation (Issue#13648).\n+* Fix :func:`geometry_to_bing_tile` function for geometries at -180 longitude or 85.05112878 latitude.\n+* Add support to list non-builtin functions in SHOW FUNCTIONS. The feature can be turned on by the configuration property ``list-non-built-in-functions``.\n+* Add support for ``DROP FUNCTION``.\n+* Add :func:`combinations` function, which returns n combinations of values in an array, up to ``n = 5``.\n+* Add :func:`all_match()`, :func:`any_match()`, and :func:`none_match()` functions.\n+* Add :func:`expand_envelope` function to return a geometry's envelope expanded by a distance.\n+* Add population counts/weights to reservoir samples.\n+* Improved ``PRESTO_EXTRA_CREDENTIAL`` header parsing to allow value contain multiple ``=`` characters and url-encoding characters.\n+\n+Hive Changes\n+____________\n+* Add Alluxio client jar to ``plugin/hive-hadoop2/`` (as a runtime dependency) to avoid having to copy the jar file to all Presto servers manually when connecting to Alluxio.\n+* Improve ``BatchStreamReader`` performance.\n+\n+Raptor Changes\n+______________\n+* Fix an issue where organizer does not run scheduled job due to the misreading configuration property ``storage.organization-discovery-interval``.\n+* Add ``table_supports_delta_delete`` table property in Raptor to allow deletions in the background.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYxMDI1OA==", "bodyText": "For such vague ones, if it is not possible to clarify the fix, we should link to the PR/issue.", "url": "https://github.com/prestodb/presto/pull/13915#discussion_r362610258", "createdAt": "2020-01-02T20:02:36Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.230.rst", "diffHunk": "@@ -0,0 +1,40 @@\n+=============\n+Release 0.230\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where a SQL function fails to compile when the function implementation contains constants.\n+* Fix an issue where a SQL function fails to compile when some function parameters are not referenced in the function body.\n+* Fix an issue where SQL functions do not to respect null-call clause during execution.\n+* Fix compilation errors for expressions over types containing an extremely large number of nested types.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da"}, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9c400272da24cf938ca7b03840c73da13bf12da", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/b9c400272da24cf938ca7b03840c73da13bf12da", "committedDate": "2020-01-02T19:28:09Z", "message": "Add release notes for 0.230"}, "afterCommit": {"oid": "e468322def1ec7e4eb11b3a36eb5121544473a76", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/e468322def1ec7e4eb11b3a36eb5121544473a76", "committedDate": "2020-01-02T22:13:23Z", "message": "Add release notes for 0.230"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e468322def1ec7e4eb11b3a36eb5121544473a76", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/e468322def1ec7e4eb11b3a36eb5121544473a76", "committedDate": "2020-01-02T22:13:23Z", "message": "Add release notes for 0.230"}, "afterCommit": {"oid": "fdbb5f995611c4c1db41a093b454dccd6857a060", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/fdbb5f995611c4c1db41a093b454dccd6857a060", "committedDate": "2020-01-02T22:14:12Z", "message": "Add release notes for 0.230"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4Nzk4OTMx", "url": "https://github.com/prestodb/presto/pull/13915#pullrequestreview-338798931", "createdAt": "2020-01-06T18:03:11Z", "commit": {"oid": "fdbb5f995611c4c1db41a093b454dccd6857a060"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b72d0091efef48cf72e70c482a7084c65b6de131", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/b72d0091efef48cf72e70c482a7084c65b6de131", "committedDate": "2020-01-08T17:24:09Z", "message": "Add release notes for 0.230"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fdbb5f995611c4c1db41a093b454dccd6857a060", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/fdbb5f995611c4c1db41a093b454dccd6857a060", "committedDate": "2020-01-02T22:14:12Z", "message": "Add release notes for 0.230"}, "afterCommit": {"oid": "b72d0091efef48cf72e70c482a7084c65b6de131", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/b72d0091efef48cf72e70c482a7084c65b6de131", "committedDate": "2020-01-08T17:24:09Z", "message": "Add release notes for 0.230"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4434, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}