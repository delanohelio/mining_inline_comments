{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0OTU1MDM0", "number": 14789, "title": "Allow DictionaryBlock for MinMaxBy aggregation", "bodyText": "Fixes #14787\nSince the issue is data dependent, verified using raw table.\n== NO RELEASE NOTE ==", "createdAt": "2020-07-06T19:15:51Z", "url": "https://github.com/prestodb/presto/pull/14789", "merged": true, "mergeCommit": {"oid": "84b7b0ac0ac07b0c42a7f60169fc2b04a35d3360"}, "closed": true, "closedAt": "2020-07-10T15:05:33Z", "author": {"login": "viczhang861"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyWX62AFqTQ0MzM0OTI0NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABczN1X4gBqjM1MjkzNzM3NjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzQ5MjQ0", "url": "https://github.com/prestodb/presto/pull/14789#pullrequestreview-443349244", "createdAt": "2020-07-06T19:26:17Z", "commit": {"oid": "6d983fb2b3841465d06beca0114496ea88255d12"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxOToyNjoxN1rOGtkSYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxOToyNjoxN1rOGtkSYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQzMzYzMw==", "bodyText": "How is it possible that the block itself is null? Isn't that a bug?", "url": "https://github.com/prestodb/presto/pull/14789#discussion_r450433633", "createdAt": "2020-07-06T19:26:17Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/builder/InMemoryHashAggregationBuilder.java", "diffHunk": "@@ -429,7 +430,10 @@ public void processPage(GroupByIdBlock groupIds, Page page)\n                 aggregation.addInput(groupIds, page);\n             }\n             else {\n-                aggregation.addIntermediate(groupIds, page.getBlock(intermediateChannel));\n+                Block block = page.getBlock(intermediateChannel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d983fb2b3841465d06beca0114496ea88255d12"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNzgxMDIw", "url": "https://github.com/prestodb/presto/pull/14789#pullrequestreview-443781020", "createdAt": "2020-07-07T10:56:46Z", "commit": {"oid": "6d983fb2b3841465d06beca0114496ea88255d12"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6d983fb2b3841465d06beca0114496ea88255d12", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/6d983fb2b3841465d06beca0114496ea88255d12", "committedDate": "2020-07-02T18:35:14Z", "message": "Avoid processing null block for GroupedAccumulator"}, "afterCommit": {"oid": "858021a1d85cb72d8d1e06af9224b1a6c9adfa8d", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/858021a1d85cb72d8d1e06af9224b1a6c9adfa8d", "committedDate": "2020-07-08T22:22:11Z", "message": "Allow DictionaryBlock for MinMaxBy aggregation\n\nWhen a Page is written by multiple writers, Page is split using\ndictionary blocks. It is valid to support page with DicitonaryBlock\nduring deserialization for MinMaxBy aggregation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1Mjc1ODM0", "url": "https://github.com/prestodb/presto/pull/14789#pullrequestreview-445275834", "createdAt": "2020-07-09T04:06:12Z", "commit": {"oid": "858021a1d85cb72d8d1e06af9224b1a6c9adfa8d"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNDowNjoxMlrOGvA8cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNDowODowMFrOGvA-Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk1MTcyOQ==", "bodyText": "Inline this variable", "url": "https://github.com/prestodb/presto/pull/14789#discussion_r451951729", "createdAt": "2020-07-09T04:06:12Z", "author": {"login": "highker"}, "path": "presto-main/src/test/java/com/facebook/presto/operator/aggregation/minmaxby/TestMinMaxByAggregation.java", "diffHunk": "@@ -575,6 +584,32 @@ public void testMaxUnknownLongArray()\n                 createArrayBigintBlock(asList(null, null, null)));\n     }\n \n+    @Test\n+    public void testLongAndBlockPositionValueStateSerialization()\n+    {\n+        Type bigintType = BIGINT;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "858021a1d85cb72d8d1e06af9224b1a6c9adfa8d"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk1MTkzOQ==", "bodyText": "mapType(VARCHAR, BOOLEAN) -> mapType", "url": "https://github.com/prestodb/presto/pull/14789#discussion_r451951939", "createdAt": "2020-07-09T04:07:11Z", "author": {"login": "highker"}, "path": "presto-main/src/test/java/com/facebook/presto/operator/aggregation/minmaxby/TestMinMaxByAggregation.java", "diffHunk": "@@ -575,6 +584,32 @@ public void testMaxUnknownLongArray()\n                 createArrayBigintBlock(asList(null, null, null)));\n     }\n \n+    @Test\n+    public void testLongAndBlockPositionValueStateSerialization()\n+    {\n+        Type bigintType = BIGINT;\n+        Type mapType = mapType(VARCHAR, BOOLEAN);\n+        Map<String, Type> fieldMap = ImmutableMap.of(\"Key\", bigintType, \"Value\", mapType);\n+        AccumulatorStateFactory<LongAndBlockPositionValueState> factory = StateCompiler.generateStateFactory(LongAndBlockPositionValueState.class, fieldMap, new DynamicClassLoader(LongAndBlockPositionValueState.class.getClassLoader()));\n+        KeyAndBlockPositionValueStateSerializer<LongAndBlockPositionValueState> serializer = new LongAndBlockPositionStateSerializer(BIGINT, mapType(VARCHAR, BOOLEAN));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "858021a1d85cb72d8d1e06af9224b1a6c9adfa8d"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk1MjEzMQ==", "bodyText": "Inline this variable", "url": "https://github.com/prestodb/presto/pull/14789#discussion_r451952131", "createdAt": "2020-07-09T04:08:00Z", "author": {"login": "highker"}, "path": "presto-main/src/test/java/com/facebook/presto/operator/aggregation/minmaxby/TestMinMaxByAggregation.java", "diffHunk": "@@ -575,6 +584,32 @@ public void testMaxUnknownLongArray()\n                 createArrayBigintBlock(asList(null, null, null)));\n     }\n \n+    @Test\n+    public void testLongAndBlockPositionValueStateSerialization()\n+    {\n+        Type bigintType = BIGINT;\n+        Type mapType = mapType(VARCHAR, BOOLEAN);\n+        Map<String, Type> fieldMap = ImmutableMap.of(\"Key\", bigintType, \"Value\", mapType);\n+        AccumulatorStateFactory<LongAndBlockPositionValueState> factory = StateCompiler.generateStateFactory(LongAndBlockPositionValueState.class, fieldMap, new DynamicClassLoader(LongAndBlockPositionValueState.class.getClassLoader()));\n+        KeyAndBlockPositionValueStateSerializer<LongAndBlockPositionValueState> serializer = new LongAndBlockPositionStateSerializer(BIGINT, mapType(VARCHAR, BOOLEAN));\n+        LongAndBlockPositionValueState singleState = factory.createSingleState();\n+        LongAndBlockPositionValueState deserializedState = factory.createSingleState();\n+        singleState.setFirst(2020);\n+        singleState.setFirstNull(false);\n+\n+        BlockBuilder builder = RowType.anonymous(ImmutableList.of(BOOLEAN, BOOLEAN, BIGINT, mapType))\n+                .createBlockBuilder(null, 1);\n+        serializer.serialize(singleState, builder);\n+\n+        Block rowBlock = builder.build();\n+        int[] positions = new int[]{0};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "858021a1d85cb72d8d1e06af9224b1a6c9adfa8d"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea211e92189886b5e7c04c2e0e408c2b97ebea12", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/ea211e92189886b5e7c04c2e0e408c2b97ebea12", "committedDate": "2020-07-09T12:02:41Z", "message": "Allow DictionaryBlock for MinMaxBy aggregation\n\nWhen a Page is written by multiple writers, Page is split using\ndictionary blocks. It is valid to support page with DicitonaryBlock\nduring deserialization for MinMaxBy aggregation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "858021a1d85cb72d8d1e06af9224b1a6c9adfa8d", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/858021a1d85cb72d8d1e06af9224b1a6c9adfa8d", "committedDate": "2020-07-08T22:22:11Z", "message": "Allow DictionaryBlock for MinMaxBy aggregation\n\nWhen a Page is written by multiple writers, Page is split using\ndictionary blocks. It is valid to support page with DicitonaryBlock\nduring deserialization for MinMaxBy aggregation."}, "afterCommit": {"oid": "ea211e92189886b5e7c04c2e0e408c2b97ebea12", "author": {"user": {"login": "viczhang861", "name": "Vic Zhang"}}, "url": "https://github.com/prestodb/presto/commit/ea211e92189886b5e7c04c2e0e408c2b97ebea12", "committedDate": "2020-07-09T12:02:41Z", "message": "Allow DictionaryBlock for MinMaxBy aggregation\n\nWhen a Page is written by multiple writers, Page is split using\ndictionary blocks. It is valid to support page with DicitonaryBlock\nduring deserialization for MinMaxBy aggregation."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1201, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}