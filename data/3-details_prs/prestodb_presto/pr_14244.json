{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NTk2MDc0", "number": 14244, "title": "Add ExtendedFileSystem", "bodyText": "ExtendedFileSystem is an extension of the FileSystem, which supports additional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the ExtendedFileSystem.\nFileOpener classes to support FileSystem operations have been removed.\nA necessary refactoring was required hence few classes have been moved to presto-hive-common.\ndepended by https://github.com/facebookexternal/presto-facebook/pull/906", "createdAt": "2020-03-13T05:15:26Z", "url": "https://github.com/prestodb/presto/pull/14244", "merged": true, "mergeCommit": {"oid": "d9fc4620e554cb97b4c6fffd538b40c3f790b3e1"}, "closed": true, "closedAt": "2020-04-07T21:55:20Z", "author": {"login": "jainxrohit"}, "timelineItems": {"totalCount": 65, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNTuVNABqjMxMjc1OTU3MjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVY48ugFqTM4OTQ0NTEwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4382b6a69c0941a181dfdb51c2f8ec3266851130", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/4382b6a69c0941a181dfdb51c2f8ec3266851130", "committedDate": "2020-03-13T05:12:50Z", "message": "Add BridgingFileSystem"}, "afterCommit": {"oid": "41f442e17ccfdb4d2f642abd67b99df42505bfc1", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/41f442e17ccfdb4d2f642abd67b99df42505bfc1", "committedDate": "2020-03-13T17:25:18Z", "message": "Add BridgingFileSystem"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "41f442e17ccfdb4d2f642abd67b99df42505bfc1", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/41f442e17ccfdb4d2f642abd67b99df42505bfc1", "committedDate": "2020-03-13T17:25:18Z", "message": "Add BridgingFileSystem"}, "afterCommit": {"oid": "4b1eafe5a44d31ca5b8c9d52e83b68ef92b0a2ae", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/4b1eafe5a44d31ca5b8c9d52e83b68ef92b0a2ae", "committedDate": "2020-03-13T19:57:30Z", "message": "Add BridgingFileSystem"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b1eafe5a44d31ca5b8c9d52e83b68ef92b0a2ae", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/4b1eafe5a44d31ca5b8c9d52e83b68ef92b0a2ae", "committedDate": "2020-03-13T19:57:30Z", "message": "Add BridgingFileSystem"}, "afterCommit": {"oid": "1185b6920231fdf168a3de45dc9c6190f464d665", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/1185b6920231fdf168a3de45dc9c6190f464d665", "committedDate": "2020-03-13T21:31:08Z", "message": "Add BridgingFileSystem"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1185b6920231fdf168a3de45dc9c6190f464d665", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/1185b6920231fdf168a3de45dc9c6190f464d665", "committedDate": "2020-03-13T21:31:08Z", "message": "Add BridgingFileSystem"}, "afterCommit": {"oid": "fcabd24a2cd0195d089e3dcd46521c51066a07dd", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/fcabd24a2cd0195d089e3dcd46521c51066a07dd", "committedDate": "2020-03-13T22:43:53Z", "message": "Add BridgingFileSystem"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fcabd24a2cd0195d089e3dcd46521c51066a07dd", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/fcabd24a2cd0195d089e3dcd46521c51066a07dd", "committedDate": "2020-03-13T22:43:53Z", "message": "Add BridgingFileSystem"}, "afterCommit": {"oid": "5630b67c4f9ea79bd176be6208d4ea4cb0c32d0e", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/5630b67c4f9ea79bd176be6208d4ea4cb0c32d0e", "committedDate": "2020-03-14T02:10:56Z", "message": "Add BridgingFileSystem"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5630b67c4f9ea79bd176be6208d4ea4cb0c32d0e", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/5630b67c4f9ea79bd176be6208d4ea4cb0c32d0e", "committedDate": "2020-03-14T02:10:56Z", "message": "Add BridgingFileSystem"}, "afterCommit": {"oid": "1e481b82ea3f8cce5ba9c1f7983c2fa055e9ea25", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/1e481b82ea3f8cce5ba9c1f7983c2fa055e9ea25", "committedDate": "2020-03-14T02:35:01Z", "message": "Add BridgingFileSystem"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe3e4748b04c52bc4ad24b8b447501deb9f3e653", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/fe3e4748b04c52bc4ad24b8b447501deb9f3e653", "committedDate": "2020-03-16T20:24:34Z", "message": "Random changes"}, "afterCommit": {"oid": "e6c8531ff54e9ae55384ece949f1fae593136786", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/e6c8531ff54e9ae55384ece949f1fae593136786", "committedDate": "2020-03-17T01:04:45Z", "message": "Random changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6c8531ff54e9ae55384ece949f1fae593136786", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/e6c8531ff54e9ae55384ece949f1fae593136786", "committedDate": "2020-03-17T01:04:45Z", "message": "Random changes"}, "afterCommit": {"oid": "9b02e2a018de3a099c1a7bd1d1cf21c5f84647f4", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/9b02e2a018de3a099c1a7bd1d1cf21c5f84647f4", "committedDate": "2020-03-18T21:31:49Z", "message": "Random changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b02e2a018de3a099c1a7bd1d1cf21c5f84647f4", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/9b02e2a018de3a099c1a7bd1d1cf21c5f84647f4", "committedDate": "2020-03-18T21:31:49Z", "message": "Random changes"}, "afterCommit": {"oid": "110fed282843e93ceca48f48f5a69f1adfcc7045", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/110fed282843e93ceca48f48f5a69f1adfcc7045", "committedDate": "2020-03-18T21:52:16Z", "message": "Random changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "110fed282843e93ceca48f48f5a69f1adfcc7045", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/110fed282843e93ceca48f48f5a69f1adfcc7045", "committedDate": "2020-03-18T21:52:16Z", "message": "Random changes"}, "afterCommit": {"oid": "00f6f0d35c3312cf6df858ff7d3b58b5a1daa490", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/00f6f0d35c3312cf6df858ff7d3b58b5a1daa490", "committedDate": "2020-03-18T21:55:27Z", "message": "Random changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "00f6f0d35c3312cf6df858ff7d3b58b5a1daa490", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/00f6f0d35c3312cf6df858ff7d3b58b5a1daa490", "committedDate": "2020-03-18T21:55:27Z", "message": "Random changes"}, "afterCommit": {"oid": "46836dffb291be50485ac52e8e2be54dd8160fc1", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/46836dffb291be50485ac52e8e2be54dd8160fc1", "committedDate": "2020-03-18T23:19:55Z", "message": "Random changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46836dffb291be50485ac52e8e2be54dd8160fc1", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/46836dffb291be50485ac52e8e2be54dd8160fc1", "committedDate": "2020-03-18T23:19:55Z", "message": "Random changes"}, "afterCommit": {"oid": "72ea7592ad917a24799c527b4fb0a0b1c86954d8", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/72ea7592ad917a24799c527b4fb0a0b1c86954d8", "committedDate": "2020-03-20T18:31:41Z", "message": "Random changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72ea7592ad917a24799c527b4fb0a0b1c86954d8", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/72ea7592ad917a24799c527b4fb0a0b1c86954d8", "committedDate": "2020-03-20T18:31:41Z", "message": "Random changes"}, "afterCommit": {"oid": "07968dad4c4cc4fe0acff90b871006f979696b41", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/07968dad4c4cc4fe0acff90b871006f979696b41", "committedDate": "2020-03-24T02:44:48Z", "message": "Random changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07968dad4c4cc4fe0acff90b871006f979696b41", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/07968dad4c4cc4fe0acff90b871006f979696b41", "committedDate": "2020-03-24T02:44:48Z", "message": "Random changes"}, "afterCommit": {"oid": "f17360caac1a9e775c53fa47b8713a06c5e90a00", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/f17360caac1a9e775c53fa47b8713a06c5e90a00", "committedDate": "2020-03-24T05:17:03Z", "message": "Random changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f17360caac1a9e775c53fa47b8713a06c5e90a00", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/f17360caac1a9e775c53fa47b8713a06c5e90a00", "committedDate": "2020-03-24T05:17:03Z", "message": "Random changes"}, "afterCommit": {"oid": "3e46ce349a9b19e2eea0959dca5d3954e715ea56", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/3e46ce349a9b19e2eea0959dca5d3954e715ea56", "committedDate": "2020-03-24T05:28:13Z", "message": "Random changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "53ffae12a8f30f38a0a391a7ac8d7518c4bad165", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/53ffae12a8f30f38a0a391a7ac8d7518c4bad165", "committedDate": "2020-03-25T05:53:58Z", "message": "Refactor DirectoryLister"}, "afterCommit": {"oid": "8dab29e45be27d18f58333acf4578711496dc49b", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/8dab29e45be27d18f58333acf4578711496dc49b", "committedDate": "2020-03-26T20:29:20Z", "message": "Refactor DirectoryLister"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8dab29e45be27d18f58333acf4578711496dc49b", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/8dab29e45be27d18f58333acf4578711496dc49b", "committedDate": "2020-03-26T20:29:20Z", "message": "Refactor DirectoryLister"}, "afterCommit": {"oid": "e7614aed05415fd7d902a09f52aaa3963669aa83", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/e7614aed05415fd7d902a09f52aaa3963669aa83", "committedDate": "2020-03-27T15:19:52Z", "message": "Refactor DirectoryLister"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e7614aed05415fd7d902a09f52aaa3963669aa83", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/e7614aed05415fd7d902a09f52aaa3963669aa83", "committedDate": "2020-03-27T15:19:52Z", "message": "Refactor DirectoryLister"}, "afterCommit": {"oid": "0c41bc933096025b61cf6a95b10ef38fc20a5c48", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/0c41bc933096025b61cf6a95b10ef38fc20a5c48", "committedDate": "2020-03-28T02:44:04Z", "message": "Refactor DirectoryLister"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c41bc933096025b61cf6a95b10ef38fc20a5c48", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/0c41bc933096025b61cf6a95b10ef38fc20a5c48", "committedDate": "2020-03-28T02:44:04Z", "message": "Refactor DirectoryLister"}, "afterCommit": {"oid": "87f9307c5af52e2313b4658e3cdac6859794aad3", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/87f9307c5af52e2313b4658e3cdac6859794aad3", "committedDate": "2020-03-29T04:32:12Z", "message": "Refactor DirectoryLister"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87f9307c5af52e2313b4658e3cdac6859794aad3", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/87f9307c5af52e2313b4658e3cdac6859794aad3", "committedDate": "2020-03-29T04:32:12Z", "message": "Refactor DirectoryLister"}, "afterCommit": {"oid": "56c9872a0238521238627fb628dce6e0e5f44425", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/56c9872a0238521238627fb628dce6e0e5f44425", "committedDate": "2020-03-29T05:57:01Z", "message": "Refactor DirectoryLister"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56c9872a0238521238627fb628dce6e0e5f44425", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/56c9872a0238521238627fb628dce6e0e5f44425", "committedDate": "2020-03-29T05:57:01Z", "message": "Refactor DirectoryLister"}, "afterCommit": {"oid": "7be1a67e51f904980099437ec9b9c698fea6eac0", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/7be1a67e51f904980099437ec9b9c698fea6eac0", "committedDate": "2020-03-29T06:50:57Z", "message": "Refactor DirectoryLister"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7be1a67e51f904980099437ec9b9c698fea6eac0", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/7be1a67e51f904980099437ec9b9c698fea6eac0", "committedDate": "2020-03-29T06:50:57Z", "message": "Refactor DirectoryLister"}, "afterCommit": {"oid": "539f969ddcdc26239a4d7bc9df42ebdabb33e93d", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/539f969ddcdc26239a4d7bc9df42ebdabb33e93d", "committedDate": "2020-03-30T02:27:02Z", "message": "Refactor DirectoryLister"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "539f969ddcdc26239a4d7bc9df42ebdabb33e93d", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/539f969ddcdc26239a4d7bc9df42ebdabb33e93d", "committedDate": "2020-03-30T02:27:02Z", "message": "Refactor DirectoryLister"}, "afterCommit": {"oid": "ee0298a44a7456763b22c80a0fa3f6434411074c", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/ee0298a44a7456763b22c80a0fa3f6434411074c", "committedDate": "2020-03-30T02:53:45Z", "message": "Refactor DirectoryLister"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ee0298a44a7456763b22c80a0fa3f6434411074c", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/ee0298a44a7456763b22c80a0fa3f6434411074c", "committedDate": "2020-03-30T02:53:45Z", "message": "Refactor DirectoryLister"}, "afterCommit": {"oid": "c1990aa2428f2b5d3031a7b92a32ce8f77ab8601", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/c1990aa2428f2b5d3031a7b92a32ce8f77ab8601", "committedDate": "2020-03-30T03:53:06Z", "message": "Refactor DirectoryLister"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c1990aa2428f2b5d3031a7b92a32ce8f77ab8601", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/c1990aa2428f2b5d3031a7b92a32ce8f77ab8601", "committedDate": "2020-03-30T03:53:06Z", "message": "Refactor DirectoryLister"}, "afterCommit": {"oid": "ea4fd5c5e051428424d977485436c7105b677e88", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/ea4fd5c5e051428424d977485436c7105b677e88", "committedDate": "2020-03-30T03:58:55Z", "message": "Refactor DirectoryLister"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea4fd5c5e051428424d977485436c7105b677e88", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/ea4fd5c5e051428424d977485436c7105b677e88", "committedDate": "2020-03-30T03:58:55Z", "message": "Refactor DirectoryLister"}, "afterCommit": {"oid": "514e88110ba485608ce93c36613087e6bea41ae1", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/514e88110ba485608ce93c36613087e6bea41ae1", "committedDate": "2020-03-30T04:17:26Z", "message": "Add ExtendedFileSystem\n\nAdding ExtendedFileSystem support.\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem operations have been removed.\nA necessary refactoring was required hence few classess have been moved to presto-hive-common.\n\nRandom changes\n\nRefactor DirectoryLister"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "514e88110ba485608ce93c36613087e6bea41ae1", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/514e88110ba485608ce93c36613087e6bea41ae1", "committedDate": "2020-03-30T04:17:26Z", "message": "Add ExtendedFileSystem\n\nAdding ExtendedFileSystem support.\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem operations have been removed.\nA necessary refactoring was required hence few classess have been moved to presto-hive-common.\n\nRandom changes\n\nRefactor DirectoryLister"}, "afterCommit": {"oid": "417b3c3a2dd02421de40c5649a39ac2e18eb5d79", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/417b3c3a2dd02421de40c5649a39ac2e18eb5d79", "committedDate": "2020-03-30T04:19:06Z", "message": "Add ExtendedFileSystem\n\nAdding ExtendedFileSystem support.\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem operations have been removed.\nA necessary refactoring was required hence few classess have been moved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "417b3c3a2dd02421de40c5649a39ac2e18eb5d79", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/417b3c3a2dd02421de40c5649a39ac2e18eb5d79", "committedDate": "2020-03-30T04:19:06Z", "message": "Add ExtendedFileSystem\n\nAdding ExtendedFileSystem support.\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem operations have been removed.\nA necessary refactoring was required hence few classess have been moved to presto-hive-common."}, "afterCommit": {"oid": "8b3fa0252fa791ba9ee445e443fb6df337a61d38", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/8b3fa0252fa791ba9ee445e443fb6df337a61d38", "committedDate": "2020-03-30T04:34:59Z", "message": "Add ExtendedFileSystem\n\nAdding ExtendedFileSystem support.\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem operations have been removed.\nA necessary refactoring was required hence few classes have been moved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b3fa0252fa791ba9ee445e443fb6df337a61d38", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/8b3fa0252fa791ba9ee445e443fb6df337a61d38", "committedDate": "2020-03-30T04:34:59Z", "message": "Add ExtendedFileSystem\n\nAdding ExtendedFileSystem support.\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem operations have been removed.\nA necessary refactoring was required hence few classes have been moved to presto-hive-common."}, "afterCommit": {"oid": "7c26e6882ef4bea720b4263ad7adb54ae175096a", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/7c26e6882ef4bea720b4263ad7adb54ae175096a", "committedDate": "2020-03-30T04:45:14Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem operations have been removed.\nA necessary refactoring was required hence few classes have been moved to presto-hive-common."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MDYwNTYw", "url": "https://github.com/prestodb/presto/pull/14244#pullrequestreview-384060560", "createdAt": "2020-03-30T17:09:09Z", "commit": {"oid": "7c26e6882ef4bea720b4263ad7adb54ae175096a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzowOTowOVrOF9zs3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzoyMDoxMVrOF90IfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1NDUyNg==", "bodyText": "This seems unrelated with this PR? Maybe we could put it into a separate pull request.", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r400354526", "createdAt": "2020-03-30T17:09:09Z", "author": {"login": "shixuan-fan"}, "path": "pom.xml", "diffHunk": "@@ -62,7 +62,7 @@\n         <dep.nexus-staging-plugin.version>1.6.8</dep.nexus-staging-plugin.version>\n         <dep.asm.version>6.2.1</dep.asm.version>\n         <dep.gcs.version>1.9.17</dep.gcs.version>\n-        <dep.alluxio.version>2.1.2</dep.alluxio.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c26e6882ef4bea720b4263ad7adb54ae175096a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1NTkwMQ==", "bodyText": "nit: Move above testing artifacts", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r400355901", "createdAt": "2020-03-30T17:11:24Z", "author": {"login": "shixuan-fan"}, "path": "presto-hive-common/pom.xml", "diffHunk": "@@ -18,5 +18,141 @@\n             <groupId>com.facebook.presto</groupId>\n             <artifactId>presto-spi</artifactId>\n         </dependency>\n+\n+        <dependency>\n+            <groupId>com.facebook.presto.hadoop</groupId>\n+            <artifactId>hadoop-apache2</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>com.facebook.presto.hive</groupId>\n+            <artifactId>hive-apache</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>com.facebook.hive</groupId>\n+            <artifactId>hive-dwrf</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>com.fasterxml.jackson.core</groupId>\n+            <artifactId>jackson-annotations</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>javax.annotation</groupId>\n+            <artifactId>javax.annotation-api</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>com.google.code.findbugs</groupId>\n+            <artifactId>jsr305</artifactId>\n+            <optional>true</optional>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.weakref</groupId>\n+            <artifactId>jmxutils</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.openjdk.jol</groupId>\n+            <artifactId>jol-core</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>com.facebook.airlift</groupId>\n+            <artifactId>stats</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>io.airlift</groupId>\n+            <artifactId>units</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>com.google.guava</groupId>\n+            <artifactId>guava</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.apache.thrift</groupId>\n+            <artifactId>libthrift</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>io.airlift</groupId>\n+            <artifactId>joda-to-java-time-bridge</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.jetbrains</groupId>\n+            <artifactId>annotations</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <!-- for testing -->\n+        <dependency>\n+            <groupId>org.openjdk.jmh</groupId>\n+            <artifactId>jmh-core</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.openjdk.jmh</groupId>\n+            <artifactId>jmh-generator-annprocess</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>com.facebook.presto</groupId>\n+            <artifactId>presto-main</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>com.facebook.presto</groupId>\n+            <artifactId>presto-parser</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.testng</groupId>\n+            <artifactId>testng</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>com.facebook.airlift</groupId>\n+            <artifactId>testing</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-jdk14</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>jcl-over-slf4j</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.assertj</groupId>\n+            <artifactId>assertj-core</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c26e6882ef4bea720b4263ad7adb54ae175096a"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1ODY3MA==", "bodyText": "Maybe I'm missing something, but could you explain the motivation for this class and the introduction of reflection?", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r400358670", "createdAt": "2020-03-30T17:15:50Z", "author": {"login": "shixuan-fan"}, "path": "presto-hive-common/src/main/java/org/apache/hadoop/fs/HadoopExtendedFileSystemCache.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.fs;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n+\n+public class HadoopExtendedFileSystemCache", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c26e6882ef4bea720b4263ad7adb54ae175096a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM2MTU5Ng==", "bodyText": "The TODO here is for this PR right? :D", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r400361596", "createdAt": "2020-03-30T17:20:11Z", "author": {"login": "shixuan-fan"}, "path": "presto-hive-common/src/main/java/org/apache/hadoop/fs/PrestoExtendedFileSystemWrapper.java", "diffHunk": "@@ -0,0 +1,642 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.fs;\n+\n+import com.facebook.presto.hive.HiveFileContext;\n+import com.facebook.presto.hive.HiveFileInfo;\n+import com.facebook.presto.hive.NamenodeStats;\n+import com.facebook.presto.hive.NestedDirectoryPolicy;\n+import com.facebook.presto.hive.filesystem.ExtendedFileSystem;\n+import com.facebook.presto.hive.metastore.Table;\n+import com.facebook.presto.hive.util.DirectoryLister;\n+import com.facebook.presto.hive.util.HadoopFileInfoIterator;\n+import com.facebook.presto.hive.util.HiveFileIterator;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.permission.AclEntry;\n+import org.apache.hadoop.fs.permission.AclStatus;\n+import org.apache.hadoop.fs.permission.FsAction;\n+import org.apache.hadoop.fs.permission.FsPermission;\n+import org.apache.hadoop.util.Progressable;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.EnumSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class PrestoExtendedFileSystemWrapper\n+        extends ExtendedFileSystem\n+{\n+    private FileSystem fs;\n+    private String swapScheme;\n+\n+    public PrestoExtendedFileSystemWrapper(FileSystem fs)\n+    {\n+        this.fs = fs;\n+        this.statistics = fs.statistics;\n+    }\n+\n+    @Override\n+    public void initialize(URI name, Configuration conf)\n+            throws IOException\n+    {\n+        super.initialize(name, conf);\n+        // this is less than ideal, but existing filesystems sometimes neglect\n+        // to initialize the embedded filesystem\n+        if (fs.getConf() == null) {\n+            fs.initialize(name, conf);\n+        }\n+        String scheme = name.getScheme();\n+        if (!scheme.equals(fs.getUri().getScheme())) {\n+            swapScheme = scheme;\n+        }\n+    }\n+\n+    @Override\n+    public URI getUri()\n+    {\n+        return fs.getUri();\n+    }\n+\n+    @Override\n+    protected URI getCanonicalUri()\n+    {\n+        return fs.getCanonicalUri();\n+    }\n+\n+    @Override\n+    protected URI canonicalizeUri(URI uri)\n+    {\n+        return fs.canonicalizeUri(uri);\n+    }\n+\n+    @Override\n+    public Path makeQualified(Path path)\n+    {\n+        Path fqPath = fs.makeQualified(path);\n+        // swap in our scheme if the filtered fs is using a different scheme\n+        if (swapScheme != null) {\n+            try {\n+                // NOTE: should deal with authority, but too much other stuff is broken\n+                fqPath = new Path(new URI(swapScheme, fqPath.toUri().getSchemeSpecificPart(), null));\n+            }\n+            catch (URISyntaxException e) {\n+                throw new IllegalArgumentException(e);\n+            }\n+        }\n+        return fqPath;\n+    }\n+\n+    @Override\n+    protected void checkPath(Path path)\n+    {\n+        fs.checkPath(path);\n+    }\n+\n+    @Override\n+    public BlockLocation[] getFileBlockLocations(FileStatus file, long start,\n+            long len)\n+            throws IOException\n+    {\n+        return fs.getFileBlockLocations(file, start, len);\n+    }\n+\n+    @Override\n+    public Path resolvePath(final Path p)\n+            throws IOException\n+    {\n+        return fs.resolvePath(p);\n+    }\n+\n+    @Override\n+    public FSDataInputStream open(Path f, int bufferSize)\n+            throws IOException\n+    {\n+        return fs.open(f, bufferSize);\n+    }\n+\n+    @Override\n+    public FSDataOutputStream append(Path f, int bufferSize,\n+            Progressable progress)\n+            throws IOException\n+    {\n+        return fs.append(f, bufferSize, progress);\n+    }\n+\n+    @Override\n+    public void concat(Path f, Path[] psrcs)\n+            throws IOException\n+    {\n+        fs.concat(f, psrcs);\n+    }\n+\n+    @Override\n+    public FSDataOutputStream create(Path f, FsPermission permission,\n+            boolean overwrite, int bufferSize, short replication, long blockSize,\n+            Progressable progress)\n+            throws IOException\n+    {\n+        return fs.create(f, permission,\n+                overwrite, bufferSize, replication, blockSize, progress);\n+    }\n+\n+    @Override\n+    public FSDataOutputStream create(Path f,\n+            FsPermission permission,\n+            EnumSet<CreateFlag> flags,\n+            int bufferSize,\n+            short replication,\n+            long blockSize,\n+            Progressable progress,\n+            Options.ChecksumOpt checksumOpt)\n+            throws IOException\n+    {\n+        return fs.create(f, permission,\n+                flags, bufferSize, replication, blockSize, progress, checksumOpt);\n+    }\n+\n+    @Override\n+    @Deprecated\n+    public FSDataOutputStream createNonRecursive(Path f, FsPermission permission,\n+            EnumSet<CreateFlag> flags, int bufferSize, short replication, long blockSize,\n+            Progressable progress)\n+            throws IOException\n+    {\n+        return fs.createNonRecursive(f, permission, flags, bufferSize, replication, blockSize, progress);\n+    }\n+\n+    @Override\n+    public boolean setReplication(Path src, short replication)\n+            throws IOException\n+    {\n+        return fs.setReplication(src, replication);\n+    }\n+\n+    @Override\n+    public boolean rename(Path src, Path dst)\n+            throws IOException\n+    {\n+        return fs.rename(src, dst);\n+    }\n+\n+    @Override\n+    protected void rename(Path src, Path dst, Options.Rename... options)\n+            throws IOException\n+    {\n+        fs.rename(src, dst, options);\n+    }\n+\n+    @Override\n+    public boolean truncate(Path f, final long newLength)\n+            throws IOException\n+    {\n+        return fs.truncate(f, newLength);\n+    }\n+\n+    @Override\n+    public boolean delete(Path f, boolean recursive)\n+            throws IOException\n+    {\n+        return fs.delete(f, recursive);\n+    }\n+\n+    @Override\n+    public FileStatus[] listStatus(Path f)\n+            throws IOException\n+    {\n+        return fs.listStatus(f);\n+    }\n+\n+    @Override\n+    public RemoteIterator<Path> listCorruptFileBlocks(Path path)\n+            throws IOException\n+    {\n+        return fs.listCorruptFileBlocks(path);\n+    }\n+\n+    @Override\n+    public RemoteIterator<LocatedFileStatus> listLocatedStatus(Path f)\n+            throws IOException\n+    {\n+        return fs.listLocatedStatus(f);\n+    }\n+\n+    @Override\n+    public RemoteIterator<FileStatus> listStatusIterator(Path f)\n+            throws IOException\n+    {\n+        return fs.listStatusIterator(f);\n+    }\n+\n+    @Override\n+    public Path getHomeDirectory()\n+    {\n+        return fs.getHomeDirectory();\n+    }\n+\n+    @Override\n+    public void setWorkingDirectory(Path newDir)\n+    {\n+        fs.setWorkingDirectory(newDir);\n+    }\n+\n+    @Override\n+    public Path getWorkingDirectory()\n+    {\n+        return fs.getWorkingDirectory();\n+    }\n+\n+    @Override\n+    protected Path getInitialWorkingDirectory()\n+    {\n+        return fs.getInitialWorkingDirectory();\n+    }\n+\n+    @Override\n+    public FsStatus getStatus(Path p)\n+            throws IOException\n+    {\n+        return fs.getStatus(p);\n+    }\n+\n+    @Override\n+    public boolean mkdirs(Path f, FsPermission permission)\n+            throws IOException\n+    {\n+        return fs.mkdirs(f, permission);\n+    }\n+\n+    @Override\n+    public void copyFromLocalFile(boolean delSrc, Path src, Path dst)\n+            throws IOException\n+    {\n+        fs.copyFromLocalFile(delSrc, src, dst);\n+    }\n+\n+    @Override\n+    public void copyFromLocalFile(boolean delSrc, boolean overwrite,\n+            Path[] srcs, Path dst)\n+            throws IOException\n+    {\n+        fs.copyFromLocalFile(delSrc, overwrite, srcs, dst);\n+    }\n+\n+    @Override\n+    public void copyFromLocalFile(boolean delSrc, boolean overwrite,\n+            Path src, Path dst)\n+            throws IOException\n+    {\n+        fs.copyFromLocalFile(delSrc, overwrite, src, dst);\n+    }\n+\n+    @Override\n+    public void copyToLocalFile(boolean delSrc, Path src, Path dst)\n+            throws IOException\n+    {\n+        fs.copyToLocalFile(delSrc, src, dst);\n+    }\n+\n+    @Override\n+    public Path startLocalOutput(Path fsOutputFile, Path tmpLocalFile)\n+            throws IOException\n+    {\n+        return fs.startLocalOutput(fsOutputFile, tmpLocalFile);\n+    }\n+\n+    @Override\n+    public void completeLocalOutput(Path fsOutputFile, Path tmpLocalFile)\n+            throws IOException\n+    {\n+        fs.completeLocalOutput(fsOutputFile, tmpLocalFile);\n+    }\n+\n+    @Override\n+    public long getUsed()\n+            throws IOException\n+    {\n+        return fs.getUsed();\n+    }\n+\n+    @Override\n+    public long getDefaultBlockSize()\n+    {\n+        return fs.getDefaultBlockSize();\n+    }\n+\n+    @Override\n+    public short getDefaultReplication()\n+    {\n+        return fs.getDefaultReplication();\n+    }\n+\n+    @Override\n+    public FsServerDefaults getServerDefaults()\n+            throws IOException\n+    {\n+        return fs.getServerDefaults();\n+    }\n+\n+    // path variants delegate to underlying filesystem\n+    @Override\n+    public long getDefaultBlockSize(Path f)\n+    {\n+        return fs.getDefaultBlockSize(f);\n+    }\n+\n+    @Override\n+    public short getDefaultReplication(Path f)\n+    {\n+        return fs.getDefaultReplication(f);\n+    }\n+\n+    @Override\n+    public FsServerDefaults getServerDefaults(Path f)\n+            throws IOException\n+    {\n+        return fs.getServerDefaults(f);\n+    }\n+\n+    @Override\n+    public FileStatus getFileStatus(Path f)\n+            throws IOException\n+    {\n+        return fs.getFileStatus(f);\n+    }\n+\n+    @Override\n+    public void access(Path path, FsAction mode)\n+            throws IOException\n+    {\n+        fs.access(path, mode);\n+    }\n+\n+    public void createSymlink(final Path target, final Path link,\n+            final boolean createParent)\n+            throws IOException\n+    {\n+        fs.createSymlink(target, link, createParent);\n+    }\n+\n+    public FileStatus getFileLinkStatus(final Path f)\n+            throws IOException\n+    {\n+        return fs.getFileLinkStatus(f);\n+    }\n+\n+    public boolean supportsSymlinks()\n+    {\n+        return fs.supportsSymlinks();\n+    }\n+\n+    public Path getLinkTarget(Path f)\n+            throws IOException\n+    {\n+        return fs.getLinkTarget(f);\n+    }\n+\n+    protected Path resolveLink(Path f)\n+            throws IOException\n+    {\n+        return fs.resolveLink(f);\n+    }\n+\n+    @Override\n+    public FileChecksum getFileChecksum(Path f)\n+            throws IOException\n+    {\n+        return fs.getFileChecksum(f);\n+    }\n+\n+    @Override\n+    public FileChecksum getFileChecksum(Path f, long length)\n+            throws IOException\n+    {\n+        return fs.getFileChecksum(f, length);\n+    }\n+\n+    @Override\n+    public void setVerifyChecksum(boolean verifyChecksum)\n+    {\n+        fs.setVerifyChecksum(verifyChecksum);\n+    }\n+\n+    @Override\n+    public void setWriteChecksum(boolean writeChecksum)\n+    {\n+        fs.setWriteChecksum(writeChecksum);\n+    }\n+\n+    @Override\n+    public Configuration getConf()\n+    {\n+        return fs.getConf();\n+    }\n+\n+    @Override\n+    public void close()\n+            throws IOException\n+    {\n+        super.close();\n+        fs.close();\n+    }\n+\n+    @Override\n+    public void setOwner(Path path, String user, String group)\n+            throws IOException\n+    {\n+        fs.setOwner(path, user, group);\n+    }\n+\n+    @Override\n+    public void setTimes(Path p, long mtime, long atime)\n+            throws IOException\n+    {\n+        fs.setTimes(p, mtime, atime);\n+    }\n+\n+    @Override\n+    public void setPermission(Path p, FsPermission permission)\n+            throws IOException\n+    {\n+        fs.setPermission(p, permission);\n+    }\n+\n+    @Override\n+    protected FSDataOutputStream primitiveCreate(Path f,\n+            FsPermission absolutePermission, EnumSet<CreateFlag> flag,\n+            int bufferSize, short replication, long blockSize,\n+            Progressable progress, Options.ChecksumOpt checksumOpt)\n+            throws IOException\n+    {\n+        return fs.primitiveCreate(f, absolutePermission, flag,\n+                bufferSize, replication, blockSize, progress, checksumOpt);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"deprecation\")\n+    protected boolean primitiveMkdir(Path f, FsPermission abdolutePermission)\n+            throws IOException\n+    {\n+        return fs.primitiveMkdir(f, abdolutePermission);\n+    }\n+\n+    @Override // FileSystem\n+    public FileSystem[] getChildFileSystems()\n+    {\n+        return new FileSystem[] {fs};\n+    }\n+\n+    @Override // FileSystem\n+    public Path createSnapshot(Path path, String snapshotName)\n+            throws IOException\n+    {\n+        return fs.createSnapshot(path, snapshotName);\n+    }\n+\n+    @Override // FileSystem\n+    public void renameSnapshot(Path path, String snapshotOldName,\n+            String snapshotNewName)\n+            throws IOException\n+    {\n+        fs.renameSnapshot(path, snapshotOldName, snapshotNewName);\n+    }\n+\n+    @Override // FileSystem\n+    public void deleteSnapshot(Path path, String snapshotName)\n+            throws IOException\n+    {\n+        fs.deleteSnapshot(path, snapshotName);\n+    }\n+\n+    @Override\n+    public void modifyAclEntries(Path path, List<AclEntry> aclSpec)\n+            throws IOException\n+    {\n+        fs.modifyAclEntries(path, aclSpec);\n+    }\n+\n+    @Override\n+    public void removeAclEntries(Path path, List<AclEntry> aclSpec)\n+            throws IOException\n+    {\n+        fs.removeAclEntries(path, aclSpec);\n+    }\n+\n+    @Override\n+    public void removeDefaultAcl(Path path)\n+            throws IOException\n+    {\n+        fs.removeDefaultAcl(path);\n+    }\n+\n+    @Override\n+    public void removeAcl(Path path)\n+            throws IOException\n+    {\n+        fs.removeAcl(path);\n+    }\n+\n+    @Override\n+    public void setAcl(Path path, List<AclEntry> aclSpec)\n+            throws IOException\n+    {\n+        fs.setAcl(path, aclSpec);\n+    }\n+\n+    @Override\n+    public AclStatus getAclStatus(Path path)\n+            throws IOException\n+    {\n+        return fs.getAclStatus(path);\n+    }\n+\n+    @Override\n+    public void setXAttr(Path path, String name, byte[] value)\n+            throws IOException\n+    {\n+        fs.setXAttr(path, name, value);\n+    }\n+\n+    @Override\n+    public void setXAttr(Path path, String name, byte[] value,\n+            EnumSet<XAttrSetFlag> flag)\n+            throws IOException\n+    {\n+        fs.setXAttr(path, name, value, flag);\n+    }\n+\n+    @Override\n+    public byte[] getXAttr(Path path, String name)\n+            throws IOException\n+    {\n+        return fs.getXAttr(path, name);\n+    }\n+\n+    @Override\n+    public Map<String, byte[]> getXAttrs(Path path)\n+            throws IOException\n+    {\n+        return fs.getXAttrs(path);\n+    }\n+\n+    @Override\n+    public Map<String, byte[]> getXAttrs(Path path, List<String> names)\n+            throws IOException\n+    {\n+        return fs.getXAttrs(path, names);\n+    }\n+\n+    @Override\n+    public List<String> listXAttrs(Path path)\n+            throws IOException\n+    {\n+        return fs.listXAttrs(path);\n+    }\n+\n+    @Override\n+    public void removeXAttr(Path path, String name)\n+            throws IOException\n+    {\n+        fs.removeXAttr(path, name);\n+    }\n+\n+    @Override\n+    public RemoteIterator<LocatedFileStatus> listDirectory(Path path)\n+    {\n+        //TODO: Fill it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c26e6882ef4bea720b4263ad7adb54ae175096a"}, "originalPosition": 619}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c26e6882ef4bea720b4263ad7adb54ae175096a", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/7c26e6882ef4bea720b4263ad7adb54ae175096a", "committedDate": "2020-03-30T04:45:14Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem operations have been removed.\nA necessary refactoring was required hence few classes have been moved to presto-hive-common."}, "afterCommit": {"oid": "7573554af88fa9f50444bb7bcc2a8bd5a09b8825", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/7573554af88fa9f50444bb7bcc2a8bd5a09b8825", "committedDate": "2020-03-30T18:15:25Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem operations have been removed.\nA necessary refactoring was required hence few classes have been moved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7573554af88fa9f50444bb7bcc2a8bd5a09b8825", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/7573554af88fa9f50444bb7bcc2a8bd5a09b8825", "committedDate": "2020-03-30T18:15:25Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem operations have been removed.\nA necessary refactoring was required hence few classes have been moved to presto-hive-common."}, "afterCommit": {"oid": "72912d8dace59edf6beae7cdc4c8f62bcf059120", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/72912d8dace59edf6beae7cdc4c8f62bcf059120", "committedDate": "2020-03-30T18:19:16Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem operations have been removed.\nA necessary refactoring was required hence few classes have been moved to presto-hive-common."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTgwOTEy", "url": "https://github.com/prestodb/presto/pull/14244#pullrequestreview-383580912", "createdAt": "2020-03-30T07:10:36Z", "commit": {"oid": "7c26e6882ef4bea720b4263ad7adb54ae175096a"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzoxMDozNlrOF9cPuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMDoyMjoxMFrOF96vWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk3MDIzMw==", "bodyText": "Don't we need to do the caching here?", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r399970233", "createdAt": "2020-03-30T07:10:36Z", "author": {"login": "highker"}, "path": "presto-cache/src/main/java/com/facebook/presto/cache/CachingFileSystem.java", "diffHunk": "@@ -498,4 +508,37 @@ public boolean isCacheValidationEnabled()\n     {\n         return cacheValidationEnabled;\n     }\n+\n+    @Override\n+    public RemoteIterator<LocatedFileStatus> listDirectory(Path path)\n+            throws IOException\n+    {\n+        return dataTier.listDirectory(path);\n+    }\n+\n+    @Override\n+    public RemoteIterator<HiveFileInfo> listFiles(Path path)\n+            throws IOException\n+    {\n+        return dataTier.listFiles(path);\n+    }\n+\n+    @Override\n+    public FSDataInputStream openFile(Path path, HiveFileContext hiveFileContext)\n+            throws Exception\n+    {\n+        return dataTier.openFile(path, hiveFileContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c26e6882ef4bea720b4263ad7adb54ae175096a"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQyMjMxOA==", "bodyText": "This is a weird interface; we don't need DirectoryLister as a param. Shouldn't we bind DirectoryLister to a concrete FS and avoid passing it in dynamically? DirectoryLister are fixed during config time.", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r400422318", "createdAt": "2020-03-30T18:58:31Z", "author": {"login": "highker"}, "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/filesystem/ExtendedFileSystem.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive.filesystem;\n+\n+import com.facebook.presto.hive.HiveFileContext;\n+import com.facebook.presto.hive.HiveFileInfo;\n+import com.facebook.presto.hive.NamenodeStats;\n+import com.facebook.presto.hive.NestedDirectoryPolicy;\n+import com.facebook.presto.hive.metastore.Table;\n+import com.facebook.presto.hive.util.DirectoryLister;\n+import org.apache.hadoop.fs.FSDataInputStream;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.LocatedFileStatus;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.fs.PathFilter;\n+import org.apache.hadoop.fs.RemoteIterator;\n+\n+import java.io.IOException;\n+import java.util.Iterator;\n+\n+public abstract class ExtendedFileSystem\n+        extends FileSystem\n+{\n+    public abstract RemoteIterator<LocatedFileStatus> listDirectory(Path path)\n+            throws IOException;\n+\n+    public abstract RemoteIterator<HiveFileInfo> listFiles(Path path)\n+            throws IOException;\n+\n+    public abstract FSDataInputStream openFile(Path path, HiveFileContext hiveFileContext)\n+            throws Exception;\n+\n+    public abstract Iterator<HiveFileInfo> list(\n+            Table table,\n+            Path path,\n+            DirectoryLister directoryLister,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72912d8dace59edf6beae7cdc4c8f62bcf059120"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ2ODYwOA==", "bodyText": "This is also a weird interface where the input is a iterator supplier and the output is the iterator.... I think both CachingDirectoryLister and TimeoutDirectoryLister should take a 'delegate\" in their constructors rather than providing a supplier here. The supplier passed in from PrestoExtendedFileSystemWrapper or any other FS should create their own generic DirectoryLister.\nThe old logic is exactly like that, isn't it?", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r400468608", "createdAt": "2020-03-30T20:19:50Z", "author": {"login": "highker"}, "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/util/DirectoryLister.java", "diffHunk": "@@ -11,18 +11,16 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package com.facebook.presto.hive;\n+package com.facebook.presto.hive.util;\n \n+import com.facebook.presto.hive.HiveFileInfo;\n import com.facebook.presto.hive.metastore.Table;\n-import org.apache.hadoop.fs.FileSystem;\n+import com.google.common.base.Supplier;\n import org.apache.hadoop.fs.Path;\n-import org.apache.hadoop.fs.PathFilter;\n \n import java.util.Iterator;\n \n-import static com.facebook.presto.hive.util.HiveFileIterator.NestedDirectoryPolicy;\n-\n public interface DirectoryLister\n {\n-    Iterator<HiveFileInfo> list(FileSystem fileSystem, Table table, Path path, NamenodeStats namenodeStats, NestedDirectoryPolicy nestedDirectoryPolicy, PathFilter pathFilter);\n+    Iterator<HiveFileInfo> list(Path path, Table table, Supplier<Iterator<HiveFileInfo>> hiveFileInfoSupplier);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72912d8dace59edf6beae7cdc4c8f62bcf059120"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ2OTU2Ng==", "bodyText": "Maybe call it HadoopExtendedFileSystemr", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r400469566", "createdAt": "2020-03-30T20:21:34Z", "author": {"login": "highker"}, "path": "presto-hive-common/src/main/java/org/apache/hadoop/fs/PrestoExtendedFileSystemWrapper.java", "diffHunk": "@@ -0,0 +1,640 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.fs;\n+\n+import com.facebook.presto.hive.HiveFileContext;\n+import com.facebook.presto.hive.HiveFileInfo;\n+import com.facebook.presto.hive.NamenodeStats;\n+import com.facebook.presto.hive.NestedDirectoryPolicy;\n+import com.facebook.presto.hive.filesystem.ExtendedFileSystem;\n+import com.facebook.presto.hive.metastore.Table;\n+import com.facebook.presto.hive.util.DirectoryLister;\n+import com.facebook.presto.hive.util.HadoopFileInfoIterator;\n+import com.facebook.presto.hive.util.HiveFileIterator;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.permission.AclEntry;\n+import org.apache.hadoop.fs.permission.AclStatus;\n+import org.apache.hadoop.fs.permission.FsAction;\n+import org.apache.hadoop.fs.permission.FsPermission;\n+import org.apache.hadoop.util.Progressable;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.EnumSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class PrestoExtendedFileSystemWrapper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72912d8dace59edf6beae7cdc4c8f62bcf059120"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ2OTg1MQ==", "bodyText": "We may still need the delegate model", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r400469851", "createdAt": "2020-03-30T20:22:10Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/CachingDirectoryLister.java", "diffHunk": "@@ -45,23 +44,19 @@\n     private final Cache<Path, List<HiveFileInfo>> cache;\n     private final Set<SchemaTableName> cachedTableNames;\n \n-    protected final DirectoryLister delegate;\n-\n     @Inject\n-    public CachingDirectoryLister(@ForCachingDirectoryLister DirectoryLister delegate, HiveClientConfig hiveClientConfig)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72912d8dace59edf6beae7cdc4c8f62bcf059120"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72912d8dace59edf6beae7cdc4c8f62bcf059120", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/72912d8dace59edf6beae7cdc4c8f62bcf059120", "committedDate": "2020-03-30T18:19:16Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem operations have been removed.\nA necessary refactoring was required hence few classes have been moved to presto-hive-common."}, "afterCommit": {"oid": "7ca81431c4eaceba49bf81923454eb7b0ba657aa", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/7ca81431c4eaceba49bf81923454eb7b0ba657aa", "committedDate": "2020-03-30T21:53:51Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from\nthe ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem\noperations have been removed.\nA necessary refactoring was required hence few classes have been\nmoved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ca81431c4eaceba49bf81923454eb7b0ba657aa", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/7ca81431c4eaceba49bf81923454eb7b0ba657aa", "committedDate": "2020-03-30T21:53:51Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from\nthe ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem\noperations have been removed.\nA necessary refactoring was required hence few classes have been\nmoved to presto-hive-common."}, "afterCommit": {"oid": "6e53bed14f940391b855a52f6a5126477daecb8f", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/6e53bed14f940391b855a52f6a5126477daecb8f", "committedDate": "2020-03-31T01:12:15Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from\nthe ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem\noperations have been removed.\nA necessary refactoring was required hence few classes have been\nmoved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e53bed14f940391b855a52f6a5126477daecb8f", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/6e53bed14f940391b855a52f6a5126477daecb8f", "committedDate": "2020-03-31T01:12:15Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from\nthe ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem\noperations have been removed.\nA necessary refactoring was required hence few classes have been\nmoved to presto-hive-common."}, "afterCommit": {"oid": "9711ebd414af43c370a760f4212f1a4c972bc8b1", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/9711ebd414af43c370a760f4212f1a4c972bc8b1", "committedDate": "2020-03-31T01:20:02Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from\nthe ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem\noperations have been removed.\nA necessary refactoring was required hence few classes have been\nmoved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9711ebd414af43c370a760f4212f1a4c972bc8b1", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/9711ebd414af43c370a760f4212f1a4c972bc8b1", "committedDate": "2020-03-31T01:20:02Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from\nthe ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem\noperations have been removed.\nA necessary refactoring was required hence few classes have been\nmoved to presto-hive-common."}, "afterCommit": {"oid": "d929ece0a8068d1cb920b69ae8c96a4108035faa", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/d929ece0a8068d1cb920b69ae8c96a4108035faa", "committedDate": "2020-03-31T04:49:49Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from\nthe ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem\noperations have been removed.\nA necessary refactoring was required hence few classes have been\nmoved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d929ece0a8068d1cb920b69ae8c96a4108035faa", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/d929ece0a8068d1cb920b69ae8c96a4108035faa", "committedDate": "2020-03-31T04:49:49Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from\nthe ExtendedFileSystem.\nFileOpener and DirectoryLister classes to support FileSystem\noperations have been removed.\nA necessary refactoring was required hence few classes have been\nmoved to presto-hive-common."}, "afterCommit": {"oid": "9ba3dc626bd6c59fa8cebe2a53d71c99a446bac4", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/9ba3dc626bd6c59fa8cebe2a53d71c99a446bac4", "committedDate": "2020-03-31T04:49:58Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from\nthe ExtendedFileSystem.\nFileOpener classes to support FileSystem\noperations have been removed.\nA necessary refactoring was required hence few classes have been\nmoved to presto-hive-common."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NDA4MDUw", "url": "https://github.com/prestodb/presto/pull/14244#pullrequestreview-384408050", "createdAt": "2020-03-31T05:16:45Z", "commit": {"oid": "9ba3dc626bd6c59fa8cebe2a53d71c99a446bac4"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9ba3dc626bd6c59fa8cebe2a53d71c99a446bac4", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/9ba3dc626bd6c59fa8cebe2a53d71c99a446bac4", "committedDate": "2020-03-31T04:49:58Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from\nthe ExtendedFileSystem.\nFileOpener classes to support FileSystem\noperations have been removed.\nA necessary refactoring was required hence few classes have been\nmoved to presto-hive-common."}, "afterCommit": {"oid": "eeabbe6d00eb44eabe6c2762d9107d008b231a1c", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/eeabbe6d00eb44eabe6c2762d9107d008b231a1c", "committedDate": "2020-03-31T05:20:11Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NDExNTIz", "url": "https://github.com/prestodb/presto/pull/14244#pullrequestreview-384411523", "createdAt": "2020-03-31T05:28:08Z", "commit": {"oid": "eeabbe6d00eb44eabe6c2762d9107d008b231a1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwNToyODowOVrOF-F2QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwNToyODowOVrOF-F2QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY1MTg0MQ==", "bodyText": "I noticed that the SNAPSHOT version has been uploaded to the maven repository, hence using this temporarily to run tests. Once the hadoop-apache2 release issue is resolved, I would update it to use release version.", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r400651841", "createdAt": "2020-03-31T05:28:09Z", "author": {"login": "jainxrohit"}, "path": "pom.xml", "diffHunk": "@@ -532,7 +532,7 @@\n             <dependency>\n                 <groupId>com.facebook.presto.hadoop</groupId>\n                 <artifactId>hadoop-apache2</artifactId>\n-                <version>2.7.4-5</version>\n+                <version>2.7.4-7-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeabbe6d00eb44eabe6c2762d9107d008b231a1c"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eeabbe6d00eb44eabe6c2762d9107d008b231a1c", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/eeabbe6d00eb44eabe6c2762d9107d008b231a1c", "committedDate": "2020-03-31T05:20:11Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "ff4aac456fcd51fe575f4eb155464261e63f9935", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/ff4aac456fcd51fe575f4eb155464261e63f9935", "committedDate": "2020-03-31T18:23:24Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0OTg0MzQ2", "url": "https://github.com/prestodb/presto/pull/14244#pullrequestreview-384984346", "createdAt": "2020-03-31T18:12:09Z", "commit": {"oid": "eeabbe6d00eb44eabe6c2762d9107d008b231a1c"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODoxMjoxMFrOF-iIDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODoyNjowNVrOF-ioJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExNTE0OA==", "bodyText": "DirectoryLister should belong to filesystem", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r401115148", "createdAt": "2020-03-31T18:12:10Z", "author": {"login": "highker"}, "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/util/DirectoryLister.java", "diffHunk": "@@ -11,18 +11,25 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package com.facebook.presto.hive;\n+package com.facebook.presto.hive.util;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeabbe6d00eb44eabe6c2762d9107d008b231a1c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExNjg0Ng==", "bodyText": "Inject DirectoryLister to each HdfsConfiguration impl (e.g., HiveCachingHdfsConfiguration). Then creating the ExtendedFileSystem with the injected DirectoryLister. That will avoid the param for this interface.", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r401116846", "createdAt": "2020-03-31T18:15:01Z", "author": {"login": "highker"}, "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/filesystem/ExtendedFileSystem.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive.filesystem;\n+\n+import com.facebook.presto.hive.HiveFileContext;\n+import com.facebook.presto.hive.HiveFileInfo;\n+import com.facebook.presto.hive.NamenodeStats;\n+import com.facebook.presto.hive.NestedDirectoryPolicy;\n+import com.facebook.presto.hive.metastore.Table;\n+import com.facebook.presto.hive.util.DirectoryLister;\n+import org.apache.hadoop.fs.FSDataInputStream;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.LocatedFileStatus;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.fs.PathFilter;\n+import org.apache.hadoop.fs.RemoteIterator;\n+\n+import java.io.IOException;\n+import java.util.Iterator;\n+\n+public abstract class ExtendedFileSystem\n+        extends FileSystem\n+{\n+    public FSDataInputStream openFile(Path path, HiveFileContext hiveFileContext)\n+            throws Exception\n+    {\n+        return open(path);\n+    }\n+\n+    public Iterator<HiveFileInfo> list(\n+            DirectoryLister directoryLister,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeabbe6d00eb44eabe6c2762d9107d008b231a1c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExNjk0MA==", "bodyText": "What's this?", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r401116940", "createdAt": "2020-03-31T18:15:10Z", "author": {"login": "highker"}, "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/filesystem/ExtendedFileSystem.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive.filesystem;\n+\n+import com.facebook.presto.hive.HiveFileContext;\n+import com.facebook.presto.hive.HiveFileInfo;\n+import com.facebook.presto.hive.NamenodeStats;\n+import com.facebook.presto.hive.NestedDirectoryPolicy;\n+import com.facebook.presto.hive.metastore.Table;\n+import com.facebook.presto.hive.util.DirectoryLister;\n+import org.apache.hadoop.fs.FSDataInputStream;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.LocatedFileStatus;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.fs.PathFilter;\n+import org.apache.hadoop.fs.RemoteIterator;\n+\n+import java.io.IOException;\n+import java.util.Iterator;\n+\n+public abstract class ExtendedFileSystem\n+        extends FileSystem\n+{\n+    public FSDataInputStream openFile(Path path, HiveFileContext hiveFileContext)\n+            throws Exception\n+    {\n+        return open(path);\n+    }\n+\n+    public Iterator<HiveFileInfo> list(\n+            DirectoryLister directoryLister,\n+            Table table,\n+            Path path,\n+            NamenodeStats namenodeStats,\n+            NestedDirectoryPolicy nestedDirectoryPolicy,\n+            PathFilter pathFilter)\n+    {\n+        return directoryLister.list(this, table, path, namenodeStats, nestedDirectoryPolicy, pathFilter);\n+    }\n+\n+    public RemoteIterator<LocatedFileStatus> listDirectory(Path path)\n+            throws IOException\n+    {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    public RemoteIterator<HiveFileInfo> listFiles(Path path)\n+            throws IOException\n+    {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    public RemoteIterator<LocatedFileStatus> listByPrefix(Path path)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeabbe6d00eb44eabe6c2762d9107d008b231a1c"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyMjQ1NA==", "bodyText": "Remove default behavior", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r401122454", "createdAt": "2020-03-31T18:24:33Z", "author": {"login": "highker"}, "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/filesystem/ExtendedFileSystem.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive.filesystem;\n+\n+import com.facebook.presto.hive.HiveFileContext;\n+import com.facebook.presto.hive.HiveFileInfo;\n+import com.facebook.presto.hive.NamenodeStats;\n+import com.facebook.presto.hive.NestedDirectoryPolicy;\n+import com.facebook.presto.hive.metastore.Table;\n+import com.facebook.presto.hive.util.DirectoryLister;\n+import org.apache.hadoop.fs.FSDataInputStream;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.LocatedFileStatus;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.fs.PathFilter;\n+import org.apache.hadoop.fs.RemoteIterator;\n+\n+import java.io.IOException;\n+import java.util.Iterator;\n+\n+public abstract class ExtendedFileSystem\n+        extends FileSystem\n+{\n+    public FSDataInputStream openFile(Path path, HiveFileContext hiveFileContext)\n+            throws Exception\n+    {\n+        return open(path);\n+    }\n+\n+    public Iterator<HiveFileInfo> list(\n+            DirectoryLister directoryLister,\n+            Table table,\n+            Path path,\n+            NamenodeStats namenodeStats,\n+            NestedDirectoryPolicy nestedDirectoryPolicy,\n+            PathFilter pathFilter)\n+    {\n+        return directoryLister.list(this, table, path, namenodeStats, nestedDirectoryPolicy, pathFilter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff4aac456fcd51fe575f4eb155464261e63f9935"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyMzA5Mg==", "bodyText": "util packages are mostly for static helper functions; this belongs to filesystem", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r401123092", "createdAt": "2020-03-31T18:25:38Z", "author": {"login": "highker"}, "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/util/HadoopFileInfoIterator.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive.util;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff4aac456fcd51fe575f4eb155464261e63f9935"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyMzM2Nw==", "bodyText": "Remove Wrapper", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r401123367", "createdAt": "2020-03-31T18:26:05Z", "author": {"login": "highker"}, "path": "presto-hive-common/src/main/java/org/apache/hadoop/fs/HadoopExtendedFileSystemWrapper.java", "diffHunk": "@@ -0,0 +1,625 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.fs;\n+\n+import com.facebook.presto.hive.HiveFileContext;\n+import com.facebook.presto.hive.filesystem.ExtendedFileSystem;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.permission.AclEntry;\n+import org.apache.hadoop.fs.permission.AclStatus;\n+import org.apache.hadoop.fs.permission.FsAction;\n+import org.apache.hadoop.fs.permission.FsPermission;\n+import org.apache.hadoop.util.Progressable;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class HadoopExtendedFileSystemWrapper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff4aac456fcd51fe575f4eb155464261e63f9935"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ff4aac456fcd51fe575f4eb155464261e63f9935", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/ff4aac456fcd51fe575f4eb155464261e63f9935", "committedDate": "2020-03-31T18:23:24Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "234d10c7ca1167b147e8e1281eb6c1b995326669", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/234d10c7ca1167b147e8e1281eb6c1b995326669", "committedDate": "2020-03-31T19:56:44Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "234d10c7ca1167b147e8e1281eb6c1b995326669", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/234d10c7ca1167b147e8e1281eb6c1b995326669", "committedDate": "2020-03-31T19:56:44Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "d52b6d614b51eb0b529b2f7cda68091c98771e48", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/d52b6d614b51eb0b529b2f7cda68091c98771e48", "committedDate": "2020-03-31T21:53:57Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d52b6d614b51eb0b529b2f7cda68091c98771e48", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/d52b6d614b51eb0b529b2f7cda68091c98771e48", "committedDate": "2020-03-31T21:53:57Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "fc0b8ad75b7b28e016e456ad2e3567b1bca502e9", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/fc0b8ad75b7b28e016e456ad2e3567b1bca502e9", "committedDate": "2020-03-31T23:54:02Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fc0b8ad75b7b28e016e456ad2e3567b1bca502e9", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/fc0b8ad75b7b28e016e456ad2e3567b1bca502e9", "committedDate": "2020-03-31T23:54:02Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "64bab966d82afb40afe56aa429650d790b3cc042", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/64bab966d82afb40afe56aa429650d790b3cc042", "committedDate": "2020-04-03T22:44:12Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64bab966d82afb40afe56aa429650d790b3cc042", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/64bab966d82afb40afe56aa429650d790b3cc042", "committedDate": "2020-04-03T22:44:12Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "1027ba169718b06b65a95b0629643af74dfa6e14", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/1027ba169718b06b65a95b0629643af74dfa6e14", "committedDate": "2020-04-03T23:07:59Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Nzc4NzE3", "url": "https://github.com/prestodb/presto/pull/14244#pullrequestreview-387778717", "createdAt": "2020-04-05T03:46:10Z", "commit": {"oid": "1027ba169718b06b65a95b0629643af74dfa6e14"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwMzo0NjoxMFrOGA8grg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwMzo0NjoxMFrOGA8grg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0NDU5MA==", "bodyText": "You don't need to move DirectoryLister to presto-hive-common, right? Just keep it in presto-hive.", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r403644590", "createdAt": "2020-04-05T03:46:10Z", "author": {"login": "highker"}, "path": "presto-hive-common/src/main/java/com/facebook/presto/hive/filesystem/DirectoryLister.java", "diffHunk": "@@ -11,18 +11,24 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package com.facebook.presto.hive;\n+package com.facebook.presto.hive.filesystem;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1027ba169718b06b65a95b0629643af74dfa6e14"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDY0MTE3", "url": "https://github.com/prestodb/presto/pull/14244#pullrequestreview-388464117", "createdAt": "2020-04-06T17:25:50Z", "commit": {"oid": "1027ba169718b06b65a95b0629643af74dfa6e14"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1027ba169718b06b65a95b0629643af74dfa6e14", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/1027ba169718b06b65a95b0629643af74dfa6e14", "committedDate": "2020-04-03T23:07:59Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "69671a56fafe7b87f26434cab8b91e8fa60acf27", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/69671a56fafe7b87f26434cab8b91e8fa60acf27", "committedDate": "2020-04-06T18:43:35Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "69671a56fafe7b87f26434cab8b91e8fa60acf27", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/69671a56fafe7b87f26434cab8b91e8fa60acf27", "committedDate": "2020-04-06T18:43:35Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "9f9a76ae1ff68468563b621471dbf47893db5c79", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/9f9a76ae1ff68468563b621471dbf47893db5c79", "committedDate": "2020-04-06T18:52:04Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f9a76ae1ff68468563b621471dbf47893db5c79", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/9f9a76ae1ff68468563b621471dbf47893db5c79", "committedDate": "2020-04-06T18:52:04Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "3702f97960e2b2955d2b862398d853e7cf8a107c", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/3702f97960e2b2955d2b862398d853e7cf8a107c", "committedDate": "2020-04-06T18:53:24Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3702f97960e2b2955d2b862398d853e7cf8a107c", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/3702f97960e2b2955d2b862398d853e7cf8a107c", "committedDate": "2020-04-06T18:53:24Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "d6ceed6914f9edd1ce8f3bea370443c41d729828", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/d6ceed6914f9edd1ce8f3bea370443c41d729828", "committedDate": "2020-04-06T18:59:49Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d6ceed6914f9edd1ce8f3bea370443c41d729828", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/d6ceed6914f9edd1ce8f3bea370443c41d729828", "committedDate": "2020-04-06T18:59:49Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "1ec714ede0e06cdb4b73ec2d85052c90a1823368", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/1ec714ede0e06cdb4b73ec2d85052c90a1823368", "committedDate": "2020-04-06T19:01:35Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1ec714ede0e06cdb4b73ec2d85052c90a1823368", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/1ec714ede0e06cdb4b73ec2d85052c90a1823368", "committedDate": "2020-04-06T19:01:35Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "e77c9b78aae670ec7af7e3db737a0f831b26a7b1", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/e77c9b78aae670ec7af7e3db737a0f831b26a7b1", "committedDate": "2020-04-06T19:05:46Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NTQyMDky", "url": "https://github.com/prestodb/presto/pull/14244#pullrequestreview-388542092", "createdAt": "2020-04-06T19:13:13Z", "commit": {"oid": "e77c9b78aae670ec7af7e3db737a0f831b26a7b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOToxMzoxM1rOGBmIzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOToxMzoxM1rOGBmIzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyNjYwNg==", "bodyText": "many dependencies in this file won't be necessary; compilation will fail", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r404326606", "createdAt": "2020-04-06T19:13:13Z", "author": {"login": "highker"}, "path": "presto-hive-common/pom.xml", "diffHunk": "@@ -18,5 +18,91 @@\n             <groupId>com.facebook.presto</groupId>\n             <artifactId>presto-spi</artifactId>\n         </dependency>\n+\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e77c9b78aae670ec7af7e3db737a0f831b26a7b1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NTQ0Nzcy", "url": "https://github.com/prestodb/presto/pull/14244#pullrequestreview-388544772", "createdAt": "2020-04-06T19:17:03Z", "commit": {"oid": "e77c9b78aae670ec7af7e3db737a0f831b26a7b1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOToxNzowNFrOGBmRdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOToxODowNFrOGBmTnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyODgyMw==", "bodyText": "You need to check hiveFileContext.isCacheable() to decide if to cache right?", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r404328823", "createdAt": "2020-04-06T19:17:04Z", "author": {"login": "highker"}, "path": "presto-cache/src/main/java/com/facebook/presto/cache/CachingFileSystem.java", "diffHunk": "@@ -498,4 +501,25 @@ public boolean isCacheValidationEnabled()\n     {\n         return cacheValidationEnabled;\n     }\n+\n+    @Override\n+    public RemoteIterator<LocatedFileStatus> listDirectory(Path path)\n+            throws IOException\n+    {\n+        return dataTier.listDirectory(path);\n+    }\n+\n+    @Override\n+    public RemoteIterator<HiveFileInfo> listFiles(Path path)\n+            throws IOException\n+    {\n+        return dataTier.listFiles(path);\n+    }\n+\n+    @Override\n+    public FSDataInputStream openFile(Path path, HiveFileContext hiveFileContext)\n+            throws Exception\n+    {\n+        return new CachingInputStream(dataTier.openFile(path, hiveFileContext), cacheManager, path, cacheValidationEnabled);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e77c9b78aae670ec7af7e3db737a0f831b26a7b1"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyOTM3NQ==", "bodyText": "Remove them given they are default", "url": "https://github.com/prestodb/presto/pull/14244#discussion_r404329375", "createdAt": "2020-04-06T19:18:04Z", "author": {"login": "highker"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestBackgroundHiveSplitLoader.java", "diffHunk": "@@ -587,5 +587,23 @@ public URI getUri()\n         {\n             throw new UnsupportedOperationException();\n         }\n+\n+        @Override\n+        public RemoteIterator<LocatedFileStatus> listDirectory(Path path)\n+        {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        @Override\n+        public RemoteIterator<HiveFileInfo> listFiles(Path path)\n+        {\n+            throw new UnsupportedOperationException();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e77c9b78aae670ec7af7e3db737a0f831b26a7b1"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NTY4NDc0", "url": "https://github.com/prestodb/presto/pull/14244#pullrequestreview-388568474", "createdAt": "2020-04-06T19:53:13Z", "commit": {"oid": "e77c9b78aae670ec7af7e3db737a0f831b26a7b1"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e77c9b78aae670ec7af7e3db737a0f831b26a7b1", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/e77c9b78aae670ec7af7e3db737a0f831b26a7b1", "committedDate": "2020-04-06T19:05:46Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "c991f74b09a5ded81db7755adf3f8c8963d255b5", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/c991f74b09a5ded81db7755adf3f8c8963d255b5", "committedDate": "2020-04-06T23:39:43Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c991f74b09a5ded81db7755adf3f8c8963d255b5", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/c991f74b09a5ded81db7755adf3f8c8963d255b5", "committedDate": "2020-04-06T23:39:43Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "9f9ae5829b95fe9817bcf17b29ad09c834498a6a", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/9f9ae5829b95fe9817bcf17b29ad09c834498a6a", "committedDate": "2020-04-06T23:45:57Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f9ae5829b95fe9817bcf17b29ad09c834498a6a", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/9f9ae5829b95fe9817bcf17b29ad09c834498a6a", "committedDate": "2020-04-06T23:45:57Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "a11803078f8a96629466e9adbdc27ea3400f333d", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/a11803078f8a96629466e9adbdc27ea3400f333d", "committedDate": "2020-04-07T00:14:42Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "079483d9310d57ad42bae81479fa789277ef58de", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/079483d9310d57ad42bae81479fa789277ef58de", "committedDate": "2020-04-07T19:54:04Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a11803078f8a96629466e9adbdc27ea3400f333d", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/a11803078f8a96629466e9adbdc27ea3400f333d", "committedDate": "2020-04-07T00:14:42Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}, "afterCommit": {"oid": "079483d9310d57ad42bae81479fa789277ef58de", "author": {"user": {"login": "jainxrohit", "name": "Rohit Jain"}}, "url": "https://github.com/prestodb/presto/commit/079483d9310d57ad42bae81479fa789277ef58de", "committedDate": "2020-04-07T19:54:04Z", "message": "Add ExtendedFileSystem\n\nExtendedFileSystem is an extension of the FileSystem, which supports\nadditional APIs earlier supported by FileOpener and DirectoryLister.\nAll internal Filesystem used in the Presto is extended from the\nExtendedFileSystem. FileOpener classes to support FileSystem operations\nhave been removed. A necessary refactoring was required hence few\nclasses have been moved to presto-hive-common."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NDQ1MTAy", "url": "https://github.com/prestodb/presto/pull/14244#pullrequestreview-389445102", "createdAt": "2020-04-07T19:58:25Z", "commit": {"oid": "079483d9310d57ad42bae81479fa789277ef58de"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2040, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}