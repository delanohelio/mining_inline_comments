{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNzk2NDQ1", "number": 14463, "title": "Error on excessively large code generation", "bodyText": "ASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses.\nPlease make sure your submission complies with our Development, Formatting, and Commit Message guidelines.\nFill in the release notes towards the bottom of the PR description.\nSee Release Notes Guidelines for details.\n== RELEASE NOTES ==\n\nGeneral Changes\n* Call the ASM's simple ClassWriter with COMPUTE_MAXS flag to flush out things like code size too big before we do the expensive COMPUTE_FRAMES call which can result in worker GC storms.", "createdAt": "2020-04-30T19:39:45Z", "url": "https://github.com/prestodb/presto/pull/14463", "merged": true, "mergeCommit": {"oid": "c609bf9cf4c497eb11f2f933269063238df52899"}, "closed": true, "closedAt": "2020-05-01T17:08:17Z", "author": {"login": "kaikalur"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccyfV9gBqjMyOTEwNzY3MDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdE1pPAFqTQwNDI3ODEyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f83241d6f38a686e3c3dcd248946925c05c057e", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/4f83241d6f38a686e3c3dcd248946925c05c057e", "committedDate": "2020-04-30T19:32:26Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}, "afterCommit": {"oid": "47ca9cd6712c3cbf0dcfb50f2d76ad086a49ae9f", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/47ca9cd6712c3cbf0dcfb50f2d76ad086a49ae9f", "committedDate": "2020-04-30T19:44:37Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "47ca9cd6712c3cbf0dcfb50f2d76ad086a49ae9f", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/47ca9cd6712c3cbf0dcfb50f2d76ad086a49ae9f", "committedDate": "2020-04-30T19:44:37Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}, "afterCommit": {"oid": "42a05af43459c18405b40520ec031d5693b3e6f5", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/42a05af43459c18405b40520ec031d5693b3e6f5", "committedDate": "2020-04-30T19:50:33Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "42a05af43459c18405b40520ec031d5693b3e6f5", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/42a05af43459c18405b40520ec031d5693b3e6f5", "committedDate": "2020-04-30T19:50:33Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}, "afterCommit": {"oid": "0ff5b6aae1cb483effc2c88af6c9d2d0449ad960", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/0ff5b6aae1cb483effc2c88af6c9d2d0449ad960", "committedDate": "2020-04-30T19:53:50Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ff5b6aae1cb483effc2c88af6c9d2d0449ad960", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/0ff5b6aae1cb483effc2c88af6c9d2d0449ad960", "committedDate": "2020-04-30T19:53:50Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}, "afterCommit": {"oid": "b388e4aed64a3ac6ea7d47c58e9bf59ad7271ce5", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/b388e4aed64a3ac6ea7d47c58e9bf59ad7271ce5", "committedDate": "2020-04-30T19:55:41Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzODM4OTAy", "url": "https://github.com/prestodb/presto/pull/14463#pullrequestreview-403838902", "createdAt": "2020-04-30T20:05:34Z", "commit": {"oid": "b388e4aed64a3ac6ea7d47c58e9bf59ad7271ce5"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDowNTozNFrOGO4cDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMDowNzowN1rOGO4fCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1NzkzMw==", "bodyText": "Is this necessary?", "url": "https://github.com/prestodb/presto/pull/14463#discussion_r418257933", "createdAt": "2020-04-30T20:05:34Z", "author": {"login": "rongrong"}, "path": "presto-bytecode/pom.xml", "diffHunk": "@@ -61,6 +61,10 @@\n             <artifactId>assertj-core</artifactId>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b388e4aed64a3ac6ea7d47c58e9bf59ad7271ce5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1ODY5OA==", "bodyText": "Can we have this throw some bytecode specific exception and catch that in presto-main so we don't need to introduce dependency to spi in bytecode? presto-bytecode should be a pretty low level independent package.", "url": "https://github.com/prestodb/presto/pull/14463#discussion_r418258698", "createdAt": "2020-04-30T20:07:07Z", "author": {"login": "rongrong"}, "path": "presto-bytecode/src/main/java/com/facebook/presto/bytecode/ClassGenerator.java", "diffHunk": "@@ -124,6 +129,21 @@ public ClassGenerator dumpClassFilesTo(Optional<Path> dumpClassPath)\n         Map<String, byte[]> bytecodes = new LinkedHashMap<>();\n \n         for (ClassDefinition classDefinition : classDefinitions) {\n+            // We call the simpler class writer first to get any errors out using simpler setting.\n+            // This helps when we have large queries that can potentially cause COMPUTE_FRAMES\n+            // (used by SmartClassWriter for doing more thorough analysis)\n+            ClassWriter simpleClassWriter = new ClassWriter(ClassWriter.COMPUTE_MAXS);\n+            classDefinition.visit(simpleClassWriter);\n+            try {\n+                simpleClassWriter.toByteArray();\n+            }\n+            catch (ClassTooLargeException | MethodTooLargeException largeCodeException) {\n+                throw new PrestoException(GENERATED_BYTECODE_TOO_LARGE, ERROR_LARGE_BYTECODE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b388e4aed64a3ac6ea7d47c58e9bf59ad7271ce5"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzODUxMTc4", "url": "https://github.com/prestodb/presto/pull/14463#pullrequestreview-403851178", "createdAt": "2020-04-30T20:24:58Z", "commit": {"oid": "b388e4aed64a3ac6ea7d47c58e9bf59ad7271ce5"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b388e4aed64a3ac6ea7d47c58e9bf59ad7271ce5", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/b388e4aed64a3ac6ea7d47c58e9bf59ad7271ce5", "committedDate": "2020-04-30T19:55:41Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}, "afterCommit": {"oid": "2c2abe46d0f0e365f5bcde3c40476e3e94b3a1e5", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/2c2abe46d0f0e365f5bcde3c40476e3e94b3a1e5", "committedDate": "2020-04-30T21:11:31Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c2abe46d0f0e365f5bcde3c40476e3e94b3a1e5", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/2c2abe46d0f0e365f5bcde3c40476e3e94b3a1e5", "committedDate": "2020-04-30T21:11:31Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}, "afterCommit": {"oid": "d510093daa5c0310a29baed588081a97672fc486", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/d510093daa5c0310a29baed588081a97672fc486", "committedDate": "2020-04-30T21:13:36Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzODg1MjY2", "url": "https://github.com/prestodb/presto/pull/14463#pullrequestreview-403885266", "createdAt": "2020-04-30T21:19:06Z", "commit": {"oid": "d510093daa5c0310a29baed588081a97672fc486"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzODg5NjMy", "url": "https://github.com/prestodb/presto/pull/14463#pullrequestreview-403889632", "createdAt": "2020-04-30T21:26:47Z", "commit": {"oid": "d510093daa5c0310a29baed588081a97672fc486"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMToyNjo0N1rOGO677Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMToyNjo0N1rOGO677Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI5ODg2MQ==", "bodyText": "If you unwrap looking for a specific exception you should keep going until you find it and not just one level.\nI think maybe you want to wrap in a new PrestoException with the contents of the wrapped PrestoException.\nYou lose less (admittedly not that important) information that way.", "url": "https://github.com/prestodb/presto/pull/14463#discussion_r418298861", "createdAt": "2020-04-30T21:26:47Z", "author": {"login": "aweisberg"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/LocalExecutionPlanner.java", "diffHunk": "@@ -1315,7 +1315,11 @@ private PhysicalOperation visitScanFilterAndProject(\n             catch (PrestoException e) {\n                 throw e;\n             }\n-            catch (RuntimeException e) {\n+            catch (Exception e) {\n+                if (e.getCause() instanceof  PrestoException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d510093daa5c0310a29baed588081a97672fc486"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d510093daa5c0310a29baed588081a97672fc486", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/d510093daa5c0310a29baed588081a97672fc486", "committedDate": "2020-04-30T21:13:36Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}, "afterCommit": {"oid": "508c72bed755b0e371a7daec0abbda1b95ad9d30", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/508c72bed755b0e371a7daec0abbda1b95ad9d30", "committedDate": "2020-04-30T22:13:44Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzOTIyNzMz", "url": "https://github.com/prestodb/presto/pull/14463#pullrequestreview-403922733", "createdAt": "2020-04-30T22:32:51Z", "commit": {"oid": "508c72bed755b0e371a7daec0abbda1b95ad9d30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjozMjo1MlrOGO8n_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjozMjo1MlrOGO8n_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyNjUyNw==", "bodyText": "What's the point of this code? I think you want to catch ByteCodeTooLargeException?", "url": "https://github.com/prestodb/presto/pull/14463#discussion_r418326527", "createdAt": "2020-04-30T22:32:52Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java", "diffHunk": "@@ -191,6 +191,9 @@ public CacheStatsMBean getFilterCache()\n         try {\n             pageProjectionWorkClass = defineClass(pageProjectionWorkDefinition, Work.class, callSiteBinder.getBindings(), getClass().getClassLoader());\n         }\n+        catch (PrestoException prestoException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "508c72bed755b0e371a7daec0abbda1b95ad9d30"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzOTIzNzUw", "url": "https://github.com/prestodb/presto/pull/14463#pullrequestreview-403923750", "createdAt": "2020-04-30T22:35:14Z", "commit": {"oid": "508c72bed755b0e371a7daec0abbda1b95ad9d30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjozNToxNFrOGO8rRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMjozNToxNFrOGO8rRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMyNzM2Ng==", "bodyText": "This is not needed if you already handles the exception in the other method?", "url": "https://github.com/prestodb/presto/pull/14463#discussion_r418327366", "createdAt": "2020-04-30T22:35:14Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/util/CompilerUtils.java", "diffHunk": "@@ -54,12 +60,20 @@ public static ParameterizedType makeClassName(String baseName)\n \n     public static <T> Class<? extends T> defineClass(ClassDefinition classDefinition, Class<T> superType, Map<Long, MethodHandle> callSiteBindings, ClassLoader parentClassLoader)\n     {\n-        return defineClass(classDefinition, superType, new DynamicClassLoader(parentClassLoader, callSiteBindings));\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "508c72bed755b0e371a7daec0abbda1b95ad9d30"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "508c72bed755b0e371a7daec0abbda1b95ad9d30", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/508c72bed755b0e371a7daec0abbda1b95ad9d30", "committedDate": "2020-04-30T22:13:44Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}, "afterCommit": {"oid": "3ad7201c20098cb2edde6aa19b74ab13a33142a5", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/3ad7201c20098cb2edde6aa19b74ab13a33142a5", "committedDate": "2020-04-30T23:00:52Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzOTc3NDA3", "url": "https://github.com/prestodb/presto/pull/14463#pullrequestreview-403977407", "createdAt": "2020-05-01T01:21:15Z", "commit": {"oid": "3ad7201c20098cb2edde6aa19b74ab13a33142a5"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMToyMToxNlrOGO_k0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMToyMTozMFrOGO_lEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM3NDg2Nw==", "bodyText": "remove extra newline. This won't pass style check.", "url": "https://github.com/prestodb/presto/pull/14463#discussion_r418374867", "createdAt": "2020-05-01T01:21:16Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/util/CompilerUtils.java", "diffHunk": "@@ -37,6 +40,9 @@\n     private static final AtomicLong CLASS_ID = new AtomicLong();\n     private static final DateTimeFormatter TIMESTAMP_FORMAT = DateTimeFormatter.ofPattern(\"YYYYMMdd_HHmmss\");\n \n+    public static final String ERROR_LARGE_BYTECODE = \"Query results in large bytecode exceeding the limits imposed by JVM\";\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad7201c20098cb2edde6aa19b74ab13a33142a5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM3NDkyOA==", "bodyText": "also remove the newline on line 42.", "url": "https://github.com/prestodb/presto/pull/14463#discussion_r418374928", "createdAt": "2020-05-01T01:21:30Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/util/CompilerUtils.java", "diffHunk": "@@ -37,6 +40,9 @@\n     private static final AtomicLong CLASS_ID = new AtomicLong();\n     private static final DateTimeFormatter TIMESTAMP_FORMAT = DateTimeFormatter.ofPattern(\"YYYYMMdd_HHmmss\");\n \n+    public static final String ERROR_LARGE_BYTECODE = \"Query results in large bytecode exceeding the limits imposed by JVM\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad7201c20098cb2edde6aa19b74ab13a33142a5"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ad7201c20098cb2edde6aa19b74ab13a33142a5", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/3ad7201c20098cb2edde6aa19b74ab13a33142a5", "committedDate": "2020-04-30T23:00:52Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}, "afterCommit": {"oid": "960b4a2facd01c1972b6cf7fce392afdea9bf3c0", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/960b4a2facd01c1972b6cf7fce392afdea9bf3c0", "committedDate": "2020-05-01T01:35:49Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "960b4a2facd01c1972b6cf7fce392afdea9bf3c0", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/960b4a2facd01c1972b6cf7fce392afdea9bf3c0", "committedDate": "2020-05-01T01:35:49Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}, "afterCommit": {"oid": "41fe18f3db2cae15e34e3ba2edbc4e62ab94e23c", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/41fe18f3db2cae15e34e3ba2edbc4e62ab94e23c", "committedDate": "2020-05-01T02:46:19Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "41fe18f3db2cae15e34e3ba2edbc4e62ab94e23c", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/41fe18f3db2cae15e34e3ba2edbc4e62ab94e23c", "committedDate": "2020-05-01T02:46:19Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}, "afterCommit": {"oid": "d43b467687df9866f11eeb49d6d11e574dc12f3d", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/d43b467687df9866f11eeb49d6d11e574dc12f3d", "committedDate": "2020-05-01T03:48:41Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d43b467687df9866f11eeb49d6d11e574dc12f3d", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/d43b467687df9866f11eeb49d6d11e574dc12f3d", "committedDate": "2020-05-01T03:48:41Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}, "afterCommit": {"oid": "32f37e4340f83fa6746078f38b5cdadbcde7cf66", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/32f37e4340f83fa6746078f38b5cdadbcde7cf66", "committedDate": "2020-05-01T06:02:23Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32f37e4340f83fa6746078f38b5cdadbcde7cf66", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/32f37e4340f83fa6746078f38b5cdadbcde7cf66", "committedDate": "2020-05-01T06:02:23Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}, "afterCommit": {"oid": "66bb158c187e7b42957e6e30cf7507beaa067353", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/66bb158c187e7b42957e6e30cf7507beaa067353", "committedDate": "2020-05-01T06:07:30Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b8f43e537b19ba3b1bb15016374443ce9c50f6b", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/8b8f43e537b19ba3b1bb15016374443ce9c50f6b", "committedDate": "2020-05-01T06:48:58Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "66bb158c187e7b42957e6e30cf7507beaa067353", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/66bb158c187e7b42957e6e30cf7507beaa067353", "committedDate": "2020-05-01T06:07:30Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}, "afterCommit": {"oid": "8b8f43e537b19ba3b1bb15016374443ce9c50f6b", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/8b8f43e537b19ba3b1bb15016374443ce9c50f6b", "committedDate": "2020-05-01T06:48:58Z", "message": "Prevent ASM library causing worker GC storms.\n\nASM ClassWriter has two modes - COMPUTE_MAXS, COMPUTE_FRAMES. The first one is really fast but the second is super expensive and can end up using a lot of memory for situations where it was going to fail anyway. So we first do a call with COMPUTE_MAXS to get any errors out quickly and this will help in not causing the GC storms and worker crahses."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0Mjc4MTI0", "url": "https://github.com/prestodb/presto/pull/14463#pullrequestreview-404278124", "createdAt": "2020-05-01T17:08:06Z", "commit": {"oid": "8b8f43e537b19ba3b1bb15016374443ce9c50f6b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1537, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}