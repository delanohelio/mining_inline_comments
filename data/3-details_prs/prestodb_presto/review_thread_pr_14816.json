{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NjQwNjcw", "number": 14816, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxODoyOTo0MlrOENXzpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxODozMToyOVrOENX1sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDU2OTk2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/execution/scheduler/nodeSelection/TopologyAwareNodeSelector.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxODoyOTo0MlrOGwBSeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxODoyOTo0MlrOGwBSeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwNTk0NA==", "bodyText": "nit: \"nodeSelectionStats is null\"", "url": "https://github.com/prestodb/presto/pull/14816#discussion_r453005944", "createdAt": "2020-07-10T18:29:42Z", "author": {"login": "shixuan-fan"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/scheduler/nodeSelection/TopologyAwareNodeSelector.java", "diffHunk": "@@ -85,6 +87,7 @@ public TopologyAwareNodeSelector(\n             NetworkLocationCache networkLocationCache)\n     {\n         this.nodeManager = requireNonNull(nodeManager, \"nodeManager is null\");\n+        this.nodeSelectionStats = requireNonNull(nodeSelectionStats, \"nodeSelectionStats\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3da4f50e8323c14330e70c7ee4d32927637efb97"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDU3NTIwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/execution/scheduler/NodeScheduler.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxODozMToyOVrOGwBVxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMjoxODowMVrOGwHKWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwNjc4OQ==", "bodyText": "Sorry if it is mentioned before, does bucketed table node selection have non-primary preferred node?", "url": "https://github.com/prestodb/presto/pull/14816#discussion_r453006789", "createdAt": "2020-07-10T18:31:29Z", "author": {"login": "shixuan-fan"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/scheduler/NodeScheduler.java", "diffHunk": "@@ -308,6 +310,10 @@ public static SplitPlacementResult selectDistributionNodes(\n                     assignmentStats.getQueuedSplitCountForStage(node) < maxPendingSplitsPerTask) {\n                 if (isCacheable) {\n                     split = new Split(split.getConnectorId(), split.getTransactionHandle(), split.getConnectorSplit(), split.getLifespan(), new SplitContext(true));\n+                    nodeSelectionStats.incrementBucketedPreferredNodeSelectedCount();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3da4f50e8323c14330e70c7ee4d32927637efb97"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwOTU5OA==", "bodyText": "Good question, actually we don't have that for bucketed table node selection; Just primary and non-preferred", "url": "https://github.com/prestodb/presto/pull/14816#discussion_r453009598", "createdAt": "2020-07-10T18:37:36Z", "author": {"login": "kewang1024"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/scheduler/NodeScheduler.java", "diffHunk": "@@ -308,6 +310,10 @@ public static SplitPlacementResult selectDistributionNodes(\n                     assignmentStats.getQueuedSplitCountForStage(node) < maxPendingSplitsPerTask) {\n                 if (isCacheable) {\n                     split = new Split(split.getConnectorId(), split.getTransactionHandle(), split.getConnectorSplit(), split.getLifespan(), new SplitContext(true));\n+                    nodeSelectionStats.incrementBucketedPreferredNodeSelectedCount();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwNjc4OQ=="}, "originalCommit": {"oid": "3da4f50e8323c14330e70c7ee4d32927637efb97"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3MTYyMQ==", "bodyText": "Is it necessary for us to separate bucketed from unbucketed? Can we merge them into existing stats?", "url": "https://github.com/prestodb/presto/pull/14816#discussion_r453071621", "createdAt": "2020-07-10T20:52:06Z", "author": {"login": "shixuan-fan"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/scheduler/NodeScheduler.java", "diffHunk": "@@ -308,6 +310,10 @@ public static SplitPlacementResult selectDistributionNodes(\n                     assignmentStats.getQueuedSplitCountForStage(node) < maxPendingSplitsPerTask) {\n                 if (isCacheable) {\n                     split = new Split(split.getConnectorId(), split.getTransactionHandle(), split.getConnectorSplit(), split.getLifespan(), new SplitContext(true));\n+                    nodeSelectionStats.incrementBucketedPreferredNodeSelectedCount();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwNjc4OQ=="}, "originalCommit": {"oid": "3da4f50e8323c14330e70c7ee4d32927637efb97"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwMjE2OA==", "bodyText": "yeah, I also thought about that at first, then I feel it would be confusing since unbucketed situation has three status and bucketed has two; thus add those two for easy debugging when we have mixed situation", "url": "https://github.com/prestodb/presto/pull/14816#discussion_r453102168", "createdAt": "2020-07-10T22:18:01Z", "author": {"login": "kewang1024"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/scheduler/NodeScheduler.java", "diffHunk": "@@ -308,6 +310,10 @@ public static SplitPlacementResult selectDistributionNodes(\n                     assignmentStats.getQueuedSplitCountForStage(node) < maxPendingSplitsPerTask) {\n                 if (isCacheable) {\n                     split = new Split(split.getConnectorId(), split.getTransactionHandle(), split.getConnectorSplit(), split.getLifespan(), new SplitContext(true));\n+                    nodeSelectionStats.incrementBucketedPreferredNodeSelectedCount();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwNjc4OQ=="}, "originalCommit": {"oid": "3da4f50e8323c14330e70c7ee4d32927637efb97"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2340, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}