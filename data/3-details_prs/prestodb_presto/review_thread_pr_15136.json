{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxNzk0Mjk0", "number": 15136, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTozNzowNVrOEjyMqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTozNzoyNVrOEjyNPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTU4MDU3OnYy", "diffSide": "RIGHT", "path": "presto-parser/src/main/java/com/facebook/presto/sql/parser/AstBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTozNzowNVrOHSVeOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTozNzowNVrOHSVeOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk4ODIxNw==", "bodyText": "We normally use expression instanceof LogicalBinaryExpression.", "url": "https://github.com/prestodb/presto/pull/15136#discussion_r488988217", "createdAt": "2020-09-15T21:37:05Z", "author": {"login": "rongrong"}, "path": "presto-parser/src/main/java/com/facebook/presto/sql/parser/AstBuilder.java", "diffHunk": "@@ -2410,6 +2436,23 @@ else if (context instanceof SqlBaseParser.RolePrincipalContext) {\n         }\n     }\n \n+    private boolean mixedAndOrOperatorParenthesisCheck(SqlBaseParser.BooleanExpressionContext node, LogicalBinaryExpression.Operator operator)\n+    {\n+        Expression expression = (Expression) visit(node);\n+        if (expression.getClass().equals(LogicalBinaryExpression.class)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "468f683620c6d513c3541aaddc52bc1f8629be51"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTU4MjA1OnYy", "diffSide": "RIGHT", "path": "presto-parser/src/main/java/com/facebook/presto/sql/parser/AstBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTozNzoyNVrOHSVfUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTozNzoyNVrOHSVfUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk4ODQ5OA==", "bodyText": "Same here and next line. Use instanceof", "url": "https://github.com/prestodb/presto/pull/15136#discussion_r488988498", "createdAt": "2020-09-15T21:37:25Z", "author": {"login": "rongrong"}, "path": "presto-parser/src/main/java/com/facebook/presto/sql/parser/AstBuilder.java", "diffHunk": "@@ -2410,6 +2436,23 @@ else if (context instanceof SqlBaseParser.RolePrincipalContext) {\n         }\n     }\n \n+    private boolean mixedAndOrOperatorParenthesisCheck(SqlBaseParser.BooleanExpressionContext node, LogicalBinaryExpression.Operator operator)\n+    {\n+        Expression expression = (Expression) visit(node);\n+        if (expression.getClass().equals(LogicalBinaryExpression.class)) {\n+            if (((LogicalBinaryExpression) expression).getOperator().equals(operator)) {\n+                if (node.children.get(0).getClass().equals(SqlBaseParser.ValueExpressionDefaultContext.class)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "468f683620c6d513c3541aaddc52bc1f8629be51"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3631, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}