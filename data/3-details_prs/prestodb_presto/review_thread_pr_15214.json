{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxOTEwNjEy", "number": 15214, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoyMToyNVrOEmuS6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoyNTo1MlrOEmuZSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDM5ODUwOnYy", "diffSide": "RIGHT", "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoyMToyNVrOHW7AGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoyMToyNVrOHW7AGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5NzQwMQ==", "bodyText": "You can optimize this piece a bit by extracting and moving encryptedStats.get(groupId) outside to line 621.", "url": "https://github.com/prestodb/presto/pull/15214#discussion_r493797401", "createdAt": "2020-09-23T18:21:25Z", "author": {"login": "sdruzkin"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "diffHunk": "@@ -610,19 +610,22 @@ public void close()\n                 .collect(Collectors.toMap(Entry::getKey, entry -> utf8Slice(entry.getValue())));\n \n         List<ColumnStatistics> unencryptedStats = new ArrayList<>();\n-        Map<Integer, List<Slice>> encryptedStats = new HashMap<>();\n+        Map<Integer, Map<Integer, Slice>> encryptedStats = new HashMap<>();\n         addStatsRecursive(fileStats, 0, new HashMap<>(), unencryptedStats, encryptedStats);\n         Optional<DwrfEncryption> dwrfEncryption;\n         if (dwrfWriterEncryption.isPresent()) {\n             ImmutableList.Builder<EncryptionGroup> encryptionGroupBuilder = ImmutableList.builder();\n             List<WriterEncryptionGroup> writerEncryptionGroups = dwrfWriterEncryption.get().getWriterEncryptionGroups();\n             for (int i = 0; i < writerEncryptionGroups.size(); i++) {\n                 WriterEncryptionGroup group = writerEncryptionGroups.get(i);\n+                int groupId = i;\n                 encryptionGroupBuilder.add(\n                         new EncryptionGroup(\n                                 group.getNodes(),\n                                 Optional.empty(), // reader will just use key metadata from the stripe\n-                                encryptedStats.get(i)));\n+                                group.getNodes().stream()\n+                                        .map(nodeId -> encryptedStats.get(groupId).get(nodeId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63cc58eb2080307edacee2be46107cddcaa83577"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDQxNDgzOnYy", "diffSide": "RIGHT", "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoyNTo1MlrOHW7KWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODozODo0NFrOHW7now==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgwMDAyNQ==", "bodyText": "Can we also add the same test but with the direct order? I briefly looked through other test cases, they all seems to have the same type for all columns.", "url": "https://github.com/prestodb/presto/pull/15214#discussion_r493800025", "createdAt": "2020-09-23T18:25:52Z", "author": {"login": "sdruzkin"}, "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java", "diffHunk": "@@ -311,6 +312,39 @@ public void testSingleEncryptionGroupRowType()\n                 outputColumns);\n     }\n \n+    @Test\n+    public void testEncryptionGroupWithReversedOrderNodes()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63cc58eb2080307edacee2be46107cddcaa83577"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgwNzUyMw==", "bodyText": "there are a couple tests that have multiple types (e.g. https://github.com/prestodb/presto/blob/master/presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java#L315), but it's good to have a simple explicit test, so added that case.", "url": "https://github.com/prestodb/presto/pull/15214#discussion_r493807523", "createdAt": "2020-09-23T18:38:44Z", "author": {"login": "rschlussel"}, "path": "presto-orc/src/test/java/com/facebook/presto/orc/TestDecryption.java", "diffHunk": "@@ -311,6 +312,39 @@ public void testSingleEncryptionGroupRowType()\n                 outputColumns);\n     }\n \n+    @Test\n+    public void testEncryptionGroupWithReversedOrderNodes()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgwMDAyNQ=="}, "originalCommit": {"oid": "63cc58eb2080307edacee2be46107cddcaa83577"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3718, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}