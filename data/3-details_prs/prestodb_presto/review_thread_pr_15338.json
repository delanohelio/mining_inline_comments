{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NTAyNDEw", "number": 15338, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjoyNjo1NFrOEv4CXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxOTo0NDoxM1rOEyhiiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjM2NjM3OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjoyNjo1NFrOHlGz-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxOTowNjoxOVrOHp5Zlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY3MDk3MQ==", "bodyText": "Could you help to change partName to partitionName?", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r508670971", "createdAt": "2020-10-20T16:26:54Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -397,9 +401,7 @@ public CounterStat getHighMemorySplitSource()\n                         if (!shouldIgnoreUnreadablePartition(session) || !partition.isEligibleToIgnore()) {\n                             throw new HiveNotReadableException(tableName, Optional.of(partName), partitionNotReadable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a6e899be8bfc0d29a44bd2c94ad436750c83709"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQyOTQ3Mg==", "bodyText": "@highker , do you want me to later to change the MetastoreUtil.makePartName() method to makePartitionName() and modify all calls to the method to reflect the change? Even after familiarizing myself with the code, I often forgot that part = partition and wondered what a \"part\" was.", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r509429472", "createdAt": "2020-10-21T16:27:37Z", "author": {"login": "Moe82"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -397,9 +401,7 @@ public CounterStat getHighMemorySplitSource()\n                         if (!shouldIgnoreUnreadablePartition(session) || !partition.isEligibleToIgnore()) {\n                             throw new HiveNotReadableException(tableName, Optional.of(partName), partitionNotReadable);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY3MDk3MQ=="}, "originalCommit": {"oid": "8a6e899be8bfc0d29a44bd2c94ad436750c83709"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTUzMTQyMA==", "bodyText": "Ya, makePartName sounds like a bad name. Let's leave the name for makePartName unchanged in this PR and maybe update it in another?", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r509531420", "createdAt": "2020-10-21T18:04:04Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -397,9 +401,7 @@ public CounterStat getHighMemorySplitSource()\n                         if (!shouldIgnoreUnreadablePartition(session) || !partition.isEligibleToIgnore()) {\n                             throw new HiveNotReadableException(tableName, Optional.of(partName), partitionNotReadable);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY3MDk3MQ=="}, "originalCommit": {"oid": "8a6e899be8bfc0d29a44bd2c94ad436750c83709"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTUzOTcwNw==", "bodyText": "@highker , sounds good.", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r509539707", "createdAt": "2020-10-21T18:11:58Z", "author": {"login": "Moe82"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -397,9 +401,7 @@ public CounterStat getHighMemorySplitSource()\n                         if (!shouldIgnoreUnreadablePartition(session) || !partition.isEligibleToIgnore()) {\n                             throw new HiveNotReadableException(tableName, Optional.of(partName), partitionNotReadable);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY3MDk3MQ=="}, "originalCommit": {"oid": "8a6e899be8bfc0d29a44bd2c94ad436750c83709"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NDEwMw==", "bodyText": "@highker , do you want me to submit a PR for this in the future? By the way, MetastoreUtil.makePartName() calls a method in Apache Hive that is also called makePartName.", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r513694103", "createdAt": "2020-10-28T19:06:19Z", "author": {"login": "Moe82"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -397,9 +401,7 @@ public CounterStat getHighMemorySplitSource()\n                         if (!shouldIgnoreUnreadablePartition(session) || !partition.isEligibleToIgnore()) {\n                             throw new HiveNotReadableException(tableName, Optional.of(partName), partitionNotReadable);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY3MDk3MQ=="}, "originalCommit": {"oid": "8a6e899be8bfc0d29a44bd2c94ad436750c83709"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjQ5NjcwOnYy", "diffSide": "LEFT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjo1OTowN1rOHlIFuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjo1OTowN1rOHlIFuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5MTg5OQ==", "bodyText": "Could you help to change partitionNotReadable to reason?", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r508691899", "createdAt": "2020-10-20T16:59:07Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -397,9 +401,7 @@ public CounterStat getHighMemorySplitSource()\n                         if (!shouldIgnoreUnreadablePartition(session) || !partition.isEligibleToIgnore()) {\n                             throw new HiveNotReadableException(tableName, Optional.of(partName), partitionNotReadable);\n                         }\n-                        warningCollector.add(new PrestoWarning(\n-                                PARTITION_NOT_READABLE,\n-                                format(\"Table '%s' partition '%s' is not readable: %s\", tableName, partName, partitionNotReadable)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a6e899be8bfc0d29a44bd2c94ad436750c83709"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjUxNTkxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowMzo1OFrOHlIRuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowMzo1OFrOHlIRuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5NDk3MQ==", "bodyText": "// put unreadable partitions with a limit of 2 in order not to be too verbose\nif (partitionsNotReadable.size() < 2) {\n    partitionsNotReadable.putIfAbsent(partitionNotReadable, new HashSet<>(ImmutableSet.of(partName)));\n    // limit per-reason partitions to be 2 as well\n    if (partitionsNotReadable.get(partitionNotReadable).size() < 2) {\n        partitionsNotReadable.get(partitionNotReadable).add(partName);\n    }\n}", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r508694971", "createdAt": "2020-10-20T17:03:58Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -397,9 +401,7 @@ public CounterStat getHighMemorySplitSource()\n                         if (!shouldIgnoreUnreadablePartition(session) || !partition.isEligibleToIgnore()) {\n                             throw new HiveNotReadableException(tableName, Optional.of(partName), partitionNotReadable);\n                         }\n-                        warningCollector.add(new PrestoWarning(\n-                                PARTITION_NOT_READABLE,\n-                                format(\"Table '%s' partition '%s' is not readable: %s\", tableName, partName, partitionNotReadable)));\n+                        partitionsNotReadable.put(partName, partitionNotReadable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a6e899be8bfc0d29a44bd2c94ad436750c83709"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjUxODczOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowNDo0MVrOHlITiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowNDo0MVrOHlITiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5NTQzMw==", "bodyText": "We wanna make it to be concise; so likely use a mutable hash map.\nMap<String, Set<String>> partitionsNotReadable = new HashMap<>();", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r508695433", "createdAt": "2020-10-20T17:04:41Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -379,6 +382,7 @@ public CounterStat getHighMemorySplitSource()\n                     partitions);\n \n             ImmutableList.Builder<HivePartitionMetadata> results = ImmutableList.builder();\n+            ImmutableMap.Builder<String, String> partitionsNotReadable = ImmutableMap.builder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a6e899be8bfc0d29a44bd2c94ad436750c83709"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjUyMDMxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowNTowNlrOHlIUlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowNTowNlrOHlIUlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5NTcwMg==", "bodyText": "Also add a counter to check how many unreadable partitions are skipped", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r508695702", "createdAt": "2020-10-20T17:05:06Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -379,6 +382,7 @@ public CounterStat getHighMemorySplitSource()\n                     partitions);\n \n             ImmutableList.Builder<HivePartitionMetadata> results = ImmutableList.builder();\n+            ImmutableMap.Builder<String, String> partitionsNotReadable = ImmutableMap.builder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a6e899be8bfc0d29a44bd2c94ad436750c83709"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjUyNTcyOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowNjoyNFrOHlIX_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowNjoyNFrOHlIX_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5NjU3NQ==", "bodyText": "Directly use the hash map", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r508696575", "createdAt": "2020-10-20T17:06:24Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -475,7 +477,16 @@ public CounterStat getHighMemorySplitSource()\n \n                 results.add(new HivePartitionMetadata(hivePartition, Optional.of(partition), partitionSchemaDifference.build(), encryptionInformation));\n             }\n-\n+            Map<String, String> map = partitionsNotReadable.build();\n+            Multimap<String, String> multiMap = HashMultimap.create();\n+            for (java.util.Map.Entry<String, String> entry : map.entrySet()) {\n+                multiMap.put(entry.getValue(), entry.getKey());\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a6e899be8bfc0d29a44bd2c94ad436750c83709"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjUyNzA4OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowNjo0NVrOHlIYyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQyMjo0MzoyOVrOHn00vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5Njc3Nw==", "bodyText": "Just put into one warning", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r508696777", "createdAt": "2020-10-20T17:06:45Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -475,7 +477,16 @@ public CounterStat getHighMemorySplitSource()\n \n                 results.add(new HivePartitionMetadata(hivePartition, Optional.of(partition), partitionSchemaDifference.build(), encryptionInformation));\n             }\n-\n+            Map<String, String> map = partitionsNotReadable.build();\n+            Multimap<String, String> multiMap = HashMultimap.create();\n+            for (java.util.Map.Entry<String, String> entry : map.entrySet()) {\n+                multiMap.put(entry.getValue(), entry.getKey());\n+            }\n+            for (java.util.Map.Entry<String, Collection<String>> entry : multiMap.asMap().entrySet()) {\n+                warningCollector.add(new PrestoWarning(\n+                        PARTITION_NOT_READABLE,\n+                        format(\"Table '%s' has '%s' out of '%s' partitions: '%s' not readable: %s\", tableName, entry.getValue().size(), partitionBatch.size(), entry.getValue(), entry.getKey())));\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a6e899be8bfc0d29a44bd2c94ad436750c83709"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUyMTk4Mw==", "bodyText": "got it", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r511521983", "createdAt": "2020-10-24T22:43:29Z", "author": {"login": "Moe82"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -475,7 +477,16 @@ public CounterStat getHighMemorySplitSource()\n \n                 results.add(new HivePartitionMetadata(hivePartition, Optional.of(partition), partitionSchemaDifference.build(), encryptionInformation));\n             }\n-\n+            Map<String, String> map = partitionsNotReadable.build();\n+            Multimap<String, String> multiMap = HashMultimap.create();\n+            for (java.util.Map.Entry<String, String> entry : map.entrySet()) {\n+                multiMap.put(entry.getValue(), entry.getKey());\n+            }\n+            for (java.util.Map.Entry<String, Collection<String>> entry : multiMap.asMap().entrySet()) {\n+                warningCollector.add(new PrestoWarning(\n+                        PARTITION_NOT_READABLE,\n+                        format(\"Table '%s' has '%s' out of '%s' partitions: '%s' not readable: %s\", tableName, entry.getValue().size(), partitionBatch.size(), entry.getValue(), entry.getKey())));\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5Njc3Nw=="}, "originalCommit": {"oid": "8a6e899be8bfc0d29a44bd2c94ad436750c83709"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5Mjk5MTY5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMTo1ODoxOFrOHmH13g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMTo1ODoxOFrOHmH13g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTczNjQxNA==", "bodyText": "output:\nTable <table name> has <number of unreadable partitions> out of <total partitions> partitions unreadable: \n<error>: < partitions> <\"...\" if more than 2 unreadable partitions have this error>\n<error>: < partitions> <\"...\" if more than 2 unreadable partitions have this error>\n<\"...\" if more than 2 types of errors>", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r509736414", "createdAt": "2020-10-21T21:58:18Z", "author": {"login": "Moe82"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -477,16 +489,15 @@ public CounterStat getHighMemorySplitSource()\n \n                 results.add(new HivePartitionMetadata(hivePartition, Optional.of(partition), partitionSchemaDifference.build(), encryptionInformation));\n             }\n-            Map<String, String> map = partitionsNotReadable.build();\n-            Multimap<String, String> multiMap = HashMultimap.create();\n-            for (java.util.Map.Entry<String, String> entry : map.entrySet()) {\n-                multiMap.put(entry.getValue(), entry.getKey());\n-            }\n-            for (java.util.Map.Entry<String, Collection<String>> entry : multiMap.asMap().entrySet()) {\n-                warningCollector.add(new PrestoWarning(\n-                        PARTITION_NOT_READABLE,\n-                        format(\"Table '%s' has '%s' out of '%s' partitions: '%s' not readable: %s\", tableName, entry.getValue().size(), partitionBatch.size(), entry.getValue(), entry.getKey())));\n+            String prestoWarningMessage = format(\"Table '%s' has '%s' out of '%s' partitions unreadable: \", tableName, partitionsNotReadable.values().stream().mapToInt(Set::size).sum(), partitionBatch.size());\n+            for (Entry<String, Set<String>> entry : partitionsNotReadable.entrySet()) {\n+                if (entry.getValue().size() > 2)\n+                    prestoWarningMessage += \"\\n\" + entry.getKey().toString() + \": \" + entry.getValue().iterator().next() + \", \" + entry.getValue().iterator().next() + \" ...\";\n+                else prestoWarningMessage += \"\\n\" + entry.getKey().toString() + \": \" + entry.getValue().toString();\n             }\n+            if (reasonsSkipped > 3)\n+                prestoWarningMessage += \"\\n...\";\n+            warningCollector.add(new PrestoWarning(PARTITION_NOT_READABLE, prestoWarningMessage));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5404a67af7d2884e11488f12bdc6e0301046949c"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTcyODIyOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToyMzoxMVrOHnbM6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToyMzoxMVrOHnbM6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEwMjE4NA==", "bodyText": "We should move unreadablePartitionsSkipped++; before this if", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r511102184", "createdAt": "2020-10-23T19:23:11Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -379,27 +382,40 @@ public CounterStat getHighMemorySplitSource()\n                     partitions);\n \n             ImmutableList.Builder<HivePartitionMetadata> results = ImmutableList.builder();\n+            Map<String, Set<String>> partitionsNotReadable = new HashMap<>();\n+            int unreadablePartitionsSkipped = 0;\n+            int reasonsSkipped = 0;\n             for (HivePartition hivePartition : partitionBatch) {\n                 Partition partition = partitions.get(hivePartition.getPartitionId());\n                 if (partition == null) {\n                     throw new PrestoException(GENERIC_INTERNAL_ERROR, \"Partition not loaded: \" + hivePartition);\n                 }\n-                String partName = makePartName(table.getPartitionColumns(), partition.getValues());\n+                String partitionName = makePartName(table.getPartitionColumns(), partition.getValues());\n                 Optional<EncryptionInformation> encryptionInformation = encryptionInformationForPartitions.map(metadata -> metadata.get(hivePartition.getPartitionId()));\n \n                 if (!isOfflineDataDebugModeEnabled(session)) {\n                     // verify partition is online\n-                    verifyOnline(tableName, Optional.of(partName), getProtectMode(partition), partition.getParameters());\n+                    verifyOnline(tableName, Optional.of(partitionName), getProtectMode(partition), partition.getParameters());\n \n                     // verify partition is not marked as non-readable\n-                    String partitionNotReadable = partition.getParameters().get(OBJECT_NOT_READABLE);\n-                    if (!isNullOrEmpty(partitionNotReadable)) {\n+                    String reason = partition.getParameters().get(OBJECT_NOT_READABLE);\n+                    if (!isNullOrEmpty(reason)) {\n                         if (!shouldIgnoreUnreadablePartition(session) || !partition.isEligibleToIgnore()) {\n-                            throw new HiveNotReadableException(tableName, Optional.of(partName), partitionNotReadable);\n+                            throw new HiveNotReadableException(tableName, Optional.of(partitionName), reason);\n+                        }\n+                        if (partitionsNotReadable.size() < 3) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4541964184c36f4bb464a91515b0cd3d11dd1713"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTcyOTI5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToyMzoyMFrOHnbNaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToyMzoyMFrOHnbNaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEwMjMxMg==", "bodyText": "remove this", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r511102312", "createdAt": "2020-10-23T19:23:20Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -379,27 +382,40 @@ public CounterStat getHighMemorySplitSource()\n                     partitions);\n \n             ImmutableList.Builder<HivePartitionMetadata> results = ImmutableList.builder();\n+            Map<String, Set<String>> partitionsNotReadable = new HashMap<>();\n+            int unreadablePartitionsSkipped = 0;\n+            int reasonsSkipped = 0;\n             for (HivePartition hivePartition : partitionBatch) {\n                 Partition partition = partitions.get(hivePartition.getPartitionId());\n                 if (partition == null) {\n                     throw new PrestoException(GENERIC_INTERNAL_ERROR, \"Partition not loaded: \" + hivePartition);\n                 }\n-                String partName = makePartName(table.getPartitionColumns(), partition.getValues());\n+                String partitionName = makePartName(table.getPartitionColumns(), partition.getValues());\n                 Optional<EncryptionInformation> encryptionInformation = encryptionInformationForPartitions.map(metadata -> metadata.get(hivePartition.getPartitionId()));\n \n                 if (!isOfflineDataDebugModeEnabled(session)) {\n                     // verify partition is online\n-                    verifyOnline(tableName, Optional.of(partName), getProtectMode(partition), partition.getParameters());\n+                    verifyOnline(tableName, Optional.of(partitionName), getProtectMode(partition), partition.getParameters());\n \n                     // verify partition is not marked as non-readable\n-                    String partitionNotReadable = partition.getParameters().get(OBJECT_NOT_READABLE);\n-                    if (!isNullOrEmpty(partitionNotReadable)) {\n+                    String reason = partition.getParameters().get(OBJECT_NOT_READABLE);\n+                    if (!isNullOrEmpty(reason)) {\n                         if (!shouldIgnoreUnreadablePartition(session) || !partition.isEligibleToIgnore()) {\n-                            throw new HiveNotReadableException(tableName, Optional.of(partName), partitionNotReadable);\n+                            throw new HiveNotReadableException(tableName, Optional.of(partitionName), reason);\n+                        }\n+                        if (partitionsNotReadable.size() < 3) {\n+                            partitionsNotReadable.putIfAbsent(reason, new HashSet<>(ImmutableSet.of(partitionName)));\n+                            if (partitionsNotReadable.get(reason).size() < 3) {\n+                                partitionsNotReadable.get(reason).add(partitionName);\n+                            }\n+                            else {\n+                                unreadablePartitionsSkipped++;\n+                            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4541964184c36f4bb464a91515b0cd3d11dd1713"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTczMDM0OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToyMzoyOFrOHnbN5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToyMzoyOFrOHnbN5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEwMjQzOQ==", "bodyText": "remove this", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r511102439", "createdAt": "2020-10-23T19:23:28Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -379,27 +382,40 @@ public CounterStat getHighMemorySplitSource()\n                     partitions);\n \n             ImmutableList.Builder<HivePartitionMetadata> results = ImmutableList.builder();\n+            Map<String, Set<String>> partitionsNotReadable = new HashMap<>();\n+            int unreadablePartitionsSkipped = 0;\n+            int reasonsSkipped = 0;\n             for (HivePartition hivePartition : partitionBatch) {\n                 Partition partition = partitions.get(hivePartition.getPartitionId());\n                 if (partition == null) {\n                     throw new PrestoException(GENERIC_INTERNAL_ERROR, \"Partition not loaded: \" + hivePartition);\n                 }\n-                String partName = makePartName(table.getPartitionColumns(), partition.getValues());\n+                String partitionName = makePartName(table.getPartitionColumns(), partition.getValues());\n                 Optional<EncryptionInformation> encryptionInformation = encryptionInformationForPartitions.map(metadata -> metadata.get(hivePartition.getPartitionId()));\n \n                 if (!isOfflineDataDebugModeEnabled(session)) {\n                     // verify partition is online\n-                    verifyOnline(tableName, Optional.of(partName), getProtectMode(partition), partition.getParameters());\n+                    verifyOnline(tableName, Optional.of(partitionName), getProtectMode(partition), partition.getParameters());\n \n                     // verify partition is not marked as non-readable\n-                    String partitionNotReadable = partition.getParameters().get(OBJECT_NOT_READABLE);\n-                    if (!isNullOrEmpty(partitionNotReadable)) {\n+                    String reason = partition.getParameters().get(OBJECT_NOT_READABLE);\n+                    if (!isNullOrEmpty(reason)) {\n                         if (!shouldIgnoreUnreadablePartition(session) || !partition.isEligibleToIgnore()) {\n-                            throw new HiveNotReadableException(tableName, Optional.of(partName), partitionNotReadable);\n+                            throw new HiveNotReadableException(tableName, Optional.of(partitionName), reason);\n+                        }\n+                        if (partitionsNotReadable.size() < 3) {\n+                            partitionsNotReadable.putIfAbsent(reason, new HashSet<>(ImmutableSet.of(partitionName)));\n+                            if (partitionsNotReadable.get(reason).size() < 3) {\n+                                partitionsNotReadable.get(reason).add(partitionName);\n+                            }\n+                            else {\n+                                unreadablePartitionsSkipped++;\n+                            }\n+                        }\n+                        else {\n+                            unreadablePartitionsSkipped++;\n+                            reasonsSkipped++;\n                         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4541964184c36f4bb464a91515b0cd3d11dd1713"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTczNDA4OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToyNDowNlrOHnbP1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToyNDowNlrOHnbP1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEwMjkzNQ==", "bodyText": "partitionsNotReadable.values().stream().mapToInt(Set::size).sum() should be replaced by unreadablePartitionsSkipped\njust name warningMessage", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r511102935", "createdAt": "2020-10-23T19:24:06Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -475,7 +491,19 @@ public CounterStat getHighMemorySplitSource()\n \n                 results.add(new HivePartitionMetadata(hivePartition, Optional.of(partition), partitionSchemaDifference.build(), encryptionInformation));\n             }\n-\n+            String prestoWarningMessage = format(\"Table '%s' has '%s' out of '%s' partitions unreadable: \", tableName, partitionsNotReadable.values().stream().mapToInt(Set::size).sum(), partitionBatch.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4541964184c36f4bb464a91515b0cd3d11dd1713"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNDM5NDYxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQyMToxOToxMFrOHn0bcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQyMjoyMzoyMlrOHn0vgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxNTUwNg==", "bodyText": "To be consistent with the following > 2, these two should be <= 2 right?", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r511515506", "createdAt": "2020-10-24T21:19:10Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -379,27 +382,32 @@ public CounterStat getHighMemorySplitSource()\n                     partitions);\n \n             ImmutableList.Builder<HivePartitionMetadata> results = ImmutableList.builder();\n+            Map<String, Set<String>> partitionsNotReadable = new HashMap<>();\n+            int unreadablePartitionsSkipped = 0;\n             for (HivePartition hivePartition : partitionBatch) {\n                 Partition partition = partitions.get(hivePartition.getPartitionId());\n                 if (partition == null) {\n                     throw new PrestoException(GENERIC_INTERNAL_ERROR, \"Partition not loaded: \" + hivePartition);\n                 }\n-                String partName = makePartName(table.getPartitionColumns(), partition.getValues());\n+                String partitionName = makePartName(table.getPartitionColumns(), partition.getValues());\n                 Optional<EncryptionInformation> encryptionInformation = encryptionInformationForPartitions.map(metadata -> metadata.get(hivePartition.getPartitionId()));\n \n                 if (!isOfflineDataDebugModeEnabled(session)) {\n                     // verify partition is online\n-                    verifyOnline(tableName, Optional.of(partName), getProtectMode(partition), partition.getParameters());\n+                    verifyOnline(tableName, Optional.of(partitionName), getProtectMode(partition), partition.getParameters());\n \n                     // verify partition is not marked as non-readable\n-                    String partitionNotReadable = partition.getParameters().get(OBJECT_NOT_READABLE);\n-                    if (!isNullOrEmpty(partitionNotReadable)) {\n+                    String reason = partition.getParameters().get(OBJECT_NOT_READABLE);\n+                    if (!isNullOrEmpty(reason)) {\n                         if (!shouldIgnoreUnreadablePartition(session) || !partition.isEligibleToIgnore()) {\n-                            throw new HiveNotReadableException(tableName, Optional.of(partName), partitionNotReadable);\n+                            throw new HiveNotReadableException(tableName, Optional.of(partitionName), reason);\n+                        }\n+                        if (partitionsNotReadable.size() < 4) {\n+                            partitionsNotReadable.putIfAbsent(reason, new HashSet<>(ImmutableSet.of(partitionName)));\n+                            if (partitionsNotReadable.get(reason).size() < 4) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f4deab72a040a7b32d8afebc976d2fc7718841"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUyMDY0MQ==", "bodyText": "@highker , what I meant to type was <=3 in this section, and >2 in the other section. The reason the numbers are inconsistent is because by adding at most N partitions to partitionsNotReadable, then checking in the other section if there is more than N-1 partitions, the code can add N-1 partitions to the error message and decide whether a trailing \"...\" is needed or not.", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r511520641", "createdAt": "2020-10-24T22:23:22Z", "author": {"login": "Moe82"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -379,27 +382,32 @@ public CounterStat getHighMemorySplitSource()\n                     partitions);\n \n             ImmutableList.Builder<HivePartitionMetadata> results = ImmutableList.builder();\n+            Map<String, Set<String>> partitionsNotReadable = new HashMap<>();\n+            int unreadablePartitionsSkipped = 0;\n             for (HivePartition hivePartition : partitionBatch) {\n                 Partition partition = partitions.get(hivePartition.getPartitionId());\n                 if (partition == null) {\n                     throw new PrestoException(GENERIC_INTERNAL_ERROR, \"Partition not loaded: \" + hivePartition);\n                 }\n-                String partName = makePartName(table.getPartitionColumns(), partition.getValues());\n+                String partitionName = makePartName(table.getPartitionColumns(), partition.getValues());\n                 Optional<EncryptionInformation> encryptionInformation = encryptionInformationForPartitions.map(metadata -> metadata.get(hivePartition.getPartitionId()));\n \n                 if (!isOfflineDataDebugModeEnabled(session)) {\n                     // verify partition is online\n-                    verifyOnline(tableName, Optional.of(partName), getProtectMode(partition), partition.getParameters());\n+                    verifyOnline(tableName, Optional.of(partitionName), getProtectMode(partition), partition.getParameters());\n \n                     // verify partition is not marked as non-readable\n-                    String partitionNotReadable = partition.getParameters().get(OBJECT_NOT_READABLE);\n-                    if (!isNullOrEmpty(partitionNotReadable)) {\n+                    String reason = partition.getParameters().get(OBJECT_NOT_READABLE);\n+                    if (!isNullOrEmpty(reason)) {\n                         if (!shouldIgnoreUnreadablePartition(session) || !partition.isEligibleToIgnore()) {\n-                            throw new HiveNotReadableException(tableName, Optional.of(partName), partitionNotReadable);\n+                            throw new HiveNotReadableException(tableName, Optional.of(partitionName), reason);\n+                        }\n+                        if (partitionsNotReadable.size() < 4) {\n+                            partitionsNotReadable.putIfAbsent(reason, new HashSet<>(ImmutableSet.of(partitionName)));\n+                            if (partitionsNotReadable.get(reason).size() < 4) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxNTUwNg=="}, "originalCommit": {"oid": "02f4deab72a040a7b32d8afebc976d2fc7718841"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNDM5NTA2OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQyMToxOTo1NFrOHn0bpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQyMToxOTo1NFrOHn0bpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxNTU1Ng==", "bodyText": "You should update unreadablePartitionsSkipped in the for loop body", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r511515556", "createdAt": "2020-10-24T21:19:54Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -379,27 +382,32 @@ public CounterStat getHighMemorySplitSource()\n                     partitions);\n \n             ImmutableList.Builder<HivePartitionMetadata> results = ImmutableList.builder();\n+            Map<String, Set<String>> partitionsNotReadable = new HashMap<>();\n+            int unreadablePartitionsSkipped = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f4deab72a040a7b32d8afebc976d2fc7718841"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNDM5NjcwOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQyMToyMjowN1rOHn0cVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQyMToyMjowN1rOHn0cVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxNTczNA==", "bodyText": "In test testPartitionNotReadable, right below assertEquals(SPLIT_SCHEDULING_CONTEXT.getWarningCollector().getWarnings().size(), 1);,  assert the error message popped out is the one you would expect.", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r511515734", "createdAt": "2020-10-24T21:22:07Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -475,7 +483,20 @@ public CounterStat getHighMemorySplitSource()\n \n                 results.add(new HivePartitionMetadata(hivePartition, Optional.of(partition), partitionSchemaDifference.build(), encryptionInformation));\n             }\n-\n+            String warningMessage = format(\"Table '%s' has '%s' out of '%s' partitions unreadable: \", tableName, unreadablePartitionsSkipped, partitionBatch.size());\n+            for (Entry<String, Set<String>> entry : partitionsNotReadable.entrySet()) {\n+                if (entry.getValue().size() > 2) {\n+                    Iterator it = entry.getValue().iterator();\n+                    warningMessage += \"\\n\" + entry.getKey().toString() + \": \" + it.next() + \", \" + it.next() + \" ...\";\n+                }\n+                else {\n+                    warningMessage += \"\\n\" + entry.getKey().toString() + \": \" + entry.getValue().toString();\n+                }\n+            }\n+            if (partitionsNotReadable.entrySet().size() > 2) {\n+                warningMessage += \"\\n...\";\n+            }\n+            warningCollector.add(new PrestoWarning(PARTITION_NOT_READABLE, warningMessage));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f4deab72a040a7b32d8afebc976d2fc7718841"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNDQxMzgxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQyMTo0NjoxMlrOHn0kAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQyMjo0NjoyMlrOHn01qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxNzY5OQ==", "bodyText": "In test testPartitionNotReadable, right below assertEquals(SPLIT_SCHEDULING_CONTEXT.getWarningCollector().getWarnings().size(), 1);, assert the warning you have is the one you expect", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r511517699", "createdAt": "2020-10-24T21:46:12Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -475,7 +483,23 @@ public CounterStat getHighMemorySplitSource()\n \n                 results.add(new HivePartitionMetadata(hivePartition, Optional.of(partition), partitionSchemaDifference.build(), encryptionInformation));\n             }\n-\n+            StringBuilder warningMessage = new StringBuilder(format(\"Table '%s' has '%s' out of '%s' partitions unreadable: \", tableName, unreadablePartitionsSkipped, partitionBatch.size()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56616a6e3f128ffc391676c0e8e3ed19799d56ec"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUyMjIxNw==", "bodyText": "got it", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r511522217", "createdAt": "2020-10-24T22:46:22Z", "author": {"login": "Moe82"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -475,7 +483,23 @@ public CounterStat getHighMemorySplitSource()\n \n                 results.add(new HivePartitionMetadata(hivePartition, Optional.of(partition), partitionSchemaDifference.build(), encryptionInformation));\n             }\n-\n+            StringBuilder warningMessage = new StringBuilder(format(\"Table '%s' has '%s' out of '%s' partitions unreadable: \", tableName, unreadablePartitionsSkipped, partitionBatch.size()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxNzY5OQ=="}, "originalCommit": {"oid": "56616a6e3f128ffc391676c0e8e3ed19799d56ec"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDQ5MjYxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNDoxNzo0MlrOHoq3TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNDoxNzo0MlrOHoq3TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQwNzM3Mw==", "bodyText": "prior to this if statement, max of 3 reasons in the warningMessage. If 3, delete the last one and append \"...\"\nHacky, but I wanted to avoid the possibility of the code adding 3 reasons plus \"...\" when there is exactly three reasons of unreadability in partitionsNotReadable.", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r512407373", "createdAt": "2020-10-27T04:17:42Z", "author": {"login": "Moe82"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -475,7 +484,23 @@ public CounterStat getHighMemorySplitSource()\n \n                 results.add(new HivePartitionMetadata(hivePartition, Optional.of(partition), partitionSchemaDifference.build(), encryptionInformation));\n             }\n-\n+            StringBuilder warningMessage = new StringBuilder(format(\"Table '%s' has '%s' out of '%s' partitions unreadable: \", tableName, unreadablePartitionsSkipped, partitionBatch.size()));\n+            for (Entry<String, Set<String>> entry : partitionsNotReadable.entrySet()) {\n+                if (entry.getValue().size() > 2) {\n+                    Iterator it = entry.getValue().iterator();\n+                    warningMessage.append(\"\\n\" + entry.getKey().toString() + \": \" + it.next() + \", \" + it.next() + \" ...\");\n+                }\n+                else {\n+                    warningMessage.append(\"\\n\" + entry.getKey().toString() + \": \" + entry.getValue().toString());\n+                }\n+            }\n+            if (partitionsNotReadable.entrySet().size() > 2) {\n+                if (warningMessage.lastIndexOf(\"\\n\") >= 0) {\n+                    warningMessage.delete(warningMessage.lastIndexOf(\"\\n\"), warningMessage.length());\n+                    warningMessage.append(\"\\n...\");\n+                }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "092c8898b5e082124ed4848c6b5cd411544e7c05"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzA0ODcyOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHiveClientFileMetastore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNTo0NTowNFrOHpDNpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNjozMjo0OFrOHpFpzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgwNjMxMA==", "bodyText": "@highker , how do I get the table name?\ntableName.getTableName() returns:\ntest.tmp_presto_test_temptable_becbe4b8516d4eedbc8f2ec61b9cf4c7\nbut the expected table name is:\ntmp_presto_test_temptable_becbe4b8516d4eedbc8f2ec61b9cf4c7\nI tried to trace, but I'm really not sure where 'test' is dropped.\nedit: Sorry, I see now that I can't access it inside the method. I'll squash the 2 commits for this file if it needs to be merged.\nedit: Is it ok if I modify createDummyPartitionedTable()? I just want to make sure that the case for 3 unreadable partitions is what I expect it to be. Probably is, but I figured it would be good to make sure.", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r512806310", "createdAt": "2020-10-27T15:45:04Z", "author": {"login": "Moe82"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHiveClientFileMetastore.java", "diffHunk": "@@ -152,6 +152,8 @@ public void testPartitionNotReadable()\n                 splitManager.getSplits(transaction.getTransactionHandle(), session, tableLayout.getHandle(), SPLIT_SCHEDULING_CONTEXT);\n                 assertNotNull(SPLIT_SCHEDULING_CONTEXT.getWarningCollector());\n                 assertEquals(SPLIT_SCHEDULING_CONTEXT.getWarningCollector().getWarnings().size(), 1);\n+                assertEquals(SPLIT_SCHEDULING_CONTEXT.getWarningCollector().getWarnings().get(0).getMessage(), String.format(\"Table '%s' has '1' out of '3' partitions unreadable:\\nTesting Unreadable Partition: [ds=2020-01-03]\", tableName.getTableName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1943435f8981c9749a32ca41230ebd9ca3cab46"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg0NjI4NA==", "bodyText": "It doesn't have to be assertEquals. It could be assertTrue followed by a substring matching or something like that", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r512846284", "createdAt": "2020-10-27T16:32:48Z", "author": {"login": "highker"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHiveClientFileMetastore.java", "diffHunk": "@@ -152,6 +152,8 @@ public void testPartitionNotReadable()\n                 splitManager.getSplits(transaction.getTransactionHandle(), session, tableLayout.getHandle(), SPLIT_SCHEDULING_CONTEXT);\n                 assertNotNull(SPLIT_SCHEDULING_CONTEXT.getWarningCollector());\n                 assertEquals(SPLIT_SCHEDULING_CONTEXT.getWarningCollector().getWarnings().size(), 1);\n+                assertEquals(SPLIT_SCHEDULING_CONTEXT.getWarningCollector().getWarnings().get(0).getMessage(), String.format(\"Table '%s' has '1' out of '3' partitions unreadable:\\nTesting Unreadable Partition: [ds=2020-01-03]\", tableName.getTableName()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgwNjMxMA=="}, "originalCommit": {"oid": "f1943435f8981c9749a32ca41230ebd9ca3cab46"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDEzMzU1OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxOTo0MzoxMVrOHpN2pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxOTo0MzoxMVrOHpN2pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk4MDY0NQ==", "bodyText": "We really don't need to be such complicated. Also, there are many bugs in this code block like (1) this should be guarded by an if, (2) .toString() is redundant, (3) entry.getValue().toString() is going to get you the memory pointer, etc. Let's simplify this logic:\nif (unreadablePartitionsSkipped > 0) {\n    StringBuilder warningMessage = new StringBuilder(format(\"Table '%s' has '%s' out of '%s' partitions unreadable: \", tableName, unreadablePartitionsSkipped, partitionBatch.size()));\n    for (Entry<String, Set<String>> entry : partitionsNotReadable.entrySet()) {\n        warningMessage.append(join(\", \", entry.getValue()))\n                .append(\"... are due to \")\n                .append(entry.getKey())\n                .append(\". \");\n    }\n    warningCollector.add(new PrestoWarning(PARTITION_NOT_READABLE, warningMessage.toString()));\n}", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r512980645", "createdAt": "2020-10-27T19:43:11Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -475,7 +484,23 @@ public CounterStat getHighMemorySplitSource()\n \n                 results.add(new HivePartitionMetadata(hivePartition, Optional.of(partition), partitionSchemaDifference.build(), encryptionInformation));\n             }\n-\n+            StringBuilder warningMessage = new StringBuilder(format(\"Table '%s' has '%s' out of '%s' partitions unreadable: \", tableName, unreadablePartitionsSkipped, partitionBatch.size()));\n+            for (Entry<String, Set<String>> entry : partitionsNotReadable.entrySet()) {\n+                if (entry.getValue().size() > 2) {\n+                    Iterator it = entry.getValue().iterator();\n+                    warningMessage.append(\"\\n\" + entry.getKey().toString() + \": \" + it.next() + \", \" + it.next() + \" ...\");\n+                }\n+                else {\n+                    warningMessage.append(\"\\n\" + entry.getKey().toString() + \": \" + entry.getValue().toString());\n+                }\n+            }\n+            if (partitionsNotReadable.entrySet().size() > 2) {\n+                if (warningMessage.lastIndexOf(\"\\n\") >= 0) {\n+                    warningMessage.delete(warningMessage.lastIndexOf(\"\\n\"), warningMessage.length());\n+                    warningMessage.append(\"\\n...\");\n+                }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64a4910ff5df51fbe813fb5875935cd1cd8842ad"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDEzNzY4OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxOTo0NDoxM1rOHpN5Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxOTo0NDoxM1rOHpN5Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk4MTMxNA==", "bodyText": "Some single quotes are not needed:\n\"Table '%s' has %s out of %s partitions unreadable: \"", "url": "https://github.com/prestodb/presto/pull/15338#discussion_r512981314", "createdAt": "2020-10-27T19:44:13Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java", "diffHunk": "@@ -475,7 +484,23 @@ public CounterStat getHighMemorySplitSource()\n \n                 results.add(new HivePartitionMetadata(hivePartition, Optional.of(partition), partitionSchemaDifference.build(), encryptionInformation));\n             }\n-\n+            StringBuilder warningMessage = new StringBuilder(format(\"Table '%s' has '%s' out of '%s' partitions unreadable: \", tableName, unreadablePartitionsSkipped, partitionBatch.size()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64a4910ff5df51fbe813fb5875935cd1cd8842ad"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3556, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}