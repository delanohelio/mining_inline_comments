{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NTg3Mjcw", "number": 15024, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo1MDozMVrOEZnCqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNjo0MzoxMlrOEaz-8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mjg5NTEyOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo1MDozMVrOHChlfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo1MDozMVrOHChlfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwOTQ2OA==", "bodyText": "else is not needed", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r472409468", "createdAt": "2020-08-18T18:50:31Z", "author": {"login": "zhenxiao"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -501,23 +518,37 @@ protected ObjectListing computeNext(ObjectListing previous)\n                 if (!previous.isTruncated()) {\n                     return null;\n                 }\n+                // Clear any max keys set for the initial request before submitting subsequent requests. Values < 0\n+                // are not sent in the request and the default limit is used\n+                previous.setMaxKeys(-1);\n                 return s3.listNextBatchOfObjects(previous);\n             }\n         };\n \n-        return Iterators.concat(Iterators.transform(listings, this::statusFromListing));\n+        Iterator<LocatedFileStatus> result = Iterators.concat(Iterators.transform(listings, this::statusFromListing));\n+        if (filterDirectories) {\n+            //  Even recursive listing can still list empty directories, must filter them out\n+            result = Iterators.filter(result, LocatedFileStatus::isFile);\n+        }\n+        return result;\n     }\n \n     private Iterator<LocatedFileStatus> statusFromListing(ObjectListing listing)\n     {\n-        return Iterators.concat(\n-                statusFromPrefixes(listing.getCommonPrefixes()),\n-                statusFromObjects(listing.getObjectSummaries()));\n+        List<String> prefixes = listing.getCommonPrefixes();\n+        if (prefixes.isEmpty()) {\n+            return statusFromObjects(listing.getObjectSummaries());\n+        }\n+        else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8edbb29b80dabe85d841b4bd027fc9f69adf07b"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mjg5NzQ4OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo1MToxMFrOHChm-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMDo1NToxM1rOHD7aFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwOTg1MQ==", "bodyText": "for filterDirectories, shall we use returnFilesOnly? for easy understanding", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r472409851", "createdAt": "2020-08-18T18:51:10Z", "author": {"login": "zhenxiao"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -480,7 +496,7 @@ public boolean mkdirs(Path f, FsPermission permission)\n         return true;\n     }\n \n-    private Iterator<LocatedFileStatus> listPrefix(Path path)\n+    private Iterator<LocatedFileStatus> listPrefix(Path path, OptionalInt initialMaxKeys, boolean recursive, boolean filterDirectories)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8edbb29b80dabe85d841b4bd027fc9f69adf07b"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg4MTEwOQ==", "bodyText": "I've converted this to an enum in the latest revision because the two boolean mode flags could represent a potentially invalid request to list recursively including directories, which isn't a native S3 operation.", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r473881109", "createdAt": "2020-08-20T10:55:13Z", "author": {"login": "pettyjamesm"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -480,7 +496,7 @@ public boolean mkdirs(Path f, FsPermission permission)\n         return true;\n     }\n \n-    private Iterator<LocatedFileStatus> listPrefix(Path path)\n+    private Iterator<LocatedFileStatus> listPrefix(Path path, OptionalInt initialMaxKeys, boolean recursive, boolean filterDirectories)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwOTg1MQ=="}, "originalCommit": {"oid": "a8edbb29b80dabe85d841b4bd027fc9f69adf07b"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mjg5OTIyOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo1MTozN1rOHChoEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMDo1NToyMlrOHD7afw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxMDEzMA==", "bodyText": "could we add testcases for different behaviors of recursive and filterDirectories?", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r472410130", "createdAt": "2020-08-18T18:51:37Z", "author": {"login": "zhenxiao"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -490,7 +506,8 @@ public boolean mkdirs(Path f, FsPermission permission)\n         ListObjectsRequest request = new ListObjectsRequest()\n                 .withBucketName(getBucketName(uri))\n                 .withPrefix(key)\n-                .withDelimiter(PATH_SEPARATOR);\n+                .withDelimiter(recursive && filterDirectories ? null : PATH_SEPARATOR)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8edbb29b80dabe85d841b4bd027fc9f69adf07b"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg4MTIxNQ==", "bodyText": "Test case added", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r473881215", "createdAt": "2020-08-20T10:55:22Z", "author": {"login": "pettyjamesm"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -490,7 +506,8 @@ public boolean mkdirs(Path f, FsPermission permission)\n         ListObjectsRequest request = new ListObjectsRequest()\n                 .withBucketName(getBucketName(uri))\n                 .withPrefix(key)\n-                .withDelimiter(PATH_SEPARATOR);\n+                .withDelimiter(recursive && filterDirectories ? null : PATH_SEPARATOR)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxMDEzMA=="}, "originalCommit": {"oid": "a8edbb29b80dabe85d841b4bd027fc9f69adf07b"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NTQ5NTcxOnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNjo0MTowMVrOHEdb0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzo1MjozMlrOHE2HUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzODYxMA==", "bodyText": "SHALLOW_ALL include both files and directories, right? shall we call is ALL?", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474438610", "createdAt": "2020-08-21T06:41:01Z", "author": {"login": "zhenxiao"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -480,7 +496,22 @@ public boolean mkdirs(Path f, FsPermission permission)\n         return true;\n     }\n \n-    private Iterator<LocatedFileStatus> listPrefix(Path path)\n+    /**\n+     * Enum representing the valid listing modes. This could be two booleans (recursive, filesOnly) except\n+     * that (recursive=true, filesOnly=false) can't be translated directly to a natively supported behavior\n+     */\n+    private enum ListingMode {\n+        SHALLOW_ALL,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb4be32ed3e044bb72dcffd49fb648e97c7f61ae"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY3NjA4OQ==", "bodyText": "I think the important distinction here is \"shallow\" vs \"recursive\" where ALL might seem to imply RECURSIVE_ALL which is not a supported mode.", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474676089", "createdAt": "2020-08-21T12:50:35Z", "author": {"login": "pettyjamesm"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -480,7 +496,22 @@ public boolean mkdirs(Path f, FsPermission permission)\n         return true;\n     }\n \n-    private Iterator<LocatedFileStatus> listPrefix(Path path)\n+    /**\n+     * Enum representing the valid listing modes. This could be two booleans (recursive, filesOnly) except\n+     * that (recursive=true, filesOnly=false) can't be translated directly to a natively supported behavior\n+     */\n+    private enum ListingMode {\n+        SHALLOW_ALL,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzODYxMA=="}, "originalCommit": {"oid": "cb4be32ed3e044bb72dcffd49fb648e97c7f61ae"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg0Mjk2MQ==", "bodyText": "get it", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474842961", "createdAt": "2020-08-21T17:52:32Z", "author": {"login": "zhenxiao"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -480,7 +496,22 @@ public boolean mkdirs(Path f, FsPermission permission)\n         return true;\n     }\n \n-    private Iterator<LocatedFileStatus> listPrefix(Path path)\n+    /**\n+     * Enum representing the valid listing modes. This could be two booleans (recursive, filesOnly) except\n+     * that (recursive=true, filesOnly=false) can't be translated directly to a natively supported behavior\n+     */\n+    private enum ListingMode {\n+        SHALLOW_ALL,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzODYxMA=="}, "originalCommit": {"oid": "cb4be32ed3e044bb72dcffd49fb648e97c7f61ae"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NTUwMTI5OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNjo0MzoxMlrOHEde4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo0OToyOFrOHE9Jtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzOTM5Mg==", "bodyText": "I feel filesOnly in the comment a little confusing. what do you think? Maybe just keep:\nEnum representing the valid listing modes\nas comment, or we do not need the comment at all?", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474439392", "createdAt": "2020-08-21T06:43:12Z", "author": {"login": "zhenxiao"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -480,7 +496,22 @@ public boolean mkdirs(Path f, FsPermission permission)\n         return true;\n     }\n \n-    private Iterator<LocatedFileStatus> listPrefix(Path path)\n+    /**\n+     * Enum representing the valid listing modes. This could be two booleans (recursive, filesOnly) except", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb4be32ed3e044bb72dcffd49fb648e97c7f61ae"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY3ODE1OA==", "bodyText": "I'm fine stripping the comment if you think it's more confusing than helpful. I left it there to try to explain that the 2x2 matrix only has 3 valid positions:\n(shallow, all)\n(shallow, filesOnly)\n(recursive, filesOnly)\nbecause: (recursive, all) is not a mode that is directly supported and requires externally recursing through \"subdirectories\" via (shallow, all) calls.\nUp to you if you think it's better to omit entirely or if you have a better phrasing in mind to make that more clear.", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474678158", "createdAt": "2020-08-21T12:54:50Z", "author": {"login": "pettyjamesm"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -480,7 +496,22 @@ public boolean mkdirs(Path f, FsPermission permission)\n         return true;\n     }\n \n-    private Iterator<LocatedFileStatus> listPrefix(Path path)\n+    /**\n+     * Enum representing the valid listing modes. This could be two booleans (recursive, filesOnly) except", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzOTM5Mg=="}, "originalCommit": {"oid": "cb4be32ed3e044bb72dcffd49fb648e97c7f61ae"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg0NDY4OQ==", "bodyText": "get it. how about we omit this comment and add line comment in each of the element of enum ListingMode:\nSHALLOW_ALL, // shallow, both files and directories\nSHALLOW_FILES_ONLY, // shallow files only\nRECURSIVE_FILES_ONLY // recursive, files only", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474844689", "createdAt": "2020-08-21T17:55:50Z", "author": {"login": "zhenxiao"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -480,7 +496,22 @@ public boolean mkdirs(Path f, FsPermission permission)\n         return true;\n     }\n \n-    private Iterator<LocatedFileStatus> listPrefix(Path path)\n+    /**\n+     * Enum representing the valid listing modes. This could be two booleans (recursive, filesOnly) except", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzOTM5Mg=="}, "originalCommit": {"oid": "cb4be32ed3e044bb72dcffd49fb648e97c7f61ae"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk1ODI2Mw==", "bodyText": "I stripped the comment and added an inline comment for SHALLOW_ALL since that's the only one that is any different from the enum name itself.", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474958263", "createdAt": "2020-08-21T20:49:28Z", "author": {"login": "pettyjamesm"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -480,7 +496,22 @@ public boolean mkdirs(Path f, FsPermission permission)\n         return true;\n     }\n \n-    private Iterator<LocatedFileStatus> listPrefix(Path path)\n+    /**\n+     * Enum representing the valid listing modes. This could be two booleans (recursive, filesOnly) except", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzOTM5Mg=="}, "originalCommit": {"oid": "cb4be32ed3e044bb72dcffd49fb648e97c7f61ae"}, "originalPosition": 100}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3737, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}