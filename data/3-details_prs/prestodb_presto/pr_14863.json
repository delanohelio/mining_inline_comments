{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0MDUzMTAy", "number": 14863, "title": "Pushdown DistinctLimitNode in Pinot Connector", "bodyText": "Push down DistinctLimitNode to Pinot Query.\nFor Presto query: SELECT DISTINCT flightnum FROM airlinestats LIMIT 10,\nWe will pushdown below query to Pinot:\n\nSQL format: SELECT FlightNum FROM airlineStats GROUP BY FlightNum LIMIT 10.\nPQL format: SELECT count(*) FROM airlineStats GROUP BY FlightNum TOP 10.\n\nBelow is the generated query plan for SQL mode.\npresto:default> explain select distinct flightnum from airlinestats limit 10;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n - Output[flightnum] => [flightnum:integer]\n         Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}\n     - RemoteStreamingExchange[GATHER] => [flightnum:integer]\n             Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}\n         - TableScan[TableHandle {connectorId='pinot', connectorHandle='PinotTableHandle{connectorId=pinot, schemaName=default, tableName=airlineStats, isQueryShort=Optional[true], expectedColumnHandles=Optional[[PinotColumnHandle{columnName=FlightNum, dataType=integer, type=REGULAR}]], pinotQuery=Optional[GeneratedPinotQuery{query=SELECT FlightNum FROM airlineStats GROUP BY FlightNum LIMIT 10, format=SQL, table=airlineStats, expectedColumnIndices=[], groupByClauses=1, haveFilter=false, isQueryShort=true}]}', layout='Optional[PinotTableHandle{connectorId=pinot, schemaName=default, tableName=airlineStats, isQueryShort=Optional[true], expectedColumnHandles=Optional[[PinotColumnHandle{columnName=FlightNum, dataType=integer, type=REGULAR}]], pinotQuery=Optional[GeneratedPinotQuery{query=SELECT FlightNum FROM airlineStats GROUP BY FlightNum LIMIT 10, format=SQL, table=airlineStats, expectedColumnIndices=[], groupByClauses=1, haveFilter=false, isQueryShort=true}]}]'}] => [flightnum:integer]\n                 Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}\n                 flightnum := PinotColumnHandle{columnName=FlightNum, dataType=integer, type=REGULAR}\n\nBelow is the generated query plan for PQL mode.\npresto:default> explain select distinct flightnum from airlinestats limit 10;\n\nn - Output[flightnum] => [flightnum:integer]\n         Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}\n     - RemoteStreamingExchange[GATHER] => [flightnum:integer]\n             Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: ?}\n         - TableScan[TableHandle {connectorId='pinot', connectorHandle='PinotTableHandle{connectorId=pinot, schemaName=default, tableName=airlineStats, isQueryShort=Optional[true], expectedColumnHandles=Optional[[PinotColumnHandle{columnName=FlightNum, dataType=integer, type=REGULAR}]], pinotQuery=Optional[GeneratedPinotQuery{query=SELECT count(*) FROM airlineStats GROUP BY FlightNum TOP 10, format=PQL, table=airlineStats, expectedColumnIndices=[0, -1], groupByClauses=1, haveFilter=false, isQueryShort=true}]}', layout='Optional[PinotTableHandle{connectorId=pinot, schemaName=default, tableName=airlineStats, isQueryShort=Optional[true], expectedColumnHandles=Optional[[PinotColumnHandle{columnName=FlightNum, dataType=integer, type=REGULAR}]], pinotQuery=Optional[GeneratedPinotQuery{query=SELECT count(*) FROM airlineStats GROUP BY FlightNum TOP 10, format=PQL, table=airlineStats, expectedColumnIndices=[0, -1], groupByClauses=1, haveFilter=false, isQueryShort=true}]}]'}] => [flightnum:integer]\n                 Estimates: {rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}\n                 flightnum := PinotColumnHandle{columnName=FlightNum, dataType=integer, type=REGULAR}\n\n(1 row)\n\n== RELEASE NOTES ==\n\nPinot Changes\n* Pushdown DistinctLimitNode to Pinot Query in SQL mode.", "createdAt": "2020-07-21T02:47:40Z", "url": "https://github.com/prestodb/presto/pull/14863", "merged": true, "mergeCommit": {"oid": "6a55eb422b9043f49db02b5245bfd59c091b8776"}, "closed": true, "closedAt": "2020-07-24T05:37:30Z", "author": {"login": "xiangfu0"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc29VOTgFqTQ1MjA5MzkzNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc34rr3gBqjM1ODIxNTM3NzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMDkzOTM0", "url": "https://github.com/prestodb/presto/pull/14863#pullrequestreview-452093934", "createdAt": "2020-07-21T03:05:22Z", "commit": {"oid": "381af86befc65279b3298eea36006f4a3f1fb422"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMzowNToyMlrOG0mZ3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMzowNToyMlrOG0mZ3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgwODM1MA==", "bodyText": "I didn't follow why distinct limit generates the same PQL as a regular limit ?", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457808350", "createdAt": "2020-07-21T03:05:22Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/query/TestPinotPlanOptimizerSql.java", "diffHunk": "@@ -30,4 +39,28 @@ public void assertUsingSqlSyntax()\n     {\n         Assert.assertEquals(defaultSessionHolder.getConnectorSession().getProperty(\"use_pinot_sql_for_broker_queries\", Boolean.class).booleanValue(), true);\n     }\n+\n+    @Test\n+    public void testDistinctLimitPushdown()\n+    {\n+        PlanBuilder planBuilder = createPlanBuilder(defaultSessionHolder);\n+        PlanNode originalPlan = distinctLimit(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "381af86befc65279b3298eea36006f4a3f1fb422"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "381af86befc65279b3298eea36006f4a3f1fb422", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/381af86befc65279b3298eea36006f4a3f1fb422", "committedDate": "2020-07-21T02:39:27Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}, "afterCommit": {"oid": "95768433ec320141f07c53eabfd3b90a04a9484b", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/95768433ec320141f07c53eabfd3b90a04a9484b", "committedDate": "2020-07-21T06:02:24Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMTU3NTkz", "url": "https://github.com/prestodb/presto/pull/14863#pullrequestreview-452157593", "createdAt": "2020-07-21T06:23:23Z", "commit": {"oid": "95768433ec320141f07c53eabfd3b90a04a9484b"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNjoyMzoyNFrOG0pw8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNjoyNjo0MFrOG0p15Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2MzQwOQ==", "bodyText": "I think I have forgotten your old Pinot-SQL PR :-) -- but didn't we have a special derived class for the SQL generation ? Instead of using  if useSqlSyntax", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457863409", "createdAt": "2020-07-21T06:23:24Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGenerator.java", "diffHunk": "@@ -516,5 +518,27 @@ public PinotQueryGeneratorContext visitTopN(TopNNode node, PinotQueryGeneratorCo\n             checkSupported(node.getStep().equals(TopNNode.Step.SINGLE), \"Can only push single logical topn in\");\n             return context.withTopN(getOrderingScheme(node), node.getCount()).withOutputColumns(node.getOutputVariables());\n         }\n+\n+        @Override\n+        public PinotQueryGeneratorContext visitDistinctLimit(DistinctLimitNode node, PinotQueryGeneratorContext context)\n+        {\n+            context = node.getSource().accept(this, context);\n+            requireNonNull(context, \"context is null\");\n+            checkSupported(!forbidBrokerQueries, \"Cannot push distinctLimit in segment mode\");\n+            LinkedHashSet<VariableReferenceExpression> groupByColumns = new LinkedHashSet<>(node.getDistinctVariables());\n+            if (!useSqlSyntax) {\n+                // Handling PQL by adding hidden expression: count(*)\n+                // E.g. `SELECT DISTINCT A, B FROM myTable LIMIT 10`\n+                // In Pql mode, the generated pql is `SELECT count(*) FROM myTable GROUP BY A, B LIMIT 10`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95768433ec320141f07c53eabfd3b90a04a9484b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2MzUwOA==", "bodyText": "What about the old group by columns already in the context ? If you don't expect them please assert accordingly", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457863508", "createdAt": "2020-07-21T06:23:40Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGenerator.java", "diffHunk": "@@ -516,5 +518,27 @@ public PinotQueryGeneratorContext visitTopN(TopNNode node, PinotQueryGeneratorCo\n             checkSupported(node.getStep().equals(TopNNode.Step.SINGLE), \"Can only push single logical topn in\");\n             return context.withTopN(getOrderingScheme(node), node.getCount()).withOutputColumns(node.getOutputVariables());\n         }\n+\n+        @Override\n+        public PinotQueryGeneratorContext visitDistinctLimit(DistinctLimitNode node, PinotQueryGeneratorContext context)\n+        {\n+            context = node.getSource().accept(this, context);\n+            requireNonNull(context, \"context is null\");\n+            checkSupported(!forbidBrokerQueries, \"Cannot push distinctLimit in segment mode\");\n+            LinkedHashSet<VariableReferenceExpression> groupByColumns = new LinkedHashSet<>(node.getDistinctVariables());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95768433ec320141f07c53eabfd3b90a04a9484b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2NDEwOQ==", "bodyText": "Again pardon my ignorance on the Pinot-SQL PR: But wasn't there a special derived test class to test the PQL one alone. This looks to be testing the PQL flow -- should it go in its own class ?", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457864109", "createdAt": "2020-07-21T06:25:20Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/query/TestPinotQueryGenerator.java", "diffHunk": "@@ -374,4 +377,26 @@ public void testAggregationWithOrderByPushDownInTopN()\n         TopNNode topN = new TopNNode(planBuilder.getIdAllocator().getNextId(), agg, 50L, new OrderingScheme(ImmutableList.of(new Ordering(variable(\"city\"), SortOrder.DESC_NULLS_FIRST))), TopNNode.Step.FINAL);\n         testPinotQuery(pinotConfig, topN, \"\", defaultSessionHolder, ImmutableMap.of());\n     }\n+\n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95768433ec320141f07c53eabfd3b90a04a9484b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2NDY3Nw==", "bodyText": "How about testing something with a distinct limit on top of an existing group by ? What about on top of an existing global aggregation ?", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r457864677", "createdAt": "2020-07-21T06:26:40Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/query/TestPinotQueryGeneratorSql.java", "diffHunk": "@@ -211,4 +216,27 @@ public void testDistinctSelection()\n                 defaultSessionHolder,\n                 ImmutableMap.of());\n     }\n+\n+    @Override\n+    @Test\n+    public void testDistinctLimitPushdown()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95768433ec320141f07c53eabfd3b90a04a9484b"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95768433ec320141f07c53eabfd3b90a04a9484b", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/95768433ec320141f07c53eabfd3b90a04a9484b", "committedDate": "2020-07-21T06:02:24Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}, "afterCommit": {"oid": "553c1b08b4a7f7260810c811c4439127be80d5f9", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/553c1b08b4a7f7260810c811c4439127be80d5f9", "committedDate": "2020-07-21T08:17:05Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "553c1b08b4a7f7260810c811c4439127be80d5f9", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/553c1b08b4a7f7260810c811c4439127be80d5f9", "committedDate": "2020-07-21T08:17:05Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}, "afterCommit": {"oid": "2f904ba44d3c3f012301bb3555eafaa63b35c97a", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/2f904ba44d3c3f012301bb3555eafaa63b35c97a", "committedDate": "2020-07-21T10:24:58Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f904ba44d3c3f012301bb3555eafaa63b35c97a", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/2f904ba44d3c3f012301bb3555eafaa63b35c97a", "committedDate": "2020-07-21T10:24:58Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}, "afterCommit": {"oid": "f26ce010b760e016a470567b1b72adb829bbaa25", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/f26ce010b760e016a470567b1b72adb829bbaa25", "committedDate": "2020-07-21T17:56:27Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNzQwODM0", "url": "https://github.com/prestodb/presto/pull/14863#pullrequestreview-452740834", "createdAt": "2020-07-21T18:53:50Z", "commit": {"oid": "f26ce010b760e016a470567b1b72adb829bbaa25"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODo1Mzo1MVrOG1FgVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODo1NjowMFrOG1FlIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxNzkwOA==", "bodyText": "PinotQueryGeneratorContext.withAggregation has some special handling for the case when distinctCount is already pushed down. (Search for PINOT_DISTINCT_COUNT_FUNCTION_NAME). Can you make sure that this doesn't conflict with that. Thanks", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458317908", "createdAt": "2020-07-21T18:53:51Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGenerator.java", "diffHunk": "@@ -516,5 +518,27 @@ public PinotQueryGeneratorContext visitTopN(TopNNode node, PinotQueryGeneratorCo\n             checkSupported(node.getStep().equals(TopNNode.Step.SINGLE), \"Can only push single logical topn in\");\n             return context.withTopN(getOrderingScheme(node), node.getCount()).withOutputColumns(node.getOutputVariables());\n         }\n+\n+        @Override\n+        public PinotQueryGeneratorContext visitDistinctLimit(DistinctLimitNode node, PinotQueryGeneratorContext context)\n+        {\n+            context = node.getSource().accept(this, context);\n+            requireNonNull(context, \"context is null\");\n+            checkSupported(!forbidBrokerQueries, \"Cannot push distinctLimit in segment mode\");\n+            LinkedHashSet<VariableReferenceExpression> groupByColumns = new LinkedHashSet<>(node.getDistinctVariables());\n+            if (!useSqlSyntax) {\n+                // Handling PQL by adding hidden expression: count(*)\n+                // E.g. `SELECT DISTINCT A, B FROM myTable LIMIT 10`\n+                // In Pql mode, the generated pql is `SELECT count(*) FROM myTable GROUP BY A, B LIMIT 10`;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2MzQwOQ=="}, "originalCommit": {"oid": "95768433ec320141f07c53eabfd3b90a04a9484b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxODc2Mg==", "bodyText": "nit: I somehow prefer having a clean else block here to denote that the SQL and PQL handling is different. I somehow missed that in my first read.", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458318762", "createdAt": "2020-07-21T18:55:20Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGenerator.java", "diffHunk": "@@ -516,5 +518,27 @@ public PinotQueryGeneratorContext visitTopN(TopNNode node, PinotQueryGeneratorCo\n             checkSupported(node.getStep().equals(TopNNode.Step.SINGLE), \"Can only push single logical topn in\");\n             return context.withTopN(getOrderingScheme(node), node.getCount()).withOutputColumns(node.getOutputVariables());\n         }\n+\n+        @Override\n+        public PinotQueryGeneratorContext visitDistinctLimit(DistinctLimitNode node, PinotQueryGeneratorContext context)\n+        {\n+            context = node.getSource().accept(this, context);\n+            requireNonNull(context, \"context is null\");\n+            checkSupported(!forbidBrokerQueries, \"Cannot push distinctLimit in segment mode\");\n+            LinkedHashSet<VariableReferenceExpression> groupByColumns = new LinkedHashSet<>(node.getDistinctVariables());\n+            if (!useSqlSyntax) {\n+                // Handling PQL by adding hidden expression: count(*)\n+                // E.g. `SELECT DISTINCT A, B FROM myTable LIMIT 10`\n+                // In Pql mode, the generated pql is `SELECT count(*) FROM myTable GROUP BY A, B LIMIT 10`;\n+                // In Sql mode, the generated sql is still `SELECT A, B FROM myTable GROUP BY A, B LIMIT 10`.\n+                VariableReferenceExpression hidden = new VariableReferenceExpression(UUID.randomUUID().toString(), BigintType.BIGINT);\n+                Map<VariableReferenceExpression, Selection> newSelections = new HashMap<>(context.getSelections());\n+                newSelections.put(hidden, new Selection(\"count(*)\", DERIVED));\n+                LinkedHashSet<VariableReferenceExpression> newOutputs = new LinkedHashSet<>(groupByColumns);\n+                newOutputs.add(hidden);\n+                return context.withAggregation(newSelections, newOutputs, groupByColumns, 1, ImmutableSet.of(hidden)).withLimit(node.getLimit());\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26ce010b760e016a470567b1b72adb829bbaa25"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxODc5OA==", "bodyText": "nit: Should we omit adding a helper method when it is used only once ? I think this can be inlined ?", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458318798", "createdAt": "2020-07-21T18:55:23Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -553,6 +558,26 @@ public PinotQueryGeneratorContext withVariablesInAggregation(Set<VariableReferen\n                 useSqlSyntax);\n     }\n \n+    public PinotQueryGeneratorContext withDistinctLimit(LinkedHashSet<VariableReferenceExpression> newGroupByColumns, long limit)\n+    {\n+        int intLimit = checkForValidLimit(limit);\n+        checkSupported(!hasLimit(), \"Limit already exists. Pinot doesn't support limit on top of another limit\");\n+        checkSupported(!hasGroupBy(), \"GroupBy already exists. Pinot doesn't support Distinct on top of another Group By\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26ce010b760e016a470567b1b72adb829bbaa25"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxOTEzNw==", "bodyText": "Is it worth asserting that we are in sql mode here ?", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458319137", "createdAt": "2020-07-21T18:56:00Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -553,6 +558,26 @@ public PinotQueryGeneratorContext withVariablesInAggregation(Set<VariableReferen\n                 useSqlSyntax);\n     }\n \n+    public PinotQueryGeneratorContext withDistinctLimit(LinkedHashSet<VariableReferenceExpression> newGroupByColumns, long limit)\n+    {\n+        int intLimit = checkForValidLimit(limit);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26ce010b760e016a470567b1b72adb829bbaa25"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f26ce010b760e016a470567b1b72adb829bbaa25", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/f26ce010b760e016a470567b1b72adb829bbaa25", "committedDate": "2020-07-21T17:56:27Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}, "afterCommit": {"oid": "81e5af0b8332c342617bdbfc7f16420fa265d437", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/81e5af0b8332c342617bdbfc7f16420fa265d437", "committedDate": "2020-07-21T20:50:51Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyODQ1Mzk2", "url": "https://github.com/prestodb/presto/pull/14863#pullrequestreview-452845396", "createdAt": "2020-07-21T21:32:59Z", "commit": {"oid": "81e5af0b8332c342617bdbfc7f16420fa265d437"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMTozMjo1OVrOG1KlWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMTozNjowNVrOG1KrTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMTExNQ==", "bodyText": "Correct me if I am wrong: But is this block of code duplicated ? If so, can we DRY it ?", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458401115", "createdAt": "2020-07-21T21:32:59Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGenerator.java", "diffHunk": "@@ -516,5 +518,33 @@ public PinotQueryGeneratorContext visitTopN(TopNNode node, PinotQueryGeneratorCo\n             checkSupported(node.getStep().equals(TopNNode.Step.SINGLE), \"Can only push single logical topn in\");\n             return context.withTopN(getOrderingScheme(node), node.getCount()).withOutputColumns(node.getOutputVariables());\n         }\n+\n+        @Override\n+        public PinotQueryGeneratorContext visitDistinctLimit(DistinctLimitNode node, PinotQueryGeneratorContext context)\n+        {\n+            context = node.getSource().accept(this, context);\n+            requireNonNull(context, \"context is null\");\n+            checkSupported(!forbidBrokerQueries, \"Cannot push distinctLimit in segment mode\");\n+            LinkedHashSet<VariableReferenceExpression> groupByColumns = new LinkedHashSet<>(node.getDistinctVariables());\n+            if (!useSqlSyntax) {\n+                // Handling PQL by adding hidden expression: count(*)\n+                // E.g. `SELECT DISTINCT A, B FROM myTable LIMIT 10`\n+                // In Pql mode, the generated pql is `SELECT count(*) FROM myTable GROUP BY A, B LIMIT 10`.\n+                checkSupported(!context.hasAggregation(), \"Aggregation already exists. Pinot doesn't support DistinctLimit with existing Aggregation\");\n+                checkSupported(!context.hasGroupBy(), \"GroupBy already exists. Pinot doesn't support DistinctLimit with existing GroupBy\");\n+                VariableReferenceExpression hidden = new VariableReferenceExpression(UUID.randomUUID().toString(), BigintType.BIGINT);\n+                Map<VariableReferenceExpression, Selection> newSelections = new HashMap<>(context.getSelections());\n+                newSelections.put(hidden, new Selection(\"count(*)\", DERIVED));\n+                LinkedHashSet<VariableReferenceExpression> newOutputs = new LinkedHashSet<>(groupByColumns);\n+                newOutputs.add(hidden);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81e5af0b8332c342617bdbfc7f16420fa265d437"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMTU0MQ==", "bodyText": "nit: split this into multiple lines if possible please.", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458401541", "createdAt": "2020-07-21T21:33:51Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/query/TestPinotPlanOptimizerSql.java", "diffHunk": "@@ -30,4 +39,28 @@ public void assertUsingSqlSyntax()\n     {\n         Assert.assertEquals(defaultSessionHolder.getConnectorSession().getProperty(\"use_pinot_sql_for_broker_queries\", Boolean.class).booleanValue(), true);\n     }\n+\n+    @Test\n+    public void testDistinctLimitPushdown()\n+    {\n+        PlanBuilder planBuilder = createPlanBuilder(defaultSessionHolder);\n+        PlanNode originalPlan = distinctLimit(\n+                planBuilder,\n+                ImmutableList.of(new VariableReferenceExpression(\"regionid\", BIGINT)),\n+                50L,\n+                tableScan(planBuilder, pinotTable, regionId));\n+        PlanNode optimized = getOptimizedPlan(planBuilder, originalPlan);\n+        assertPlanMatch(optimized, PinotTableScanMatcher.match(pinotTable, Optional.of(\"SELECT regionId FROM hybrid GROUP BY regionId LIMIT 50\"), Optional.of(false), originalPlan.getOutputVariables(), useSqlSyntax()), typeProvider);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81e5af0b8332c342617bdbfc7f16420fa265d437"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMTU4NQ==", "bodyText": "ditto", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458401585", "createdAt": "2020-07-21T21:33:57Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/query/TestPinotPlanOptimizerSql.java", "diffHunk": "@@ -30,4 +39,28 @@ public void assertUsingSqlSyntax()\n     {\n         Assert.assertEquals(defaultSessionHolder.getConnectorSession().getProperty(\"use_pinot_sql_for_broker_queries\", Boolean.class).booleanValue(), true);\n     }\n+\n+    @Test\n+    public void testDistinctLimitPushdown()\n+    {\n+        PlanBuilder planBuilder = createPlanBuilder(defaultSessionHolder);\n+        PlanNode originalPlan = distinctLimit(\n+                planBuilder,\n+                ImmutableList.of(new VariableReferenceExpression(\"regionid\", BIGINT)),\n+                50L,\n+                tableScan(planBuilder, pinotTable, regionId));\n+        PlanNode optimized = getOptimizedPlan(planBuilder, originalPlan);\n+        assertPlanMatch(optimized, PinotTableScanMatcher.match(pinotTable, Optional.of(\"SELECT regionId FROM hybrid GROUP BY regionId LIMIT 50\"), Optional.of(false), originalPlan.getOutputVariables(), useSqlSyntax()), typeProvider);\n+\n+        planBuilder = createPlanBuilder(defaultSessionHolder);\n+        originalPlan = distinctLimit(\n+                planBuilder,\n+                ImmutableList.of(\n+                        new VariableReferenceExpression(\"regionid\", BIGINT),\n+                        new VariableReferenceExpression(\"city\", VARCHAR)),\n+                50L,\n+                tableScan(planBuilder, pinotTable, regionId, city));\n+        optimized = getOptimizedPlan(planBuilder, originalPlan);\n+        assertPlanMatch(optimized, PinotTableScanMatcher.match(pinotTable, Optional.of(\"SELECT regionId, city FROM hybrid GROUP BY regionId, city LIMIT 50\"), Optional.of(false), originalPlan.getOutputVariables(), useSqlSyntax()), typeProvider);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81e5af0b8332c342617bdbfc7f16420fa265d437"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMjI1Mg==", "bodyText": "I think getExpectedDistinctOutput should only take the group by keys, because the aggregation is always unconditionally \"count()\". ie, this method should just return \"count()\".", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458402252", "createdAt": "2020-07-21T21:35:18Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/query/TestPinotQueryGenerator.java", "diffHunk": "@@ -374,4 +377,41 @@ public void testAggregationWithOrderByPushDownInTopN()\n         TopNNode topN = new TopNNode(planBuilder.getIdAllocator().getNextId(), agg, 50L, new OrderingScheme(ImmutableList.of(new Ordering(variable(\"city\"), SortOrder.DESC_NULLS_FIRST))), TopNNode.Step.FINAL);\n         testPinotQuery(pinotConfig, topN, \"\", defaultSessionHolder, ImmutableMap.of());\n     }\n+\n+    @Test\n+    public void testDistinctLimitPushdown()\n+    {\n+        PlanBuilder planBuilder = createPlanBuilder(defaultSessionHolder);\n+        DistinctLimitNode distinctLimitNode = distinctLimit(\n+                planBuilder,\n+                ImmutableList.of(new VariableReferenceExpression(\"regionid\", BIGINT)),\n+                50L,\n+                tableScan(planBuilder, pinotTable, regionId));\n+        testPinotQuery(\n+                pinotConfig,\n+                distinctLimitNode,\n+                String.format(\"SELECT %s FROM realtimeOnly GROUP BY regionId %s 50\", getExpectedDistinctOutput(\"count(*)\", \"regionId\"), getGroupByLimitKey()),\n+                defaultSessionHolder,\n+                ImmutableMap.of());\n+\n+        planBuilder = createPlanBuilder(defaultSessionHolder);\n+        distinctLimitNode = distinctLimit(\n+                planBuilder,\n+                ImmutableList.of(\n+                        new VariableReferenceExpression(\"regionid\", BIGINT),\n+                        new VariableReferenceExpression(\"city\", VARCHAR)),\n+                50L,\n+                tableScan(planBuilder, pinotTable, regionId, city));\n+        testPinotQuery(\n+                pinotConfig,\n+                distinctLimitNode,\n+                String.format(\"SELECT %s FROM realtimeOnly GROUP BY regionId, city %s 50\", getExpectedDistinctOutput(\"count(*)\", \"regionId, city\"), getGroupByLimitKey()),\n+                defaultSessionHolder,\n+                ImmutableMap.of());\n+    }\n+\n+    protected String getExpectedDistinctOutput(String aggregation, String groupKeys)\n+    {\n+        return aggregation;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81e5af0b8332c342617bdbfc7f16420fa265d437"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMjYzOQ==", "bodyText": "nit: !hasAggregations()", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r458402639", "createdAt": "2020-07-21T21:36:05Z", "author": {"login": "agrawaldevesh"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGeneratorContext.java", "diffHunk": "@@ -553,6 +558,27 @@ public PinotQueryGeneratorContext withVariablesInAggregation(Set<VariableReferen\n                 useSqlSyntax);\n     }\n \n+    public PinotQueryGeneratorContext withDistinctLimit(LinkedHashSet<VariableReferenceExpression> newGroupByColumns, long limit)\n+    {\n+        int intLimit = checkForValidLimit(limit);\n+        checkSupported(useSqlSyntax, \"DistinctLimit is only supported in SQL mode\");\n+        checkSupported(!hasLimit(), \"Limit already exists. Pinot doesn't support limit on top of another limit\");\n+        checkSupported(!hasGroupBy(), \"GroupBy already exists. Pinot doesn't support Distinct on top of another Group By\");\n+        checkSupported(aggregations == 0, \"Aggregation already exists. Pinot doesn't support Distinct Limit on top of Aggregation\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81e5af0b8332c342617bdbfc7f16420fa265d437"}, "originalPosition": 92}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "81e5af0b8332c342617bdbfc7f16420fa265d437", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/81e5af0b8332c342617bdbfc7f16420fa265d437", "committedDate": "2020-07-21T20:50:51Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}, "afterCommit": {"oid": "02431aa1779a5a2a8a636d81b1dc347adcb3fbee", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/02431aa1779a5a2a8a636d81b1dc347adcb3fbee", "committedDate": "2020-07-21T23:38:15Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyOTAyODA4", "url": "https://github.com/prestodb/presto/pull/14863#pullrequestreview-452902808", "createdAt": "2020-07-21T23:45:16Z", "commit": {"oid": "02431aa1779a5a2a8a636d81b1dc347adcb3fbee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02431aa1779a5a2a8a636d81b1dc347adcb3fbee", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/02431aa1779a5a2a8a636d81b1dc347adcb3fbee", "committedDate": "2020-07-21T23:38:15Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}, "afterCommit": {"oid": "bc25ce127f36de908ed162afb4f4f8f4a004d0de", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/bc25ce127f36de908ed162afb4f4f8f4a004d0de", "committedDate": "2020-07-22T04:55:56Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODMzNzEx", "url": "https://github.com/prestodb/presto/pull/14863#pullrequestreview-453833711", "createdAt": "2020-07-23T04:48:49Z", "commit": {"oid": "bc25ce127f36de908ed162afb4f4f8f4a004d0de"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDo0ODo0OVrOG18HZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDo0ODo0OVrOG18HZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxMjY0Ng==", "bodyText": "Remove this else {. Just directly return", "url": "https://github.com/prestodb/presto/pull/14863#discussion_r459212646", "createdAt": "2020-07-23T04:48:49Z", "author": {"login": "highker"}, "path": "presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/query/PinotQueryGenerator.java", "diffHunk": "@@ -516,5 +514,42 @@ public PinotQueryGeneratorContext visitTopN(TopNNode node, PinotQueryGeneratorCo\n             checkSupported(node.getStep().equals(TopNNode.Step.SINGLE), \"Can only push single logical topn in\");\n             return context.withTopN(getOrderingScheme(node), node.getCount()).withOutputColumns(node.getOutputVariables());\n         }\n+\n+        @Override\n+        public PinotQueryGeneratorContext visitDistinctLimit(DistinctLimitNode node, PinotQueryGeneratorContext context)\n+        {\n+            context = node.getSource().accept(this, context);\n+            requireNonNull(context, \"context is null\");\n+            checkSupported(!forbidBrokerQueries, \"Cannot push distinctLimit in segment mode\");\n+            LinkedHashSet<VariableReferenceExpression> groupByColumns = new LinkedHashSet<>(node.getDistinctVariables());\n+            if (!useSqlSyntax) {\n+                // Handling PQL by adding hidden expression: count(*)\n+                // E.g. `SELECT DISTINCT A, B FROM myTable LIMIT 10`\n+                // In Pql mode, the generated pql is `SELECT count(*) FROM myTable GROUP BY A, B LIMIT 10`.\n+                checkSupported(!context.hasAggregation(), \"Aggregation already exists. Pinot doesn't support DistinctLimit with existing Aggregation\");\n+                checkSupported(!context.hasGroupBy(), \"GroupBy already exists. Pinot doesn't support DistinctLimit with existing GroupBy\");\n+                Map<VariableReferenceExpression, Selection> newSelections = new HashMap<>(context.getSelections());\n+                LinkedHashSet<VariableReferenceExpression> newOutputs = new LinkedHashSet<>(groupByColumns);\n+                Set<VariableReferenceExpression> hiddenColumnSet = new HashSet<>();\n+                setHiddenField(newSelections, newOutputs, hiddenColumnSet);\n+                return context.withAggregation(newSelections, newOutputs, groupByColumns, 1, hiddenColumnSet).withLimit(node.getLimit());\n+            }\n+            else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc25ce127f36de908ed162afb4f4f8f4a004d0de"}, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc25ce127f36de908ed162afb4f4f8f4a004d0de", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/bc25ce127f36de908ed162afb4f4f8f4a004d0de", "committedDate": "2020-07-22T04:55:56Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}, "afterCommit": {"oid": "0191ca143470689b203baa2560a59d4c819e7151", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/0191ca143470689b203baa2560a59d4c819e7151", "committedDate": "2020-07-23T08:40:33Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0191ca143470689b203baa2560a59d4c819e7151", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/0191ca143470689b203baa2560a59d4c819e7151", "committedDate": "2020-07-23T08:40:33Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}, "afterCommit": {"oid": "29047dba0da13d97e146e36b671b819837442a9e", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/29047dba0da13d97e146e36b671b819837442a9e", "committedDate": "2020-07-23T18:10:03Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "29047dba0da13d97e146e36b671b819837442a9e", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/29047dba0da13d97e146e36b671b819837442a9e", "committedDate": "2020-07-23T18:10:03Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}, "afterCommit": {"oid": "cd30cbc959fb7b5848d94fc0f115c123ac4e5aad", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/cd30cbc959fb7b5848d94fc0f115c123ac4e5aad", "committedDate": "2020-07-23T20:48:42Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d05ea764fa77281974955be23da7d567c60c00c", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/4d05ea764fa77281974955be23da7d567c60c00c", "committedDate": "2020-07-24T00:14:09Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd30cbc959fb7b5848d94fc0f115c123ac4e5aad", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/cd30cbc959fb7b5848d94fc0f115c123ac4e5aad", "committedDate": "2020-07-23T20:48:42Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}, "afterCommit": {"oid": "4d05ea764fa77281974955be23da7d567c60c00c", "author": {"user": {"login": "xiangfu0", "name": "Xiang Fu"}}, "url": "https://github.com/prestodb/presto/commit/4d05ea764fa77281974955be23da7d567c60c00c", "committedDate": "2020-07-24T00:14:09Z", "message": "Adding DistinctLimit pushdown support in Pinot Connector"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1291, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}