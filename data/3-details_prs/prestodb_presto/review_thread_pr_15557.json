{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0OTM0NzE3", "number": 15557, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxNzo0NjoxN1rOFNzAdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQwMTo0ODozOVrOFT2xcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwMDExNTA5OnYy", "diffSide": "RIGHT", "path": "presto-main/etc/catalog/kafka.properties", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxNzo0NjoxN1rOISNGsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMjozNzowMFrOITHpJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTk1OTk4NA==", "bodyText": "remove this", "url": "https://github.com/prestodb/presto/pull/15557#discussion_r555959984", "createdAt": "2021-01-12T17:46:17Z", "author": {"login": "yupeng9"}, "path": "presto-main/etc/catalog/kafka.properties", "diffHunk": "@@ -0,0 +1,6 @@\n+connector.name=kafka\n+kafka.table-names=tpch.kafka_availability_dca1d,kafka_availability_dca1d,kafka-availability-dca1d,hp.event.user.driver_app,test_topic\n+kafka.nodes=localhost:9092\n+\n+kafka.hide-internal-columns=false\n+kafka.table-description-dir=/Users/yayang/Code/presto/kafka", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e395de5602fe3db9c138f368b5e09c2effeb4718"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjkxOTA3Nw==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/15557#discussion_r556919077", "createdAt": "2021-01-13T22:37:00Z", "author": {"login": "yangy0000"}, "path": "presto-main/etc/catalog/kafka.properties", "diffHunk": "@@ -0,0 +1,6 @@\n+connector.name=kafka\n+kafka.table-names=tpch.kafka_availability_dca1d,kafka_availability_dca1d,kafka-availability-dca1d,hp.event.user.driver_app,test_topic\n+kafka.nodes=localhost:9092\n+\n+kafka.hide-internal-columns=false\n+kafka.table-description-dir=/Users/yayang/Code/presto/kafka", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTk1OTk4NA=="}, "originalCommit": {"oid": "e395de5602fe3db9c138f368b5e09c2effeb4718"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU2MzYzOTgxOnYy", "diffSide": "LEFT", "path": "presto-kafka/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQwMTo0NjoxMlrOIbjfkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQwMTo0NjoxMlrOIbjfkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTc2Mzk4Ng==", "bodyText": "keep the blank line", "url": "https://github.com/prestodb/presto/pull/15557#discussion_r565763986", "createdAt": "2021-01-28T01:46:12Z", "author": {"login": "beinan"}, "path": "presto-kafka/pom.xml", "diffHunk": "@@ -108,7 +108,6 @@\n             <artifactId>presto-common</artifactId>\n             <scope>provided</scope>\n         </dependency>\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e395de5602fe3db9c138f368b5e09c2effeb4718"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU2MzY0NjU3OnYy", "diffSide": "RIGHT", "path": "presto-kafka/src/test/java/com/facebook/presto/kafka/TestKafkaIntegrationSmokeTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQwMTo0ODozOVrOIbjjHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQwMTo0ODozOVrOIbjjHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTc2NDg5NQ==", "bodyText": "remove the extra tab", "url": "https://github.com/prestodb/presto/pull/15557#discussion_r565764895", "createdAt": "2021-01-28T01:48:39Z", "author": {"login": "beinan"}, "path": "presto-kafka/src/test/java/com/facebook/presto/kafka/TestKafkaIntegrationSmokeTest.java", "diffHunk": "@@ -49,25 +49,25 @@ public TestKafkaIntegrationSmokeTest(EmbeddedKafka embeddedKafka)\n         this.embeddedKafka = embeddedKafka;\n     }\n \n-    @Test(dataProvider = \"testRoundTripAllFormatsDataProvider\")\n+    @Test(dataProvider = \"roundTripAllFormatsDataProvider\")\n     public void testRoundTripAllFormats(RoundTripTestCase testCase)\n     {\n         assertUpdate(\"INSERT into write_test.\" + testCase.getTableName() +\n                 \" (\" + testCase.getFieldNames() + \")\" +\n                 \" VALUES \" + testCase.getRowValues(), testCase.getNumRows());\n         assertQuery(\"SELECT \" + testCase.getFieldNames() + \" FROM write_test.\" + testCase.getTableName() +\n-                \" WHERE f_bigint > 1\",\n+                        \" WHERE f_bigint > 1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e395de5602fe3db9c138f368b5e09c2effeb4718"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3315, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}