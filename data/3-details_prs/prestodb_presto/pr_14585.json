{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MjcyNzE3", "number": 14585, "title": "Use local private credentials (json key file) to refresh GCS access token", "bodyText": "Generating and refresh GCS access token by the local private credentials (json key file)\nSupport the credentials of either \"service_account\" or \"authorized_user\" type\nAdded to both presto-cli and presto-jdbc\n== RELEASE NOTES ==\n\nGeneral Changes\n* Use local private credentials (json key file) to refresh GCS access token\npresto-cli --extra-credential hive.gcs.credentials.path=\"${PRIVATE_KEY_JSON_PATH}\"", "createdAt": "2020-05-28T06:16:21Z", "url": "https://github.com/prestodb/presto/pull/14585", "merged": true, "mergeCommit": {"oid": "24ac335a4da1c2de3f02d9d2dd61fc949bce45ba"}, "closed": true, "closedAt": "2020-08-02T19:10:39Z", "author": {"login": "beinan"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclzETGAFqTQyMDQxOTMzNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc62lBWABqjM2MTMwMjk2MTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNDE5MzM1", "url": "https://github.com/prestodb/presto/pull/14585#pullrequestreview-420419335", "createdAt": "2020-05-28T19:24:24Z", "commit": {"oid": "4e3b2d647675badb8df03c3d5cf78f72ff184f40"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxOToyNDoyNVrOGcDSvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxOTozMDo0OFrOGcDflQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2NzI2Mw==", "bodyText": "Do we need to hardcode the URL here? Maybe we can move it to a static variable.", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432067263", "createdAt": "2020-05-28T19:24:25Z", "author": {"login": "ChunxuTang"}, "path": "presto-client/src/main/java/com/facebook/presto/client/GCSOAuthInterceptor.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.client;\n+\n+import com.google.auth.oauth2.AccessToken;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import okhttp3.Interceptor;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import static com.facebook.presto.client.PrestoHeaders.PRESTO_EXTRA_CREDENTIAL;\n+import static java.util.Objects.requireNonNull;\n+\n+public class GCSOAuthInterceptor\n+        implements Interceptor\n+{\n+    public static final String GCS_CREDENTIALS_PATH_KEY = \"hive.gcs.credentials.path\";\n+    private static final String GCS_CREDENTIALS_OAUTH_TOKEN_KEY = \"hive.gcs.oauth\";\n+\n+    private String credentialsFilePath;\n+\n+    private GoogleCredentials credentials;\n+\n+    public GCSOAuthInterceptor(String credentialPath)\n+    {\n+        this.credentialsFilePath = requireNonNull(credentialPath);\n+    }\n+\n+    @Override\n+    public Response intercept(Chain chain)\n+            throws IOException\n+    {\n+        return chain.proceed(attachGCSAccessToken(chain.request()));\n+    }\n+\n+    private Request attachGCSAccessToken(Request request)\n+    {\n+        AccessToken token = getCredentials().getAccessToken();\n+        return request.newBuilder()\n+                .addHeader(PRESTO_EXTRA_CREDENTIAL, GCS_CREDENTIALS_OAUTH_TOKEN_KEY + \"=\" + token.getTokenValue())\n+                .build();\n+    }\n+\n+    private synchronized GoogleCredentials getCredentials()\n+    {\n+        if (credentials == null) {\n+            credentials = createCredentials();\n+        }\n+        try {\n+            credentials.refreshIfExpired();\n+        }\n+        catch (IOException e) {\n+            throw new ClientException(\"Google credential refreshing error\", e);\n+        }\n+        return credentials;\n+    }\n+\n+    private GoogleCredentials createCredentials()\n+    {\n+        try {\n+            return GoogleCredentials.fromStream(new FileInputStream(credentialsFilePath)).createScoped(Collections.singleton(\"https://www.googleapis.com/auth/devstorage.read_only\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e3b2d647675badb8df03c3d5cf78f72ff184f40"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2ODM4NA==", "bodyText": "The GCP documentation here (https://developers.google.com/identity/protocols/oauth2) recommends creating a signed JWT with the client ID and a private key from the GCP credential. Is this step automatically covered in the Google OAuth libs?", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432068384", "createdAt": "2020-05-28T19:26:34Z", "author": {"login": "ChunxuTang"}, "path": "presto-client/src/main/java/com/facebook/presto/client/GCSOAuthInterceptor.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.client;\n+\n+import com.google.auth.oauth2.AccessToken;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import okhttp3.Interceptor;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import static com.facebook.presto.client.PrestoHeaders.PRESTO_EXTRA_CREDENTIAL;\n+import static java.util.Objects.requireNonNull;\n+\n+public class GCSOAuthInterceptor\n+        implements Interceptor\n+{\n+    public static final String GCS_CREDENTIALS_PATH_KEY = \"hive.gcs.credentials.path\";\n+    private static final String GCS_CREDENTIALS_OAUTH_TOKEN_KEY = \"hive.gcs.oauth\";\n+\n+    private String credentialsFilePath;\n+\n+    private GoogleCredentials credentials;\n+\n+    public GCSOAuthInterceptor(String credentialPath)\n+    {\n+        this.credentialsFilePath = requireNonNull(credentialPath);\n+    }\n+\n+    @Override\n+    public Response intercept(Chain chain)\n+            throws IOException\n+    {\n+        return chain.proceed(attachGCSAccessToken(chain.request()));\n+    }\n+\n+    private Request attachGCSAccessToken(Request request)\n+    {\n+        AccessToken token = getCredentials().getAccessToken();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e3b2d647675badb8df03c3d5cf78f72ff184f40"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA3MDU0OQ==", "bodyText": "Is the synchronized keyword necessary here? Will this function be invoked in a multi-threaded situation?", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432070549", "createdAt": "2020-05-28T19:30:48Z", "author": {"login": "ChunxuTang"}, "path": "presto-client/src/main/java/com/facebook/presto/client/GCSOAuthInterceptor.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.client;\n+\n+import com.google.auth.oauth2.AccessToken;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import okhttp3.Interceptor;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import static com.facebook.presto.client.PrestoHeaders.PRESTO_EXTRA_CREDENTIAL;\n+import static java.util.Objects.requireNonNull;\n+\n+public class GCSOAuthInterceptor\n+        implements Interceptor\n+{\n+    public static final String GCS_CREDENTIALS_PATH_KEY = \"hive.gcs.credentials.path\";\n+    private static final String GCS_CREDENTIALS_OAUTH_TOKEN_KEY = \"hive.gcs.oauth\";\n+\n+    private String credentialsFilePath;\n+\n+    private GoogleCredentials credentials;\n+\n+    public GCSOAuthInterceptor(String credentialPath)\n+    {\n+        this.credentialsFilePath = requireNonNull(credentialPath);\n+    }\n+\n+    @Override\n+    public Response intercept(Chain chain)\n+            throws IOException\n+    {\n+        return chain.proceed(attachGCSAccessToken(chain.request()));\n+    }\n+\n+    private Request attachGCSAccessToken(Request request)\n+    {\n+        AccessToken token = getCredentials().getAccessToken();\n+        return request.newBuilder()\n+                .addHeader(PRESTO_EXTRA_CREDENTIAL, GCS_CREDENTIALS_OAUTH_TOKEN_KEY + \"=\" + token.getTokenValue())\n+                .build();\n+    }\n+\n+    private synchronized GoogleCredentials getCredentials()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e3b2d647675badb8df03c3d5cf78f72ff184f40"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzY3OTA1", "url": "https://github.com/prestodb/presto/pull/14585#pullrequestreview-421367905", "createdAt": "2020-05-30T01:53:03Z", "commit": {"oid": "745a04286c14c3827ac79c378eaa2d1f1eb65484"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMTo1MzowM1rOGcv_Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMTo1NzozMlrOGcwAqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTUxOA==", "bodyText": "add one blank line between private static final and private final", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432799518", "createdAt": "2020-05-30T01:53:03Z", "author": {"login": "zhenxiao"}, "path": "presto-client/src/main/java/com/facebook/presto/client/GCSOAuthHandler.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.client;\n+\n+import com.google.auth.oauth2.AccessToken;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import okhttp3.Authenticator;\n+import okhttp3.Interceptor;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+import okhttp3.Route;\n+\n+import javax.annotation.Nullable;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import static com.facebook.presto.client.PrestoHeaders.PRESTO_EXTRA_CREDENTIAL;\n+import static java.util.Objects.requireNonNull;\n+\n+public class GCSOAuthHandler\n+        implements Interceptor, Authenticator\n+{\n+\n+    public static final String GCS_CREDENTIALS_PATH_KEY = \"hive.gcs.credentials.path\";\n+    private static final String GCS_CREDENTIALS_OAUTH_TOKEN_KEY = \"hive.gcs.oauth\";\n+    private final ClientSession session;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "745a04286c14c3827ac79c378eaa2d1f1eb65484"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTUzMw==", "bodyText": "shall we keep hive here? kind of misleading. If the session property is already defined, could we import the string from other class?", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432799533", "createdAt": "2020-05-30T01:53:20Z", "author": {"login": "zhenxiao"}, "path": "presto-client/src/main/java/com/facebook/presto/client/GCSOAuthHandler.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.client;\n+\n+import com.google.auth.oauth2.AccessToken;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import okhttp3.Authenticator;\n+import okhttp3.Interceptor;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+import okhttp3.Route;\n+\n+import javax.annotation.Nullable;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import static com.facebook.presto.client.PrestoHeaders.PRESTO_EXTRA_CREDENTIAL;\n+import static java.util.Objects.requireNonNull;\n+\n+public class GCSOAuthHandler\n+        implements Interceptor, Authenticator\n+{\n+\n+    public static final String GCS_CREDENTIALS_PATH_KEY = \"hive.gcs.credentials.path\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "745a04286c14c3827ac79c378eaa2d1f1eb65484"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTU1NA==", "bodyText": "remove this blank line", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432799554", "createdAt": "2020-05-30T01:53:33Z", "author": {"login": "zhenxiao"}, "path": "presto-client/src/main/java/com/facebook/presto/client/GCSOAuthHandler.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.client;\n+\n+import com.google.auth.oauth2.AccessToken;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import okhttp3.Authenticator;\n+import okhttp3.Interceptor;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+import okhttp3.Route;\n+\n+import javax.annotation.Nullable;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import static com.facebook.presto.client.PrestoHeaders.PRESTO_EXTRA_CREDENTIAL;\n+import static java.util.Objects.requireNonNull;\n+\n+public class GCSOAuthHandler\n+        implements Interceptor, Authenticator\n+{\n+\n+    public static final String GCS_CREDENTIALS_PATH_KEY = \"hive.gcs.credentials.path\";\n+    private static final String GCS_CREDENTIALS_OAUTH_TOKEN_KEY = \"hive.gcs.oauth\";\n+    private final ClientSession session;\n+\n+    private String credentialsFilePath;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "745a04286c14c3827ac79c378eaa2d1f1eb65484"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTcxMw==", "bodyText": "make constant:\nhttps://www.googleapis.com/auth/devstorage.read_only", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432799713", "createdAt": "2020-05-30T01:55:44Z", "author": {"login": "zhenxiao"}, "path": "presto-client/src/main/java/com/facebook/presto/client/GCSOAuthHandler.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.client;\n+\n+import com.google.auth.oauth2.AccessToken;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import okhttp3.Authenticator;\n+import okhttp3.Interceptor;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+import okhttp3.Route;\n+\n+import javax.annotation.Nullable;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import static com.facebook.presto.client.PrestoHeaders.PRESTO_EXTRA_CREDENTIAL;\n+import static java.util.Objects.requireNonNull;\n+\n+public class GCSOAuthHandler\n+        implements Interceptor, Authenticator\n+{\n+\n+    public static final String GCS_CREDENTIALS_PATH_KEY = \"hive.gcs.credentials.path\";\n+    private static final String GCS_CREDENTIALS_OAUTH_TOKEN_KEY = \"hive.gcs.oauth\";\n+    private final ClientSession session;\n+\n+    private String credentialsFilePath;\n+\n+    private GoogleCredentials credentials;\n+\n+    public GCSOAuthHandler(ClientSession session)\n+    {\n+        this.session = requireNonNull(session);\n+        this.credentialsFilePath = session.getExtraCredentials().get(GCS_CREDENTIALS_PATH_KEY);\n+    }\n+\n+    @Nullable\n+    @Override\n+    public Request authenticate(Route route, Response response)\n+            throws IOException\n+    {\n+        return attachGCSAccessToken(response.request());\n+    }\n+\n+    @Override\n+    public Response intercept(Chain chain)\n+            throws IOException\n+    {\n+        try {\n+            return chain.proceed(attachGCSAccessToken(chain.request()));\n+        }\n+        catch (ClientException ignored) {\n+            return chain.proceed(chain.request());\n+        }\n+    }\n+\n+    private Request attachGCSAccessToken(Request request)\n+    {\n+        AccessToken token = getCredentials().getAccessToken();\n+        return request.newBuilder()\n+                .addHeader(PRESTO_EXTRA_CREDENTIAL, GCS_CREDENTIALS_OAUTH_TOKEN_KEY + \"=\" + token.getTokenValue())\n+                .build();\n+    }\n+\n+    private synchronized GoogleCredentials getCredentials()\n+    {\n+        if (credentials == null) {\n+            credentials = createCredentials();\n+        }\n+        try {\n+            credentials.refreshIfExpired();\n+        }\n+        catch (IOException e) {\n+            throw new ClientException(\"Google credential refreshing error\", e);\n+        }\n+        return credentials;\n+    }\n+\n+    private GoogleCredentials createCredentials()\n+    {\n+        try {\n+            return GoogleCredentials.fromStream(new FileInputStream(credentialsFilePath)).createScoped(Collections.singleton(\"https://www.googleapis.com/auth/devstorage.read_only\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "745a04286c14c3827ac79c378eaa2d1f1eb65484"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTc5MA==", "bodyText": "oh, this PR is a dependency of:\nprestodb/presto-hadoop-apache2#43", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432799790", "createdAt": "2020-05-30T01:56:28Z", "author": {"login": "zhenxiao"}, "path": "pom.xml", "diffHunk": "@@ -548,7 +548,7 @@\n             <dependency>\n                 <groupId>com.facebook.presto.hadoop</groupId>\n                 <artifactId>hadoop-apache2</artifactId>\n-                <version>2.7.4-7</version>\n+                <version>2.7.4-8-beinan</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddfb2d3f7e3fc09070625b8fd8dac59426c9c3c7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5OTkxNA==", "bodyText": "static import GCSOAuthInterceptor.GCS_CREDENTIALS_PATH_KEY", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r432799914", "createdAt": "2020-05-30T01:57:32Z", "author": {"login": "zhenxiao"}, "path": "presto-jdbc/src/main/java/com/facebook/presto/jdbc/PrestoDriverUri.java", "diffHunk": "@@ -186,6 +188,10 @@ public void setupClient(OkHttpClient.Builder builder)\n                                 .orElseGet(() -> defaultCredentialCachePath().map(File::new).orElse(null))));\n             }\n \n+            Map<String, String> extraCredentials = EXTRA_CREDENTIALS.getValue(properties).orElse(ImmutableMap.of());\n+            Optional.ofNullable(extraCredentials.get(GCSOAuthInterceptor.GCS_CREDENTIALS_PATH_KEY))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd37a79efb808264f56aab5e25cecbaad6595ff"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4e3b2d647675badb8df03c3d5cf78f72ff184f40", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/4e3b2d647675badb8df03c3d5cf78f72ff184f40", "committedDate": "2020-05-28T05:57:50Z", "message": "Fix transitive dependencies conflict of google oauth libraries"}, "afterCommit": {"oid": "11bc554bdaf2ef39660130e19a649d2aa43408cc", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/11bc554bdaf2ef39660130e19a649d2aa43408cc", "committedDate": "2020-07-17T08:52:55Z", "message": "Fix transitive dependencies conflict of google oauth libraries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6de3aa26245600deb46663284f35f271a0b91d7f", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/6de3aa26245600deb46663284f35f271a0b91d7f", "committedDate": "2020-07-29T18:39:43Z", "message": "Implement GCS OAuth token handler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b335f32837bf31750f1d4a98d7c1f8352ea3b3c", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/6b335f32837bf31750f1d4a98d7c1f8352ea3b3c", "committedDate": "2020-07-29T18:40:57Z", "message": "Make QueryRunner support GCS private key handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2985af79e58e628cf6d9005baab73e4aca628a49", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/2985af79e58e628cf6d9005baab73e4aca628a49", "committedDate": "2020-07-29T18:40:58Z", "message": "Make presto jdbc driver support Google OAuth private key handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83931d3a88948ceaa9fc870ac00ab8422b95f6dd", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/83931d3a88948ceaa9fc870ac00ab8422b95f6dd", "committedDate": "2020-07-29T18:42:25Z", "message": "Fix transitive dependencies conflict of google oauth libraries"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "11bc554bdaf2ef39660130e19a649d2aa43408cc", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/11bc554bdaf2ef39660130e19a649d2aa43408cc", "committedDate": "2020-07-17T08:52:55Z", "message": "Fix transitive dependencies conflict of google oauth libraries"}, "afterCommit": {"oid": "47236c34513b1dbe60bfa73cd9a77b4c356ca3a4", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/47236c34513b1dbe60bfa73cd9a77b4c356ca3a4", "committedDate": "2020-07-31T07:59:09Z", "message": "Add Google OAuth scopes to extra credentials"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "47236c34513b1dbe60bfa73cd9a77b4c356ca3a4", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/47236c34513b1dbe60bfa73cd9a77b4c356ca3a4", "committedDate": "2020-07-31T07:59:09Z", "message": "Add Google OAuth scopes to extra credentials"}, "afterCommit": {"oid": "56c88e10d6dd7bcb6e94eb96be91091b4a0dad02", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/56c88e10d6dd7bcb6e94eb96be91091b4a0dad02", "committedDate": "2020-07-31T08:04:18Z", "message": "Add Google OAuth scopes to extra credentials"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e852a2b6791288ed358354d987c6d5ac57815fc2", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/e852a2b6791288ed358354d987c6d5ac57815fc2", "committedDate": "2020-07-31T18:46:44Z", "message": "Add Google OAuth scopes to extra credentials"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56c88e10d6dd7bcb6e94eb96be91091b4a0dad02", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/56c88e10d6dd7bcb6e94eb96be91091b4a0dad02", "committedDate": "2020-07-31T08:04:18Z", "message": "Add Google OAuth scopes to extra credentials"}, "afterCommit": {"oid": "e852a2b6791288ed358354d987c6d5ac57815fc2", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/e852a2b6791288ed358354d987c6d5ac57815fc2", "committedDate": "2020-07-31T18:46:44Z", "message": "Add Google OAuth scopes to extra credentials"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NDE2ODI2", "url": "https://github.com/prestodb/presto/pull/14585#pullrequestreview-459416826", "createdAt": "2020-07-31T19:34:21Z", "commit": {"oid": "e852a2b6791288ed358354d987c6d5ac57815fc2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxOTozNDoyMVrOG6Tybg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxOTozNDozNlrOG6TyzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc5NDc5OA==", "bodyText": "shall we keep the blank line?", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r463794798", "createdAt": "2020-07-31T19:34:21Z", "author": {"login": "zhenxiao"}, "path": "pom.xml", "diffHunk": "@@ -1174,7 +1185,6 @@\n                     </exclusion>\n                 </exclusions>\n             </dependency>\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e852a2b6791288ed358354d987c6d5ac57815fc2"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc5NDg5Mw==", "bodyText": "keep the blank line for format", "url": "https://github.com/prestodb/presto/pull/14585#discussion_r463794893", "createdAt": "2020-07-31T19:34:36Z", "author": {"login": "zhenxiao"}, "path": "pom.xml", "diffHunk": "@@ -1158,7 +1170,6 @@\n                     </exclusion>\n                 </exclusions>\n             </dependency>\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e852a2b6791288ed358354d987c6d5ac57815fc2"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NTIwNjEw", "url": "https://github.com/prestodb/presto/pull/14585#pullrequestreview-459520610", "createdAt": "2020-07-31T23:19:02Z", "commit": {"oid": "35757874e467768be72f16f7c30b32d7e3bb9e34"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "35757874e467768be72f16f7c30b32d7e3bb9e34", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/35757874e467768be72f16f7c30b32d7e3bb9e34", "committedDate": "2020-07-31T20:31:55Z", "message": "Add blank line for format"}, "afterCommit": {"oid": "f3b747de9e4d0981e95803478afe024965db94db", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/f3b747de9e4d0981e95803478afe024965db94db", "committedDate": "2020-07-31T23:29:14Z", "message": "Add blank line for format"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3b747de9e4d0981e95803478afe024965db94db", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/f3b747de9e4d0981e95803478afe024965db94db", "committedDate": "2020-07-31T23:29:14Z", "message": "Add blank line for format"}, "afterCommit": {"oid": "b17a3e0c0eb193cd357032895f7f4b57bbba3cb9", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/b17a3e0c0eb193cd357032895f7f4b57bbba3cb9", "committedDate": "2020-08-01T04:34:22Z", "message": "Add blank line for format"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b17a3e0c0eb193cd357032895f7f4b57bbba3cb9", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/b17a3e0c0eb193cd357032895f7f4b57bbba3cb9", "committedDate": "2020-08-01T04:34:22Z", "message": "Add blank line for format"}, "afterCommit": {"oid": "09af78c60303cc196f5f5cbdb746e1c68f68526b", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/09af78c60303cc196f5f5cbdb746e1c68f68526b", "committedDate": "2020-08-01T07:02:26Z", "message": "Add blank line for format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bb06893ebb96ec645ab6b8bfc394bb05184b752", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/5bb06893ebb96ec645ab6b8bfc394bb05184b752", "committedDate": "2020-08-02T05:28:37Z", "message": "Add blank line for format"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09af78c60303cc196f5f5cbdb746e1c68f68526b", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/09af78c60303cc196f5f5cbdb746e1c68f68526b", "committedDate": "2020-08-01T07:02:26Z", "message": "Add blank line for format"}, "afterCommit": {"oid": "5bb06893ebb96ec645ab6b8bfc394bb05184b752", "author": {"user": {"login": "beinan", "name": "Beinan"}}, "url": "https://github.com/prestodb/presto/commit/5bb06893ebb96ec645ab6b8bfc394bb05184b752", "committedDate": "2020-08-02T05:28:37Z", "message": "Add blank line for format"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1714, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}