{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MDM2MjQ1", "number": 14130, "title": "Add release notes for 0.232", "bodyText": "Missing Release Notes\nAndrii Rosa\n\n 2b56476 Run presto spark tests in forked VM\n e8b6042 Fix hostname related assertion failure in PrestoSparkQueryRunner\n\nDa Cheng\n\n #13709 Update Kafka connector to 2.3.1 (Merged by: Zhenxiao Luo)\n\nHaoyuan Li\n\n #13986 Add Alluxio Hive metastore (Merged by: James Sun)\n\nYuBin Li\n\n #14007 Support kerberos authentication for Kudu connector (Merged by: Wenlei Xie)\n\nqqibrow\n\n #14017 Fix Elasticsearch connector documentation (Merged by: Wenlei Xie)\n\nsujay-jain\n\n 7700a59 Revert \"Improve error message for the array_agg function\"\n\nwuyunfeng01\n\n #13987 Promote Elasticsearch scan performance with index sorting (Merged by: Zhenxiao Luo)\n\nExtracted Release Notes\n\n#13354 (Author: Ariel Weisberg): Add use-exact-partitioning-enabled session property\n\nAdd use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n\n\n#13717 (Author: Rebecca Schlussel): Support retries of streaming sections\n\nAdd support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\nAdd configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n\n\n#13799 (Author: Leiqing Cai): Support ALTER FUNCTION\n\nAdd support for ALTER FUNCTION.\n\n\n#13894 (Author: James Sun): Support internal communication with thrift\n\nAllow Presto nodes to shuffle data with Thrift protocol. Use config internal-communication.task-communication-protocol to control between HTTP and Thrift.\nAllow Presto nodes to announce state with Thrift protocol. Use config internal-communication.server-info-communication-protocol to control between HTTP and Thrift.\n\n\n#13931 (Author: Swapnil Tailor): Configure DB Resource Group reload frequency\n\nMaking database resource group reload frequency configurable.\n...\n\n\n#13934 (Author: Vic Zhang): Update error code when table is dropped during query execution\n\nWhen DROP TABLE query fails because the table has being dropped by other query before this query finishes,  change error code name from HIVE_METASTORE_ERROR to  HIVE_TABLE_DROPPED_DURING_QUERY.\n\n\n#13940 (Author: Timothy Meehan): Add t-digest functions to Presto\n\nAdd tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\nIsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n\n\n#13949 (Author: Leiqing Cai): Enable listing SQL function with session property\n\nSupport hiding user-defined SQL functions in SHOW FUNCTIONS with session property list_built_in_functions_only. This can also be achieved by configuration property list-built-in-functions-only, which is repurposed from list-non-built-in-functions.\n\n\n#13972 (Author: Leiqing Cai): Support MySQL-based FunctionNamespaceManager\n\nAdd a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:/admin/function-namespace-managers).\n\n\n#13974 (Author: Leiqing Cai): Extend SHOW FUNCTIONS\n\nAdd support to show whether functions have variable arity in SHOW FUNCTIONS.\nAdd support to show whether functions are built-in in SHOW FUNCTIONS.\n\n\n#13982 (Author: Rongrong Zhong): Cache builtin function resolution result\n\nImprove built-in function resolution performance by caching function resolution results.\n\n\n#13998 (Author: Igor Kruk): Improve correctness check for queries that produce columns of RowType\n\nAdd checks for the individual fields when validating a row column.\n\n\n#14010 (Author: Wenlei Xie): Support shuffle on Hive partition columns before write\n\nAllow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property shuffle_partitioned_columns_for_table_write. #14010.\n\n\n#14014 (Author: James Gill): Upgrade slice to 0.38\n\nUpgrade airlift/slice to 0.38.\n\n\n#14016 (Author: Ariel Weisberg): Add task memory related session properties\n\nAdded query_max_total_memory_per_node and query_max_memory_per_node session properties.\n\n\n#14018 (Author: Haoyuan Li): Add statistics handling to the Alluxio metastore support\n\nAdd statistics handling to the Alluxio metastore support.\n\n\n#14036 (Author: Igor Kruk): Improve correctness check for RowType columns\n\nAdd specific validation checks for the individual fields when validating a row column.\n\n\n#14039 (Author: Islam Ismailov): Account for page header in ORC output buffer\n\nAdd page header size accounting to ORC output buffer to avoid possible overflow.\n\n\n#14043 (Author: qqibrow): Expose Hive table properties via system table$properties table\n\nExpose Hive table properties via system table$properties table.\n\n\n#14047 (Author: Haoyuan Li): Update Alluxio version from 2.1.1 to 2.1.2\n\nUpdate Alluxio version from 2.1.1 to 2.1.2.\n\n\n#14057 (Author: Devesh Agrawal): Pinot bugs and making it work with the latest trunk pinot\n\nReplace config pinot.prefer-broker-queries with the inverse config pinot.forbid-broker-queries.\n\n\n#14059 (Author: Leiqing Cai): Update to Joda 2.10.5\n\nFix an issue where DATE_TRUNC may produce incorrect results at certain timestamp in America/Sao_Paulo.\n\n\n\nAll Commits\n\n2b56476 Run presto spark tests in forked VM (Andrii Rosa)\n7700a59 Revert \"Improve error message for the array_agg function\" (sujay-jain)\ne8b6042 Fix hostname related assertion failure in PrestoSparkQueryRunner (Andrii Rosa)\n44c044a Add documentation for SQL functions (Leiqing Cai)\nfbe0b3d Introduce MySql-based function namespace manager (Leiqing Cai)\na59bef8 Introduce db based function namespace manager (Leiqing Cai)\nc2c90c0 Use Return statement as the body for SQL-invoked functions (Leiqing Cai)\ndc129d8 Require function namespace manager to bind with catalog names (Leiqing Cai)\n56d063b Remove dependency of presto-sql-function from presto-main (Leiqing Cai)\n2de5d7f Improve correctness check for RowType columns (Igor Kruk)\n4c2010e Add retriedCpuTime to QueryCompletedEvent (Rebecca Schlussel)\n6525ea9 Naming cleanup in SqlQueryScheduler (Rebecca Schlussel)\n615feb5 Add support for retrying streaming sections (Rebecca Schlussel)\ne5eda57 Introduce LegacySqlQueryScheduler (Rebecca Schlussel)\nfe6ebcf Reorder fields and methods in SqlQueryScheduler (Rebecca Schlussel)\n4fd684b Make FixedSourcePartitionedScheduler more thread safe (Rebecca Schlussel)\nf789c54 Introduce method for empty StageExecutionInfo (Rebecca Schlussel)\n2e4d5a3 Remove id from StageExecutionInfo (Rebecca Schlussel)\nb84f177 Make ExecutionSchedule return StageExecutionAndScheduler (Rebecca Schlussel)\n3185bf4 Extract SectionExecutionFactory from SqlQueryScheduler (Rebecca Schlussel)\n08793ed Add exponential decay config to failure detector (Andrii Rosa)\n3eef1b0 Enable failure detector in tests (Rebecca Schlussel)\nb937625 Remove unused code from TestStageExecutionStateMachine (Rebecca Schlussel)\n85ed09a Add configuration property max-stage-retries (Rebecca Schlussel)\ne650db3 Minor refactor in SqlQueryScheduler (Rebecca Schlussel)\n7a4a741 Move opening split source to scheduler creation time (Rebecca Schlussel)\n4fd9aaf Log number of splits received for Presto-on-Spark task (Wenlei Xie)\nb490921 Update Airlift to 0.189 (Andrii Rosa)\na3f9aa3 Fail with informative error message if no Pinot expression is selected (Devesh Agrawal)\n1701b22 Avoid passing Content-Type header when Pinot request body is empty (Devesh Agrawal)\n74ad34b Rename preferBrokerQueries to its negate format forbidBrokerQueries (Devesh Agrawal)\nb05e09e Fix bug with pinot column scan index generation (Devesh Agrawal)\n4c7fc03 Add join pushdown predicate at the end of the exisiting predicate (Bhavani Hari)\nf638755 Allocate CPU quanta per query instead of per task (Andrii Rosa)\n46e6c92 Update proto utilities for the Database objects (Haoyuan Li)\n5833338 Support shuffle on Hive partition columns before write (Wenlei Xie)\nb4a186c Rename TableWriterNode#partitioningScheme to tablePartitioningScheme (Wenlei Xie)\n5a7074b Adding LIKE operator description (Oskar Austegard)\n47afe84 Update to Joda 2.10.5 (Leiqing Cai)\n10893a6 Account for page header in ORC output buffer (Islam Ismailov)\n8ac000d Add peak task memory in resource estimates (Andr\u00e9s Flores)\n1b45f49 Update alluxio version (Haoyuan Li)\n2dd6798 Fix recoverable grouped execution eligibility (Shixuan Fan)\n4f13800 Replace Joda-Time libraries with java.time (Ajay George)\n05310b7 Add statistics handling to the Alluxio metastore support (Haoyuan Li)\nfc8cb11 Expose Hive table properties via system table$properties table (qqibrow)\n0c5aa2d Improve correctness check for queries that produce columns of RowType (Igor Kruk)\nfc3d1ee Add task memory related session properties (Ariel Weisberg)\n8eb0192 Upgrade Kafka Connector to 2.3.1 (Da Cheng)\n1ec8138 Support kerberos authentication for Kudu connector (YuBin Li)\n66fb17c Fix target path typo in HiveWriter (James Sun)\na26f440 Optimize T-Digest structure for small distributions (Timothy Meehan)\n8296be0 Move PushdownSubfields below logical optimization (Saksham Sachdev)\n30f1db0 Cache mvnw (Tim Meehan)\ndcbbe44 Fix Elasticsearch connector documentation (Zhenxiao Luo)\n8a1bb1b Extend SHOW FUNCTIONS to display whether functions are built-in (Leiqing Cai)\nc3b0432 Extend SHOW FUNCTIONS to display whether functions have variable arity (Leiqing Cai)\n283e300 Fix testShowFunctions (Leiqing Cai)\nb1cda97 Upgrade slice to 0.38 (James Gill)\nc487827 Improve error message for the array_agg function (Sujay Jain)\n6eed9b9 Support mixed case fields in Elasticsearch (Zhenxiao Luo)\na9bbc6e Set predicate in EMPTY_TABLE_LAYOUT to none (Bhavani Hari)\n5106dc1 Add Alluxio Hive metastore (haoyuan)\nce5eeb7 Update error code when table is dropped during query execution (Vic Zhang)\n823da6f Evaluate filter only once per dictionary value (Masha Basmanova)\nd5ee715 Separate filter and no-filter code paths (Masha Basmanova)\nae5e74c Fix flaky TestRowExpressionPredicateExtractor (Ajay George)\ncd41fa5 Format comment and modify import style (wuyunfeng01)\nab55def Promote Elasticsearch scan performance with index sorting (wuyunfeng01)\nb34278e Properly handle optimizable filter expressions (Bhavani Hari)\nfb37c6e Add t-digest functions to Presto (Tim Meehan)\nd09e4df Migrate function isHidden to new visibility enum (Tim Meehan)\n63cf099 Allow FunctionNamespaceManager in DistributedQueryRunner (Rongrong Zhong)\n683474a Cache builtin function resolution result (Rongrong Zhong)\n2e96b92 Update access modifiers in BenchmarkSelectiveStreamReaders (Ying Su)\nf555aa6 Avoid Java stream in NodePartitioningManager#createArbitraryBucketToNode (Wenlei Xie)\n20c7af7 Make acknowledgeResults to return future (James Sun)\n9d47a24 Add server info client side thrift implementation (James Sun)\n8ffd650 Abstract RemoteNodeState HTTP implementation to HttpRemoteNodeState (James Sun)\n7416a8c Add server info server side thrift implementation (James Sun)\n9d030b5 Update NodeState with enum values (James Sun)\n8e44e9b Add TestHiveDistributedQueriesWithThriftRpc (James Sun)\nbe031b1 Rewrite page too large exception based on network protocols (James Sun)\n785eb79 Add thrift support for v1/task/results (James Sun)\na2e20c7 Add thrift communication protocol config (James Sun)\n6c9afc4 Add ThriftRpcShuffleClient implementation (James Sun)\n2f18683 Abstract exchange HTTP client to RpcShuffleClient (James Sun)\n5e8cae8 Rename HttpPageBufferClient to PageBufferClient (James Sun)\nf3443e7 Add thrift support for exchange server (James Sun)\n125d77a Announce thrift port for PrestoServer (James Sun)\n1f28b21 Initial support with Thrift RPC (Wenlei Xie)\n4b94470 Strip netty dependency from presto-cassandra (James Sun)\na49a812 Remove netty dependency from presto-mongodb (James Sun)\n0c28697 Strip netty dependency from presto-elasticsearch (James Sun)\n53e3648 Fix null pointer when using ConnectorSession (Ke Wang)\nc0fe702 Make presto-spark extensible to additional modules (Wenlei Xie)\ne64c4e2 Propagate legacyMapSubscript to selective map reader (Masha Basmanova)\nb7a74a2 Add legacyMapSubscript to SqlFunctionProperties (Masha Basmanova)\n500c6ba Add legacy_map_subscript hidden session property (Masha Basmanova)\ndcf7f66 Add comment to ActualProperties.Global.nullsAndAnyReplicated (Ariel Weisberg)\n9218834 Make PreferredProperties.mergeWithParent methods private (Ariel Weisberg)\n9a68dfe Add partitioning_precision_strategy session property (Ariel Weisberg)\n652ca6a Fix Pinot segment page source to use ColumnDataType (Devesh Agrawal)\nb6325d9 Refactor ReorderJoins to use RowExpressions (Saksham Sachdev)\neabf46f Increase heap memory to avoid continuous Full GCs (Ajay George)\nff6dd73 Update to Airbase 98 and Aiftlift 0.188 (Leiqing Cai)\n32ca539 Configure DB Resource Group reload frequency (Swapnil Tailor)\n386164e Support ALTER FUNCTION (Leiqing Cai)\n48b2fee Add syntax support for ALTER FUNCTION (Leiqing Cai)\n68f2d6f Format parameter types in one line in DROP FUNCTION (Leiqing Cai)\n0278615 Use builder to construct RoutineCharacteristics (Leiqing Cai)\n76ee53c Add end-to-end test for Presto on Spark using Docker (Andrii Rosa)\na7aa342 Add Spark launcher (Andrii Rosa)\nf074113 Generate Presto on Spark tar.gz package (Andrii Rosa)\ncb5a00d Presto on Spark initial commit (Andrii Rosa)\ncc398f5 Add benchmark for BytesValues (Ke Wang)\nfc695e0 Optimize NOT IN filter for strings (Ke Wang)\n422d7a9 Rename isNanAllowed function and update comment (Ke Wang)\n479e655 Enable listing SQL functions with session property (Leiqing Cai)", "createdAt": "2020-02-20T23:53:04Z", "url": "https://github.com/prestodb/presto/pull/14130", "merged": true, "mergeCommit": {"oid": "15c179c7853bb4be5394f70d3645aaf602af974a"}, "closed": true, "closedAt": "2020-02-26T01:32:46Z", "author": {"login": "caithagoras"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHPgO0ABqjMwNjM3MTE4NzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH566EgFqTM2NDQ5ODg5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9cf19a18f1db02815c1b3b9a2db0d6544650ea7b", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/9cf19a18f1db02815c1b3b9a2db0d6544650ea7b", "committedDate": "2020-02-20T23:52:56Z", "message": "Add release notes for 0.232"}, "afterCommit": {"oid": "98c681cd592d9ce9a8fb65aa4f1bc172ee2e71a1", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/98c681cd592d9ce9a8fb65aa4f1bc172ee2e71a1", "committedDate": "2020-02-23T21:06:46Z", "message": "Add release notes for 0.232"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98c681cd592d9ce9a8fb65aa4f1bc172ee2e71a1", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/98c681cd592d9ce9a8fb65aa4f1bc172ee2e71a1", "committedDate": "2020-02-23T21:06:46Z", "message": "Add release notes for 0.232"}, "afterCommit": {"oid": "455e9aac691a3a54c2c7123a04e6ef38934bd87b", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/455e9aac691a3a54c2c7123a04e6ef38934bd87b", "committedDate": "2020-02-23T21:31:23Z", "message": "Add release notes for 0.232"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "455e9aac691a3a54c2c7123a04e6ef38934bd87b", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/455e9aac691a3a54c2c7123a04e6ef38934bd87b", "committedDate": "2020-02-23T21:31:23Z", "message": "Add release notes for 0.232"}, "afterCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "committedDate": "2020-02-23T21:33:48Z", "message": "Add release notes for 0.232"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNDkxNjU5", "url": "https://github.com/prestodb/presto/pull/14130#pullrequestreview-363491659", "createdAt": "2020-02-24T15:49:08Z", "commit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "state": "COMMENTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo0OTowOFrOFtllMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjowNToyNVrOFtmO8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NTk3MQ==", "bodyText": "Add rather than Added", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383345971", "createdAt": "2020-02-24T15:49:08Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NjM5Mg==", "bodyText": "Maybe note the default value", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383346392", "createdAt": "2020-02-24T15:49:49Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0Njk4MA==", "bodyText": "that's not a note?", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383346980", "createdAt": "2020-02-24T15:50:38Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0ODA2Mw==", "bodyText": "Add configuration property xxx to control the frequency of reloading resource group information from the database.  The default value is yyy.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383348063", "createdAt": "2020-02-24T15:52:15Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0ODk4OQ==", "bodyText": "what does \"which is repurposed from list-non-build-in-functions\" mean?", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383348989", "createdAt": "2020-02-24T15:53:34Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0OTIyMA==", "bodyText": "what's the difference between these two notes?", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383349220", "createdAt": "2020-02-24T15:53:53Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MDQyNA==", "bodyText": "Replace ``isHidden`` attribute on AggregationFunction and ScalarFunction with ``visibility``.\n\nWhat values can visibility have, and what do they mean?", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383350424", "createdAt": "2020-02-24T15:55:45Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MTYyMA==", "bodyText": "to reference a pr use\n:pr:14010", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383351620", "createdAt": "2020-02-24T15:57:32Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MjU4MQ==", "bodyText": "Add support for handling statistics to the Alluxio metastore\nAlso, does \"handling statistics\" mean?  Does that mean like for cost-based optimization?", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383352581", "createdAt": "2020-02-24T15:58:54Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.\n+* Add statistics handling to the Alluxio metastore support.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1Mjc3NQ==", "bodyText": "what does this mean? Is it user facing?", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383352775", "createdAt": "2020-02-24T15:59:14Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1NDUxMQ==", "bodyText": "Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383354511", "createdAt": "2020-02-24T16:01:58Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.\n+* Add statistics handling to the Alluxio metastore support.\n+* Expose Hive table properties via system table$properties table.\n+* When ``DROP TABLE`` query fails because the table has being dropped by other query before this query finishes,  change error code name from ``HIVE_METASTORE_ERROR`` to  ``HIVE_TABLE_DROPPED_DURING_QUERY``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1NjY1OQ==", "bodyText": "Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximmum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383356659", "createdAt": "2020-02-24T16:05:25Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/feb736dff71c750a0891f94f1ff6fd86f13ac9ff", "committedDate": "2020-02-23T21:33:48Z", "message": "Add release notes for 0.232"}, "afterCommit": {"oid": "4df0f18ef47d633e57728a1462875e28d3871c2b", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/4df0f18ef47d633e57728a1462875e28d3871c2b", "committedDate": "2020-02-24T22:55:18Z", "message": "Add release notes for 0.232"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MjQ4MjA3", "url": "https://github.com/prestodb/presto/pull/14130#pullrequestreview-364248207", "createdAt": "2020-02-25T15:45:32Z", "commit": {"oid": "4df0f18ef47d633e57728a1462875e28d3871c2b"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo0NTozM1rOFuLQaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo1NTo1OFrOFuLsfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk2MzI0MA==", "bodyText": "the double backticks should be after \"node\" and not \"session\"", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383963240", "createdAt": "2020-02-25T15:45:33Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node session`` properties.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df0f18ef47d633e57728a1462875e28d3871c2b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk2NTA2NA==", "bodyText": "Is this an SPI change?  It just looks like some added functions.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383965064", "createdAt": "2020-02-25T15:48:14Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node session`` properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add config ``internal-communication.task-communication-protocol`` to support Presto nodes to shuffle data with Thrift protocol. Use HTTP or Thrift.\n+* Add config ``internal-communication.server-info-communication-protocol`` to support Presto nodes to announce state with Thrift protocol. Use HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+\n+Kudu Changes\n+_____________\n+* Add kerberos authentication.\n+\n+Kafka changes\n+_____________\n+* Update kafka connector to 2.3.1, which improves implementation and performance (:pr:`13709`).\n+\n+Pinot Changes\n+_____________\n+* Replace config ``pinot.prefer-broker-queries`` with the inverse config ``pinot.forbid-broker-queries``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df0f18ef47d633e57728a1462875e28d3871c2b"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk2NTk2Mg==", "bodyText": "Add support for using the Thrift protocol to shuffle data.  This can be configured using the configuration property internal-communication.task-communication-protocol.  Possible values are HTTP or Thrift.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383965962", "createdAt": "2020-02-25T15:49:31Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node session`` properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add config ``internal-communication.task-communication-protocol`` to support Presto nodes to shuffle data with Thrift protocol. Use HTTP or Thrift.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df0f18ef47d633e57728a1462875e28d3871c2b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk2NzkzOQ==", "bodyText": "Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property  internal-communication.server-info-communication-protocol.  Possible values are HTTP or Thrift.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383967939", "createdAt": "2020-02-25T15:52:27Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node session`` properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add config ``internal-communication.task-communication-protocol`` to support Presto nodes to shuffle data with Thrift protocol. Use HTTP or Thrift.\n+* Add config ``internal-communication.server-info-communication-protocol`` to support Presto nodes to announce state with Thrift protocol. Use HTTP or Thrift.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df0f18ef47d633e57728a1462875e28d3871c2b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk3MDQzMQ==", "bodyText": "What would the user have seen? Is the following correct:\nFix an issue where queries could fail with buffer overflow when writing ORC files.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r383970431", "createdAt": "2020-02-25T15:55:58Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,45 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions. (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query.  The number of retries allowed can be configured using the configuration property max-stage-retries and session property max_stage_retries. The default value is zero.  To take advantage of this feature, exchange_materialization_strategy must be set to 'ALL'.\n+* Add configuration property use-legacy-scheduler and session property use_legacy_scheduler to use a version of the query scheduler from before refactorings to enable full stage retries.  The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler.  This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Update Alluxio version from 2.1.1 to 2.1.2.\n+* Added query_max_total_memory_per_node and query_max_memory_per_node session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Upgrade airlift/slice to 0.38.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Allow Presto nodes to shuffle data with Thrift protocol. Use config `internal-communication.task-communication-protocol` to control between HTTP and Thrift.\n+* Allow Presto nodes to announce state with Thrift protocol. Use config `internal-communication.server-info-communication-protocol` to control between HTTP and Thrift.\n+* Add use_exact_partitioning session property that forces repartitioning if repartitioning is possible.\n+* Making database resource group reload frequency configurable.\n+* ...\n+* Add support for ``ALTER FUNCTION``.\n+* Support hiding user-defined SQL functions in ``SHOW FUNCTIONS`` with session property ``list_built_in_functions_only``. This can also be achieved by configuration property ``list-built-in-functions-only``, which is repurposed from ``list-non-built-in-functions``.\n+\n+Verifier Changes\n+________________\n+* Add specific validation checks for the individual fields when validating a row column.\n+* Add checks for the individual fields when validating a row column.\n+\n+SPI Changes\n+___________\n+* Add tdigest_agg, merge(tdigest), value_at_quantile(tdigest, quantile), values_at_quantiles(tdigest, quantiles), quantile_at_value(tdigest, quantile), quantiles_at_values(tdigest, quantile) for creating, merging, and querying t-digests.\n+* IsHidden attribute on AggregationFunction and ScalarFunction removed and replaced with visibility.\n+\n+Hive Changes\n+____________\n+* Allow shuffle on partitioned columns when writing to partitioned unbucketed Hive tables. This increase the number of maximum partitions written in single query by a factor of number of total writing workers.This behavior has to be explicitly enabled by Connector session property `shuffle_partitioned_columns_for_table_write`. #14010.\n+* Add page header size accounting to ORC output buffer to avoid possible overflow.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1Mjc3NQ=="}, "originalCommit": {"oid": "feb736dff71c750a0891f94f1ff6fd86f13ac9ff"}, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4df0f18ef47d633e57728a1462875e28d3871c2b", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/4df0f18ef47d633e57728a1462875e28d3871c2b", "committedDate": "2020-02-24T22:55:18Z", "message": "Add release notes for 0.232"}, "afterCommit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/70a9c0dd52409050dd6adecfe3832a263267969f", "committedDate": "2020-02-25T19:51:06Z", "message": "Add release notes for 0.232"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDA1MDY0", "url": "https://github.com/prestodb/presto/pull/14130#pullrequestreview-364405064", "createdAt": "2020-02-25T19:54:48Z", "commit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTo1NDo0OFrOFuTFpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTo1Njo1NlrOFuTKJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTU1OQ==", "bodyText": "nit: Kerberose should be capitalized", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384091559", "createdAt": "2020-02-25T19:54:48Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+\n+Kudu Changes\n+_____________\n+* Add kerberos authentication.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTU5Mw==", "bodyText": "link to the docs for these functions", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384091593", "createdAt": "2020-02-25T19:54:53Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MTg0Mg==", "bodyText": "capitalize Kafka", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384091842", "createdAt": "2020-02-25T19:55:24Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+\n+Kudu Changes\n+_____________\n+* Add kerberos authentication.\n+\n+Kafka changes\n+_____________\n+* Update kafka connector to 2.3.1, which improves implementation and performance (:pr:`13709`).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA5MjcwOQ==", "bodyText": "I think this should be under Hive changes", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384092709", "createdAt": "2020-02-25T19:56:56Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/70a9c0dd52409050dd6adecfe3832a263267969f", "committedDate": "2020-02-25T19:51:06Z", "message": "Add release notes for 0.232"}, "afterCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7", "committedDate": "2020-02-25T20:16:18Z", "message": "Add release notes for 0.232"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDE4NTM2", "url": "https://github.com/prestodb/presto/pull/14130#pullrequestreview-364418536", "createdAt": "2020-02-25T20:16:43Z", "commit": {"oid": "70a9c0dd52409050dd6adecfe3832a263267969f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoxNzo0M1rOFuTybQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoxNzo0M1rOFuTybQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwMzAyMQ==", "bodyText": "Functions should be referenced like\n:func`tdigest_agg `, :func`merge`", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384103021", "createdAt": "2020-02-25T20:17:43Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDIwMzIw", "url": "https://github.com/prestodb/presto/pull/14130#pullrequestreview-364420320", "createdAt": "2020-02-25T20:19:55Z", "commit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoxOTo1NVrOFuT2hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyMzozMFrOFuT9Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNDA2OA==", "bodyText": "Remove this. This is not a user-facing change and should not be included.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384104068", "createdAt": "2020-02-25T20:19:55Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTcxNQ==", "bodyText": "Improve ``Kafka`` connector implementation and performance (:pr:`13709`)\n```", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384105715", "createdAt": "2020-02-25T20:23:21Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+\n+Kudu Changes\n+_____________\n+* Add KERBEROS authentication.\n+\n+Kafka changes\n+_____________\n+* Update KAFKA connector to 2.3.1, which improves implementation and performance (:pr:`13709`).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTc1OA==", "bodyText": "Changes", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384105758", "createdAt": "2020-02-25T20:23:26Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+\n+Kudu Changes\n+_____________\n+* Add KERBEROS authentication.\n+\n+Kafka changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNTgwMg==", "bodyText": "Kerberos", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384105802", "createdAt": "2020-02-25T20:23:30Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).\n+* Expose Hive table properties via system table$properties table.\n+* Change error code from ``HIVE_METASTORE_ERROR`` to ``HIVE_TABLE_DROPPED_DURING_QUERY`` when a ``DROP TABLE`` query fails due to another query dropping the table before this query has finished.\n+* Upgrade Alluxio version from 2.1.1 to 2.1.2.\n+\n+Kudu Changes\n+_____________\n+* Add KERBEROS authentication.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDIzMDQ2", "url": "https://github.com/prestodb/presto/pull/14130#pullrequestreview-364423046", "createdAt": "2020-02-25T20:24:47Z", "commit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyNDo0OFrOFuT_ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyOTowOVrOFuUH6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwNjQzNQ==", "bodyText": "The property is `false` by default.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384106435", "createdAt": "2020-02-25T20:24:48Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.  The property is false by default. (:pr:`14010`).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODEyMA==", "bodyText": "Alluxio catalog service <https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html>`\n\nYou can use\nmake clean\nmake html\n\nto make sure the the generated HTML works as intended.", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384108120", "createdAt": "2020-02-25T20:28:17Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+* Upgrade airlift/slice to 0.38.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the ``Alluxio catalog service`` (https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODM5Ng==", "bodyText": "``internal-communication.server-info-communication-protocol``", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384108396", "createdAt": "2020-02-25T20:28:53Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property internal-communication.server-info-communication-protocol. Possible values are HTTP or Thrift.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODUyMA==", "bodyText": "``internal-communication.task-communication-protocol``", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384108520", "createdAt": "2020-02-25T20:29:09Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,52 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property internal-communication.task-communication-protocol. Possible values are HTTP or Thrift.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/e2fce3b31d76de6c0fa34f997a3ea05c93d38ab7", "committedDate": "2020-02-25T20:16:18Z", "message": "Add release notes for 0.232"}, "afterCommit": {"oid": "e28f5d07599c25d06b0a2295a7e48db9d59846d1", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/e28f5d07599c25d06b0a2295a7e48db9d59846d1", "committedDate": "2020-02-25T20:46:01Z", "message": "Add release notes for 0.232"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e28f5d07599c25d06b0a2295a7e48db9d59846d1", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/e28f5d07599c25d06b0a2295a7e48db9d59846d1", "committedDate": "2020-02-25T20:46:01Z", "message": "Add release notes for 0.232"}, "afterCommit": {"oid": "3cf4ccf5d6006f6e4139a9d9bb447cb342b2d1d4", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/3cf4ccf5d6006f6e4139a9d9bb447cb342b2d1d4", "committedDate": "2020-02-25T22:27:22Z", "message": "Add release notes for 0.232"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDk3OTc2", "url": "https://github.com/prestodb/presto/pull/14130#pullrequestreview-364497976", "createdAt": "2020-02-25T22:30:46Z", "commit": {"oid": "3cf4ccf5d6006f6e4139a9d9bb447cb342b2d1d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjozMDo0N1rOFuXpqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjozMDo0N1rOFuXpqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NjMxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              The property is `false` by default. (:pr:`14010`).\n          \n          \n            \n              The property is ``false`` by default. (:pr:`14010`).", "url": "https://github.com/prestodb/presto/pull/14130#discussion_r384166315", "createdAt": "2020-02-25T22:30:47Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.232.rst", "diffHunk": "@@ -0,0 +1,54 @@\n+=============\n+Release 0.232\n+=============\n+\n+General Changes\n+_______________\n+* Fix an issue where ``DATE_TRUNC`` may produce incorrect results at certain timestamp in ``America/Sao_Paulo``.\n+* Improve built-in function resolution performance by caching function resolution results.\n+* Add a MySQL-based function namespace manager implementation that supports creating, altering, and dropping SQL functions (:doc:`/admin/function-namespace-managers`).\n+* Add support for retrying failed stages from a materialized point instead of failing the entire query. The number of retries allowed can be configured using the configuration property ``max-stage-retries`` and session property ``max_stage_retries``. The default value is zero. To take advantage of this feature, exchange_materialization_strategy must be set to ``ALL``.\n+* Add configuration property ``use-legacy-scheduler`` and session property ``use_legacy_scheduler`` to use a version of the query scheduler before refactorings to enable full stage retries. The default value is false. This is a temporary property to provide an easy way to roll back in case of bugs in the new scheduler. This property will be removed in a couple releases once we have confidence in the stability of the new scheduler.\n+* Add ``query_max_total_memory_per_node`` and ``query_max_memory_per_node`` session properties.\n+* Add support to show whether functions have variable arity in ``SHOW FUNCTIONS``.\n+* Add support to show whether functions are built-in in ``SHOW FUNCTIONS``.\n+* Add ``use_exact_partitioning`` session property that forces repartitioning if repartitioning is possible.\n+* Add support for ``ALTER FUNCTION``.\n+* Add configuration property ``resource-groups.reload-refresh-interval`` to control the frequency of reloading resource group information from the database. The default value is 10 seconds.\n+* Add support for using the Thrift protocol to shuffle data. This can be configured using the configuration property ``internal-communication.task-communication-protocol``. Possible values are HTTP or Thrift.\n+* Add support for using the Thrift protocol to announce node state. This can be configured using the configuration property ``internal-communication.server-info-communication-protocol``. Possible values are HTTP or Thrift.\n+* Add session property ``list_built_in_functions_only`` to support hiding user-defined SQL functions in ``SHOW FUNCTIONS``.\n+* Add experimental functions ``tdigest_agg``, ``merge(tdigest)``, ``value_at_quantile(tdigest, quantile)``, ``values_at_quantiles(tdigest, quantiles)``, ``quantile_at_value(tdigest, quantile)``, ``quantiles_at_values(tdigest, quantile)`` for creating, merging, and querying t-digests.\n+  These can be enabled by using the session property ``experimental_functions_enabled`` and the configuration property ``experimental-functions-enabled``.\n+\n+Hive Changes\n+____________\n+* Fix an issue where queries could fail with buffer overflow when writing ORC files.\n+* Add support for handling statistics to the Alluxio metastore.\n+* Add Alluxio metastore which connects to the Alluxio catalog service <https://docs.alluxio.io/os/user/2.1/en/core-services/Catalog.html>.\n+* Add session property ``shuffle_partitioned_columns_for_table_write`` to make Presto shuffle data on the partition columns before writing to partitioned unbucketed Hive tables.\n+  This increases the maximum number of partitions that can be written in a single query by a factor of the total number of writing workers.\n+  The property is `false` by default. (:pr:`14010`).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cf4ccf5d6006f6e4139a9d9bb447cb342b2d1d4"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64b48072ee71418d8c1b36a95bedc5cf9f8a77f1", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/64b48072ee71418d8c1b36a95bedc5cf9f8a77f1", "committedDate": "2020-02-25T22:31:26Z", "message": "Add release notes for 0.232"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3cf4ccf5d6006f6e4139a9d9bb447cb342b2d1d4", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/3cf4ccf5d6006f6e4139a9d9bb447cb342b2d1d4", "committedDate": "2020-02-25T22:27:22Z", "message": "Add release notes for 0.232"}, "afterCommit": {"oid": "64b48072ee71418d8c1b36a95bedc5cf9f8a77f1", "author": {"user": {"login": "bhhari", "name": null}}, "url": "https://github.com/prestodb/presto/commit/64b48072ee71418d8c1b36a95bedc5cf9f8a77f1", "committedDate": "2020-02-25T22:31:26Z", "message": "Add release notes for 0.232"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDk4ODk5", "url": "https://github.com/prestodb/presto/pull/14130#pullrequestreview-364498899", "createdAt": "2020-02-25T22:32:29Z", "commit": {"oid": "64b48072ee71418d8c1b36a95bedc5cf9f8a77f1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2277, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}