{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NzE4OTU0", "number": 14496, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODoyOTo1MlrOD7WvgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTowMzo0NVrOD7XctQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTY1MTg0OnYy", "diffSide": "RIGHT", "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/node/PrestoSparkInternalNodeManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODoyOTo1MlrOGToSqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDoxODozNFrOGTr1Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIzNjI2NA==", "bodyText": "nit: maybe this should be a static field instead?", "url": "https://github.com/prestodb/presto/pull/14496#discussion_r423236264", "createdAt": "2020-05-11T18:29:52Z", "author": {"login": "shixuan-fan"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/node/PrestoSparkInternalNodeManager.java", "diffHunk": "@@ -38,30 +38,34 @@\n     public Set<InternalNode> getActiveConnectorNodes(ConnectorId connectorId)\n     {\n         // TODO: Hack to make TPCH connector work\n-        return ImmutableSet.of(\n-                new InternalNode(\"spark1\", URI.create(\"http://127.0.0.1:60041\"), NodeVersion.UNKNOWN, false),\n-                new InternalNode(\"spark2\", URI.create(\"http://127.0.0.1:60042\"), NodeVersion.UNKNOWN, false),\n-                new InternalNode(\"spark3\", URI.create(\"http://127.0.0.1:60043\"), NodeVersion.UNKNOWN, false),\n-                new InternalNode(\"spark4\", URI.create(\"http://127.0.0.1:60044\"), NodeVersion.UNKNOWN, false));\n+        return getAllNodes().getActiveNodes();\n     }\n \n     @Override\n     public InternalNode getCurrentNode()\n     {\n         // TODO: Hack to make TPCH connector work\n-        return new InternalNode(\"spark1\", URI.create(\"http://127.0.0.1:1111\"), NodeVersion.UNKNOWN, false);\n+        return new InternalNode(\"spark1\", URI.create(\"http://127.0.0.1:1111\"), NodeVersion.UNKNOWN, true);\n     }\n \n     @Override\n     public Set<InternalNode> getCoordinators()\n     {\n-        throw new UnsupportedOperationException();\n+        return ImmutableSet.of(getCurrentNode());\n     }\n \n     @Override\n     public AllNodes getAllNodes()\n     {\n-        throw new UnsupportedOperationException();\n+        return new AllNodes(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1c81a1d72d1c643f683a3f8925d6574b6df6727"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4NzgwOQ==", "bodyText": "It is not going to be called on production anyway. It's pretty much a hack just to make TPCH / System connectors happy. Hopefully we will refactor presto-main a little bit and decouple it from the node management.", "url": "https://github.com/prestodb/presto/pull/14496#discussion_r423287809", "createdAt": "2020-05-11T20:06:01Z", "author": {"login": "arhimondr"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/node/PrestoSparkInternalNodeManager.java", "diffHunk": "@@ -38,30 +38,34 @@\n     public Set<InternalNode> getActiveConnectorNodes(ConnectorId connectorId)\n     {\n         // TODO: Hack to make TPCH connector work\n-        return ImmutableSet.of(\n-                new InternalNode(\"spark1\", URI.create(\"http://127.0.0.1:60041\"), NodeVersion.UNKNOWN, false),\n-                new InternalNode(\"spark2\", URI.create(\"http://127.0.0.1:60042\"), NodeVersion.UNKNOWN, false),\n-                new InternalNode(\"spark3\", URI.create(\"http://127.0.0.1:60043\"), NodeVersion.UNKNOWN, false),\n-                new InternalNode(\"spark4\", URI.create(\"http://127.0.0.1:60044\"), NodeVersion.UNKNOWN, false));\n+        return getAllNodes().getActiveNodes();\n     }\n \n     @Override\n     public InternalNode getCurrentNode()\n     {\n         // TODO: Hack to make TPCH connector work\n-        return new InternalNode(\"spark1\", URI.create(\"http://127.0.0.1:1111\"), NodeVersion.UNKNOWN, false);\n+        return new InternalNode(\"spark1\", URI.create(\"http://127.0.0.1:1111\"), NodeVersion.UNKNOWN, true);\n     }\n \n     @Override\n     public Set<InternalNode> getCoordinators()\n     {\n-        throw new UnsupportedOperationException();\n+        return ImmutableSet.of(getCurrentNode());\n     }\n \n     @Override\n     public AllNodes getAllNodes()\n     {\n-        throw new UnsupportedOperationException();\n+        return new AllNodes(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIzNjI2NA=="}, "originalCommit": {"oid": "a1c81a1d72d1c643f683a3f8925d6574b6df6727"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NDIzNQ==", "bodyText": "Extracted static constants", "url": "https://github.com/prestodb/presto/pull/14496#discussion_r423294235", "createdAt": "2020-05-11T20:18:34Z", "author": {"login": "arhimondr"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/node/PrestoSparkInternalNodeManager.java", "diffHunk": "@@ -38,30 +38,34 @@\n     public Set<InternalNode> getActiveConnectorNodes(ConnectorId connectorId)\n     {\n         // TODO: Hack to make TPCH connector work\n-        return ImmutableSet.of(\n-                new InternalNode(\"spark1\", URI.create(\"http://127.0.0.1:60041\"), NodeVersion.UNKNOWN, false),\n-                new InternalNode(\"spark2\", URI.create(\"http://127.0.0.1:60042\"), NodeVersion.UNKNOWN, false),\n-                new InternalNode(\"spark3\", URI.create(\"http://127.0.0.1:60043\"), NodeVersion.UNKNOWN, false),\n-                new InternalNode(\"spark4\", URI.create(\"http://127.0.0.1:60044\"), NodeVersion.UNKNOWN, false));\n+        return getAllNodes().getActiveNodes();\n     }\n \n     @Override\n     public InternalNode getCurrentNode()\n     {\n         // TODO: Hack to make TPCH connector work\n-        return new InternalNode(\"spark1\", URI.create(\"http://127.0.0.1:1111\"), NodeVersion.UNKNOWN, false);\n+        return new InternalNode(\"spark1\", URI.create(\"http://127.0.0.1:1111\"), NodeVersion.UNKNOWN, true);\n     }\n \n     @Override\n     public Set<InternalNode> getCoordinators()\n     {\n-        throw new UnsupportedOperationException();\n+        return ImmutableSet.of(getCurrentNode());\n     }\n \n     @Override\n     public AllNodes getAllNodes()\n     {\n-        throw new UnsupportedOperationException();\n+        return new AllNodes(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIzNjI2NA=="}, "originalCommit": {"oid": "a1c81a1d72d1c643f683a3f8925d6574b6df6727"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTc2NzU3OnYy", "diffSide": "RIGHT", "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkInjectorFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTowMzo0NVrOGTpcDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDowNzozNVrOGTre3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1NTA1NA==", "bodyText": "I'm not particularly sure if we should have two separate constructors, but I don't have strong opinion on this.", "url": "https://github.com/prestodb/presto/pull/14496#discussion_r423255054", "createdAt": "2020-05-11T19:03:45Z", "author": {"login": "shixuan-fan"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkInjectorFactory.java", "diffHunk": "@@ -44,13 +45,27 @@\n     private final Map<String, String> configProperties;\n     private final Map<String, Map<String, String>> catalogProperties;\n     private final List<Module> additionalModules;\n+    private final Optional<Module> accessControlModuleOverride;\n \n-    public PrestoSparkInjectorFactory(Map<String, String> configProperties, Map<String, Map<String, String>> catalogProperties, List<Module> additionalModules)\n+    public PrestoSparkInjectorFactory(\n+            Map<String, String> configProperties,\n+            Map<String, Map<String, String>> catalogProperties,\n+            List<Module> additionalModules)\n+    {\n+        this(configProperties, catalogProperties, additionalModules, Optional.empty());\n+    }\n+\n+    public PrestoSparkInjectorFactory(\n+            Map<String, String> configProperties,\n+            Map<String, Map<String, String>> catalogProperties,\n+            List<Module> additionalModules,\n+            Optional<Module> accessControlModuleOverride)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "300735d5d41669da4807039d6fdff8a958211015"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4ODU0MA==", "bodyText": "Just wanted to keep the main non testing call site clean. Having an extra optional might be confusing.", "url": "https://github.com/prestodb/presto/pull/14496#discussion_r423288540", "createdAt": "2020-05-11T20:07:35Z", "author": {"login": "arhimondr"}, "path": "presto-spark-base/src/main/java/com/facebook/presto/spark/PrestoSparkInjectorFactory.java", "diffHunk": "@@ -44,13 +45,27 @@\n     private final Map<String, String> configProperties;\n     private final Map<String, Map<String, String>> catalogProperties;\n     private final List<Module> additionalModules;\n+    private final Optional<Module> accessControlModuleOverride;\n \n-    public PrestoSparkInjectorFactory(Map<String, String> configProperties, Map<String, Map<String, String>> catalogProperties, List<Module> additionalModules)\n+    public PrestoSparkInjectorFactory(\n+            Map<String, String> configProperties,\n+            Map<String, Map<String, String>> catalogProperties,\n+            List<Module> additionalModules)\n+    {\n+        this(configProperties, catalogProperties, additionalModules, Optional.empty());\n+    }\n+\n+    public PrestoSparkInjectorFactory(\n+            Map<String, String> configProperties,\n+            Map<String, Map<String, String>> catalogProperties,\n+            List<Module> additionalModules,\n+            Optional<Module> accessControlModuleOverride)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1NTA1NA=="}, "originalCommit": {"oid": "300735d5d41669da4807039d6fdff8a958211015"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2588, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}