{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMTcyMTU5", "number": 14177, "title": "A new end point to get resource group stats", "bodyText": "A load balancer can use resource group level stats to do better\nload balancing. The new endpoint returns a ResourceGroupInfo.\nResourceGroupInfo contains a list of ResourceGroupInfo's as its subtrees.\nResourceGroupInfo consists of basic stats (running and queued query counts)\nand actual queries as strings. This method leaves the queries empty\nsince it is not needed. The end method does not return the dynamically\ngenerated the resource groups.", "createdAt": "2020-02-28T02:37:23Z", "url": "https://github.com/prestodb/presto/pull/14177", "merged": true, "mergeCommit": {"oid": "acb8af46e374402c1d4482e20b6cadcf1915d30c"}, "closed": true, "closedAt": "2020-03-26T17:13:33Z", "author": {"login": "cemcayiroglu"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcImwdcABqjMwODAyNDU1NDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRfe7ZAFqTM4MjIzNDQwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "227728a556180e2e0ed5e8a3ac01c728464282a8", "author": {"user": {"login": "cemcayiroglu", "name": "cem cayiroglu"}}, "url": "https://github.com/prestodb/presto/commit/227728a556180e2e0ed5e8a3ac01c728464282a8", "committedDate": "2020-02-28T02:32:07Z", "message": "Adding end point to get resource group stats"}, "afterCommit": {"oid": "8cc1509e25b124d43cf4e3c644d7538bb8ad0732", "author": {"user": {"login": "cemcayiroglu", "name": "cem cayiroglu"}}, "url": "https://github.com/prestodb/presto/commit/8cc1509e25b124d43cf4e3c644d7538bb8ad0732", "committedDate": "2020-02-28T02:45:22Z", "message": "An end point to get resource group level stats\n\nA load balancer can use resource group level stats to do better\nload balancing. \"/v1/resourceGroupState/fullStatsOnly/\" end point\nis added to obtain resource groups level stats. The end point\nreturns ResourceGroupInfo that does not contain the running or queued queries."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8cc1509e25b124d43cf4e3c644d7538bb8ad0732", "author": {"user": {"login": "cemcayiroglu", "name": "cem cayiroglu"}}, "url": "https://github.com/prestodb/presto/commit/8cc1509e25b124d43cf4e3c644d7538bb8ad0732", "committedDate": "2020-02-28T02:45:22Z", "message": "An end point to get resource group level stats\n\nA load balancer can use resource group level stats to do better\nload balancing. \"/v1/resourceGroupState/fullStatsOnly/\" end point\nis added to obtain resource groups level stats. The end point\nreturns ResourceGroupInfo that does not contain the running or queued queries."}, "afterCommit": {"oid": "8871f8e19aca2eb9488e08cde5561bda0bafda13", "author": {"user": {"login": "cemcayiroglu", "name": "cem cayiroglu"}}, "url": "https://github.com/prestodb/presto/commit/8871f8e19aca2eb9488e08cde5561bda0bafda13", "committedDate": "2020-03-02T20:00:36Z", "message": "An end point to get resource group level stats\n\nA load balancer can use resource group level stats to do better\nload balancing. The new endpoint returns a ResourceGroupInfo.\nResourceGroupInfo contains a list of ResourceGroupInfo's as its subtrees.\nResourceGroupInfo consists of basic stats (running and queued query counts)\nand actual queries as strings. This method leaves the queries empty\nsince it is not needed."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8871f8e19aca2eb9488e08cde5561bda0bafda13", "author": {"user": {"login": "cemcayiroglu", "name": "cem cayiroglu"}}, "url": "https://github.com/prestodb/presto/commit/8871f8e19aca2eb9488e08cde5561bda0bafda13", "committedDate": "2020-03-02T20:00:36Z", "message": "An end point to get resource group level stats\n\nA load balancer can use resource group level stats to do better\nload balancing. The new endpoint returns a ResourceGroupInfo.\nResourceGroupInfo contains a list of ResourceGroupInfo's as its subtrees.\nResourceGroupInfo consists of basic stats (running and queued query counts)\nand actual queries as strings. This method leaves the queries empty\nsince it is not needed."}, "afterCommit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4", "author": {"user": {"login": "cemcayiroglu", "name": "cem cayiroglu"}}, "url": "https://github.com/prestodb/presto/commit/023a506cabcac22a6b0ad6cdd4e31da1316dc2d4", "committedDate": "2020-03-18T02:06:35Z", "message": "An end point to get resource group level stats\n\nA load balancer can use resource group level stats to do better\nload balancing. The new endpoint returns a ResourceGroupInfo.\nResourceGroupInfo contains a list of ResourceGroupInfo's as its subtrees.\nResourceGroupInfo consists of basic stats (running and queued query counts)\nand actual queries as strings. This method leaves the queries empty\nsince it is not needed. The end method does not return the dynamically\ngenerated the resource groups."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTA4MjA1", "url": "https://github.com/prestodb/presto/pull/14177#pullrequestreview-377108205", "createdAt": "2020-03-18T17:58:09Z", "commit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNzo1ODowOVrOF4Qtng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNzo1ODowOVrOF4Qtng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUzODM5OA==", "bodyText": "do we envision this endpoint to stay longer, if yes then i would say let's make it little little more generic, i.e. by taking a key=value as input where isStatic=true and use that instead of dedicating the entire endpoing to pull static resource group.", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r394538398", "createdAt": "2020-03-18T17:58:09Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/server/ResourceGroupStateInfoResource.java", "diffHunk": "@@ -68,6 +68,27 @@ public ResourceGroupInfo getQueryStateInfos(@PathParam(\"resourceGroupId\") String\n         throw new WebApplicationException(NOT_FOUND);\n     }\n \n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @Encoded\n+    @Path(\"getStaticResourceGroupInfo/{resourceGroupId: .+}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MjAwMDM4", "url": "https://github.com/prestodb/presto/pull/14177#pullrequestreview-377200038", "createdAt": "2020-03-18T20:12:00Z", "commit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDoxMjowMFrOF4VKsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDozODoxNlrOF4WAJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYxMTM3OQ==", "bodyText": "Should we add a static resource group check invariant here. If somehow we make a call to this function and it is not static, then it should return a null (preferably an Optional.empty()) or raise an UnsupportedOperationException ?", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r394611379", "createdAt": "2020-03-18T20:12:00Z", "author": {"login": "mayankgarg1990"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -204,6 +213,30 @@ public ResourceGroupInfo getInfo()\n         }\n     }\n \n+    public ResourceGroupInfo getStaticResourceGroupInfo()\n+    {\n+        synchronized (root) {\n+            return new ResourceGroupInfo(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyMjYzOQ==", "bodyText": "do we really need both of these? Should we just keep the OptionalInt one?", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r394622639", "createdAt": "2020-03-18T20:33:31Z", "author": {"login": "mayankgarg1990"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/resourceGroups/ResourceGroupSelectionContext.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.spi.resourceGroups;\n+\n+import java.util.Objects;\n+import java.util.OptionalInt;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class ResourceGroupSelectionContext\n+{\n+    private final OptionalInt dynamicSegmentPosition;\n+\n+    private ResourceGroupSelectionContext(OptionalInt dynamicSegmentPosition)\n+    {\n+        this.dynamicSegmentPosition = requireNonNull(dynamicSegmentPosition, \"dynamicSegmentPosition is null\");\n+    }\n+\n+    public static ResourceGroupSelectionContext createResourceGroupSelectionContext(int dynamicSegmentPosition)\n+    {\n+        return new ResourceGroupSelectionContext(OptionalInt.of(dynamicSegmentPosition));\n+    }\n+\n+    public static ResourceGroupSelectionContext createResourceGroupSelectionContext(OptionalInt dynamicSegmentPosition)\n+    {\n+        return new ResourceGroupSelectionContext(dynamicSegmentPosition);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyNDY0OA==", "bodyText": "Optional.of() will never return a null. You probably want to change this to Optional.of(requireNonNull())", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r394624648", "createdAt": "2020-03-18T20:37:29Z", "author": {"login": "mayankgarg1990"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/resourceGroups/SelectionContext.java", "diffHunk": "@@ -13,17 +13,28 @@\n  */\n package com.facebook.presto.spi.resourceGroups;\n \n+import java.util.Optional;\n+\n import static java.util.Objects.requireNonNull;\n \n public final class SelectionContext<T>\n {\n     private final ResourceGroupId resourceGroupId;\n     private final T context;\n+    private final Optional<ResourceGroupSelectionContext> resourceGroupSelectionContext;\n+\n+    public SelectionContext(ResourceGroupId resourceGroupId, T context, ResourceGroupSelectionContext resourceGroupSelectionContext)\n+    {\n+        this.resourceGroupId = requireNonNull(resourceGroupId, \"resourceGroupId is null\");\n+        this.context = requireNonNull(context, \"context is null\");\n+        this.resourceGroupSelectionContext = requireNonNull(Optional.of(resourceGroupSelectionContext), \"context is null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyNTA2Mg==", "bodyText": "Can you better explain the decision to go for a separate class, rather than maybe just adding dynamicFragmentId here directly?", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r394625062", "createdAt": "2020-03-18T20:38:16Z", "author": {"login": "mayankgarg1990"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/resourceGroups/SelectionContext.java", "diffHunk": "@@ -13,17 +13,28 @@\n  */\n package com.facebook.presto.spi.resourceGroups;\n \n+import java.util.Optional;\n+\n import static java.util.Objects.requireNonNull;\n \n public final class SelectionContext<T>\n {\n     private final ResourceGroupId resourceGroupId;\n     private final T context;\n+    private final Optional<ResourceGroupSelectionContext> resourceGroupSelectionContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NTIzNDMy", "url": "https://github.com/prestodb/presto/pull/14177#pullrequestreview-376523432", "createdAt": "2020-03-18T02:22:48Z", "commit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMjoyMjo0OVrOF30QGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDo0Njo1OVrOF4WRsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3MjA4OQ==", "bodyText": "Could we add a getter to the context class and just check that it's present and equal to the id's segment count?  This would be OK if we had Java pattern matching :)", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r394072089", "createdAt": "2020-03-18T02:22:49Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -583,6 +621,11 @@ public InternalResourceGroup getOrCreateSubGroup(String name)\n         }\n     }\n \n+    private boolean isSubResourceGroupStatic(Optional<ResourceGroupSelectionContext> resourceGroupSelectionContext)\n+    {\n+        return !resourceGroupSelectionContext.equals(Optional.of(createResourceGroupSelectionContext(id.getSegments().size())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYxOTkwNg==", "bodyText": "In my opinion the name is redundant, since the class is called InternalResourceGroup.  How about isStatic?", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r394619906", "createdAt": "2020-03-18T20:28:22Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -87,6 +89,7 @@\n     private final ResourceGroupId id;\n     private final BiConsumer<InternalResourceGroup, Boolean> jmxExportListener;\n     private final Executor executor;\n+    private final boolean isStaticResourceGroup;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyMDU2NQ==", "bodyText": "Not sure I follow this.  Isn't this just checking if the present RG is static?  If so, why the name?", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r394620565", "createdAt": "2020-03-18T20:29:37Z", "author": {"login": "tdcmeehan"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -583,6 +621,11 @@ public InternalResourceGroup getOrCreateSubGroup(String name)\n         }\n     }\n \n+    private boolean isSubResourceGroupStatic(Optional<ResourceGroupSelectionContext> resourceGroupSelectionContext)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyOTU1Mg==", "bodyText": "It seems like we're changing the semantics of this method.  It's not really just expanding the template into a resource group id, it's giving you an entire selection context.  I would keep this method unchanged but make it private, and make a new method which calls this method to get the id, and also does the below (and it's public).", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r394629552", "createdAt": "2020-03-18T20:46:59Z", "author": {"login": "tdcmeehan"}, "path": "presto-resource-group-managers/src/main/java/com/facebook/presto/resourceGroups/ResourceGroupIdTemplate.java", "diffHunk": "@@ -53,7 +57,7 @@ public static ResourceGroupIdTemplate fromSegments(List<ResourceGroupNameTemplat\n         return new ResourceGroupIdTemplate(String.join(\".\", segments.stream().map(ResourceGroupNameTemplate::toString).collect(Collectors.toList())));\n     }\n \n-    public ResourceGroupId expandTemplate(VariableMap context)\n+    public SelectionContext<VariableMap> expandTemplate(VariableMap context)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTM2NDM0", "url": "https://github.com/prestodb/presto/pull/14177#pullrequestreview-377136434", "createdAt": "2020-03-18T18:36:52Z", "commit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxODozNjo1MlrOF4SF2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzowMjozMlrOF4Z1Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU2MDk4NA==", "bodyText": "similar way as mentioned above, can we make this a generic method/lambda, i.e. getInfo with filter (i.e. group.isStaticResourceGroup being passed in the argument of the method and used here).", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r394560984", "createdAt": "2020-03-18T18:36:52Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -204,6 +213,30 @@ public ResourceGroupInfo getInfo()\n         }\n     }\n \n+    public ResourceGroupInfo getStaticResourceGroupInfo()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY4NzgwMg==", "bodyText": "Coudn't understand the logic here, how are we deciding if a subgroup is static vs dynamic.  can you explain the logic here?", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r394687802", "createdAt": "2020-03-18T23:02:32Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -583,6 +621,11 @@ public InternalResourceGroup getOrCreateSubGroup(String name)\n         }\n     }\n \n+    private boolean isSubResourceGroupStatic(Optional<ResourceGroupSelectionContext> resourceGroupSelectionContext)\n+    {\n+        return !resourceGroupSelectionContext.equals(Optional.of(createResourceGroupSelectionContext(id.getSegments().size())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4"}, "originalPosition": 106}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "023a506cabcac22a6b0ad6cdd4e31da1316dc2d4", "author": {"user": {"login": "cemcayiroglu", "name": "cem cayiroglu"}}, "url": "https://github.com/prestodb/presto/commit/023a506cabcac22a6b0ad6cdd4e31da1316dc2d4", "committedDate": "2020-03-18T02:06:35Z", "message": "An end point to get resource group level stats\n\nA load balancer can use resource group level stats to do better\nload balancing. The new endpoint returns a ResourceGroupInfo.\nResourceGroupInfo contains a list of ResourceGroupInfo's as its subtrees.\nResourceGroupInfo consists of basic stats (running and queued query counts)\nand actual queries as strings. This method leaves the queries empty\nsince it is not needed. The end method does not return the dynamically\ngenerated the resource groups."}, "afterCommit": {"oid": "731665a839384f219355ec515412af05521ec9a0", "author": {"user": {"login": "cemcayiroglu", "name": "cem cayiroglu"}}, "url": "https://github.com/prestodb/presto/commit/731665a839384f219355ec515412af05521ec9a0", "committedDate": "2020-03-19T07:07:27Z", "message": "An end point to get resource group level stats\n\nA load balancer can use resource group level stats to do better\nload balancing. The new endpoint returns a ResourceGroupInfo.\nResourceGroupInfo contains a list of ResourceGroupInfo's as its subtrees.\nResourceGroupInfo consists of basic stats (running and queued query counts)\nand actual queries as strings. This method leaves the queries empty\nsince it is not needed. The end method does not return the dynamically\ngenerated the resource groups."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "731665a839384f219355ec515412af05521ec9a0", "author": {"user": {"login": "cemcayiroglu", "name": "cem cayiroglu"}}, "url": "https://github.com/prestodb/presto/commit/731665a839384f219355ec515412af05521ec9a0", "committedDate": "2020-03-19T07:07:27Z", "message": "An end point to get resource group level stats\n\nA load balancer can use resource group level stats to do better\nload balancing. The new endpoint returns a ResourceGroupInfo.\nResourceGroupInfo contains a list of ResourceGroupInfo's as its subtrees.\nResourceGroupInfo consists of basic stats (running and queued query counts)\nand actual queries as strings. This method leaves the queries empty\nsince it is not needed. The end method does not return the dynamically\ngenerated the resource groups."}, "afterCommit": {"oid": "cabda69f3b493958d7059056bb8ba1293791fe1e", "author": {"user": {"login": "cemcayiroglu", "name": "cem cayiroglu"}}, "url": "https://github.com/prestodb/presto/commit/cabda69f3b493958d7059056bb8ba1293791fe1e", "committedDate": "2020-03-19T07:19:34Z", "message": "An end point to get resource group level stats\n\nA load balancer can use resource group level stats to do better\nload balancing. The new endpoint returns a ResourceGroupInfo.\nResourceGroupInfo contains a list of ResourceGroupInfo's as its subtrees.\nResourceGroupInfo consists of basic stats (running and queued query counts)\nand actual queries as strings. This method leaves the queries empty\nsince it is not needed. The end method does not return the dynamically\ngenerated the resource groups."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3OTI3OTQw", "url": "https://github.com/prestodb/presto/pull/14177#pullrequestreview-377927940", "createdAt": "2020-03-19T17:13:14Z", "commit": {"oid": "cabda69f3b493958d7059056bb8ba1293791fe1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoxMzoxNVrOF44YQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoxMzoxNVrOF44YQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE4ODI5MA==", "bodyText": "Why is this true? Sorry I don't have much background about resource group.", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r395188290", "createdAt": "2020-03-19T17:13:15Z", "author": {"login": "shixuan-fan"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -941,9 +987,12 @@ public int hashCode()\n     {\n         private AtomicBoolean taskLimitExceeded = new AtomicBoolean();\n \n-        public RootInternalResourceGroup(String name, BiConsumer<InternalResourceGroup, Boolean> jmxExportListener, Executor executor)\n+        public RootInternalResourceGroup(\n+                String name,\n+                BiConsumer<InternalResourceGroup, Boolean> jmxExportListener,\n+                Executor executor)\n         {\n-            super(Optional.empty(), name, jmxExportListener, executor);\n+            super(Optional.empty(), name, jmxExportListener, executor, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cabda69f3b493958d7059056bb8ba1293791fe1e"}, "originalPosition": 123}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NzgxMTMz", "url": "https://github.com/prestodb/presto/pull/14177#pullrequestreview-378781133", "createdAt": "2020-03-20T20:08:26Z", "commit": {"oid": "cabda69f3b493958d7059056bb8ba1293791fe1e"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDowODoyN1rOF5hwaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDozNDo1MVrOF5ibQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2NjIxOQ==", "bodyText": "question: Why do we need a separate method? It is technically very similar to the getQueryStateInfos. It feels like it is possible to simply add a parameter to the getQueryStateInfos.\nFor example:\n\n?includeQueryInfo=true|false\n?summarizeSubgroups=true|false\n?includeDynamicSubgroups=true|false\n\nOr maybe something like:\n\n?subgroupsInfo={SUMMARIZE|STATIC|ALL}", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r395866219", "createdAt": "2020-03-20T20:08:27Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/server/ResourceGroupStateInfoResource.java", "diffHunk": "@@ -68,6 +68,27 @@ public ResourceGroupInfo getQueryStateInfos(@PathParam(\"resourceGroupId\") String\n         throw new WebApplicationException(NOT_FOUND);\n     }\n \n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @Encoded\n+    @Path(\"getResourceGroupInfo/{resourceGroupId: .+}\")\n+    public ResourceGroupInfo getStaticResourceGroupInfo(@PathParam(\"resourceGroupId\") String resourceGroupIdString)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cabda69f3b493958d7059056bb8ba1293791fe1e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2NzI4OA==", "bodyText": "How about firstDynamicSegmentPosition (same for the getter)?", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r395867288", "createdAt": "2020-03-20T20:11:08Z", "author": {"login": "arhimondr"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/resourceGroups/SelectionContext.java", "diffHunk": "@@ -13,17 +13,28 @@\n  */\n package com.facebook.presto.spi.resourceGroups;\n \n+import java.util.OptionalInt;\n+\n import static java.util.Objects.requireNonNull;\n \n public final class SelectionContext<T>\n {\n     private final ResourceGroupId resourceGroupId;\n     private final T context;\n+    private final OptionalInt dynamicSegmentPosition;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cabda69f3b493958d7059056bb8ba1293791fe1e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2OTcxNA==", "bodyText": "Why is it needed?\nIf it is needed indeed - we should explicitly annotate all parameters of the constructor as we do for other Json serializable objects (e.g.: https://github.com/prestodb/presto/blob/master/presto-main/src/main/java/com/facebook/presto/execution/QueryInfo.java#L82)", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r395869714", "createdAt": "2020-03-20T20:16:55Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/server/ResourceGroupInfo.java", "diffHunk": "@@ -51,6 +52,7 @@\n     private final List<ResourceGroupInfo> subGroups;\n     private final List<QueryStateInfo> runningQueries;\n \n+    @JsonCreator", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cabda69f3b493958d7059056bb8ba1293791fe1e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg3MDY3Nw==", "bodyText": "nit: s/isStatic/static/. By convention boolean variables in java are declared without is. Geter names for boolean variables are constructed as is + VariableName.", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r395870677", "createdAt": "2020-03-20T20:19:08Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -87,6 +89,7 @@\n     private final ResourceGroupId id;\n     private final BiConsumer<InternalResourceGroup, Boolean> jmxExportListener;\n     private final Executor executor;\n+    private final boolean isStatic;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cabda69f3b493958d7059056bb8ba1293791fe1e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg3MjQ2Ng==", "bodyText": "How about changing this method signature to something like public ResourceGroupInfo getFullInfo(boolean includeQueryInfo, boolean summarizeSubgroups, boolean includeDynamicSubgroups)?", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r395872466", "createdAt": "2020-03-20T20:23:29Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -154,6 +162,7 @@ protected InternalResourceGroup(Optional<InternalResourceGroup> parent, String n\n             id = new ResourceGroupId(name);\n             root = this;\n         }\n+        this.isStatic = isStatic;\n     }\n \n     public ResourceGroupInfo getFullInfo()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cabda69f3b493958d7059056bb8ba1293791fe1e"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg3NjkwMQ==", "bodyText": "This code is a little bit hard to follow. Could you please explain why is it needed to pass the OptionalInt dynamicSegmentPosition as a parameter? And why simple boolean is not enough? It feels like createGroupIfNecessary could be setting this boolean.", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r395876901", "createdAt": "2020-03-20T20:34:03Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -565,15 +604,22 @@ public void setJmxExport(boolean export)\n         jmxExportListener.accept(this, export);\n     }\n \n-    public InternalResourceGroup getOrCreateSubGroup(String name)\n+    public InternalResourceGroup getOrCreateSubGroup(String name, OptionalInt dynamicSegmentPosition)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cabda69f3b493958d7059056bb8ba1293791fe1e"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg3NzE4Ng==", "bodyText": "I guess the root resource group is always static", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r395877186", "createdAt": "2020-03-20T20:34:51Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -941,9 +987,12 @@ public int hashCode()\n     {\n         private AtomicBoolean taskLimitExceeded = new AtomicBoolean();\n \n-        public RootInternalResourceGroup(String name, BiConsumer<InternalResourceGroup, Boolean> jmxExportListener, Executor executor)\n+        public RootInternalResourceGroup(\n+                String name,\n+                BiConsumer<InternalResourceGroup, Boolean> jmxExportListener,\n+                Executor executor)\n         {\n-            super(Optional.empty(), name, jmxExportListener, executor);\n+            super(Optional.empty(), name, jmxExportListener, executor, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE4ODI5MA=="}, "originalCommit": {"oid": "cabda69f3b493958d7059056bb8ba1293791fe1e"}, "originalPosition": 123}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cabda69f3b493958d7059056bb8ba1293791fe1e", "author": {"user": {"login": "cemcayiroglu", "name": "cem cayiroglu"}}, "url": "https://github.com/prestodb/presto/commit/cabda69f3b493958d7059056bb8ba1293791fe1e", "committedDate": "2020-03-19T07:19:34Z", "message": "An end point to get resource group level stats\n\nA load balancer can use resource group level stats to do better\nload balancing. The new endpoint returns a ResourceGroupInfo.\nResourceGroupInfo contains a list of ResourceGroupInfo's as its subtrees.\nResourceGroupInfo consists of basic stats (running and queued query counts)\nand actual queries as strings. This method leaves the queries empty\nsince it is not needed. The end method does not return the dynamically\ngenerated the resource groups."}, "afterCommit": {"oid": "790fa608df4d63d25768f54928a8340c6d1e1f1a", "author": {"user": {"login": "cemcayiroglu", "name": "cem cayiroglu"}}, "url": "https://github.com/prestodb/presto/commit/790fa608df4d63d25768f54928a8340c6d1e1f1a", "committedDate": "2020-03-25T01:45:05Z", "message": "An end point to get resource group level stats\n\nA load balancer can use resource group level stats to do better\nload balancing. The new endpoint returns a ResourceGroupInfo.\nResourceGroupInfo contains a list of ResourceGroupInfo's as its subtrees.\nResourceGroupInfo consists of basic stats (running and queued query counts)\nand actual queries as strings. This method leaves the queries empty\nsince it is not needed. The end method does not return the dynamically\ngenerated the resource groups."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODc0OTQx", "url": "https://github.com/prestodb/presto/pull/14177#pullrequestreview-380874941", "createdAt": "2020-03-25T05:59:21Z", "commit": {"oid": "790fa608df4d63d25768f54928a8340c6d1e1f1a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjowNjo1NVrOF7NLgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNzoyMToyNVrOF7OkRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyNjI0Mw==", "bodyText": "Given we mark a group with static group or non static group, we should renameincludeDynamicSubGroup to includeStaticGroupOnly and use it as per it's name. Calling this flag includeDynamicSubGroup makes it non align with how we mark the resource group.", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r397626243", "createdAt": "2020-03-25T06:06:55Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -154,9 +160,10 @@ protected InternalResourceGroup(Optional<InternalResourceGroup> parent, String n\n             id = new ResourceGroupId(name);\n             root = this;\n         }\n+        this.staticResourceGroup = staticResourceGroup;\n     }\n \n-    public ResourceGroupInfo getFullInfo()\n+    public ResourceGroupInfo getResourceGroupInfo(boolean includeQueryInfo, boolean summarizeSubgroups, boolean includeDynamicSubgroups)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "790fa608df4d63d25768f54928a8340c6d1e1f1a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyNjU3MA==", "bodyText": "dynamic to be renamed as staticOnly and use it accordingly. Makes it much more clear with the staticResourceGroup flag.", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r397626570", "createdAt": "2020-03-25T06:08:07Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -565,15 +578,22 @@ public void setJmxExport(boolean export)\n         jmxExportListener.accept(this, export);\n     }\n \n-    public InternalResourceGroup getOrCreateSubGroup(String name)\n+    public InternalResourceGroup getOrCreateSubGroup(String name, boolean dynamic)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "790fa608df4d63d25768f54928a8340c6d1e1f1a"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyNzAwMw==", "bodyText": "we can just call is static. ResourceGroup is redundant here.", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r397627003", "createdAt": "2020-03-25T06:09:34Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -87,6 +87,7 @@\n     private final ResourceGroupId id;\n     private final BiConsumer<InternalResourceGroup, Boolean> jmxExportListener;\n     private final Executor executor;\n+    private final boolean staticResourceGroup;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "790fa608df4d63d25768f54928a8340c6d1e1f1a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0ODQxMg==", "bodyText": "i think this logic works to identify the given resource group is static or not. But a much cleaner way would be, if we mark each segment of ResourceGroupId being static or not when we create them via group.expandTemplate call, then we can easily put the flag here. And no need to rely on the context.\ni.e. this line will become something like this\ngroup = parent.getOrCreateSubGroup(id.getLastSegment().getValue(), id.getLastSegment().isStatic());\nAnd i think to make this happen, we may need to change the segments in ResourceGroupId class from string to a class Segment which looks like this:\nclass Segment {\nString value;\nString isStatic;\n}", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r397648412", "createdAt": "2020-03-25T07:19:40Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroupManager.java", "diffHunk": "@@ -239,7 +240,9 @@ private synchronized void createGroupIfNecessary(SelectionContext<C> context, Ex\n                 createGroupIfNecessary(new SelectionContext<>(id.getParent().get(), context.getContext()), executor);\n                 InternalResourceGroup parent = groups.get(id.getParent().get());\n                 requireNonNull(parent, \"parent is null\");\n-                group = parent.getOrCreateSubGroup(id.getLastSegment());\n+                // parent segments size equals to subgroup segment index\n+                int subGroupSegmentIndex = parent.getId().getSegments().size();\n+                group = parent.getOrCreateSubGroup(id.getLastSegment(), (context.getFirstDynamicSegmentPosition().equals(OptionalInt.of(subGroupSegmentIndex))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "790fa608df4d63d25768f54928a8340c6d1e1f1a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0ODk2NQ==", "bodyText": "may be call this as includeStaticSubgroupsOnly to make it consistent with how we tag the resource group.", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r397648965", "createdAt": "2020-03-25T07:21:25Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/server/ResourceGroupStateInfoResource.java", "diffHunk": "@@ -51,15 +53,22 @@ public ResourceGroupStateInfoResource(ResourceGroupManager<?> resourceGroupManag\n     @Produces(MediaType.APPLICATION_JSON)\n     @Encoded\n     @Path(\"{resourceGroupId: .+}\")\n-    public ResourceGroupInfo getQueryStateInfos(@PathParam(\"resourceGroupId\") String resourceGroupIdString)\n+    public ResourceGroupInfo getQueryStateInfos(\n+            @PathParam(\"resourceGroupId\") String resourceGroupIdString,\n+            @QueryParam(\"includeQueryInfo\") @DefaultValue(\"true\") boolean includeQueryInfo,\n+            @QueryParam(\"summarizeSubgroups\") @DefaultValue(\"true\") boolean summarizeSubgroups,\n+            @QueryParam(\"includeDynamicSubgroups\") @DefaultValue(\"true\") boolean includeDynamicSubgroups)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "790fa608df4d63d25768f54928a8340c6d1e1f1a"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNTk1NDYx", "url": "https://github.com/prestodb/presto/pull/14177#pullrequestreview-381595461", "createdAt": "2020-03-25T22:54:11Z", "commit": {"oid": "790fa608df4d63d25768f54928a8340c6d1e1f1a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMjo1NDoxMVrOF7xZmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMjo1NDoxMVrOF7xZmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIxOTY3Mg==", "bodyText": "It used to be isStatic. I suggested to rename it to static, as usually in java the convention is to call boolean variables without is, and then add the is prefix for a getter. Let's keep it as is.", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r398219672", "createdAt": "2020-03-25T22:54:11Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -87,6 +87,7 @@\n     private final ResourceGroupId id;\n     private final BiConsumer<InternalResourceGroup, Boolean> jmxExportListener;\n     private final Executor executor;\n+    private final boolean staticResourceGroup;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyNzAwMw=="}, "originalCommit": {"oid": "790fa608df4d63d25768f54928a8340c6d1e1f1a"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "750ac9026ae8cb7bab3fb7edf28459910a132c48", "author": {"user": {"login": "cemcayiroglu", "name": "cem cayiroglu"}}, "url": "https://github.com/prestodb/presto/commit/750ac9026ae8cb7bab3fb7edf28459910a132c48", "committedDate": "2020-03-26T05:18:00Z", "message": "An end point to get resource group level stats\n\nA load balancer can use resource group level stats to do better\nload balancing. The new endpoint returns a ResourceGroupInfo.\nResourceGroupInfo contains a list of ResourceGroupInfo's as its subtrees.\nResourceGroupInfo consists of basic stats (running and queued query counts)\nand actual queries as strings. This method leaves the queries empty\nsince it is not needed. The end method does not return the dynamically\ngenerated the resource groups."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "790fa608df4d63d25768f54928a8340c6d1e1f1a", "author": {"user": {"login": "cemcayiroglu", "name": "cem cayiroglu"}}, "url": "https://github.com/prestodb/presto/commit/790fa608df4d63d25768f54928a8340c6d1e1f1a", "committedDate": "2020-03-25T01:45:05Z", "message": "An end point to get resource group level stats\n\nA load balancer can use resource group level stats to do better\nload balancing. The new endpoint returns a ResourceGroupInfo.\nResourceGroupInfo contains a list of ResourceGroupInfo's as its subtrees.\nResourceGroupInfo consists of basic stats (running and queued query counts)\nand actual queries as strings. This method leaves the queries empty\nsince it is not needed. The end method does not return the dynamically\ngenerated the resource groups."}, "afterCommit": {"oid": "750ac9026ae8cb7bab3fb7edf28459910a132c48", "author": {"user": {"login": "cemcayiroglu", "name": "cem cayiroglu"}}, "url": "https://github.com/prestodb/presto/commit/750ac9026ae8cb7bab3fb7edf28459910a132c48", "committedDate": "2020-03-26T05:18:00Z", "message": "An end point to get resource group level stats\n\nA load balancer can use resource group level stats to do better\nload balancing. The new endpoint returns a ResourceGroupInfo.\nResourceGroupInfo contains a list of ResourceGroupInfo's as its subtrees.\nResourceGroupInfo consists of basic stats (running and queued query counts)\nand actual queries as strings. This method leaves the queries empty\nsince it is not needed. The end method does not return the dynamically\ngenerated the resource groups."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMjM0NDAz", "url": "https://github.com/prestodb/presto/pull/14177#pullrequestreview-382234403", "createdAt": "2020-03-26T17:20:47Z", "commit": {"oid": "750ac9026ae8cb7bab3fb7edf28459910a132c48"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzoyMDo0N1rOF8R11g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzoyMjo1M1rOF8R7gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1MTE5MA==", "bodyText": "i think this should have been named as staticSubGroup", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r398751190", "createdAt": "2020-03-26T17:20:47Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroup.java", "diffHunk": "@@ -565,15 +578,22 @@ public void setJmxExport(boolean export)\n         jmxExportListener.accept(this, export);\n     }\n \n-    public InternalResourceGroup getOrCreateSubGroup(String name)\n+    public InternalResourceGroup getOrCreateSubGroup(String name, boolean staticSegment)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "750ac9026ae8cb7bab3fb7edf28459910a132c48"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1MjY0Mg==", "bodyText": "summarizeSubgroups should be summarizeSubGroups to make it true camel case.", "url": "https://github.com/prestodb/presto/pull/14177#discussion_r398752642", "createdAt": "2020-03-26T17:22:53Z", "author": {"login": "swapsmagic"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/resourceGroups/InternalResourceGroupManager.java", "diffHunk": "@@ -103,10 +104,10 @@ public InternalResourceGroupManager(\n     }\n \n     @Override\n-    public ResourceGroupInfo getResourceGroupInfo(ResourceGroupId id)\n+    public ResourceGroupInfo getResourceGroupInfo(ResourceGroupId id, boolean includeQueryInfo, boolean summarizeSubgroups, boolean includeStaticSubgroupsOnly)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "750ac9026ae8cb7bab3fb7edf28459910a132c48"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2359, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}