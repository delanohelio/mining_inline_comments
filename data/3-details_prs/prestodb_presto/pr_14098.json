{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MDI0ODg1", "number": 14098, "title": "Provide view metadata to the Hive Metastore", "bodyText": "Please make sure your submission complies with our Development, Formatting, and Commit Message guidelines.\nFill in the release notes towards the bottom of the PR description.\nSee Release Notes Guidelines for details.\n== RELEASE NOTES ==\n\nHive Changes\n* Store column names and types for views in the metastore.  Views in the Hive connector can now only use types supported by Hive. \n\nSPI Changes\n* Change signature for createView in ConnectorMetadata to take a ConnectorTableMetadata instead of a SchemaTableName", "createdAt": "2020-02-13T18:35:12Z", "url": "https://github.com/prestodb/presto/pull/14098", "merged": true, "mergeCommit": {"oid": "a0be44c38a9767a426aad781c5cea926ef67ef5b"}, "closed": true, "closedAt": "2020-02-26T19:33:50Z", "author": {"login": "ucalegon206"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcEA7QPAFqTM1ODQ3NzIwMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHhnwxgBqjMwNjY0MzEyOTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NDc3MjAw", "url": "https://github.com/prestodb/presto/pull/14098#pullrequestreview-358477200", "createdAt": "2020-02-13T19:07:43Z", "commit": {"oid": "b1296a4ee7c4db507036285170566e5e7806c93f"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTowNzo0NFrOFpgCgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyODowNVrOFpgskQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2MDg2NQ==", "bodyText": "This interface (unlike ConnectorMetadata) is entirely internal to Presto. You can directly change the old createView method instead of adding a new one.", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r379060865", "createdAt": "2020-02-13T19:07:44Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/metadata/Metadata.java", "diffHunk": "@@ -344,6 +344,11 @@\n      */\n     void createView(Session session, QualifiedObjectName viewName, String viewData, boolean replace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1296a4ee7c4db507036285170566e5e7806c93f"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2MTIyOQ==", "bodyText": "As discussed, undo changes from this file", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r379061229", "createdAt": "2020-02-13T19:08:21Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/HiveQueryRunner.java", "diffHunk": "@@ -69,7 +69,7 @@ private HiveQueryRunner()\n     public static final String TPCH_SCHEMA = \"tpch\";\n     public static final String TPCH_BUCKETED_SCHEMA = \"tpch_bucketed\";\n     private static final String TEMPORARY_TABLE_SCHEMA = \"__temporary_tables__\";\n-    private static final DateTimeZone TIME_ZONE = DateTimeZone.forID(\"America/Bahia_Banderas\");\n+    private static final DateTimeZone TIME_ZONE = DateTimeZone.forID(\"America/Los_Angeles\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1296a4ee7c4db507036285170566e5e7806c93f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2MTgzNQ==", "bodyText": "the default implementation should call the other version of createView().  Also, as discussed\n\nmark that other one as deprecated\nimplement this version for all the connectors in Presto that had implemented the other one.", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r379061835", "createdAt": "2020-02-13T19:09:39Z", "author": {"login": "rschlussel"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/connector/ConnectorMetadata.java", "diffHunk": "@@ -504,6 +504,11 @@ default void createView(ConnectorSession session, SchemaTableName viewName, Stri\n         throw new PrestoException(NOT_SUPPORTED, \"This connector does not support creating views\");\n     }\n \n+    default void createView(ConnectorSession session, SchemaTableName viewName, String viewData, ConnectorTableMetadata viewMetadata, boolean replace)\n+    {\n+        throw new PrestoException(NOT_SUPPORTED, \"This connector does not support creating views\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1296a4ee7c4db507036285170566e5e7806c93f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2NTc3MQ==", "bodyText": "this code should never be called. throw an IllegalStateException", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r379065771", "createdAt": "2020-02-13T19:17:36Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -1663,6 +1663,12 @@ private PartitionStatistics createPartitionStatistics(\n \n     @Override\n     public void createView(ConnectorSession session, SchemaTableName viewName, String viewData, boolean replace)\n+    {\n+        createView(session, viewName, viewData, null, replace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1296a4ee7c4db507036285170566e5e7806c93f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2NTk5Nw==", "bodyText": "view metadata should never be null, so we can simplify this", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r379065997", "createdAt": "2020-02-13T19:18:05Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -1672,13 +1678,24 @@ public void createView(ConnectorSession session, SchemaTableName viewName, Strin\n                 .build();\n \n         Column dummyColumn = new Column(\"dummy\", HIVE_STRING, Optional.empty());\n+        List<Column> columns;\n+\n+        if(viewMetadata != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1296a4ee7c4db507036285170566e5e7806c93f"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2NjY1OA==", "bodyText": "use ImmutableSet.of() to create an empty hashSet", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r379066658", "createdAt": "2020-02-13T19:19:21Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -1672,13 +1678,24 @@ public void createView(ConnectorSession session, SchemaTableName viewName, Strin\n                 .build();\n \n         Column dummyColumn = new Column(\"dummy\", HIVE_STRING, Optional.empty());\n+        List<Column> columns;\n+\n+        if(viewMetadata != null) {\n+            List<HiveColumnHandle> columnHandles = getColumnHandles(viewMetadata, new HashSet<String>(), typeTranslator);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1296a4ee7c4db507036285170566e5e7806c93f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2NzM2MA==", "bodyText": "I don't think these changes are needed.  getBucketProperty isn't called by getColumnHandles().  (and also, suggested not calling getColumnHandles() anyway)", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r379067360", "createdAt": "2020-02-13T19:20:43Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveTableProperties.java", "diffHunk": "@@ -159,8 +159,14 @@ public static HiveStorageFormat getHiveStorageFormat(Map<String, Object> tablePr\n     public static Optional<HiveBucketProperty> getBucketProperty(Map<String, Object> tableProperties)\n     {\n         List<String> bucketedBy = getBucketedBy(tableProperties);\n+\n+        if (bucketedBy == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1296a4ee7c4db507036285170566e5e7806c93f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2OTM3NQ==", "bodyText": "Also, actually, maybe instead of calling getColumnHandles, call the type translator directly on the ColumnMetadata, since all we need from it is the type translation.\nSomething like\nList<Column> columns = viewColumnMetadata.stream()\n    .map(column-> new Column(column.getName, toHiveType(typeTranslator, column.getType(), column.getComment())\n    .collect(toImmutableList())", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r379069375", "createdAt": "2020-02-13T19:24:18Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -1672,13 +1678,24 @@ public void createView(ConnectorSession session, SchemaTableName viewName, Strin\n                 .build();\n \n         Column dummyColumn = new Column(\"dummy\", HIVE_STRING, Optional.empty());\n+        List<Column> columns;\n+\n+        if(viewMetadata != null) {\n+            List<HiveColumnHandle> columnHandles = getColumnHandles(viewMetadata, new HashSet<String>(), typeTranslator);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2NjY1OA=="}, "originalCommit": {"oid": "b1296a4ee7c4db507036285170566e5e7806c93f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3MTYzMw==", "bodyText": "ConnectorTableMetadata includes the SchemaTableName, so you don't need both.\nEither make the signature:\ncreateView(ConnectorSession session, SchemaTableName viewName, List<ColumnMetadata> columnMetadata, String viewData, boolean replace)\nor make it more similar to createTable() like\ncreateView(ConnectorSession session, ConnectorTableMetadata viewMetadata, String viewData, boolean replace)", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r379071633", "createdAt": "2020-02-13T19:28:05Z", "author": {"login": "rschlussel"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/connector/ConnectorMetadata.java", "diffHunk": "@@ -504,6 +504,11 @@ default void createView(ConnectorSession session, SchemaTableName viewName, Stri\n         throw new PrestoException(NOT_SUPPORTED, \"This connector does not support creating views\");\n     }\n \n+    default void createView(ConnectorSession session, SchemaTableName viewName, String viewData, ConnectorTableMetadata viewMetadata, boolean replace)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1296a4ee7c4db507036285170566e5e7806c93f"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NTk4MDYy", "url": "https://github.com/prestodb/presto/pull/14098#pullrequestreview-358598062", "createdAt": "2020-02-13T22:28:16Z", "commit": {"oid": "b1296a4ee7c4db507036285170566e5e7806c93f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyODoxNlrOFplzDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyODoxNlrOFplzDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NTIxMw==", "bodyText": "remove the dummyColumn", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r379155213", "createdAt": "2020-02-13T22:28:16Z", "author": {"login": "cploonker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -1672,13 +1678,24 @@ public void createView(ConnectorSession session, SchemaTableName viewName, Strin\n                 .build();\n \n         Column dummyColumn = new Column(\"dummy\", HIVE_STRING, Optional.empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1296a4ee7c4db507036285170566e5e7806c93f"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MDczMTYx", "url": "https://github.com/prestodb/presto/pull/14098#pullrequestreview-359073161", "createdAt": "2020-02-14T16:41:29Z", "commit": {"oid": "b1296a4ee7c4db507036285170566e5e7806c93f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNjo0MToyOVrOFp8zsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNjo0MToyOVrOFp8zsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUzMjIxMA==", "bodyText": "Why do we even need 2 methods? It feels like we should simply migrate.", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r379532210", "createdAt": "2020-02-14T16:41:29Z", "author": {"login": "arhimondr"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/connector/ConnectorMetadata.java", "diffHunk": "@@ -504,6 +504,11 @@ default void createView(ConnectorSession session, SchemaTableName viewName, Stri\n         throw new PrestoException(NOT_SUPPORTED, \"This connector does not support creating views\");\n     }\n \n+    default void createView(ConnectorSession session, SchemaTableName viewName, String viewData, ConnectorTableMetadata viewMetadata, boolean replace)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1296a4ee7c4db507036285170566e5e7806c93f"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNTAxMTgz", "url": "https://github.com/prestodb/presto/pull/14098#pullrequestreview-360501183", "createdAt": "2020-02-18T16:47:52Z", "commit": {"oid": "55db1605b7ab129196ccbca8a4b944ea481b5c8c"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjo0Nzo1MlrOFrKITg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjo1OToxN1rOFrKkxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5OTA1NA==", "bodyText": "Nit: Extract viewMetadata.getTable() as a variable to reuse since it's called a lot of times.  something like\nSchemaTableName viewName = viewMetadata.getTable();", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r380799054", "createdAt": "2020-02-18T16:47:52Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -1671,14 +1678,16 @@ public void createView(ConnectorSession session, SchemaTableName viewName, Strin\n                 .put(PRESTO_QUERY_ID_NAME, session.getQueryId())\n                 .build();\n \n-        Column dummyColumn = new Column(\"dummy\", HIVE_STRING, Optional.empty());\n+        List<Column> columns = viewMetadata.getColumns().stream()\n+                .map(col -> new Column(col.getName(), toHiveType(typeTranslator, col.getType()), Optional.ofNullable(col.getComment())))\n+                        .collect(toImmutableList());\n \n         Table.Builder tableBuilder = Table.builder()\n-                .setDatabaseName(viewName.getSchemaName())\n-                .setTableName(viewName.getTableName())\n+                .setDatabaseName(viewMetadata.getTable().getSchemaName())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55db1605b7ab129196ccbca8a4b944ea481b5c8c"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5OTUyMw==", "bodyText": "nit: undo change to this file", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r380799523", "createdAt": "2020-02-18T16:48:37Z", "author": {"login": "rschlussel"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveTableProperties.java", "diffHunk": "@@ -161,6 +161,7 @@ public static HiveStorageFormat getHiveStorageFormat(Map<String, Object> tablePr\n         List<String> bucketedBy = getBucketedBy(tableProperties);\n         List<SortingColumn> sortedBy = getSortedBy(tableProperties);\n         int bucketCount = (Integer) tableProperties.get(BUCKET_COUNT_PROPERTY);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55db1605b7ab129196ccbca8a4b944ea481b5c8c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwMDA3OA==", "bodyText": "nit: call this columnMetadata (lower case d) since everywhere else \"metadata\" is considered one word", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r380800078", "createdAt": "2020-02-18T16:49:29Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/CreateViewTask.java", "diffHunk": "@@ -88,9 +90,14 @@ public String explain(CreateView statement, List<Expression> parameters)\n                 .map(field -> new ViewColumn(field.getName().get(), field.getType()))\n                 .collect(toImmutableList());\n \n+        List<ColumnMetadata> columnMetaData = columns.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55db1605b7ab129196ccbca8a4b944ea481b5c8c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwMzA0Ng==", "bodyText": "throw an IllegalStateException for the deprecated version since it should never be called.", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r380803046", "createdAt": "2020-02-18T16:54:08Z", "author": {"login": "rschlussel"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/connector/classloader/ClassLoaderSafeConnectorMetadata.java", "diffHunk": "@@ -426,6 +427,14 @@ public void createView(ConnectorSession session, SchemaTableName viewName, Strin\n         }\n     }\n \n+    @Override\n+    public void createView(ConnectorSession session, ConnectorTableMetadata viewMetadata, String viewData, boolean replace)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55db1605b7ab129196ccbca8a4b944ea481b5c8c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwNjIxMg==", "bodyText": "this version should call the deprecated version by default", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r380806212", "createdAt": "2020-02-18T16:59:05Z", "author": {"login": "rschlussel"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/connector/ConnectorMetadata.java", "diffHunk": "@@ -499,7 +499,16 @@ default void finishDelete(ConnectorSession session, ConnectorTableHandle tableHa\n     /**\n      * Create the specified view. The data for the view is opaque to the connector.\n      */\n+    @Deprecated\n     default void createView(ConnectorSession session, SchemaTableName viewName, String viewData, boolean replace)\n+    {\n+        createView(session, (ConnectorTableMetadata) null, viewData, replace);\n+    }\n+\n+    /**\n+     * Create the specified view. The data for the view is opaque to the connector.\n+     */\n+    default void createView(ConnectorSession session, ConnectorTableMetadata viewMetadata, String viewData, boolean replace)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55db1605b7ab129196ccbca8a4b944ea481b5c8c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwNjM0Mw==", "bodyText": "this version should throw the exception by default", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r380806343", "createdAt": "2020-02-18T16:59:17Z", "author": {"login": "rschlussel"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/connector/ConnectorMetadata.java", "diffHunk": "@@ -499,7 +499,16 @@ default void finishDelete(ConnectorSession session, ConnectorTableHandle tableHa\n     /**\n      * Create the specified view. The data for the view is opaque to the connector.\n      */\n+    @Deprecated\n     default void createView(ConnectorSession session, SchemaTableName viewName, String viewData, boolean replace)\n+    {\n+        createView(session, (ConnectorTableMetadata) null, viewData, replace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55db1605b7ab129196ccbca8a4b944ea481b5c8c"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMjAzMjY4", "url": "https://github.com/prestodb/presto/pull/14098#pullrequestreview-361203268", "createdAt": "2020-02-19T15:52:18Z", "commit": {"oid": "e9ab177f20c0bfad21bf6f5ae5f82fe843f21a4e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNTo1MjoxOFrOFrsjWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNTo1MjoxOFrOFrsjWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM2MzAzNQ==", "bodyText": "nit: move this above where data is set, so this is right next to the columnMetadata creation and the createView() arguments are created in the order they appear.", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r381363035", "createdAt": "2020-02-19T15:52:18Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/execution/CreateViewTask.java", "diffHunk": "@@ -88,9 +90,14 @@ public String explain(CreateView statement, List<Expression> parameters)\n                 .map(field -> new ViewColumn(field.getName().get(), field.getType()))\n                 .collect(toImmutableList());\n \n+        List<ColumnMetadata> columnMetadata = columns.stream()\n+                .map(column -> new ColumnMetadata(column.getName(), column.getType()))\n+                .collect(toImmutableList());\n+\n         String data = codec.toJson(new ViewDefinition(sql, session.getCatalog(), session.getSchema(), columns, Optional.of(session.getUser())));\n+        ConnectorTableMetadata viewMetadata = new ConnectorTableMetadata(name.asSchemaTableName(), columnMetadata);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9ab177f20c0bfad21bf6f5ae5f82fe843f21a4e"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDUwMjgz", "url": "https://github.com/prestodb/presto/pull/14098#pullrequestreview-362050283", "createdAt": "2020-02-20T16:30:58Z", "commit": {"oid": "e9ab177f20c0bfad21bf6f5ae5f82fe843f21a4e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjozMDo1OFrOFsaZrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjozMzowMFrOFsafCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjExNDIyMw==", "bodyText": "You should simply remove this method. It has a default implementation in the interface that throws an UnsupportedOperationException.  Same for other connectors.", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r382114223", "createdAt": "2020-02-20T16:30:58Z", "author": {"login": "arhimondr"}, "path": "presto-accumulo/src/main/java/com/facebook/presto/accumulo/AccumuloMetadata.java", "diffHunk": "@@ -142,9 +142,17 @@ public void renameTable(ConnectorSession session, ConnectorTableHandle tableHand\n         client.renameTable(handle.toSchemaTableName(), newTableName);\n     }\n \n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9ab177f20c0bfad21bf6f5ae5f82fe843f21a4e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjExNDkyNg==", "bodyText": "Ditto. Simply remove it.", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r382114926", "createdAt": "2020-02-20T16:31:59Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/testing/TestingMetadata.java", "diffHunk": "@@ -190,9 +190,17 @@ public void dropTable(ConnectorSession session, ConnectorTableHandle tableHandle\n         tables.remove(getTableName(tableHandle));\n     }\n \n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9ab177f20c0bfad21bf6f5ae5f82fe843f21a4e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjExNTU5NA==", "bodyText": "This should also be removed. It is never called by the engine.", "url": "https://github.com/prestodb/presto/pull/14098#discussion_r382115594", "createdAt": "2020-02-20T16:33:00Z", "author": {"login": "arhimondr"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/connector/classloader/ClassLoaderSafeConnectorMetadata.java", "diffHunk": "@@ -418,11 +418,18 @@ public ConnectorInsertTableHandle beginInsert(ConnectorSession session, Connecto\n         }\n     }\n \n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9ab177f20c0bfad21bf6f5ae5f82fe843f21a4e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNTEwMjU0", "url": "https://github.com/prestodb/presto/pull/14098#pullrequestreview-363510254", "createdAt": "2020-02-24T16:11:49Z", "commit": {"oid": "96513807155b4bdedc51962bd71a9f05c775dadd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNTE1Njcw", "url": "https://github.com/prestodb/presto/pull/14098#pullrequestreview-363515670", "createdAt": "2020-02-24T16:18:19Z", "commit": {"oid": "96513807155b4bdedc51962bd71a9f05c775dadd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "900ce40418f7c98d22b3180387e3136ebf997e59", "author": {"user": {"login": "ucalegon206", "name": "Andrew P. Smith"}}, "url": "https://github.com/prestodb/presto/commit/900ce40418f7c98d22b3180387e3136ebf997e59", "committedDate": "2020-02-24T18:13:05Z", "message": "Provide view metadata to the Hive Metastore"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96513807155b4bdedc51962bd71a9f05c775dadd", "author": {"user": {"login": "ucalegon206", "name": "Andrew P. Smith"}}, "url": "https://github.com/prestodb/presto/commit/96513807155b4bdedc51962bd71a9f05c775dadd", "committedDate": "2020-02-21T20:51:07Z", "message": "Provide view metadata to Hive Metastore"}, "afterCommit": {"oid": "900ce40418f7c98d22b3180387e3136ebf997e59", "author": {"user": {"login": "ucalegon206", "name": "Andrew P. Smith"}}, "url": "https://github.com/prestodb/presto/commit/900ce40418f7c98d22b3180387e3136ebf997e59", "committedDate": "2020-02-24T18:13:05Z", "message": "Provide view metadata to the Hive Metastore"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2196, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}