{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzMDEyMzU2", "number": 15151, "title": "Dynamic partition pruning on workers", "bodyText": "== NO RELEASE NOTE ==", "createdAt": "2020-09-09T17:30:07Z", "url": "https://github.com/prestodb/presto/pull/15151", "merged": true, "mergeCommit": {"oid": "1bc26f0c8223d5fe52957b7b3778b626fb0fddd6"}, "closed": true, "closedAt": "2020-09-11T18:04:06Z", "author": {"login": "kewang1024"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHQnIuAFqTQ4NTI4NjQ3NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdH5WnoAFqTQ4NzAxNTMwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1Mjg2NDc1", "url": "https://github.com/prestodb/presto/pull/15151#pullrequestreview-485286475", "createdAt": "2020-09-09T18:25:55Z", "commit": {"oid": "aa1c64feda84127102b9d7ec569606f914dbf064"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODoyNTo1NVrOHPUeiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODozNDo1MFrOHPUxlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyNjE4NQ==", "bodyText": "Merge with TestDynamicBucketPruning and call it TestDynamicPruning?", "url": "https://github.com/prestodb/presto/pull/15151#discussion_r485826185", "createdAt": "2020-09-09T18:25:55Z", "author": {"login": "highker"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestDynamicPartitionPruning.java", "diffHunk": "@@ -0,0 +1,184 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.hive;\n+\n+import com.facebook.airlift.testing.TempFile;\n+import com.facebook.presto.common.predicate.TupleDomain;\n+import com.facebook.presto.common.type.StandardTypes;\n+import com.facebook.presto.common.type.TypeSignature;\n+import com.facebook.presto.hive.metastore.Column;\n+import com.facebook.presto.hive.metastore.Storage;\n+import com.facebook.presto.hive.metastore.StorageFormat;\n+import com.facebook.presto.spi.ColumnHandle;\n+import com.facebook.presto.spi.ConnectorId;\n+import com.facebook.presto.spi.ConnectorPageSource;\n+import com.facebook.presto.spi.SchemaTableName;\n+import com.facebook.presto.spi.SplitContext;\n+import com.facebook.presto.spi.TableHandle;\n+import com.facebook.presto.testing.TestingConnectorSession;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.OptionalInt;\n+\n+import static com.facebook.presto.common.predicate.Domain.singleValue;\n+import static com.facebook.presto.common.type.TypeSignature.parseTypeSignature;\n+import static com.facebook.presto.common.type.VarcharType.createVarcharType;\n+import static com.facebook.presto.expressions.LogicalRowExpressions.TRUE_CONSTANT;\n+import static com.facebook.presto.hive.BucketFunctionType.HIVE_COMPATIBLE;\n+import static com.facebook.presto.hive.CacheQuotaRequirement.NO_CACHE_REQUIREMENT;\n+import static com.facebook.presto.hive.HiveColumnHandle.ColumnType.PARTITION_KEY;\n+import static com.facebook.presto.hive.HiveQueryRunner.HIVE_CATALOG;\n+import static com.facebook.presto.hive.HiveTestUtils.ROW_EXPRESSION_SERVICE;\n+import static com.facebook.presto.hive.HiveTestUtils.TYPE_MANAGER;\n+import static com.facebook.presto.hive.HiveTestUtils.createTestHdfsEnvironment;\n+import static com.facebook.presto.hive.HiveTestUtils.getDefaultHiveBatchPageSourceFactories;\n+import static com.facebook.presto.hive.HiveTestUtils.getDefaultHiveRecordCursorProvider;\n+import static com.facebook.presto.hive.HiveTestUtils.getDefaultHiveSelectivePageSourceFactories;\n+import static com.facebook.presto.hive.HiveType.HIVE_STRING;\n+import static com.facebook.presto.hive.TestHivePageSink.getColumnHandles;\n+import static com.facebook.presto.spi.schedule.NodeSelectionStrategy.NO_PREFERENCE;\n+import static com.google.common.collect.ImmutableList.toImmutableList;\n+import static io.airlift.slice.Slices.utf8Slice;\n+import static org.testng.Assert.assertEquals;\n+import static org.testng.Assert.fail;\n+\n+public class TestDynamicPartitionPruning", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa1c64feda84127102b9d7ec569606f914dbf064"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzMTA2MQ==", "bodyText": "Move this out of the loop", "url": "https://github.com/prestodb/presto/pull/15151#discussion_r485831061", "createdAt": "2020-09-09T18:34:50Z", "author": {"login": "highker"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java", "diffHunk": "@@ -505,6 +516,36 @@ private static boolean shouldSkipBucket(HiveTableLayoutHandle hiveLayout, HiveSp\n         return hiveBucketFilter.map(filter -> !filter.getBucketsToKeep().contains(hiveSplit.getReadBucketNumber().getAsInt())).orElse(false);\n     }\n \n+    private static boolean shouldSkipPartition(TypeManager typeManager, HiveTableLayoutHandle hiveLayout, DateTimeZone hiveStorageTimeZone, HiveSplit hiveSplit, SplitContext splitContext)\n+    {\n+        List<HiveColumnHandle> partitionColumns = hiveLayout.getPartitionColumns();\n+        List<Type> partitionTypes = partitionColumns.stream()\n+                .map(column -> typeManager.getType(column.getTypeSignature()))\n+                .collect(toList());\n+        List<HivePartitionKey> partitionKeys = hiveSplit.getPartitionKeys();\n+\n+        if (!splitContext.getDynamicFilterPredicate().isPresent()\n+                || hiveSplit.getPartitionKeys().isEmpty()\n+                || partitionColumns.isEmpty()\n+                || partitionColumns.size() != partitionKeys.size()) {\n+            return false;\n+        }\n+\n+        TupleDomain<ColumnHandle> dynamicFilter = splitContext.getDynamicFilterPredicate().get();\n+        for (int i = 0; i < partitionKeys.size(); i++) {\n+            Type type = partitionTypes.get(i);\n+            HivePartitionKey hivePartitionKey = partitionKeys.get(i);\n+            HiveColumnHandle hiveColumnHandle = partitionColumns.get(i);\n+            Map<ColumnHandle, Domain> domains = dynamicFilter.getDomains().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa1c64feda84127102b9d7ec569606f914dbf064"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21fcdcf6790ea3deae024e731ee4ea0e4772fa30", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/21fcdcf6790ea3deae024e731ee4ea0e4772fa30", "committedDate": "2020-09-11T06:40:20Z", "message": "Dynamic partition pruning on workers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa1c64feda84127102b9d7ec569606f914dbf064", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/aa1c64feda84127102b9d7ec569606f914dbf064", "committedDate": "2020-09-09T17:28:45Z", "message": "Dynamic partition pruning on workers"}, "afterCommit": {"oid": "21fcdcf6790ea3deae024e731ee4ea0e4772fa30", "author": {"user": {"login": "kewang1024", "name": "Ke"}}, "url": "https://github.com/prestodb/presto/commit/21fcdcf6790ea3deae024e731ee4ea0e4772fa30", "committedDate": "2020-09-11T06:40:20Z", "message": "Dynamic partition pruning on workers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MDE1MzAy", "url": "https://github.com/prestodb/presto/pull/15151#pullrequestreview-487015302", "createdAt": "2020-09-11T18:04:00Z", "commit": {"oid": "21fcdcf6790ea3deae024e731ee4ea0e4772fa30"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 102, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}