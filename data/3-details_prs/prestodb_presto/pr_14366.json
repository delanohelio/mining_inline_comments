{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNjk5NzMy", "number": 14366, "title": "Support SHOW CREATE FUNCTION", "bodyText": "Resolves #13976\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\nFor each matching signature, returns the canonical CREATE FUNCTION\nthat can be used to create the exact same function, along with\nthe parameter type list of that function signature so that user\ncan differentiate among the functions.\n== RELEASE NOTES ==\n\nGeneral Changes\n* Add support for SHOW CREATE FUNCTION.", "createdAt": "2020-04-08T08:19:00Z", "url": "https://github.com/prestodb/presto/pull/14366", "merged": true, "mergeCommit": {"oid": "f9f9d83c84dbb35fc49e5b4c70326024d8ff3d1e"}, "closed": true, "closedAt": "2020-04-30T23:54:55Z", "author": {"login": "caithagoras"}, "timelineItems": {"totalCount": 49, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVjf-vABqjMyMTMwMzcxOTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcc2DggAFqTQwMzk1Mjk5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed0cfebc61e5ff5d9e3fe6b1ac1103f7e3db308e", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/ed0cfebc61e5ff5d9e3fe6b1ac1103f7e3db308e", "committedDate": "2020-04-08T08:17:56Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "e71176b84b6f8691c16bb1bec7930082de3c5c93", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/e71176b84b6f8691c16bb1bec7930082de3c5c93", "committedDate": "2020-04-08T08:19:54Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e71176b84b6f8691c16bb1bec7930082de3c5c93", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/e71176b84b6f8691c16bb1bec7930082de3c5c93", "committedDate": "2020-04-08T08:19:54Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "d09f8b65ee25f2799952716ca1ff24e5bb05c1d5", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/d09f8b65ee25f2799952716ca1ff24e5bb05c1d5", "committedDate": "2020-04-08T08:22:08Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d09f8b65ee25f2799952716ca1ff24e5bb05c1d5", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/d09f8b65ee25f2799952716ca1ff24e5bb05c1d5", "committedDate": "2020-04-08T08:22:08Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "b688080076d327e2f050ab17f2e0c85f97e34bb2", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/b688080076d327e2f050ab17f2e0c85f97e34bb2", "committedDate": "2020-04-10T19:33:23Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b688080076d327e2f050ab17f2e0c85f97e34bb2", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/b688080076d327e2f050ab17f2e0c85f97e34bb2", "committedDate": "2020-04-10T19:33:23Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "87d4c458e674ee05f3ab41dbd8be5ae5c6172733", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/87d4c458e674ee05f3ab41dbd8be5ae5c6172733", "committedDate": "2020-04-10T20:04:46Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87d4c458e674ee05f3ab41dbd8be5ae5c6172733", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/87d4c458e674ee05f3ab41dbd8be5ae5c6172733", "committedDate": "2020-04-10T20:04:46Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "6a79dcd7f4fbf219367905bab86048f312483090", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/6a79dcd7f4fbf219367905bab86048f312483090", "committedDate": "2020-04-10T20:46:14Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a79dcd7f4fbf219367905bab86048f312483090", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/6a79dcd7f4fbf219367905bab86048f312483090", "committedDate": "2020-04-10T20:46:14Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "e9ad9033ce8607b1d521390829eebe8b77c2f5fc", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/e9ad9033ce8607b1d521390829eebe8b77c2f5fc", "committedDate": "2020-04-10T23:48:59Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9ad9033ce8607b1d521390829eebe8b77c2f5fc", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/e9ad9033ce8607b1d521390829eebe8b77c2f5fc", "committedDate": "2020-04-10T23:48:59Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "1ad0d6c51ac579a47e09d947a16b488d0c92b9c3", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/1ad0d6c51ac579a47e09d947a16b488d0c92b9c3", "committedDate": "2020-04-11T00:23:38Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1ad0d6c51ac579a47e09d947a16b488d0c92b9c3", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/1ad0d6c51ac579a47e09d947a16b488d0c92b9c3", "committedDate": "2020-04-11T00:23:38Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "075d2a6e3b7a019d17cf83bf0512d69d85aff245", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/075d2a6e3b7a019d17cf83bf0512d69d85aff245", "committedDate": "2020-04-11T00:27:27Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "075d2a6e3b7a019d17cf83bf0512d69d85aff245", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/075d2a6e3b7a019d17cf83bf0512d69d85aff245", "committedDate": "2020-04-11T00:27:27Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "bba49f899b1d2d36c86abadad1f2b139a27a753d", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/bba49f899b1d2d36c86abadad1f2b139a27a753d", "committedDate": "2020-04-11T00:29:29Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bba49f899b1d2d36c86abadad1f2b139a27a753d", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/bba49f899b1d2d36c86abadad1f2b139a27a753d", "committedDate": "2020-04-11T00:29:29Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "5bb96e0e4e6a87ca7a5415bd6620f9b0a8b872ab", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/5bb96e0e4e6a87ca7a5415bd6620f9b0a8b872ab", "committedDate": "2020-04-11T00:34:04Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5bb96e0e4e6a87ca7a5415bd6620f9b0a8b872ab", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/5bb96e0e4e6a87ca7a5415bd6620f9b0a8b872ab", "committedDate": "2020-04-11T00:34:04Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "0b5270102dcf0b0741b3e2d6148b9dbf7517e11c", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/0b5270102dcf0b0741b3e2d6148b9dbf7517e11c", "committedDate": "2020-04-11T00:40:37Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b5270102dcf0b0741b3e2d6148b9dbf7517e11c", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/0b5270102dcf0b0741b3e2d6148b9dbf7517e11c", "committedDate": "2020-04-11T00:40:37Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "4f662caf29fc9a98d5d06c06f53d43493feb81f3", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/4f662caf29fc9a98d5d06c06f53d43493feb81f3", "committedDate": "2020-04-11T00:42:42Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f662caf29fc9a98d5d06c06f53d43493feb81f3", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/4f662caf29fc9a98d5d06c06f53d43493feb81f3", "committedDate": "2020-04-11T00:42:42Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "2f6be7e81477f8d99e6195ee2bbfda6560858f6c", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/2f6be7e81477f8d99e6195ee2bbfda6560858f6c", "committedDate": "2020-04-11T00:49:52Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzIyMjQ3", "url": "https://github.com/prestodb/presto/pull/14366#pullrequestreview-391722247", "createdAt": "2020-04-11T01:18:07Z", "commit": {"oid": "2f6be7e81477f8d99e6195ee2bbfda6560858f6c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwMToxODowN1rOGEJO_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwMToxODowN1rOGEJO_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5ODc4MA==", "bodyText": "Wow so we actually rebuild the create function? I thought we remember it in the DB at creation time and just return it.", "url": "https://github.com/prestodb/presto/pull/14366#discussion_r406998780", "createdAt": "2020-04-11T01:18:07Z", "author": {"login": "kaikalur"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/rewrite/ShowQueriesRewrite.java", "diffHunk": "@@ -478,6 +492,66 @@ protected Node visitShowCreate(ShowCreate node, Void context)\n             throw new UnsupportedOperationException(\"SHOW CREATE only supported for tables and views\");\n         }\n \n+        @Override\n+        protected Node visitShowCreateFunction(ShowCreateFunction node, Void context)\n+        {\n+            QualifiedFunctionName functionName = qualifyFunctionName(node.getName());\n+            Collection<? extends SqlFunction> functions = metadata.getFunctionManager().getFunctions(session.getRequiredTransactionId(), functionName);\n+            if (node.getParameterTypes().isPresent()) {\n+                List<TypeSignature> parameterTypes = node.getParameterTypes().get().stream()\n+                        .map(TypeSignature::parseTypeSignature)\n+                        .collect(toImmutableList());\n+                functions = functions.stream()\n+                        .filter(function -> function.getSignature().getArgumentTypes().equals(parameterTypes))\n+                        .collect(toImmutableList());\n+            }\n+            if (functions.isEmpty()) {\n+                String types = node.getParameterTypes().isPresent()\n+                        ? format(\"(%s)\", Joiner.on(\", \").join(node.getParameterTypes().get()))\n+                        : \"\";\n+                throw new PrestoException(FUNCTION_NOT_FOUND, format(\"Function not found: %s%s\", functionName, types));\n+            }\n+\n+            ImmutableList.Builder<Expression> rows = ImmutableList.builder();\n+            for (SqlFunction function : functions) {\n+                if (!(function instanceof SqlInvokedFunction)) {\n+                    throw new PrestoException(GENERIC_USER_ERROR, \"SHOW CREATE FUNCTION only supported for SQL functions\");\n+                }\n+\n+                SqlInvokedFunction sqlFunction = (SqlInvokedFunction) function;\n+                CreateFunction createFunction = new CreateFunction(\n+                        node.getName(),\n+                        false,\n+                        sqlFunction.getParameters().stream()\n+                                .map(parameter -> new SqlParameterDeclaration(new Identifier(parameter.getName(), true), parameter.getType().toString()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f6be7e81477f8d99e6195ee2bbfda6560858f6c"}, "originalPosition": 119}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzIzMDQ0", "url": "https://github.com/prestodb/presto/pull/14366#pullrequestreview-391723044", "createdAt": "2020-04-11T01:27:08Z", "commit": {"oid": "2f6be7e81477f8d99e6195ee2bbfda6560858f6c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwMToyNzowOVrOGEJSsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwMToyNzowOVrOGEJSsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5OTczMA==", "bodyText": "Also add test for things like 'ARRAY_AGG'. What happens when someone tries that?", "url": "https://github.com/prestodb/presto/pull/14366#discussion_r406999730", "createdAt": "2020-04-11T01:27:09Z", "author": {"login": "kaikalur"}, "path": "presto-tests/src/test/java/com/facebook/presto/tests/TestSqlFunctions.java", "diffHunk": "@@ -73,4 +121,81 @@ public void testDropFunctionInvalidFunctionName()\n                 \"DROP FUNCTION presto.default.sin (double)\",\n                 \"Cannot drop function in built-in function namespace: presto\\\\.default\\\\.sin\");\n     }\n+\n+    @Test\n+    public void testInvalidFunctionName()\n+    {\n+        assertQueryFails(\"SELECT x.y(1)\", \".*Non-builtin functions must be referenced by 'catalog\\\\.schema\\\\.function_name', found: x\\\\.y\");\n+        assertQueryFails(\"SELECT x.y.z.w()\", \".*Non-builtin functions must be referenced by 'catalog\\\\.schema\\\\.function_name', found: x\\\\.y\\\\.z\\\\.w\");\n+    }\n+\n+    @Test\n+    public void testSqlFunctions()\n+    {\n+        assertQuerySucceeds(\"CREATE FUNCTION testing.common.array_append(a array<int>, x int)\\n\" +\n+                \"RETURNS array<int>\\n\" +\n+                \"RETURN concat(a, array[x])\");\n+        assertQuery(\"SELECT testing.common.array_append(ARRAY[1, 2, 4], 8)\", \"SELECT ARRAY[1, 2, 4, 8]\");\n+    }\n+\n+    @Test\n+    public void testShowCreateFunctions()\n+    {\n+        @Language(\"SQL\") String createFunctionInt = \"CREATE FUNCTION testing.common.array_append(a array<int>, x int)\\n\" +\n+                \"RETURNS array<int>\\n\" +\n+                \"RETURN concat(a, array[x])\";\n+        @Language(\"SQL\") String createFunctionDouble = \"CREATE FUNCTION testing.common.array_append(a array<double>, x double)\\n\" +\n+                \"RETURNS array<double>\\n\" +\n+                \"RETURN concat(a, array[x])\";\n+        @Language(\"SQL\") String createFunctionRand = \"CREATE FUNCTION testing.common.rand()\\n\" +\n+                \"RETURNS double\\n\" +\n+                \"RETURN rand()\";\n+        String createFunctionIntFormatted = \"CREATE FUNCTION testing.common.array_append (\\n\" +\n+                \"   \\\"a\\\" ARRAY(integer),\\n\" +\n+                \"   \\\"x\\\" integer\\n\" +\n+                \")\\n\" +\n+                \"RETURNS ARRAY(integer)\\n\" +\n+                \"COMMENT ''\\n\" +\n+                \"LANGUAGE SQL\\n\" +\n+                \"NOT DETERMINISTIC\\n\" +\n+                \"CALLED ON NULL INPUT\\n\" +\n+                \"RETURN \\\"concat\\\"(a, ARRAY[x])\";\n+        String createFunctionDoubleFormatted = \"CREATE FUNCTION testing.common.array_append (\\n\" +\n+                \"   \\\"a\\\" ARRAY(double),\\n\" +\n+                \"   \\\"x\\\" double\\n\" +\n+                \")\\n\" +\n+                \"RETURNS ARRAY(double)\\n\" +\n+                \"COMMENT ''\\n\" +\n+                \"LANGUAGE SQL\\n\" +\n+                \"NOT DETERMINISTIC\\n\" +\n+                \"CALLED ON NULL INPUT\\n\" +\n+                \"RETURN \\\"concat\\\"(a, ARRAY[x])\";\n+        String createFunctionRandFormatted = \"CREATE FUNCTION testing.common.rand ()\\n\" +\n+                \"RETURNS double\\n\" +\n+                \"COMMENT ''\\n\" +\n+                \"LANGUAGE SQL\\n\" +\n+                \"NOT DETERMINISTIC\\n\" +\n+                \"CALLED ON NULL INPUT\\n\" +\n+                \"RETURN \\\"rand\\\"()\";\n+        String parameterTypeInt = \"ARRAY(integer), integer\";\n+        String parameterTypeDouble = \"ARRAY(double), double\";\n+\n+        assertQuerySucceeds(createFunctionInt);\n+        assertQuerySucceeds(createFunctionDouble);\n+        assertQuerySucceeds(createFunctionRand);\n+\n+        MaterializedResult rows = computeActual(\"SHOW CREATE FUNCTION testing.common.array_append\");\n+        assertEquals(rows.getRowCount(), 2);\n+        assertEquals(rows.getMaterializedRows().get(0).getFields(), ImmutableList.of(createFunctionDoubleFormatted, parameterTypeDouble));\n+        assertEquals(rows.getMaterializedRows().get(1).getFields(), ImmutableList.of(createFunctionIntFormatted, parameterTypeInt));\n+\n+        rows = computeActual(\"SHOW CREATE FUNCTION testing.common.array_append(array(int), int)\");\n+        assertEquals(rows.getRowCount(), 1);\n+        assertEquals(rows.getMaterializedRows().get(0).getFields(), ImmutableList.of(createFunctionIntFormatted, parameterTypeInt));\n+\n+        rows = computeActual(\"SHOW CREATE FUNCTION testing.common.rand()\");\n+        assertEquals(rows.getMaterializedRows().get(0).getFields(), ImmutableList.of(createFunctionRandFormatted, \"\"));\n+\n+        assertQueryFails(\"SHOW CREATE FUNCTION testing.common.array_append()\", \"Function not found: testing\\\\.common\\\\.array_append\\\\(\\\\)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f6be7e81477f8d99e6195ee2bbfda6560858f6c"}, "originalPosition": 145}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f6be7e81477f8d99e6195ee2bbfda6560858f6c", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/2f6be7e81477f8d99e6195ee2bbfda6560858f6c", "committedDate": "2020-04-11T00:49:52Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "07a4ca7bb41226b58e02260f3023ec2b84816582", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/07a4ca7bb41226b58e02260f3023ec2b84816582", "committedDate": "2020-04-11T01:35:21Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzI0MzE2", "url": "https://github.com/prestodb/presto/pull/14366#pullrequestreview-391724316", "createdAt": "2020-04-11T01:42:05Z", "commit": {"oid": "07a4ca7bb41226b58e02260f3023ec2b84816582"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07a4ca7bb41226b58e02260f3023ec2b84816582", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/07a4ca7bb41226b58e02260f3023ec2b84816582", "committedDate": "2020-04-11T01:35:21Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "634a67f45083b328f05fe5e5570ff605c69e6c07", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/634a67f45083b328f05fe5e5570ff605c69e6c07", "committedDate": "2020-04-11T01:45:34Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "634a67f45083b328f05fe5e5570ff605c69e6c07", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/634a67f45083b328f05fe5e5570ff605c69e6c07", "committedDate": "2020-04-11T01:45:34Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "92557b19109af3cf7a1250ab9dc84924ec6217f2", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/92557b19109af3cf7a1250ab9dc84924ec6217f2", "committedDate": "2020-04-11T01:48:02Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "92557b19109af3cf7a1250ab9dc84924ec6217f2", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/92557b19109af3cf7a1250ab9dc84924ec6217f2", "committedDate": "2020-04-11T01:48:02Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "3674a8880ccde87ebcfadd7a78718866543b4250", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/3674a8880ccde87ebcfadd7a78718866543b4250", "committedDate": "2020-04-11T01:54:20Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3674a8880ccde87ebcfadd7a78718866543b4250", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/3674a8880ccde87ebcfadd7a78718866543b4250", "committedDate": "2020-04-11T01:54:20Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "90a6e64e42d93a4f3393bdbb64ec7638dd21c980", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/90a6e64e42d93a4f3393bdbb64ec7638dd21c980", "committedDate": "2020-04-11T02:15:13Z", "message": "Support SHOW CREATE FUNCTION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "90a6e64e42d93a4f3393bdbb64ec7638dd21c980", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/90a6e64e42d93a4f3393bdbb64ec7638dd21c980", "committedDate": "2020-04-11T02:15:13Z", "message": "Support SHOW CREATE FUNCTION"}, "afterCommit": {"oid": "e81cf8ed285fb670deb3cece4cf65d6f3e98d489", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/e81cf8ed285fb670deb3cece4cf65d6f3e98d489", "committedDate": "2020-04-11T02:52:31Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nthat can be used to create the exact same function, along with\nthe parameter type list of that function signature so that user\ncan differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e81cf8ed285fb670deb3cece4cf65d6f3e98d489", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/e81cf8ed285fb670deb3cece4cf65d6f3e98d489", "committedDate": "2020-04-11T02:52:31Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nthat can be used to create the exact same function, along with\nthe parameter type list of that function signature so that user\ncan differentiate among the functions."}, "afterCommit": {"oid": "081aa4802f2e5eaade648c2465b96ff249ca9cf1", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/081aa4802f2e5eaade648c2465b96ff249ca9cf1", "committedDate": "2020-04-11T08:18:00Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nthat can be used to create the exact same function, along with\nthe parameter type list of that function signature so that user\ncan differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "081aa4802f2e5eaade648c2465b96ff249ca9cf1", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/081aa4802f2e5eaade648c2465b96ff249ca9cf1", "committedDate": "2020-04-11T08:18:00Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nthat can be used to create the exact same function, along with\nthe parameter type list of that function signature so that user\ncan differentiate among the functions."}, "afterCommit": {"oid": "607e638220ed8a0dbaf0729a1833bd2e86364c12", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/607e638220ed8a0dbaf0729a1833bd2e86364c12", "committedDate": "2020-04-12T03:05:09Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "607e638220ed8a0dbaf0729a1833bd2e86364c12", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/607e638220ed8a0dbaf0729a1833bd2e86364c12", "committedDate": "2020-04-12T03:05:09Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "7aeec4e652751e31c4f02783b51c50493718e281", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/7aeec4e652751e31c4f02783b51c50493718e281", "committedDate": "2020-04-12T03:35:58Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7aeec4e652751e31c4f02783b51c50493718e281", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/7aeec4e652751e31c4f02783b51c50493718e281", "committedDate": "2020-04-12T03:35:58Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "4caad79326ea9e31ba20dfb9636d09e0e1bb1e89", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/4caad79326ea9e31ba20dfb9636d09e0e1bb1e89", "committedDate": "2020-04-12T03:51:56Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4caad79326ea9e31ba20dfb9636d09e0e1bb1e89", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/4caad79326ea9e31ba20dfb9636d09e0e1bb1e89", "committedDate": "2020-04-12T03:51:56Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "e9fcefe0227e06c634630dfb340311dbcc46f73f", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/e9fcefe0227e06c634630dfb340311dbcc46f73f", "committedDate": "2020-04-12T07:27:51Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9fcefe0227e06c634630dfb340311dbcc46f73f", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/e9fcefe0227e06c634630dfb340311dbcc46f73f", "committedDate": "2020-04-12T07:27:51Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "78a2667e063bfd1c3f53ae577113db989b0c3e9c", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/78a2667e063bfd1c3f53ae577113db989b0c3e9c", "committedDate": "2020-04-12T08:11:32Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78a2667e063bfd1c3f53ae577113db989b0c3e9c", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/78a2667e063bfd1c3f53ae577113db989b0c3e9c", "committedDate": "2020-04-12T08:11:32Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "1b22333baf2c4464c060fdcd5fc477fb0ed045c6", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/1b22333baf2c4464c060fdcd5fc477fb0ed045c6", "committedDate": "2020-04-12T09:24:59Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b22333baf2c4464c060fdcd5fc477fb0ed045c6", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/1b22333baf2c4464c060fdcd5fc477fb0ed045c6", "committedDate": "2020-04-12T09:24:59Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "3020959b6dfcc2c1ae01a01b10f317bb8278bf49", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/3020959b6dfcc2c1ae01a01b10f317bb8278bf49", "committedDate": "2020-04-12T12:33:33Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3020959b6dfcc2c1ae01a01b10f317bb8278bf49", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/3020959b6dfcc2c1ae01a01b10f317bb8278bf49", "committedDate": "2020-04-12T12:33:33Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "8817300305b5e8dacaae8f67029d49612fea8f89", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/8817300305b5e8dacaae8f67029d49612fea8f89", "committedDate": "2020-04-12T23:55:16Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8817300305b5e8dacaae8f67029d49612fea8f89", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/8817300305b5e8dacaae8f67029d49612fea8f89", "committedDate": "2020-04-12T23:55:16Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "191f29fe67cd2204adf9bacb388004e4d61a8b2a", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/191f29fe67cd2204adf9bacb388004e4d61a8b2a", "committedDate": "2020-04-14T09:28:45Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "191f29fe67cd2204adf9bacb388004e4d61a8b2a", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/191f29fe67cd2204adf9bacb388004e4d61a8b2a", "committedDate": "2020-04-14T09:28:45Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "f6eac2e9a62d5afc101da28f3f5efefeb64d0749", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/f6eac2e9a62d5afc101da28f3f5efefeb64d0749", "committedDate": "2020-04-14T09:44:00Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6eac2e9a62d5afc101da28f3f5efefeb64d0749", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/f6eac2e9a62d5afc101da28f3f5efefeb64d0749", "committedDate": "2020-04-14T09:44:00Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "bd55b43fe5861c90080b1cc1eb3693c8b8cfb3c9", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/bd55b43fe5861c90080b1cc1eb3693c8b8cfb3c9", "committedDate": "2020-04-14T10:10:28Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd55b43fe5861c90080b1cc1eb3693c8b8cfb3c9", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/bd55b43fe5861c90080b1cc1eb3693c8b8cfb3c9", "committedDate": "2020-04-14T10:10:28Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "892842d2bfc0355b85db98d5e83f72889a2ceb87", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/892842d2bfc0355b85db98d5e83f72889a2ceb87", "committedDate": "2020-04-14T22:27:19Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "892842d2bfc0355b85db98d5e83f72889a2ceb87", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/892842d2bfc0355b85db98d5e83f72889a2ceb87", "committedDate": "2020-04-14T22:27:19Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "983b1c8f20259aca7073913305ad2dfcbb719f01", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/983b1c8f20259aca7073913305ad2dfcbb719f01", "committedDate": "2020-04-15T22:11:02Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "983b1c8f20259aca7073913305ad2dfcbb719f01", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/983b1c8f20259aca7073913305ad2dfcbb719f01", "committedDate": "2020-04-15T22:11:02Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "2a804c92cc315f0e7be3b866dbf90c25886eb9d8", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/2a804c92cc315f0e7be3b866dbf90c25886eb9d8", "committedDate": "2020-04-22T00:08:03Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NzAwMTg5", "url": "https://github.com/prestodb/presto/pull/14366#pullrequestreview-398700189", "createdAt": "2020-04-23T01:32:57Z", "commit": {"oid": "2a804c92cc315f0e7be3b866dbf90c25886eb9d8"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMTozMjo1N1rOGKSpUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMTo0MToyN1rOGKS0LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0NDQzNQ==", "bodyText": "Hmm, isn't it a little extreme to require transaction to run SHOW CREATE FUNCTION? It's probably ok to just fetch some version?", "url": "https://github.com/prestodb/presto/pull/14366#discussion_r413444435", "createdAt": "2020-04-23T01:32:57Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/rewrite/ShowQueriesRewrite.java", "diffHunk": "@@ -478,6 +492,66 @@ protected Node visitShowCreate(ShowCreate node, Void context)\n             throw new UnsupportedOperationException(\"SHOW CREATE only supported for tables and views\");\n         }\n \n+        @Override\n+        protected Node visitShowCreateFunction(ShowCreateFunction node, Void context)\n+        {\n+            QualifiedFunctionName functionName = qualifyFunctionName(node.getName());\n+            Collection<? extends SqlFunction> functions = metadata.getFunctionManager().getFunctions(session.getRequiredTransactionId(), functionName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a804c92cc315f0e7be3b866dbf90c25886eb9d8"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0NDczMg==", "bodyText": "If you want to require transaction for sql functions, make the error message explicit at least.", "url": "https://github.com/prestodb/presto/pull/14366#discussion_r413444732", "createdAt": "2020-04-23T01:33:53Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/rewrite/ShowQueriesRewrite.java", "diffHunk": "@@ -478,6 +492,66 @@ protected Node visitShowCreate(ShowCreate node, Void context)\n             throw new UnsupportedOperationException(\"SHOW CREATE only supported for tables and views\");\n         }\n \n+        @Override\n+        protected Node visitShowCreateFunction(ShowCreateFunction node, Void context)\n+        {\n+            QualifiedFunctionName functionName = qualifyFunctionName(node.getName());\n+            Collection<? extends SqlFunction> functions = metadata.getFunctionManager().getFunctions(session.getRequiredTransactionId(), functionName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0NDQzNQ=="}, "originalCommit": {"oid": "2a804c92cc315f0e7be3b866dbf90c25886eb9d8"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0NTMzNA==", "bodyText": "you can probably just do node.getParameterTypes().map(...)", "url": "https://github.com/prestodb/presto/pull/14366#discussion_r413445334", "createdAt": "2020-04-23T01:35:50Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/rewrite/ShowQueriesRewrite.java", "diffHunk": "@@ -478,6 +492,66 @@ protected Node visitShowCreate(ShowCreate node, Void context)\n             throw new UnsupportedOperationException(\"SHOW CREATE only supported for tables and views\");\n         }\n \n+        @Override\n+        protected Node visitShowCreateFunction(ShowCreateFunction node, Void context)\n+        {\n+            QualifiedFunctionName functionName = qualifyFunctionName(node.getName());\n+            Collection<? extends SqlFunction> functions = metadata.getFunctionManager().getFunctions(session.getRequiredTransactionId(), functionName);\n+            if (node.getParameterTypes().isPresent()) {\n+                List<TypeSignature> parameterTypes = node.getParameterTypes().get().stream()\n+                        .map(TypeSignature::parseTypeSignature)\n+                        .collect(toImmutableList());\n+                functions = functions.stream()\n+                        .filter(function -> function.getSignature().getArgumentTypes().equals(parameterTypes))\n+                        .collect(toImmutableList());\n+            }\n+            if (functions.isEmpty()) {\n+                String types = node.getParameterTypes().isPresent()\n+                        ? format(\"(%s)\", Joiner.on(\", \").join(node.getParameterTypes().get()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a804c92cc315f0e7be3b866dbf90c25886eb9d8"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0NTUxNQ==", "bodyText": "is only supported", "url": "https://github.com/prestodb/presto/pull/14366#discussion_r413445515", "createdAt": "2020-04-23T01:36:21Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/rewrite/ShowQueriesRewrite.java", "diffHunk": "@@ -478,6 +492,66 @@ protected Node visitShowCreate(ShowCreate node, Void context)\n             throw new UnsupportedOperationException(\"SHOW CREATE only supported for tables and views\");\n         }\n \n+        @Override\n+        protected Node visitShowCreateFunction(ShowCreateFunction node, Void context)\n+        {\n+            QualifiedFunctionName functionName = qualifyFunctionName(node.getName());\n+            Collection<? extends SqlFunction> functions = metadata.getFunctionManager().getFunctions(session.getRequiredTransactionId(), functionName);\n+            if (node.getParameterTypes().isPresent()) {\n+                List<TypeSignature> parameterTypes = node.getParameterTypes().get().stream()\n+                        .map(TypeSignature::parseTypeSignature)\n+                        .collect(toImmutableList());\n+                functions = functions.stream()\n+                        .filter(function -> function.getSignature().getArgumentTypes().equals(parameterTypes))\n+                        .collect(toImmutableList());\n+            }\n+            if (functions.isEmpty()) {\n+                String types = node.getParameterTypes().isPresent()\n+                        ? format(\"(%s)\", Joiner.on(\", \").join(node.getParameterTypes().get()))\n+                        : \"\";\n+                throw new PrestoException(FUNCTION_NOT_FOUND, format(\"Function not found: %s%s\", functionName, types));\n+            }\n+\n+            ImmutableList.Builder<Expression> rows = ImmutableList.builder();\n+            for (SqlFunction function : functions) {\n+                if (!(function instanceof SqlInvokedFunction)) {\n+                    throw new PrestoException(GENERIC_USER_ERROR, \"SHOW CREATE FUNCTION only supported for SQL functions\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a804c92cc315f0e7be3b866dbf90c25886eb9d8"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0NjY4Mg==", "bodyText": "I like the old way better. It's a bit tedious but it's explicit.", "url": "https://github.com/prestodb/presto/pull/14366#discussion_r413446682", "createdAt": "2020-04-23T01:40:01Z", "author": {"login": "rongrong"}, "path": "presto-parser/src/main/java/com/facebook/presto/sql/parser/AstBuilder.java", "diffHunk": "@@ -2186,11 +2193,14 @@ private static boolean isValidUnicodeEscape(char c)\n         throw new IllegalArgumentException(\"Unsupported quantifier: \" + symbol.getText());\n     }\n \n-    private List<String> getTypes(SqlBaseParser.TypesContext types)\n+    private Optional<List<String>> getTypes(@Nullable SqlBaseParser.TypesContext types)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a804c92cc315f0e7be3b866dbf90c25886eb9d8"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0NzIxMw==", "bodyText": "Where is this used?", "url": "https://github.com/prestodb/presto/pull/14366#discussion_r413447213", "createdAt": "2020-04-23T01:41:27Z", "author": {"login": "rongrong"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/StandardErrorCode.java", "diffHunk": "@@ -63,6 +63,7 @@\n     QUERY_HAS_TOO_MANY_STAGES(0x0000_0028, USER_ERROR),\n     INVALID_SPATIAL_PARTITIONING(0x0000_0029, USER_ERROR),\n     INVALID_ANALYZE_PROPERTY(0x0000_002A, USER_ERROR),\n+    INVALID_FUNCTION_NAME(0x0000_002B, USER_ERROR),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a804c92cc315f0e7be3b866dbf90c25886eb9d8"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a804c92cc315f0e7be3b866dbf90c25886eb9d8", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/2a804c92cc315f0e7be3b866dbf90c25886eb9d8", "committedDate": "2020-04-22T00:08:03Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "83513d121ab2e1efad7f9c50571ad3b70e58b199", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/83513d121ab2e1efad7f9c50571ad3b70e58b199", "committedDate": "2020-04-23T22:22:53Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83513d121ab2e1efad7f9c50571ad3b70e58b199", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/83513d121ab2e1efad7f9c50571ad3b70e58b199", "committedDate": "2020-04-23T22:22:53Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "5c11203bde898905e90f686e1a0410180c353439", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/5c11203bde898905e90f686e1a0410180c353439", "committedDate": "2020-04-23T22:30:05Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c11203bde898905e90f686e1a0410180c353439", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/5c11203bde898905e90f686e1a0410180c353439", "committedDate": "2020-04-23T22:30:05Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "a740174186dab2d20290ebbada2205c6173531b9", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/a740174186dab2d20290ebbada2205c6173531b9", "committedDate": "2020-04-23T22:34:30Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a740174186dab2d20290ebbada2205c6173531b9", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/a740174186dab2d20290ebbada2205c6173531b9", "committedDate": "2020-04-23T22:34:30Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "738726321b5293a63729b19cb1451809a1cc3290", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/738726321b5293a63729b19cb1451809a1cc3290", "committedDate": "2020-04-24T20:05:50Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "738726321b5293a63729b19cb1451809a1cc3290", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/738726321b5293a63729b19cb1451809a1cc3290", "committedDate": "2020-04-24T20:05:50Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "811f0a432004327950f75e551ebad11c4f91d6ce", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/811f0a432004327950f75e551ebad11c4f91d6ce", "committedDate": "2020-04-27T19:34:42Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMzc2NDYx", "url": "https://github.com/prestodb/presto/pull/14366#pullrequestreview-401376461", "createdAt": "2020-04-27T22:38:00Z", "commit": {"oid": "811f0a432004327950f75e551ebad11c4f91d6ce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMjozODowMFrOGM6pAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMjozODowMFrOGM6pAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjE5Njg2Ng==", "bodyText": "The implementation here also suggested that TransactionId does not need to be required. FunctionNamespaceManager would happily take an empty transaction handle. So why do you enforce transaction ID as input? It happened to always exists should not be the reason you always require it to exist.", "url": "https://github.com/prestodb/presto/pull/14366#discussion_r416196866", "createdAt": "2020-04-27T22:38:00Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/metadata/FunctionManager.java", "diffHunk": "@@ -200,6 +200,17 @@ public void registerBuiltInFunctions(List<? extends BuiltInFunction> functions)\n                 .collect(toImmutableList());\n     }\n \n+    public Collection<? extends SqlFunction> getFunctions(TransactionId transactionId, QualifiedFunctionName functionName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "811f0a432004327950f75e551ebad11c4f91d6ce"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "811f0a432004327950f75e551ebad11c4f91d6ce", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/811f0a432004327950f75e551ebad11c4f91d6ce", "committedDate": "2020-04-27T19:34:42Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "c0d0ad6aba978ab10bd364784e3ad21cd6b226e8", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/c0d0ad6aba978ab10bd364784e3ad21cd6b226e8", "committedDate": "2020-04-30T05:55:45Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "306872a678fcee60a0b42235025b93f25293183a", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/306872a678fcee60a0b42235025b93f25293183a", "committedDate": "2020-04-30T20:05:12Z", "message": "Unify QualifiedName to QualifiedFunctionName conversion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b15386032c40297c6dca88e91d8510e72a35455", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/9b15386032c40297c6dca88e91d8510e72a35455", "committedDate": "2020-04-30T20:05:12Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c0d0ad6aba978ab10bd364784e3ad21cd6b226e8", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/c0d0ad6aba978ab10bd364784e3ad21cd6b226e8", "committedDate": "2020-04-30T05:55:45Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}, "afterCommit": {"oid": "9b15386032c40297c6dca88e91d8510e72a35455", "author": {"user": {"login": "caithagoras", "name": "Leiqing Cai"}}, "url": "https://github.com/prestodb/presto/commit/9b15386032c40297c6dca88e91d8510e72a35455", "committedDate": "2020-04-30T20:05:12Z", "message": "Support SHOW CREATE FUNCTION\n\nSupport syntax, semantic analysis, and execution for SHOW CREATE\nFUNCTION. An optional list of parameter types may be specified.\n\nFor each matching signature, returns the canonical CREATE FUNCTION\nquery text that can be used to create the exact same function,\nalong with the parameter type list of that function signature so\nthat user can differentiate among the functions."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzOTUyOTk3", "url": "https://github.com/prestodb/presto/pull/14366#pullrequestreview-403952997", "createdAt": "2020-04-30T23:54:40Z", "commit": {"oid": "9b15386032c40297c6dca88e91d8510e72a35455"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1818, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}