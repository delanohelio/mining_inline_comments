{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNTUzMzc5", "number": 14458, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODoxMjoxNVrOD3hYTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODoxMjo0MFrOD3hYxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTQ1MTY0OnYy", "diffSide": "RIGHT", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODoxMjoxNVrOGN0Nrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODoxMjoxNVrOGN0Nrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0MDE0Mg==", "bodyText": "shall we just have one line, instead of splitting into 2 lines?", "url": "https://github.com/prestodb/presto/pull/14458#discussion_r417140142", "createdAt": "2020-04-29T08:12:15Z", "author": {"login": "zhenxiao"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -119,30 +122,64 @@ public DruidSegmentInfo getSingleSegmentInfo(String dataSource, String segmentId\n         return httpClient.execute(request, createJsonResponseHandler(SEGMENT_INFO_CODEC));\n     }\n \n-    public String getData(String dql)\n+    public InputStream getData(String dql)\n     {\n-        return httpClient.execute(prepareQuery(dql), createStringResponseHandler()).getBody();\n+        return httpClient.execute(prepareDataQuery(dql), new StreamingJsonResponseHandler());\n     }\n \n     private static Request.Builder setContentTypeHeaders(Request.Builder requestBuilder)\n     {\n         return requestBuilder\n-                .setHeader(CONTENT_TYPE, JSON_UTF_8.toString())\n-                .setHeader(ACCEPT, JSON_UTF_8.toString());\n+                .setHeader(CONTENT_TYPE, JSON_UTF_8.toString());\n+    }\n+\n+    private static byte[] createRequestBody(String query, DruidResultFormat resultFormat, boolean queryHeader)\n+    {\n+        return format(\"{\\\"query\\\":\\\"%s\\\",\\\"resultFormat\" +\n+                \"\\\":\\\"%s\\\",\\\"header\\\": %b }\\n\", query, resultFormat.getResultFormat(), queryHeader).getBytes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c73b82322f03e0f8e131edebf9faff618ff3908"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTQ1Mjg3OnYy", "diffSide": "RIGHT", "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODoxMjo0MFrOGN0OdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODoxNzoyMVrOGN0Xbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0MDM0MQ==", "bodyText": "static import OBJECT, ARRAY_LINES ... ?", "url": "https://github.com/prestodb/presto/pull/14458#discussion_r417140341", "createdAt": "2020-04-29T08:12:40Z", "author": {"login": "zhenxiao"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -119,30 +122,64 @@ public DruidSegmentInfo getSingleSegmentInfo(String dataSource, String segmentId\n         return httpClient.execute(request, createJsonResponseHandler(SEGMENT_INFO_CODEC));\n     }\n \n-    public String getData(String dql)\n+    public InputStream getData(String dql)\n     {\n-        return httpClient.execute(prepareQuery(dql), createStringResponseHandler()).getBody();\n+        return httpClient.execute(prepareDataQuery(dql), new StreamingJsonResponseHandler());\n     }\n \n     private static Request.Builder setContentTypeHeaders(Request.Builder requestBuilder)\n     {\n         return requestBuilder\n-                .setHeader(CONTENT_TYPE, JSON_UTF_8.toString())\n-                .setHeader(ACCEPT, JSON_UTF_8.toString());\n+                .setHeader(CONTENT_TYPE, JSON_UTF_8.toString());\n+    }\n+\n+    private static byte[] createRequestBody(String query, DruidResultFormat resultFormat, boolean queryHeader)\n+    {\n+        return format(\"{\\\"query\\\":\\\"%s\\\",\\\"resultFormat\" +\n+                \"\\\":\\\"%s\\\",\\\"header\\\": %b }\\n\", query, resultFormat.getResultFormat(), queryHeader).getBytes();\n     }\n \n-    private static byte[] createRequestBody(String query)\n+    private Request prepareMetadataQuery(String query)\n     {\n-        return format(\"{\\\"query\\\":\\\"%s\\\"}\\n\", query).getBytes();\n+        HttpUriBuilder uriBuilder = uriBuilderFrom(druidBroker).replacePath(SQL_ENDPOINT);\n+\n+        return setContentTypeHeaders(preparePost())\n+                .setUri(uriBuilder.build())\n+                .setBodyGenerator(createStaticBodyGenerator(createRequestBody(query, DruidResultFormat.OBJECT, false)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c73b82322f03e0f8e131edebf9faff618ff3908"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0MjYzOQ==", "bodyText": "nice suggest", "url": "https://github.com/prestodb/presto/pull/14458#discussion_r417142639", "createdAt": "2020-04-29T08:17:21Z", "author": {"login": "mqiang"}, "path": "presto-druid/src/main/java/com/facebook/presto/druid/DruidClient.java", "diffHunk": "@@ -119,30 +122,64 @@ public DruidSegmentInfo getSingleSegmentInfo(String dataSource, String segmentId\n         return httpClient.execute(request, createJsonResponseHandler(SEGMENT_INFO_CODEC));\n     }\n \n-    public String getData(String dql)\n+    public InputStream getData(String dql)\n     {\n-        return httpClient.execute(prepareQuery(dql), createStringResponseHandler()).getBody();\n+        return httpClient.execute(prepareDataQuery(dql), new StreamingJsonResponseHandler());\n     }\n \n     private static Request.Builder setContentTypeHeaders(Request.Builder requestBuilder)\n     {\n         return requestBuilder\n-                .setHeader(CONTENT_TYPE, JSON_UTF_8.toString())\n-                .setHeader(ACCEPT, JSON_UTF_8.toString());\n+                .setHeader(CONTENT_TYPE, JSON_UTF_8.toString());\n+    }\n+\n+    private static byte[] createRequestBody(String query, DruidResultFormat resultFormat, boolean queryHeader)\n+    {\n+        return format(\"{\\\"query\\\":\\\"%s\\\",\\\"resultFormat\" +\n+                \"\\\":\\\"%s\\\",\\\"header\\\": %b }\\n\", query, resultFormat.getResultFormat(), queryHeader).getBytes();\n     }\n \n-    private static byte[] createRequestBody(String query)\n+    private Request prepareMetadataQuery(String query)\n     {\n-        return format(\"{\\\"query\\\":\\\"%s\\\"}\\n\", query).getBytes();\n+        HttpUriBuilder uriBuilder = uriBuilderFrom(druidBroker).replacePath(SQL_ENDPOINT);\n+\n+        return setContentTypeHeaders(preparePost())\n+                .setUri(uriBuilder.build())\n+                .setBodyGenerator(createStaticBodyGenerator(createRequestBody(query, DruidResultFormat.OBJECT, false)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0MDM0MQ=="}, "originalCommit": {"oid": "1c73b82322f03e0f8e131edebf9faff618ff3908"}, "originalPosition": 98}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2832, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}