{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NzY0NDI3", "number": 14896, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1NTo1MVrOES2nDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTowMTowN1rOES2yfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjA0NTU2OnYy", "diffSide": "RIGHT", "path": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTile.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1NTo1MVrOG4Qw5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1NTo1MVrOG4Qw5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0ODEwMg==", "bodyText": "please add a message in case it ever fails, e.g.: checkArgument(newZoom <= MAX_ZOOM_LEVEL, \"newZoom must be less than or equal to %s: %s\", MAX_ZOOM_LEVEL, newZoom), same for other checks", "url": "https://github.com/prestodb/presto/pull/14896#discussion_r461648102", "createdAt": "2020-07-28T14:55:51Z", "author": {"login": "arhimondr"}, "path": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTile.java", "diffHunk": "@@ -155,11 +157,55 @@ public String toQuadKey()\n         return String.valueOf(quadKey);\n     }\n \n+    public List<BingTile> findChildren()\n+    {\n+        return findChildren(zoomLevel + 1);\n+    }\n+\n+    public List<BingTile> findChildren(int newZoom)\n+    {\n+        if (newZoom == zoomLevel) {\n+            return ImmutableList.of(this);\n+        }\n+\n+        checkArgument(newZoom <= MAX_ZOOM_LEVEL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2757cbdc8a2ecd7c6d72032f661be5c502a378a4"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjA1MzM1OnYy", "diffSide": "RIGHT", "path": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1NzoxMlrOG4Q1hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1NzoxMlrOG4Q1hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0OTI4NQ==", "bodyText": "Add the original exception as a cause. Propagate original message. Same for other methods", "url": "https://github.com/prestodb/presto/pull/14896#discussion_r461649285", "createdAt": "2020-07-28T14:57:12Z", "author": {"login": "arhimondr"}, "path": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java", "diffHunk": "@@ -375,6 +378,72 @@ public static Slice bingTilePolygon(@SqlType(BingTileType.NAME) long input)\n         return serialize(tileToEnvelope(tile));\n     }\n \n+    @Description(\"Return the parent for a Bing tile\")\n+    @ScalarFunction(\"bing_tile_parent\")\n+    @SqlType(BingTileType.NAME)\n+    public static long bingTileParent(@SqlType(BingTileType.NAME) long input)\n+    {\n+        BingTile tile = BingTile.decode(input);\n+        try {\n+            return tile.findParent().encode();\n+        }\n+        catch (IllegalArgumentException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2757cbdc8a2ecd7c6d72032f661be5c502a378a4"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjA1NzkxOnYy", "diffSide": "RIGHT", "path": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1ODowMFrOG4Q4Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1ODowMFrOG4Q4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0OTk3MA==", "bodyText": "Return children ...", "url": "https://github.com/prestodb/presto/pull/14896#discussion_r461649970", "createdAt": "2020-07-28T14:58:00Z", "author": {"login": "arhimondr"}, "path": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java", "diffHunk": "@@ -375,6 +378,72 @@ public static Slice bingTilePolygon(@SqlType(BingTileType.NAME) long input)\n         return serialize(tileToEnvelope(tile));\n     }\n \n+    @Description(\"Return the parent for a Bing tile\")\n+    @ScalarFunction(\"bing_tile_parent\")\n+    @SqlType(BingTileType.NAME)\n+    public static long bingTileParent(@SqlType(BingTileType.NAME) long input)\n+    {\n+        BingTile tile = BingTile.decode(input);\n+        try {\n+            return tile.findParent().encode();\n+        }\n+        catch (IllegalArgumentException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT,\n+                    \"Invalid parent zoom level.\");\n+        }\n+    }\n+\n+    @Description(\"Return the parent for the given zoom level for a Bing tile\")\n+    @ScalarFunction(\"bing_tile_parent\")\n+    @SqlType(BingTileType.NAME)\n+    public static long bingTileParent(@SqlType(BingTileType.NAME) long input, @SqlType(StandardTypes.INTEGER) long newZoom)\n+    {\n+        BingTile tile = BingTile.decode(input);\n+        try {\n+            return tile.findParent(toIntExact(newZoom)).encode();\n+        }\n+        catch (IllegalArgumentException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT,\n+                    \"Invalid parent zoom level.\");\n+        }\n+    }\n+\n+    @Description(\"Return the parent for a Bing tile\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2757cbdc8a2ecd7c6d72032f661be5c502a378a4"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjA1OTEyOnYy", "diffSide": "RIGHT", "path": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1ODoxM1rOG4Q49A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1ODoxM1rOG4Q49A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1MDE2NA==", "bodyText": "ditto", "url": "https://github.com/prestodb/presto/pull/14896#discussion_r461650164", "createdAt": "2020-07-28T14:58:13Z", "author": {"login": "arhimondr"}, "path": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java", "diffHunk": "@@ -375,6 +378,72 @@ public static Slice bingTilePolygon(@SqlType(BingTileType.NAME) long input)\n         return serialize(tileToEnvelope(tile));\n     }\n \n+    @Description(\"Return the parent for a Bing tile\")\n+    @ScalarFunction(\"bing_tile_parent\")\n+    @SqlType(BingTileType.NAME)\n+    public static long bingTileParent(@SqlType(BingTileType.NAME) long input)\n+    {\n+        BingTile tile = BingTile.decode(input);\n+        try {\n+            return tile.findParent().encode();\n+        }\n+        catch (IllegalArgumentException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT,\n+                    \"Invalid parent zoom level.\");\n+        }\n+    }\n+\n+    @Description(\"Return the parent for the given zoom level for a Bing tile\")\n+    @ScalarFunction(\"bing_tile_parent\")\n+    @SqlType(BingTileType.NAME)\n+    public static long bingTileParent(@SqlType(BingTileType.NAME) long input, @SqlType(StandardTypes.INTEGER) long newZoom)\n+    {\n+        BingTile tile = BingTile.decode(input);\n+        try {\n+            return tile.findParent(toIntExact(newZoom)).encode();\n+        }\n+        catch (IllegalArgumentException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT,\n+                    \"Invalid parent zoom level.\");\n+        }\n+    }\n+\n+    @Description(\"Return the parent for a Bing tile\")\n+    @ScalarFunction(\"bing_tile_children\")\n+    @SqlType(\"array(\" + BingTileType.NAME + \")\")\n+    public static Block bingTileChildren(@SqlType(BingTileType.NAME) long input)\n+    {\n+        BingTile tile = BingTile.decode(input);\n+        try {\n+            List<BingTile> children = tile.findChildren();\n+            BlockBuilder blockBuilder = BIGINT.createBlockBuilder(null, children.size());\n+            children.stream().forEach(child -> BIGINT.writeLong(blockBuilder, child.encode()));\n+            return blockBuilder.build();\n+        }\n+        catch (IllegalArgumentException e) {\n+            throw new PrestoException(INVALID_FUNCTION_ARGUMENT,\n+                    \"Invalid child zoom level.\");\n+        }\n+    }\n+\n+    @Description(\"Return the parent for the given zoom level for a Bing tile\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2757cbdc8a2ecd7c6d72032f661be5c502a378a4"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjA2Njc5OnYy", "diffSide": "RIGHT", "path": "presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestBingTile.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1OTozMlrOG4Q9cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1OTozMlrOG4Q9cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1MTMxNA==", "bodyText": "assertThatThrownBy(() -> { ... }).hasMessage(...);\nSame for other exception checks.\nYou can also check the exception type and exception fields. Generally the assertThatThrownBy construct is very powerful", "url": "https://github.com/prestodb/presto/pull/14896#discussion_r461651314", "createdAt": "2020-07-28T14:59:32Z", "author": {"login": "arhimondr"}, "path": "presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestBingTile.java", "diffHunk": "@@ -90,4 +95,82 @@ public void testTileYToLatitude()\n             assertEquals(tileYToLatitude(1 << zoom, zoom), MIN_LATITUDE, delta);\n         }\n     }\n+\n+    @Test\n+    public void testFindChildren()\n+    {\n+        assertEquals(\n+                toSortedQuadkeys(BingTile.fromQuadKey(\"\").findChildren()),\n+                ImmutableList.of(\"0\", \"1\", \"2\", \"3\"));\n+\n+        assertEquals(\n+                toSortedQuadkeys(BingTile.fromQuadKey(\"0123\").findChildren()),\n+                ImmutableList.of(\"01230\", \"01231\", \"01232\", \"01233\"));\n+\n+        assertEquals(\n+                toSortedQuadkeys(BingTile.fromQuadKey(\"\").findChildren(2)),\n+                ImmutableList.of(\"00\", \"01\", \"02\", \"03\", \"10\", \"11\", \"12\", \"13\", \"20\", \"21\", \"22\", \"23\", \"30\", \"31\", \"32\", \"33\"));\n+\n+        try {\n+            BingTile.fromCoordinates(0, 0, MAX_ZOOM_LEVEL).findChildren();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2757cbdc8a2ecd7c6d72032f661be5c502a378a4"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjA3NDg2OnYy", "diffSide": "RIGHT", "path": "presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestBingTile.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTowMTowN1rOG4RCQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTowMTowN1rOG4RCQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1MjU0Nw==", "bodyText": "nit: maybe wrap, e.g.:\ntiles.stream()\n  .map(BingTile::toQuadKey)\n  .sorted()\n  .collect(Collectors.toList())\n\nAlso toImmutableList (statically imported)", "url": "https://github.com/prestodb/presto/pull/14896#discussion_r461652547", "createdAt": "2020-07-28T15:01:07Z", "author": {"login": "arhimondr"}, "path": "presto-geospatial/src/test/java/com/facebook/presto/plugin/geospatial/TestBingTile.java", "diffHunk": "@@ -90,4 +95,82 @@ public void testTileYToLatitude()\n             assertEquals(tileYToLatitude(1 << zoom, zoom), MIN_LATITUDE, delta);\n         }\n     }\n+\n+    @Test\n+    public void testFindChildren()\n+    {\n+        assertEquals(\n+                toSortedQuadkeys(BingTile.fromQuadKey(\"\").findChildren()),\n+                ImmutableList.of(\"0\", \"1\", \"2\", \"3\"));\n+\n+        assertEquals(\n+                toSortedQuadkeys(BingTile.fromQuadKey(\"0123\").findChildren()),\n+                ImmutableList.of(\"01230\", \"01231\", \"01232\", \"01233\"));\n+\n+        assertEquals(\n+                toSortedQuadkeys(BingTile.fromQuadKey(\"\").findChildren(2)),\n+                ImmutableList.of(\"00\", \"01\", \"02\", \"03\", \"10\", \"11\", \"12\", \"13\", \"20\", \"21\", \"22\", \"23\", \"30\", \"31\", \"32\", \"33\"));\n+\n+        try {\n+            BingTile.fromCoordinates(0, 0, MAX_ZOOM_LEVEL).findChildren();\n+            fail(\"findChildren should fail when newZoom > MAX_ZOOM_LEVEL\");\n+        }\n+        catch (IllegalArgumentException e) {\n+            // Pass\n+        }\n+\n+        try {\n+            BingTile.fromCoordinates(0, 0, 13).findChildren(MAX_ZOOM_LEVEL + 1);\n+            fail(\"findChildren should fail when newZoom > MAX_ZOOM_LEVEL\");\n+        }\n+        catch (IllegalArgumentException e) {\n+            // Pass\n+        }\n+\n+        try {\n+            BingTile.fromCoordinates(0, 0, 13).findChildren(12);\n+            fail(\"findChildren should fail when newZoom < zoomLevel\");\n+        }\n+        catch (IllegalArgumentException e) {\n+            // Pass\n+        }\n+    }\n+\n+    private List<String> toSortedQuadkeys(List<BingTile> tiles)\n+    {\n+        return tiles.stream().map(BingTile::toQuadKey).sorted().collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2757cbdc8a2ecd7c6d72032f661be5c502a378a4"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2176, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}