{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMjA3Mzky", "number": 14476, "title": "Add release notes for 0.235", "bodyText": "Missing Release Notes\nAndrii Rosa\n\n #14451 Fix interruption handling in Driver (Merged by: Andrii Rosa)\n #14452 Refactor presto spark launcher (Merged by: Andrii Rosa)\n #14356 Revert #13699 (Merged by: Andrii Rosa)\n\nJohn Roll\n\n #14331 EXPLAIN (TYPE IO) support for Aria (Merged by: Maria Basmanova)\n\nNick LaGrow\n\n #14352 Add Internationalization (i18n) plugin and Myanmar UDFs (Merged by: Rongrong Zhong)\n\nRohit Jain\n\n #14407 Add config for orc compression codec (Merged by: Maria Basmanova)\n #14396 Remove compression for creating zero row file for missing buckets (Merged by: Maria Basmanova)\n #14244 Add ExtendedFileSystem (Merged by: James Sun)\n\nTim Meehan\n\n #14443 Add function scale_qdigest (Merged by: Leiqing Cai)\n\nVic Zhang\n\n #14329 Simple PageFile format (Merged by: Andrii Rosa)\n\nWenlei Xie\n\n #13854 Support table write commit in Presto on Spark (Merged by: Andrii Rosa)\n\nmiller\n\n #14458 read druid query response stream by page (Merged by: Zhenxiao Luo)\n #14438 presto-druid changed (Merged by: Zhenxiao Luo)\n\nExtracted Release Notes\n\n#13699 (Author: Curt): HMS Impersonation Access and breakdown metrics by hosts\n\nImpersonation Access by using HMS delegation token.\nEnable multi HMS instances load balancing and breakdown metrics by HMS hosts.\n\n\n#13746 (Author: Ying Su): Optimize UNNEST\n\nImprove performance of UnnestOperator.\n\n\n#14214 (Author: Leiqing Cai): Verifier fixes and improvements\n\nFix an issue where resubmitted queries always fail.\nAdd support to output verification results for failures due to Verifier internal errors.\nAdd support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property smart-teardown, which replaces run-teardown-on-result-mismatch.\n\n\n#14255 (Author: Leiqing Cai): Relax length limit of parameter type list and return type\n\nImprove CREATE FUNCTION to allow parameter type list and return type to have a length up to 30k characters.\n\n\n#14275 (Author: Xiang Fu): Upgrade presto pinot connector to be compatible with new Broker routing and time boundary APIs in Pinot 0.3.0 release\n\nAdding support for new Pinot Routing Table APIs.\n\n\n#14302 (Author: David Taieb): Add ST_Centroid for points, multi-points on a sphere\n\nAdd support for :func:ST_AsText to accept Spherical Geographies.\nAdd support for :func:ST_Centroid to accept Spherical Geography Points and MultiPoints.\n\n\n#14303 (Author: Rongrong Zhong): Extract common subexpression in page projection at codegen\n\nAdd optimization for page projection by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property optimize_common_sub_expressions.\n\n\n#14320 (Author: Ying Su): Add max buffer count config property for optimized repartitioning\n\nAdd config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n\n\n#14322 (Author: Xiang Fu): Adding more support for  Pinot types to Presto type conversion\n\nSupport mapping Pinot BYTES data type to Presto VARBINARY type.\nSupport mapping Pinot time fields with days since epoch value to Presto DATE type.\nSupport mapping Pinot time fields with milliseconds since epoch value to Presto TIMESTAMP type.\nPut Pinot Field type in to column comment field shown as DIMENSTION, METRIC, TIME, DATETIME, to provide more information.\nAdding configs 'pinot.infer-date-type-in-schema' and 'pinot.infer-timestamp-type-in-schema' to switch on/off the type conversion. Default is OFF.\n\n\n#14324 (Author: Ariel Weisberg): Add peak [task] total memory to returned stats\n\nAdd peak [task] total memory to returned stats.\n\n\n#14326 (Author: Shixuan Fan): Support caching all tables in file status cache\n\nAdded support in file status cache to cache all tables. This could be enabled by setting hive.file-status-cache-tables to *.\n\n\n#14332 (Author: Leiqing Cai): Make table properties a config property\n\nAdd support for specifying table properties override for temporary Verifier tables, through configuration property control.table-properties and test.table-properties.\n\n\n#14334 (Author: Rongrong Zhong): Fix named query output does not match column list\n\nFix VerifyException when named query is a table reference (:issue:14333).\n\n\n#14335 (Author: Zhenxiao Luo): Add native parquet writer\n\nNative Parquet Writer for Presto.\n\n\n#14340 (Author: Rongrong Zhong): Fix NullPointerExpression in ExpressionInterpreter::visitBindExpression\n\nFix potential NullPointerException in ExpressionInterpreter::visitBindExpression when processed values contain null.\n\n\n#14341 (Author: Xiang Fu): Best effort push down distinct count to pinot\n\nAdd capability to push down distinct count query to Pinot with best effort.\n\n\n#14354 (Author: Leiqing Cai): Support verifying SELECT queries with certain non-storable columns\n\nAdd support for verifying SELECT queries that produce columns of TIME, TIMESTAMP WITH TIME ZONE, or DECIMAL types, or columns of structured types with those types.\n\n\n#14355 (Author: Venki Korukanti): Pass the correct value for fileSize in Hive internal split factory\n\nFix a bug in Hive split calculation which affects Parquet reader in few corner cases.\n\n\n#14365 (Author: Leiqing Cai): Disallow invoking SQL functions in SQL function body\n\nAdd check to disallow invoking SQL functions in SQL function body.\n\n\n#14366 (Author: Leiqing Cai): Support SHOW CREATE FUNCTION\n\nAdd support for SHOW CREATE FUNCTION.\n\n\n#14372 (Author: Zhenxiao Luo): count distinct pushdown for druid connector\n\nCount distinct pushdown for druid connector.\nFix druid connector segment scan.\n\n\n#14383 (Author: Shixuan Fan): Add preferred ordering columns for unbucketed table\n\nAdded table property preferred_ordering_columns to support writing sorted files for unbucketed table. The list of ordering columns could be specified using the preferred_ordering_columns table property.\n\n\n#14386 (Author: Ariel Weisberg): Add soft memory limit configuration properties\n\nAdd soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are query.soft-max-memory-per-node, query.soft-max-total-memory-per-node, query.soft-max-total-memory, and query.soft-max-memory.\n\n\n#14393 (Author: James Petty): Refactor AWS SDK client metrics collection\n\nAdd AWS client retry pause time metrics to PrestoS3FileSystemStats.\nFix AWS client metric reporting when using S3 select.\n\n\n#14435 (Author: Zhenxiao Luo): Add session property for druid connector\n\nSession property, druid.pushdown, it added, to control whether to pushdown all query processing to druid.\n\n\n#14449 (Author: Rongrong Zhong): Cse filter\n\nEnable optimize_common_sub_expressions for filter.\n\n\n#14463 (Author: Sreeni Viswanadha): Error on excessively large code generation\n\nCall the ASM's simple ClassWriter with COMPUTE_MAXS flag to flush out things like code size too big before we do the expensive COMPUTE_FRAMES call which can result in worker GC storms.\n\n\n\nAll Commits\n\nc609bf9 Prevent ASM library causing worker GC storms. (Sreeni Viswanadha)\nb13f60b Pre-calculate nested positions array size in BlockEncodingBuffer (Ying Su)\na75114b Enable common sub expression optimization in PageFunctionCompiler filter (Rongrong Zhong)\nf9f9d83 Support SHOW CREATE FUNCTION (Leiqing Cai)\necfe63e Unify QualifiedName to QualifiedFunctionName conversion (Leiqing Cai)\nb6659da Performance benchmark for common sub expression projection (Rongrong Zhong)\nc096a8e Generate projection bytecode based on common sub expression (Rongrong Zhong)\nbc8e557 Change PageFunctionCompiler to compile a list of projections (Rongrong Zhong)\na95a5bf Remove PageProjection::getType (Rongrong Zhong)\nee1f004 Add API in PageFunctionCompiler to compile a list of projections (Rongrong Zhong)\n555df6a Change PageProjection to produce List (Rongrong Zhong)\n1361d6d Fix named query output does not match column list (Rongrong Zhong)\na5a0492 Fix invalid quantile to be a user error (Tim Meehan)\n34500b1 Add function scale_qdigest (Tim Meehan)\n52eaac5 Fix interruption handling in Driver (Andrii Rosa)\n8445177 read druid query response stream by page (miller)\nc9f3fb6 Refactor presto spark launcher (Andrii Rosa)\n22d97dd Fix duplicated table name in TestHiveIntegrationSmokeTest (Vic Zhang)\naaeaa5b Remove positionCount check in createRandomLongDecimalsBlock (Ying Su)\nca3f93f Fix \"bound must be positive\" exception when creating DictionaryBlock (Ying Su)\n0a0c6ff Support splittable read of PageFile (Vic Zhang)\nf8fac99 Create zero row file for PageFile format (Vic Zhang)\n1cc59eb Add footer to PageFile format (Vic Zhang)\n2bfddd0 Support table write commit in Presto on Spark (Wenlei Xie)\nc93c8ce Introduce PageSinkCommitStrategy (Wenlei Xie)\n8df5254 Rename partition / lifespan commit into page sink commit (Andrii Rosa)\n2c9385a Rename PageSinkProperties#isPartitionCommitRequired (Wenlei Xie)\nb4f826e Refactor HiveWriterFactory (Wenlei Xie)\n0e6c5ff Fix query client timeout (Tim Meehan)\n34b3f6a Add session property for druid connector (Zhenxiao Luo)\na20247b escape keyword for druid column name (miller)\n7a988d5 Fix float value for druid connector (miller)\n353853b add presto-druid connector to server tarball (miller)\n4405e0c Allow queued queries to be preempted and canceled (Tim Meehan)\n25fe380 Fix QueryResource for queued queries (Tim Meehan)\n90e7405 Display built-in functions first in SHOW FUNCTIONS (Leiqing Cai)\nb61e0b6 Use shared metrics collector in PestoS3ClientFactory (James Petty)\nab241b8 Refactor AWS SDK Client Metrics Collection (James Petty)\n22a421b Remove unused code from TestRowBasedSerialization#testRandomBlocks (Ying Su)\nfc81c05 Refactor flattenCollection to GeometryUtils (James A. Gill)\n8f7edbd Add config for orc compression codec (Rohit Jain)\nf220d7f Add soft memory limit configuration properties (Ariel Weisberg)\n6aac57f Clean up PlanOptimizerProvider while dropping connector (Yubin Li)\n7a01f2b Make parquet's schema check more tolerant for adding and removing sub-field in struct (Beinan Wang)\n746c290 add unit test for parquet schema mismatch checker and fix code review issues (Beinan Wang)\n5368a56 Use field name for Parquet schema mismatch checking (Beinan Wang)\ne1ddc0e Fix writing tables with preferred ordering using temp path (Shixuan Fan)\n957ee09 Drop presto-orc's dependency on presto-array (Nikhil Collooru)\n8f12b44 Fix estimatedSerializedSizeInBytes calculation in ColumnarXXX (Ying Su)\n96c6da6 Improve BenchmarkUnnestOperator (Ying Su)\n6e09add Optimize Unnest (Ying Su)\naa240aa Refactor Unnester (Ying Su)\n36df11f Refactor UnnestOperator (Ying Su)\n78225ad Add appendNull() to Block interface (Ying Su)\ne64bb52 Add support for generating blocks and pages with specified percentage of nulls (Ying Su)\n01d9ef4 Add benchmark for copying blocks (Ying Su)\n3e4f182 Add preferred ordering columns for unbucketed table (Shixuan Fan)\n77530ba Move sorting column string conversion methods into SortingColumn (Shixuan Fan)\nbf4485f Replace comma string with static constant COMMA (Shixuan Fan)\nc8dbd9a Fix WarningsCollector (Tim Meehan)\ndd0a82f Remove deprecated functions from ConnectorSession (Nikhil Collooru)\n0e916c6 Update discovery-server to 1.31. (Sujay Jain)\n6bab32a Drop presto-orc dependency on ConnectorSession (Nikhil Collooru)\na2a4c46 Send SqlFunctionProperties to operators (Nikhil Collooru)\n42d5f11 Add sessionStartTime,sessionLocale,sessionUser to SqlFunctionProperties (Nikhil Collooru)\n8c469bd Fix bug in IS_SUBNET_OF function (Nikhil Collooru)\n3384c20 Remove compression for creating zero row file (Rohit Jain)\n669cf6e Add Internationalization (i18n) plugin and Myanmar UDFs (Nick LaGrow)\n60fbdb0 Fix EXPLAIN (TYPE IO) when Aria scan is ON (John Roll)\n24be9ab Use NO_NODES_AVAILABLE Exception for affinity scheduler (Ke Wang)\n29afd77 Add test coverage for MySqlConnectionModule (Leiqing Cai)\nd8c6b8f Fix ClusterStatsResource (Tim Meehan)\n319aff3 Fix failing SQL functions test (Leiqing Cai)\nf62b73b Add subfield pruning to StripeReader (Bhavani Hari)\neb60ad9 Add status endpoint for HTTP HEAD requests (James Petty)\na486502 Reduce LazyBlock copy / wrapping in ScanFilterAndProjectOperator (James Petty)\nbcabbdf Disallow invoking SQL functions in SQL function body (Leiqing Cai)\n80b03de Support function namespace in integration tests (Leiqing Cai)\n0d3235a Update h2 to 1.4.199 (Leiqing Cai)\n9e5eb47 Speed up GC of MapFlatSelectiveReader by clearing member variables in close() (Bhavani Hari)\nab52a1a Speed up GC of DecimalStreamReader by clearing member variables in close() (Bhavani Hari)\n34841af Speed up GC of StructStreamReader by clearing member variables in close() (Bhavani Hari)\n25faa63 Speed up GC of ListStreamReader by clearing member variables in close() (Bhavani Hari)\ndc60bb2 Speed up GC of TimestampSelectiveReader by clearing member variables in close() (Bhavani Hari)\n6158790 Speed up GC of DoubleSelectiveReader by clearing member variables in close() (Bhavani Hari)\n3a78b32 Speed up GC of FloatSelectiveReader by clearing member variables in close() (Bhavani Hari)\n13738ff Speed up GC of BooleanSelectiveReader by clearing member variables in close() (Bhavani Hari)\n3d66fde Speed up GC of ByteSelectiveReader by clearing member variables in close() (Bhavani Hari)\nc5c5815 Speed up GC of OrcReader by clearing member variables in close() (Bhavani Hari)\n3559e88 Speed up GC of MapSelectiveReader by clearing member variables in close() (Bhavani Hari)\n924c584 Speed up GC of LongSelectiveReaders by clearing member variables in close() (Bhavani Hari)\n4ac5783 Speed up GC of SliceSelectiveReader by clearing member variables in close() (Bhavani Hari)\nd9d8398 Add PageFile format in HiveFileFormatBenchmark (Vic Zhang)\n777ff92 Disable unnecessary test for PageFile format (Vic Zhang)\n7f329aa Add control property for PageFile stripe max size (Vic Zhang)\nefdeb12 Create PageFilePageSource to read PageFile (Vic Zhang)\n7f1138d Support write serialized pages to PageFile format (Vic Zhang)\n191979c Add BlockEncodingSerde to ConnectorContext (Vic Zhang)\ncf42f75 Add ST_Centroid for points and multipoints on a sphere (David Taieb)\n5a969b2 Enforce buffer size limits for BlockEncodingBuffer (Ying Su)\nef71827 Introduce estimatedSerializedSizeInBytes in DecodedBlockNode (Ying Su)\nd1f21b5 Introduce estimatedSerializedSizeInBytes in ColumnarXXX (Ying Su)\ne83844e Rename pageSize to partitionBufferCapacity (Ying Su)\n6ec48b2 Refactor getRetainedSizeInBytes in DecodedBlockNode (Ying Su)\n61679f4 Change nested buffers to AbstractBlockEncodingBuffer (Ying Su)\nd90e533 Rename OrcDataSink to DataSink (Vic Zhang)\n8c65a95 Rename OutputStreamOrcDataSink to OutputStreamDataSink (Vic Zhang)\neaa0c57 Rename OrcDataOutput to DataOutput (Vic Zhang)\nad004b7 Remove unused methods in TestDruidQueryBase (Zhenxiao Luo)\n5f89b53 Fix druid connector segment scan (Zhenxiao Luo)\n1e51f2f count distinct pushdown for druid connector (Zhenxiao Luo)\nb7a0941 Fix section labeling for KHyperLogLog documentation (Leiqing Cai)\ne338688 Fix NPE when reading structs with a newly added subfield (Bhavani Hari)\n61681cf Best effort to push down distinct count function to pinot (Xiang Fu)\n99653c6 fixing date type in pinot-connector (Xiang Fu)\n3c2d9d8 Handle empty and arbitrary slices in Parquet reader (James Petty)\nfdfd5df Optimize metastore communication when writing to partitioned table (Andrii Rosa)\nd699f46 Add smoke test for insert into immutable partition (Andrii Rosa)\n0366472 Refactor TestHiveIntegrationSmokeTest (Andrii Rosa)\nf7ecf0e Refactor HiveWriterFactory#getWriterParameters (Andrii Rosa)\n701c24a Refactor HiveWriterFactory#createWriter (Andrii Rosa)\n4c43075 Make timestamp columns nullable (Leiqing Cai)\n030052b Relax length limit of parameter type list and return type (Leiqing Cai)\na8de10f Improve TestMySqlFunctionNamespaceManager (Leiqing Cai)\nd4fc345 Support verifying SELECT queries with certain non-storable columns (Leiqing Cai)\n10c3bd0 Add Alluxio Catalog in Cache documentation (Haoyuan Li)\n95bcb39 Drop presto-orc's dependency on presto-memory-context (Nikhil Collooru)\nd9fc462 Add ExtendedFileSystem (Rohit Jain)\n2d9e768 Fix bug AddExchanges dropping filter when pushdown is enabled (Saksham Sachdev)\n726e18a Add max buffer count config property for optimized repartitioning (Ying Su)\n36141ed Add peak [task] total memory to returned stats (Ariel Weisberg)\n5c296b9 Fix minor typo in error message (Shixuan Fan)\n11b8d41 Report failure to compile pushed down filter as COMPILE_ERROR (Sujay Jain)\n30c0c9a Reduce instance size and block copies in Page class (James Petty)\n5812d78 Pass the correct value for fileSize in Hive internal split factory (Venki Korukanti)\n824f282 Revert \"Hive Meta Store impersonation access\" (Andrii Rosa)\nfa769f7 Revert \"HMS multiple instance metrics\" (Andrii Rosa)\n88f304c Revert \"refactoring to use HMS Authentication Module\" (Andrii Rosa)\n4b2e750 Revert \"add Config for multiple hms instances\" (Andrii Rosa)\n837f6a0 Revert \"Update HMS memory settings\" (Andrii Rosa)\na82d63c Revert \"address review comments\" (Andrii Rosa)\nc615632 Use full name for Parquet classes (Zhenxiao Luo)\nd041bde Add native parquet writer (qqibrow)\n824fbc2 address review comments (Curt)\n358f727 Update HMS memory settings (Curt)\nff9ae91 add Config for multiple hms instances (Curt)\na532112 refactoring to use HMS Authentication Module (Curt)\n4d144f0 HMS multiple instance metrics (Curt)\nbb21a83 Hive Meta Store impersonation access (Zhongting Hu)\n719823f Add documentation for KHyperLogLog (Tim Meehan)\n05e0390 Fix NullPointerExpression in ExpressionInterpreter::visitBindExpression (Rongrong Zhong)\nb9eab44 Make table properties a config property instead of hard-coded (Leiqing Cai)\n0bed384 Drop presto-orc's dependency on presto-hive-common (Nikhil Collooru)\nabf9a5b Move MarkDistinctNode to SPI (Xiang Fu)\nc3334eb Add a page on caching (Bin Fan)\nfcb7e41 Upgrade aircompressor to 0.15 (Zhenxiao Luo)\nbf9b526 Support caching all tables in file status cache (Shixuan Fan)\na1d0999 Update Presto schema example in pinot connector doc (Xiang Fu)\n30584d2 Address comments (Xiang Fu)\nc1412c7 Adding config to swtich on/off date type and timestamp type inferral (Xiang Fu)\ncd439c5 Adding support for Date and Timestamp data type support for Pinot (Xiang Fu)\n68a0632 Fix bugs in Druid connector aggregation pushdown (Zhenxiao Luo)\n3facc73 Fix getRetainedSizeInBytes for ColumnarXXX (Ying Su)\n3f03c2c change variable errMsgSplits to errorMessageSplits (Xiang Fu)\n175cddb Address comments (Xiang Fu)\n0ebc220 Upgrade presto pinot connector to be compatible with new Pinot Broker routingTable and time boundary APIs in Pinot 0.3.0 release. (Xiang Fu)\n3e64b8a Fix memory allocation for nestedPositions in the map reader (Masha Basmanova)\n489c233 Reduce memory allocations in OrcInputStream (Masha Basmanova)\n37a9750 Reduce memory allocations in SliceDirectSelectiveStreamReader (Masha Basmanova)\n7eb85a2 Add SqlBaseParser initializer hook and refreshable ATN caches (James Petty)\nda2cc56 Restart verification if checksum queries fail with table already exists (Leiqing Cai)\nb65fc7c Improve teardown skipping (Leiqing Cai)\n2df407b Fix AbstractTestVerifierIntegrationSmokeTest (Leiqing Cai)\n7f833d0 Expose unexpected exceptions in Verifier (Leiqing Cai)\n7e74c26 Improve readability in AbstractVerification (Leiqing Cai)\naa4c4ff Fix verification resubmission (Leiqing Cai)\ncfe1d3d Improve VerificationContext (Leiqing Cai)\n3ffdf85 Move PagesSerde and PagesSerdeUtil to SPI (Vic Zhang)\n0afbdb3 Add PageCompressor in SPI (Vic Zhang)\nf98d7ad Move SpillCipher to SPI (Vic Zhang)\nf98e644 Remove guava dependency from PagesSerdeUtil (Vic Zhang)\n2bba1cc Remove data copy from InMemoryRecordSet (James Petty)\n5c52eea Optimize Slice functions to avoid Slice.getBytes() (James Petty)\naf1f416 Use JSON generator Base64 conversion in BlockJsonSerde (James Petty)\n778b5a8 Avoid Slice copies in parquet reader (James Petty)", "createdAt": "2020-05-04T21:58:59Z", "url": "https://github.com/prestodb/presto/pull/14476", "merged": true, "mergeCommit": {"oid": "c51b285505e0ae0d663471e31cf5ba5151784cf9"}, "closed": true, "closedAt": "2020-05-16T00:17:43Z", "author": {"login": "caithagoras"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgYUhqABqjMzMjUxNTkwMjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchrXGeABqjMzNDMwMjE3OTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e0748efc6d5ff4cb26257d2abb8903382259cde", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/9e0748efc6d5ff4cb26257d2abb8903382259cde", "committedDate": "2020-05-11T23:29:00Z", "message": "[TO BE SQUASHED] Further polishing"}, "afterCommit": {"oid": "efe9c0422166ba373421ef11a3e562fd194d1b34", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/efe9c0422166ba373421ef11a3e562fd194d1b34", "committedDate": "2020-05-11T23:31:12Z", "message": "Add release notes for 0.235"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NjA3OTky", "url": "https://github.com/prestodb/presto/pull/14476#pullrequestreview-409607992", "createdAt": "2020-05-11T23:51:50Z", "commit": {"oid": "efe9c0422166ba373421ef11a3e562fd194d1b34"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzo1MTo1MFrOGTxTgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzo1MTo1MFrOGTxTgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM4MzkzOA==", "bodyText": "For #14352 - how about\nAdd an Internationalization Functions plugin plus MYANMAR_FONT_ENCODING and MYANMAR_NORMALIZE_UNICODE to support working with Burmese text", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r423383938", "createdAt": "2020-05-11T23:51:50Z", "author": {"login": "nlagrow"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,61 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add ``scale_qdigest`` function to scale a ``qdigest`` to a new weight\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efe9c0422166ba373421ef11a3e562fd194d1b34"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NjM3MzYz", "url": "https://github.com/prestodb/presto/pull/14476#pullrequestreview-409637363", "createdAt": "2020-05-12T01:23:18Z", "commit": {"oid": "efe9c0422166ba373421ef11a3e562fd194d1b34"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NjY1MzEx", "url": "https://github.com/prestodb/presto/pull/14476#pullrequestreview-409665311", "createdAt": "2020-05-12T02:58:51Z", "commit": {"oid": "efe9c0422166ba373421ef11a3e562fd194d1b34"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "efe9c0422166ba373421ef11a3e562fd194d1b34", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/efe9c0422166ba373421ef11a3e562fd194d1b34", "committedDate": "2020-05-11T23:31:12Z", "message": "Add release notes for 0.235"}, "afterCommit": {"oid": "9d9cd26bb3402f2f598e2e6d28ba6656dab24b2c", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/9d9cd26bb3402f2f598e2e6d28ba6656dab24b2c", "committedDate": "2020-05-12T18:14:45Z", "message": "Add release notes for 0.235"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMzAzODk4", "url": "https://github.com/prestodb/presto/pull/14476#pullrequestreview-410303898", "createdAt": "2020-05-12T18:17:11Z", "commit": {"oid": "9d9cd26bb3402f2f598e2e6d28ba6656dab24b2c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d9cd26bb3402f2f598e2e6d28ba6656dab24b2c", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/9d9cd26bb3402f2f598e2e6d28ba6656dab24b2c", "committedDate": "2020-05-12T18:14:45Z", "message": "Add release notes for 0.235"}, "afterCommit": {"oid": "2cf4a3f01377183bf057e1a245183fdcfb8f12c1", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/2cf4a3f01377183bf057e1a245183fdcfb8f12c1", "committedDate": "2020-05-12T18:18:02Z", "message": "Add release notes for 0.235"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2cf4a3f01377183bf057e1a245183fdcfb8f12c1", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/2cf4a3f01377183bf057e1a245183fdcfb8f12c1", "committedDate": "2020-05-12T18:18:02Z", "message": "Add release notes for 0.235"}, "afterCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/65a11444a0c3d618b6f511d30408c1a7aadccb3f", "committedDate": "2020-05-12T20:57:51Z", "message": "Add release notes for 0.235"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDIwNDE2", "url": "https://github.com/prestodb/presto/pull/14476#pullrequestreview-410420416", "createdAt": "2020-05-12T21:03:37Z", "commit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTowMzozN1rOGUY39g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTowNjo0OVrOGUY-Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMjI0Ng==", "bodyText": "Need some clarification / short description what the error is. Does it cause query failure? Avoid \"analysis phase\" if possible since user does not need to understand that, as user sees \"query failure\" or \"incorrect result\", etc.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424032246", "createdAt": "2020-05-12T21:03:37Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzAwMQ==", "bodyText": "What about\nAdd support for pre-checking if bytecode size is within limits.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424033001", "createdAt": "2020-05-12T21:05:10Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzI1Mw==", "bodyText": "Did it cause query failure?", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424033253", "createdAt": "2020-05-12T21:05:36Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzQwNg==", "bodyText": "missing \".\" at the end of the line.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424033406", "createdAt": "2020-05-12T21:05:52Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzg4Nw==", "bodyText": "Add configuration properties ...\n\nAlso, default value may be omitted.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424033887", "createdAt": "2020-05-12T21:06:49Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDI1NTQz", "url": "https://github.com/prestodb/presto/pull/14476#pullrequestreview-410425543", "createdAt": "2020-05-12T21:11:36Z", "commit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxMTozNlrOGUZHyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToxNzo1NVrOGUZTpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNjI5OQ==", "bodyText": "Use the structure recommended by the release notes wiki. Also, is there a corresponding session property?\nAdd support for limiting the total number of buffers per optimized repartitioning operator. The limit can be set by the configuration property ``driver.max-page-partitioning-buffer-count``.\n\nDefault value can be omitted.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424036299", "createdAt": "2020-05-12T21:11:36Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNjg3NQ==", "bodyText": "Remove \"for druid connector\" as the section header has already made that clear.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424036875", "createdAt": "2020-05-12T21:12:48Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzODQ5Mg==", "bodyText": "According to #14357, I think this should be\nFix an issue where `distinct` is not respected in count aggregation\n\n@zhenxiao", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424038492", "createdAt": "2020-05-12T21:15:59Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzODczOQ==", "bodyText": "nit: multi-HMS", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424038739", "createdAt": "2020-05-12T21:16:34Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.\n+\n+Geospatial Computation Changes\n+______________________________\n+* Add support for :func:`ST_AsText` to accept Spherical Geographies.\n+* Add support for :func:`ST_Centroid` to accept Spherical Geography Points and MultiPoints.\n+\n+Hive Changes\n+____________\n+* Fix a bug in Hive split calculation which affects Parquet reader in few corner cases.\n+* Fix AWS client metric reporting when using S3 select.\n+* Add AWS client retry pause time metrics to PrestoS3FileSystemStats.\n+* Add table property ``preferred_ordering_columns`` to support writing sorted files for unbucketed table.\n+* Add native Parquet Writer for Presto.\n+* Add support for impersonation access by using HMS delegation token.\n+* Add support for multi HMS instances load balancing and breakdown metrics by HMS hosts.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzODkyMg==", "bodyText": "``PrestoS3FileSystemStats``", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424038922", "createdAt": "2020-05-12T21:17:01Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.\n+\n+Geospatial Computation Changes\n+______________________________\n+* Add support for :func:`ST_AsText` to accept Spherical Geographies.\n+* Add support for :func:`ST_Centroid` to accept Spherical Geography Points and MultiPoints.\n+\n+Hive Changes\n+____________\n+* Fix a bug in Hive split calculation which affects Parquet reader in few corner cases.\n+* Fix AWS client metric reporting when using S3 select.\n+* Add AWS client retry pause time metrics to PrestoS3FileSystemStats.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzOTE2MQ==", "bodyText": "Add support for pushing down ...", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424039161", "createdAt": "2020-05-12T21:17:32Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.\n+\n+Geospatial Computation Changes\n+______________________________\n+* Add support for :func:`ST_AsText` to accept Spherical Geographies.\n+* Add support for :func:`ST_Centroid` to accept Spherical Geography Points and MultiPoints.\n+\n+Hive Changes\n+____________\n+* Fix a bug in Hive split calculation which affects Parquet reader in few corner cases.\n+* Fix AWS client metric reporting when using S3 select.\n+* Add AWS client retry pause time metrics to PrestoS3FileSystemStats.\n+* Add table property ``preferred_ordering_columns`` to support writing sorted files for unbucketed table.\n+* Add native Parquet Writer for Presto.\n+* Add support for impersonation access by using HMS delegation token.\n+* Add support for multi HMS instances load balancing and breakdown metrics by HMS hosts.\n+* Add support in file status cache to cache all tables. This could be enabled by setting ``hive.file-status-cache-tables`` to ``*``.\n+\n+Pinot Changes\n+_____________\n+* Add feature to push down distinct count query to Pinot on a best-effort basis.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzOTMzNQ==", "bodyText": "... by setting configuration property ``hive.file- ...", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424039335", "createdAt": "2020-05-12T21:17:55Z", "author": {"login": "caithagoras"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.\n+\n+Geospatial Computation Changes\n+______________________________\n+* Add support for :func:`ST_AsText` to accept Spherical Geographies.\n+* Add support for :func:`ST_Centroid` to accept Spherical Geography Points and MultiPoints.\n+\n+Hive Changes\n+____________\n+* Fix a bug in Hive split calculation which affects Parquet reader in few corner cases.\n+* Fix AWS client metric reporting when using S3 select.\n+* Add AWS client retry pause time metrics to PrestoS3FileSystemStats.\n+* Add table property ``preferred_ordering_columns`` to support writing sorted files for unbucketed table.\n+* Add native Parquet Writer for Presto.\n+* Add support for impersonation access by using HMS delegation token.\n+* Add support for multi HMS instances load balancing and breakdown metrics by HMS hosts.\n+* Add support in file status cache to cache all tables. This could be enabled by setting ``hive.file-status-cache-tables`` to ``*``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDM0Nzc3", "url": "https://github.com/prestodb/presto/pull/14476#pullrequestreview-410434777", "createdAt": "2020-05-12T21:26:34Z", "commit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToyNjozNFrOGUZj5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToyNjozNFrOGUZj5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0MzQ5Mw==", "bodyText": "This note is a bit confusing to me. Would the following be correct?\nAdd optimization for filters and projections to extract common subexpressions \nand evaluate them only once.  This optimization can be turned off by the \nsession property ``optimize_common_sub_expressions``.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424043493", "createdAt": "2020-05-12T21:26:34Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDM2MDA2", "url": "https://github.com/prestodb/presto/pull/14476#pullrequestreview-410436006", "createdAt": "2020-05-12T21:28:35Z", "commit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToyODozNVrOGUZneQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozNjo0NVrOGUZ1eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NDQwOQ==", "bodyText": "is there any documentation about how/why someone would configure this?", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424044409", "createdAt": "2020-05-12T21:28:35Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NDc2Ng==", "bodyText": "should this be in hive connector changes?", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424044766", "createdAt": "2020-05-12T21:29:25Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NTcwNw==", "bodyText": "Put the relevant config properties in the bullet where we say support is added (bullets 2 and 3 i think)", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424045707", "createdAt": "2020-05-12T21:31:25Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMzg4Nw=="}, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NjI2NQ==", "bodyText": "what kinds of things can be pushed down?  if this is a new feature, then we probably don't need the note about count distinct pushdown", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424046265", "createdAt": "2020-05-12T21:32:42Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NzAyNQ==", "bodyText": "This should go after all the connector changes", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424047025", "createdAt": "2020-05-12T21:34:28Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NzExOQ==", "bodyText": "Should be called Druid Connector Changes", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424047119", "createdAt": "2020-05-12T21:34:43Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NzQxOA==", "bodyText": "Hive Connector Changes -- also should go with the other connectors", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424047418", "createdAt": "2020-05-12T21:35:23Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.\n+\n+Geospatial Computation Changes\n+______________________________\n+* Add support for :func:`ST_AsText` to accept Spherical Geographies.\n+* Add support for :func:`ST_Centroid` to accept Spherical Geography Points and MultiPoints.\n+\n+Hive Changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NzUzNw==", "bodyText": "merge this with the  \"Pinot Connector Changes\" above", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424047537", "createdAt": "2020-05-12T21:35:42Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.\n+\n+Geospatial Computation Changes\n+______________________________\n+* Add support for :func:`ST_AsText` to accept Spherical Geographies.\n+* Add support for :func:`ST_Centroid` to accept Spherical Geography Points and MultiPoints.\n+\n+Hive Changes\n+____________\n+* Fix a bug in Hive split calculation which affects Parquet reader in few corner cases.\n+* Fix AWS client metric reporting when using S3 select.\n+* Add AWS client retry pause time metrics to PrestoS3FileSystemStats.\n+* Add table property ``preferred_ordering_columns`` to support writing sorted files for unbucketed table.\n+* Add native Parquet Writer for Presto.\n+* Add support for impersonation access by using HMS delegation token.\n+* Add support for multi HMS instances load balancing and breakdown metrics by HMS hosts.\n+* Add support in file status cache to cache all tables. This could be enabled by setting ``hive.file-status-cache-tables`` to ``*``.\n+\n+Pinot Changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0Nzk5Mg==", "bodyText": "I think this can go under \"general changes\"", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424047992", "createdAt": "2020-05-12T21:36:45Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add configs ``pinot.infer-date-type-in-schema`` and ``pinot.infer-timestamp-type-in-schema`` to switch on/off the type conversion. Default is OFF.\n+\n+Verifier Changes\n+________________\n+* Fix an issue where resubmitted queries always fail.\n+* Add support for verifying ``SELECT`` queries that produce columns of ``TIME``, ``TIMESTAMP WITH TIME ZONE``, or ``DECIMAL`` types, or columns of structured types with those types.\n+* Add support for specifying table properties override for temporary Verifier tables, through configuration property ``control.table-properties`` and ``test.table-properties``.\n+* Add support to output verification results for failures due to Verifier internal errors.\n+* Add support to skip teardown queries in case control and test queries succeeds but verification fails. This can be enabled by configuration property ``smart-teardown``, which replaces ``run-teardown-on-result-mismatch``.\n+\n+Druid Changes\n+_____________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.pushdown`` session property.\n+* Add count distinct pushdown for druid connector.\n+\n+Geospatial Computation Changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDg3MDM0", "url": "https://github.com/prestodb/presto/pull/14476#pullrequestreview-410487034", "createdAt": "2020-05-12T23:15:59Z", "commit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoxNTo1OVrOGUcMdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoxNTo1OVrOGUcMdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NjY0NQ==", "bodyText": "Instead of returned stats - lets just saw query stats", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r424086645", "createdAt": "2020-05-12T23:15:59Z", "author": {"login": "mayankgarg1990"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,64 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix error in analysis phase.\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Add the ability to pre-check method bytecode size is within limits.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for page projection and filter by extract and compute common subexpressions among all projections first. This optimization can be turned off by session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add config property driver.max-page-partitioning-buffer-count, to limit the total number of buffers per optimized repartitioning operator. The default value is 1,000,000.\n+* Add peak task total memory to returned stats.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65a11444a0c3d618b6f511d30408c1a7aadccb3f", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/65a11444a0c3d618b6f511d30408c1a7aadccb3f", "committedDate": "2020-05-12T20:57:51Z", "message": "Add release notes for 0.235"}, "afterCommit": {"oid": "374de7dabfb99e238ab75b1a63ec2d66615ff619", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/374de7dabfb99e238ab75b1a63ec2d66615ff619", "committedDate": "2020-05-12T23:42:53Z", "message": "Add release notes for 0.235"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "374de7dabfb99e238ab75b1a63ec2d66615ff619", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/374de7dabfb99e238ab75b1a63ec2d66615ff619", "committedDate": "2020-05-12T23:42:53Z", "message": "Add release notes for 0.235"}, "afterCommit": {"oid": "0ea5d4cc62fcdfcac19b693d431bc6ff36a8f191", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/0ea5d4cc62fcdfcac19b693d431bc6ff36a8f191", "committedDate": "2020-05-13T23:58:42Z", "message": "Add release notes for 0.235"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODY5MjQ1", "url": "https://github.com/prestodb/presto/pull/14476#pullrequestreview-411869245", "createdAt": "2020-05-14T14:35:27Z", "commit": {"oid": "0ea5d4cc62fcdfcac19b693d431bc6ff36a8f191"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozNToyN1rOGVfT-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozNzo1NlrOGVfbDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4NjI5Nw==", "bodyText": "nit: put this with the other \"fix\"es", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r425186297", "createdAt": "2020-05-14T14:35:27Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,56 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Fix issue where queries with large filters in the where clause would cause excessive memory usage.  Now such queries will fail quickly with ``GENERATED_BYTECODE_TOO_LARGE``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ea5d4cc62fcdfcac19b693d431bc6ff36a8f191"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4Njk0OA==", "bodyText": "nit: this one's technically an improvement, so I guess put it above the previous thing.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r425186948", "createdAt": "2020-05-14T14:36:22Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,56 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Fix issue where queries with large filters in the where clause would cause excessive memory usage.  Now such queries will fail quickly with ``GENERATED_BYTECODE_TOO_LARGE``.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for filters and projections to extract common subexpressions and evaluate them only once.  This optimization can be turned off by the session property ``optimize_common_sub_expressions``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ea5d4cc62fcdfcac19b693d431bc6ff36a8f191"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4ODEwOA==", "bodyText": "nit: I think this isn't needed because all of the query processing pushdown is new.", "url": "https://github.com/prestodb/presto/pull/14476#discussion_r425188108", "createdAt": "2020-05-14T14:37:56Z", "author": {"login": "rschlussel"}, "path": "presto-docs/src/main/sphinx/release/release-0.235.rst", "diffHunk": "@@ -0,0 +1,56 @@\n+=============\n+Release 0.235\n+=============\n+\n+General Changes\n+_______________\n+* Fix named queries where its output does not match its column list (:issue:`14333`).\n+* Fix ZSTD compression issue with zero row file for missing buckets.\n+* Improve performance of ``UNNEST``.\n+* Improve ``CREATE FUNCTION`` to allow parameter type list and return type to have a length up to 30k characters.\n+* Fix issue where queries with large filters in the where clause would cause excessive memory usage.  Now such queries will fail quickly with ``GENERATED_BYTECODE_TOO_LARGE``.\n+* Add support for ``SHOW CREATE FUNCTION``.\n+* Add optimization for filters and projections to extract common subexpressions and evaluate them only once.  This optimization can be turned off by the session property ``optimize_common_sub_expressions``.\n+* Add soft memory limit configuration properties. Soft memory limits are default memory limits given to each query that can be overridden using session properties up to the hard limit set by the existing configuration properties. Available soft memory limit configuration properties are ``query.soft-max-memory-per-node``, ``query.soft-max-total-memory-per-node``, ``query.soft-max-total-memory``, and ``query.soft-max-memory``.\n+* Add check to disallow invoking SQL functions in SQL function body.\n+* Add support for limiting the total number of buffers per optimized repartitioning operator. The limit can be set by the configuration property ``driver.max-page-partitioning-buffer-count``.\n+* Add peak task total memory to query stats.\n+* Add :func:`scale_qdigest` function to scale a ``qdigest`` to a new weight.\n+* Add :func:`myanmar_font_encoding` and :func:`myanmar_normalize_unicode` to support working with Burmese text\n+* Add support for :func:`ST_AsText` to accept Spherical Geographies.\n+* Add support for :func:`ST_Centroid` to accept Spherical Geography Points and MultiPoints.\n+\n+Pinot Connector Changes\n+_______________________\n+* Add support for mapping Pinot ``BYTES`` data type to Presto ``VARBINARY`` type.\n+* Add support for mapping Pinot time fields with days since epoch value to Presto ``DATE`` type via the system property ``pinot.infer-date-type-in-schema``.\n+* Add support for mapping Pinot time fields with milliseconds since epoch value to Presto ``TIMESTAMP`` type via the system prpoerty ``pinot.infer-timestamp-type-in-schema``.\n+* Add Pinot Field type in to column comment field shown as ``DIMENSION``, ``METRIC``, ``TIME``, ``DATETIME``, to provide more information.\n+* Add support for pushing down distinct count query to Pinot on a best-effort basis.\n+* Add support for new Pinot Routing Table APIs.\n+\n+Hive Connector Changes\n+______________________\n+* Fix a bug in Hive split calculation which affects Parquet reader in few corner cases.\n+* Fix AWS client metric reporting when using S3 select.\n+* Add AWS client retry pause time metrics to ``PrestoS3FileSystemStats``.\n+* Add table property ``preferred_ordering_columns`` to support writing sorted files for unbucketed table.\n+* Add native Parquet Writer for Presto.\n+* Add support for impersonation access by using HMS delegation token.\n+* Add support for multi-HMS instances load balancing and breakdown metrics by HMS hosts.\n+* Add support in file status cache to cache all tables. This could be enabled by setting the configuration property ``hive.file-status-cache-tables`` to ``*``.\n+* Add configuration property ``hive.orc-compression-codec`` to override ``hive.compression-codec`` for ORC and DWRF formats. If specified, ORC and DWRF files are compressed using this codec. RC, Parquet, and other files are compressed using hive.compression-codec.\n+\n+Druid Connector Changes\n+_______________________\n+* Fix druid connector segment scan.\n+* Add support for query processing pushdown via the ``druid.compute-pushdown-enabled`` configuration property.\n+* Add support for count distinct pushdown.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ea5d4cc62fcdfcac19b693d431bc6ff36a8f191"}, "originalPosition": 48}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ea5d4cc62fcdfcac19b693d431bc6ff36a8f191", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/0ea5d4cc62fcdfcac19b693d431bc6ff36a8f191", "committedDate": "2020-05-13T23:58:42Z", "message": "Add release notes for 0.235"}, "afterCommit": {"oid": "c52f13d13c67124642af7fe3574f701328165571", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/c52f13d13c67124642af7fe3574f701328165571", "committedDate": "2020-05-14T16:54:31Z", "message": "Add release notes for 0.235"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c52f13d13c67124642af7fe3574f701328165571", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/c52f13d13c67124642af7fe3574f701328165571", "committedDate": "2020-05-14T16:54:31Z", "message": "Add release notes for 0.235"}, "afterCommit": {"oid": "3db147855d085cf1130c71b41c5d1c1f67d1876b", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/3db147855d085cf1130c71b41c5d1c1f67d1876b", "committedDate": "2020-05-14T17:06:20Z", "message": "Add release notes for 0.235"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDE3MjA4", "url": "https://github.com/prestodb/presto/pull/14476#pullrequestreview-412017208", "createdAt": "2020-05-14T17:09:41Z", "commit": {"oid": "3db147855d085cf1130c71b41c5d1c1f67d1876b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4554cfa1ca0f6ce6133dc1ced8f16b2db6258650", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/4554cfa1ca0f6ce6133dc1ced8f16b2db6258650", "committedDate": "2020-05-16T00:16:36Z", "message": "Add release notes for 0.235"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b2a690bd232205d32a1fcb7a37a35e7e5a632c1", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/2b2a690bd232205d32a1fcb7a37a35e7e5a632c1", "committedDate": "2020-05-15T23:06:35Z", "message": "sq"}, "afterCommit": {"oid": "4554cfa1ca0f6ce6133dc1ced8f16b2db6258650", "author": {"user": {"login": "tdcmeehan", "name": "Timothy Meehan"}}, "url": "https://github.com/prestodb/presto/commit/4554cfa1ca0f6ce6133dc1ced8f16b2db6258650", "committedDate": "2020-05-16T00:16:36Z", "message": "Add release notes for 0.235"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1566, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}