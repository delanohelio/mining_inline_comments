{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNDE2Nzk5", "number": 14468, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjoxMDozOFrOD49azw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo1MToyMVrOD5aaFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDUzMTM1OnYy", "diffSide": "RIGHT", "path": "presto-orc/src/main/java/com/facebook/presto/orc/TupleDomainFilterUtils.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjoxMDozOFrOGP9f8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwODozNToyMVrOGQfkjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4OTQyNg==", "bodyText": "Since max >= min, range must be > 0. Hence, range < Integer.MIN_VALUE check is not needed. Let's remove.", "url": "https://github.com/prestodb/presto/pull/14468#discussion_r419389426", "createdAt": "2020-05-04T12:10:38Z", "author": {"login": "mbasmanova"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/TupleDomainFilterUtils.java", "diffHunk": "@@ -347,7 +347,8 @@ public static TupleDomainFilter toBigintValues(long[] values, boolean nullAllowe\n         // slots in a hash table), e.g. up to 192 bits per value.\n         // Filter based on a bitmap uses (max - min) / num-values bits per value.\n         // Choose the filter that uses less bits per value.\n-        if ((max - min + 1) > Integer.MAX_VALUE || ((max - min + 1) / values.length) > 192) {\n+        long range = max - min + 1;\n+        if (range > Integer.MAX_VALUE || range < Integer.MIN_VALUE || (range / values.length) > 192) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcfcfa10ed4c1849c9de6f984b87e8e9d7f24019"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxNDM5OQ==", "bodyText": "-Long.MIN_VALUE is Long.MIN value, that is why we need the check for < Integer.MIN_VALUE, thats the fix\nconsider max 10,  min -Long.MIN_VALUE\n10 - Long.MIN_VALUE - 1 = -9223372036854775799", "url": "https://github.com/prestodb/presto/pull/14468#discussion_r419614399", "createdAt": "2020-05-04T17:47:42Z", "author": {"login": "bhhari"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/TupleDomainFilterUtils.java", "diffHunk": "@@ -347,7 +347,8 @@ public static TupleDomainFilter toBigintValues(long[] values, boolean nullAllowe\n         // slots in a hash table), e.g. up to 192 bits per value.\n         // Filter based on a bitmap uses (max - min) / num-values bits per value.\n         // Choose the filter that uses less bits per value.\n-        if ((max - min + 1) > Integer.MAX_VALUE || ((max - min + 1) / values.length) > 192) {\n+        long range = max - min + 1;\n+        if (range > Integer.MAX_VALUE || range < Integer.MIN_VALUE || (range / values.length) > 192) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4OTQyNg=="}, "originalCommit": {"oid": "dcfcfa10ed4c1849c9de6f984b87e8e9d7f24019"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0NzY2Mw==", "bodyText": "There are other corner cases like Long.MAX - Long.MIN + 1 = 0\nFor such kind of corner cases using a BigInteger gives us accurate results", "url": "https://github.com/prestodb/presto/pull/14468#discussion_r419947663", "createdAt": "2020-05-05T08:35:21Z", "author": {"login": "bhhari"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/TupleDomainFilterUtils.java", "diffHunk": "@@ -347,7 +347,8 @@ public static TupleDomainFilter toBigintValues(long[] values, boolean nullAllowe\n         // slots in a hash table), e.g. up to 192 bits per value.\n         // Filter based on a bitmap uses (max - min) / num-values bits per value.\n         // Choose the filter that uses less bits per value.\n-        if ((max - min + 1) > Integer.MAX_VALUE || ((max - min + 1) / values.length) > 192) {\n+        long range = max - min + 1;\n+        if (range > Integer.MAX_VALUE || range < Integer.MIN_VALUE || (range / values.length) > 192) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4OTQyNg=="}, "originalCommit": {"oid": "dcfcfa10ed4c1849c9de6f984b87e8e9d7f24019"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTI4MDg0OnYy", "diffSide": "RIGHT", "path": "presto-orc/src/main/java/com/facebook/presto/orc/TupleDomainFilterUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo1MToyMVrOGQqZXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo1MToyMVrOGQqZXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyNTAyMA==", "bodyText": "@bhhari nit: perhaps, put each statement on a separate line for readability and consider using intValueExact instead of longValue\n        BigInteger range = BigInteger.valueOf(max)\n                .subtract(BigInteger.valueOf(min))\n                .add(BigInteger.valueOf(1));\n       if (range.compareTo(BigInteger.valueOf(Integer.MAX_VALUE)) == 1 || (range.intValueExact() / values.length) > 192) {\n            return BigintValuesUsingHashTable.of(min, max, values, nullAllowed);\n        }", "url": "https://github.com/prestodb/presto/pull/14468#discussion_r420125020", "createdAt": "2020-05-05T13:51:21Z", "author": {"login": "mbasmanova"}, "path": "presto-orc/src/main/java/com/facebook/presto/orc/TupleDomainFilterUtils.java", "diffHunk": "@@ -347,7 +348,8 @@ public static TupleDomainFilter toBigintValues(long[] values, boolean nullAllowe\n         // slots in a hash table), e.g. up to 192 bits per value.\n         // Filter based on a bitmap uses (max - min) / num-values bits per value.\n         // Choose the filter that uses less bits per value.\n-        if ((max - min + 1) > Integer.MAX_VALUE || ((max - min + 1) / values.length) > 192) {\n+        BigInteger range = BigInteger.valueOf(max).subtract(BigInteger.valueOf(min)).add(BigInteger.valueOf(1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1141dcfb14c7b65a7b48c7c2e77de25f280ad0c"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2565, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}