{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NzYyOTUw", "number": 15520, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjo0ODo0NVrOFF1-2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTowMjoyN1rOFGWZVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjcxNjQyOnYy", "diffSide": "RIGHT", "path": "presto-mongodb/src/test/java/com/facebook/presto/mongodb/TestMongoIntegrationSmokeTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjo0ODo0NVrOIGjefQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMzoyNTo1MFrOIGkjSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MzYxMw==", "bodyText": "can you test the same with the old code to ensure that it is the same, since this path was not getting tested previously.", "url": "https://github.com/prestodb/presto/pull/15520#discussion_r543743613", "createdAt": "2020-12-15T22:48:45Z", "author": {"login": "ajaygeorge"}, "path": "presto-mongodb/src/test/java/com/facebook/presto/mongodb/TestMongoIntegrationSmokeTest.java", "diffHunk": "@@ -132,6 +135,7 @@ public void testInsertWithEveryType()\n         assertEquals(row.getField(4), true);\n         assertEquals(row.getField(5), LocalDate.of(1980, 5, 7));\n         assertEquals(row.getField(6), LocalDateTime.of(1980, 5, 7, 11, 22, 33, 456_000_000));\n+        assertEquals(row.getField(7), LocalTime.of(11, 22, 33, 456_000_000));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "213d489b44ab8362126ad5695904c159de4e72c5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc1MTg2OQ==", "bodyText": "I validated this test before and after removing the Joda-time library. You think I should split this into two commits/PRs for clarity?", "url": "https://github.com/prestodb/presto/pull/15520#discussion_r543751869", "createdAt": "2020-12-15T23:05:07Z", "author": {"login": "sstoiana"}, "path": "presto-mongodb/src/test/java/com/facebook/presto/mongodb/TestMongoIntegrationSmokeTest.java", "diffHunk": "@@ -132,6 +135,7 @@ public void testInsertWithEveryType()\n         assertEquals(row.getField(4), true);\n         assertEquals(row.getField(5), LocalDate.of(1980, 5, 7));\n         assertEquals(row.getField(6), LocalDateTime.of(1980, 5, 7, 11, 22, 33, 456_000_000));\n+        assertEquals(row.getField(7), LocalTime.of(11, 22, 33, 456_000_000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MzYxMw=="}, "originalCommit": {"oid": "213d489b44ab8362126ad5695904c159de4e72c5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc2MTIyNQ==", "bodyText": "I think that is fine since this test is related to this refactoring.", "url": "https://github.com/prestodb/presto/pull/15520#discussion_r543761225", "createdAt": "2020-12-15T23:25:50Z", "author": {"login": "ajaygeorge"}, "path": "presto-mongodb/src/test/java/com/facebook/presto/mongodb/TestMongoIntegrationSmokeTest.java", "diffHunk": "@@ -132,6 +135,7 @@ public void testInsertWithEveryType()\n         assertEquals(row.getField(4), true);\n         assertEquals(row.getField(5), LocalDate.of(1980, 5, 7));\n         assertEquals(row.getField(6), LocalDateTime.of(1980, 5, 7, 11, 22, 33, 456_000_000));\n+        assertEquals(row.getField(7), LocalTime.of(11, 22, 33, 456_000_000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MzYxMw=="}, "originalCommit": {"oid": "213d489b44ab8362126ad5695904c159de4e72c5"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjAyNzExOnYy", "diffSide": "RIGHT", "path": "presto-mongodb/src/main/java/com/facebook/presto/mongodb/MongoPageSource.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTowMjoyN1rOIHUn1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMjoyMzo1N1rOIHby3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0ODgyMA==", "bodyText": "Can we directly create an instant from the long instead of casting to a date and then converting it to an instant?   e.g. Instant.ofEpochMilli(value)", "url": "https://github.com/prestodb/presto/pull/15520#discussion_r544548820", "createdAt": "2020-12-16T19:02:27Z", "author": {"login": "rschlussel"}, "path": "presto-mongodb/src/main/java/com/facebook/presto/mongodb/MongoPageSource.java", "diffHunk": "@@ -164,7 +166,7 @@ else if (type.equals(DATE)) {\n                     type.writeLong(output, TimeUnit.MILLISECONDS.toDays(utcMillis));\n                 }\n                 else if (type.equals(TIME)) {\n-                    type.writeLong(output, UTC_CHRONOLOGY.millisOfDay().get(((Date) value).getTime()));\n+                    type.writeLong(output, ZonedDateTime.ofInstant(((Date) value).toInstant(), UTC_ZONE_ID).get(ChronoField.MILLI_OF_DAY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d02426fe018406f5d6faa8b4e4c8c6c7480146fc"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY1MTUzNQ==", "bodyText": "It looks like value is a Date not a long, at least for the scenario tested.", "url": "https://github.com/prestodb/presto/pull/15520#discussion_r544651535", "createdAt": "2020-12-16T21:56:43Z", "author": {"login": "sstoiana"}, "path": "presto-mongodb/src/main/java/com/facebook/presto/mongodb/MongoPageSource.java", "diffHunk": "@@ -164,7 +166,7 @@ else if (type.equals(DATE)) {\n                     type.writeLong(output, TimeUnit.MILLISECONDS.toDays(utcMillis));\n                 }\n                 else if (type.equals(TIME)) {\n-                    type.writeLong(output, UTC_CHRONOLOGY.millisOfDay().get(((Date) value).getTime()));\n+                    type.writeLong(output, ZonedDateTime.ofInstant(((Date) value).toInstant(), UTC_ZONE_ID).get(ChronoField.MILLI_OF_DAY));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0ODgyMA=="}, "originalCommit": {"oid": "d02426fe018406f5d6faa8b4e4c8c6c7480146fc"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY2NjMzMw==", "bodyText": "makes sense.  Thanks", "url": "https://github.com/prestodb/presto/pull/15520#discussion_r544666333", "createdAt": "2020-12-16T22:23:57Z", "author": {"login": "rschlussel"}, "path": "presto-mongodb/src/main/java/com/facebook/presto/mongodb/MongoPageSource.java", "diffHunk": "@@ -164,7 +166,7 @@ else if (type.equals(DATE)) {\n                     type.writeLong(output, TimeUnit.MILLISECONDS.toDays(utcMillis));\n                 }\n                 else if (type.equals(TIME)) {\n-                    type.writeLong(output, UTC_CHRONOLOGY.millisOfDay().get(((Date) value).getTime()));\n+                    type.writeLong(output, ZonedDateTime.ofInstant(((Date) value).toInstant(), UTC_ZONE_ID).get(ChronoField.MILLI_OF_DAY));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0ODgyMA=="}, "originalCommit": {"oid": "d02426fe018406f5d6faa8b4e4c8c6c7480146fc"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3274, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}