{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MTQ0OTQ0", "number": 15349, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDoyNjozM1rOEx7QJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDozMzoxNFrOEx7d0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzg2NDY4OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/server/protocol/QueuedStatementResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDoyNjozM1rOHoSDeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDoyNjozM1rOHoSDeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAwMDg5MA==", "bodyText": "nit: we only use the \"this\" prefix in the constructor.  Otherwise just do sqlParserOptions", "url": "https://github.com/prestodb/presto/pull/15349#discussion_r512000890", "createdAt": "2020-10-26T14:26:33Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/server/protocol/QueuedStatementResource.java", "diffHunk": "@@ -166,7 +171,7 @@ public Response postStatement(\n             throw badRequest(BAD_REQUEST, \"SQL statement is empty\");\n         }\n \n-        SessionContext sessionContext = new HttpRequestSessionContext(servletRequest);\n+        SessionContext sessionContext = new HttpRequestSessionContext(servletRequest, this.sqlParserOptions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63dcba7dc28b28ea768f58637d7b3e0cb52b1c5"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzg4MTk2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/server/protocol/QueuedStatementResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDoyOTo1M1rOHoSN3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDoyOTo1M1rOHoSN3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAwMzU0OA==", "bodyText": "use requireNonNull, similar to how dispatchManager is set above.  (Not sure why there's a second requireNonNull for dispatch manager below.  that could be removed if you'd like.)", "url": "https://github.com/prestodb/presto/pull/15349#discussion_r512003548", "createdAt": "2020-10-26T14:29:53Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/server/protocol/QueuedStatementResource.java", "diffHunk": "@@ -110,14 +111,18 @@\n     private final ConcurrentMap<QueryId, Query> queries = new ConcurrentHashMap<>();\n     private final ScheduledExecutorService queryPurger = newSingleThreadScheduledExecutor(threadsNamed(\"dispatch-query-purger\"));\n \n+    private final SqlParserOptions sqlParserOptions;\n+\n     @Inject\n     public QueuedStatementResource(\n             DispatchManager dispatchManager,\n             DispatchExecutor executor,\n-            LocalQueryProvider queryResultsProvider)\n+            LocalQueryProvider queryResultsProvider,\n+            SqlParserOptions sqlParserOptions)\n     {\n         this.dispatchManager = requireNonNull(dispatchManager, \"dispatchManager is null\");\n         this.queryResultsProvider = queryResultsProvider;\n+        this.sqlParserOptions = sqlParserOptions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63dcba7dc28b28ea768f58637d7b3e0cb52b1c5"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzg5OTY5OnYy", "diffSide": "RIGHT", "path": "presto-main/src/test/java/com/facebook/presto/server/TestHttpRequestSessionContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDozMzoxNFrOHoSYdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDozMzoxNFrOHoSYdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAwNjI2MA==", "bodyText": "can you  also add a test that uses some special parser options and that allows the prepared statement to parse successfully?", "url": "https://github.com/prestodb/presto/pull/15349#discussion_r512006260", "createdAt": "2020-10-26T14:33:14Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/test/java/com/facebook/presto/server/TestHttpRequestSessionContext.java", "diffHunk": "@@ -99,7 +100,7 @@ public void testPreparedStatementsHeaderDoesNotParse()\n                         .put(PRESTO_PREPARED_STATEMENT, \"query1=abcdefg\")\n                         .build(),\n                 \"testRemote\");\n-        new HttpRequestSessionContext(request);\n+        new HttpRequestSessionContext(request, new SqlParserOptions());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63dcba7dc28b28ea768f58637d7b3e0cb52b1c5"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3565, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}