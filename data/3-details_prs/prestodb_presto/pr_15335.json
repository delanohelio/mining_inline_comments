{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MzI5NzY0", "number": 15335, "title": "Introduce temporary store based spilling", "bodyText": "Test plan - Travis\nThe first commit is based on #15312 and arhimondr@d8262c8\n== NO RELEASE NOTE ==", "createdAt": "2020-10-19T23:00:26Z", "url": "https://github.com/prestodb/presto/pull/15335", "merged": true, "mergeCommit": {"oid": "24d9a53d6958c8216aaf8c32a4bc03e1aabb6e4e"}, "closed": true, "closedAt": "2020-10-26T21:53:09Z", "author": {"login": "wenleix"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUMZyggBqjM4OTU4NTU3MTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWZ1rzABqjM5MjI1MzYxNTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5fda41eed12aa5dbec4ec840c94b885757cc7a39", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/5fda41eed12aa5dbec4ec840c94b885757cc7a39", "committedDate": "2020-10-19T22:58:45Z", "message": "Introduce temporary store based spilling"}, "afterCommit": {"oid": "0091ebfd1bd5d1ef86bd217e3b600c3156c3e150", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/0091ebfd1bd5d1ef86bd217e3b600c3156c3e150", "committedDate": "2020-10-19T23:02:35Z", "message": "Introduce temporary store based spilling"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0091ebfd1bd5d1ef86bd217e3b600c3156c3e150", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/0091ebfd1bd5d1ef86bd217e3b600c3156c3e150", "committedDate": "2020-10-19T23:02:35Z", "message": "Introduce temporary store based spilling"}, "afterCommit": {"oid": "3d8ee65046076e678320411dcd88e9ea6338e86d", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/3d8ee65046076e678320411dcd88e9ea6338e86d", "committedDate": "2020-10-20T04:24:07Z", "message": "Introduce temporary store based spilling"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d8ee65046076e678320411dcd88e9ea6338e86d", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/3d8ee65046076e678320411dcd88e9ea6338e86d", "committedDate": "2020-10-20T04:24:07Z", "message": "Introduce temporary store based spilling"}, "afterCommit": {"oid": "959c247207045383138a8b1b3fb4e1202b1f6294", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/959c247207045383138a8b1b3fb4e1202b1f6294", "committedDate": "2020-10-20T20:47:50Z", "message": "Add test for temporary store based spilling"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "959c247207045383138a8b1b3fb4e1202b1f6294", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/959c247207045383138a8b1b3fb4e1202b1f6294", "committedDate": "2020-10-20T20:47:50Z", "message": "Add test for temporary store based spilling"}, "afterCommit": {"oid": "56413e1f4387c8cb7b20d4192c7e9c38d0130572", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/56413e1f4387c8cb7b20d4192c7e9c38d0130572", "committedDate": "2020-10-21T18:53:48Z", "message": "Make TemporaryStore pluggable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56413e1f4387c8cb7b20d4192c7e9c38d0130572", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/56413e1f4387c8cb7b20d4192c7e9c38d0130572", "committedDate": "2020-10-21T18:53:48Z", "message": "Make TemporaryStore pluggable"}, "afterCommit": {"oid": "bd505e0baba787607b825d3fdaa47fed0774e14c", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/bd505e0baba787607b825d3fdaa47fed0774e14c", "committedDate": "2020-10-21T21:36:17Z", "message": "Make TemporaryStore pluggable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd505e0baba787607b825d3fdaa47fed0774e14c", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/bd505e0baba787607b825d3fdaa47fed0774e14c", "committedDate": "2020-10-21T21:36:17Z", "message": "Make TemporaryStore pluggable"}, "afterCommit": {"oid": "c230d29b56214e0dd517e245da97072f24abf985", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/c230d29b56214e0dd517e245da97072f24abf985", "committedDate": "2020-10-21T22:30:46Z", "message": "Make TemporaryStore pluggable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c230d29b56214e0dd517e245da97072f24abf985", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/c230d29b56214e0dd517e245da97072f24abf985", "committedDate": "2020-10-21T22:30:46Z", "message": "Make TemporaryStore pluggable"}, "afterCommit": {"oid": "28a9397f593e4c84ecb190f9b5463f9906e2eb00", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/28a9397f593e4c84ecb190f9b5463f9906e2eb00", "committedDate": "2020-10-22T03:40:12Z", "message": "Make TemporaryStore pluggable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28a9397f593e4c84ecb190f9b5463f9906e2eb00", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/28a9397f593e4c84ecb190f9b5463f9906e2eb00", "committedDate": "2020-10-22T03:40:12Z", "message": "Make TemporaryStore pluggable"}, "afterCommit": {"oid": "d65bfef1339ad128c4fc11b910088f66286fcdb9", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/d65bfef1339ad128c4fc11b910088f66286fcdb9", "committedDate": "2020-10-22T05:28:00Z", "message": "Make TemporaryStore pluggable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d65bfef1339ad128c4fc11b910088f66286fcdb9", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/d65bfef1339ad128c4fc11b910088f66286fcdb9", "committedDate": "2020-10-22T05:28:00Z", "message": "Make TemporaryStore pluggable"}, "afterCommit": {"oid": "b474a2df079d7e407bb2c4f42c176bda8f781b6a", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/b474a2df079d7e407bb2c4f42c176bda8f781b6a", "committedDate": "2020-10-22T17:27:47Z", "message": "Make TemporaryStore pluggable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MDAzNzUw", "url": "https://github.com/prestodb/presto/pull/15335#pullrequestreview-516003750", "createdAt": "2020-10-23T20:52:50Z", "commit": {"oid": "b474a2df079d7e407bb2c4f42c176bda8f781b6a"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo1Mjo1MFrOHneIoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMTowNDozNlrOHneaNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MDI0MA==", "bodyText": "nit: @NotNull", "url": "https://github.com/prestodb/presto/pull/15335#discussion_r511150240", "createdAt": "2020-10-23T20:52:50Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/spiller/NodeSpillConfig.java", "diffHunk": "@@ -75,4 +76,16 @@ public NodeSpillConfig setSpillEncryptionEnabled(boolean spillEncryptionEnabled)\n         this.spillEncryptionEnabled = spillEncryptionEnabled;\n         return this;\n     }\n+\n+    public DataSize getTemporaryStoreBufferSize()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b474a2df079d7e407bb2c4f42c176bda8f781b6a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MTU1MQ==", "bodyText": "nit: Initialize in @BeforeClass", "url": "https://github.com/prestodb/presto/pull/15335#discussion_r511151551", "createdAt": "2020-10-23T20:56:18Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/test/java/com/facebook/presto/spiller/TestTemporaryStoreSingleStreamSpiller.java", "diffHunk": "@@ -0,0 +1,169 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.spiller;\n+\n+import com.facebook.presto.block.BlockEncodingManager;\n+import com.facebook.presto.common.Page;\n+import com.facebook.presto.common.block.BlockBuilder;\n+import com.facebook.presto.common.io.OutputStreamDataSink;\n+import com.facebook.presto.common.type.Type;\n+import com.facebook.presto.memory.context.LocalMemoryContext;\n+import com.facebook.presto.operator.PageAssertions;\n+import com.facebook.presto.spi.page.PageCodecMarker;\n+import com.facebook.presto.spi.page.PagesSerdeUtil;\n+import com.facebook.presto.spi.page.SerializedPage;\n+import com.facebook.presto.testing.TestingTemporaryStoreManager;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.Iterators;\n+import com.google.common.util.concurrent.ListeningExecutorService;\n+import io.airlift.slice.DynamicSliceOutput;\n+import io.airlift.slice.InputStreamSliceInput;\n+import io.airlift.units.DataSize;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.InputStream;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import static com.facebook.presto.common.type.BigintType.BIGINT;\n+import static com.facebook.presto.common.type.DoubleType.DOUBLE;\n+import static com.facebook.presto.common.type.VarbinaryType.VARBINARY;\n+import static com.facebook.presto.memory.context.AggregatedMemoryContext.newSimpleAggregatedMemoryContext;\n+import static com.google.common.io.MoreFiles.deleteRecursively;\n+import static com.google.common.io.MoreFiles.listFiles;\n+import static com.google.common.io.RecursiveDeleteOption.ALLOW_INSECURE;\n+import static com.google.common.util.concurrent.MoreExecutors.listeningDecorator;\n+import static io.airlift.units.DataSize.Unit.KILOBYTE;\n+import static java.lang.Double.doubleToLongBits;\n+import static java.lang.Math.toIntExact;\n+import static java.nio.file.Files.newInputStream;\n+import static java.util.concurrent.Executors.newCachedThreadPool;\n+import static org.testng.Assert.assertEquals;\n+import static org.testng.Assert.assertTrue;\n+\n+public class TestTemporaryStoreSingleStreamSpiller\n+{\n+    private static final List<Type> TYPES = ImmutableList.of(BIGINT, DOUBLE, VARBINARY);\n+\n+    private final ListeningExecutorService executor = listeningDecorator(newCachedThreadPool());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b474a2df079d7e407bb2c4f42c176bda8f781b6a"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MzEyMg==", "bodyText": "nit @GuarderBy(\"this\")", "url": "https://github.com/prestodb/presto/pull/15335#discussion_r511153122", "createdAt": "2020-10-23T21:00:14Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/spiller/LocalTemporaryStore.java", "diffHunk": "@@ -0,0 +1,258 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.spiller;\n+\n+import com.facebook.airlift.log.Logger;\n+import com.facebook.presto.common.io.DataOutput;\n+import com.facebook.presto.common.io.DataSink;\n+import com.facebook.presto.common.io.OutputStreamDataSink;\n+import com.facebook.presto.spi.PrestoException;\n+import com.facebook.presto.spi.storage.TemporaryDataSink;\n+import com.facebook.presto.spi.storage.TemporaryStore;\n+import com.facebook.presto.spi.storage.TemporaryStoreFactory;\n+import com.facebook.presto.spi.storage.TemporaryStoreHandle;\n+import com.google.common.base.Splitter;\n+import com.google.common.collect.ImmutableList;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.DirectoryStream;\n+import java.nio.file.FileStore;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static com.facebook.presto.spi.StandardErrorCode.OUT_OF_SPILL_SPACE;\n+import static com.google.common.base.Preconditions.checkState;\n+import static com.google.common.collect.ImmutableList.toImmutableList;\n+import static java.lang.String.format;\n+import static java.nio.file.Files.createDirectories;\n+import static java.nio.file.Files.delete;\n+import static java.nio.file.Files.getFileStore;\n+import static java.nio.file.Files.newDirectoryStream;\n+import static java.nio.file.StandardOpenOption.APPEND;\n+import static java.util.Objects.requireNonNull;\n+\n+public class LocalTemporaryStore\n+        implements TemporaryStore\n+{\n+    public static final String NAME = \"local\";\n+    public static final String TEMPORARY_STORE_PATH = \"temporary-store.path\";\n+\n+    private static final Logger log = Logger.get(LocalTemporaryStore.class);\n+\n+    private static final String SPILL_FILE_PREFIX = \"spill\";\n+    private static final String SPILL_FILE_SUFFIX = \".bin\";\n+    private static final String SPILL_FILE_GLOB = \"spill*.bin\";\n+\n+    private final List<Path> spillPaths;\n+    private final double maxUsedSpaceThreshold;\n+    private int roundRobinIndex;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b474a2df079d7e407bb2c4f42c176bda8f781b6a"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MzIyNw==", "bodyText": "nit: \"spillPaths is null\"", "url": "https://github.com/prestodb/presto/pull/15335#discussion_r511153227", "createdAt": "2020-10-23T21:00:29Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/spiller/LocalTemporaryStore.java", "diffHunk": "@@ -0,0 +1,258 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.spiller;\n+\n+import com.facebook.airlift.log.Logger;\n+import com.facebook.presto.common.io.DataOutput;\n+import com.facebook.presto.common.io.DataSink;\n+import com.facebook.presto.common.io.OutputStreamDataSink;\n+import com.facebook.presto.spi.PrestoException;\n+import com.facebook.presto.spi.storage.TemporaryDataSink;\n+import com.facebook.presto.spi.storage.TemporaryStore;\n+import com.facebook.presto.spi.storage.TemporaryStoreFactory;\n+import com.facebook.presto.spi.storage.TemporaryStoreHandle;\n+import com.google.common.base.Splitter;\n+import com.google.common.collect.ImmutableList;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.DirectoryStream;\n+import java.nio.file.FileStore;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static com.facebook.presto.spi.StandardErrorCode.OUT_OF_SPILL_SPACE;\n+import static com.google.common.base.Preconditions.checkState;\n+import static com.google.common.collect.ImmutableList.toImmutableList;\n+import static java.lang.String.format;\n+import static java.nio.file.Files.createDirectories;\n+import static java.nio.file.Files.delete;\n+import static java.nio.file.Files.getFileStore;\n+import static java.nio.file.Files.newDirectoryStream;\n+import static java.nio.file.StandardOpenOption.APPEND;\n+import static java.util.Objects.requireNonNull;\n+\n+public class LocalTemporaryStore\n+        implements TemporaryStore\n+{\n+    public static final String NAME = \"local\";\n+    public static final String TEMPORARY_STORE_PATH = \"temporary-store.path\";\n+\n+    private static final Logger log = Logger.get(LocalTemporaryStore.class);\n+\n+    private static final String SPILL_FILE_PREFIX = \"spill\";\n+    private static final String SPILL_FILE_SUFFIX = \".bin\";\n+    private static final String SPILL_FILE_GLOB = \"spill*.bin\";\n+\n+    private final List<Path> spillPaths;\n+    private final double maxUsedSpaceThreshold;\n+    private int roundRobinIndex;\n+\n+    public LocalTemporaryStore(List<Path> spillPaths, double maxUsedSpaceThreshold)\n+    {\n+        this.spillPaths = ImmutableList.copyOf(requireNonNull(spillPaths));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b474a2df079d7e407bb2c4f42c176bda8f781b6a"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1NDc0Mg==", "bodyText": "I don't feel very strong about this, but I would recommend allowing multiple storages, similar as we allow multiple connectors.\nBasically instead of having a single file etc/temporary-store.properties we can have a directory, etc/stores. And under that directory we can have multiple configuration files, e.g.: local.properties, hdfs.properties, ...\nAnd then some particular module can be configured to use a specific storage:\ne.g.: storage-based-spiller-store=local or storage-based-spiller-store=hdfs.\nThat would allow different functionality to use different stores. For example spilling could use local store, when Broadcast join in Presto on spark would use hdfs store.", "url": "https://github.com/prestodb/presto/pull/15335#discussion_r511154742", "createdAt": "2020-10-23T21:04:36Z", "author": {"login": "arhimondr"}, "path": "presto-main/src/main/java/com/facebook/presto/spiller/TemporaryStoreManager.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.facebook.presto.spiller;\n+\n+import com.facebook.airlift.log.Logger;\n+import com.facebook.presto.spi.storage.TemporaryStore;\n+import com.facebook.presto.spi.storage.TemporaryStoreFactory;\n+import com.google.common.collect.ImmutableMap;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Paths;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import static com.facebook.presto.spiller.LocalTemporaryStore.TEMPORARY_STORE_PATH;\n+import static com.facebook.presto.util.PropertiesUtil.loadProperties;\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static com.google.common.base.Preconditions.checkState;\n+import static com.google.common.base.Strings.isNullOrEmpty;\n+import static java.lang.String.format;\n+import static java.util.Objects.requireNonNull;\n+\n+public class TemporaryStoreManager\n+{\n+    private static final Logger log = Logger.get(TemporaryStoreManager.class);\n+    private static final File TEMPORARY_STORE_CONFIGURATION = new File(\"etc/temporary-store.properties\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b474a2df079d7e407bb2c4f42c176bda8f781b6a"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b474a2df079d7e407bb2c4f42c176bda8f781b6a", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/b474a2df079d7e407bb2c4f42c176bda8f781b6a", "committedDate": "2020-10-22T17:27:47Z", "message": "Make TemporaryStore pluggable"}, "afterCommit": {"oid": "6c8ce1dc3af03bb87c5895c9ef0269e34d4c5548", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/6c8ce1dc3af03bb87c5895c9ef0269e34d4c5548", "committedDate": "2020-10-25T17:04:23Z", "message": "Make TemporaryStore pluggable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "264e6d2e3ff1c8b3b557a39a3321f6813e7a95b1", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/264e6d2e3ff1c8b3b557a39a3321f6813e7a95b1", "committedDate": "2020-10-25T22:29:19Z", "message": "Fixup! Allow temp storage to have separate conf files and loaded\nseparately"}, "afterCommit": {"oid": "fea0fab26631f63fe9f1f150aca17bae332ad47e", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/fea0fab26631f63fe9f1f150aca17bae332ad47e", "committedDate": "2020-10-26T04:20:54Z", "message": "Fixup! Allow temp storage to have separate conf files and loaded\nseparately"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2OTU2MzI4", "url": "https://github.com/prestodb/presto/pull/15335#pullrequestreview-516956328", "createdAt": "2020-10-26T16:27:14Z", "commit": {"oid": "fea0fab26631f63fe9f1f150aca17bae332ad47e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "141599d294e3328326c51961b45a7dd7740115a4", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/141599d294e3328326c51961b45a7dd7740115a4", "committedDate": "2020-10-26T16:49:57Z", "message": "Introduce temporary store based spilling\n\nCo-authored-by: Andrii Rosa <andriirosa@fb.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba7ac9d7c9a5bca18ce3f3d6c16eb526f99afd75", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/ba7ac9d7c9a5bca18ce3f3d6c16eb526f99afd75", "committedDate": "2020-10-26T16:49:57Z", "message": "Add test for temporary store based spilling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43217c4bd1ade90e44746dbb2f23a4a1f1ce066c", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/43217c4bd1ade90e44746dbb2f23a4a1f1ce066c", "committedDate": "2020-10-26T16:49:57Z", "message": "Make TemporaryStore pluggable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fea0fab26631f63fe9f1f150aca17bae332ad47e", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/fea0fab26631f63fe9f1f150aca17bae332ad47e", "committedDate": "2020-10-26T04:20:54Z", "message": "Fixup! Allow temp storage to have separate conf files and loaded\nseparately"}, "afterCommit": {"oid": "43217c4bd1ade90e44746dbb2f23a4a1f1ce066c", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/43217c4bd1ade90e44746dbb2f23a4a1f1ce066c", "committedDate": "2020-10-26T16:49:57Z", "message": "Make TemporaryStore pluggable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0abcf2b944887b84a61bf6048fe78e5b88ec880c", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/0abcf2b944887b84a61bf6048fe78e5b88ec880c", "committedDate": "2020-10-26T19:49:36Z", "message": "Rename TemporaryStore to TempStorage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e96f075ebd58cf083a500988b04614e8f6508018", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/e96f075ebd58cf083a500988b04614e8f6508018", "committedDate": "2020-10-26T18:26:36Z", "message": "Rename TemporaryStore to TempStorage"}, "afterCommit": {"oid": "0abcf2b944887b84a61bf6048fe78e5b88ec880c", "author": {"user": {"login": "wenleix", "name": "Wenlei Xie"}}, "url": "https://github.com/prestodb/presto/commit/0abcf2b944887b84a61bf6048fe78e5b88ec880c", "committedDate": "2020-10-26T19:49:36Z", "message": "Rename TemporaryStore to TempStorage"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4969, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}