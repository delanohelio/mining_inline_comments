{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMTk3NTQx", "number": 15209, "title": "Collapse nested DEREF expressions into a single one", "bodyText": "Currently, for expressions like a.b.c.d - we get multiple nested derefs (one for each '.'). And that results in excessive code generation especially because of the null checks. So the idea is t merge all these intermediated DEREFs into the same code block as the ultimate result of any of these being null is to just return null. This reduced code by 22% in some of the most expensive queries that make heavy use of ROW types.\nTest plan -\nAbstractTestQueries has several test cases for this now.\n== NO RELEASE NOTE ==", "createdAt": "2020-09-22T21:10:48Z", "url": "https://github.com/prestodb/presto/pull/15209", "merged": true, "mergeCommit": {"oid": "e6ad497de2d3fba67be46a018878e7648154cd1a"}, "closed": true, "closedAt": "2020-09-30T05:26:24Z", "author": {"login": "kaikalur"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLg6x3ABqjM3OTU1OTk1MDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdN15qSAFqTQ5OTA5Mjc3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b7f4976ed5383689a76eb26752fcb059d95c072", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/0b7f4976ed5383689a76eb26752fcb059d95c072", "committedDate": "2020-09-22T21:09:01Z", "message": "Collapse nested DEREF expressions into a single one."}, "afterCommit": {"oid": "9dbe03e1403f953f6061ab158a10494875030056", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/9dbe03e1403f953f6061ab158a10494875030056", "committedDate": "2020-09-22T23:51:15Z", "message": "Collapse nested DEREF expressions into a single one."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MTExMTgy", "url": "https://github.com/prestodb/presto/pull/15209#pullrequestreview-497111182", "createdAt": "2020-09-27T21:05:59Z", "commit": {"oid": "9dbe03e1403f953f6061ab158a10494875030056"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QyMTowNTo1OVrOHYqA-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QyMTowODozN1rOHYqB3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTYxNjI1MA==", "bodyText": "testDereference", "url": "https://github.com/prestodb/presto/pull/15209#discussion_r495616250", "createdAt": "2020-09-27T21:05:59Z", "author": {"login": "highker"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "diffHunk": "@@ -5376,4 +5376,17 @@ public void testDistinctFrom()\n                 \"SELECT NULL IS DISTINCT FROM R.name FROM nation N LEFT OUTER JOIN region R ON N.regionkey = R.regionkey AND R.regionkey = 2 WHERE N.name='JAPAN'\",\n                 \"SELECT TRUE\");\n     }\n+\n+    @Test\n+    public void derefTest()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dbe03e1403f953f6061ab158a10494875030056"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTYxNjI3OA==", "bodyText": "put each param to its own line", "url": "https://github.com/prestodb/presto/pull/15209#discussion_r495616278", "createdAt": "2020-09-27T21:06:13Z", "author": {"login": "highker"}, "path": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java", "diffHunk": "@@ -5376,4 +5376,17 @@ public void testDistinctFrom()\n                 \"SELECT NULL IS DISTINCT FROM R.name FROM nation N LEFT OUTER JOIN region R ON N.regionkey = R.regionkey AND R.regionkey = 2 WHERE N.name='JAPAN'\",\n                 \"SELECT TRUE\");\n     }\n+\n+    @Test\n+    public void derefTest()\n+    {\n+        assertQuery(\"select cast(row(row(row(random(10), if(random(10) >= 0, 2)), random(10)), random(100)) AS row(x row(y row(a int, b int), c int), d int)).x.y.b\",\n+                \"select 2\");\n+        assertQuery(\"select cast(row(row(row(random(10), if(random(10) < 0, 2)), random(10)), random(100)) AS row(x row(y row(a int, b int), c int), d int)).x.y.b\",\n+                \"select null\");\n+        assertQuery(\"select cast(row(row(null, random(10)), random(100)) AS row(x row(y row(a int, b int), c int), d int)).x.y.b\",\n+                \"select null\");\n+        assertQuery(\"select cast(row(row(null, if(random(100) >= 0, 4)), random(10)) AS row(x row(y row(a int, b int), c int), d int)).x.c\",\n+                \"select 4\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dbe03e1403f953f6061ab158a10494875030056"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTYxNjMzOQ==", "bodyText": "nestedDereferences\nalso, we don't use Stack data structure. Try something different like Deque", "url": "https://github.com/prestodb/presto/pull/15209#discussion_r495616339", "createdAt": "2020-09-27T21:06:58Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/DereferenceCodeGenerator.java", "diffHunk": "@@ -41,50 +43,67 @@ public BytecodeNode generateExpression(BytecodeGeneratorContext generator, Type\n         checkArgument(arguments.size() == 2);\n         CallSiteBinder callSiteBinder = generator.getCallSiteBinder();\n \n-        BytecodeBlock block = new BytecodeBlock().comment(\"DEREFERENCE\").setDescription(\"DEREFERENCE\");\n-        Variable wasNull = generator.wasNull();\n-        Variable rowBlock = generator.getScope().createTempVariable(Block.class);\n-        int index = ((Number) ((ConstantExpression) arguments.get(1)).getValue()).intValue();\n+        // Collect all nested intermediateDerefs\n+        Stack<RowExpression> nestedDerefs = new Stack<RowExpression>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dbe03e1403f953f6061ab158a10494875030056"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTYxNjM5NQ==", "bodyText": "remove final", "url": "https://github.com/prestodb/presto/pull/15209#discussion_r495616395", "createdAt": "2020-09-27T21:07:35Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/DereferenceCodeGenerator.java", "diffHunk": "@@ -41,50 +43,67 @@ public BytecodeNode generateExpression(BytecodeGeneratorContext generator, Type\n         checkArgument(arguments.size() == 2);\n         CallSiteBinder callSiteBinder = generator.getCallSiteBinder();\n \n-        BytecodeBlock block = new BytecodeBlock().comment(\"DEREFERENCE\").setDescription(\"DEREFERENCE\");\n-        Variable wasNull = generator.wasNull();\n-        Variable rowBlock = generator.getScope().createTempVariable(Block.class);\n-        int index = ((Number) ((ConstantExpression) arguments.get(1)).getValue()).intValue();\n+        // Collect all nested intermediateDerefs\n+        Stack<RowExpression> nestedDerefs = new Stack<RowExpression>();\n+        RowExpression nestedObject = arguments.get(0);\n+        final int leafFieldIndex = ((Number) ((ConstantExpression) arguments.get(1)).getValue()).intValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dbe03e1403f953f6061ab158a10494875030056"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTYxNjQ3Ng==", "bodyText": "nestedDereference", "url": "https://github.com/prestodb/presto/pull/15209#discussion_r495616476", "createdAt": "2020-09-27T21:08:37Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/DereferenceCodeGenerator.java", "diffHunk": "@@ -41,50 +43,67 @@ public BytecodeNode generateExpression(BytecodeGeneratorContext generator, Type\n         checkArgument(arguments.size() == 2);\n         CallSiteBinder callSiteBinder = generator.getCallSiteBinder();\n \n-        BytecodeBlock block = new BytecodeBlock().comment(\"DEREFERENCE\").setDescription(\"DEREFERENCE\");\n-        Variable wasNull = generator.wasNull();\n-        Variable rowBlock = generator.getScope().createTempVariable(Block.class);\n-        int index = ((Number) ((ConstantExpression) arguments.get(1)).getValue()).intValue();\n+        // Collect all nested intermediateDerefs\n+        Stack<RowExpression> nestedDerefs = new Stack<RowExpression>();\n+        RowExpression nestedObject = arguments.get(0);\n+        final int leafFieldIndex = ((Number) ((ConstantExpression) arguments.get(1)).getValue()).intValue();\n \n-        // clear the wasNull flag before evaluating the row value\n-        block.putVariable(wasNull, false);\n-        block.append(generator.generate(arguments.get(0), Optional.empty())).putVariable(rowBlock);\n+        // Find all the intermediate nestedDerefs.\n+        while (nestedObject instanceof SpecialFormExpression &&\n+                ((SpecialFormExpression) nestedObject).getForm() == DEREFERENCE) {\n+            nestedDerefs.push(nestedObject);\n+            nestedObject = ((SpecialFormExpression) nestedObject).getArguments().get(0);\n+        }\n \n-        IfStatement ifRowBlockIsNull = new IfStatement(\"if row block is null...\")\n-                .condition(wasNull);\n+        // Here nestedObject is the inner-most expression (so the toplevel object)\n+        // Just generate a loop\n+        BytecodeBlock block = new BytecodeBlock().comment(\"DEREFERENCE\").setDescription(\"DEREFERENCE\");\n+        Variable rowBlock = generator.getScope().createTempVariable(Block.class);\n+        Variable wasNull = generator.wasNull();\n \n-        Class<?> javaType = returnType.getJavaType();\n+        // Labels for control-flow\n         LabelNode end = new LabelNode(\"end\");\n-        ifRowBlockIsNull.ifTrue()\n-                .comment(\"if row block is null, push null to the stack and goto 'end' label (return)\")\n-                .putVariable(wasNull, true)\n-                .pushJavaDefault(javaType)\n-                .gotoLabel(end);\n-\n-        block.append(ifRowBlockIsNull);\n+        LabelNode returnNull = new LabelNode(\"returnNull\");\n \n-        IfStatement ifFieldIsNull = new IfStatement(\"if row field is null...\");\n-        ifFieldIsNull.condition()\n-                .comment(\"call rowBlock.isNull(index)\")\n-                .append(rowBlock)\n-                .push(index)\n-                .invokeInterface(Block.class, \"isNull\", boolean.class, int.class);\n+        // clear the wasNull flag before evaluating the row value and evaluate the root (innermost) object\n+        block.putVariable(wasNull, false)\n+                .append(generator.generate(nestedObject, Optional.empty()))\n+                .putVariable(rowBlock)\n+                .comment(\"If the object is null return null\")\n+                .append(wasNull)\n+                .ifTrueGoto(returnNull);\n \n-        ifFieldIsNull.ifTrue()\n-                .comment(\"if the field is null, push null to stack\")\n-                .putVariable(wasNull, true)\n-                .pushJavaDefault(javaType);\n+        while (!nestedDerefs.empty()) {\n+            SpecialFormExpression nestedDeref = (SpecialFormExpression) nestedDerefs.pop();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dbe03e1403f953f6061ab158a10494875030056"}, "originalPosition": 84}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9dbe03e1403f953f6061ab158a10494875030056", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/9dbe03e1403f953f6061ab158a10494875030056", "committedDate": "2020-09-22T23:51:15Z", "message": "Collapse nested DEREF expressions into a single one."}, "afterCommit": {"oid": "bdf59f78f17ad71a3322ad82c73fe604f0c097b4", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/bdf59f78f17ad71a3322ad82c73fe604f0c097b4", "committedDate": "2020-09-28T16:59:31Z", "message": "Collapse nested DEREF expressions into a single one."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MDEzODAy", "url": "https://github.com/prestodb/presto/pull/15209#pullrequestreview-498013802", "createdAt": "2020-09-29T02:02:57Z", "commit": {"oid": "bdf59f78f17ad71a3322ad82c73fe604f0c097b4"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bdf59f78f17ad71a3322ad82c73fe604f0c097b4", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/bdf59f78f17ad71a3322ad82c73fe604f0c097b4", "committedDate": "2020-09-28T16:59:31Z", "message": "Collapse nested DEREF expressions into a single one."}, "afterCommit": {"oid": "0110e9819ea032c2aaf48d074c8d042bbd1e299c", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/0110e9819ea032c2aaf48d074c8d042bbd1e299c", "committedDate": "2020-09-29T02:50:29Z", "message": "Collapse nested DEREF expressions into a single one."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0110e9819ea032c2aaf48d074c8d042bbd1e299c", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/0110e9819ea032c2aaf48d074c8d042bbd1e299c", "committedDate": "2020-09-29T02:50:29Z", "message": "Collapse nested DEREF expressions into a single one."}, "afterCommit": {"oid": "e32c5981ab5729e8e926ac27f10d08093ffe8004", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/e32c5981ab5729e8e926ac27f10d08093ffe8004", "committedDate": "2020-09-29T15:33:05Z", "message": "Collapse nested DEREF expressions into a single one."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07798425f26a14b2ad459e33bc583b891afa568f", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/07798425f26a14b2ad459e33bc583b891afa568f", "committedDate": "2020-09-29T20:48:58Z", "message": "Collapse nested DEREF expressions into a single one."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e32c5981ab5729e8e926ac27f10d08093ffe8004", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/e32c5981ab5729e8e926ac27f10d08093ffe8004", "committedDate": "2020-09-29T15:33:05Z", "message": "Collapse nested DEREF expressions into a single one."}, "afterCommit": {"oid": "07798425f26a14b2ad459e33bc583b891afa568f", "author": {"user": {"login": "kaikalur", "name": "Sreeni Viswanadha"}}, "url": "https://github.com/prestodb/presto/commit/07798425f26a14b2ad459e33bc583b891afa568f", "committedDate": "2020-09-29T20:48:58Z", "message": "Collapse nested DEREF expressions into a single one."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MDc3NzY0", "url": "https://github.com/prestodb/presto/pull/15209#pullrequestreview-499077764", "createdAt": "2020-09-30T04:34:46Z", "commit": {"oid": "07798425f26a14b2ad459e33bc583b891afa568f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MDkyNjc0", "url": "https://github.com/prestodb/presto/pull/15209#pullrequestreview-499092674", "createdAt": "2020-09-30T05:25:55Z", "commit": {"oid": "07798425f26a14b2ad459e33bc583b891afa568f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MDkyNzc1", "url": "https://github.com/prestodb/presto/pull/15209#pullrequestreview-499092775", "createdAt": "2020-09-30T05:26:12Z", "commit": {"oid": "07798425f26a14b2ad459e33bc583b891afa568f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 190, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}