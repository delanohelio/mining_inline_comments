{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NjY3MTA2", "number": 14222, "title": "Reduce positions array size in PartitionBuffer", "bodyText": "Partially resolves #14162\nIn OptimizedPartitionedOutputOperator, the PagePartioner has\npartitionCount number of PartitionBuffer, and each PartitionBuffer\nhas a positions array to record the positions to be appended to this\nbuffer. Previously this positions array was initialized to be the\nincoming page's positionCount size. This could waste lots of memory\nsince each partition may only get a small portion of rows. This commit\nreduces the initial positions array size from positionCount to\nmin(positionCount, (positionCount / partitionCount + 1) * 2) and\ngrow it on the fly.\nJMH benchmark shows about 8-10% gain in retained size (partitionCount = 256):\n\n\n\n\u00a0\naddPage\noptimizedAddPage\noptimizedAddPage_reducePositions\nGain%\n\n\n\n\nBIGINT\n335,715,874\n424,471,312\n390,497,040\n8%\n\n\nARRAY(BIGINT)\n327,680,906\n294,847,046\n270,506,390\n8%\n\n\nROW(BIGINT,BIGINT)\n315,490,496\n261,529,566\n236,571,362\n10%\n\n\n\n== NO RELEASE NOTE ==", "createdAt": "2020-03-06T07:07:13Z", "url": "https://github.com/prestodb/presto/pull/14222", "merged": true, "mergeCommit": {"oid": "000fa29dcbf3958e988a20f92febe058baba9e6d"}, "closed": true, "closedAt": "2020-03-16T18:28:56Z", "author": {"login": "yingsu00"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcK6rswgBqjMxMDQyMjM1OTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMwJ8ugFqTM3MzIwMjIxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a575405c095336b0076695ec6e11fa5897cd2654", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/a575405c095336b0076695ec6e11fa5897cd2654", "committedDate": "2020-03-06T06:59:27Z", "message": "Reduce positions array size in PartitionBuffer\n\nPreviously the positions array in PartitionBuffer was initialized to be\nthe incoming pages' size. This is over allocating since each partition\nmay only get a small portion of rows. This commit reduces the initial\npositions array size to (positionCount / partitionCount + 1) * 2 and\ngrow it on the fly. Note that this regressed the CPU performance a\nlittle. For example, the JMH benchmark regressed by 10% for one BIGINT\nno null case."}, "afterCommit": {"oid": "03f40b883593b38560408c178390a19eb32dd2ac", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/03f40b883593b38560408c178390a19eb32dd2ac", "committedDate": "2020-03-06T07:07:22Z", "message": "Reduce positions array size in PartitionBuffer\n\nPreviously the positions array in PartitionBuffer was initialized to be\nthe incoming pages' size. This is over allocating since each partition\nmay only get a small portion of rows. This commit reduces the initial\npositions array size to (positionCount / partitionCount + 1) * 2 and\ngrow it on the fly. Note that this regressed the CPU performance a\nlittle. For example, the JMH benchmark regressed by 10% for one BIGINT\nno null case."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNDIwODU0", "url": "https://github.com/prestodb/presto/pull/14222#pullrequestreview-370420854", "createdAt": "2020-03-06T15:44:48Z", "commit": {"oid": "03f40b883593b38560408c178390a19eb32dd2ac"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTcxMTY4", "url": "https://github.com/prestodb/presto/pull/14222#pullrequestreview-371571168", "createdAt": "2020-03-09T22:29:10Z", "commit": {"oid": "03f40b883593b38560408c178390a19eb32dd2ac"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "03f40b883593b38560408c178390a19eb32dd2ac", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/03f40b883593b38560408c178390a19eb32dd2ac", "committedDate": "2020-03-06T07:07:22Z", "message": "Reduce positions array size in PartitionBuffer\n\nPreviously the positions array in PartitionBuffer was initialized to be\nthe incoming pages' size. This is over allocating since each partition\nmay only get a small portion of rows. This commit reduces the initial\npositions array size to (positionCount / partitionCount + 1) * 2 and\ngrow it on the fly. Note that this regressed the CPU performance a\nlittle. For example, the JMH benchmark regressed by 10% for one BIGINT\nno null case."}, "afterCommit": {"oid": "a6784d875b457f431538700499d446b5978b01a3", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/a6784d875b457f431538700499d446b5978b01a3", "committedDate": "2020-03-10T07:05:47Z", "message": "Reduce positions array size in PartitionBuffer\n\nPreviously the positions array in PartitionBuffer was initialized to be\nthe incoming pages' positionCount length. This could waste lots of memory\nsince each partition may only get a small portion of rows. This commit\nreduces the initial positions array size to\nmax(positionCount, (positionCount / partitionCount + 1) * 2) and\ngrow it on the fly."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6784d875b457f431538700499d446b5978b01a3", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/a6784d875b457f431538700499d446b5978b01a3", "committedDate": "2020-03-10T07:05:47Z", "message": "Reduce positions array size in PartitionBuffer\n\nPreviously the positions array in PartitionBuffer was initialized to be\nthe incoming pages' positionCount length. This could waste lots of memory\nsince each partition may only get a small portion of rows. This commit\nreduces the initial positions array size to\nmax(positionCount, (positionCount / partitionCount + 1) * 2) and\ngrow it on the fly."}, "afterCommit": {"oid": "68f4e2723b6be8ca110beb8597ae9774efd0928e", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/68f4e2723b6be8ca110beb8597ae9774efd0928e", "committedDate": "2020-03-10T07:23:06Z", "message": "Reduce positions array size in PartitionBuffer\n\nIn OptimizedPartitionedOutputOperator, the PagePartioner has\npartitionCount number of PartitionBuffer, and each PartitionBuffer\nhas a positions array to record the positions to be appended to this\nbuffer. Previously this positions array was initialized to be the\nincoming page's positionCount size. This could waste lots of memory\nsince each partition may only get a small portion of rows. This commit\nreduces the initial positions array size from positionCount to\nmin(positionCount, (positionCount / partitionCount + 1) * 2) and\ngrow it on the fly."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxODExNjM3", "url": "https://github.com/prestodb/presto/pull/14222#pullrequestreview-371811637", "createdAt": "2020-03-10T09:57:08Z", "commit": {"oid": "68f4e2723b6be8ca110beb8597ae9774efd0928e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOTo1NzowOFrOF0IE8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOTo1NzowOFrOF0IE8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwMjYwOA==", "bodyText": "@yingsu00 perhaps, add a comment explaining this calculation and maybe consider moving it to the caller; e.g.  have the caller provide an estimate of how many rows there will be in a partition\nresetPositions(int estimatedPositionCount)", "url": "https://github.com/prestodb/presto/pull/14222#discussion_r390202608", "createdAt": "2020-03-10T09:57:08Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/OptimizedPartitionedOutputOperator.java", "diffHunk": "@@ -561,12 +565,13 @@ private static int getFixedWidthTypeSize(Type type)\n \n         private void resetPositions(int positionCount)\n         {\n-            positions = ensureCapacity(positions, positionCount);\n+            positions = ensureCapacity(positions, min(positionCount, (positionCount / partitionCount + 1) * 2));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f4e2723b6be8ca110beb8597ae9774efd0928e"}, "originalPosition": 45}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "68f4e2723b6be8ca110beb8597ae9774efd0928e", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/68f4e2723b6be8ca110beb8597ae9774efd0928e", "committedDate": "2020-03-10T07:23:06Z", "message": "Reduce positions array size in PartitionBuffer\n\nIn OptimizedPartitionedOutputOperator, the PagePartioner has\npartitionCount number of PartitionBuffer, and each PartitionBuffer\nhas a positions array to record the positions to be appended to this\nbuffer. Previously this positions array was initialized to be the\nincoming page's positionCount size. This could waste lots of memory\nsince each partition may only get a small portion of rows. This commit\nreduces the initial positions array size from positionCount to\nmin(positionCount, (positionCount / partitionCount + 1) * 2) and\ngrow it on the fly."}, "afterCommit": {"oid": "63cd738020e359a534e133087ceb28b3a2d5e014", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/63cd738020e359a534e133087ceb28b3a2d5e014", "committedDate": "2020-03-11T08:16:52Z", "message": "Reduce positions array size in PartitionBuffer\n\nIn OptimizedPartitionedOutputOperator, the PagePartioner has\npartitionCount number of PartitionBuffer, and each PartitionBuffer\nhas a positions array to record the positions to be appended to this\nbuffer. Previously this positions array was initialized to be the\nincoming page's positionCount size. This could waste lots of memory\nsince each partition may only get a small portion of rows. This commit\nreduces the initial positions array size from positionCount to\nmin(positionCount, (positionCount / partitionCount + 1) * 2) and\ngrow it on the fly."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63cd738020e359a534e133087ceb28b3a2d5e014", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/63cd738020e359a534e133087ceb28b3a2d5e014", "committedDate": "2020-03-11T08:16:52Z", "message": "Reduce positions array size in PartitionBuffer\n\nIn OptimizedPartitionedOutputOperator, the PagePartioner has\npartitionCount number of PartitionBuffer, and each PartitionBuffer\nhas a positions array to record the positions to be appended to this\nbuffer. Previously this positions array was initialized to be the\nincoming page's positionCount size. This could waste lots of memory\nsince each partition may only get a small portion of rows. This commit\nreduces the initial positions array size from positionCount to\nmin(positionCount, (positionCount / partitionCount + 1) * 2) and\ngrow it on the fly."}, "afterCommit": {"oid": "ddc219ecaae6f171d4c42d6c2fbe4177dfe46baa", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/ddc219ecaae6f171d4c42d6c2fbe4177dfe46baa", "committedDate": "2020-03-11T08:56:56Z", "message": "Reduce positions array size in PartitionBuffer\n\nIn OptimizedPartitionedOutputOperator, the PagePartioner has\npartitionCount number of PartitionBuffer, and each PartitionBuffer\nhas a positions array to record the positions to be appended to this\nbuffer. Previously this positions array was initialized to be the\nincoming page's positionCount size. This could waste lots of memory\nsince each partition may only get a small portion of rows. This commit\nreduces the initial positions array size from positionCount to\nmin(positionCount, (positionCount / partitionCount + 1) * 2) and\ngrow it on the fly.\n\nJMH benchmark shows about 8-10% gain in retained size:\n\t\t\taddPage\t\toptimizedAddPage optimizedAddPage_reducePositions Gain%\nbigint\t \t \t335,715,874 \t 424,471,312 \t \t390,497,040 \t\t   8%\nARRAY(BIGINT)\t \t327,680,906 \t 294,847,046 \t \t270,506,390 \t\t   8%\nROW(BIGINT,BIGINT)\t315,490,496 \t 261,529,566 \t \t236,571,362 \t\t   10%"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzM2Mzg5", "url": "https://github.com/prestodb/presto/pull/14222#pullrequestreview-372736389", "createdAt": "2020-03-11T13:03:58Z", "commit": {"oid": "ddc219ecaae6f171d4c42d6c2fbe4177dfe46baa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzowMzo1OFrOF018lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzowMzo1OFrOF018lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk1NDEzMw==", "bodyText": "@yingsu00 nit: consider moving this comment and calculation of the estimated position count out of the loop to avoid repeating this computation over and over.", "url": "https://github.com/prestodb/presto/pull/14222#discussion_r390954133", "createdAt": "2020-03-11T13:03:58Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/OptimizedPartitionedOutputOperator.java", "diffHunk": "@@ -435,7 +437,9 @@ public void partitionPage(Page page)\n             int positionCount = page.getPositionCount();\n \n             for (int i = 0; i < partitionBuffers.length; i++) {\n-                partitionBuffers[i].resetPositions(positionCount);\n+                // We initialize the size of the positions array in each partitionBuffers to be at most the incoming page's positionCount, or roughly two times of positionCount", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddc219ecaae6f171d4c42d6c2fbe4177dfe46baa"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0328962d4e16d36f69ec54b70ea9c16f427402ca", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/0328962d4e16d36f69ec54b70ea9c16f427402ca", "committedDate": "2020-03-11T23:50:30Z", "message": "Reduce positions array size in PartitionBuffer\n\nIn OptimizedPartitionedOutputOperator, the PagePartioner has\npartitionCount number of PartitionBuffer, and each PartitionBuffer\nhas a positions array to record the positions to be appended to this\nbuffer. Previously this positions array was initialized to be the\nincoming page's positionCount size. This could waste lots of memory\nsince each partition may only get a small portion of rows. This commit\nreduces the initial positions array size from positionCount to\nmin(positionCount, (positionCount / partitionCount + 1) * 2) and\ngrow it on the fly.\n\nJMH benchmark shows about 8-10% gain in retained size:\n\t\t\taddPage\t\toptimizedAddPage optimizedAddPage_reducePositions Gain%\nbigint\t \t \t335,715,874 \t 424,471,312 \t \t390,497,040 \t\t   8%\nARRAY(BIGINT)\t \t327,680,906 \t 294,847,046 \t \t270,506,390 \t\t   8%\nROW(BIGINT,BIGINT)\t315,490,496 \t 261,529,566 \t \t236,571,362 \t\t   10%"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ddc219ecaae6f171d4c42d6c2fbe4177dfe46baa", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/ddc219ecaae6f171d4c42d6c2fbe4177dfe46baa", "committedDate": "2020-03-11T08:56:56Z", "message": "Reduce positions array size in PartitionBuffer\n\nIn OptimizedPartitionedOutputOperator, the PagePartioner has\npartitionCount number of PartitionBuffer, and each PartitionBuffer\nhas a positions array to record the positions to be appended to this\nbuffer. Previously this positions array was initialized to be the\nincoming page's positionCount size. This could waste lots of memory\nsince each partition may only get a small portion of rows. This commit\nreduces the initial positions array size from positionCount to\nmin(positionCount, (positionCount / partitionCount + 1) * 2) and\ngrow it on the fly.\n\nJMH benchmark shows about 8-10% gain in retained size:\n\t\t\taddPage\t\toptimizedAddPage optimizedAddPage_reducePositions Gain%\nbigint\t \t \t335,715,874 \t 424,471,312 \t \t390,497,040 \t\t   8%\nARRAY(BIGINT)\t \t327,680,906 \t 294,847,046 \t \t270,506,390 \t\t   8%\nROW(BIGINT,BIGINT)\t315,490,496 \t 261,529,566 \t \t236,571,362 \t\t   10%"}, "afterCommit": {"oid": "0328962d4e16d36f69ec54b70ea9c16f427402ca", "author": {"user": null}, "url": "https://github.com/prestodb/presto/commit/0328962d4e16d36f69ec54b70ea9c16f427402ca", "committedDate": "2020-03-11T23:50:30Z", "message": "Reduce positions array size in PartitionBuffer\n\nIn OptimizedPartitionedOutputOperator, the PagePartioner has\npartitionCount number of PartitionBuffer, and each PartitionBuffer\nhas a positions array to record the positions to be appended to this\nbuffer. Previously this positions array was initialized to be the\nincoming page's positionCount size. This could waste lots of memory\nsince each partition may only get a small portion of rows. This commit\nreduces the initial positions array size from positionCount to\nmin(positionCount, (positionCount / partitionCount + 1) * 2) and\ngrow it on the fly.\n\nJMH benchmark shows about 8-10% gain in retained size:\n\t\t\taddPage\t\toptimizedAddPage optimizedAddPage_reducePositions Gain%\nbigint\t \t \t335,715,874 \t 424,471,312 \t \t390,497,040 \t\t   8%\nARRAY(BIGINT)\t \t327,680,906 \t 294,847,046 \t \t270,506,390 \t\t   8%\nROW(BIGINT,BIGINT)\t315,490,496 \t 261,529,566 \t \t236,571,362 \t\t   10%"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMjAyMjE4", "url": "https://github.com/prestodb/presto/pull/14222#pullrequestreview-373202218", "createdAt": "2020-03-11T23:59:12Z", "commit": {"oid": "0328962d4e16d36f69ec54b70ea9c16f427402ca"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMzo1OToxMlrOF1NOpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMzo1OToxMlrOF1NOpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMzNTU4OA==", "bodyText": "nit: estimatedPositionCountPerPartition ?", "url": "https://github.com/prestodb/presto/pull/14222#discussion_r391335588", "createdAt": "2020-03-11T23:59:12Z", "author": {"login": "mbasmanova"}, "path": "presto-main/src/main/java/com/facebook/presto/operator/repartition/OptimizedPartitionedOutputOperator.java", "diffHunk": "@@ -434,8 +436,11 @@ public void partitionPage(Page page)\n             // Populate positions to copy for each destination partition.\n             int positionCount = page.getPositionCount();\n \n+            // We initialize the size of the positions array in each partitionBuffers to be at most the incoming page's positionCount, or roughly two times of positionCount\n+            // divided by the number of partitions. This is because the latter could be greater than the positionCount when the number of partitions is 1 or positionCount is 1.\n+            int initialPositionCountForEachBuffer = min(positionCount, (positionCount / partitionFunction.getPartitionCount() + 1) * 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0328962d4e16d36f69ec54b70ea9c16f427402ca"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2008, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}