{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNzQ5MTIx", "number": 14267, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMTo1NjowMlrODpV8eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNDo1MToxMVrODpXlwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Njc3NzUyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/Partitioning.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMTo1NjowMlrOF4dftA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMTo1NjowMlrOF4dftA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc0NzgyOA==", "bodyText": "Should we also update the error message?", "url": "https://github.com/prestodb/presto/pull/14267#discussion_r394747828", "createdAt": "2020-03-19T01:56:02Z", "author": {"login": "caithagoras"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/Partitioning.java", "diffHunk": "@@ -317,9 +317,9 @@ else if (argument instanceof VariableReferenceExpression) {\n     }\n \n     // Maps VariableReferenceExpression in both partitions to an COALESCE expression, keeps constant arguments unchanged.\n-    public Optional<Partitioning> translateToCoalesce(Partitioning other)\n+    public Optional<Partitioning> translateToCoalesce(Partitioning other, Metadata metadata, Session session)\n     {\n-        checkArgument(this.handle.equals(other.handle), \"incompatible partitioning handles: %s != %s\", this.handle, other.handle);\n+        checkArgument(metadata.getCommonPartitioning(session, this.handle, other.handle).isPresent(), \"incompatible partitioning handles: %s != %s\", this.handle, other.handle);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d581cae3bb9e023cd2e130d78ba60a5dc5d161e5"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NzA0NDM2OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/Partitioning.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNDo0OTozOFrOF4gB9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNDo0OTozOFrOF4gB9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc4OTM2NA==", "bodyText": "what about:\n    this.handle.equals(other.handle) || metadata.isRefinedPartitioningOver(session, this, other) || metadata.isRefinedPartitioningOver(session, other, this)", "url": "https://github.com/prestodb/presto/pull/14267#discussion_r394789364", "createdAt": "2020-03-19T04:49:38Z", "author": {"login": "wenleix"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/Partitioning.java", "diffHunk": "@@ -317,9 +317,9 @@ else if (argument instanceof VariableReferenceExpression) {\n     }\n \n     // Maps VariableReferenceExpression in both partitions to an COALESCE expression, keeps constant arguments unchanged.\n-    public Optional<Partitioning> translateToCoalesce(Partitioning other)\n+    public Optional<Partitioning> translateToCoalesce(Partitioning other, Metadata metadata, Session session)\n     {\n-        checkArgument(this.handle.equals(other.handle), \"incompatible partitioning handles: %s != %s\", this.handle, other.handle);\n+        checkArgument(metadata.getCommonPartitioning(session, this.handle, other.handle).isPresent(), \"incompatible partitioning handles: %s != %s\", this.handle, other.handle);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d581cae3bb9e023cd2e130d78ba60a5dc5d161e5"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NzA0NzA0OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PropertyDerivations.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNDo1MToxMVrOF4gDZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwNDo1MToxMVrOF4gDZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc4OTczMg==", "bodyText": "what about\n   && metadata.isRefinedPartitioningOver(session, probeProperties.getNodePartitioning().get().getHandle(), buildProperties.getNodePartitioning().get().getHandle()).isPresent()) || metadata.isRefinedPartitioningOver()...\n\nYou might want to save probeProperties.getNodePartitioning().get().getHandle() and buildProperties.getNodePartitioning().get().getHandle()).isPresent() as local variable.", "url": "https://github.com/prestodb/presto/pull/14267#discussion_r394789732", "createdAt": "2020-03-19T04:51:11Z", "author": {"login": "wenleix"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PropertyDerivations.java", "diffHunk": "@@ -449,9 +449,12 @@ public ActualProperties visitJoin(JoinNode node, List<ActualProperties> inputPro\n                                 .build();\n                     }\n \n-                    if (isOptimizeFullOuterJoinWithCoalesce(session) && probeProperties.getNodePartitioning().isPresent() && buildProperties.getNodePartitioning().isPresent()) {\n+                    if (isOptimizeFullOuterJoinWithCoalesce(session) &&\n+                            probeProperties.getNodePartitioning().isPresent() &&\n+                            buildProperties.getNodePartitioning().isPresent() &&\n+                            metadata.getCommonPartitioning(session, probeProperties.getNodePartitioning().get().getHandle(), buildProperties.getNodePartitioning().get().getHandle()).isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d581cae3bb9e023cd2e130d78ba60a5dc5d161e5"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2921, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}