{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMzU3OTA2", "number": 14465, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMzoyMToxMFrOD6B9sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMzoyMToxN1rOD6B9zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTc2MTc3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMzoyMToxMFrOGRo1DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzo0Njo1NVrOGSUGZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE0NzkxNw==", "bodyText": "This could potentially hurt performance. Maybe guard it with log.isDebugEnabled()", "url": "https://github.com/prestodb/presto/pull/14465#discussion_r421147917", "createdAt": "2020-05-06T23:21:10Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java", "diffHunk": "@@ -303,6 +307,9 @@ private ClassDefinition definePageProjectWorkClass(SqlFunctionProperties sqlFunc\n                         .flatMap(m -> m.entrySet().stream())\n                         .collect(toImmutableMap(Map.Entry::getKey, Map.Entry::getValue));\n                 projections = projections.stream().map(projection -> rewriteExpressionWithCSE(projection, commonSubExpressions)).collect(toImmutableList());\n+                log.debug(format(\"Extracted %d common sub-expressions\", commonSubExpressions.size()));\n+                commonSubExpressions.entrySet().forEach(entry -> log.debug(format(\"\\t%s = %s\", entry.getValue(), entry.getKey())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2660872e3dd872ce4dd79f533f5a31c522f3c18f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg1Njg2OA==", "bodyText": "I'll make this change, but we actually have debug level logging enabled on production so if there's really performance concerns we probably should not enable debug logging by default. \ud83d\ude02", "url": "https://github.com/prestodb/presto/pull/14465#discussion_r421856868", "createdAt": "2020-05-07T23:46:55Z", "author": {"login": "rongrong"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java", "diffHunk": "@@ -303,6 +307,9 @@ private ClassDefinition definePageProjectWorkClass(SqlFunctionProperties sqlFunc\n                         .flatMap(m -> m.entrySet().stream())\n                         .collect(toImmutableMap(Map.Entry::getKey, Map.Entry::getValue));\n                 projections = projections.stream().map(projection -> rewriteExpressionWithCSE(projection, commonSubExpressions)).collect(toImmutableList());\n+                log.debug(format(\"Extracted %d common sub-expressions\", commonSubExpressions.size()));\n+                commonSubExpressions.entrySet().forEach(entry -> log.debug(format(\"\\t%s = %s\", entry.getValue(), entry.getKey())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE0NzkxNw=="}, "originalCommit": {"oid": "2660872e3dd872ce4dd79f533f5a31c522f3c18f"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTc2MjA0OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMzoyMToxN1rOGRo1Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMzoyMToxN1rOGRo1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE0Nzk1OA==", "bodyText": "same", "url": "https://github.com/prestodb/presto/pull/14465#discussion_r421147958", "createdAt": "2020-05-06T23:21:17Z", "author": {"login": "highker"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java", "diffHunk": "@@ -588,6 +595,9 @@ private ClassDefinition defineFilterClass(SqlFunctionProperties sqlFunctionPrope\n                         .flatMap(m -> m.entrySet().stream())\n                         .collect(toImmutableMap(Map.Entry::getKey, Map.Entry::getValue));\n                 filter = rewriteExpressionWithCSE(filter, commonSubExpressions);\n+                log.debug(format(\"Extracted %d common sub-expressions\", commonSubExpressions.size()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2660872e3dd872ce4dd79f533f5a31c522f3c18f"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2560, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}