{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMTE4MTUz", "number": 14261, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjozMjo1MFrOD3K-4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjozNDo1NFrOD3LCDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MTc4MjEwOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjozMjo1MFrOGNRrlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjozMjo1MFrOGNRrlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU3NDM1OQ==", "bodyText": "nit: put this method before the previous one.", "url": "https://github.com/prestodb/presto/pull/14261#discussion_r416574359", "createdAt": "2020-04-28T12:32:50Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java", "diffHunk": "@@ -247,6 +249,53 @@ public static String textDistributedPlan(SubPlan plan, FunctionManager functionM\n         return builder.toString();\n     }\n \n+    public static String jsonLogicalPlan(\n+            PlanNode plan,\n+            TypeProvider types,\n+            Optional<StageExecutionDescriptor> stageExecutionStrategy,\n+            FunctionManager functionManager,\n+            StatsAndCosts estimatedStatsAndCosts,\n+            Session session,\n+            Optional<Map<PlanNodeId, PlanNodeStats>> stats)\n+    {\n+        return new PlanPrinter(plan, types, stageExecutionStrategy, functionManager, estimatedStatsAndCosts, session, stats).toJson();\n+    }\n+\n+    public static String jsonLogicalPlan(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e228e6471559cb70e2ce826cfde4ce2c90f47011"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MTc4OTU3OnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/QueryExplainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjozNDo0NVrOGNRwOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjozNDo0NVrOGNRwOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU3NTU0Nw==", "bodyText": "nit: static import", "url": "https://github.com/prestodb/presto/pull/14261#discussion_r416575547", "createdAt": "2020-04-28T12:34:45Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/QueryExplainer.java", "diffHunk": "@@ -160,10 +160,17 @@ public String getJsonPlan(Session session, Statement statement, Type planType, L\n             return explainTask(statement, task, parameters);\n         }\n \n+        Plan plan;\n         switch (planType) {\n             case IO:\n-                Plan plan = getLogicalPlan(session, statement, parameters, warningCollector);\n+                plan = getLogicalPlan(session, statement, parameters, warningCollector);\n                 return textIOPlan(plan.getRoot(), metadata, session);\n+            case LOGICAL:\n+                plan = getLogicalPlan(session, statement, parameters, warningCollector);\n+                return PlanPrinter.jsonLogicalPlan(plan.getRoot(), plan.getTypes(), metadata.getFunctionManager(), plan.getStatsAndCosts(), session);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e228e6471559cb70e2ce826cfde4ce2c90f47011"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MTc5MDIyOnYy", "diffSide": "RIGHT", "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/QueryExplainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjozNDo1NFrOGNRwoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjozNDo1NFrOGNRwoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU3NTY0OA==", "bodyText": "static import", "url": "https://github.com/prestodb/presto/pull/14261#discussion_r416575648", "createdAt": "2020-04-28T12:34:54Z", "author": {"login": "rschlussel"}, "path": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/QueryExplainer.java", "diffHunk": "@@ -160,10 +160,17 @@ public String getJsonPlan(Session session, Statement statement, Type planType, L\n             return explainTask(statement, task, parameters);\n         }\n \n+        Plan plan;\n         switch (planType) {\n             case IO:\n-                Plan plan = getLogicalPlan(session, statement, parameters, warningCollector);\n+                plan = getLogicalPlan(session, statement, parameters, warningCollector);\n                 return textIOPlan(plan.getRoot(), metadata, session);\n+            case LOGICAL:\n+                plan = getLogicalPlan(session, statement, parameters, warningCollector);\n+                return PlanPrinter.jsonLogicalPlan(plan.getRoot(), plan.getTypes(), metadata.getFunctionManager(), plan.getStatsAndCosts(), session);\n+            case DISTRIBUTED:\n+                SubPlan subPlan = getDistributedPlan(session, statement, parameters, warningCollector);\n+                return PlanPrinter.jsonDistributedPlan(subPlan);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e228e6471559cb70e2ce826cfde4ce2c90f47011"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2916, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}