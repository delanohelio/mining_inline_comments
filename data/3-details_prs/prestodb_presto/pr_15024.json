{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NTg3Mjcw", "number": 15024, "title": "Implement PrestoS3FileSystem#listFiles for direct recursive listings", "bodyText": "Implements FileSystem#listFiles(Path, boolean recursive) for PrestoS3FileSystem which in theory adds support for directly listing S3 files underneath a prefix without recursive calls through each \"directory\". This direct traversal requires much fewer requests when dealing with nested directories but may violate some PathFilter implementation's expectation of being called at each directory level, and may perform worse when a large number objects are contained within hidden paths (since filtering would be performed after the fact). I'm open to suggestions about how to balance this trade-off and integrate this with the DirectoryLister.\nIncidentally, a straightforward improvement to getFileStatus fell out of the implementation allowing the isDir check for a path prefix (with no object present) to be done by limiting the listing result size to 1 instead of listing the full default 1000.\n== RELEASE NOTES ==\nHive Changes\n* Add support for direct recursive file listings in PrestoS3FileSystem", "createdAt": "2020-08-13T19:21:29Z", "url": "https://github.com/prestodb/presto/pull/15024", "merged": true, "mergeCommit": {"oid": "95725f66bceceadd311eaaff9f7e5706b63a407a"}, "closed": true, "closedAt": "2020-08-21T23:49:18Z", "author": {"login": "pettyjamesm"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdALqF5AFqTQ2OTczMjk0Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBLHkdgBqjM2ODEwODYyMzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzMyOTQ3", "url": "https://github.com/prestodb/presto/pull/15024#pullrequestreview-469732947", "createdAt": "2020-08-18T18:50:31Z", "commit": {"oid": "a8edbb29b80dabe85d841b4bd027fc9f69adf07b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo1MDozMVrOHChlfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo1MTozN1rOHChoEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwOTQ2OA==", "bodyText": "else is not needed", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r472409468", "createdAt": "2020-08-18T18:50:31Z", "author": {"login": "zhenxiao"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -501,23 +518,37 @@ protected ObjectListing computeNext(ObjectListing previous)\n                 if (!previous.isTruncated()) {\n                     return null;\n                 }\n+                // Clear any max keys set for the initial request before submitting subsequent requests. Values < 0\n+                // are not sent in the request and the default limit is used\n+                previous.setMaxKeys(-1);\n                 return s3.listNextBatchOfObjects(previous);\n             }\n         };\n \n-        return Iterators.concat(Iterators.transform(listings, this::statusFromListing));\n+        Iterator<LocatedFileStatus> result = Iterators.concat(Iterators.transform(listings, this::statusFromListing));\n+        if (filterDirectories) {\n+            //  Even recursive listing can still list empty directories, must filter them out\n+            result = Iterators.filter(result, LocatedFileStatus::isFile);\n+        }\n+        return result;\n     }\n \n     private Iterator<LocatedFileStatus> statusFromListing(ObjectListing listing)\n     {\n-        return Iterators.concat(\n-                statusFromPrefixes(listing.getCommonPrefixes()),\n-                statusFromObjects(listing.getObjectSummaries()));\n+        List<String> prefixes = listing.getCommonPrefixes();\n+        if (prefixes.isEmpty()) {\n+            return statusFromObjects(listing.getObjectSummaries());\n+        }\n+        else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8edbb29b80dabe85d841b4bd027fc9f69adf07b"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwOTg1MQ==", "bodyText": "for filterDirectories, shall we use returnFilesOnly? for easy understanding", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r472409851", "createdAt": "2020-08-18T18:51:10Z", "author": {"login": "zhenxiao"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -480,7 +496,7 @@ public boolean mkdirs(Path f, FsPermission permission)\n         return true;\n     }\n \n-    private Iterator<LocatedFileStatus> listPrefix(Path path)\n+    private Iterator<LocatedFileStatus> listPrefix(Path path, OptionalInt initialMaxKeys, boolean recursive, boolean filterDirectories)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8edbb29b80dabe85d841b4bd027fc9f69adf07b"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxMDEzMA==", "bodyText": "could we add testcases for different behaviors of recursive and filterDirectories?", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r472410130", "createdAt": "2020-08-18T18:51:37Z", "author": {"login": "zhenxiao"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -490,7 +506,8 @@ public boolean mkdirs(Path f, FsPermission permission)\n         ListObjectsRequest request = new ListObjectsRequest()\n                 .withBucketName(getBucketName(uri))\n                 .withPrefix(key)\n-                .withDelimiter(PATH_SEPARATOR);\n+                .withDelimiter(recursive && filterDirectories ? null : PATH_SEPARATOR)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8edbb29b80dabe85d841b4bd027fc9f69adf07b"}, "originalPosition": 108}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8edbb29b80dabe85d841b4bd027fc9f69adf07b", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/a8edbb29b80dabe85d841b4bd027fc9f69adf07b", "committedDate": "2020-08-13T19:16:39Z", "message": "Implement PrestoS3FileSystem#listFiles for direct recursive listings\n\nImplements FileSystem#listFiles(Path, boolean recursive) for\nPrestoS3FileSystem which in theory adds support for directly listing\nS3 files underneath a prefix without recursive calls through each\n\"directory\". This direct traversal requires much fewer requests\nwhen dealing with nested directories but may violate some PathFilter\nimplementation's expectation of being called at each directory level,\nand may perform worse when a large number objects are contained within\nhidden paths (since filtering would be performed after the fact). I'm\nopen to suggestions about how to balance this trade-off and integrate\nthis with the DirectoryLister.\n\nIncidentally, a straightforward improvement to getFileStatus fell out\nof the implementation allowing the isDir check for a path prefix (with\nno object present) to be done by limiting the listing result size to 1\ninstead of listing the full default 1000."}, "afterCommit": {"oid": "30eef379b49b05aa055954c71962a17f63bd6101", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/30eef379b49b05aa055954c71962a17f63bd6101", "committedDate": "2020-08-19T13:40:50Z", "message": "Implement PrestoS3FileSystem#listFiles for direct recursive listings\n\nImplements FileSystem#listFiles(Path, boolean recursive) for\nPrestoS3FileSystem which in theory adds support for directly listing\nS3 files underneath a prefix without recursive calls through each\n\"directory\". This direct traversal requires much fewer requests\nwhen dealing with nested directories but may violate some PathFilter\nimplementation's expectation of being called at each directory level,\nand may perform worse when a large number objects are contained within\nhidden paths (since filtering would be performed after the fact). I'm\nopen to suggestions about how to balance this trade-off and integrate\nthis with the DirectoryLister.\n\nIncidentally, a straightforward improvement to getFileStatus fell out\nof the implementation allowing the isDir check for a path prefix (with\nno object present) to be done by limiting the listing result size to 1\ninstead of listing the full default 1000."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "30eef379b49b05aa055954c71962a17f63bd6101", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/30eef379b49b05aa055954c71962a17f63bd6101", "committedDate": "2020-08-19T13:40:50Z", "message": "Implement PrestoS3FileSystem#listFiles for direct recursive listings\n\nImplements FileSystem#listFiles(Path, boolean recursive) for\nPrestoS3FileSystem which in theory adds support for directly listing\nS3 files underneath a prefix without recursive calls through each\n\"directory\". This direct traversal requires much fewer requests\nwhen dealing with nested directories but may violate some PathFilter\nimplementation's expectation of being called at each directory level,\nand may perform worse when a large number objects are contained within\nhidden paths (since filtering would be performed after the fact). I'm\nopen to suggestions about how to balance this trade-off and integrate\nthis with the DirectoryLister.\n\nIncidentally, a straightforward improvement to getFileStatus fell out\nof the implementation allowing the isDir check for a path prefix (with\nno object present) to be done by limiting the listing result size to 1\ninstead of listing the full default 1000."}, "afterCommit": {"oid": "cb4be32ed3e044bb72dcffd49fb648e97c7f61ae", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/cb4be32ed3e044bb72dcffd49fb648e97c7f61ae", "committedDate": "2020-08-20T10:53:12Z", "message": "Implement PrestoS3FileSystem#listFiles for direct recursive listings\n\nImplements FileSystem#listFiles(Path, boolean recursive) for\nPrestoS3FileSystem which in theory adds support for directly listing\nS3 files underneath a prefix without recursive calls through each\n\"directory\". This direct traversal requires much fewer requests\nwhen dealing with nested directories but may violate some PathFilter\nimplementation's expectation of being called at each directory level,\nand may perform worse when a large number objects are contained within\nhidden paths (since filtering would be performed after the fact). I'm\nopen to suggestions about how to balance this trade-off and integrate\nthis with the DirectoryLister.\n\nIncidentally, a straightforward improvement to getFileStatus fell out\nof the implementation allowing the isDir check for a path prefix (with\nno object present) to be done by limiting the listing result size to 1\ninstead of listing the full default 1000."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMjI0MjQ2", "url": "https://github.com/prestodb/presto/pull/15024#pullrequestreview-472224246", "createdAt": "2020-08-21T06:41:01Z", "commit": {"oid": "cb4be32ed3e044bb72dcffd49fb648e97c7f61ae"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNjo0MTowMVrOHEdb0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNjo0MzoxMlrOHEde4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzODYxMA==", "bodyText": "SHALLOW_ALL include both files and directories, right? shall we call is ALL?", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474438610", "createdAt": "2020-08-21T06:41:01Z", "author": {"login": "zhenxiao"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -480,7 +496,22 @@ public boolean mkdirs(Path f, FsPermission permission)\n         return true;\n     }\n \n-    private Iterator<LocatedFileStatus> listPrefix(Path path)\n+    /**\n+     * Enum representing the valid listing modes. This could be two booleans (recursive, filesOnly) except\n+     * that (recursive=true, filesOnly=false) can't be translated directly to a natively supported behavior\n+     */\n+    private enum ListingMode {\n+        SHALLOW_ALL,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb4be32ed3e044bb72dcffd49fb648e97c7f61ae"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzOTM5Mg==", "bodyText": "I feel filesOnly in the comment a little confusing. what do you think? Maybe just keep:\nEnum representing the valid listing modes\nas comment, or we do not need the comment at all?", "url": "https://github.com/prestodb/presto/pull/15024#discussion_r474439392", "createdAt": "2020-08-21T06:43:12Z", "author": {"login": "zhenxiao"}, "path": "presto-hive/src/main/java/com/facebook/presto/hive/s3/PrestoS3FileSystem.java", "diffHunk": "@@ -480,7 +496,22 @@ public boolean mkdirs(Path f, FsPermission permission)\n         return true;\n     }\n \n-    private Iterator<LocatedFileStatus> listPrefix(Path path)\n+    /**\n+     * Enum representing the valid listing modes. This could be two booleans (recursive, filesOnly) except", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb4be32ed3e044bb72dcffd49fb648e97c7f61ae"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c108a13e7b407f194b57934b82366b4c20e10b2c", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/c108a13e7b407f194b57934b82366b4c20e10b2c", "committedDate": "2020-08-21T20:48:11Z", "message": "Implement PrestoS3FileSystem#listFiles for direct recursive listings\n\nImplements FileSystem#listFiles(Path, boolean recursive) for\nPrestoS3FileSystem which in theory adds support for directly listing\nS3 files underneath a prefix without recursive calls through each\n\"directory\". This direct traversal requires much fewer requests\nwhen dealing with nested directories but may violate some PathFilter\nimplementation's expectation of being called at each directory level,\nand may perform worse when a large number objects are contained within\nhidden paths (since filtering would be performed after the fact). I'm\nopen to suggestions about how to balance this trade-off and integrate\nthis with the DirectoryLister.\n\nIncidentally, a straightforward improvement to getFileStatus fell out\nof the implementation allowing the isDir check for a path prefix (with\nno object present) to be done by limiting the listing result size to 1\ninstead of listing the full default 1000."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb4be32ed3e044bb72dcffd49fb648e97c7f61ae", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/cb4be32ed3e044bb72dcffd49fb648e97c7f61ae", "committedDate": "2020-08-20T10:53:12Z", "message": "Implement PrestoS3FileSystem#listFiles for direct recursive listings\n\nImplements FileSystem#listFiles(Path, boolean recursive) for\nPrestoS3FileSystem which in theory adds support for directly listing\nS3 files underneath a prefix without recursive calls through each\n\"directory\". This direct traversal requires much fewer requests\nwhen dealing with nested directories but may violate some PathFilter\nimplementation's expectation of being called at each directory level,\nand may perform worse when a large number objects are contained within\nhidden paths (since filtering would be performed after the fact). I'm\nopen to suggestions about how to balance this trade-off and integrate\nthis with the DirectoryLister.\n\nIncidentally, a straightforward improvement to getFileStatus fell out\nof the implementation allowing the isDir check for a path prefix (with\nno object present) to be done by limiting the listing result size to 1\ninstead of listing the full default 1000."}, "afterCommit": {"oid": "c108a13e7b407f194b57934b82366b4c20e10b2c", "author": {"user": {"login": "pettyjamesm", "name": "James Petty"}}, "url": "https://github.com/prestodb/presto/commit/c108a13e7b407f194b57934b82366b4c20e10b2c", "committedDate": "2020-08-21T20:48:11Z", "message": "Implement PrestoS3FileSystem#listFiles for direct recursive listings\n\nImplements FileSystem#listFiles(Path, boolean recursive) for\nPrestoS3FileSystem which in theory adds support for directly listing\nS3 files underneath a prefix without recursive calls through each\n\"directory\". This direct traversal requires much fewer requests\nwhen dealing with nested directories but may violate some PathFilter\nimplementation's expectation of being called at each directory level,\nand may perform worse when a large number objects are contained within\nhidden paths (since filtering would be performed after the fact). I'm\nopen to suggestions about how to balance this trade-off and integrate\nthis with the DirectoryLister.\n\nIncidentally, a straightforward improvement to getFileStatus fell out\nof the implementation allowing the isDir check for a path prefix (with\nno object present) to be done by limiting the listing result size to 1\ninstead of listing the full default 1000."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 229, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}