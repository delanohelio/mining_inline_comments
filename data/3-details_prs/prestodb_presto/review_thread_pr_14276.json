{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMDM5NzU2", "number": 14276, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQyMjowMzoxMFrODqMZLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzozNDowNVrODqe1ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NTY5ODM2OnYy", "diffSide": "RIGHT", "path": "presto-spi/src/main/java/com/facebook/presto/spi/predicate/TupleDomain.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQyMjowMzoxMFrOF5y2zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQyMjo0NDowMVrOF5zOHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0NjM4MQ==", "bodyText": "nit: static import", "url": "https://github.com/prestodb/presto/pull/14276#discussion_r396146381", "createdAt": "2020-03-22T22:03:10Z", "author": {"login": "caithagoras"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/predicate/TupleDomain.java", "diffHunk": "@@ -144,6 +144,11 @@ private TupleDomain(Optional<Map<T, Domain>> domains)\n \n     private static Optional<Set<NullableValue>> extractFixedValueSet(Domain domain)\n     {\n+        if (domain.isNullableSingleValue()) {\n+            return Optional.of(Collections.singleton(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f17ad11e26b256766d48cc69d8c515bd861854a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE1MjM1MA==", "bodyText": "done", "url": "https://github.com/prestodb/presto/pull/14276#discussion_r396152350", "createdAt": "2020-03-22T22:44:01Z", "author": {"login": "kaikalur"}, "path": "presto-spi/src/main/java/com/facebook/presto/spi/predicate/TupleDomain.java", "diffHunk": "@@ -144,6 +144,11 @@ private TupleDomain(Optional<Map<T, Domain>> domains)\n \n     private static Optional<Set<NullableValue>> extractFixedValueSet(Domain domain)\n     {\n+        if (domain.isNullableSingleValue()) {\n+            return Optional.of(Collections.singleton(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0NjM4MQ=="}, "originalCommit": {"oid": "8f17ad11e26b256766d48cc69d8c515bd861854a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODcyMDU4OnYy", "diffSide": "RIGHT", "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHiveIntegrationSmokeTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzozNDowNVrOF6Qcbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODowOToxOFrOF6R32Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYzMTE1MA==", "bodyText": "nits: space after comma in NULL,1.", "url": "https://github.com/prestodb/presto/pull/14276#discussion_r396631150", "createdAt": "2020-03-23T17:34:05Z", "author": {"login": "rongrong"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHiveIntegrationSmokeTest.java", "diffHunk": "@@ -2102,6 +2102,29 @@ public void testBucketPruning()\n         }\n     }\n \n+    @Test\n+    public void testNullBucket()\n+    {\n+        Session session = getSession();\n+        QueryRunner queryRunner = getQueryRunner();\n+        queryRunner.execute(\"CREATE TABLE table_with_null_buckets WITH (bucket_count=2, bucketed_by = ARRAY['key']) AS \" +\n+                \"SELECT 10 x, CAST(NULL AS INTEGER) AS key UNION ALL SELECT 20 x, 1 key\");\n+\n+        try {\n+            assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key IS NULL\", \"SELECT 1\");\n+            assertQuery(session, \"SELECT x FROM table_with_null_buckets WHERE key IS NULL\", \"SELECT 10\");\n+            assertQuery(session, \"SELECT key FROM table_with_null_buckets WHERE x = 10\", \"SELECT NULL\");\n+            assertQuery(session, \"SELECT x FROM table_with_null_buckets WHERE key = 1\", \"SELECT 20\");\n+            assertQuery(session, \"SELECT key FROM table_with_null_buckets WHERE key IS NULL AND x = 10\", \"SELECT NULL\");\n+            assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key IS NULL AND x = 1\", \"SELECT 0\");\n+            assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key = 10\", \"SELECT 0\");\n+            assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key IN (NULL,1)\", \"SELECT 1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84ac3c65d0913162a1f0b0519b39f288ceb03815"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY1NDU1Mw==", "bodyText": "fixed", "url": "https://github.com/prestodb/presto/pull/14276#discussion_r396654553", "createdAt": "2020-03-23T18:09:18Z", "author": {"login": "kaikalur"}, "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHiveIntegrationSmokeTest.java", "diffHunk": "@@ -2102,6 +2102,29 @@ public void testBucketPruning()\n         }\n     }\n \n+    @Test\n+    public void testNullBucket()\n+    {\n+        Session session = getSession();\n+        QueryRunner queryRunner = getQueryRunner();\n+        queryRunner.execute(\"CREATE TABLE table_with_null_buckets WITH (bucket_count=2, bucketed_by = ARRAY['key']) AS \" +\n+                \"SELECT 10 x, CAST(NULL AS INTEGER) AS key UNION ALL SELECT 20 x, 1 key\");\n+\n+        try {\n+            assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key IS NULL\", \"SELECT 1\");\n+            assertQuery(session, \"SELECT x FROM table_with_null_buckets WHERE key IS NULL\", \"SELECT 10\");\n+            assertQuery(session, \"SELECT key FROM table_with_null_buckets WHERE x = 10\", \"SELECT NULL\");\n+            assertQuery(session, \"SELECT x FROM table_with_null_buckets WHERE key = 1\", \"SELECT 20\");\n+            assertQuery(session, \"SELECT key FROM table_with_null_buckets WHERE key IS NULL AND x = 10\", \"SELECT NULL\");\n+            assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key IS NULL AND x = 1\", \"SELECT 0\");\n+            assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key = 10\", \"SELECT 0\");\n+            assertQuery(session, \"SELECT COUNT() FROM table_with_null_buckets WHERE key IN (NULL,1)\", \"SELECT 1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYzMTE1MA=="}, "originalCommit": {"oid": "84ac3c65d0913162a1f0b0519b39f288ceb03815"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2928, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}