{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMjU3MjEz", "number": 529, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNToyMjo0OFrOEuDJXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNToyMjo0OFrOEuDJXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzIxNTAyOnYy", "diffSide": "RIGHT", "path": "services/core/cards-publication/src/test/java/org/lfenergy/operatorfabric/cards/publication/kafka/consumer/CardCommandConsumerDeserializerShould.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNToyMjo0OFrOHiNWdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzo1NjoyNVrOHiTgtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYzMjM3NQ==", "bodyText": "Is dit echt nodig? Voor mij is dit nu net de rede om weinig waarde aan code coverage te hechten.... Voor mij is kwaliteit van de testen veel belangrijker. Is het een idee om hier met ons drie\u00ebn eens over van gedachten te wisselen?", "url": "https://github.com/opfab/operatorfabric-core/pull/529#discussion_r505632375", "createdAt": "2020-10-15T15:22:48Z", "author": {"login": "sadema"}, "path": "services/core/cards-publication/src/test/java/org/lfenergy/operatorfabric/cards/publication/kafka/consumer/CardCommandConsumerDeserializerShould.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package org.lfenergy.operatorfabric.cards.publication.kafka.consumer;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.springframework.test.context.ActiveProfiles;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+@ExtendWith(MockitoExtension.class)\n+@ActiveProfiles(profiles = {\"native\", \"test\"})\n+class CardCommandConsumerDeserializerShould {\n+\n+    @Test\n+    void forCodeCoverage() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37b4b0d482970cca6204f508a0a595678c1a7f4"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTczMzMwMg==", "bodyText": "Volledig mee eens, maar als de sonar quality gate op 80% staat en daar niet over onderhandeld kan worden en je commit anders afgewezen wordt, ga ik niet moeilijk doen....", "url": "https://github.com/opfab/operatorfabric-core/pull/529#discussion_r505733302", "createdAt": "2020-10-15T17:56:25Z", "author": {"login": "JeroenGommans"}, "path": "services/core/cards-publication/src/test/java/org/lfenergy/operatorfabric/cards/publication/kafka/consumer/CardCommandConsumerDeserializerShould.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package org.lfenergy.operatorfabric.cards.publication.kafka.consumer;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.springframework.test.context.ActiveProfiles;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+@ExtendWith(MockitoExtension.class)\n+@ActiveProfiles(profiles = {\"native\", \"test\"})\n+class CardCommandConsumerDeserializerShould {\n+\n+    @Test\n+    void forCodeCoverage() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYzMjM3NQ=="}, "originalCommit": {"oid": "d37b4b0d482970cca6204f508a0a595678c1a7f4"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 996, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}