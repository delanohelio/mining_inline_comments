{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NzY2MDEz", "number": 294, "title": "[OC-748] Remove button log in using keyCloak", "bodyText": "", "createdAt": "2020-05-12T14:32:51Z", "url": "https://github.com/opfab/operatorfabric-core/pull/294", "merged": true, "mergeCommit": {"oid": "41dd2cb488d24ebfc074f409523e63c5b387cc98"}, "closed": true, "closedAt": "2020-05-13T09:21:48Z", "author": {"login": "freddidierRTE"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgqEnngFqTQxMDIwODUzNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg1BDvgBqjMzMzEwNDk4NTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMjA4NTM2", "url": "https://github.com/opfab/operatorfabric-core/pull/294#pullrequestreview-410208536", "createdAt": "2020-05-12T16:19:12Z", "commit": {"oid": "390d9340a3cdd84d2cf804ee34f49114c9b53ac1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNjoxOToxM1rOGUOmIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoxMjoxOFrOGUXMYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg2Mzg0MQ==", "bodyText": "As it is, authentication.service.spec.ts doesn't have any actual tests left, which is unusual for a spec file. If we want to keep the AuthenticationImportHelperForSpecs helper, maybe we could move it somewhere else? In authentication.service.ts or one of the global helper files ?", "url": "https://github.com/opfab/operatorfabric-core/pull/294#discussion_r423863841", "createdAt": "2020-05-12T16:19:13Z", "author": {"login": "AlexGuironnetRTE"}, "path": "ui/main/src/app/services/authentication/authentication.service.spec.ts", "diffHunk": "@@ -5,502 +5,20 @@\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n \n-\n-import {TestBed} from '@angular/core/testing';\n-\n import {\n     AuthenticationService,\n-    AuthObject,\n-    CheckTokenResponse, ImplicitAuthenticationHandler,\n-    isInTheFuture,\n-    LocalStorageAuthContent,\n-    PasswordOrCodeAuthenticationHandler\n } from './authentication.service';\n-import {HttpClientTestingModule, HttpTestingController} from '@angular/common/http/testing';\n-import {\n-    ImplicitlyAuthenticated,\n-    PayloadForSuccessfulAuthentication,\n-    UnAuthenticationFromImplicitFlow,\n-    UnableToRefreshOrGetToken\n-} from '@ofActions/authentication.actions';\n-import {Guid} from 'guid-typescript';\n-import {getPositiveRandomNumberWithinRange, getRandomAlphanumericValue} from '@tests/helpers';\n import {GuidService} from '@ofServices/guid.service';\n-import {Store, StoreModule} from '@ngrx/store';\n-import {appReducer} from '@ofStore/index';\n-import {environment} from '@env/environment';\n import {\n     OAuthLogger,\n     OAuthService,\n     UrlHelperService,\n     EventType as OauthEventType,\n-    OAuthSuccessEvent\n } from 'angular-oauth2-oidc';\n-import createSpyObj = jasmine.createSpyObj;\n-import {create} from \"domain\";\n-import any = jasmine.any;\n \n \n export const AuthenticationImportHelperForSpecs = [AuthenticationService,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "390d9340a3cdd84d2cf804ee34f49114c9b53ac1"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg2NjI2Mg==", "bodyText": "Why is AuthenticationImportHelperForSpecs no longer needed in this test file and others (cards etc.) ?", "url": "https://github.com/opfab/operatorfabric-core/pull/294#discussion_r423866262", "createdAt": "2020-05-12T16:22:42Z", "author": {"login": "AlexGuironnetRTE"}, "path": "ui/main/src/app/modules/archives/archive.component.spec.ts", "diffHunk": "@@ -46,8 +45,7 @@ describe('ArchivesComponent', () => {\n             ],\n             providers: [\n                 {provide: Store, useClass: Store},\n-                {provide: RouterStateSerializer, useClass: CustomRouterStateSerializer},\n-                AuthenticationImportHelperForSpecs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "390d9340a3cdd84d2cf804ee34f49114c9b53ac1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwMzcxNw==", "bodyText": "Why delete all tests for app component (even those unrelated to feature)? Were they too brittle ?", "url": "https://github.com/opfab/operatorfabric-core/pull/294#discussion_r424003717", "createdAt": "2020-05-12T20:10:17Z", "author": {"login": "AlexGuironnetRTE"}, "path": "ui/main/src/app/app.component.spec.ts", "diffHunk": "@@ -1,178 +0,0 @@\n-/* Copyright (c) 2020, RTE (http://www.rte-france.com)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "390d9340a3cdd84d2cf804ee34f49114c9b53ac1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwNDcwNg==", "bodyText": "This means expiration date is checked every 5s ?\nIf so a named constant might be better.", "url": "https://github.com/opfab/operatorfabric-core/pull/294#discussion_r424004706", "createdAt": "2020-05-12T20:12:18Z", "author": {"login": "AlexGuironnetRTE"}, "path": "ui/main/src/app/services/authentication/authentication.service.ts", "diffHunk": "@@ -96,31 +106,41 @@ export class AuthenticationService {\n      */\n     instantiateAuthModeHandler(mode: string): AuthenticationModeHandler {\n         if (mode.toLowerCase() === 'implicit') {\n-            this.instantiateImplicitFlowConfiguration();\n-            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage);\n+            this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId,clearHashAfterLogin: false};\n+            return new ImplicitAuthenticationHandler(this, this.store, sessionStorage,this.oauthService,this.guidService,this.router,this.implicitConf,);\n         }\n         return new PasswordOrCodeAuthenticationHandler(this, this.store);\n     }\n \n+\n+    regularCheckTokenValidity() {\n+        if (this.verifyExpirationDate()) {\n+            setTimeout(() => {\n+                this.regularCheckTokenValidity();\n+            }, 5000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "390d9340a3cdd84d2cf804ee34f49114c9b53ac1"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNjY3MTYx", "url": "https://github.com/opfab/operatorfabric-core/pull/294#pullrequestreview-410667161", "createdAt": "2020-05-13T07:44:23Z", "commit": {"oid": "390d9340a3cdd84d2cf804ee34f49114c9b53ac1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e8aea93bb61010a664e18261df38faa856714c3", "author": {"user": {"login": "freddidierRTE", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/5e8aea93bb61010a664e18261df38faa856714c3", "committedDate": "2020-05-13T08:56:57Z", "message": "[OC-748] Remove button log in using keyCloak"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "390d9340a3cdd84d2cf804ee34f49114c9b53ac1", "author": {"user": {"login": "freddidierRTE", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/390d9340a3cdd84d2cf804ee34f49114c9b53ac1", "committedDate": "2020-05-12T14:04:15Z", "message": "[OC-748] Remove button log in using keyCloak"}, "afterCommit": {"oid": "5e8aea93bb61010a664e18261df38faa856714c3", "author": {"user": {"login": "freddidierRTE", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/5e8aea93bb61010a664e18261df38faa856714c3", "committedDate": "2020-05-13T08:56:57Z", "message": "[OC-748] Remove button log in using keyCloak"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1317, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}