{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNjUxNjA1", "number": 492, "title": "[ OC-1044 ]  Add export function", "bodyText": "Please read through the checklist below to make sure that you haven't forgotten anything before submitting your PR.\nThen, remove the text and replace it with the information and comments that should go into the release notes.\n// tag::review_checklist[]\n\nThe PR comment contains a brief explanation of the impact of these developments, and a pointer\nto the relevant documentation if need be. Otherwise, it should why this development doesn't need\nto be on the release notes.\nCheck that Travis build is passing (for both branch and PR)\nCheck that the base branch (i.e. the branch into which we want to merge changes) is correct: for feature branches\npull requests, this branch should be develop.\nLook through changed files to make sure everything is relevant to the PR (no mistakenly added changes,\nno secret information, no malicious changes) and to see if you have remarks on the way things are implemented\nCheck that the commit(s) message(s) is(are) relevant and follow conventions ([OC-XXX] ... )\nIf there is more than one commit, is it meaningful or do we need to squash ?\nMeaningful and sufficient unit tests for the backend (80% coverage is the threshold)\nMeaningful unit tests for the frontend (Angular tests can be complex to implement, we should focus on testing complex\nlogic and not the framework itself)\nCheck Sonar analysis on SonarCloud to see if Sonar reports any bugs or code smells on the new code\nAPI testing via Karate has been updated\nCypress UI tests have been updated\nDocumentation has been updated (especially if configuration is needed)\nConfiguration examples have been updated (both for dev and docker)\nBuild and run OpFab locally to see the new feature or bug fix at work. In the case of a new feature, it's also a way\nof making sure that the configuration documentation is correct and easily understandable.\nDepending on the scope of the PR , build docker images and test in docker mode\nCheck that the copyright header has been updated on the changed files if need be, and in the case of a first-time\ncontributor, make sure they're added to the AUTHORS.txt file.\n// end::review_checklist[]", "createdAt": "2020-09-27T01:20:16Z", "url": "https://github.com/opfab/operatorfabric-core/pull/492", "merged": true, "mergeCommit": {"oid": "75d063f854ef3e153bbddce63b5293d8adb4b54b"}, "closed": true, "closedAt": "2020-10-05T09:15:21Z", "author": {"login": "taoufikbermaki"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNS8NBAFqTQ5NzM0OTQ3Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOqG_AgBqjM4MzUxMTkyNTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MzQ5NDc2", "url": "https://github.com/opfab/operatorfabric-core/pull/492#pullrequestreview-497349476", "createdAt": "2020-09-28T09:43:04Z", "commit": {"oid": "67241660fdef258e3ab5d914e30e4d2dc072d283"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTo0MzowNVrOHY2J7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjoxMTo1MVrOHY6yYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNTE0OA==", "bodyText": "Set rxjs version to 6.6.3 as previously set", "url": "https://github.com/opfab/operatorfabric-core/pull/492#discussion_r495815148", "createdAt": "2020-09-28T09:43:05Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/package.json", "diffHunk": "@@ -58,9 +59,11 @@\n     \"ngrx-router\": \"^2.0.1\",\n     \"ngx-countdown\": \"^10.0.0\",\n     \"ngx-type-ahead\": \"^2.0.1\",\n-    \"rxjs\": \"^6.6.3\",\n+    \"rxjs\": \"^6.5.5\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67241660fdef258e3ab5d914e30e4d2dc072d283"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNjkyMQ==", "bodyText": "I think you do not need the lib \"save\" ?", "url": "https://github.com/opfab/operatorfabric-core/pull/492#discussion_r495816921", "createdAt": "2020-09-28T09:45:59Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/package.json", "diffHunk": "@@ -58,9 +59,11 @@\n     \"ngrx-router\": \"^2.0.1\",\n     \"ngx-countdown\": \"^10.0.0\",\n     \"ngx-type-ahead\": \"^2.0.1\",\n-    \"rxjs\": \"^6.6.3\",\n+    \"rxjs\": \"^6.5.5\",\n+    \"save\": \"^2.4.0\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67241660fdef258e3ab5d914e30e4d2dc072d283"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxOTUwMA==", "bodyText": "remove these comments", "url": "https://github.com/opfab/operatorfabric-core/pull/492#discussion_r495819500", "createdAt": "2020-09-28T09:50:12Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/monitoring/monitoring.component.html", "diffHunk": "@@ -14,6 +14,13 @@\n     </div>\n </div>\n \n+<!-- \n+<div class=\"col-md-0  padding-5\">\n+    <button type=\"button\" [appExport]=\"monitoringResultsData\" fileName=\"monitoringResults\" class=\"btn btn-success\">\n+      <em class=\"glyphicon glyphicon-export\" translate>monitoring.ExportTOExcel</em>\n+    </button>\n+  </div> -->\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67241660fdef258e3ab5d914e30e4d2dc072d283"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgyMTQ1OQ==", "bodyText": "Add copyright header", "url": "https://github.com/opfab/operatorfabric-core/pull/492#discussion_r495821459", "createdAt": "2020-09-28T09:53:38Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/services/export.service.ts", "diffHunk": "@@ -0,0 +1,33 @@\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67241660fdef258e3ab5d914e30e4d2dc072d283"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgyMjU5OA==", "bodyText": "I see no use of this method in the code ?", "url": "https://github.com/opfab/operatorfabric-core/pull/492#discussion_r495822598", "createdAt": "2020-09-28T09:55:29Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/services/export.service.ts", "diffHunk": "@@ -0,0 +1,33 @@\n+\n+import { Injectable } from '@angular/core';\n+import * as XLSX from 'xlsx';\n+import FileSaver from 'file-saver';\n+\n+const EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n+const EXCEL_EXTENSION = '.xlsx';\n+\n+@Injectable()\n+export class ExportService {\n+\n+  constructor() {\n+  }\n+\n+  static toExportFileName(excelFileName: string): string {\n+    return `${excelFileName}_export_${new Date().getTime()}.xlsx`;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67241660fdef258e3ab5d914e30e4d2dc072d283"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgyNDY5NA==", "bodyText": "Add copyright header", "url": "https://github.com/opfab/operatorfabric-core/pull/492#discussion_r495824694", "createdAt": "2020-09-28T09:59:01Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/services/export.service.spec.ts", "diffHunk": "@@ -0,0 +1,24 @@\n+import { TestBed } from '@angular/core/testing';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67241660fdef258e3ab5d914e30e4d2dc072d283"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgyNjI0OA==", "bodyText": "Active test or remove ?", "url": "https://github.com/opfab/operatorfabric-core/pull/492#discussion_r495826248", "createdAt": "2020-09-28T10:01:50Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/monitoring/components/monitoring-table/monitoring-table.component.spec.ts", "diffHunk": "@@ -44,7 +46,7 @@ describe('MonitoringTableComponent', () => {\n     fixture.detectChanges();\n   });\n \n-  it('should create', () => {\n+  xit('should create', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67241660fdef258e3ab5d914e30e4d2dc072d283"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgyNzYxNQ==", "bodyText": "Why loading this module , i do not see the use of it", "url": "https://github.com/opfab/operatorfabric-core/pull/492#discussion_r495827615", "createdAt": "2020-09-28T10:04:31Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/logging/logging.module.ts", "diffHunk": "@@ -31,13 +33,15 @@ import {LoggingPageComponent} from './components/logging-table/logging-page/logg\n         NgbModule\n         , DatetimeFilterModule\n         , MultiFilterModule\n+        , MatTableModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67241660fdef258e3ab5d914e30e4d2dc072d283"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg1MjQxNA==", "bodyText": "remove this debug log", "url": "https://github.com/opfab/operatorfabric-core/pull/492#discussion_r495852414", "createdAt": "2020-09-28T10:52:30Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/directives/export.directive.ts", "diffHunk": "@@ -0,0 +1,19 @@\n+import { Directive, HostListener, Input } from '@angular/core';\n+import { ExportService } from '@ofServices/export.service';\n+\n+@Directive({\n+  selector: '[appExport]'\n+})\n+export class ExportDirective {\n+\n+  constructor(private exportService: ExportService) { }\n+\n+  @Input('appExport') customers: any[];\n+  @Input() fileName: string;\n+\n+  @HostListener('click', ['$event']) onClick($event) {\n+    console.log('clicked: ' + $event);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67241660fdef258e3ab5d914e30e4d2dc072d283"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg1MzQ3MQ==", "bodyText": "As there is only one method call , i do not think we need to make a directive.\nJust calling the exportService in the component shoud make the job", "url": "https://github.com/opfab/operatorfabric-core/pull/492#discussion_r495853471", "createdAt": "2020-09-28T10:54:43Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/directives/export.directive.ts", "diffHunk": "@@ -0,0 +1,19 @@\n+import { Directive, HostListener, Input } from '@angular/core';\n+import { ExportService } from '@ofServices/export.service';\n+\n+@Directive({\n+  selector: '[appExport]'\n+})\n+export class ExportDirective {\n+\n+  constructor(private exportService: ExportService) { }\n+\n+  @Input('appExport') customers: any[];\n+  @Input() fileName: string;\n+\n+  @HostListener('click', ['$event']) onClick($event) {\n+    console.log('clicked: ' + $event);\n+    this.exportService.exportAsExcelFile(this.customers, this.fileName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67241660fdef258e3ab5d914e30e4d2dc072d283"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5MDYyNg==", "bodyText": "Array.prototype.forEach.call(lines, ... \nreplace with :\nlines.forEach( (line: LineOfLoggingResult) => ...", "url": "https://github.com/opfab/operatorfabric-core/pull/492#discussion_r495890626", "createdAt": "2020-09-28T12:11:06Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/logging/components/logging-table/logging-table.component.ts", "diffHunk": "@@ -7,30 +7,89 @@\n  * This file is part of the OperatorFabric project.\n  */\n \n-import {Component, Input, OnInit} from '@angular/core';\n-import {LineOfLoggingResult} from '@ofModel/line-of-logging-result.model';\n-import {TimeService} from '@ofServices/time.service';\n-import {Moment} from 'moment-timezone';\n+import { Component, Input, OnInit, OnDestroy} from '@angular/core';\n+import { LineOfLoggingResult } from '@ofModel/line-of-logging-result.model';\n+import { TimeService } from '@ofServices/time.service';\n+import { Moment } from 'moment-timezone';\n+import { CardService } from '../../../../services/card.service';\n+import { selectLoggingCount } from '@ofSelectors/logging.selectors';\n+import { Store, select } from '@ngrx/store';\n+import { Page } from '@ofModel/page.model';\n+import { map } from 'rxjs/operators';\n+import { AppState } from '@ofStore/index';\n+import { takeUntil } from 'rxjs/operators';\n+import { Subject } from 'rxjs';\n+import { TranslateService } from '@ngx-translate/core';\n \n @Component({\n     selector: 'of-logging-table',\n     templateUrl: './logging-table.component.html',\n     styleUrls: ['./logging-table.component.scss']\n })\n-export class LoggingTableComponent implements OnInit {\n+export class LoggingTableComponent implements OnInit, OnDestroy {\n \n \n     @Input() results: LineOfLoggingResult[];\n     displayedResult: string;\n+    exportLoggingData: Array<any> = [];\n+    unsubscribe$: Subject<void> = new Subject<void>();\n \n-    constructor(public timeService: TimeService) {\n+\n+    constructor(public timeService: TimeService, private cardService: CardService,\n+        private store: Store<AppState>, private translate: TranslateService) {\n     }\n \n     ngOnInit() {\n         this.displayedResult = JSON.stringify(this.results);\n+        this.initExportLoggingData();\n+\n     }\n \n     displayTime(moment: Moment) {\n         return this.timeService.formatDateTime(moment);\n     }\n+\n+    initExportLoggingData(): void {\n+        let totalElements;\n+        this.store.pipe(select(selectLoggingCount)).subscribe((result) => {\n+            totalElements = result;\n+        });\n+\n+        const filters = new Map<string, string[]>();\n+        filters.set('size', [totalElements]);\n+\n+        this.cardService.fetchLoggingResults(filters).pipe(takeUntil(this.unsubscribe$))\n+            .subscribe((page: Page<LineOfLoggingResult>) => {\n+                const lines = page.content;\n+\n+                Array.prototype.forEach.call(lines, (line: LineOfLoggingResult) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67241660fdef258e3ab5d914e30e4d2dc072d283"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5MTA0MQ==", "bodyText": "Array.prototype.forEach.call(this.result, ...\nreplace with :\nthis.result.forEach( (line: LineOfMonitoringResult) => ...", "url": "https://github.com/opfab/operatorfabric-core/pull/492#discussion_r495891041", "createdAt": "2020-09-28T12:11:51Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/monitoring/components/monitoring-table/monitoring-table.component.ts", "diffHunk": "@@ -1,25 +1,80 @@\n-import {Component, Input} from '@angular/core';\n-import {LineOfMonitoringResult} from '@ofModel/line-of-monitoring-result.model';\n-import {TimeService} from '@ofServices/time.service';\n-import {Moment} from 'moment-timezone';\n+import { Component, Input, OnInit, OnDestroy } from '@angular/core';\n+import { LineOfMonitoringResult } from '@ofModel/line-of-monitoring-result.model';\n+import { TimeService } from '@ofServices/time.service';\n+import { Moment } from 'moment-timezone';\n+import { TranslateService } from '@ngx-translate/core';\n+import { takeUntil } from 'rxjs/operators';\n+import { Subject } from 'rxjs';\n \n @Component({\n     selector: 'of-monitoring-table',\n     templateUrl: './monitoring-table.component.html',\n     styleUrls: ['./monitoring-table.component.scss']\n })\n-export class MonitoringTableComponent {\n+export class MonitoringTableComponent implements OnInit, OnDestroy {\n \n     @Input() result: LineOfMonitoringResult[];\n+    exportMonitoringData: Array<any> = [];\n+    unsubscribe$: Subject<void> = new Subject<void>();\n \n-    constructor(readonly timeService: TimeService) {\n+\n+    constructor(readonly timeService: TimeService, private translate: TranslateService) {\n     }\n \n+\n     displayTime(moment: Moment) {\n \n         if (!!moment) {\n             return this.timeService.formatDateTime(moment);\n         }\n         return '';\n     }\n+    ngOnInit() {\n+        this.initExportMonitoringData();\n+\n+    }\n+\n+    initExportMonitoringData(): void {\n+\n+        let time: string, businessPeriod: string, processName: any, title: any, summary: any, status: any;\n+\n+        Array.prototype.forEach.call(this.result, (line: LineOfMonitoringResult) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67241660fdef258e3ab5d914e30e4d2dc072d283"}, "originalPosition": 47}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67241660fdef258e3ab5d914e30e4d2dc072d283", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/67241660fdef258e3ab5d914e30e4d2dc072d283", "committedDate": "2020-09-27T00:41:37Z", "message": "[ OC-1044 ]  Add export function"}, "afterCommit": {"oid": "0ba108ca84b5bb1a1b6246b4795c8a0bfddfc003", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/0ba108ca84b5bb1a1b6246b4795c8a0bfddfc003", "committedDate": "2020-09-29T01:17:54Z", "message": "[ OC-1044 ]  Add export function"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ba108ca84b5bb1a1b6246b4795c8a0bfddfc003", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/0ba108ca84b5bb1a1b6246b4795c8a0bfddfc003", "committedDate": "2020-09-29T01:17:54Z", "message": "[ OC-1044 ]  Add export function"}, "afterCommit": {"oid": "a3c11739f7ed5a922eebe3507444ae372ddd4047", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/a3c11739f7ed5a922eebe3507444ae372ddd4047", "committedDate": "2020-09-29T14:43:42Z", "message": "[ OC-1044 ]  Add export function"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNDMxMTM5", "url": "https://github.com/opfab/operatorfabric-core/pull/492#pullrequestreview-500431139", "createdAt": "2020-10-01T14:51:28Z", "commit": {"oid": "a3c11739f7ed5a922eebe3507444ae372ddd4047"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDo1MToyOFrOHbOMEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDo1MToyOFrOHbOMEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMwNjA2NQ==", "bodyText": "Do not call ExportMonitoringData for each change  , call it just when user want to export (in the export method)", "url": "https://github.com/opfab/operatorfabric-core/pull/492#discussion_r498306065", "createdAt": "2020-10-01T14:51:28Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/logging/components/logging-table/logging-table.component.ts", "diffHunk": "@@ -7,30 +8,99 @@\n  * This file is part of the OperatorFabric project.\n  */\n \n-import {Component, Input, OnInit} from '@angular/core';\n-import {LineOfLoggingResult} from '@ofModel/line-of-logging-result.model';\n-import {TimeService} from '@ofServices/time.service';\n-import {Moment} from 'moment-timezone';\n+import { Component, Input, OnInit, OnDestroy, OnChanges } from '@angular/core';\n+import { LineOfLoggingResult } from '@ofModel/line-of-logging-result.model';\n+import { TimeService } from '@ofServices/time.service';\n+import { Moment } from 'moment-timezone';\n+import { CardService } from '../../../../services/card.service';\n+import { selectLoggingCount } from '@ofSelectors/logging.selectors';\n+import { Store, select } from '@ngrx/store';\n+import { Page } from '@ofModel/page.model';\n+import { AppState } from '@ofStore/index';\n+import { takeUntil } from 'rxjs/operators';\n+import { Subject } from 'rxjs';\n+import { TranslateService } from '@ngx-translate/core';\n+import { ExportService } from '@ofServices/export.service';\n+\n \n @Component({\n     selector: 'of-logging-table',\n     templateUrl: './logging-table.component.html',\n     styleUrls: ['./logging-table.component.scss']\n })\n-export class LoggingTableComponent implements OnInit {\n+export class LoggingTableComponent implements OnInit, OnDestroy, OnChanges {\n \n \n     @Input() results: LineOfLoggingResult[];\n     displayedResult: string;\n+    exportLoggingData: Array<any> ;\n+    unsubscribe$: Subject<void> = new Subject<void>();\n+\n+\n+    constructor(public timeService: TimeService, private cardService: CardService,\n+        private store: Store<AppState>, private translate: TranslateService, private exportService: ExportService) {\n+    }\n \n-    constructor(public timeService: TimeService) {\n+    ngOnChanges() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3c11739f7ed5a922eebe3507444ae372ddd4047"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16fe8fc5a71f54d7dcddd465e8de5e9e4fd27859", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/16fe8fc5a71f54d7dcddd465e8de5e9e4fd27859", "committedDate": "2020-10-02T18:15:07Z", "message": "[OC-1044]  Add export function\n\n[OC-1044]  Add export function"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d1fd4ac8cd19404822ef5fa1779d009be3719c6d", "author": {"user": {"login": "freddidierRTE", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/d1fd4ac8cd19404822ef5fa1779d009be3719c6d", "committedDate": "2020-10-01T15:26:57Z", "message": "[OC-1044] corrections"}, "afterCommit": {"oid": "16fe8fc5a71f54d7dcddd465e8de5e9e4fd27859", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/16fe8fc5a71f54d7dcddd465e8de5e9e4fd27859", "committedDate": "2020-10-02T18:15:07Z", "message": "[OC-1044]  Add export function\n\n[OC-1044]  Add export function"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1270, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}