{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3Njc0Nzg0", "number": 505, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOTo0NDo0NlrOEqPcOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDoyNTo0OVrOEqQXpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzI4NjMyOnYy", "diffSide": "RIGHT", "path": "tools/generic/utilities/src/main/java/org/lfenergy/operatorfabric/utilities/SecurityUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOTo0NDo0NlrOHcVaVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOTo0NDo0NlrOHcVaVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3Mjk4MA==", "bodyText": "More explicit in the name of the method\nProposal of name :   doesFileNameContainsIllegalValuesForReadAccess()", "url": "https://github.com/opfab/operatorfabric-core/pull/505#discussion_r499472980", "createdAt": "2020-10-05T09:44:46Z", "author": {"login": "freddidierRTE"}, "path": "tools/generic/utilities/src/main/java/org/lfenergy/operatorfabric/utilities/SecurityUtils.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/* Copyright (c) 2018-2020, RTE (http://www.rte-france.com)\n+ * See AUTHORS.txt\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ * SPDX-License-Identifier: MPL-2.0\n+ * This file is part of the OperatorFabric project.\n+ */\n+\n+\n+\n+package org.lfenergy.operatorfabric.utilities;\n+\n+import java.util.regex.Pattern;\n+\n+public class SecurityUtils {\n+\n+    public final static String FILENAME_ILLEGAL_VALUES = \"^\\\\\\\\|^/|^\\\\.\\\\.\\\\\\\\|^\\\\.\\\\./|^~\\\\\\\\|^~/\";\n+\n+    public static boolean checkFilename(String filename) {\n+        Pattern pattern = Pattern.compile(FILENAME_ILLEGAL_VALUES);\n+        return !pattern.matcher(filename).find();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e98f74d62720ec386f531235cab3c675a5f550f4"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzQzODQ1OnYy", "diffSide": "RIGHT", "path": "services/core/businessconfig/src/main/java/org/lfenergy/operatorfabric/businessconfig/services/ProcessesService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDoyNTo0OVrOHcW2Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozNToxNVrOHd2huA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5NjQ5NQ==", "bodyText": "You shall test locale and version parameters to not contains forbidden characters", "url": "https://github.com/opfab/operatorfabric-core/pull/505#discussion_r499496495", "createdAt": "2020-10-05T10:25:49Z", "author": {"login": "freddidierRTE"}, "path": "services/core/businessconfig/src/main/java/org/lfenergy/operatorfabric/businessconfig/services/ProcessesService.java", "diffHunk": "@@ -202,11 +203,17 @@ public Resource fetchResource(String processId, ResourceTypeEnum type, String ve\n \n         if (process == null)\n             throw new FileNotFoundException(\"Unknown version (\" + finalVersion + \") for \" + processId);\n-        validateResourceParameters(processId, type, name, finalVersion, locale);\n+\n+        if (type.isLocalized() && locale == null)\n+            throw new FileNotFoundException(\"Unable to determine resource for undefined locale\");\n+\n         String finalName;\n         if (type == ResourceTypeEnum.I18N) {\n             finalName = locale;\n         } else {\n+            if (!SecurityUtils.checkFilename(name)) {\n+                throw new FileNotFoundException(\"Filename contains forbidden characters\");\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e98f74d62720ec386f531235cab3c675a5f550f4"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2NDEyMA==", "bodyText": "Ok to check the locale. I think that the version parameter is already validated against the available process versions and if it does not match an Exception is thrown.", "url": "https://github.com/opfab/operatorfabric-core/pull/505#discussion_r501064120", "createdAt": "2020-10-07T14:35:15Z", "author": {"login": "quinarygio"}, "path": "services/core/businessconfig/src/main/java/org/lfenergy/operatorfabric/businessconfig/services/ProcessesService.java", "diffHunk": "@@ -202,11 +203,17 @@ public Resource fetchResource(String processId, ResourceTypeEnum type, String ve\n \n         if (process == null)\n             throw new FileNotFoundException(\"Unknown version (\" + finalVersion + \") for \" + processId);\n-        validateResourceParameters(processId, type, name, finalVersion, locale);\n+\n+        if (type.isLocalized() && locale == null)\n+            throw new FileNotFoundException(\"Unable to determine resource for undefined locale\");\n+\n         String finalName;\n         if (type == ResourceTypeEnum.I18N) {\n             finalName = locale;\n         } else {\n+            if (!SecurityUtils.checkFilename(name)) {\n+                throw new FileNotFoundException(\"Filename contains forbidden characters\");\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5NjQ5NQ=="}, "originalCommit": {"oid": "e98f74d62720ec386f531235cab3c675a5f550f4"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 980, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}