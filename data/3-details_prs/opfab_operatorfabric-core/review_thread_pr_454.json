{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NTM2MTA2", "number": 454, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxNzowOVrOEdLG4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjoxMDowMVrOEdMSug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDI2MTQ0OnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxNzowOVrOHILl1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToyMToxOVrOHJKreg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MDU2Nw==", "bodyText": "rename it  : \"startCountDown()\"", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478340567", "createdAt": "2020-08-27T11:17:09Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDIwMg==", "bodyText": "OK", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374202", "createdAt": "2020-08-28T15:21:19Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MDU2Nw=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDI2MzYxOnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxNzo1MVrOHILnJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToyMToyNlrOHJKrvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MDkwMg==", "bodyText": "console.log to remove", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478340902", "createdAt": "2020-08-27T11:17:51Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDI2OQ==", "bodyText": "OK", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374269", "createdAt": "2020-08-28T15:21:26Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MDkwMg=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 158}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDI2NDMyOnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxODowNVrOHILnlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToyMTozMFrOHJKr5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTAxNQ==", "bodyText": "console.log to remove", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478341015", "createdAt": "2020-08-27T11:18:05Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDMxMQ==", "bodyText": "OK", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374311", "createdAt": "2020-08-28T15:21:30Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTAxNQ=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 173}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDI2NjQ3OnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxODo0NlrOHILo3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToyMTozNVrOHJKsBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTM0Mw==", "bodyText": "console.log to remove", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478341343", "createdAt": "2020-08-27T11:18:46Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {\n+\n+        if (!this.isValidatelttd()) {\n+                console.log(`lttd not valid for :  ${this.lightCard.processInstanceId}`);\n+                this.enableLastTimeToAct = false;\n+                this.disabledActionButton();\n+        } else {\n+            console.log(`lttd valid for :  ${this.lightCard.processInstanceId}`);\n+\n+            if (this.calculateDiff() <= 0) {\n+                console.log(`countDownOver ${this.lightCard.processInstanceId}`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDM0MA==", "bodyText": "OK", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374340", "createdAt": "2020-08-28T15:21:35Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {\n+\n+        if (!this.isValidatelttd()) {\n+                console.log(`lttd not valid for :  ${this.lightCard.processInstanceId}`);\n+                this.enableLastTimeToAct = false;\n+                this.disabledActionButton();\n+        } else {\n+            console.log(`lttd valid for :  ${this.lightCard.processInstanceId}`);\n+\n+            if (this.calculateDiff() <= 0) {\n+                console.log(`countDownOver ${this.lightCard.processInstanceId}`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTM0Mw=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 187}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDI2Njk4OnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxODo1NlrOHILpKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTozMDowOFrOHJK-2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTQxNw==", "bodyText": "console.log to remove", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478341417", "createdAt": "2020-08-27T11:18:56Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {\n+\n+        if (!this.isValidatelttd()) {\n+                console.log(`lttd not valid for :  ${this.lightCard.processInstanceId}`);\n+                this.enableLastTimeToAct = false;\n+                this.disabledActionButton();\n+        } else {\n+            console.log(`lttd valid for :  ${this.lightCard.processInstanceId}`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 184}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3OTE2MQ==", "bodyText": "ok", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479379161", "createdAt": "2020-08-28T15:30:08Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {\n+\n+        if (!this.isValidatelttd()) {\n+                console.log(`lttd not valid for :  ${this.lightCard.processInstanceId}`);\n+                this.enableLastTimeToAct = false;\n+                this.disabledActionButton();\n+        } else {\n+            console.log(`lttd valid for :  ${this.lightCard.processInstanceId}`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTQxNw=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 184}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDI3MDMzOnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxOTo1OFrOHILrLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToyMTozOVrOHJKsIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTkzMw==", "bodyText": "console.log to remove", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478341933", "createdAt": "2020-08-27T11:19:58Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDM3MQ==", "bodyText": "OK", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374371", "createdAt": "2020-08-28T15:21:39Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTkzMw=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDI3NzEzOnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToyMjowN1rOHILvUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToyMTo0NVrOHJKsZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0Mjk5NQ==", "bodyText": "REname : \"startCountdownWhenNecessary()\"", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478342995", "createdAt": "2020-08-27T11:22:07Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDQzNg==", "bodyText": "OK", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374436", "createdAt": "2020-08-28T15:21:45Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0Mjk5NQ=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 177}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDI4MTI2OnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToyMzoyNFrOHILxww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToyMzoyNFrOHILxww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MzYxOQ==", "bodyText": "rename : getSecondsBeforeLttd()", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478343619", "createdAt": "2020-08-27T11:23:24Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 171}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDMwNDA2OnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTozMDoyOVrOHIL_wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzowNDoyMlrOHJODuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0NzIwMg==", "bodyText": "I do not understand what this code is doing ?\nWhy not just make : leftTimeSeconds = new Date(this.calculateDiff()).getSeconds() ;", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478347202", "createdAt": "2020-08-27T11:30:29Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDUyNg==", "bodyText": "OK", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374526", "createdAt": "2020-08-28T15:21:55Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0NzIwMg=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyOTU2MA==", "bodyText": "yes in fact it is enough just to call the method without getSeconds (), because the method getSecondsBeforeLttd (), already returns the time second.\n    const leftTimeSeconds = this.getSecondsBeforeLttd() ;", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479429560", "createdAt": "2020-08-28T17:04:22Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0NzIwMg=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 156}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDMxNTczOnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTozNDoxMFrOHIMGvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzowMjowM1rOHJN_RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0ODk4OQ==", "bodyText": "Why make a calculateDiff  , is it not sufficient to have CountdownStatus.done ?", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478348989", "createdAt": "2020-08-27T11:34:10Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {\n+\n+        if (!this.isValidatelttd()) {\n+                console.log(`lttd not valid for :  ${this.lightCard.processInstanceId}`);\n+                this.enableLastTimeToAct = false;\n+                this.disabledActionButton();\n+        } else {\n+            console.log(`lttd valid for :  ${this.lightCard.processInstanceId}`);\n+\n+            if (this.calculateDiff() <= 0) {\n+                console.log(`countDownOver ${this.lightCard.processInstanceId}`);\n+                this.stopCountDown();\n+            } else {\n+\n+                this.interval = setInterval(() => {\n+                    if (this.isTimeToStartCountDown()) {\n+                        this.startCountdownConfig();\n+                        clearInterval(this.interval);\n+                        return;\n+                    }\n+                }, 1000);\n+            }\n+        }\n+    }\n+\n+    stopCountDown() {\n+        this.stopTime = true;\n+        this.enableLastTimeToAct = true;\n+        this.disabledActionButton();\n+        this.countdown.stop();\n+    }\n+\n+    disabledActionButton() {\n+        console.log(`disabledActionButton >>>>> for process card ${this.lightCard.processInstanceId}`);\n+        this.store.dispatch(new UpdateLttd({ card: this.lightCard }));\n+    }\n+\n+\n+    handleEvent(e: CountdownEvent) {\n+\n+        if (this.calculateDiff() <= 0 && e.status === CountdownStatus.done) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyODQyMA==", "bodyText": "No, that's enough, because the CountdownComponent component starts with a letTime at 0 and automatically sends an event down at the start.", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479428420", "createdAt": "2020-08-28T17:02:03Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {\n+\n+        if (!this.isValidatelttd()) {\n+                console.log(`lttd not valid for :  ${this.lightCard.processInstanceId}`);\n+                this.enableLastTimeToAct = false;\n+                this.disabledActionButton();\n+        } else {\n+            console.log(`lttd valid for :  ${this.lightCard.processInstanceId}`);\n+\n+            if (this.calculateDiff() <= 0) {\n+                console.log(`countDownOver ${this.lightCard.processInstanceId}`);\n+                this.stopCountDown();\n+            } else {\n+\n+                this.interval = setInterval(() => {\n+                    if (this.isTimeToStartCountDown()) {\n+                        this.startCountdownConfig();\n+                        clearInterval(this.interval);\n+                        return;\n+                    }\n+                }, 1000);\n+            }\n+        }\n+    }\n+\n+    stopCountDown() {\n+        this.stopTime = true;\n+        this.enableLastTimeToAct = true;\n+        this.disabledActionButton();\n+        this.countdown.stop();\n+    }\n+\n+    disabledActionButton() {\n+        console.log(`disabledActionButton >>>>> for process card ${this.lightCard.processInstanceId}`);\n+        this.store.dispatch(new UpdateLttd({ card: this.lightCard }));\n+    }\n+\n+\n+    handleEvent(e: CountdownEvent) {\n+\n+        if (this.calculateDiff() <= 0 && e.status === CountdownStatus.done) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0ODk4OQ=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 217}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDM1MTAxOnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTo0Mzo0MlrOHIMagw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToyMjowMVrOHJKs4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM1NDA1MQ==", "bodyText": "Variables not used", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478354051", "createdAt": "2020-08-27T11:43:42Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -1,51 +1,82 @@\n /* Copyright (c) 2018-2020, RTE (http://www.rte-france.com)\n- * See AUTHORS.txt\n- * This Source Code Form is subject to the terms of the Mozilla Public\n- * License, v. 2.0. If a copy of the MPL was not distributed with this\n- * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n- * SPDX-License-Identifier: MPL-2.0\n- * This file is part of the OperatorFabric project.\n- */\n-\n-\n-\n-import {Component, Input, OnDestroy, OnInit} from '@angular/core';\n-import {LightCard} from '@ofModel/light-card.model';\n-import {Router} from '@angular/router';\n-import {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\n-import {Store} from '@ngrx/store';\n-import {AppState} from '@ofStore/index';\n-import {takeUntil} from 'rxjs/operators';\n-import {TimeService} from '@ofServices/time.service';\n-import {Subject} from 'rxjs';\n-import { ConfigService} from \"@ofServices/config.service\";\n+* See AUTHORS.txt\n+* This Source Code Form is subject to the terms of the Mozilla Public\n+* License, v. 2.0. If a copy of the MPL was not distributed with this\n+* file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+* SPDX-License-Identifier: MPL-2.0\n+* This file is part of the OperatorFabric project.\n+*/\n+\n+\n+\n+import { Component, Input, ViewChild, OnDestroy, OnInit, AfterViewInit } from '@angular/core';\n+import { LightCard } from '@ofModel/light-card.model';\n+import { Router } from '@angular/router';\n+import { selectCurrentUrl } from '@ofStore/selectors/router.selectors';\n+import { Store } from '@ngrx/store';\n+import { AppState } from '@ofStore/index';\n+import { TimeService } from '@ofServices/time.service';\n+import { Subject } from 'rxjs';\n+import { ConfigService } from '@ofServices/config.service';\n import { AppService, PageType } from '@ofServices/app.service';\n+import { CountdownComponent, CountdownConfig, CountdownEvent, CountdownStatus } from 'ngx-countdown';\n+import { UpdateLttd } from '../../../../store/actions/card.actions';\n+import { User } from '@ofModel/user.model';\n+import { Card } from '@ofModel/card.model';\n+import { UserService } from '@ofServices/user.service';\n+import { takeUntil } from 'rxjs/operators';\n+import { UserWithPerimeters } from '@ofModel/userWithPerimeters.model';\n+\n+\n \n @Component({\n     selector: 'of-card',\n     templateUrl: './card.component.html',\n     styleUrls: ['./card.component.scss']\n })\n export class CardComponent implements OnInit, OnDestroy {\n+    private counter: CountdownComponent;\n+    @ViewChild('cd', { static: false }) private countdown: CountdownComponent;\n+\n \n-    @Input() public open: boolean = false;\n+    @Input() public open = false;\n     @Input() public lightCard: LightCard;\n+    @Input() public userWithPerimeters: UserWithPerimeters;\n+\n+    card: Card;\n+    childCards: Card[];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDU2MA==", "bodyText": "OK", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374560", "createdAt": "2020-08-28T15:22:01Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -1,51 +1,82 @@\n /* Copyright (c) 2018-2020, RTE (http://www.rte-france.com)\n- * See AUTHORS.txt\n- * This Source Code Form is subject to the terms of the Mozilla Public\n- * License, v. 2.0. If a copy of the MPL was not distributed with this\n- * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n- * SPDX-License-Identifier: MPL-2.0\n- * This file is part of the OperatorFabric project.\n- */\n-\n-\n-\n-import {Component, Input, OnDestroy, OnInit} from '@angular/core';\n-import {LightCard} from '@ofModel/light-card.model';\n-import {Router} from '@angular/router';\n-import {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\n-import {Store} from '@ngrx/store';\n-import {AppState} from '@ofStore/index';\n-import {takeUntil} from 'rxjs/operators';\n-import {TimeService} from '@ofServices/time.service';\n-import {Subject} from 'rxjs';\n-import { ConfigService} from \"@ofServices/config.service\";\n+* See AUTHORS.txt\n+* This Source Code Form is subject to the terms of the Mozilla Public\n+* License, v. 2.0. If a copy of the MPL was not distributed with this\n+* file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+* SPDX-License-Identifier: MPL-2.0\n+* This file is part of the OperatorFabric project.\n+*/\n+\n+\n+\n+import { Component, Input, ViewChild, OnDestroy, OnInit, AfterViewInit } from '@angular/core';\n+import { LightCard } from '@ofModel/light-card.model';\n+import { Router } from '@angular/router';\n+import { selectCurrentUrl } from '@ofStore/selectors/router.selectors';\n+import { Store } from '@ngrx/store';\n+import { AppState } from '@ofStore/index';\n+import { TimeService } from '@ofServices/time.service';\n+import { Subject } from 'rxjs';\n+import { ConfigService } from '@ofServices/config.service';\n import { AppService, PageType } from '@ofServices/app.service';\n+import { CountdownComponent, CountdownConfig, CountdownEvent, CountdownStatus } from 'ngx-countdown';\n+import { UpdateLttd } from '../../../../store/actions/card.actions';\n+import { User } from '@ofModel/user.model';\n+import { Card } from '@ofModel/card.model';\n+import { UserService } from '@ofServices/user.service';\n+import { takeUntil } from 'rxjs/operators';\n+import { UserWithPerimeters } from '@ofModel/userWithPerimeters.model';\n+\n+\n \n @Component({\n     selector: 'of-card',\n     templateUrl: './card.component.html',\n     styleUrls: ['./card.component.scss']\n })\n export class CardComponent implements OnInit, OnDestroy {\n+    private counter: CountdownComponent;\n+    @ViewChild('cd', { static: false }) private countdown: CountdownComponent;\n+\n \n-    @Input() public open: boolean = false;\n+    @Input() public open = false;\n     @Input() public lightCard: LightCard;\n+    @Input() public userWithPerimeters: UserWithPerimeters;\n+\n+    card: Card;\n+    childCards: Card[];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM1NDA1MQ=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDM1MjYzOnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTo0NDoxMFrOHIMbdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTo0NDoxMFrOHIMbdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM1NDI5NQ==", "bodyText": "Variable endTime not used", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478354295", "createdAt": "2020-08-27T11:44:10Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -1,51 +1,82 @@\n /* Copyright (c) 2018-2020, RTE (http://www.rte-france.com)\n- * See AUTHORS.txt\n- * This Source Code Form is subject to the terms of the Mozilla Public\n- * License, v. 2.0. If a copy of the MPL was not distributed with this\n- * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n- * SPDX-License-Identifier: MPL-2.0\n- * This file is part of the OperatorFabric project.\n- */\n-\n-\n-\n-import {Component, Input, OnDestroy, OnInit} from '@angular/core';\n-import {LightCard} from '@ofModel/light-card.model';\n-import {Router} from '@angular/router';\n-import {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\n-import {Store} from '@ngrx/store';\n-import {AppState} from '@ofStore/index';\n-import {takeUntil} from 'rxjs/operators';\n-import {TimeService} from '@ofServices/time.service';\n-import {Subject} from 'rxjs';\n-import { ConfigService} from \"@ofServices/config.service\";\n+* See AUTHORS.txt\n+* This Source Code Form is subject to the terms of the Mozilla Public\n+* License, v. 2.0. If a copy of the MPL was not distributed with this\n+* file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+* SPDX-License-Identifier: MPL-2.0\n+* This file is part of the OperatorFabric project.\n+*/\n+\n+\n+\n+import { Component, Input, ViewChild, OnDestroy, OnInit, AfterViewInit } from '@angular/core';\n+import { LightCard } from '@ofModel/light-card.model';\n+import { Router } from '@angular/router';\n+import { selectCurrentUrl } from '@ofStore/selectors/router.selectors';\n+import { Store } from '@ngrx/store';\n+import { AppState } from '@ofStore/index';\n+import { TimeService } from '@ofServices/time.service';\n+import { Subject } from 'rxjs';\n+import { ConfigService } from '@ofServices/config.service';\n import { AppService, PageType } from '@ofServices/app.service';\n+import { CountdownComponent, CountdownConfig, CountdownEvent, CountdownStatus } from 'ngx-countdown';\n+import { UpdateLttd } from '../../../../store/actions/card.actions';\n+import { User } from '@ofModel/user.model';\n+import { Card } from '@ofModel/card.model';\n+import { UserService } from '@ofServices/user.service';\n+import { takeUntil } from 'rxjs/operators';\n+import { UserWithPerimeters } from '@ofModel/userWithPerimeters.model';\n+\n+\n \n @Component({\n     selector: 'of-card',\n     templateUrl: './card.component.html',\n     styleUrls: ['./card.component.scss']\n })\n export class CardComponent implements OnInit, OnDestroy {\n+    private counter: CountdownComponent;\n+    @ViewChild('cd', { static: false }) private countdown: CountdownComponent;\n+\n \n-    @Input() public open: boolean = false;\n+    @Input() public open = false;\n     @Input() public lightCard: LightCard;\n+    @Input() public userWithPerimeters: UserWithPerimeters;\n+\n+    card: Card;\n+    childCards: Card[];\n     currentPath: any;\n+    user: User;\n+\n     protected _i18nPrefix: string;\n     dateToDisplay: string;\n \n+    entityUser: string;\n+    prettyConfig: CountdownConfig;\n+    enableLastTimeToAct = false;\n+    stopTime = false;\n+    endTime: number;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDM3MDY3OnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTo0ODo1MFrOHIMlrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToyMjowNlrOHJKtHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM1NjkxMQ==", "bodyText": "Why using this global variable userWithPerimeters as it is only used in this method ?", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478356911", "createdAt": "2020-08-27T11:48:50Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NDYyMQ==", "bodyText": "OK", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479374621", "createdAt": "2020-08-28T15:22:06Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM1NjkxMQ=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDQxNjQwOnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjowMDoyN1rOHIM_6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToyMjo1NVrOHJKuwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2MzYyNg==", "bodyText": "Variable open never used", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478363626", "createdAt": "2020-08-27T12:00:27Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "diffHunk": "@@ -75,6 +76,12 @@ export class DetailComponent implements OnChanges, OnInit, OnDestroy, AfterViewC\n     @Input() user: User;\n     @Input() userWithPerimeters: UserWithPerimeters;\n     @Input() currentPath: string;\n+    @Input() public open = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NTA0MQ==", "bodyText": "it's not my code", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479375041", "createdAt": "2020-08-28T15:22:55Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "diffHunk": "@@ -75,6 +76,12 @@ export class DetailComponent implements OnChanges, OnInit, OnDestroy, AfterViewC\n     @Input() user: User;\n     @Input() userWithPerimeters: UserWithPerimeters;\n     @Input() currentPath: string;\n+    @Input() public open = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2MzYyNg=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDQ0Mzc1OnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjowNzowMFrOHINPQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1NDo1MFrOHJNwXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2NzU1NQ==", "bodyText": "To get the lttd, you do not need to access light card , you can find the value in the current card :\ncard.lttd\nso the code for this method will be just :\nreturn this.lttdExpiredIsTrue || Math.floor((card.lttd - new Date().getTime()) / 1000) <= 0", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478367555", "createdAt": "2020-08-27T12:07:00Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "diffHunk": "@@ -168,6 +181,16 @@ export class DetailComponent implements OnChanges, OnInit, OnDestroy, AfterViewC\n         this.markAsRead();\n     }\n \n+    get lttdExpired(): boolean {\n+        this.store.select(fetchLightCard(this.card.id)).pipe(take(1))\n+        .subscribe((lightCard: LightCard) => {\n+            this.lttd = lightCard.lttd;\n+        });\n+\n+        return this.lttdExpiredIsTrue || Math.floor((this.lttd - new Date().getTime()) / 1000) <= 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NTg1MQ==", "bodyText": "ok", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479375851", "createdAt": "2020-08-28T15:24:21Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "diffHunk": "@@ -168,6 +181,16 @@ export class DetailComponent implements OnChanges, OnInit, OnDestroy, AfterViewC\n         this.markAsRead();\n     }\n \n+    get lttdExpired(): boolean {\n+        this.store.select(fetchLightCard(this.card.id)).pipe(take(1))\n+        .subscribe((lightCard: LightCard) => {\n+            this.lttd = lightCard.lttd;\n+        });\n+\n+        return this.lttdExpiredIsTrue || Math.floor((this.lttd - new Date().getTime()) / 1000) <= 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2NzU1NQ=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNDYwNg==", "bodyText": "I agree to recover lttd from the card but must add the nullity test on lttd", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479424606", "createdAt": "2020-08-28T16:54:50Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "diffHunk": "@@ -168,6 +181,16 @@ export class DetailComponent implements OnChanges, OnInit, OnDestroy, AfterViewC\n         this.markAsRead();\n     }\n \n+    get lttdExpired(): boolean {\n+        this.store.select(fetchLightCard(this.card.id)).pipe(take(1))\n+        .subscribe((lightCard: LightCard) => {\n+            this.lttd = lightCard.lttd;\n+        });\n+\n+        return this.lttdExpiredIsTrue || Math.floor((this.lttd - new Date().getTime()) / 1000) <= 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2NzU1NQ=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDQ1NTYyOnYy", "diffSide": "RIGHT", "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjoxMDowMVrOHINWGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToyOToxM1rOHJK8vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2OTMwNw==", "bodyText": "Add unsubscribe when destroying the object", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478369307", "createdAt": "2020-08-27T12:10:01Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "diffHunk": "@@ -131,7 +138,13 @@ export class DetailComponent implements OnChanges, OnInit, OnDestroy, AfterViewC\n \n     ngOnInit() {\n \n-        if (this._appService.pageType === PageType.FEED) {\n+        this.lttdExpired$ = this.store.select(selectLttdExpired);\n+        this.subscription1$ = this.lttdExpired$.subscribe((result) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3ODYyMg==", "bodyText": "I factor the code, I don't need this.lttdExpired$  anymore.", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r479378622", "createdAt": "2020-08-28T15:29:13Z", "author": {"login": "taoufikbermaki"}, "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "diffHunk": "@@ -131,7 +138,13 @@ export class DetailComponent implements OnChanges, OnInit, OnDestroy, AfterViewC\n \n     ngOnInit() {\n \n-        if (this._appService.pageType === PageType.FEED) {\n+        this.lttdExpired$ = this.store.select(selectLttdExpired);\n+        this.subscription1$ = this.lttdExpired$.subscribe((result) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2OTMwNw=="}, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 964, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}