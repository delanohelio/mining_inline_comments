{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MDQwMDI0", "number": 467, "title": "[OC-1025] : complete users admin module", "bodyText": "add to release notes:\n[OC-1025]: new administration module for users, entities and groups management", "createdAt": "2020-09-10T15:58:36Z", "url": "https://github.com/opfab/operatorfabric-core/pull/467", "merged": true, "mergeCommit": {"oid": "07f91f58ce5933a5fbdfcdbc87c1c2b7c8a53244"}, "closed": true, "closedAt": "2020-10-02T08:03:52Z", "author": {"login": "bendaoudmba"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdH0Nq5AFqTQ4NjcyMjg4MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOhDr0AH2gAyNDg0MDQwMDI0OjY1NzY0MzFjMzk3OTYxODRkZjg4NmYzMzI1NjYzMTY3NmUxN2JiMjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NzIyODgw", "url": "https://github.com/opfab/operatorfabric-core/pull/467#pullrequestreview-486722880", "createdAt": "2020-09-11T11:25:43Z", "commit": {"oid": "fd5baf91ca21acbb123ba878bf2c84c8f2f9dad4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMToyNTo0M1rOHQbBeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMTo0Njo0MlrOHQbmrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk4MjAwOQ==", "bodyText": "We have in import three llib : ngx-bootstrap / bootstrap / ng_bootstrap do we nedd the three ?\nhttps://stackoverflow.com/questions/43758400/what-is-the-difference-between-ng-bootstrap-and-ngx-bootstrap", "url": "https://github.com/opfab/operatorfabric-core/pull/467#discussion_r486982009", "createdAt": "2020-09-11T11:25:43Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/package.json", "diffHunk": "@@ -38,17 +38,19 @@\n     \"@types/jwt-decode\": \"^2.2.1\",\n     \"angular-oauth2-oidc\": \"^8.0.4\",\n     \"angularx-flatpickr\": \"^6.3.1\",\n-    \"bootstrap\": \"^4.5.0\",\n+    \"bootstrap\": \"^4.5.2\",\n     \"core-js\": \"^2.6.3\",\n     \"flatpickr\": \"^4.6.3\",\n     \"guid-typescript\": \"^1.0.9\",\n     \"handlebars\": \"^4.7.6\",\n     \"jwt-decode\": \"^2.2.0\",\n-    \"lodash\": \"^4.17.15\",\n+    \"lodash\": \"^4.17.20\",\n     \"moment\": \"^2.26.0\",\n     \"moment-timezone\": \"^0.5.31\",\n     \"ng-event-source\": \"^1.0.14\",\n+    \"ng2-table\": \"^1.3.2\",\n     \"ngrx-router\": \"^2.0.1\",\n+    \"ngx-bootstrap\": \"^5.6.1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd5baf91ca21acbb123ba878bf2c84c8f2f9dad4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk4NDQyNQ==", "bodyText": "Do we the rooting module as we have no specific root ?", "url": "https://github.com/opfab/operatorfabric-core/pull/467#discussion_r486984425", "createdAt": "2020-09-11T11:30:56Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/admin/admin-rooting.module.ts", "diffHunk": "@@ -0,0 +1,44 @@\n+/* Copyright (c) 2018-2020, RTE (http://www.rte-france.com)\n+ * See AUTHORS.txt\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ * SPDX-License-Identifier: MPL-2.0\n+ * This file is part of the OperatorFabric project.\n+ */\n+\n+\n+\n+import {NgModule} from '@angular/core';\n+import {RouterModule, Routes} from '@angular/router';\n+import { AdminComponent } from './admin.component';\n+import { OfUsersTableComponent } from './components/ngtable/users/ofuserstable.component';\n+import { OfGroupsTableComponent } from './components/ngtable/groups/of-groups-table/of-groups-table.component';\n+import { OfEntitiesTableComponent } from './components/ngtable/entities/of-entities-table/of-entities-table.component';\n+\n+const routes: Routes = [\n+    {\n+        path: '**',\n+        component: AdminComponent\n+          //  ,children: [\n+          //    {\n+          //               path: 'users',\n+          //               component: AdminComponent,\n+          //    },\n+          //    {\n+          //               path: 'groups',\n+          //               component: AdminComponent,\n+          //    },\n+          //   // {\n+          //   //             path: 'entities',\n+          //   //             component: AdminComponent,\n+          //   //  }\n+        // ]\n+    }\n+];\n+\n+@NgModule({\n+    imports: [RouterModule.forChild(routes)],\n+    exports: [RouterModule]\n+})\n+export class AdminRoutingModule { }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd5baf91ca21acbb123ba878bf2c84c8f2f9dad4"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk4NjkzMw==", "bodyText": "Remove this unused variable", "url": "https://github.com/opfab/operatorfabric-core/pull/467#discussion_r486986933", "createdAt": "2020-09-11T11:36:32Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/services/authentication/authentication.service.ts", "diffHunk": "@@ -61,6 +63,7 @@ export class AuthenticationService {\n     private mode: string;\n     private authModeHandler: AuthenticationModeHandler;\n     private implicitConf = implicitAuthenticationConfigFallback;\n+    private authenticatedUser: User;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd5baf91ca21acbb123ba878bf2c84c8f2f9dad4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk4ODU1OQ==", "bodyText": "groupService unused , remove it", "url": "https://github.com/opfab/operatorfabric-core/pull/467#discussion_r486988559", "createdAt": "2020-09-11T11:40:17Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/services/user.service.ts", "diffHunk": "@@ -8,59 +8,87 @@\n  */\n \n \n-import {Injectable} from '@angular/core';\n-import {environment} from '@env/environment';\n-import {Observable,Subject} from 'rxjs';\n-import {Entity, User} from '@ofModel/user.model';\n-import {UserWithPerimeters} from '@ofModel/userWithPerimeters.model';\n-import {HttpClient} from '@angular/common/http';\n-import {takeUntil} from 'rxjs/operators';\n+import { Injectable } from '@angular/core';\n+import { environment } from '@env/environment';\n+import { Observable, Subject } from 'rxjs';\n+import { Entity, User } from '@ofModel/user.model';\n+import { UserWithPerimeters } from '@ofModel/userWithPerimeters.model';\n+import { HttpClient } from '@angular/common/http';\n+import { takeUntil } from 'rxjs/operators';\n+import { CrudService } from \"./crud-service\";\n+import { GroupsService } from './groups.service';\n \n @Injectable()\n-export class UserService {\n-\n-    readonly userUrl: string;\n-    private _userWithPerimeters: UserWithPerimeters;\n-    private ngUnsubscribe = new Subject<void>();\n-\n-    /**\n-     * @constructor\n-     * @param httpClient - Angular build-in\n-     */\n-    constructor(private httpClient: HttpClient) {\n-        this.userUrl = `${environment.urls.users}`;\n-    }\n-\n-    askUserApplicationRegistered(user: string): Observable<User> {\n-        return this.httpClient.get<User>(`${this.userUrl}/users/${user}`);\n-    }\n-\n-    askCreateUser(userData: User): Observable<User> {\n-        return this.httpClient.put<User>(`${this.userUrl}/users/${userData.login}`, userData);\n-    }\n-\n-    currentUserWithPerimeters(): Observable<UserWithPerimeters> {\n-        return this.httpClient.get<UserWithPerimeters>(`${this.userUrl}/CurrentUserWithPerimeters`);\n-    }\n-\n-    queryAllEntities(): Observable<Entity[]> {\n-        const url = `${this.userUrl}/entities`;\n-        return this.httpClient.get<Entity[]>(url);\n-\n-    }\n-    public loadUserWithPerimetersData(): void {\n-        this.currentUserWithPerimeters()\n-            .pipe(takeUntil(this.ngUnsubscribe))\n-            .subscribe(\n-                (userWithPerimeters) => {\n-                    if (userWithPerimeters) {\n-                        this._userWithPerimeters = userWithPerimeters;\n-                    }\n-                }, (error) => console.error(new Date().toISOString(), 'an error occurred', error)\n-            );\n-    }\n-\n-    public getCurrentUserWithPerimeters(): UserWithPerimeters {\n-        return this._userWithPerimeters;\n-    }\n+export class UserService implements CrudService {\n+  readonly userUrl: string;\n+  private _userWithPerimeters: UserWithPerimeters;\n+  private ngUnsubscribe = new Subject<void>();\n+\n+  /**\n+   * @constructor\n+   * @param httpClient - Angular build-in\n+   */\n+  constructor(private httpClient: HttpClient, private groupsService: GroupsService) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd5baf91ca21acbb123ba878bf2c84c8f2f9dad4"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MTUzNA==", "bodyText": "Would it be possible to use rxjs observable instead of promise to be coherent with the rest of the code ?", "url": "https://github.com/opfab/operatorfabric-core/pull/467#discussion_r486991534", "createdAt": "2020-09-11T11:46:42Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/admin/services/login-validator.service.ts", "diffHunk": "@@ -0,0 +1,26 @@\n+import { Injectable } from '@angular/core';\n+import { UserService } from '@ofServices/user.service';\n+import { AbstractControl, ValidationErrors } from '@angular/forms';\n+import { User } from '@ofModel/user.model';\n+\n+@Injectable({\n+  providedIn: 'root'\n+})\n+export class LoginValidatorService {\n+\n+  constructor(\n+    private userService: UserService) {\n+  }\n+\n+  isLoginAvailable(control: AbstractControl): Promise<ValidationErrors> | null {\n+    return new Promise((resolve, reject) => {\n+      this.userService.getAll().subscribe((response) => {\n+        if (response.filter(user => user.login === control.value).length > 0) {\n+          resolve({ shouldbeUnique: true });\n+        } else {\n+          resolve(null);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd5baf91ca21acbb123ba878bf2c84c8f2f9dad4"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fd5baf91ca21acbb123ba878bf2c84c8f2f9dad4", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/fd5baf91ca21acbb123ba878bf2c84c8f2f9dad4", "committedDate": "2020-09-10T14:42:08Z", "message": "[OC-1025] : complete users admin module"}, "afterCommit": {"oid": "60c2621d2056476f510a3dac94d42979617a1ad4", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/60c2621d2056476f510a3dac94d42979617a1ad4", "committedDate": "2020-09-16T20:52:08Z", "message": "[OC-1025] : complete admin module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "60c2621d2056476f510a3dac94d42979617a1ad4", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/60c2621d2056476f510a3dac94d42979617a1ad4", "committedDate": "2020-09-16T20:52:08Z", "message": "[OC-1025] : complete admin module"}, "afterCommit": {"oid": "6d79c2918cd71907e0e5ce5b419d5d67baad734d", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/6d79c2918cd71907e0e5ce5b419d5d67baad734d", "committedDate": "2020-09-16T20:54:13Z", "message": "[OC-1025] : complete users admin module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9bae4747a32e4eb2b092b62180205a8981297f95", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/9bae4747a32e4eb2b092b62180205a8981297f95", "committedDate": "2020-09-18T12:32:10Z", "message": "[OC-1025] : complete admin module"}, "afterCommit": {"oid": "0865c7e164572d2fbe571e7cc767f6fac09787bf", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/0865c7e164572d2fbe571e7cc767f6fac09787bf", "committedDate": "2020-09-18T12:34:25Z", "message": "[OC-1025] : complete users admin module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "29c91c46abd07de60a6edde5210d68be4faf96bd", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/29c91c46abd07de60a6edde5210d68be4faf96bd", "committedDate": "2020-09-18T12:43:44Z", "message": "[OC-1025] : complete admin module"}, "afterCommit": {"oid": "96a220bc71b1746d3aa32b1bed1777e49654f26c", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/96a220bc71b1746d3aa32b1bed1777e49654f26c", "committedDate": "2020-09-18T12:44:13Z", "message": "[OC-1025] : complete users admin module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96a220bc71b1746d3aa32b1bed1777e49654f26c", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/96a220bc71b1746d3aa32b1bed1777e49654f26c", "committedDate": "2020-09-18T12:44:13Z", "message": "[OC-1025] : complete users admin module"}, "afterCommit": {"oid": "f90f2223680a80eb204ec8210a69242638c165ac", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/f90f2223680a80eb204ec8210a69242638c165ac", "committedDate": "2020-09-21T12:16:47Z", "message": "[OC-1025] : complete users admin module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f90f2223680a80eb204ec8210a69242638c165ac", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/f90f2223680a80eb204ec8210a69242638c165ac", "committedDate": "2020-09-21T12:16:47Z", "message": "[OC-1025] : complete users admin module"}, "afterCommit": {"oid": "6858b852cb952031cc9dcd0e647ae1b102489944", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/6858b852cb952031cc9dcd0e647ae1b102489944", "committedDate": "2020-09-21T13:25:25Z", "message": "[OC-1025] : complete users admin module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6858b852cb952031cc9dcd0e647ae1b102489944", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/6858b852cb952031cc9dcd0e647ae1b102489944", "committedDate": "2020-09-21T13:25:25Z", "message": "[OC-1025] : complete users admin module"}, "afterCommit": {"oid": "972c3167f2114afc2a9a5a8f00546a6e2222e5ba", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/972c3167f2114afc2a9a5a8f00546a6e2222e5ba", "committedDate": "2020-09-28T15:48:21Z", "message": "[OC-1025] : complete users admin module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "972c3167f2114afc2a9a5a8f00546a6e2222e5ba", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/972c3167f2114afc2a9a5a8f00546a6e2222e5ba", "committedDate": "2020-09-28T15:48:21Z", "message": "[OC-1025] : complete users admin module"}, "afterCommit": {"oid": "090c20b0ea4a1b58f46ee7c298758f1720d44ce6", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/090c20b0ea4a1b58f46ee7c298758f1720d44ce6", "committedDate": "2020-09-28T16:18:56Z", "message": "[OC-1025] : complete users admin module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "090c20b0ea4a1b58f46ee7c298758f1720d44ce6", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/090c20b0ea4a1b58f46ee7c298758f1720d44ce6", "committedDate": "2020-09-28T16:18:56Z", "message": "[OC-1025] : complete users admin module"}, "afterCommit": {"oid": "eb021f9baab5146d5fa0d4b35f215e7e44b1d30c", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/eb021f9baab5146d5fa0d4b35f215e7e44b1d30c", "committedDate": "2020-09-29T08:36:43Z", "message": "[OC-1025] : complete users admin module"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NDE5Mzcy", "url": "https://github.com/opfab/operatorfabric-core/pull/467#pullrequestreview-498419372", "createdAt": "2020-09-29T12:35:37Z", "commit": {"oid": "eb021f9baab5146d5fa0d4b35f215e7e44b1d30c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjozNTozN1rOHZq7rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzowMjo0OVrOHZsCUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3OTg1NA==", "bodyText": "Abandonner et pas Abondonner", "url": "https://github.com/opfab/operatorfabric-core/pull/467#discussion_r496679854", "createdAt": "2020-09-29T12:35:37Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/assets/i18n/fr.json", "diffHunk": "@@ -184,5 +185,53 @@\n       \"ack\": \"Acquitter et fermer\",\n       \"unack\": \"Annuler l'acquitement\"\n     }\n+  },\n+  \"admin\": {\n+    \"input\": {\n+      \"user\": {\n+        \"login\": \"Identifiant\",\n+        \"lastname\": \"Nom\",\n+        \"firstname\": \"Pr\u00e9nom\",\n+        \"groups\": \"Groupes\",\n+        \"entities\": \"Entiti\u00e9s\",\n+        \"add\": \"Ajouter un nouveau utilisateur\",\n+        \"edit\": \"Editer\",\n+        \"delete\": \"Supprimer\",\n+        \"save\": \"Sauvegarder les changements\",\n+        \"close\": \"Fermer\",\n+        \"cancel\": \"Abondonner\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb021f9baab5146d5fa0d4b35f215e7e44b1d30c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY4NDY5OA==", "bodyText": "Why adding this dependence compat-cat , i do not see the use in the code . I remove it and it has no impact", "url": "https://github.com/opfab/operatorfabric-core/pull/467#discussion_r496684698", "createdAt": "2020-09-29T12:42:45Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/package.json", "diffHunk": "@@ -94,6 +96,7 @@\n     \"ts-mockito\": \"^2.6.1\",\n     \"ts-node\": \"~7.0.0\",\n     \"tslint\": \"~5.11.0\",\n-    \"typescript\": \"~3.5.3\"\n+    \"typescript\": \"~3.5.3\",\n+    \"@babel/compat-data\": \"~7.8.0\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb021f9baab5146d5fa0d4b35f215e7e44b1d30c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY4OTEzMQ==", "bodyText": "! this.configService.getConfigValue('admin.hidden') and not  this.configService.getConfigValue('admin.hidden')\nOtherwise the admin menu is showed when admin.hidden=true\n---> Add this parameter in documentation : src/docs/asciidoc/deployment/configuration/web-ui_configuration.adoc\nin chapter ui properties", "url": "https://github.com/opfab/operatorfabric-core/pull/467#discussion_r496689131", "createdAt": "2020-09-29T12:49:46Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/components/navbar/navbar.component.ts", "diffHunk": "@@ -8,151 +8,157 @@\n  */\n \n \n-import {Component, OnInit} from '@angular/core';\n-import {navigationRoutes} from '../../app-routing.module';\n-import {Store} from '@ngrx/store';\n-import {TryToLogOut} from '@ofActions/authentication.actions';\n-import {AppState} from '@ofStore/index';\n-import {selectCurrentUrl} from '@ofSelectors/router.selectors';\n-import {LoadMenu} from '@ofActions/menu.actions';\n-import {selectMenuStateMenu} from '@ofSelectors/menu.selectors';\n-import {BehaviorSubject, Observable} from 'rxjs';\n-import {Menu} from '@ofModel/processes.model';\n-import {tap} from 'rxjs/operators';\n+import { Component, OnInit } from '@angular/core';\n+import { navigationRoutes } from '../../app-routing.module';\n+import { Store } from '@ngrx/store';\n+import { TryToLogOut } from '@ofActions/authentication.actions';\n+import { AppState } from '@ofStore/index';\n+import { selectCurrentUrl } from '@ofSelectors/router.selectors';\n+import { LoadMenu } from '@ofActions/menu.actions';\n+import { selectMenuStateMenu } from '@ofSelectors/menu.selectors';\n+import { BehaviorSubject, Observable } from 'rxjs';\n+import { Menu } from '@ofModel/processes.model';\n+import { tap } from 'rxjs/operators';\n import * as _ from 'lodash';\n-import {GlobalStyleService} from '@ofServices/global-style.service';\n-import {Route} from '@angular/router';\n-import {ConfigService} from '@ofServices/config.service';\n-import {QueryAllProcesses} from '@ofActions/process.action';\n-import {QueryAllEntities} from \"@ofActions/user.actions\";\n+import { GlobalStyleService } from '@ofServices/global-style.service';\n+import { Route } from '@angular/router';\n+import { ConfigService } from '@ofServices/config.service';\n+import { QueryAllProcesses } from '@ofActions/process.action';\n+import { UserService } from '@ofServices/user.service';\n+import { QueryAllEntities } from '@ofActions/user.actions';\n \n @Component({\n-    selector: 'of-navbar',\n-    templateUrl: './navbar.component.html',\n-    styleUrls: ['./navbar.component.scss']\n+  selector: 'of-navbar',\n+  templateUrl: './navbar.component.html',\n+  styleUrls: ['./navbar.component.scss']\n })\n export class NavbarComponent implements OnInit {\n-    private static nightMode: BehaviorSubject<boolean>;\n-\n-    navbarCollapsed = true;\n-    navigationRoutes: Route[];\n-    currentPath: string[];\n-    private _businessconfigMenus: Observable<Menu[]>;\n-    expandedMenu: boolean[] = [];\n-    expandedUserMenu = false;\n-\n-    customLogo: string;\n-    height: number;\n-    width: number;\n-    limitSize: boolean;\n-\n-    nightDayMode = false;\n+  private static nightMode: BehaviorSubject<boolean>;\n+\n+  navbarCollapsed = true;\n+  navigationRoutes: Route[];\n+  currentPath: string[];\n+  private _businessconfigMenus: Observable<Menu[]>;\n+  expandedMenu: boolean[] = [];\n+  expandedUserMenu = false;\n+\n+  customLogo: string;\n+  height: number;\n+  width: number;\n+  limitSize: boolean;\n+  displayAdmin: boolean;\n+  nightDayMode = false;\n+\n+  constructor(private store: Store<AppState>, private globalStyleService: GlobalStyleService, private configService: ConfigService\n+    , private userService: UserService) {\n+\n+  }\n+\n+  ngOnInit() {\n+\n+    this.store.select(selectCurrentUrl).subscribe(url => {\n+      if (url) {\n+        this.currentPath = url.split('/');\n+      }\n+    });\n+    this._businessconfigMenus = this.store.select(selectMenuStateMenu)\n+      .pipe(tap(menus => {\n+        this.expandedMenu = new Array<boolean>(menus.length);\n+        _.fill(this.expandedMenu, false);\n+      }));\n+    this.store.dispatch(new LoadMenu());\n+    this.store.dispatch(new QueryAllProcesses());\n+    this.store.dispatch(new QueryAllEntities());\n+\n+\n+    const logo = this.configService.getConfigValue('logo.base64');\n+    if (!!logo) {\n+      this.customLogo = `data:image/svg+xml;base64,${logo}`;\n+    }\n+    const logo_height = this.configService.getConfigValue('logo.height');\n+    if (!!logo_height) {\n+      this.height = logo_height;\n+    }\n \n-    constructor(private store: Store<AppState>, private globalStyleService: GlobalStyleService, private  configService: ConfigService) {\n+    const logo_width = this.configService.getConfigValue('logo.width');\n+    if (!!logo_width) {\n+      this.width = logo_width;\n     }\n \n-    ngOnInit() {\n-        this.store.select(selectCurrentUrl).subscribe(url => {\n-            if (url) {\n-                this.currentPath = url.split('/');\n-            }\n-        });\n-        this._businessconfigMenus = this.store.select(selectMenuStateMenu)\n-            .pipe(tap(menus => {\n-                this.expandedMenu = new Array<boolean>(menus.length);\n-                _.fill(this.expandedMenu, false);\n-            }));\n-        this.store.dispatch(new LoadMenu());\n-        this.store.dispatch(new QueryAllProcesses());\n-        this.store.dispatch(new QueryAllEntities());\n-\n-\n-        const logo = this.configService.getConfigValue('logo.base64');\n-        if (!!logo) {\n-            this.customLogo = `data:image/svg+xml;base64,${logo}`;\n-        }\n-        const logo_height = this.configService.getConfigValue('logo.height');\n-        if (!!logo_height) {\n-            this.height = logo_height;\n-        }\n+    const logo_limitSize = this.configService.getConfigValue('logo.limitSize');\n+    this.limitSize = (logo_limitSize === true);\n \n-        const logo_width = this.configService.getConfigValue('logo.width');\n-        if (!!logo_width) {\n-            this.width = logo_width;\n-        }\n \n-        const logo_limitSize = this.configService.getConfigValue('logo.limitSize');\n-        this.limitSize = (logo_limitSize === true);\n-\n-\n-        const settings = this.configService.getConfigValue('settings');\n-        if (settings) {\n-            if (settings.nightDayMode) {\n-                this.nightDayMode = <boolean>settings.nightDayMode;\n-            }\n-            if (!this.nightDayMode) {\n-                if (settings.styleWhenNightDayModeDesactivated) {\n-                    this.globalStyleService.setStyle(settings.styleWhenNightDayModeDesactivated);\n-                }\n-            } else {\n-                this.loadNightModeFromLocalStorage();\n-            }\n+    const settings = this.configService.getConfigValue('settings');\n+    if (settings) {\n+      if (settings.nightDayMode) {\n+        this.nightDayMode = <boolean>settings.nightDayMode;\n+      }\n+      if (!this.nightDayMode) {\n+        if (settings.styleWhenNightDayModeDesactivated) {\n+          this.globalStyleService.setStyle(settings.styleWhenNightDayModeDesactivated);\n         }\n-\n-        const hiddenMenus = this.configService.getConfigValue('navbar.hidden', []);\n-        this.navigationRoutes = navigationRoutes.filter(route => !hiddenMenus.includes(route.path));\n+      } else {\n+        this.loadNightModeFromLocalStorage();\n+      }\n     }\n \n-    logOut() {\n-        this.store.dispatch(new TryToLogOut());\n-    }\n+    const hiddenMenus = this.configService.getConfigValue('navbar.hidden', []);\n+    this.navigationRoutes = navigationRoutes.filter(route => !hiddenMenus.includes(route.path));\n+    this.displayAdmin = this.userService.isCurrentUserAdmin() && this.configService.getConfigValue('admin.hidden');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb021f9baab5146d5fa0d4b35f215e7e44b1d30c"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY5NjIwMQ==", "bodyText": "remove this log", "url": "https://github.com/opfab/operatorfabric-core/pull/467#discussion_r496696201", "createdAt": "2020-09-29T13:00:10Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/admin/components/ngtable/users/ofuserstable.component.ts", "diffHunk": "@@ -0,0 +1,148 @@\n+import { Component, OnInit } from '@angular/core';\n+import { UserService } from '@ofServices/user.service';\n+import { EditUsermodalComponent } from '../../editmodal/users/editusermodal.component';\n+import { DataTableShareService } from '../../../services/data.service';\n+import { OfTableComponent } from '../oftable/oftable.component';\n+import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n+import { TranslateService } from '@ngx-translate/core';\n+import { ConfirmationDialogService } from 'app/modules/admin/services/confirmation-dialog.service';\n+import { AppState } from '@ofStore/index';\n+import { Store } from '@ngrx/store';\n+\n+\n+@Component({\n+  selector: 'of-users-table',\n+  templateUrl: './ofuserstable.component.html'\n+})\n+export class OfUsersTableComponent extends OfTableComponent implements OnInit {\n+\n+  addLabel: string;\n+  lineLabel: string;\n+  filterAll: any;\n+\n+  constructor(\n+    protected crudService: UserService,\n+    protected modalService: NgbModal,\n+    protected dataService: DataTableShareService,\n+    protected translate: TranslateService,\n+    private confirmationDialogService: ConfirmationDialogService,\n+    protected store: Store<AppState>\n+  ) {\n+\n+    super(modalService, dataService, store);\n+    this.crudService = crudService;\n+    this.config.sorting = { columns: this.columns };\n+    this.getLocale().subscribe(locale => {\n+      console.log(locale);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb021f9baab5146d5fa0d4b35f215e7e44b1d30c"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY5NjMwNg==", "bodyText": "remove this log", "url": "https://github.com/opfab/operatorfabric-core/pull/467#discussion_r496696306", "createdAt": "2020-09-29T13:00:21Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/admin/components/ngtable/users/ofuserstable.component.ts", "diffHunk": "@@ -0,0 +1,148 @@\n+import { Component, OnInit } from '@angular/core';\n+import { UserService } from '@ofServices/user.service';\n+import { EditUsermodalComponent } from '../../editmodal/users/editusermodal.component';\n+import { DataTableShareService } from '../../../services/data.service';\n+import { OfTableComponent } from '../oftable/oftable.component';\n+import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n+import { TranslateService } from '@ngx-translate/core';\n+import { ConfirmationDialogService } from 'app/modules/admin/services/confirmation-dialog.service';\n+import { AppState } from '@ofStore/index';\n+import { Store } from '@ngrx/store';\n+\n+\n+@Component({\n+  selector: 'of-users-table',\n+  templateUrl: './ofuserstable.component.html'\n+})\n+export class OfUsersTableComponent extends OfTableComponent implements OnInit {\n+\n+  addLabel: string;\n+  lineLabel: string;\n+  filterAll: any;\n+\n+  constructor(\n+    protected crudService: UserService,\n+    protected modalService: NgbModal,\n+    protected dataService: DataTableShareService,\n+    protected translate: TranslateService,\n+    private confirmationDialogService: ConfirmationDialogService,\n+    protected store: Store<AppState>\n+  ) {\n+\n+    super(modalService, dataService, store);\n+    this.crudService = crudService;\n+    this.config.sorting = { columns: this.columns };\n+    this.getLocale().subscribe(locale => {\n+      console.log(locale);\n+      this.translate.use(locale);\n+      this.translate.get(['admin.input.user.login', 'admin.input.user.firstname', 'admin.input.user.lastname',\n+        'admin.input.user.groups', 'admin.input.user.entities', 'admin.input.user.edit', 'admin.input.user.delete',\n+        'admin.pagination.firstText', 'admin.pagination.lastText', 'admin.pagination.nextText', 'admin.pagination.prevText'\n+        , 'admin.input.user.add', 'admin.input.lines', 'admin.input.user.filter' , 'admin.input.user.filterAll'])\n+        .subscribe(translations => {\n+          console.log(this.translate.currentLang);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb021f9baab5146d5fa0d4b35f215e7e44b1d30c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY5NzI2MA==", "bodyText": "Remove this log", "url": "https://github.com/opfab/operatorfabric-core/pull/467#discussion_r496697260", "createdAt": "2020-09-29T13:01:48Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/services/user.service.ts", "diffHunk": "@@ -75,12 +99,23 @@ export class UserService implements CrudService {\n         (userWithPerimeters) => {\n           if (userWithPerimeters) {\n             this._userWithPerimeters = userWithPerimeters;\n+            console.log(this._userWithPerimeters);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb021f9baab5146d5fa0d4b35f215e7e44b1d30c"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY5NzkzNg==", "bodyText": "add error information in this log", "url": "https://github.com/opfab/operatorfabric-core/pull/467#discussion_r496697936", "createdAt": "2020-09-29T13:02:49Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/admin/components/ngtable/users/ofuserstable.component.ts", "diffHunk": "@@ -0,0 +1,148 @@\n+import { Component, OnInit } from '@angular/core';\n+import { UserService } from '@ofServices/user.service';\n+import { EditUsermodalComponent } from '../../editmodal/users/editusermodal.component';\n+import { DataTableShareService } from '../../../services/data.service';\n+import { OfTableComponent } from '../oftable/oftable.component';\n+import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n+import { TranslateService } from '@ngx-translate/core';\n+import { ConfirmationDialogService } from 'app/modules/admin/services/confirmation-dialog.service';\n+import { AppState } from '@ofStore/index';\n+import { Store } from '@ngrx/store';\n+\n+\n+@Component({\n+  selector: 'of-users-table',\n+  templateUrl: './ofuserstable.component.html'\n+})\n+export class OfUsersTableComponent extends OfTableComponent implements OnInit {\n+\n+  addLabel: string;\n+  lineLabel: string;\n+  filterAll: any;\n+\n+  constructor(\n+    protected crudService: UserService,\n+    protected modalService: NgbModal,\n+    protected dataService: DataTableShareService,\n+    protected translate: TranslateService,\n+    private confirmationDialogService: ConfirmationDialogService,\n+    protected store: Store<AppState>\n+  ) {\n+\n+    super(modalService, dataService, store);\n+    this.crudService = crudService;\n+    this.config.sorting = { columns: this.columns };\n+    this.getLocale().subscribe(locale => {\n+      console.log(locale);\n+      this.translate.use(locale);\n+      this.translate.get(['admin.input.user.login', 'admin.input.user.firstname', 'admin.input.user.lastname',\n+        'admin.input.user.groups', 'admin.input.user.entities', 'admin.input.user.edit', 'admin.input.user.delete',\n+        'admin.pagination.firstText', 'admin.pagination.lastText', 'admin.pagination.nextText', 'admin.pagination.prevText'\n+        , 'admin.input.user.add', 'admin.input.lines', 'admin.input.user.filter' , 'admin.input.user.filterAll'])\n+        .subscribe(translations => {\n+          console.log(this.translate.currentLang);\n+          this.columns = [\n+            {\n+              title: translations['admin.input.user.login'],\n+              name: 'login',\n+              filtering: {\n+                filterString: '', placeholder: translations['admin.input.user.filter'] +\n+                  translations['admin.input.user.login']\n+              },\n+            },\n+            {\n+              title: translations['admin.input.user.firstname'],\n+              name: 'firstName',\n+              filtering: {\n+                filterString: '', placeholder: translations['admin.input.user.filter'] +\n+                  translations['admin.input.user.firstname']\n+              },\n+            },\n+            {\n+              title: translations['admin.input.user.lastname'],\n+              name: 'lastName',\n+              filtering: {\n+                filterString: '', placeholder: translations['admin.input.user.filter'] +\n+                  translations['admin.input.user.lastname']\n+              },\n+            },\n+            {\n+              title: translations['admin.input.user.groups'],\n+              name: 'groups',\n+              filtering: {\n+                filterString: '', placeholder: translations['admin.input.user.filter'] +\n+                  translations['admin.input.user.groups']\n+              },\n+            },\n+            {\n+              title: translations['admin.input.user.entities'],\n+              name: 'entities',\n+              filtering: {\n+                filterString: '', placeholder: translations['admin.input.user.filter'] +\n+                  translations['admin.input.user.entities']\n+              },\n+            },\n+            {\n+              title: translations['admin.input.user.edit'],\n+              name: 'edit'\n+            },\n+            {\n+              title: translations['admin.input.user.delete'],\n+              name: 'delete'\n+            }\n+          ];\n+          this.firstText = translations['admin.pagination.firstText'];\n+          this.lastText = translations['admin.pagination.lastText'];\n+          this.nextText = translations['admin.pagination.nextText'];\n+          this.prevText = translations['admin.pagination.prevText'];\n+          this.addLabel = translations['admin.input.user.add'];\n+          this.lineLabel = translations['admin.input.lines'];\n+          this.filterAll = translations['admin.input.user.filterAll'];\n+\n+        });\n+    });\n+  }\n+\n+\n+  onCellClick(data: any): any {\n+    const column = data.column;\n+    if (column === 'edit') {\n+      const modalRef = this.modalService.open(EditUsermodalComponent);\n+      modalRef.componentInstance.user = data['row'];\n+    }\n+    if (column === 'delete') {\n+      this.openDeleteConfirmationDialog(data.row);\n+    }\n+  }\n+\n+  openDeleteConfirmationDialog(row: any) {\n+    this.confirmationDialogService.confirm(\n+      this.translate.instant('admin.input.user.confirm'),\n+      this.translate.instant('admin.input.delete') + ' ' + row.login + '?',\n+      'OK',\n+      this.translate.instant('admin.input.user.cancel')\n+    ).then((confirmed) => {\n+      if (confirmed) {\n+        this.deleteItem(row);\n+      }\n+    }).catch(() => console.log('error)'));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb021f9baab5146d5fa0d4b35f215e7e44b1d30c"}, "originalPosition": 128}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb021f9baab5146d5fa0d4b35f215e7e44b1d30c", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/eb021f9baab5146d5fa0d4b35f215e7e44b1d30c", "committedDate": "2020-09-29T08:36:43Z", "message": "[OC-1025] : complete users admin module"}, "afterCommit": {"oid": "94ae36379412dd4bb8e061aa497c845286001f6c", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/94ae36379412dd4bb8e061aa497c845286001f6c", "committedDate": "2020-09-30T07:55:07Z", "message": "[OC-1025] : complete users admin module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94ae36379412dd4bb8e061aa497c845286001f6c", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/94ae36379412dd4bb8e061aa497c845286001f6c", "committedDate": "2020-09-30T07:55:07Z", "message": "[OC-1025] : complete users admin module"}, "afterCommit": {"oid": "704158c59cd40fbd5db1e7e72e3a0297fac1a766", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/704158c59cd40fbd5db1e7e72e3a0297fac1a766", "committedDate": "2020-09-30T08:36:25Z", "message": "[OC-1025] : complete users admin module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2484c71554c899a3c9e70f2935011c382fe9390e", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/2484c71554c899a3c9e70f2935011c382fe9390e", "committedDate": "2020-10-01T15:20:45Z", "message": "[OC-1025] : complete users admin module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "704158c59cd40fbd5db1e7e72e3a0297fac1a766", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/704158c59cd40fbd5db1e7e72e3a0297fac1a766", "committedDate": "2020-09-30T08:36:25Z", "message": "[OC-1025] : complete users admin module"}, "afterCommit": {"oid": "2484c71554c899a3c9e70f2935011c382fe9390e", "author": {"user": {"login": "bendaoudmba", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/2484c71554c899a3c9e70f2935011c382fe9390e", "committedDate": "2020-10-01T15:20:45Z", "message": "[OC-1025] : complete users admin module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6576431c39796184df886f33256631676e17bb28", "author": {"user": {"login": "freddidierRTE", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/6576431c39796184df886f33256631676e17bb28", "committedDate": "2020-10-02T07:43:04Z", "message": "[OC-1025] Remove use of external font"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1260, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}