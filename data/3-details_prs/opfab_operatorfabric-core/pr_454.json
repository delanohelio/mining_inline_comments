{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NTM2MTA2", "number": 454, "title": "[OC-968] Front : Add UI alert", "bodyText": "Please read through the checklist below to make sure that you haven't forgotten anything before submitting your PR.\nThen, remove the text and replace it with the information and comments that should go into the release notes.\n// tag::review_checklist[]\n\nThe PR comment contains a brief explanation of the impact of these developments, and a pointer\nto the relevant documentation if need be. Otherwise, it should why this development doesn't need\nto be on the release notes.\nCheck that Travis build is passing (for both branch and PR)\nCheck that the base branch (i.e. the branch into which we want to merge changes) is correct: for feature branches\npull requests, this branch should be develop.\nLook through changed files to make sure everything is relevant to the PR (no mistakenly added changes,\nno secret information, no malicious changes) and to see if you have remarks on the way things are implemented\nCheck that the commit(s) message(s) is(are) relevant and follow conventions ([OC-XXX] ... )\nIf there is more than one commit, is it meaningful or do we need to squash ?\nMeaningful and sufficient unit tests for the backend (80% coverage is the threshold)\nMeaningful unit tests for the frontend (Angular tests can be complex to implement, we should focus on testing complex\nlogic and not the framework itself)\nCheck Sonar analysis on SonarCloud to see if Sonar reports any bugs or code smells on the new code\nAPI testing via Karate has been updated\nCypress UI tests have been updated\nDocumentation has been updated (especially if configuration is needed)\nConfiguration examples have been updated (both for dev and docker)\nBuild and run OpFab locally to see the new feature or bug fix at work. In the case of a new feature, it's also a way\nof making sure that the configuration documentation is correct and easily understandable.\nDepending on the scope of the PR , build docker images and test in docker mode\nCheck that the copyright header has been updated on the changed files if need be, and in the case of a first-time\ncontributor, make sure they're added to the AUTHORS.txt file.\n// end::review_checklist[]", "createdAt": "2020-08-27T08:23:18Z", "url": "https://github.com/opfab/operatorfabric-core/pull/454", "merged": true, "mergeCommit": {"oid": "41441bdd23342ea8f46ba074742c0f85cba963ce"}, "closed": true, "closedAt": "2020-09-08T15:23:21Z", "author": {"login": "taoufikbermaki"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdC-iwvAFqTQ3NjYxODQ3Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGlEyjAH2gAyNDc0NTM2MTA2OjNmZjFjMTFiMDNlMDI0MzY5M2ExZmZiYmVlMGRkZDM3MmRmM2VlMmY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjE4NDc3", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476618477", "createdAt": "2020-08-27T11:17:09Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxNzowOVrOHILl1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxNzowOVrOHILl1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MDU2Nw==", "bodyText": "rename it  : \"startCountDown()\"", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478340567", "createdAt": "2020-08-27T11:17:09Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 146}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjE4OTE5", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476618919", "createdAt": "2020-08-27T11:17:51Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxNzo1MVrOHILnJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxNzo1MVrOHILnJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MDkwMg==", "bodyText": "console.log to remove", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478340902", "createdAt": "2020-08-27T11:17:51Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 158}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjE5MDY5", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476619069", "createdAt": "2020-08-27T11:18:05Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxODowNVrOHILnlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxODowNVrOHILnlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTAxNQ==", "bodyText": "console.log to remove", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478341015", "createdAt": "2020-08-27T11:18:05Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 173}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjE5NTA1", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476619505", "createdAt": "2020-08-27T11:18:45Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxODo0NlrOHILo3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxODo0NlrOHILo3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTM0Mw==", "bodyText": "console.log to remove", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478341343", "createdAt": "2020-08-27T11:18:46Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {\n+\n+        if (!this.isValidatelttd()) {\n+                console.log(`lttd not valid for :  ${this.lightCard.processInstanceId}`);\n+                this.enableLastTimeToAct = false;\n+                this.disabledActionButton();\n+        } else {\n+            console.log(`lttd valid for :  ${this.lightCard.processInstanceId}`);\n+\n+            if (this.calculateDiff() <= 0) {\n+                console.log(`countDownOver ${this.lightCard.processInstanceId}`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 187}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjE5NTk1", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476619595", "createdAt": "2020-08-27T11:18:56Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxODo1NlrOHILpKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxODo1NlrOHILpKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTQxNw==", "bodyText": "console.log to remove", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478341417", "createdAt": "2020-08-27T11:18:56Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {\n+\n+        if (!this.isValidatelttd()) {\n+                console.log(`lttd not valid for :  ${this.lightCard.processInstanceId}`);\n+                this.enableLastTimeToAct = false;\n+                this.disabledActionButton();\n+        } else {\n+            console.log(`lttd valid for :  ${this.lightCard.processInstanceId}`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 184}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjIwMjIy", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476620222", "createdAt": "2020-08-27T11:19:58Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxOTo1OFrOHILrLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxOTo1OFrOHILrLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTkzMw==", "bodyText": "console.log to remove", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478341933", "createdAt": "2020-08-27T11:19:58Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 131}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjIxNTgx", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476621581", "createdAt": "2020-08-27T11:22:07Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToyMjowN1rOHILvUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToyMjowN1rOHILvUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0Mjk5NQ==", "bodyText": "REname : \"startCountdownWhenNecessary()\"", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478342995", "createdAt": "2020-08-27T11:22:07Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 177}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjIyMzk4", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476622398", "createdAt": "2020-08-27T11:23:24Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToyMzoyNFrOHILxww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToyMzoyNFrOHILxww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MzYxOQ==", "bodyText": "rename : getSecondsBeforeLttd()", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478343619", "createdAt": "2020-08-27T11:23:24Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 171}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjI3MjM2", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476627236", "createdAt": "2020-08-27T11:30:29Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTozMDoyOVrOHIL_wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTozMDoyOVrOHIL_wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0NzIwMg==", "bodyText": "I do not understand what this code is doing ?\nWhy not just make : leftTimeSeconds = new Date(this.calculateDiff()).getSeconds() ;", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478347202", "createdAt": "2020-08-27T11:30:29Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 156}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjI5NjQx", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476629641", "createdAt": "2020-08-27T11:34:10Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTozNDoxMFrOHIMGvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTozNDoxMFrOHIMGvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0ODk4OQ==", "bodyText": "Why make a calculateDiff  , is it not sufficient to have CountdownStatus.done ?", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478348989", "createdAt": "2020-08-27T11:34:10Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;\n+                    this.entityUser = this.userWithPerimeters.userData.entities[0];\n+                    this.computeCountdown();\n+                }\n+            },\n+                error => console.error(`something went wrong while trying to have currentUser with perimeters `)\n+            );\n+\n+    this.computeDisplayedDate();\n+    }\n+\n+    public isValidatelttd(): boolean {\n+\n+        console.log(`${this.lightCard.processInstanceId} =>  ${this.lightCard.lttd} :  ${this.handleDate(this.lightCard.lttd)}`);\n+        if (this.entityUser !== undefined) {\n+            if (!this.isArchivePageType() && this.lightCard.lttd != null\n+                && this.lightCard.entitiesAllowedToRespond.includes(this.entityUser)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    isTimeToStartCountDown(): boolean {\n+        const delta = this.calculateDiff();\n+        return delta > 0 && delta < this.leftTime * 60;\n+    }\n+\n+    startCountdownConfig() {\n+\n+        this.leftTime = this.configService.getConfigValue('feed.card.leftTime', false);\n+        let leftTimeSeconds = this.leftTime * 60;\n+        const endDate = new Date(this.calculateDiff()).getSeconds();\n+\n+        if (leftTimeSeconds > endDate) {\n+            leftTimeSeconds = this.leftTime * 60;\n+        } else {\n+            leftTimeSeconds = endDate;\n+        }\n+\n+        console.log(`startCountdownConfig >>>> ${this.lightCard.summary.key}  leftTime : ${leftTimeSeconds}`);\n+\n+        this.prettyConfig = {\n+            leftTime: leftTimeSeconds,\n+            format: 'mm:ss'\n+        };\n+\n+        this.stopTime = false;\n+        this.enableLastTimeToAct = true;\n+        this.countdown.begin();\n+    }\n+\n+\n+    calculateDiff(): number {\n+        const delta = Math.floor((this.lightCard.lttd - new Date().getTime()) / 1000);\n+        console.log(`calculateDiff >>>>> ${this.lightCard.processInstanceId} : delta: ${delta} `);\n+        return delta;\n+    }\n+\n+    computeCountdown() {\n+\n+        if (!this.isValidatelttd()) {\n+                console.log(`lttd not valid for :  ${this.lightCard.processInstanceId}`);\n+                this.enableLastTimeToAct = false;\n+                this.disabledActionButton();\n+        } else {\n+            console.log(`lttd valid for :  ${this.lightCard.processInstanceId}`);\n+\n+            if (this.calculateDiff() <= 0) {\n+                console.log(`countDownOver ${this.lightCard.processInstanceId}`);\n+                this.stopCountDown();\n+            } else {\n+\n+                this.interval = setInterval(() => {\n+                    if (this.isTimeToStartCountDown()) {\n+                        this.startCountdownConfig();\n+                        clearInterval(this.interval);\n+                        return;\n+                    }\n+                }, 1000);\n+            }\n+        }\n+    }\n+\n+    stopCountDown() {\n+        this.stopTime = true;\n+        this.enableLastTimeToAct = true;\n+        this.disabledActionButton();\n+        this.countdown.stop();\n+    }\n+\n+    disabledActionButton() {\n+        console.log(`disabledActionButton >>>>> for process card ${this.lightCard.processInstanceId}`);\n+        this.store.dispatch(new UpdateLttd({ card: this.lightCard }));\n+    }\n+\n+\n+    handleEvent(e: CountdownEvent) {\n+\n+        if (this.calculateDiff() <= 0 && e.status === CountdownStatus.done) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 217}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjM2MDA3", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476636007", "createdAt": "2020-08-27T11:43:42Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTo0Mzo0MlrOHIMagw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTo0Mzo0MlrOHIMagw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM1NDA1MQ==", "bodyText": "Variables not used", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478354051", "createdAt": "2020-08-27T11:43:42Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -1,51 +1,82 @@\n /* Copyright (c) 2018-2020, RTE (http://www.rte-france.com)\n- * See AUTHORS.txt\n- * This Source Code Form is subject to the terms of the Mozilla Public\n- * License, v. 2.0. If a copy of the MPL was not distributed with this\n- * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n- * SPDX-License-Identifier: MPL-2.0\n- * This file is part of the OperatorFabric project.\n- */\n-\n-\n-\n-import {Component, Input, OnDestroy, OnInit} from '@angular/core';\n-import {LightCard} from '@ofModel/light-card.model';\n-import {Router} from '@angular/router';\n-import {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\n-import {Store} from '@ngrx/store';\n-import {AppState} from '@ofStore/index';\n-import {takeUntil} from 'rxjs/operators';\n-import {TimeService} from '@ofServices/time.service';\n-import {Subject} from 'rxjs';\n-import { ConfigService} from \"@ofServices/config.service\";\n+* See AUTHORS.txt\n+* This Source Code Form is subject to the terms of the Mozilla Public\n+* License, v. 2.0. If a copy of the MPL was not distributed with this\n+* file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+* SPDX-License-Identifier: MPL-2.0\n+* This file is part of the OperatorFabric project.\n+*/\n+\n+\n+\n+import { Component, Input, ViewChild, OnDestroy, OnInit, AfterViewInit } from '@angular/core';\n+import { LightCard } from '@ofModel/light-card.model';\n+import { Router } from '@angular/router';\n+import { selectCurrentUrl } from '@ofStore/selectors/router.selectors';\n+import { Store } from '@ngrx/store';\n+import { AppState } from '@ofStore/index';\n+import { TimeService } from '@ofServices/time.service';\n+import { Subject } from 'rxjs';\n+import { ConfigService } from '@ofServices/config.service';\n import { AppService, PageType } from '@ofServices/app.service';\n+import { CountdownComponent, CountdownConfig, CountdownEvent, CountdownStatus } from 'ngx-countdown';\n+import { UpdateLttd } from '../../../../store/actions/card.actions';\n+import { User } from '@ofModel/user.model';\n+import { Card } from '@ofModel/card.model';\n+import { UserService } from '@ofServices/user.service';\n+import { takeUntil } from 'rxjs/operators';\n+import { UserWithPerimeters } from '@ofModel/userWithPerimeters.model';\n+\n+\n \n @Component({\n     selector: 'of-card',\n     templateUrl: './card.component.html',\n     styleUrls: ['./card.component.scss']\n })\n export class CardComponent implements OnInit, OnDestroy {\n+    private counter: CountdownComponent;\n+    @ViewChild('cd', { static: false }) private countdown: CountdownComponent;\n+\n \n-    @Input() public open: boolean = false;\n+    @Input() public open = false;\n     @Input() public lightCard: LightCard;\n+    @Input() public userWithPerimeters: UserWithPerimeters;\n+\n+    card: Card;\n+    childCards: Card[];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjM2MzEz", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476636313", "createdAt": "2020-08-27T11:44:10Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTo0NDoxMFrOHIMbdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTo0NDoxMFrOHIMbdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM1NDI5NQ==", "bodyText": "Variable endTime not used", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478354295", "createdAt": "2020-08-27T11:44:10Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -1,51 +1,82 @@\n /* Copyright (c) 2018-2020, RTE (http://www.rte-france.com)\n- * See AUTHORS.txt\n- * This Source Code Form is subject to the terms of the Mozilla Public\n- * License, v. 2.0. If a copy of the MPL was not distributed with this\n- * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n- * SPDX-License-Identifier: MPL-2.0\n- * This file is part of the OperatorFabric project.\n- */\n-\n-\n-\n-import {Component, Input, OnDestroy, OnInit} from '@angular/core';\n-import {LightCard} from '@ofModel/light-card.model';\n-import {Router} from '@angular/router';\n-import {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\n-import {Store} from '@ngrx/store';\n-import {AppState} from '@ofStore/index';\n-import {takeUntil} from 'rxjs/operators';\n-import {TimeService} from '@ofServices/time.service';\n-import {Subject} from 'rxjs';\n-import { ConfigService} from \"@ofServices/config.service\";\n+* See AUTHORS.txt\n+* This Source Code Form is subject to the terms of the Mozilla Public\n+* License, v. 2.0. If a copy of the MPL was not distributed with this\n+* file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+* SPDX-License-Identifier: MPL-2.0\n+* This file is part of the OperatorFabric project.\n+*/\n+\n+\n+\n+import { Component, Input, ViewChild, OnDestroy, OnInit, AfterViewInit } from '@angular/core';\n+import { LightCard } from '@ofModel/light-card.model';\n+import { Router } from '@angular/router';\n+import { selectCurrentUrl } from '@ofStore/selectors/router.selectors';\n+import { Store } from '@ngrx/store';\n+import { AppState } from '@ofStore/index';\n+import { TimeService } from '@ofServices/time.service';\n+import { Subject } from 'rxjs';\n+import { ConfigService } from '@ofServices/config.service';\n import { AppService, PageType } from '@ofServices/app.service';\n+import { CountdownComponent, CountdownConfig, CountdownEvent, CountdownStatus } from 'ngx-countdown';\n+import { UpdateLttd } from '../../../../store/actions/card.actions';\n+import { User } from '@ofModel/user.model';\n+import { Card } from '@ofModel/card.model';\n+import { UserService } from '@ofServices/user.service';\n+import { takeUntil } from 'rxjs/operators';\n+import { UserWithPerimeters } from '@ofModel/userWithPerimeters.model';\n+\n+\n \n @Component({\n     selector: 'of-card',\n     templateUrl: './card.component.html',\n     styleUrls: ['./card.component.scss']\n })\n export class CardComponent implements OnInit, OnDestroy {\n+    private counter: CountdownComponent;\n+    @ViewChild('cd', { static: false }) private countdown: CountdownComponent;\n+\n \n-    @Input() public open: boolean = false;\n+    @Input() public open = false;\n     @Input() public lightCard: LightCard;\n+    @Input() public userWithPerimeters: UserWithPerimeters;\n+\n+    card: Card;\n+    childCards: Card[];\n     currentPath: any;\n+    user: User;\n+\n     protected _i18nPrefix: string;\n     dateToDisplay: string;\n \n+    entityUser: string;\n+    prettyConfig: CountdownConfig;\n+    enableLastTimeToAct = false;\n+    stopTime = false;\n+    endTime: number;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjM5Njcx", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476639671", "createdAt": "2020-08-27T11:48:49Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTo0ODo1MFrOHIMlrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTo0ODo1MFrOHIMlrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM1NjkxMQ==", "bodyText": "Why using this global variable userWithPerimeters as it is only used in this method ?", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478356911", "createdAt": "2020-08-27T11:48:50Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/card/card.component.ts", "diffHunk": "@@ -55,7 +86,113 @@ export class CardComponent implements OnInit, OnDestroy {\n                     this.currentPath = urlParts[1];\n                 }\n             });\n-        this.computeDisplayedDate();\n+\n+        this.userService.currentUserWithPerimeters()\n+            .pipe(takeUntil(this.ngUnsubscribe))\n+            .subscribe(userWithPerimeters => {\n+                if (userWithPerimeters) {\n+                    this.userWithPerimeters = userWithPerimeters;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 118}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjQ4MTQx", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476648141", "createdAt": "2020-08-27T12:00:26Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjowMDoyN1rOHIM_6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjowMDoyN1rOHIM_6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2MzYyNg==", "bodyText": "Variable open never used", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478363626", "createdAt": "2020-08-27T12:00:27Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "diffHunk": "@@ -75,6 +76,12 @@ export class DetailComponent implements OnChanges, OnInit, OnDestroy, AfterViewC\n     @Input() user: User;\n     @Input() userWithPerimeters: UserWithPerimeters;\n     @Input() currentPath: string;\n+    @Input() public open = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjUzMDU0", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476653054", "createdAt": "2020-08-27T12:07:00Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjowNzowMFrOHINPQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjowNzowMFrOHINPQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2NzU1NQ==", "bodyText": "To get the lttd, you do not need to access light card , you can find the value in the current card :\ncard.lttd\nso the code for this method will be just :\nreturn this.lttdExpiredIsTrue || Math.floor((card.lttd - new Date().getTime()) / 1000) <= 0", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478367555", "createdAt": "2020-08-27T12:07:00Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "diffHunk": "@@ -168,6 +181,16 @@ export class DetailComponent implements OnChanges, OnInit, OnDestroy, AfterViewC\n         this.markAsRead();\n     }\n \n+    get lttdExpired(): boolean {\n+        this.store.select(fetchLightCard(this.card.id)).pipe(take(1))\n+        .subscribe((lightCard: LightCard) => {\n+            this.lttd = lightCard.lttd;\n+        });\n+\n+        return this.lttdExpiredIsTrue || Math.floor((this.lttd - new Date().getTime()) / 1000) <= 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjU1MzQw", "url": "https://github.com/opfab/operatorfabric-core/pull/454#pullrequestreview-476655340", "createdAt": "2020-08-27T12:10:01Z", "commit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjoxMDowMVrOHINWGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjoxMDowMVrOHINWGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2OTMwNw==", "bodyText": "Add unsubscribe when destroying the object", "url": "https://github.com/opfab/operatorfabric-core/pull/454#discussion_r478369307", "createdAt": "2020-08-27T12:10:01Z", "author": {"login": "freddidierRTE"}, "path": "ui/main/src/app/modules/cards/components/detail/detail.component.ts", "diffHunk": "@@ -131,7 +138,13 @@ export class DetailComponent implements OnChanges, OnInit, OnDestroy, AfterViewC\n \n     ngOnInit() {\n \n-        if (this._appService.pageType === PageType.FEED) {\n+        this.lttdExpired$ = this.store.select(selectLttdExpired);\n+        this.subscription1$ = this.lttdExpired$.subscribe((result) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/a76cffc3e3720cdb041a36b59d9f491fc1033eb0", "committedDate": "2020-08-27T05:14:11Z", "message": "[OC-968] Front : Add UI alert"}, "afterCommit": {"oid": "783c22ee480678d20b8a81637de66343111e56f4", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/783c22ee480678d20b8a81637de66343111e56f4", "committedDate": "2020-08-28T00:14:09Z", "message": "[OC-968] Front : Add UI alert"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "783c22ee480678d20b8a81637de66343111e56f4", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/783c22ee480678d20b8a81637de66343111e56f4", "committedDate": "2020-08-28T00:14:09Z", "message": "[OC-968] Front : Add UI alert"}, "afterCommit": {"oid": "176959d59a83b5142e3aeb16e1bb1b107b9e60d3", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/176959d59a83b5142e3aeb16e1bb1b107b9e60d3", "committedDate": "2020-08-28T17:05:30Z", "message": "[OC-968] Front : Add UI alert"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "176959d59a83b5142e3aeb16e1bb1b107b9e60d3", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/176959d59a83b5142e3aeb16e1bb1b107b9e60d3", "committedDate": "2020-08-28T17:05:30Z", "message": "[OC-968] Front : Add UI alert"}, "afterCommit": {"oid": "b256e3411746f9364f2205625c7247ef9bdfa9bc", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/b256e3411746f9364f2205625c7247ef9bdfa9bc", "committedDate": "2020-09-03T17:00:04Z", "message": "[OC-968] Front : Add UI alert"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b256e3411746f9364f2205625c7247ef9bdfa9bc", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/b256e3411746f9364f2205625c7247ef9bdfa9bc", "committedDate": "2020-09-03T17:00:04Z", "message": "[OC-968] Front : Add UI alert"}, "afterCommit": {"oid": "5752ef7533b44e848663cebca38826fff047c1a2", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/5752ef7533b44e848663cebca38826fff047c1a2", "committedDate": "2020-09-07T02:51:17Z", "message": "[ OC-968 ] Front : Add UI alert last"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0de164edf6b8eb80032b1e226779c69fcbea22d6", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/0de164edf6b8eb80032b1e226779c69fcbea22d6", "committedDate": "2020-09-07T10:00:34Z", "message": "[ OC-968 ] Front : Add UI alert last"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5752ef7533b44e848663cebca38826fff047c1a2", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/5752ef7533b44e848663cebca38826fff047c1a2", "committedDate": "2020-09-07T02:51:17Z", "message": "[ OC-968 ] Front : Add UI alert last"}, "afterCommit": {"oid": "0de164edf6b8eb80032b1e226779c69fcbea22d6", "author": {"user": {"login": "taoufikbermaki", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/0de164edf6b8eb80032b1e226779c69fcbea22d6", "committedDate": "2020-09-07T10:00:34Z", "message": "[ OC-968 ] Front : Add UI alert last"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ff1c11b03e0243693a1ffbbee0ddd372df3ee2f", "author": {"user": {"login": "freddidierRTE", "name": null}}, "url": "https://github.com/opfab/operatorfabric-core/commit/3ff1c11b03e0243693a1ffbbee0ddd372df3ee2f", "committedDate": "2020-09-07T15:52:30Z", "message": "[OC-968] Minor correction\nand add lttd in karate test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1254, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}