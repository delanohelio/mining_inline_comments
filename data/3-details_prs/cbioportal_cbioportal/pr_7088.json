{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NzA4NTAw", "number": 7088, "title": "Performance optimization for ProfiledCasesCounter", "bodyText": "Fix #7072  (see https://help.github.com/en/articles/closing-issues-using-keywords)\nLeft some print statements in there in case we want to do additional optimizations. Will remove after discussing whether or not this can be merged without additional code changes.\nIssue:\n\nStudy Summary Page took ~3-5 minutes to run when loading for a large study (e.g GENIE)\nProfiled code and identified segment inside the ProfiledCasesCounter that processes data AFTER retrieving records from DB (meaning current EHCache placement will not help improve performance).\nThis segment of code took around 90-120 seconds to run.\nPortion of code was recalculating cases for gene panels.\n\nDescribe changes proposed in this pull request:\n\nCache/store gene panel cases and reuse instead of recalculating\nOther cleanup related to creating maps to store reused objects\n\nInvolved endpoint is the mutated-genes/fetch endpoint. Current runtime is now ~5 seconds w/ EHCache turned on. Can test login and test here w/ genie_private if you have permissions.\nChecks\n\n Runs on heroku\n Has tests or has a separate issue that describes the types of test that should be created. If no test is included it should explicitly be mentioned in the PR why there is no test.\n The commit log is comprehensible. It follows 7 rules of great commit messages. For most PRs a single commit should suffice, in some cases multiple topical commits can be useful. During review it is ok to see tiny commits (e.g. Fix reviewer comments), but right before the code gets merged to master or rc branch, any such commits should be squashed since they are useless to the other developers. Definitely avoid merge commits, use rebase instead.\n Is this PR adding logic based on one or more clinical attributes? If yes, please make sure validation for this attribute is also present in the data validation / data loading layers (in backend repo) and documented in File-Formats Clinical data section!\n\nAny screenshots or GIFs?\nIf this is a new visual feature please add a before/after screenshot or gif\nhere with e.g. Giphy CAPTURE or Peek\nNotify reviewers\nRead our Pull request merging\npolicy. It can help to figure out who worked on the\nfile before you. Please use git blame <filename> to determine that\nand notify them either through slack or by assigning them as a reviewer on the PR", "createdAt": "2020-01-31T18:19:45Z", "url": "https://github.com/cBioPortal/cbioportal/pull/7088", "merged": true, "mergeCommit": {"oid": "cc5e0d218d7175851b87cfafd9e7c6a9d09fbbb2"}, "closed": true, "closedAt": "2020-02-05T15:01:58Z", "author": {"login": "averyniceday"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAtv-sgBqjMwMDIzOTY1MDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBImi-gFqTM1MzMyMTU2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2b9acde68ce4718010d003f8373d21da1666e0e", "author": {"user": {"login": "averyniceday", "name": null}}, "url": "https://github.com/cBioPortal/cbioportal/commit/f2b9acde68ce4718010d003f8373d21da1666e0e", "committedDate": "2020-01-30T21:17:16Z", "message": "Performance optimization for ProfiledCasesCounter\n- Original code loops through genes and calculates gene panel cases each time\n- Cache/store gene panel cases and reuse instead of recalculating\n- Other cleanup related to creating maps to store reused objects"}, "afterCommit": {"oid": "d7f2ce4c3d89cbcd531d64caec8b148df244333f", "author": {"user": {"login": "averyniceday", "name": null}}, "url": "https://github.com/cBioPortal/cbioportal/commit/d7f2ce4c3d89cbcd531d64caec8b148df244333f", "committedDate": "2020-02-03T14:21:56Z", "message": "Performance optimization for ProfiledCasesCounter\n- Original code loops through genes and calculates gene panel cases each time\n- Cache/store gene panel cases and reuse instead of recalculating\n- Other cleanup related to creating maps to store reused objects"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d7f2ce4c3d89cbcd531d64caec8b148df244333f", "author": {"user": {"login": "averyniceday", "name": null}}, "url": "https://github.com/cBioPortal/cbioportal/commit/d7f2ce4c3d89cbcd531d64caec8b148df244333f", "committedDate": "2020-02-03T14:21:56Z", "message": "Performance optimization for ProfiledCasesCounter\n- Original code loops through genes and calculates gene panel cases each time\n- Cache/store gene panel cases and reuse instead of recalculating\n- Other cleanup related to creating maps to store reused objects"}, "afterCommit": {"oid": "ab3d20b195ea8f04331ce0eb7373e2cb50d80cca", "author": {"user": {"login": "averyniceday", "name": null}}, "url": "https://github.com/cBioPortal/cbioportal/commit/ab3d20b195ea8f04331ce0eb7373e2cb50d80cca", "committedDate": "2020-02-03T14:25:59Z", "message": "Performance optimization for ProfiledCasesCounter\n- Original code loops through genes and calculates gene panel cases each time\n- Cache/store gene panel cases and reuse instead of recalculating\n- Other cleanup related to creating maps to store reused objects"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ab3d20b195ea8f04331ce0eb7373e2cb50d80cca", "author": {"user": {"login": "averyniceday", "name": null}}, "url": "https://github.com/cBioPortal/cbioportal/commit/ab3d20b195ea8f04331ce0eb7373e2cb50d80cca", "committedDate": "2020-02-03T14:25:59Z", "message": "Performance optimization for ProfiledCasesCounter\n- Original code loops through genes and calculates gene panel cases each time\n- Cache/store gene panel cases and reuse instead of recalculating\n- Other cleanup related to creating maps to store reused objects"}, "afterCommit": {"oid": "7ece85bb02c3bec8cc69778b8bd0f4448a979437", "author": {"user": {"login": "averyniceday", "name": null}}, "url": "https://github.com/cBioPortal/cbioportal/commit/7ece85bb02c3bec8cc69778b8bd0f4448a979437", "committedDate": "2020-02-03T14:27:15Z", "message": "Performance optimization for ProfiledCasesCounter\n- Original code loops through genes and calculates gene panel cases each time\n- Cache/store gene panel cases and reuse instead of recalculating\n- Other cleanup related to creating maps to store reused objects"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMzQ2Nzgw", "url": "https://github.com/cBioPortal/cbioportal/pull/7088#pullrequestreview-352346780", "createdAt": "2020-02-03T15:37:44Z", "commit": {"oid": "7ece85bb02c3bec8cc69778b8bd0f4448a979437"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTozNzo0NFrOFk1tcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTozNzo0NFrOFk1tcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE3MzA0MA==", "bodyText": "let's revert this change here @averyniceday", "url": "https://github.com/cBioPortal/cbioportal/pull/7088#discussion_r374173040", "createdAt": "2020-02-03T15:37:44Z", "author": {"login": "ao508"}, "path": "web/src/main/java/org/cbioportal/web/StudyViewController.java", "diffHunk": "@@ -281,7 +281,6 @@\n                 });\n             }\n         }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ece85bb02c3bec8cc69778b8bd0f4448a979437"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2712375fe8152540fe978a2422738da8e58c669", "author": {"user": {"login": "averyniceday", "name": null}}, "url": "https://github.com/cBioPortal/cbioportal/commit/d2712375fe8152540fe978a2422738da8e58c669", "committedDate": "2020-02-03T17:22:50Z", "message": "Performance optimization for ProfiledCasesCounter\n- Original code loops through genes and calculates gene panel cases each time\n- Cache/store gene panel cases and reuse instead of recalculating\n- Other cleanup related to creating maps to store reused objects"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ece85bb02c3bec8cc69778b8bd0f4448a979437", "author": {"user": {"login": "averyniceday", "name": null}}, "url": "https://github.com/cBioPortal/cbioportal/commit/7ece85bb02c3bec8cc69778b8bd0f4448a979437", "committedDate": "2020-02-03T14:27:15Z", "message": "Performance optimization for ProfiledCasesCounter\n- Original code loops through genes and calculates gene panel cases each time\n- Cache/store gene panel cases and reuse instead of recalculating\n- Other cleanup related to creating maps to store reused objects"}, "afterCommit": {"oid": "d2712375fe8152540fe978a2422738da8e58c669", "author": {"user": {"login": "averyniceday", "name": null}}, "url": "https://github.com/cBioPortal/cbioportal/commit/d2712375fe8152540fe978a2422738da8e58c669", "committedDate": "2020-02-03T17:22:50Z", "message": "Performance optimization for ProfiledCasesCounter\n- Original code loops through genes and calculates gene panel cases each time\n- Cache/store gene panel cases and reuse instead of recalculating\n- Other cleanup related to creating maps to store reused objects"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTEzODUy", "url": "https://github.com/cBioPortal/cbioportal/pull/7088#pullrequestreview-353113852", "createdAt": "2020-02-04T16:22:33Z", "commit": {"oid": "d2712375fe8152540fe978a2422738da8e58c669"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTI0MDQx", "url": "https://github.com/cBioPortal/cbioportal/pull/7088#pullrequestreview-353124041", "createdAt": "2020-02-04T16:35:14Z", "commit": {"oid": "d2712375fe8152540fe978a2422738da8e58c669"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNjozNToxNFrOFla_UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNjozNToxNFrOFla_UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc4MzgyNA==", "bodyText": "I think this loop could be combined with the previous loop (the iteration is the same), although I am not positive. If the three inner lines were appended to the inner lines of the previous loop would the data still be valid?\nLooping twice is perhaps not too much overhead, if it is helpful for code clarity.", "url": "https://github.com/cBioPortal/cbioportal/pull/7088#discussion_r374783824", "createdAt": "2020-02-04T16:35:14Z", "author": {"login": "sheridancbio"}, "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "diffHunk": "@@ -58,32 +59,42 @@ public void calculate(List<String> molecularProfileIds, List<String> sampleIds,\n                 .map(x -> x.getStudyId() + (countByPatients ? x.getPatientId() : x.getSampleId()))\n                 .collect(Collectors.toSet());\n \n+        \n+        Map<String, Set<String>> genePanelToCases = new HashMap<String, Set<String>>();\n+        \n         for (AlterationCountByGene alterationCountByGene : alterationCounts) {\n             final Set<String> profiledCasesForGene = new HashSet<String>();\n             Integer entrezGeneId = alterationCountByGene.getEntrezGeneId();\n             List<GenePanel> allPanels = new ArrayList<>();\n             \n+            Set<String> totalProfiledCases = new HashSet<String>();\n+            Set<String> allMatchingGenePanelIds = new HashSet<String>();\n+            // different calculations depending on if gene is linked to gene panels \n             if (geneGenePanelMap.containsKey(entrezGeneId)) {\n-                geneGenePanelMap.get(entrezGeneId).forEach(genePanel -> {\n-                    Set<String> casesWithPanelData = genePanelDataMap\n+                // calculate and store cases for each gene panel\n+                for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {\n+                    if (!genePanelToCases.containsKey(genePanel.getStableId())) {\n+                        Set<String> casesWithPanelData = genePanelDataMap\n                             .get(genePanel.getStableId())\n                             .stream()\n-                            // there can be duplicate patient or sample id, append study id\n                             .map(x -> x.getStudyId() + (countByPatients ? x.getPatientId() : x.getSampleId()))\n                             .collect(Collectors.toSet());\n-                    profiledCasesForGene.addAll(casesWithPanelData);\n-                    allPanels.add(genePanel);\n-                });\n-                \n-                profiledCasesForGene.addAll(casesWithoutPanelData);\n+                        genePanelToCases.put(genePanel.getStableId(), casesWithPanelData);\n+                    }\n+                }\n+                // for every gene panel associated containing the gene, use the sum of unique cases\n+                // as well as cases without panel data\n+                for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2712375fe8152540fe978a2422738da8e58c669"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTM2NjA0", "url": "https://github.com/cBioPortal/cbioportal/pull/7088#pullrequestreview-353136604", "createdAt": "2020-02-04T16:51:30Z", "commit": {"oid": "d2712375fe8152540fe978a2422738da8e58c669"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTkwMTI1", "url": "https://github.com/cBioPortal/cbioportal/pull/7088#pullrequestreview-353190125", "createdAt": "2020-02-04T18:09:29Z", "commit": {"oid": "d2712375fe8152540fe978a2422738da8e58c669"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxODowOToyOVrOFleIMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxODowOToyOVrOFleIMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgzNTI1MA==", "bodyText": "Updated genePanelToCases can be completely outside of block iterating alterationCounts (line 63).\nmay be\n        Map<String, Set<String>> genePanelToCases = genePanelDataMap\n                .entrySet().stream()\n                .collect(Collectors\n                        .toMap(\n                                e -> e.getKey(),\n                                e -> {\n                                    return e.getValue()\n                                            .stream()\n                                            .map(x -> x.getStudyId() + (countByPatients ? x.getPatientId() : x.getSampleId()))\n                                            .collect(Collectors.toSet());\n                                    }\n                                ));", "url": "https://github.com/cBioPortal/cbioportal/pull/7088#discussion_r374835250", "createdAt": "2020-02-04T18:09:29Z", "author": {"login": "kalletlak"}, "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "diffHunk": "@@ -58,32 +59,42 @@ public void calculate(List<String> molecularProfileIds, List<String> sampleIds,\n                 .map(x -> x.getStudyId() + (countByPatients ? x.getPatientId() : x.getSampleId()))\n                 .collect(Collectors.toSet());\n \n+        \n+        Map<String, Set<String>> genePanelToCases = new HashMap<String, Set<String>>();\n+        \n         for (AlterationCountByGene alterationCountByGene : alterationCounts) {\n             final Set<String> profiledCasesForGene = new HashSet<String>();\n             Integer entrezGeneId = alterationCountByGene.getEntrezGeneId();\n             List<GenePanel> allPanels = new ArrayList<>();\n             \n+            Set<String> totalProfiledCases = new HashSet<String>();\n+            Set<String> allMatchingGenePanelIds = new HashSet<String>();\n+            // different calculations depending on if gene is linked to gene panels \n             if (geneGenePanelMap.containsKey(entrezGeneId)) {\n-                geneGenePanelMap.get(entrezGeneId).forEach(genePanel -> {\n-                    Set<String> casesWithPanelData = genePanelDataMap\n+                // calculate and store cases for each gene panel\n+                for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2712375fe8152540fe978a2422738da8e58c669"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTkxMzcy", "url": "https://github.com/cBioPortal/cbioportal/pull/7088#pullrequestreview-353191372", "createdAt": "2020-02-04T18:11:28Z", "commit": {"oid": "d2712375fe8152540fe978a2422738da8e58c669"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxODoxMToyOFrOFleMEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxODoxMTo0NlrOFleMzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgzNjI0MA==", "bodyText": "never used. cleanup", "url": "https://github.com/cBioPortal/cbioportal/pull/7088#discussion_r374836240", "createdAt": "2020-02-04T18:11:28Z", "author": {"login": "kalletlak"}, "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "diffHunk": "@@ -58,32 +59,42 @@ public void calculate(List<String> molecularProfileIds, List<String> sampleIds,\n                 .map(x -> x.getStudyId() + (countByPatients ? x.getPatientId() : x.getSampleId()))\n                 .collect(Collectors.toSet());\n \n+        \n+        Map<String, Set<String>> genePanelToCases = new HashMap<String, Set<String>>();\n+        \n         for (AlterationCountByGene alterationCountByGene : alterationCounts) {\n             final Set<String> profiledCasesForGene = new HashSet<String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2712375fe8152540fe978a2422738da8e58c669"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgzNjQyOQ==", "bodyText": "never used. cleanup", "url": "https://github.com/cBioPortal/cbioportal/pull/7088#discussion_r374836429", "createdAt": "2020-02-04T18:11:46Z", "author": {"login": "kalletlak"}, "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "diffHunk": "@@ -58,32 +59,42 @@ public void calculate(List<String> molecularProfileIds, List<String> sampleIds,\n                 .map(x -> x.getStudyId() + (countByPatients ? x.getPatientId() : x.getSampleId()))\n                 .collect(Collectors.toSet());\n \n+        \n+        Map<String, Set<String>> genePanelToCases = new HashMap<String, Set<String>>();\n+        \n         for (AlterationCountByGene alterationCountByGene : alterationCounts) {\n             final Set<String> profiledCasesForGene = new HashSet<String>();\n             Integer entrezGeneId = alterationCountByGene.getEntrezGeneId();\n             List<GenePanel> allPanels = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2712375fe8152540fe978a2422738da8e58c669"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24255d505c33fe21e46c7879edd17099c97873e7", "author": {"user": {"login": "sheridancbio", "name": "Robert Sheridan"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/24255d505c33fe21e46c7879edd17099c97873e7", "committedDate": "2020-02-04T21:31:57Z", "message": "precompute gene panel cases prior to gene loop\n- move computation of membership to start of calculate() function\n- instead of partitioning GenePanelData records first into gene panel and later constructing unique case string set ... directly compute set and store in map\n- create shared function for computing unique case id based on boolean countByPatients"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cf2986ad994056670281b3a18060d8702b14588", "author": {"user": {"login": "averyniceday", "name": null}}, "url": "https://github.com/cBioPortal/cbioportal/commit/4cf2986ad994056670281b3a18060d8702b14588", "committedDate": "2020-02-04T21:32:15Z", "message": "Merge pull request #13 from sheridancbio/studyview-performance\n\nprecompute gene panel cases prior to gene loop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMzIxNTYy", "url": "https://github.com/cBioPortal/cbioportal/pull/7088#pullrequestreview-353321562", "createdAt": "2020-02-04T21:41:21Z", "commit": {"oid": "4cf2986ad994056670281b3a18060d8702b14588"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1537, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}