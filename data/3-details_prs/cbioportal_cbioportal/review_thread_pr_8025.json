{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MjcxODIy", "number": 8025, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODo1MDoyNlrOE1y9MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODo1NToxNVrOE1zECg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODQ0ODQ4OnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/util/MutationMapperUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODo1MDoyNlrOHuRj-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTo0Nzo1MlrOHuT6wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI4NDI4MA==", "bodyText": "Where is this SUMMARY coming from? Why isn't this a constant?", "url": "https://github.com/cBioPortal/cbioportal/pull/8025#discussion_r518284280", "createdAt": "2020-11-05T18:50:26Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/main/java/org/cbioportal/service/util/MutationMapperUtils.java", "diffHunk": "@@ -90,12 +101,16 @@\n                             } else {\n                                 try {\n                                     Gene site2Gene = geneService.getGene(site2GeneSymbol);\n-                                    if (site2Gene != null) {\n-                                        structuralVariant.setSite2EntrezGeneId(site2Gene.getGeneticEntityId());\n-                                        structuralVariant.setSite2HugoSymbol(site2Gene.getHugoGeneSymbol());\n-                                    }\n+                                    structuralVariant.setSite2EntrezGeneId(site2Gene.getEntrezGeneId());\n+                                    structuralVariant.setSite2HugoSymbol(site2Gene.getHugoGeneSymbol());\n                                 } catch (Exception e) {\n-                                    // Site2 gene is not set when gene symbol is not found in database\n+                                    // Site2 gene is not set when gene symbol is not found in database. Check if it is an alias\n+                                    List<Gene> aliasGenes = geneService.getAllGenes(null, site2GeneSymbol, \"SUMMARY\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3e1335af9cb164e4dcb1d99118e01df44f75096"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyMjg4Mg==", "bodyText": "SUMMARY constant is present in web layer. moving it to service layer introduces lot of changes. better to fix it in another pr", "url": "https://github.com/cBioPortal/cbioportal/pull/8025#discussion_r518322882", "createdAt": "2020-11-05T19:47:52Z", "author": {"login": "kalletlak"}, "path": "service/src/main/java/org/cbioportal/service/util/MutationMapperUtils.java", "diffHunk": "@@ -90,12 +101,16 @@\n                             } else {\n                                 try {\n                                     Gene site2Gene = geneService.getGene(site2GeneSymbol);\n-                                    if (site2Gene != null) {\n-                                        structuralVariant.setSite2EntrezGeneId(site2Gene.getGeneticEntityId());\n-                                        structuralVariant.setSite2HugoSymbol(site2Gene.getHugoGeneSymbol());\n-                                    }\n+                                    structuralVariant.setSite2EntrezGeneId(site2Gene.getEntrezGeneId());\n+                                    structuralVariant.setSite2HugoSymbol(site2Gene.getHugoGeneSymbol());\n                                 } catch (Exception e) {\n-                                    // Site2 gene is not set when gene symbol is not found in database\n+                                    // Site2 gene is not set when gene symbol is not found in database. Check if it is an alias\n+                                    List<Gene> aliasGenes = geneService.getAllGenes(null, site2GeneSymbol, \"SUMMARY\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI4NDI4MA=="}, "originalCommit": {"oid": "f3e1335af9cb164e4dcb1d99118e01df44f75096"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODQ1ODI2OnYy", "diffSide": "RIGHT", "path": "web/src/main/java/org/cbioportal/web/util/StudyViewFilterApplier.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODo1MzowN1rOHuRqSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTo1MDoxNlrOHuUAAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI4NTg5Nw==", "bodyText": "So what was molecularAlterationFilterType doing here? It looks like it was doing absolutely nothing - is that correct?", "url": "https://github.com/cBioPortal/cbioportal/pull/8025#discussion_r518285897", "createdAt": "2020-11-05T18:53:07Z", "author": {"login": "Luke-Sikina"}, "path": "web/src/main/java/org/cbioportal/web/util/StudyViewFilterApplier.java", "diffHunk": "@@ -272,8 +271,7 @@ public SampleIdentifier apply(Sample sample) {\n     }\n \n     private List<SampleIdentifier> filterMutatedGenes(List<GeneFilter> mutatedGenefilters,\n-            Map<String, MolecularProfile> molecularProfileMap, MolecularAlterationType molecularAlterationFilterType,\n-            List<SampleIdentifier> sampleIdentifiers) {\n+            Map<String, MolecularProfile> molecularProfileMap, List<SampleIdentifier> sampleIdentifiers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3e1335af9cb164e4dcb1d99118e01df44f75096"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyNDIyNQ==", "bodyText": "It was useful before when both mutation and fusion/SV data requests are handled together. I forgot to clean it up once I introduced new service for fetching/filtering fusion/SV data", "url": "https://github.com/cBioPortal/cbioportal/pull/8025#discussion_r518324225", "createdAt": "2020-11-05T19:50:16Z", "author": {"login": "kalletlak"}, "path": "web/src/main/java/org/cbioportal/web/util/StudyViewFilterApplier.java", "diffHunk": "@@ -272,8 +271,7 @@ public SampleIdentifier apply(Sample sample) {\n     }\n \n     private List<SampleIdentifier> filterMutatedGenes(List<GeneFilter> mutatedGenefilters,\n-            Map<String, MolecularProfile> molecularProfileMap, MolecularAlterationType molecularAlterationFilterType,\n-            List<SampleIdentifier> sampleIdentifiers) {\n+            Map<String, MolecularProfile> molecularProfileMap, List<SampleIdentifier> sampleIdentifiers) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI4NTg5Nw=="}, "originalCommit": {"oid": "f3e1335af9cb164e4dcb1d99118e01df44f75096"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODQ2NjAyOnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/impl/MolecularProfileServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODo1NToxNVrOHuRvGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTo1MTozOFrOHuUCvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI4NzEzMQ==", "bodyText": "We should probably document these changes with a unit test or two.", "url": "https://github.com/cBioPortal/cbioportal/pull/8025#discussion_r518287131", "createdAt": "2020-11-05T18:55:15Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/main/java/org/cbioportal/service/impl/MolecularProfileServiceImpl.java", "diffHunk": "@@ -163,18 +163,17 @@ public BaseMeta getMetaMolecularProfilesInStudies(List<String> studyIds) {\n \n         //TODO: remove mutation profile once fusions are migrated to structural variant in the database\n         getMolecularProfilesInStudies(studyIds, \"SUMMARY\").stream().forEach(molecularProfile -> {\n-            if (!mapByStudyId.containsKey(molecularProfile.getCancerStudyIdentifier())) {\n-                if (molecularProfile.getMolecularAlterationType()\n-                        .equals(MolecularProfile.MolecularAlterationType.MUTATION_EXTENDED)\n-                        || (molecularProfile.getMolecularAlterationType()\n-                                .equals(MolecularProfile.MolecularAlterationType.STRUCTURAL_VARIANT)\n-                                && molecularProfile.getDatatype() == \"SV\")) {\n+            if (molecularProfile.getMolecularAlterationType().equals(MolecularProfile.MolecularAlterationType.FUSION)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3e1335af9cb164e4dcb1d99118e01df44f75096"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyNDkyNg==", "bodyText": "True, but all this logic is gonna go away once the data is fixed. Not sure it its worth writing tests", "url": "https://github.com/cBioPortal/cbioportal/pull/8025#discussion_r518324926", "createdAt": "2020-11-05T19:51:38Z", "author": {"login": "kalletlak"}, "path": "service/src/main/java/org/cbioportal/service/impl/MolecularProfileServiceImpl.java", "diffHunk": "@@ -163,18 +163,17 @@ public BaseMeta getMetaMolecularProfilesInStudies(List<String> studyIds) {\n \n         //TODO: remove mutation profile once fusions are migrated to structural variant in the database\n         getMolecularProfilesInStudies(studyIds, \"SUMMARY\").stream().forEach(molecularProfile -> {\n-            if (!mapByStudyId.containsKey(molecularProfile.getCancerStudyIdentifier())) {\n-                if (molecularProfile.getMolecularAlterationType()\n-                        .equals(MolecularProfile.MolecularAlterationType.MUTATION_EXTENDED)\n-                        || (molecularProfile.getMolecularAlterationType()\n-                                .equals(MolecularProfile.MolecularAlterationType.STRUCTURAL_VARIANT)\n-                                && molecularProfile.getDatatype() == \"SV\")) {\n+            if (molecularProfile.getMolecularAlterationType().equals(MolecularProfile.MolecularAlterationType.FUSION)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI4NzEzMQ=="}, "originalCommit": {"oid": "f3e1335af9cb164e4dcb1d99118e01df44f75096"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3467, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}