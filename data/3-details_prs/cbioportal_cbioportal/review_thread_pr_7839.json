{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0ODIzNzAz", "number": 7839, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDozNTo0M1rOEedrkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjoxODoxM1rOEim3PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzc5MDI2OnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDozNTo0M1rOHKIVSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzoxMTozOFrOHK1ldw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4NDMyOA==", "bodyText": "Given that we have enrichmentType logic here, can we stick with using the enum instead of the string until but not including the repository layer", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480384328", "createdAt": "2020-08-31T20:35:43Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.service.StructuralVariantEnrichmentService;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class StructuralVariantEnrichmentServiceImpl implements StructuralVariantEnrichmentService {\n+    @Autowired\n+    private StructuralVariantService structuralVariantService;\n+    @Autowired\n+    private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;\n+\n+    @Override\n+    public List<AlterationEnrichment> getStructuralVariantEnrichments(\n+            Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, String enrichmentType)\n+            throws MolecularProfileNotFoundException {\n+\n+        Map<String, List<StructuralVariantCountByGene>> mutationCountsbyEntrezGeneIdAndGroup = molecularProfileCaseSets\n+                .entrySet().stream().collect(Collectors.toMap(entry -> entry.getKey(), entry -> {\n+                    // set value of each group to list of MutationCountByGene\n+                    List<String> molecularProfileIds = new ArrayList<>();\n+                    List<String> caseIds = new ArrayList<>();\n+\n+                    entry.getValue().forEach(molecularProfileCase -> {\n+                        molecularProfileIds.add(molecularProfileCase.getMolecularProfileId());\n+                        caseIds.add(molecularProfileCase.getCaseId());\n+                    });\n+\n+                    if (enrichmentType.equals(\"SAMPLE\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEyNTc1MQ==", "bodyText": "In this case I would need to move enum from web module to a level where it can be accessed from service module.", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r481125751", "createdAt": "2020-09-01T13:11:38Z", "author": {"login": "kalletlak"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.service.StructuralVariantEnrichmentService;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class StructuralVariantEnrichmentServiceImpl implements StructuralVariantEnrichmentService {\n+    @Autowired\n+    private StructuralVariantService structuralVariantService;\n+    @Autowired\n+    private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;\n+\n+    @Override\n+    public List<AlterationEnrichment> getStructuralVariantEnrichments(\n+            Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, String enrichmentType)\n+            throws MolecularProfileNotFoundException {\n+\n+        Map<String, List<StructuralVariantCountByGene>> mutationCountsbyEntrezGeneIdAndGroup = molecularProfileCaseSets\n+                .entrySet().stream().collect(Collectors.toMap(entry -> entry.getKey(), entry -> {\n+                    // set value of each group to list of MutationCountByGene\n+                    List<String> molecularProfileIds = new ArrayList<>();\n+                    List<String> caseIds = new ArrayList<>();\n+\n+                    entry.getValue().forEach(molecularProfileCase -> {\n+                        molecularProfileIds.add(molecularProfileCase.getMolecularProfileId());\n+                        caseIds.add(molecularProfileCase.getCaseId());\n+                    });\n+\n+                    if (enrichmentType.equals(\"SAMPLE\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4NDMyOA=="}, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzgwMzQxOnYy", "diffSide": "RIGHT", "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDozOTo0NlrOHKIdAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzoxMzoyOVrOHK1qFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4NjMwNw==", "bodyText": "Why getOrDefault? The key you're using is from the map's key set.", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480386307", "createdAt": "2020-08-31T20:39:46Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.Silent.class)\n+public class StructuralVariantEnrichmentServiceImplTest extends BaseServiceImplTest {\n+\n+    @InjectMocks\n+    private StructuralVariantEnrichmentServiceImpl structuralVariantEnrichmentService;\n+\n+    @Mock\n+    private StructuralVariantService structuralVariantService;\n+    @Mock\n+    private AlterationEnrichmentUtil alterationEnrichmentUtil;\n+\n+    @Test\n+    public void getMutationEnrichments() throws Exception {\n+        // create set1, set2 list of entities\n+        MolecularProfileCaseIdentifier molecularProfileCase1 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase1.setCaseId(\"sample_id_1\");\n+        molecularProfileCase1.setMolecularProfileId(\"test1_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase2 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase2.setCaseId(\"sample_id_2\");\n+        molecularProfileCase2.setMolecularProfileId(\"test2_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet1 = new ArrayList<>();\n+        molecularProfileCaseSet1.add(molecularProfileCase1);\n+        molecularProfileCaseSet1.add(molecularProfileCase2);\n+\n+        MolecularProfileCaseIdentifier molecularProfileCase3 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase3.setCaseId(\"sample_id_3\");\n+        molecularProfileCase3.setMolecularProfileId(\"test3_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase4 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase4.setCaseId(\"sample_id_4\");\n+        molecularProfileCase4.setMolecularProfileId(\"test4_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet2 = new ArrayList<>();\n+        molecularProfileCaseSet2.add(molecularProfileCase3);\n+        molecularProfileCaseSet2.add(molecularProfileCase4);\n+\n+        Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<String, List<MolecularProfileCaseIdentifier>>();\n+        groupMolecularProfileCaseSets.put(\"altered group\", molecularProfileCaseSet1);\n+        groupMolecularProfileCaseSets.put(\"unaltered group\", molecularProfileCaseSet2);\n+\n+        for (String molecularProfileId : groupMolecularProfileCaseSets.keySet()) {\n+\n+            List<String> molecularProfileIds = new ArrayList<>();\n+            List<String> sampleIds = new ArrayList<>();\n+\n+            groupMolecularProfileCaseSets.getOrDefault(molecularProfileId, new ArrayList<>())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEyNjkzNQ==", "bodyText": "true, not required", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r481126935", "createdAt": "2020-09-01T13:13:29Z", "author": {"login": "kalletlak"}, "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.Silent.class)\n+public class StructuralVariantEnrichmentServiceImplTest extends BaseServiceImplTest {\n+\n+    @InjectMocks\n+    private StructuralVariantEnrichmentServiceImpl structuralVariantEnrichmentService;\n+\n+    @Mock\n+    private StructuralVariantService structuralVariantService;\n+    @Mock\n+    private AlterationEnrichmentUtil alterationEnrichmentUtil;\n+\n+    @Test\n+    public void getMutationEnrichments() throws Exception {\n+        // create set1, set2 list of entities\n+        MolecularProfileCaseIdentifier molecularProfileCase1 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase1.setCaseId(\"sample_id_1\");\n+        molecularProfileCase1.setMolecularProfileId(\"test1_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase2 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase2.setCaseId(\"sample_id_2\");\n+        molecularProfileCase2.setMolecularProfileId(\"test2_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet1 = new ArrayList<>();\n+        molecularProfileCaseSet1.add(molecularProfileCase1);\n+        molecularProfileCaseSet1.add(molecularProfileCase2);\n+\n+        MolecularProfileCaseIdentifier molecularProfileCase3 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase3.setCaseId(\"sample_id_3\");\n+        molecularProfileCase3.setMolecularProfileId(\"test3_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase4 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase4.setCaseId(\"sample_id_4\");\n+        molecularProfileCase4.setMolecularProfileId(\"test4_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet2 = new ArrayList<>();\n+        molecularProfileCaseSet2.add(molecularProfileCase3);\n+        molecularProfileCaseSet2.add(molecularProfileCase4);\n+\n+        Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<String, List<MolecularProfileCaseIdentifier>>();\n+        groupMolecularProfileCaseSets.put(\"altered group\", molecularProfileCaseSet1);\n+        groupMolecularProfileCaseSets.put(\"unaltered group\", molecularProfileCaseSet2);\n+\n+        for (String molecularProfileId : groupMolecularProfileCaseSets.keySet()) {\n+\n+            List<String> molecularProfileIds = new ArrayList<>();\n+            List<String> sampleIds = new ArrayList<>();\n+\n+            groupMolecularProfileCaseSets.getOrDefault(molecularProfileId, new ArrayList<>())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4NjMwNw=="}, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzgwODUzOnYy", "diffSide": "RIGHT", "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo0MToyNlrOHKIgIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo0MToyNlrOHKIgIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4NzEwNg==", "bodyText": "You don't need the diamond type on the right.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<String, List<MolecularProfileCaseIdentifier>>();\n          \n          \n            \n                    Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<>();", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480387106", "createdAt": "2020-08-31T20:41:26Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.Silent.class)\n+public class StructuralVariantEnrichmentServiceImplTest extends BaseServiceImplTest {\n+\n+    @InjectMocks\n+    private StructuralVariantEnrichmentServiceImpl structuralVariantEnrichmentService;\n+\n+    @Mock\n+    private StructuralVariantService structuralVariantService;\n+    @Mock\n+    private AlterationEnrichmentUtil alterationEnrichmentUtil;\n+\n+    @Test\n+    public void getMutationEnrichments() throws Exception {\n+        // create set1, set2 list of entities\n+        MolecularProfileCaseIdentifier molecularProfileCase1 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase1.setCaseId(\"sample_id_1\");\n+        molecularProfileCase1.setMolecularProfileId(\"test1_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase2 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase2.setCaseId(\"sample_id_2\");\n+        molecularProfileCase2.setMolecularProfileId(\"test2_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet1 = new ArrayList<>();\n+        molecularProfileCaseSet1.add(molecularProfileCase1);\n+        molecularProfileCaseSet1.add(molecularProfileCase2);\n+\n+        MolecularProfileCaseIdentifier molecularProfileCase3 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase3.setCaseId(\"sample_id_3\");\n+        molecularProfileCase3.setMolecularProfileId(\"test3_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase4 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase4.setCaseId(\"sample_id_4\");\n+        molecularProfileCase4.setMolecularProfileId(\"test4_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet2 = new ArrayList<>();\n+        molecularProfileCaseSet2.add(molecularProfileCase3);\n+        molecularProfileCaseSet2.add(molecularProfileCase4);\n+\n+        Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<String, List<MolecularProfileCaseIdentifier>>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzgxNTAwOnYy", "diffSide": "RIGHT", "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo0MzozOVrOHKIkNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo0MzozOVrOHKIkNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4ODE1MA==", "bodyText": "Any reason you're not diamond typing this? Makes code completion a little easier in some IDEs\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private AlterationEnrichmentUtil alterationEnrichmentUtil;\n          \n          \n            \n                private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480388150", "createdAt": "2020-08-31T20:43:39Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.Silent.class)\n+public class StructuralVariantEnrichmentServiceImplTest extends BaseServiceImplTest {\n+\n+    @InjectMocks\n+    private StructuralVariantEnrichmentServiceImpl structuralVariantEnrichmentService;\n+\n+    @Mock\n+    private StructuralVariantService structuralVariantService;\n+    @Mock\n+    private AlterationEnrichmentUtil alterationEnrichmentUtil;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzgyMjI1OnYy", "diffSide": "RIGHT", "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo0NTo1OVrOHKIotA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo0NTo1OVrOHKIotA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4OTMwMA==", "bodyText": "Adding control flow to your tests can be dangerous, mostly because a former coworker of mine may appear and ask you \"who is testing your tests?\", but I think this is fine.", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480389300", "createdAt": "2020-08-31T20:45:59Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.Silent.class)\n+public class StructuralVariantEnrichmentServiceImplTest extends BaseServiceImplTest {\n+\n+    @InjectMocks\n+    private StructuralVariantEnrichmentServiceImpl structuralVariantEnrichmentService;\n+\n+    @Mock\n+    private StructuralVariantService structuralVariantService;\n+    @Mock\n+    private AlterationEnrichmentUtil alterationEnrichmentUtil;\n+\n+    @Test\n+    public void getMutationEnrichments() throws Exception {\n+        // create set1, set2 list of entities\n+        MolecularProfileCaseIdentifier molecularProfileCase1 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase1.setCaseId(\"sample_id_1\");\n+        molecularProfileCase1.setMolecularProfileId(\"test1_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase2 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase2.setCaseId(\"sample_id_2\");\n+        molecularProfileCase2.setMolecularProfileId(\"test2_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet1 = new ArrayList<>();\n+        molecularProfileCaseSet1.add(molecularProfileCase1);\n+        molecularProfileCaseSet1.add(molecularProfileCase2);\n+\n+        MolecularProfileCaseIdentifier molecularProfileCase3 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase3.setCaseId(\"sample_id_3\");\n+        molecularProfileCase3.setMolecularProfileId(\"test3_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase4 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase4.setCaseId(\"sample_id_4\");\n+        molecularProfileCase4.setMolecularProfileId(\"test4_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet2 = new ArrayList<>();\n+        molecularProfileCaseSet2.add(molecularProfileCase3);\n+        molecularProfileCaseSet2.add(molecularProfileCase4);\n+\n+        Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<String, List<MolecularProfileCaseIdentifier>>();\n+        groupMolecularProfileCaseSets.put(\"altered group\", molecularProfileCaseSet1);\n+        groupMolecularProfileCaseSets.put(\"unaltered group\", molecularProfileCaseSet2);\n+\n+        for (String molecularProfileId : groupMolecularProfileCaseSets.keySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzgzMjU3OnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantServiceImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo0OToyNFrOHKIu_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjoxMTozOFrOHQlGHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5MDkxMA==", "bodyText": "I'm glad this is getting removed, because this whole ID swap seems a bit janky. Can you explain why this is necessary, and what change in the future will obsolete this approach?", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480390910", "createdAt": "2020-08-31T20:49:24Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantServiceImpl.java", "diffHunk": "@@ -131,4 +109,30 @@\n         return countByGenes;\n     }\n \n+    @Override\n+    public List<StructuralVariantCountByGene> getPatientCountInMultipleMolecularProfiles(\n+            List<String> molecularProfileIds, List<String> patientIds, List<Integer> entrezGeneIds,\n+            boolean includeFrequency, boolean includeMissingAlterationsFromGenePanel) {\n+\n+        List<StructuralVariantCountByGene> countByGenes = structuralVariantRepository\n+                .getPatientCountInMultipleMolecularProfiles(molecularProfileIds, patientIds, entrezGeneIds);\n+\n+        // TODO: Remove once fusions are removed from mutation table\n+        if (CollectionUtils.isEmpty(countByGenes)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEzMjQwNg==", "bodyText": "This is related to #6611. Currently all the fusion data is stored into mutation table with mutation molecular profile id. In future fusion data will be in its own table(structural variant) -> this is when all the import scripts are updated and existing data is migrated.", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r481132406", "createdAt": "2020-09-01T13:21:36Z", "author": {"login": "kalletlak"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantServiceImpl.java", "diffHunk": "@@ -131,4 +109,30 @@\n         return countByGenes;\n     }\n \n+    @Override\n+    public List<StructuralVariantCountByGene> getPatientCountInMultipleMolecularProfiles(\n+            List<String> molecularProfileIds, List<String> patientIds, List<Integer> entrezGeneIds,\n+            boolean includeFrequency, boolean includeMissingAlterationsFromGenePanel) {\n+\n+        List<StructuralVariantCountByGene> countByGenes = structuralVariantRepository\n+                .getPatientCountInMultipleMolecularProfiles(molecularProfileIds, patientIds, entrezGeneIds);\n+\n+        // TODO: Remove once fusions are removed from mutation table\n+        if (CollectionUtils.isEmpty(countByGenes)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5MDkxMA=="}, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE0NzAzNw==", "bodyText": "I hope we haven't missed any TODO tags.", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487147037", "createdAt": "2020-09-11T16:11:38Z", "author": {"login": "n1zea144"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantServiceImpl.java", "diffHunk": "@@ -131,4 +109,30 @@\n         return countByGenes;\n     }\n \n+    @Override\n+    public List<StructuralVariantCountByGene> getPatientCountInMultipleMolecularProfiles(\n+            List<String> molecularProfileIds, List<String> patientIds, List<Integer> entrezGeneIds,\n+            boolean includeFrequency, boolean includeMissingAlterationsFromGenePanel) {\n+\n+        List<StructuralVariantCountByGene> countByGenes = structuralVariantRepository\n+                .getPatientCountInMultipleMolecularProfiles(molecularProfileIds, patientIds, entrezGeneIds);\n+\n+        // TODO: Remove once fusions are removed from mutation table\n+        if (CollectionUtils.isEmpty(countByGenes)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5MDkxMA=="}, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzgzNzc1OnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1MTowNFrOHKIyGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1MTowNFrOHKIyGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5MTcwNQ==", "bodyText": "All the cool kids are doing it like this now:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .entrySet().stream().collect(Collectors.toMap(entry -> entry.getKey(), entry -> {\n          \n          \n            \n                            .entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey, entry -> {", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480391705", "createdAt": "2020-08-31T20:51:04Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.service.StructuralVariantEnrichmentService;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class StructuralVariantEnrichmentServiceImpl implements StructuralVariantEnrichmentService {\n+    @Autowired\n+    private StructuralVariantService structuralVariantService;\n+    @Autowired\n+    private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;\n+\n+    @Override\n+    public List<AlterationEnrichment> getStructuralVariantEnrichments(\n+            Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, String enrichmentType)\n+            throws MolecularProfileNotFoundException {\n+\n+        Map<String, List<StructuralVariantCountByGene>> mutationCountsbyEntrezGeneIdAndGroup = molecularProfileCaseSets\n+                .entrySet().stream().collect(Collectors.toMap(entry -> entry.getKey(), entry -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzg1MTEzOnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1NTozNVrOHKI6cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzoyNDo1MVrOHK2H9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5Mzg0Mw==", "bodyText": "Where is MolecularProfileNotFoundException  thrown? That's a checked exception, so I should get a compiler error when I remove it if something in the function body throws it, but I don't.", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480393843", "createdAt": "2020-08-31T20:55:35Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.service.StructuralVariantEnrichmentService;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class StructuralVariantEnrichmentServiceImpl implements StructuralVariantEnrichmentService {\n+    @Autowired\n+    private StructuralVariantService structuralVariantService;\n+    @Autowired\n+    private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;\n+\n+    @Override\n+    public List<AlterationEnrichment> getStructuralVariantEnrichments(\n+            Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, String enrichmentType)\n+            throws MolecularProfileNotFoundException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEzNDU4MA==", "bodyText": "Looks like it is not required", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r481134580", "createdAt": "2020-09-01T13:24:51Z", "author": {"login": "kalletlak"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.service.StructuralVariantEnrichmentService;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class StructuralVariantEnrichmentServiceImpl implements StructuralVariantEnrichmentService {\n+    @Autowired\n+    private StructuralVariantService structuralVariantService;\n+    @Autowired\n+    private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;\n+\n+    @Override\n+    public List<AlterationEnrichment> getStructuralVariantEnrichments(\n+            Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, String enrichmentType)\n+            throws MolecularProfileNotFoundException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5Mzg0Mw=="}, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzg1OTI1OnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1Nzo1NlrOHKI_Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzozMTozNFrOHK2Z3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5NTA4Mw==", "bodyText": "How many case sets could you potentially be iterating over? Iteratively calling a service seems like it could be a good way to run into performance issues.", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480395083", "createdAt": "2020-08-31T20:57:56Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.service.StructuralVariantEnrichmentService;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class StructuralVariantEnrichmentServiceImpl implements StructuralVariantEnrichmentService {\n+    @Autowired\n+    private StructuralVariantService structuralVariantService;\n+    @Autowired\n+    private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;\n+\n+    @Override\n+    public List<AlterationEnrichment> getStructuralVariantEnrichments(\n+            Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, String enrichmentType)\n+            throws MolecularProfileNotFoundException {\n+\n+        Map<String, List<StructuralVariantCountByGene>> mutationCountsbyEntrezGeneIdAndGroup = molecularProfileCaseSets\n+                .entrySet().stream().collect(Collectors.toMap(entry -> entry.getKey(), entry -> {\n+                    // set value of each group to list of MutationCountByGene\n+                    List<String> molecularProfileIds = new ArrayList<>();\n+                    List<String> caseIds = new ArrayList<>();\n+\n+                    entry.getValue().forEach(molecularProfileCase -> {\n+                        molecularProfileIds.add(molecularProfileCase.getMolecularProfileId());\n+                        caseIds.add(molecularProfileCase.getCaseId());\n+                    });\n+\n+                    if (enrichmentType.equals(\"SAMPLE\")) {\n+                        return structuralVariantService.getSampleCountInMultipleMolecularProfiles(molecularProfileIds, caseIds,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEzOTE2Nw==", "bodyText": "It can be any, it is the number of groups in comparison. this would be the only way to do it as the response from getSampleCountInMultipleMolecularProfiles would be aggregated counts", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r481139167", "createdAt": "2020-09-01T13:31:34Z", "author": {"login": "kalletlak"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.service.StructuralVariantEnrichmentService;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class StructuralVariantEnrichmentServiceImpl implements StructuralVariantEnrichmentService {\n+    @Autowired\n+    private StructuralVariantService structuralVariantService;\n+    @Autowired\n+    private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;\n+\n+    @Override\n+    public List<AlterationEnrichment> getStructuralVariantEnrichments(\n+            Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, String enrichmentType)\n+            throws MolecularProfileNotFoundException {\n+\n+        Map<String, List<StructuralVariantCountByGene>> mutationCountsbyEntrezGeneIdAndGroup = molecularProfileCaseSets\n+                .entrySet().stream().collect(Collectors.toMap(entry -> entry.getKey(), entry -> {\n+                    // set value of each group to list of MutationCountByGene\n+                    List<String> molecularProfileIds = new ArrayList<>();\n+                    List<String> caseIds = new ArrayList<>();\n+\n+                    entry.getValue().forEach(molecularProfileCase -> {\n+                        molecularProfileIds.add(molecularProfileCase.getMolecularProfileId());\n+                        caseIds.add(molecularProfileCase.getCaseId());\n+                    });\n+\n+                    if (enrichmentType.equals(\"SAMPLE\")) {\n+                        return structuralVariantService.getSampleCountInMultipleMolecularProfiles(molecularProfileIds, caseIds,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5NTA4Mw=="}, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzE1NTQzOnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/CopyNumberEnrichmentService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTo1NDo1OFrOHQkhdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjozMzoyNVrOHQlz9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzNzY1Mg==", "bodyText": "Is there any validation on the MolecularProfileCaseIdentifier that the MolecularProfileID is valid (also for MutationEnrichmentService.java)", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487137652", "createdAt": "2020-09-11T15:54:58Z", "author": {"login": "n1zea144"}, "path": "service/src/main/java/org/cbioportal/service/CopyNumberEnrichmentService.java", "diffHunk": "@@ -1,16 +1,15 @@\n package org.cbioportal.service;\n \n-import org.cbioportal.model.AlterationEnrichment;\n-import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n-\n import java.util.List;\n import java.util.Map;\n \n+import org.cbioportal.model.AlterationEnrichment;\n import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.web.parameter.EnrichmentType;\n \n public interface CopyNumberEnrichmentService {\n \n     List<AlterationEnrichment> getCopyNumberEnrichments(\n             Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, List<Integer> alterationTypes,\n-            String enrichmentType) throws MolecularProfileNotFoundException;\n+            EnrichmentType enrichmentType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fada7246400c6e74d8edbd994837c54e5c0a0734"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE1ODc3NA==", "bodyText": "Looks like there is no validation. I'll add it", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487158774", "createdAt": "2020-09-11T16:33:25Z", "author": {"login": "kalletlak"}, "path": "service/src/main/java/org/cbioportal/service/CopyNumberEnrichmentService.java", "diffHunk": "@@ -1,16 +1,15 @@\n package org.cbioportal.service;\n \n-import org.cbioportal.model.AlterationEnrichment;\n-import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n-\n import java.util.List;\n import java.util.Map;\n \n+import org.cbioportal.model.AlterationEnrichment;\n import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.web.parameter.EnrichmentType;\n \n public interface CopyNumberEnrichmentService {\n \n     List<AlterationEnrichment> getCopyNumberEnrichments(\n             Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, List<Integer> alterationTypes,\n-            String enrichmentType) throws MolecularProfileNotFoundException;\n+            EnrichmentType enrichmentType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzNzY1Mg=="}, "originalCommit": {"oid": "fada7246400c6e74d8edbd994837c54e5c0a0734"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzE2MDgyOnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/StructuralVariantService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTo1NjoyNFrOHQkk5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTo1NjoyNFrOHQkk5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzODUzMw==", "bodyText": "Minor, but missing newline below.", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487138533", "createdAt": "2020-09-11T15:56:24Z", "author": {"login": "n1zea144"}, "path": "service/src/main/java/org/cbioportal/service/StructuralVariantService.java", "diffHunk": "@@ -23,17 +23,21 @@\n \n package org.cbioportal.service;\n \n+import java.util.List;\n+\n import org.cbioportal.model.StructuralVariant;\n import org.cbioportal.model.StructuralVariantCountByGene;\n \n-import java.util.List;\n-\n public interface StructuralVariantService {\n \n-    List<StructuralVariant> fetchStructuralVariants(List<String> molecularProfileIds, \n-            List<Integer> entrezGeneIds, List<String> sampleIds);\n+    List<StructuralVariant> fetchStructuralVariants(List<String> molecularProfileIds, List<Integer> entrezGeneIds,\n+            List<String> sampleIds);\n \n     List<StructuralVariantCountByGene> getSampleCountInMultipleMolecularProfiles(List<String> molecularProfileIds,\n             List<String> sampleIds, List<Integer> entrezGeneIds, boolean includeFrequency,\n             boolean includeMissingAlterationsFromGenePanel);\n+\n+    List<StructuralVariantCountByGene> getPatientCountInMultipleMolecularProfiles(List<String> molecularProfileIds,\n+            List<String> patientIds, List<Integer> entrezGeneIds, boolean includeFrequency,\n+            boolean includeMissingAlterationsFromGenePanel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fada7246400c6e74d8edbd994837c54e5c0a0734"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzIzNzcyOnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjoxODoxM1rOHQlUIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOToyMTo1OFrOHQrDSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE1MDYyNQ==", "bodyText": "It feels like we have lots of little areas in the backend where sections of code are identical except for a call or two to getPatientXXX/getSampleXXX.  Maybe its ok and introducing some design pattern to address it will only complicate the code...it just never sits well with me (I'm having a deja vu).", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487150625", "createdAt": "2020-09-11T16:18:13Z", "author": {"login": "n1zea144"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantServiceImpl.java", "diffHunk": "@@ -131,4 +109,30 @@\n         return countByGenes;\n     }\n \n+    @Override\n+    public List<StructuralVariantCountByGene> getPatientCountInMultipleMolecularProfiles(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fada7246400c6e74d8edbd994837c54e5c0a0734"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI0NDYxNw==", "bodyText": "Me too. we should include this in refactoring", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487244617", "createdAt": "2020-09-11T19:21:58Z", "author": {"login": "kalletlak"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantServiceImpl.java", "diffHunk": "@@ -131,4 +109,30 @@\n         return countByGenes;\n     }\n \n+    @Override\n+    public List<StructuralVariantCountByGene> getPatientCountInMultipleMolecularProfiles(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE1MDYyNQ=="}, "originalCommit": {"oid": "fada7246400c6e74d8edbd994837c54e5c0a0734"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3553, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}