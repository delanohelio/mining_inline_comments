{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MzI5MzY3", "number": 7474, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMTo0ODozNlrOD6buJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzoxNjo1NFrOD_qyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTk4MTgwOnYy", "diffSide": "RIGHT", "path": "portal/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMTo0ODozNlrOGSRhlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxMDo0NToxMVrOGS6O-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgxNDY3Ng==", "bodyText": "how is this dependency used? Would this still allow for backwards compatibility with older versions of Tomcat i.e. running cBioPortal in a tomcat 8 version? We are using tomcat 8 in production for some instances of cBioPortal. There is a plan to migrate but for now it would be nice to be backwards compatible\nThat said it is fine to upgrade the webapp-runner dependency which is what the docker container uses to run cBioPortal.\nThis one: \n  \n    \n      cbioportal/portal/pom.xml\n    \n    \n        Lines 92 to 95\n      in\n      3e7ebff\n    \n    \n    \n    \n\n        \n          \n           <groupId>com.github.jsimone</groupId> \n        \n\n        \n          \n           <artifactId>webapp-runner</artifactId> \n        \n\n        \n          \n           <version>8.5.37.1</version> \n        \n\n        \n          \n           <destFileName>webapp-runner.jar</destFileName>", "url": "https://github.com/cBioPortal/cbioportal/pull/7474#discussion_r421814676", "createdAt": "2020-05-07T21:48:36Z", "author": {"login": "inodb"}, "path": "portal/pom.xml", "diffHunk": "@@ -58,7 +58,7 @@\n     <dependency>\n       <groupId>org.apache.tomcat</groupId>\n       <artifactId>tomcat-catalina</artifactId>\n-      <version>7.0.68</version>\n+      <version>9.0.34</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "547a5aa79b4dad5140a3a70efafee1cf6327dde2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ4MTY1Ng==", "bodyText": "Thanks for the hint! I actually pushed the wrong commit.\nI'll have to revert that one and the upgrade to servlet 4.0.1 as it also requires Tomcat 9+.", "url": "https://github.com/cBioPortal/cbioportal/pull/7474#discussion_r422481656", "createdAt": "2020-05-09T10:45:11Z", "author": {"login": "nr23730"}, "path": "portal/pom.xml", "diffHunk": "@@ -58,7 +58,7 @@\n     <dependency>\n       <groupId>org.apache.tomcat</groupId>\n       <artifactId>tomcat-catalina</artifactId>\n-      <version>7.0.68</version>\n+      <version>9.0.34</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgxNDY3Ng=="}, "originalCommit": {"oid": "547a5aa79b4dad5140a3a70efafee1cf6327dde2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDg3ODYwOnYy", "diffSide": "RIGHT", "path": "web/src/test/java/org/cbioportal/web/GenesetDataControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzoxNjo1NFrOGadwOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzoyMDowNlrOGad4xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQwMzY0MQ==", "bodyText": "Filed a separate issue to reimplement this test: #7536", "url": "https://github.com/cBioPortal/cbioportal/pull/7474#discussion_r430403641", "createdAt": "2020-05-26T13:16:54Z", "author": {"login": "inodb"}, "path": "web/src/test/java/org/cbioportal/web/GenesetDataControllerTest.java", "diffHunk": "@@ -90,20 +90,20 @@ public void fetchGeneticDataItems() throws Exception {\n                 .andExpect(MockMvcResultMatchers.jsonPath(\"$[1].value\").value(VALUE_2));\n \n         //testing the sampleListId route:\n-        List<GenesetMolecularData> genesetDataItems2 = createGenesetDataItemsList();\n-        genesetDataItems2.addAll(createGenesetDataItemsList());//duplicate, just to make it different from response above\n-        Mockito.when(genesetDataService.fetchGenesetData(Mockito.anyString(), Mockito.anyString(),\n-                Mockito.anyListOf(String.class))).thenReturn(genesetDataItems2);\n-        //set sampleListId to ensure the fetchGenesetData variant above is called:\n-        genesetDataFilterCriteria.setSampleListId(SAMPLE_LIST_ID);\n-\n-        mockMvc.perform(MockMvcRequestBuilders.post(\"/genetic-profiles/\" + PROF_ID + \"/geneset-genetic-data/fetch\")\n-                .accept(MediaType.APPLICATION_JSON)\n-                .contentType(MediaType.APPLICATION_JSON)\n-                .content(objectMapper.writeValueAsString(genesetDataFilterCriteria)))\n-                .andExpect(MockMvcResultMatchers.status().isOk())\n-                .andExpect(MockMvcResultMatchers.content().contentTypeCompatibleWith(MediaType.APPLICATION_JSON))\n-                .andExpect(MockMvcResultMatchers.jsonPath(\"$\", Matchers.hasSize(4)));\n+        // List<GenesetMolecularData> genesetDataItems2 = createGenesetDataItemsList();\n+        // genesetDataItems2.addAll(createGenesetDataItemsList());//duplicate, just to make it different from response above\n+        // Mockito.when(genesetDataService.fetchGenesetData(Mockito.any(), (List) Mockito.any(),\n+        //     Mockito.any())).thenReturn(genesetDataItems2);\n+        // //set sampleListId to ensure the fetchGenesetData variant above is called:\n+        // genesetDataFilterCriteria.setSampleListId(SAMPLE_LIST_ID);\n+\n+        // mockMvc.perform(MockMvcRequestBuilders.post(\"/genetic-profiles/\" + PROF_ID + \"/geneset-genetic-data/fetch\")\n+        //         .accept(MediaType.APPLICATION_JSON)\n+        //         .contentType(MediaType.APPLICATION_JSON)\n+        //         .content(objectMapper.writeValueAsString(genesetDataFilterCriteria)))\n+        //         .andExpect(MockMvcResultMatchers.status().isOk())\n+        //         .andExpect(MockMvcResultMatchers.content().contentTypeCompatibleWith(MediaType.APPLICATION_JSON))\n+        //         .andExpect(MockMvcResultMatchers.jsonPath(\"$\", Matchers.hasSize(4)));\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68a9f04f68f2ac4c323a1024a488af6bf6d2f6c2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQwNTgzMQ==", "bodyText": "Very good idea to keep an eye on this. I will also file another \"issue\" with the tests that have unnecessary stubs so that they are kind of \"on a todo list\".", "url": "https://github.com/cBioPortal/cbioportal/pull/7474#discussion_r430405831", "createdAt": "2020-05-26T13:20:06Z", "author": {"login": "nr23730"}, "path": "web/src/test/java/org/cbioportal/web/GenesetDataControllerTest.java", "diffHunk": "@@ -90,20 +90,20 @@ public void fetchGeneticDataItems() throws Exception {\n                 .andExpect(MockMvcResultMatchers.jsonPath(\"$[1].value\").value(VALUE_2));\n \n         //testing the sampleListId route:\n-        List<GenesetMolecularData> genesetDataItems2 = createGenesetDataItemsList();\n-        genesetDataItems2.addAll(createGenesetDataItemsList());//duplicate, just to make it different from response above\n-        Mockito.when(genesetDataService.fetchGenesetData(Mockito.anyString(), Mockito.anyString(),\n-                Mockito.anyListOf(String.class))).thenReturn(genesetDataItems2);\n-        //set sampleListId to ensure the fetchGenesetData variant above is called:\n-        genesetDataFilterCriteria.setSampleListId(SAMPLE_LIST_ID);\n-\n-        mockMvc.perform(MockMvcRequestBuilders.post(\"/genetic-profiles/\" + PROF_ID + \"/geneset-genetic-data/fetch\")\n-                .accept(MediaType.APPLICATION_JSON)\n-                .contentType(MediaType.APPLICATION_JSON)\n-                .content(objectMapper.writeValueAsString(genesetDataFilterCriteria)))\n-                .andExpect(MockMvcResultMatchers.status().isOk())\n-                .andExpect(MockMvcResultMatchers.content().contentTypeCompatibleWith(MediaType.APPLICATION_JSON))\n-                .andExpect(MockMvcResultMatchers.jsonPath(\"$\", Matchers.hasSize(4)));\n+        // List<GenesetMolecularData> genesetDataItems2 = createGenesetDataItemsList();\n+        // genesetDataItems2.addAll(createGenesetDataItemsList());//duplicate, just to make it different from response above\n+        // Mockito.when(genesetDataService.fetchGenesetData(Mockito.any(), (List) Mockito.any(),\n+        //     Mockito.any())).thenReturn(genesetDataItems2);\n+        // //set sampleListId to ensure the fetchGenesetData variant above is called:\n+        // genesetDataFilterCriteria.setSampleListId(SAMPLE_LIST_ID);\n+\n+        // mockMvc.perform(MockMvcRequestBuilders.post(\"/genetic-profiles/\" + PROF_ID + \"/geneset-genetic-data/fetch\")\n+        //         .accept(MediaType.APPLICATION_JSON)\n+        //         .contentType(MediaType.APPLICATION_JSON)\n+        //         .content(objectMapper.writeValueAsString(genesetDataFilterCriteria)))\n+        //         .andExpect(MockMvcResultMatchers.status().isOk())\n+        //         .andExpect(MockMvcResultMatchers.content().contentTypeCompatibleWith(MediaType.APPLICATION_JSON))\n+        //         .andExpect(MockMvcResultMatchers.jsonPath(\"$\", Matchers.hasSize(4)));\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQwMzY0MQ=="}, "originalCommit": {"oid": "68a9f04f68f2ac4c323a1024a488af6bf6d2f6c2"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3650, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}