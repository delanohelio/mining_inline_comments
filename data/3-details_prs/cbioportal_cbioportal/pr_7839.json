{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0ODIzNzAz", "number": 7839, "title": "Add structural variant enrichment api", "bodyText": "Backend changes for #7832\nNote: most of the changes are related to moving EnrichmentType enum from web module to model module, this is part of making it accessible in service module", "createdAt": "2020-08-27T16:44:23Z", "url": "https://github.com/cBioPortal/cbioportal/pull/7839", "merged": true, "mergeCommit": {"oid": "b3302446bb3ab11c4ff12f06e22db35782ba9a9a"}, "closed": true, "closedAt": "2020-09-14T14:28:37Z", "author": {"login": "kalletlak"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDWzohgBqjM3MDQ0NzcwNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdI0DGqgFqTQ4NzgyNzM3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "623ed19cccc959a929a6b47119627702ed7e845e", "author": {"user": {"login": "kalletlak", "name": "Karthik K"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/623ed19cccc959a929a6b47119627702ed7e845e", "committedDate": "2020-08-27T16:42:41Z", "message": "Add structural variant enrichment api"}, "afterCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf", "author": {"user": {"login": "kalletlak", "name": "Karthik K"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/8f334a4e109f04f8730fb7292c90f681af5072bf", "committedDate": "2020-08-28T15:33:00Z", "message": "Add structural variant enrichment api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4OTM1NjA2", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#pullrequestreview-478935606", "createdAt": "2020-08-31T20:35:43Z", "commit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "state": "APPROVED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDozNTo0M1rOHKIVSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1Nzo1NlrOHKI_Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4NDMyOA==", "bodyText": "Given that we have enrichmentType logic here, can we stick with using the enum instead of the string until but not including the repository layer", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480384328", "createdAt": "2020-08-31T20:35:43Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.service.StructuralVariantEnrichmentService;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class StructuralVariantEnrichmentServiceImpl implements StructuralVariantEnrichmentService {\n+    @Autowired\n+    private StructuralVariantService structuralVariantService;\n+    @Autowired\n+    private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;\n+\n+    @Override\n+    public List<AlterationEnrichment> getStructuralVariantEnrichments(\n+            Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, String enrichmentType)\n+            throws MolecularProfileNotFoundException {\n+\n+        Map<String, List<StructuralVariantCountByGene>> mutationCountsbyEntrezGeneIdAndGroup = molecularProfileCaseSets\n+                .entrySet().stream().collect(Collectors.toMap(entry -> entry.getKey(), entry -> {\n+                    // set value of each group to list of MutationCountByGene\n+                    List<String> molecularProfileIds = new ArrayList<>();\n+                    List<String> caseIds = new ArrayList<>();\n+\n+                    entry.getValue().forEach(molecularProfileCase -> {\n+                        molecularProfileIds.add(molecularProfileCase.getMolecularProfileId());\n+                        caseIds.add(molecularProfileCase.getCaseId());\n+                    });\n+\n+                    if (enrichmentType.equals(\"SAMPLE\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4NjMwNw==", "bodyText": "Why getOrDefault? The key you're using is from the map's key set.", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480386307", "createdAt": "2020-08-31T20:39:46Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.Silent.class)\n+public class StructuralVariantEnrichmentServiceImplTest extends BaseServiceImplTest {\n+\n+    @InjectMocks\n+    private StructuralVariantEnrichmentServiceImpl structuralVariantEnrichmentService;\n+\n+    @Mock\n+    private StructuralVariantService structuralVariantService;\n+    @Mock\n+    private AlterationEnrichmentUtil alterationEnrichmentUtil;\n+\n+    @Test\n+    public void getMutationEnrichments() throws Exception {\n+        // create set1, set2 list of entities\n+        MolecularProfileCaseIdentifier molecularProfileCase1 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase1.setCaseId(\"sample_id_1\");\n+        molecularProfileCase1.setMolecularProfileId(\"test1_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase2 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase2.setCaseId(\"sample_id_2\");\n+        molecularProfileCase2.setMolecularProfileId(\"test2_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet1 = new ArrayList<>();\n+        molecularProfileCaseSet1.add(molecularProfileCase1);\n+        molecularProfileCaseSet1.add(molecularProfileCase2);\n+\n+        MolecularProfileCaseIdentifier molecularProfileCase3 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase3.setCaseId(\"sample_id_3\");\n+        molecularProfileCase3.setMolecularProfileId(\"test3_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase4 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase4.setCaseId(\"sample_id_4\");\n+        molecularProfileCase4.setMolecularProfileId(\"test4_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet2 = new ArrayList<>();\n+        molecularProfileCaseSet2.add(molecularProfileCase3);\n+        molecularProfileCaseSet2.add(molecularProfileCase4);\n+\n+        Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<String, List<MolecularProfileCaseIdentifier>>();\n+        groupMolecularProfileCaseSets.put(\"altered group\", molecularProfileCaseSet1);\n+        groupMolecularProfileCaseSets.put(\"unaltered group\", molecularProfileCaseSet2);\n+\n+        for (String molecularProfileId : groupMolecularProfileCaseSets.keySet()) {\n+\n+            List<String> molecularProfileIds = new ArrayList<>();\n+            List<String> sampleIds = new ArrayList<>();\n+\n+            groupMolecularProfileCaseSets.getOrDefault(molecularProfileId, new ArrayList<>())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4NzEwNg==", "bodyText": "You don't need the diamond type on the right.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<String, List<MolecularProfileCaseIdentifier>>();\n          \n          \n            \n                    Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<>();", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480387106", "createdAt": "2020-08-31T20:41:26Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.Silent.class)\n+public class StructuralVariantEnrichmentServiceImplTest extends BaseServiceImplTest {\n+\n+    @InjectMocks\n+    private StructuralVariantEnrichmentServiceImpl structuralVariantEnrichmentService;\n+\n+    @Mock\n+    private StructuralVariantService structuralVariantService;\n+    @Mock\n+    private AlterationEnrichmentUtil alterationEnrichmentUtil;\n+\n+    @Test\n+    public void getMutationEnrichments() throws Exception {\n+        // create set1, set2 list of entities\n+        MolecularProfileCaseIdentifier molecularProfileCase1 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase1.setCaseId(\"sample_id_1\");\n+        molecularProfileCase1.setMolecularProfileId(\"test1_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase2 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase2.setCaseId(\"sample_id_2\");\n+        molecularProfileCase2.setMolecularProfileId(\"test2_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet1 = new ArrayList<>();\n+        molecularProfileCaseSet1.add(molecularProfileCase1);\n+        molecularProfileCaseSet1.add(molecularProfileCase2);\n+\n+        MolecularProfileCaseIdentifier molecularProfileCase3 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase3.setCaseId(\"sample_id_3\");\n+        molecularProfileCase3.setMolecularProfileId(\"test3_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase4 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase4.setCaseId(\"sample_id_4\");\n+        molecularProfileCase4.setMolecularProfileId(\"test4_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet2 = new ArrayList<>();\n+        molecularProfileCaseSet2.add(molecularProfileCase3);\n+        molecularProfileCaseSet2.add(molecularProfileCase4);\n+\n+        Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<String, List<MolecularProfileCaseIdentifier>>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4ODE1MA==", "bodyText": "Any reason you're not diamond typing this? Makes code completion a little easier in some IDEs\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private AlterationEnrichmentUtil alterationEnrichmentUtil;\n          \n          \n            \n                private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480388150", "createdAt": "2020-08-31T20:43:39Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.Silent.class)\n+public class StructuralVariantEnrichmentServiceImplTest extends BaseServiceImplTest {\n+\n+    @InjectMocks\n+    private StructuralVariantEnrichmentServiceImpl structuralVariantEnrichmentService;\n+\n+    @Mock\n+    private StructuralVariantService structuralVariantService;\n+    @Mock\n+    private AlterationEnrichmentUtil alterationEnrichmentUtil;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4OTMwMA==", "bodyText": "Adding control flow to your tests can be dangerous, mostly because a former coworker of mine may appear and ask you \"who is testing your tests?\", but I think this is fine.", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480389300", "createdAt": "2020-08-31T20:45:59Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.Silent.class)\n+public class StructuralVariantEnrichmentServiceImplTest extends BaseServiceImplTest {\n+\n+    @InjectMocks\n+    private StructuralVariantEnrichmentServiceImpl structuralVariantEnrichmentService;\n+\n+    @Mock\n+    private StructuralVariantService structuralVariantService;\n+    @Mock\n+    private AlterationEnrichmentUtil alterationEnrichmentUtil;\n+\n+    @Test\n+    public void getMutationEnrichments() throws Exception {\n+        // create set1, set2 list of entities\n+        MolecularProfileCaseIdentifier molecularProfileCase1 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase1.setCaseId(\"sample_id_1\");\n+        molecularProfileCase1.setMolecularProfileId(\"test1_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase2 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase2.setCaseId(\"sample_id_2\");\n+        molecularProfileCase2.setMolecularProfileId(\"test2_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet1 = new ArrayList<>();\n+        molecularProfileCaseSet1.add(molecularProfileCase1);\n+        molecularProfileCaseSet1.add(molecularProfileCase2);\n+\n+        MolecularProfileCaseIdentifier molecularProfileCase3 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase3.setCaseId(\"sample_id_3\");\n+        molecularProfileCase3.setMolecularProfileId(\"test3_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase4 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase4.setCaseId(\"sample_id_4\");\n+        molecularProfileCase4.setMolecularProfileId(\"test4_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet2 = new ArrayList<>();\n+        molecularProfileCaseSet2.add(molecularProfileCase3);\n+        molecularProfileCaseSet2.add(molecularProfileCase4);\n+\n+        Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<String, List<MolecularProfileCaseIdentifier>>();\n+        groupMolecularProfileCaseSets.put(\"altered group\", molecularProfileCaseSet1);\n+        groupMolecularProfileCaseSets.put(\"unaltered group\", molecularProfileCaseSet2);\n+\n+        for (String molecularProfileId : groupMolecularProfileCaseSets.keySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5MDkxMA==", "bodyText": "I'm glad this is getting removed, because this whole ID swap seems a bit janky. Can you explain why this is necessary, and what change in the future will obsolete this approach?", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480390910", "createdAt": "2020-08-31T20:49:24Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantServiceImpl.java", "diffHunk": "@@ -131,4 +109,30 @@\n         return countByGenes;\n     }\n \n+    @Override\n+    public List<StructuralVariantCountByGene> getPatientCountInMultipleMolecularProfiles(\n+            List<String> molecularProfileIds, List<String> patientIds, List<Integer> entrezGeneIds,\n+            boolean includeFrequency, boolean includeMissingAlterationsFromGenePanel) {\n+\n+        List<StructuralVariantCountByGene> countByGenes = structuralVariantRepository\n+                .getPatientCountInMultipleMolecularProfiles(molecularProfileIds, patientIds, entrezGeneIds);\n+\n+        // TODO: Remove once fusions are removed from mutation table\n+        if (CollectionUtils.isEmpty(countByGenes)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5MTcwNQ==", "bodyText": "All the cool kids are doing it like this now:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .entrySet().stream().collect(Collectors.toMap(entry -> entry.getKey(), entry -> {\n          \n          \n            \n                            .entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey, entry -> {", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480391705", "createdAt": "2020-08-31T20:51:04Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.service.StructuralVariantEnrichmentService;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class StructuralVariantEnrichmentServiceImpl implements StructuralVariantEnrichmentService {\n+    @Autowired\n+    private StructuralVariantService structuralVariantService;\n+    @Autowired\n+    private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;\n+\n+    @Override\n+    public List<AlterationEnrichment> getStructuralVariantEnrichments(\n+            Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, String enrichmentType)\n+            throws MolecularProfileNotFoundException {\n+\n+        Map<String, List<StructuralVariantCountByGene>> mutationCountsbyEntrezGeneIdAndGroup = molecularProfileCaseSets\n+                .entrySet().stream().collect(Collectors.toMap(entry -> entry.getKey(), entry -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5Mzg0Mw==", "bodyText": "Where is MolecularProfileNotFoundException  thrown? That's a checked exception, so I should get a compiler error when I remove it if something in the function body throws it, but I don't.", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480393843", "createdAt": "2020-08-31T20:55:35Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.service.StructuralVariantEnrichmentService;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class StructuralVariantEnrichmentServiceImpl implements StructuralVariantEnrichmentService {\n+    @Autowired\n+    private StructuralVariantService structuralVariantService;\n+    @Autowired\n+    private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;\n+\n+    @Override\n+    public List<AlterationEnrichment> getStructuralVariantEnrichments(\n+            Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, String enrichmentType)\n+            throws MolecularProfileNotFoundException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5NTA4Mw==", "bodyText": "How many case sets could you potentially be iterating over? Iteratively calling a service seems like it could be a good way to run into performance issues.", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480395083", "createdAt": "2020-08-31T20:57:56Z", "author": {"login": "Luke-Sikina"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.service.StructuralVariantEnrichmentService;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class StructuralVariantEnrichmentServiceImpl implements StructuralVariantEnrichmentService {\n+    @Autowired\n+    private StructuralVariantService structuralVariantService;\n+    @Autowired\n+    private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;\n+\n+    @Override\n+    public List<AlterationEnrichment> getStructuralVariantEnrichments(\n+            Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, String enrichmentType)\n+            throws MolecularProfileNotFoundException {\n+\n+        Map<String, List<StructuralVariantCountByGene>> mutationCountsbyEntrezGeneIdAndGroup = molecularProfileCaseSets\n+                .entrySet().stream().collect(Collectors.toMap(entry -> entry.getKey(), entry -> {\n+                    // set value of each group to list of MutationCountByGene\n+                    List<String> molecularProfileIds = new ArrayList<>();\n+                    List<String> caseIds = new ArrayList<>();\n+\n+                    entry.getValue().forEach(molecularProfileCase -> {\n+                        molecularProfileIds.add(molecularProfileCase.getMolecularProfileId());\n+                        caseIds.add(molecularProfileCase.getCaseId());\n+                    });\n+\n+                    if (enrichmentType.equals(\"SAMPLE\")) {\n+                        return structuralVariantService.getSampleCountInMultipleMolecularProfiles(molecularProfileIds, caseIds,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 42}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf", "author": {"user": {"login": "kalletlak", "name": "Karthik K"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/8f334a4e109f04f8730fb7292c90f681af5072bf", "committedDate": "2020-08-28T15:33:00Z", "message": "Add structural variant enrichment api"}, "afterCommit": {"oid": "fada7246400c6e74d8edbd994837c54e5c0a0734", "author": {"user": {"login": "kalletlak", "name": "Karthik K"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/fada7246400c6e74d8edbd994837c54e5c0a0734", "committedDate": "2020-09-01T14:00:28Z", "message": "Add new structural variant enrichment api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2OTI4MzQ4", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#pullrequestreview-486928348", "createdAt": "2020-09-11T15:54:58Z", "commit": {"oid": "fada7246400c6e74d8edbd994837c54e5c0a0734"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTo1NDo1OFrOHQkhdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNjoxODoxM1rOHQlUIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzNzY1Mg==", "bodyText": "Is there any validation on the MolecularProfileCaseIdentifier that the MolecularProfileID is valid (also for MutationEnrichmentService.java)", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487137652", "createdAt": "2020-09-11T15:54:58Z", "author": {"login": "n1zea144"}, "path": "service/src/main/java/org/cbioportal/service/CopyNumberEnrichmentService.java", "diffHunk": "@@ -1,16 +1,15 @@\n package org.cbioportal.service;\n \n-import org.cbioportal.model.AlterationEnrichment;\n-import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n-\n import java.util.List;\n import java.util.Map;\n \n+import org.cbioportal.model.AlterationEnrichment;\n import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.web.parameter.EnrichmentType;\n \n public interface CopyNumberEnrichmentService {\n \n     List<AlterationEnrichment> getCopyNumberEnrichments(\n             Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, List<Integer> alterationTypes,\n-            String enrichmentType) throws MolecularProfileNotFoundException;\n+            EnrichmentType enrichmentType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fada7246400c6e74d8edbd994837c54e5c0a0734"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzODUzMw==", "bodyText": "Minor, but missing newline below.", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487138533", "createdAt": "2020-09-11T15:56:24Z", "author": {"login": "n1zea144"}, "path": "service/src/main/java/org/cbioportal/service/StructuralVariantService.java", "diffHunk": "@@ -23,17 +23,21 @@\n \n package org.cbioportal.service;\n \n+import java.util.List;\n+\n import org.cbioportal.model.StructuralVariant;\n import org.cbioportal.model.StructuralVariantCountByGene;\n \n-import java.util.List;\n-\n public interface StructuralVariantService {\n \n-    List<StructuralVariant> fetchStructuralVariants(List<String> molecularProfileIds, \n-            List<Integer> entrezGeneIds, List<String> sampleIds);\n+    List<StructuralVariant> fetchStructuralVariants(List<String> molecularProfileIds, List<Integer> entrezGeneIds,\n+            List<String> sampleIds);\n \n     List<StructuralVariantCountByGene> getSampleCountInMultipleMolecularProfiles(List<String> molecularProfileIds,\n             List<String> sampleIds, List<Integer> entrezGeneIds, boolean includeFrequency,\n             boolean includeMissingAlterationsFromGenePanel);\n+\n+    List<StructuralVariantCountByGene> getPatientCountInMultipleMolecularProfiles(List<String> molecularProfileIds,\n+            List<String> patientIds, List<Integer> entrezGeneIds, boolean includeFrequency,\n+            boolean includeMissingAlterationsFromGenePanel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fada7246400c6e74d8edbd994837c54e5c0a0734"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE0NzAzNw==", "bodyText": "I hope we haven't missed any TODO tags.", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487147037", "createdAt": "2020-09-11T16:11:38Z", "author": {"login": "n1zea144"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantServiceImpl.java", "diffHunk": "@@ -131,4 +109,30 @@\n         return countByGenes;\n     }\n \n+    @Override\n+    public List<StructuralVariantCountByGene> getPatientCountInMultipleMolecularProfiles(\n+            List<String> molecularProfileIds, List<String> patientIds, List<Integer> entrezGeneIds,\n+            boolean includeFrequency, boolean includeMissingAlterationsFromGenePanel) {\n+\n+        List<StructuralVariantCountByGene> countByGenes = structuralVariantRepository\n+                .getPatientCountInMultipleMolecularProfiles(molecularProfileIds, patientIds, entrezGeneIds);\n+\n+        // TODO: Remove once fusions are removed from mutation table\n+        if (CollectionUtils.isEmpty(countByGenes)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5MDkxMA=="}, "originalCommit": {"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE1MDYyNQ==", "bodyText": "It feels like we have lots of little areas in the backend where sections of code are identical except for a call or two to getPatientXXX/getSampleXXX.  Maybe its ok and introducing some design pattern to address it will only complicate the code...it just never sits well with me (I'm having a deja vu).", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487150625", "createdAt": "2020-09-11T16:18:13Z", "author": {"login": "n1zea144"}, "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantServiceImpl.java", "diffHunk": "@@ -131,4 +109,30 @@\n         return countByGenes;\n     }\n \n+    @Override\n+    public List<StructuralVariantCountByGene> getPatientCountInMultipleMolecularProfiles(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fada7246400c6e74d8edbd994837c54e5c0a0734"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c39202835a89fda1e5297de176f9e49c83c92f66", "author": {"user": {"login": "kalletlak", "name": "Karthik K"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/c39202835a89fda1e5297de176f9e49c83c92f66", "committedDate": "2020-09-11T19:23:06Z", "message": "Add new structural variant enrichment api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fada7246400c6e74d8edbd994837c54e5c0a0734", "author": {"user": {"login": "kalletlak", "name": "Karthik K"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/fada7246400c6e74d8edbd994837c54e5c0a0734", "committedDate": "2020-09-01T14:00:28Z", "message": "Add new structural variant enrichment api"}, "afterCommit": {"oid": "c39202835a89fda1e5297de176f9e49c83c92f66", "author": {"user": {"login": "kalletlak", "name": "Karthik K"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/c39202835a89fda1e5297de176f9e49c83c92f66", "committedDate": "2020-09-11T19:23:06Z", "message": "Add new structural variant enrichment api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3ODI3Mzc3", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#pullrequestreview-487827377", "createdAt": "2020-09-14T14:27:05Z", "commit": {"oid": "c39202835a89fda1e5297de176f9e49c83c92f66"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1674, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}