{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NjQxMjUy", "number": 7743, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDo0MToyNlrOEUMFOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDo0MToyNlrOEUMFOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjA0OTIxOnYy", "diffSide": "RIGHT", "path": "web/src/main/java/org/cbioportal/web/GenericAssayEnrichmentController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDo0MToyNlrOG6VqeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDo0MToyNlrOG6VqeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgyNTUyOA==", "bodyText": "Should we rename this to fetchGenericAssayEnrichments?", "url": "https://github.com/cBioPortal/cbioportal/pull/7743#discussion_r463825528", "createdAt": "2020-07-31T20:41:26Z", "author": {"login": "dippindots"}, "path": "web/src/main/java/org/cbioportal/web/GenericAssayEnrichmentController.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.cbioportal.web;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import javax.validation.Valid;\n+\n+import org.cbioportal.model.GenericAssayEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.service.GenericAssayEnrichmentService;\n+import org.cbioportal.service.exception.GenericAssayNotFoundException;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.web.config.annotation.InternalApi;\n+import org.cbioportal.web.parameter.EnrichmentType;\n+import org.cbioportal.web.parameter.MolecularProfileCasesGroupFilter;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.validation.annotation.Validated;\n+import org.springframework.web.bind.annotation.RequestAttribute;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestMethod;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiParam;\n+import springfox.documentation.annotations.ApiIgnore;\n+\n+@InternalApi\n+@RestController\n+@Validated\n+@Api(tags = \"Generic Assay Enrichments\", description = \" \")\n+public class GenericAssayEnrichmentController {\n+\n+    @Autowired\n+    private GenericAssayEnrichmentService genericEnrichmentService;\n+\n+    @PreAuthorize(\"hasPermission(#involvedCancerStudies, 'Collection<CancerStudyId>', 'read')\")\n+    @RequestMapping(value = \"/generic-assay-enrichments/fetch\",\n+        method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE,\n+        produces = MediaType.APPLICATION_JSON_VALUE)\n+    @ApiOperation(\"Fetch expression enrichments in a molecular profile\")\n+    public ResponseEntity<List<GenericAssayEnrichment>> fetchExpressionEnrichments(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58a1359140155d73295fbafa30280a2daf9710c2"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3539, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}