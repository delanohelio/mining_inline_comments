{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MjU5MzIx", "number": 7215, "title": "zscore doc update: two profiles", "bodyText": "Updating the zscore documentation to:\n\nclean up\nadd new profile (all samples as base population)", "createdAt": "2020-02-24T22:16:37Z", "url": "https://github.com/cBioPortal/cbioportal/pull/7215", "merged": true, "mergeCommit": {"oid": "bf87df87927660ac201fc2aab3ab7ae209bd0106"}, "closed": true, "closedAt": "2020-03-10T20:50:46Z", "author": {"login": "yichaoS"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJzE2BgFqTM2NzQ2NTI0Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMRirLAFqTM3MTkwMDc4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NDY1MjQy", "url": "https://github.com/cBioPortal/cbioportal/pull/7215#pullrequestreview-367465242", "createdAt": "2020-03-02T19:27:43Z", "commit": {"oid": "04d0fa126d43cf8cc555045c741d9ae1a1759160"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOToyNzo0NFrOFwsStQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOTo0MDo1MlrOFwss_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwMTY1Mw==", "bodyText": "I worry that this wording might confuse a user into thinking that z-scores will be generated as part of the import process. How about rephrasing the second sentence to:\nYou can calculate z-scores with your own preferred method, or use one of the cBioPortal provided approaches:\n\nconvertExpressionZscores.pl applies Method 1 (diploid samples as base population)\nNormalizeExpressionLevels.py applies Method 2 (all samples as base population)", "url": "https://github.com/cBioPortal/cbioportal/pull/7215#discussion_r386601653", "createdAt": "2020-03-02T19:27:44Z", "author": {"login": "tmazor"}, "path": "docs/Z-Score-normalization-script.md", "diffHunk": "@@ -5,31 +5,54 @@ For some data types, when uploading to cBioPortal, it is currently necessary to\n Please keep in mind that the z-scores are calculated using only patient data. Hence, overexpressed in this case implies higher expression than the average patient. Also, the source data on which the z-score data is based does not necessarily follow the normal distribution. If your data does not follow the normal distribution, the z-score threshold is less reliable and will result in more false positives or false negatives. You can consider log transforming your value before calculating z-scores to improve this. However, even the logged values may not follow the normal distribution, especially if the data is bimodal.\n \n Currently, the cBioPortal team is woking on a solution that will allow the user to decide whether they want to use zscores, or log values or zscore of log values in the frontend. Furthermore, the team is also working on functionality to be able to use healthy samples in the calculations. \n- \n-### How to proceed\n-cBioPortal expects z-score normalization to take place per gene. You can produce this extra z-score file yourself, or let cBioPortal do it for your input files by using `convertExpressionZscores.pl`. Most information that now follows was taken from the comments in\u00a0`convertExpressionZscores.pl`. We've also added an example of the calculation and example of running the program below.\n+\n \n ## The cBioPortal convertExpressionZscores method\n Given expression and Copy Number Variation data for a set of samples (patients), generate normalized expression values.\n \n-Each **gene** is normalized separately. First, the expression distribution for unaltered copies of the gene is estimated by calculating the mean and variance of the expression values for samples in which the gene is diploid (i.e. value is \"0\" as reported by [discrete CNA data](File-Formats.md#discrete-copy-number-data)). We call this the unaltered distribution.\u00a0If the gene has no diploid samples, then its normalized expression is reported as NA. Otherwise, for every sample, the gene's normalized expression is reported as\n+Each **gene** is normalized separately. \n+\n+We currently have two profiles for generating z-scores using two different base population:\n+\n+- Distribution based on **diploid** samples only: The expression distribution for unaltered copies of the gene is estimated by calculating the mean and variance of the expression values for samples in which the gene is diploid (i.e. value is \"0\" as reported by [discrete CNA data](File-Formats.md#discrete-copy-number-data)). We call this the unaltered distribution.\u00a0If the gene has no diploid samples, then its normalized expression is reported as NA. \n+\n+- Distribution based on **all** samples: The expression distribution of the gene\n+is estimated by calculating the mean and variance of the expression values for samples whose values are not Null, NA or NaN. If the gene has samples whose expression values are Null, NaN or 'NA', then its normalized expression is reported as NA.\n+\n+Otherwise when valid expression values exist, with both profiles, for every sample, the gene's normalized expression is reported as\n \n ```\n (r - mu)/sigma\n ```\n \n-where `r` is the raw expression value, and `mu` and `sigma` are the mean and standard deviation of the unaltered distribution, respectively.\n+where `r` is the raw expression value, and `mu` and `sigma` are the mean and standard deviation of the base population, respectively.\n+\n+### How to proceed\n+cBioPortal expects z-score normalization to take place per gene. You can produce this extra z-score file yourself, or let cBioPortal do it for your input files by using `convertExpressionZscores.pl` (Method 1, diploid samples as base population) OR `NormalizeExpressionLevels.py` (Method 2, all samples as base population). Examples of the calculation and running the programs are below.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04d0fa126d43cf8cc555045c741d9ae1a1759160"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwNTYxMA==", "bodyText": "Given the edits in this PR, this header should probably change to something more generic like \"Calculating Z-scores\"", "url": "https://github.com/cBioPortal/cbioportal/pull/7215#discussion_r386605610", "createdAt": "2020-03-02T19:35:16Z", "author": {"login": "tmazor"}, "path": "docs/Z-Score-normalization-script.md", "diffHunk": "@@ -5,31 +5,54 @@ For some data types, when uploading to cBioPortal, it is currently necessary to\n Please keep in mind that the z-scores are calculated using only patient data. Hence, overexpressed in this case implies higher expression than the average patient. Also, the source data on which the z-score data is based does not necessarily follow the normal distribution. If your data does not follow the normal distribution, the z-score threshold is less reliable and will result in more false positives or false negatives. You can consider log transforming your value before calculating z-scores to improve this. However, even the logged values may not follow the normal distribution, especially if the data is bimodal.\n \n Currently, the cBioPortal team is woking on a solution that will allow the user to decide whether they want to use zscores, or log values or zscore of log values in the frontend. Furthermore, the team is also working on functionality to be able to use healthy samples in the calculations. \n- \n-### How to proceed\n-cBioPortal expects z-score normalization to take place per gene. You can produce this extra z-score file yourself, or let cBioPortal do it for your input files by using `convertExpressionZscores.pl`. Most information that now follows was taken from the comments in\u00a0`convertExpressionZscores.pl`. We've also added an example of the calculation and example of running the program below.\n+\n \n ## The cBioPortal convertExpressionZscores method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04d0fa126d43cf8cc555045c741d9ae1a1759160"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwODM4Mg==", "bodyText": "This header confused me at first. Maybe call it something like \"Algorithms & Implementation\"? Also you have both algorithm & implementation sections for convertExpressionZscores but only one for NormalizeExpressionLevels", "url": "https://github.com/cBioPortal/cbioportal/pull/7215#discussion_r386608382", "createdAt": "2020-03-02T19:40:52Z", "author": {"login": "tmazor"}, "path": "docs/Z-Score-normalization-script.md", "diffHunk": "@@ -5,31 +5,54 @@ For some data types, when uploading to cBioPortal, it is currently necessary to\n Please keep in mind that the z-scores are calculated using only patient data. Hence, overexpressed in this case implies higher expression than the average patient. Also, the source data on which the z-score data is based does not necessarily follow the normal distribution. If your data does not follow the normal distribution, the z-score threshold is less reliable and will result in more false positives or false negatives. You can consider log transforming your value before calculating z-scores to improve this. However, even the logged values may not follow the normal distribution, especially if the data is bimodal.\n \n Currently, the cBioPortal team is woking on a solution that will allow the user to decide whether they want to use zscores, or log values or zscore of log values in the frontend. Furthermore, the team is also working on functionality to be able to use healthy samples in the calculations. \n- \n-### How to proceed\n-cBioPortal expects z-score normalization to take place per gene. You can produce this extra z-score file yourself, or let cBioPortal do it for your input files by using `convertExpressionZscores.pl`. Most information that now follows was taken from the comments in\u00a0`convertExpressionZscores.pl`. We've also added an example of the calculation and example of running the program below.\n+\n \n ## The cBioPortal convertExpressionZscores method\n Given expression and Copy Number Variation data for a set of samples (patients), generate normalized expression values.\n \n-Each **gene** is normalized separately. First, the expression distribution for unaltered copies of the gene is estimated by calculating the mean and variance of the expression values for samples in which the gene is diploid (i.e. value is \"0\" as reported by [discrete CNA data](File-Formats.md#discrete-copy-number-data)). We call this the unaltered distribution.\u00a0If the gene has no diploid samples, then its normalized expression is reported as NA. Otherwise, for every sample, the gene's normalized expression is reported as\n+Each **gene** is normalized separately. \n+\n+We currently have two profiles for generating z-scores using two different base population:\n+\n+- Distribution based on **diploid** samples only: The expression distribution for unaltered copies of the gene is estimated by calculating the mean and variance of the expression values for samples in which the gene is diploid (i.e. value is \"0\" as reported by [discrete CNA data](File-Formats.md#discrete-copy-number-data)). We call this the unaltered distribution.\u00a0If the gene has no diploid samples, then its normalized expression is reported as NA. \n+\n+- Distribution based on **all** samples: The expression distribution of the gene\n+is estimated by calculating the mean and variance of the expression values for samples whose values are not Null, NA or NaN. If the gene has samples whose expression values are Null, NaN or 'NA', then its normalized expression is reported as NA.\n+\n+Otherwise when valid expression values exist, with both profiles, for every sample, the gene's normalized expression is reported as\n \n ```\n (r - mu)/sigma\n ```\n \n-where `r` is the raw expression value, and `mu` and `sigma` are the mean and standard deviation of the unaltered distribution, respectively.\n+where `r` is the raw expression value, and `mu` and `sigma` are the mean and standard deviation of the base population, respectively.\n+\n+### How to proceed\n+cBioPortal expects z-score normalization to take place per gene. You can produce this extra z-score file yourself, or let cBioPortal do it for your input files by using `convertExpressionZscores.pl` (Method 1, diploid samples as base population) OR `NormalizeExpressionLevels.py` (Method 2, all samples as base population). Examples of the calculation and running the programs are below.\n \n ## Parameters\n \n+### `convertExpressionZscores.pl`\n+\n `<copy_number_file> <expression_file> <output_file> <normal_sample_suffix> <[min_number_of_diploids]>`\n \n - `<copy_number_file>` : the [discrete copy number (CNA) file](File-Formats.md#discrete-copy-number-data) \n - `<expression_file>` : the [expression (exp) data file](File-Formats.md#expression-data). \n - `<output_file>` : the output file to be generated\n - `<normal_sample_suffix>` : use this to identify which of your samples are \"normal\" samples (if any). E.g. normal TCGA samples have a suffix \"-11\". Set it to some dummy value, e.g. \"NONE\", if you have no normal samples in your data.\n \n-## convertExpressionZscores Transformation Algorithm\u00a0\n+### `NormalizeExpressionLevels.py`\n+\n+`-i <expression_file> -o <output_file>`\n+\n+- `<expression_file>` : the [expression (exp) data file](File-Formats.md#expression-data).\n+- `<output_file>` : the output file to be generated\n+- We require the mRNA expression data to be log transformed before calculating zscores on them. If the data is not already log tranformed use the `-l` option to calculate log base 2 of the expression values.\n+\n+## Transformation Algorithm\u00a0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04d0fa126d43cf8cc555045c741d9ae1a1759160"}, "originalPosition": 54}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e312256f7372ef22d6fc934534d8363305feab1a", "author": {"user": {"login": "rmadupuri", "name": "Ramya Madupuri"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/e312256f7372ef22d6fc934534d8363305feab1a", "committedDate": "2020-03-02T21:10:54Z", "message": "reviewed and separated the method contents"}, "afterCommit": {"oid": "bf6a17e92d9a39660b33731a77de9f821eae880c", "author": {"user": {"login": "rmadupuri", "name": "Ramya Madupuri"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/bf6a17e92d9a39660b33731a77de9f821eae880c", "committedDate": "2020-03-02T22:30:24Z", "message": "reviewed and separated the method contents"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bf6a17e92d9a39660b33731a77de9f821eae880c", "author": {"user": {"login": "rmadupuri", "name": "Ramya Madupuri"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/bf6a17e92d9a39660b33731a77de9f821eae880c", "committedDate": "2020-03-02T22:30:24Z", "message": "reviewed and separated the method contents"}, "afterCommit": {"oid": "bd13fb231fcc104dbc6c6f570ac3db66285b73cb", "author": {"user": {"login": "rmadupuri", "name": "Ramya Madupuri"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/bd13fb231fcc104dbc6c6f570ac3db66285b73cb", "committedDate": "2020-03-02T22:46:37Z", "message": "reviewed and separated the method contents"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd13fb231fcc104dbc6c6f570ac3db66285b73cb", "author": {"user": {"login": "rmadupuri", "name": "Ramya Madupuri"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/bd13fb231fcc104dbc6c6f570ac3db66285b73cb", "committedDate": "2020-03-02T22:46:37Z", "message": "reviewed and separated the method contents"}, "afterCommit": {"oid": "f0a749c63ec67a0a1d49f4b151d2e6eddc5ab1c1", "author": {"user": {"login": "yichaoS", "name": "Yichao Sun"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/f0a749c63ec67a0a1d49f4b151d2e6eddc5ab1c1", "committedDate": "2020-03-02T22:50:21Z", "message": "zscore doc update: method part\nzscore doc update: added running command examples\nzscore doc update: added data example\nzscore doc update: added link to input exp file\nzscore doc update: moved illustration of using -l to paramters section\nz-score doc update: added original exp in data exmaple for new zscore profile\nz-score doc update: update format\nreviewed and separated the method contents"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "039816270fd2466bd28b2927833669d77169f441", "author": {"user": {"login": "yichaoS", "name": "Yichao Sun"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/039816270fd2466bd28b2927833669d77169f441", "committedDate": "2020-03-02T22:59:33Z", "message": "zscore doc update: method part\nzscore doc update: added running command examples\nzscore doc update: added data example\nzscore doc update: added link to input exp file\nzscore doc update: moved illustration of using -l to paramters section\nz-score doc update: added original exp in data exmaple for new zscore profile\nz-score doc update: update format\nreviewed and separated the method contents"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0a749c63ec67a0a1d49f4b151d2e6eddc5ab1c1", "author": {"user": {"login": "yichaoS", "name": "Yichao Sun"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/f0a749c63ec67a0a1d49f4b151d2e6eddc5ab1c1", "committedDate": "2020-03-02T22:50:21Z", "message": "zscore doc update: method part\nzscore doc update: added running command examples\nzscore doc update: added data example\nzscore doc update: added link to input exp file\nzscore doc update: moved illustration of using -l to paramters section\nz-score doc update: added original exp in data exmaple for new zscore profile\nz-score doc update: update format\nreviewed and separated the method contents"}, "afterCommit": {"oid": "039816270fd2466bd28b2927833669d77169f441", "author": {"user": {"login": "yichaoS", "name": "Yichao Sun"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/039816270fd2466bd28b2927833669d77169f441", "committedDate": "2020-03-02T22:59:33Z", "message": "zscore doc update: method part\nzscore doc update: added running command examples\nzscore doc update: added data example\nzscore doc update: added link to input exp file\nzscore doc update: moved illustration of using -l to paramters section\nz-score doc update: added original exp in data exmaple for new zscore profile\nz-score doc update: update format\nreviewed and separated the method contents"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5df0c34578767be70b6b99bf143fdebe4c7d778", "author": {"user": {"login": "rmadupuri", "name": "Ramya Madupuri"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/b5df0c34578767be70b6b99bf143fdebe4c7d778", "committedDate": "2020-03-03T15:55:53Z", "message": "Separated the two methods and added links to scripts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea8aafd4901cdfa40cee1b1c74065c5d170121d1", "author": {"user": {"login": "rmadupuri", "name": "Ramya Madupuri"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/ea8aafd4901cdfa40cee1b1c74065c5d170121d1", "committedDate": "2020-03-03T15:58:11Z", "message": "Added line break"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MjMwOTEx", "url": "https://github.com/cBioPortal/cbioportal/pull/7215#pullrequestreview-368230911", "createdAt": "2020-03-03T18:44:47Z", "commit": {"oid": "ea8aafd4901cdfa40cee1b1c74065c5d170121d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxODo0NDo0N1rOFxR_7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxODo0NDo0N1rOFxR_7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIxOTQzOQ==", "bodyText": "Sorry I didn't catch this the first time, but in OncoPrint we have shifted to using \"high\" and \"low\" rather than \"over/under-expressed\" (see: http://bit.ly/2wnevrA). It might be good to use that same terminology in this document.", "url": "https://github.com/cBioPortal/cbioportal/pull/7215#discussion_r387219439", "createdAt": "2020-03-03T18:44:47Z", "author": {"login": "tmazor"}, "path": "docs/Z-Score-normalization-script.md", "diffHunk": "@@ -5,22 +5,32 @@ For some data types, when uploading to cBioPortal, it is currently necessary to\n Please keep in mind that the z-scores are calculated using only patient data. Hence, overexpressed in this case implies higher expression than the average patient. Also, the source data on which the z-score data is based does not necessarily follow the normal distribution. If your data does not follow the normal distribution, the z-score threshold is less reliable and will result in more false positives or false negatives. You can consider log transforming your value before calculating z-scores to improve this. However, even the logged values may not follow the normal distribution, especially if the data is bimodal.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea8aafd4901cdfa40cee1b1c74065c5d170121d1"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18e9a0d2faf84698d57a8291281ceff4b7d532d0", "author": {"user": {"login": "rmadupuri", "name": "Ramya Madupuri"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/18e9a0d2faf84698d57a8291281ceff4b7d532d0", "committedDate": "2020-03-03T21:17:59Z", "message": "Updated introduction to use high/low rather than over/under-expressed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxOTAwNzgw", "url": "https://github.com/cBioPortal/cbioportal/pull/7215#pullrequestreview-371900780", "createdAt": "2020-03-10T12:19:26Z", "commit": {"oid": "18e9a0d2faf84698d57a8291281ceff4b7d532d0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1707, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}