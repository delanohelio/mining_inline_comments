{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MjU4Nzcy", "number": 7973, "title": "Update validator for generic assay binary and categorical data", "bodyText": "Fix #7932\nOnly need to update validator for different data type, importer should use the same one.\n\nRename previous validator to GenericAssayContinuousValidator\nUpdate validator for generic assay binary and categorical data\nAdd unit tests for all three datatypes\nUpdate File-Formats.md\n\nRef: RFC can be found here: #7920", "createdAt": "2020-10-15T17:19:03Z", "url": "https://github.com/cBioPortal/cbioportal/pull/7973", "merged": true, "mergeCommit": {"oid": "b67d26b1672187e28117255fe5999b2b965f76de"}, "closed": true, "closedAt": "2020-10-26T22:12:09Z", "author": {"login": "dippindots"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdS1lnyABqjM4ODI4NzA4MTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWWZ8UgBqjM5MjE0NjMzNzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e54e6025efc00b363788e621a394f8e91e7d97a", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/1e54e6025efc00b363788e621a394f8e91e7d97a", "committedDate": "2020-10-15T17:16:08Z", "message": "update tests"}, "afterCommit": {"oid": "42acccb659378c75590d902297a56590ba3ec3fa", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/42acccb659378c75590d902297a56590ba3ec3fa", "committedDate": "2020-10-15T17:52:37Z", "message": "update tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "42acccb659378c75590d902297a56590ba3ec3fa", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/42acccb659378c75590d902297a56590ba3ec3fa", "committedDate": "2020-10-15T17:52:37Z", "message": "update tests"}, "afterCommit": {"oid": "9b43e5e2ff30e7029298fd38553c88e00fd12ee3", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/9b43e5e2ff30e7029298fd38553c88e00fd12ee3", "committedDate": "2020-10-15T19:00:10Z", "message": "update tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b43e5e2ff30e7029298fd38553c88e00fd12ee3", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/9b43e5e2ff30e7029298fd38553c88e00fd12ee3", "committedDate": "2020-10-15T19:00:10Z", "message": "update tests"}, "afterCommit": {"oid": "97004a8cfaea970828339c294f3a39af303df09f", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/97004a8cfaea970828339c294f3a39af303df09f", "committedDate": "2020-10-16T00:57:13Z", "message": "generic assay binary data and categorical data validator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97004a8cfaea970828339c294f3a39af303df09f", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/97004a8cfaea970828339c294f3a39af303df09f", "committedDate": "2020-10-16T00:57:13Z", "message": "generic assay binary data and categorical data validator"}, "afterCommit": {"oid": "f8c3da2e5a68cd98582b9984d2a2b9241b128636", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/f8c3da2e5a68cd98582b9984d2a2b9241b128636", "committedDate": "2020-10-16T02:11:36Z", "message": "generic assay binary data and categorical data validator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f8c3da2e5a68cd98582b9984d2a2b9241b128636", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/f8c3da2e5a68cd98582b9984d2a2b9241b128636", "committedDate": "2020-10-16T02:11:36Z", "message": "generic assay binary data and categorical data validator"}, "afterCommit": {"oid": "508403a06c51c512a4a7a16cf8ba2747c0bb0ae8", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/508403a06c51c512a4a7a16cf8ba2747c0bb0ae8", "committedDate": "2020-10-16T03:26:08Z", "message": "generic assay binary data and categorical data validator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "508403a06c51c512a4a7a16cf8ba2747c0bb0ae8", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/508403a06c51c512a4a7a16cf8ba2747c0bb0ae8", "committedDate": "2020-10-16T03:26:08Z", "message": "generic assay binary data and categorical data validator"}, "afterCommit": {"oid": "fefa150024a079be81ee969614959ae275c4efa6", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/fefa150024a079be81ee969614959ae275c4efa6", "committedDate": "2020-10-16T04:31:40Z", "message": "generic assay binary data and categorical data validator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fefa150024a079be81ee969614959ae275c4efa6", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/fefa150024a079be81ee969614959ae275c4efa6", "committedDate": "2020-10-16T04:31:40Z", "message": "generic assay binary data and categorical data validator"}, "afterCommit": {"oid": "669316a00f68da77ad3626fd0927262782d9b2ae", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/669316a00f68da77ad3626fd0927262782d9b2ae", "committedDate": "2020-10-16T14:46:32Z", "message": "generic assay binary data and categorical data validator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "669316a00f68da77ad3626fd0927262782d9b2ae", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/669316a00f68da77ad3626fd0927262782d9b2ae", "committedDate": "2020-10-16T14:46:32Z", "message": "generic assay binary data and categorical data validator"}, "afterCommit": {"oid": "087b6e27982b596b3975a7a35a0a5768b0b8ce37", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/087b6e27982b596b3975a7a35a0a5768b0b8ce37", "committedDate": "2020-10-16T15:33:18Z", "message": "generic assay binary data and categorical data validator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14438bb3ebe38f48e16eba70abcad7ab9afd3757", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/14438bb3ebe38f48e16eba70abcad7ab9afd3757", "committedDate": "2020-10-19T16:59:31Z", "message": "update document"}, "afterCommit": {"oid": "7ee4b02a12b71c970d0304deb44d37f6ce7e93b6", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/7ee4b02a12b71c970d0304deb44d37f6ce7e93b6", "committedDate": "2020-10-19T18:13:01Z", "message": "update document"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ee4b02a12b71c970d0304deb44d37f6ce7e93b6", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/7ee4b02a12b71c970d0304deb44d37f6ce7e93b6", "committedDate": "2020-10-19T18:13:01Z", "message": "update document"}, "afterCommit": {"oid": "a48900aadb74e7774e425e891e0e04b9f9c14bd3", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/a48900aadb74e7774e425e891e0e04b9f9c14bd3", "committedDate": "2020-10-19T18:13:41Z", "message": "update document"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a48900aadb74e7774e425e891e0e04b9f9c14bd3", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/a48900aadb74e7774e425e891e0e04b9f9c14bd3", "committedDate": "2020-10-19T18:13:41Z", "message": "update document"}, "afterCommit": {"oid": "0cbfb831ba229459c01580900140d0f48db6db61", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/0cbfb831ba229459c01580900140d0f48db6db61", "committedDate": "2020-10-19T18:41:54Z", "message": "generic assay binary data and categorical data validator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0cbfb831ba229459c01580900140d0f48db6db61", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/0cbfb831ba229459c01580900140d0f48db6db61", "committedDate": "2020-10-19T18:41:54Z", "message": "generic assay binary data and categorical data validator"}, "afterCommit": {"oid": "09e7045d4268606e252bed1f8e68e01738138937", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/09e7045d4268606e252bed1f8e68e01738138937", "committedDate": "2020-10-19T20:34:41Z", "message": "generic assay binary data and categorical data validator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Nzc5Mzcy", "url": "https://github.com/cBioPortal/cbioportal/pull/7973#pullrequestreview-516779372", "createdAt": "2020-10-26T13:34:07Z", "commit": {"oid": "09e7045d4268606e252bed1f8e68e01738138937"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NzgwNjcw", "url": "https://github.com/cBioPortal/cbioportal/pull/7973#pullrequestreview-516780670", "createdAt": "2020-10-26T13:35:30Z", "commit": {"oid": "09e7045d4268606e252bed1f8e68e01738138937"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMzozNTozMVrOHoPwQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMzozNTozMVrOHoPwQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk2MzIwMw==", "bodyText": "Just a small question. Are the binary values fixed?", "url": "https://github.com/cBioPortal/cbioportal/pull/7973#discussion_r511963203", "createdAt": "2020-10-26T13:35:31Z", "author": {"login": "rmadupuri"}, "path": "core/src/main/scripts/importer/validateData.py", "diffHunk": "@@ -4361,56 +4358,113 @@ class GenericAssayValidator(GenericAssayWiseFileValidator):\n     # (1) Cell contains a value without decimals and is not prefixed by \">\"; value appears to be truncated but lacks \">\" truncation indicator\n     def checkValue(self, value, col_index):\n         \"\"\"Check a value in a sample column.\"\"\"\n+        stripped_value = value.strip()\n+        # if the value is prefixed with '>' or '<' remove this prefix\n+        # prior to evaluation of the numeric value\n+        hasTruncSymbol = re.match(\"^[><]\", stripped_value)\n+        stripped_value = re.sub(r\"^[><]\\s*\",\"\", stripped_value)\n+\n+        # do not check null values\n+        # 'NA' is an allowed value. No further validations apply.\n+        if stripped_value in self.NULL_VALUES:\n+            return\n \n         # value is not defined (empty cell)\n-        stripped_value = value.strip()\n-        if stripped_value == \"\":\n-            self.logger.error(\"Cell is empty. A response value value is expected. Use 'NA' to indicate missing values.\",\n+        if len(stripped_value) == 0:\n+            self.logger.error(\"Cell is empty. A value is expected. Use 'NA' to indicate missing values.\",\n                 extra={'line_number': self.line_number,\n                 'column_number': col_index + 1,\n                 'cause': value})\n             return\n \n-        # 'NA' is an allowed value. No further validations apply.\n-        if stripped_value == 'NA':\n-            return\n-\n-        # if the value is prefixed with '>' or '<' remove this prefix\n-        # prior to evaluation of the numeric value\n-        hasTruncSymbol = re.match(\"^[><]\", stripped_value)\n-        stripped_value = re.sub(r\"^[><]\\s*\",\"\", stripped_value)\n-\n         try:\n             numeric_value = float(stripped_value)\n         except ValueError:\n-            self.logger.error(\"Value cannot be interpreted as a floating point number and is not valid response value.\",\n+            self.logger.error(\"Value cannot be interpreted as a floating point number and is not valid value.\",\n                 extra={'line_number': self.line_number,\n                 'column_number': col_index + 1,\n                 'cause': value})\n             return\n \n         if math.isnan(numeric_value):\n-            self.logger.error(\"Value is NaN, therefore, not a valid response value.\",\n+            self.logger.error(\"Value is NaN, therefore, not a valid value.\",\n                 extra={'line_number': self.line_number,\n                 'column_number': col_index + 1,\n                 'cause': value})\n             return\n \n         if math.isinf(numeric_value):\n-            self.logger.error(\"Value is infinite and, therefore, not a valid response value.\",\n+            self.logger.error(\"Value is infinite and, therefore, not a valid value.\",\n                 extra={'line_number': self.line_number,\n                 'column_number': col_index + 1,\n                 'cause': value})\n             return\n \n         if numeric_value % 1 == 0 and not hasTruncSymbol:\n-            self.logger.warning(\"Value has no decimals and may represent an invalid response value.\",\n+            self.logger.warning(\"Value has no decimals and may represent an invalid value.\",\n                 extra={'line_number': self.line_number,\n                 'column_number': col_index + 1,\n                 'cause': value})\n \n         return\n \n+class GenericAssayCategoricalValidator(GenericAssayWiseFileValidator):\n+\n+    \"\"\" Validator for files containing generic assay categorical values.\n+    \"\"\"\n+    def __init__(self, *args, **kwargs):\n+        \"\"\"Initialize the instance attributes of the data file validator.\"\"\"\n+        super(GenericAssayCategoricalValidator, self).__init__(*args, **kwargs)\n+\n+    # (1) non-empty string\n+    # (2) NA cell value is allowed; means value was not tested on a sample\n+\n+    def checkValue(self, value, col_index):\n+        \"\"\"Check a value in a sample column.\"\"\"\n+        stripped_value = value.strip()\n+        # do not check null values\n+        # 'NA' is an allowed value. No further validations apply.\n+        if stripped_value in self.NULL_VALUES:\n+            return\n+        # non-empty string\n+        if len(stripped_value) == 0:\n+            self.logger.error(\"Cell is empty. A categorical value is expected. Use 'NA' to indicate missing values.\",\n+                extra={'line_number': self.line_number,\n+                'column_number': col_index + 1,\n+                'cause': value})\n+\n+        return\n+\n+class GenericAssayBinaryValidator(GenericAssayWiseFileValidator):\n+\n+    \"\"\" Validator for files containing generic assay binary values.\n+    \"\"\"\n+    def __init__(self, *args, **kwargs):\n+        \"\"\"Initialize the instance attributes of the data file validator.\"\"\"\n+        super(GenericAssayBinaryValidator, self).__init__(*args, **kwargs)\n+\n+    # (1) values defined in ALLOWED_VALUES\n+    # (2) NA cell value is allowed; means value was not tested on a sample\n+\n+    ALLOWED_VALUES = ['yes', 'no', 'true', 'false'] + GenericAssayWiseFileValidator.NULL_VALUES", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e7045d4268606e252bed1f8e68e01738138937"}, "originalPosition": 155}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Nzg2MTg0", "url": "https://github.com/cBioPortal/cbioportal/pull/7973#pullrequestreview-516786184", "createdAt": "2020-10-26T13:41:17Z", "commit": {"oid": "09e7045d4268606e252bed1f8e68e01738138937"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMzo0MToxN1rOHoQARA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMzo0MToxN1rOHoQARA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk2NzMwMA==", "bodyText": "Just to be consistent with how we define datatype in other profiles, can we update the line to datatype: LIMIT-VALUE, CATEGORICAL or BINARY?", "url": "https://github.com/cBioPortal/cbioportal/pull/7973#discussion_r511967300", "createdAt": "2020-10-26T13:41:17Z", "author": {"login": "rmadupuri"}, "path": "docs/File-Formats.md", "diffHunk": "@@ -1298,15 +1298,15 @@ The cells contain the p-value for the GSVA score: A real number, between 0.0 and\n YAML or JSON file which contains extra information about the cancer study. No compulsory fields are required for this file (free-form). To enable this feature, you need to add a line in the cancer study meta file with `tags_file:` followed the YAML/JSON file name. The information on the YAML or JSON file will be displayed in a table when mousing over a tag logo in the studies on the query page.\n \n ## Generic Assay\n-Generic Assay is a two dimensional matrix generalized to capture non-genetic measurements per sample. Instead of a gene per row and a sample per column, a Generic Assay file contains a generic entity per row and a sample per column. A generic entity is defined by the data curator and generally means something other than a gene. Some examples include, treatment response or mutational signatures. For each generic entity - sample pair, a real number represents a captured measurement.\n+Generic Assay is a two dimensional matrix generalized to capture non-genetic measurements per sample. Instead of a gene per row and a sample per column, a Generic Assay file contains a generic entity per row and a sample per column. A generic entity is defined by the data curator and generally means something other than a gene. Some examples include, treatment response or mutational signatures. For each generic entity - sample pair, a (real number / text / binary value) represents a captured measurement.\n \n ### Generic Assay meta file\n The generic assay metadata file should contain the following fields:\n ```\n cancer_study_identifier: Same value as specified in meta file of the study\n genetic_alteration_type: GENERIC_ASSAY\n generic_assay_type: <GENERIC_ASSAY_TYPE>, e.g., \"TREATMENT_RESPONSE\" or \"MUTATIONAL_SIGNATURE\"\n-datatype: LIMIT-VALUE\n+datatype: value from LIMIT-VALUE / CATEGORICAL / BINARY", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e7045d4268606e252bed1f8e68e01738138937"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38dc58b115939d2d7ddd7ea34b19c29f10d09311", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/38dc58b115939d2d7ddd7ea34b19c29f10d09311", "committedDate": "2020-10-26T15:49:22Z", "message": "generic assay binary data and categorical data validator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09e7045d4268606e252bed1f8e68e01738138937", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/09e7045d4268606e252bed1f8e68e01738138937", "committedDate": "2020-10-19T20:34:41Z", "message": "generic assay binary data and categorical data validator"}, "afterCommit": {"oid": "38dc58b115939d2d7ddd7ea34b19c29f10d09311", "author": {"user": {"login": "dippindots", "name": "Gaofei Zhao"}}, "url": "https://github.com/cBioPortal/cbioportal/commit/38dc58b115939d2d7ddd7ea34b19c29f10d09311", "committedDate": "2020-10-26T15:49:22Z", "message": "generic assay binary data and categorical data validator"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1571, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}