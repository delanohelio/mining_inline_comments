{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4ODA3ODA3", "number": 6968, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QxODo1MzoyN1rODVug-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjowOTozMVrODWS0rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MTA4Nzk0OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/mskcc/cbio/portal/scripts/TestIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QxODo1MzoyN1rOFaG5XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNTo0NDo0MFrOFa9R0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyMDI4NQ==", "bodyText": "there is a comment right above this:\n// Is there a separate fusion profile? -> false\n\nthe test is now changed to actually check if a separate fusion profile exists, so that comment should prolly be updated if this is indeed what we want", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r362920285", "createdAt": "2020-01-03T18:53:27Z", "author": {"login": "inodb"}, "path": "core/src/test/java/org/mskcc/cbio/portal/scripts/TestIntegrationTest.java", "diffHunk": "@@ -184,7 +184,7 @@ public void testLoadStudyEs0() throws Throwable {\n             geneticProfileStableIds.add(\"study_es_0_fusion\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57babf99549b6c763ed4bf7b6eac957eccd79d68"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1ODQ5Nw==", "bodyText": "hi @inodb, thank you for the review. Let me see if I can explain well.\nSince fusions are currently stored in the mutation_event table, fusions have to use the mutation profile in order to get the data inserted into the database, which was okay during the time when we did not have the fusion gene table in the summary view. But now, since we added the fusion gene table in the summary view, it always shows up regardless if a study has fusion data or not, because the frontend uses genetic profiles to control the visibility of gene tables (please see issue reported by Tali). To fix the issue, we decided to give fusion data its own genetic profile, which is a STRUCTURAL_VARIANT genetic type profile with a _fusion stableId\nmysql> select distinct genetic_alteration_type from genetic_profile;\n+-------------------------+\n| genetic_alteration_type |\n+-------------------------+\n| COPY_NUMBER_ALTERATION  |\n| STRUCTURAL_VARIANT      |\n| MUTATION_EXTENDED       |\n| PROTEIN_LEVEL           |\n| METHYLATION             |\n| MRNA_EXPRESSION         |\n+-------------------------+\n6 rows in set (0.00 sec)\n\nmysql> select * from genetic_profile where stable_id like '%_fusion';\n+--------------------+------------------------+-----------------+-------------------------+----------+---------+-------------+------------------------------+-----------------+------------+--------------------+\n| GENETIC_PROFILE_ID | STABLE_ID              | CANCER_STUDY_ID | GENETIC_ALTERATION_TYPE | DATATYPE | NAME    | DESCRIPTION | SHOW_PROFILE_IN_ANALYSIS_TAB | PIVOT_THRESHOLD | SORT_ORDER | GENERIC_ASSAY_TYPE |\n+--------------------+------------------------+-----------------+-------------------------+----------+---------+-------------+------------------------------+-----------------+------------+--------------------+\n|                 45 | msk_impact_2017_fusion |              16 | STRUCTURAL_VARIANT      | FUSION   | Fusions | Fusions.    |                            1 |            NULL | NULL       | NULL               |\n|                122 | breast_msk_2018_fusion |              39 | STRUCTURAL_VARIANT      | FUSION   | Fusions | Fusions.    |                            1 |            NULL | NULL       | NULL               |\n+--------------------+------------------------+-----------------+-------------------------+----------+---------+-------------+------------------------------+-----------------+------------+--------------------+\n2 rows in set (0.00 sec)", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363058497", "createdAt": "2020-01-04T22:31:19Z", "author": {"login": "khzhu"}, "path": "core/src/test/java/org/mskcc/cbio/portal/scripts/TestIntegrationTest.java", "diffHunk": "@@ -184,7 +184,7 @@ public void testLoadStudyEs0() throws Throwable {\n             geneticProfileStableIds.add(\"study_es_0_fusion\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyMDI4NQ=="}, "originalCommit": {"oid": "57babf99549b6c763ed4bf7b6eac957eccd79d68"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1OTExNw==", "bodyText": "if you take a look at the migration script we used _structural_variants STABLE_ID for fusion data (we should use _fusion instead to be consistent). The STABLE_ID does not really matter, what is important is that we give fusion data a STRUCTURAL_VARIANT type genetic profile. I used _fusion and structural_variants STABLE_ID to distinguish old style fusion data and new structural variant data. For instance, if we query genetic profiles for msk-impact-2017, which is the only study that has both fusions and structural variants, we will get\nmysql> select cs.cancer_study_identifier, gp.stable_id, gp.genetic_alteration_type, gp.datatype, gp.name from genetic_profile gp join cancer_study cs on gp.CANCER_STUDY_ID = cs.CANCER_STUDY_ID where gp.CANCER_STUDY_ID = 16 and GENETIC_ALTERATION_TYPE = 'STRUCTURAL_VARIANT';\n+-------------------------+-------------------------------------+-------------------------+----------+-----------------------+\n| cancer_study_identifier | stable_id                           | genetic_alteration_type | datatype | name                  |\n+-------------------------+-------------------------------------+-------------------------+----------+-----------------------+\n| msk_impact_2017         | msk_impact_2017_structural_variants | STRUCTURAL_VARIANT      | SV       | mskimpact2017 SV Data |\n| msk_impact_2017         | msk_impact_2017_fusion              | STRUCTURAL_VARIANT      | FUSION   | Fusions               |\n+-------------------------+-------------------------------------+-------------------------+----------+-----------------------+\n2 rows in set (0.00 sec)", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363059117", "createdAt": "2020-01-04T22:51:06Z", "author": {"login": "khzhu"}, "path": "core/src/test/java/org/mskcc/cbio/portal/scripts/TestIntegrationTest.java", "diffHunk": "@@ -184,7 +184,7 @@ public void testLoadStudyEs0() throws Throwable {\n             geneticProfileStableIds.add(\"study_es_0_fusion\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyMDI4NQ=="}, "originalCommit": {"oid": "57babf99549b6c763ed4bf7b6eac957eccd79d68"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxMTI4MQ==", "bodyText": "Thanks @khzhu - that explains a lot", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363811281", "createdAt": "2020-01-07T15:44:40Z", "author": {"login": "inodb"}, "path": "core/src/test/java/org/mskcc/cbio/portal/scripts/TestIntegrationTest.java", "diffHunk": "@@ -184,7 +184,7 @@ public void testLoadStudyEs0() throws Throwable {\n             geneticProfileStableIds.add(\"study_es_0_fusion\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyMDI4NQ=="}, "originalCommit": {"oid": "57babf99549b6c763ed4bf7b6eac957eccd79d68"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0Njk1NTU2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mskcc/cbio/portal/util/GeneticProfileReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNTo0MzozNlrOFa9PyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzoxNzo0MVrOFbAEoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxMDc2MA==", "bodyText": "I guess this relies on this part? \n  \n    \n      cbioportal/core/src/main/java/org/mskcc/cbio/portal/util/GeneticProfileReader.java\n    \n    \n        Lines 290 to 301\n      in\n      7ae3828\n    \n    \n    \n    \n\n        \n          \n           // Workaround to import fusion data as mutation genetic profile. This way fusion meta file can contain 'stable_id: fusion'. \n        \n\n        \n          \n           // The validator will check for 'stable_id: fusion', and this section in the importer \n        \n\n        \n          \n           // will convert it to 'stable_id: mutations'. See https://github.com/cBioPortal/cbioportal/pull/2506 \n        \n\n        \n          \n           // TODO: This should be removed when other parts of cBioPortal have implemented support for a separate fusion profile\". \n        \n\n        \n          \n           if (stableId.equals(cancerStudyIdentifier + \"_fusion\")) { \n        \n\n        \n          \n               String newStableId = cancerStudyIdentifier + \"_mutations\"; \n        \n\n        \n          \n               GeneticProfile existingGeneticProfile = DaoGeneticProfile.getGeneticProfileByStableId(newStableId); \n        \n\n        \n          \n               if (existingGeneticProfile == null) { \n        \n\n        \n          \n                   throw new IllegalArgumentException(\"Wrong order: FUSION data should be loaded after MUTATION data\"); \n        \n\n        \n          \n               } \n        \n\n        \n          \n               stableId = newStableId; \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nit's a little funky but I guess we can remove all the FUSION conditional once we remove FUSION data and only have STRUCTURAL_VARIANT GeneticAlterationType:\nhttps://github.com/cBioPortal/cbioportal/blob/master/core/src/main/java/org/mskcc/cbio/portal/model/GeneticAlterationType.java#L42-L43", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363810760", "createdAt": "2020-01-07T15:43:36Z", "author": {"login": "inodb"}, "path": "core/src/main/java/org/mskcc/cbio/portal/util/GeneticProfileReader.java", "diffHunk": "@@ -82,6 +82,12 @@ public static GeneticProfile loadGeneticProfile(File file) throws IOException, D\n                throw new RuntimeException(\"Error: genetic_profile record found with same Stable ID as the one used in your data:  \"\n                        + existingGeneticProfile.getStableId() + \". Remove the existing genetic_profile record first.\");\n             } else if (geneticProfile.getDatatype().equals(\"FUSION\")) {\n+                // populate the structural variant genetic profile for fusions\n+                GeneticProfile gp = new GeneticProfile(geneticProfile);\n+                gp.setGeneticAlterationType(GeneticAlterationType.STRUCTURAL_VARIANT);\n+                gp.setStableId(gp.getStableId().replace(\"mutations\",\"fusion\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg1NzA1Ng==", "bodyText": "That is right, @inodb, till we completely deprecate the Fusion genetic type, it might take a while.", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363857056", "createdAt": "2020-01-07T17:17:41Z", "author": {"login": "khzhu"}, "path": "core/src/main/java/org/mskcc/cbio/portal/util/GeneticProfileReader.java", "diffHunk": "@@ -82,6 +82,12 @@ public static GeneticProfile loadGeneticProfile(File file) throws IOException, D\n                throw new RuntimeException(\"Error: genetic_profile record found with same Stable ID as the one used in your data:  \"\n                        + existingGeneticProfile.getStableId() + \". Remove the existing genetic_profile record first.\");\n             } else if (geneticProfile.getDatatype().equals(\"FUSION\")) {\n+                // populate the structural variant genetic profile for fusions\n+                GeneticProfile gp = new GeneticProfile(geneticProfile);\n+                gp.setGeneticAlterationType(GeneticAlterationType.STRUCTURAL_VARIANT);\n+                gp.setStableId(gp.getStableId().replace(\"mutations\",\"fusion\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxMDc2MA=="}, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NzAwMDEzOnYy", "diffSide": "RIGHT", "path": "db-scripts/src/main/resources/migration.sql", "isResolved": true, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNTo1Njo1N1rOFa9rlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNzoxNzoxMlrOFc-SQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxNzg3OQ==", "bodyText": "Thanks for updating this! Just one issue: we have already applied this migration to one production database.\nI guess I can rerun this thing?\nFrom: #6945 (comment)\ndelete from genetic_profile where STABLE_ID like '%_structural_variants%'\ndelete from sample_list_list where list_id in (select list_id from sample_list where CATEGORY = 'all_cases_with_sv_data')\ndelete from sample_list where CATEGORY = 'all_cases_with_sv_data'\n\nAnother thing - now that you've updated the sample service to support studies with a case list. Should we just remove this whole part of filling in case lists? I think it would be more comprehensible if running the migration on old studies with FUSION datafiles results in the same state of the database as importing the data. Right now from what I understand the migration creates a case list, but importing a study with FUSION data only adds a new profile.", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363817879", "createdAt": "2020-01-07T15:56:57Z", "author": {"login": "inodb"}, "path": "db-scripts/src/main/resources/migration.sql", "diffHunk": "@@ -806,7 +806,7 @@ AS (\n     WHERE MUTATION_TYPE = 'fusion'\n );\n INSERT INTO genetic_profile(STABLE_ID, CANCER_STUDY_ID, GENETIC_ALTERATION_TYPE, DATATYPE, NAME, DESCRIPTION, SHOW_PROFILE_IN_ANALYSIS_TAB)\n-SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_structural_variants'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0\n+SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_fusion'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgyNzkyOA==", "bodyText": "UPDATE: added note. Now that I think more about it. We could maybe get rid of the required migration and changes to the importer altogether if we change the service layer to return a _fusion profile if there are fusions in the mutation table for that study. I don't think it would affect performance too much to find those. The advantage of that approach is that we're only touching the service layer, so:\n\nno migration necessary\neasier to remove the old FUSION related code since it's limited to only service layer", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363827928", "createdAt": "2020-01-07T16:17:29Z", "author": {"login": "inodb"}, "path": "db-scripts/src/main/resources/migration.sql", "diffHunk": "@@ -806,7 +806,7 @@ AS (\n     WHERE MUTATION_TYPE = 'fusion'\n );\n INSERT INTO genetic_profile(STABLE_ID, CANCER_STUDY_ID, GENETIC_ALTERATION_TYPE, DATATYPE, NAME, DESCRIPTION, SHOW_PROFILE_IN_ANALYSIS_TAB)\n-SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_structural_variants'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0\n+SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_fusion'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxNzg3OQ=="}, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MTIwNw==", "bodyText": "you do not have to remove case list @inodb, just update the genetic_profile.STABLE_ID using following statement\nUPDATE genetic_profile\n    INNER JOIN cancer_study ON cancer_study.CANCER_STUDY_ID = genetic_profile.CANCER_STUDY_ID\nSET genetic_profile.STABLE_ID = CONCAT(CANCER_STUDY_IDENTIFIER, '_fusion')\nWHERE genetic_profile.STABLE_ID like '%_structural_variants%' AND genetic_profile.datatype = 'FUSION' AND genetic_profile.genetic_alteration_type = 'STRUCTURAL_VARIANT'", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363871207", "createdAt": "2020-01-07T17:51:04Z", "author": {"login": "khzhu"}, "path": "db-scripts/src/main/resources/migration.sql", "diffHunk": "@@ -806,7 +806,7 @@ AS (\n     WHERE MUTATION_TYPE = 'fusion'\n );\n INSERT INTO genetic_profile(STABLE_ID, CANCER_STUDY_ID, GENETIC_ALTERATION_TYPE, DATATYPE, NAME, DESCRIPTION, SHOW_PROFILE_IN_ANALYSIS_TAB)\n-SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_structural_variants'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0\n+SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_fusion'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxNzg3OQ=="}, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MzAxOQ==", "bodyText": "Another thing - now that you've updated the sample service to support studies with a case list. Should we just remove this whole part of filling in case lists?\n\ngood catch, @inodb! we do not need backfilling case lists for fusions any more, but it will not hurt to leave the way as it is now as well.", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363873019", "createdAt": "2020-01-07T17:55:25Z", "author": {"login": "khzhu"}, "path": "db-scripts/src/main/resources/migration.sql", "diffHunk": "@@ -806,7 +806,7 @@ AS (\n     WHERE MUTATION_TYPE = 'fusion'\n );\n INSERT INTO genetic_profile(STABLE_ID, CANCER_STUDY_ID, GENETIC_ALTERATION_TYPE, DATATYPE, NAME, DESCRIPTION, SHOW_PROFILE_IN_ANALYSIS_TAB)\n-SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_structural_variants'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0\n+SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_fusion'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxNzg3OQ=="}, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIwMzcyMQ==", "bodyText": "@khzhu agreed that keeping the case list migration wouldn't affect anything for the user, but for sake of clarity i think it would be cleaner to remove the backfilling. Because the state of the database will differ when you import the study from when you perform the migration. If e.g. somebody works on this code in the future they might assume the case lists to be there based on the migration code\nWhat are your thoughts on removing the migration code & importer code altogether and changing the service layer instead to return a fusion profile if there's fusion data in the mutations table? Avoiding a database migration and importer update might make the rollout process easier", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r364203721", "createdAt": "2020-01-08T12:19:19Z", "author": {"login": "inodb"}, "path": "db-scripts/src/main/resources/migration.sql", "diffHunk": "@@ -806,7 +806,7 @@ AS (\n     WHERE MUTATION_TYPE = 'fusion'\n );\n INSERT INTO genetic_profile(STABLE_ID, CANCER_STUDY_ID, GENETIC_ALTERATION_TYPE, DATATYPE, NAME, DESCRIPTION, SHOW_PROFILE_IN_ANALYSIS_TAB)\n-SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_structural_variants'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0\n+SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_fusion'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxNzg3OQ=="}, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIwMzkyNQ==", "bodyText": "There is ofc some performance cost to this, but it might be minor", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r364203925", "createdAt": "2020-01-08T12:19:58Z", "author": {"login": "inodb"}, "path": "db-scripts/src/main/resources/migration.sql", "diffHunk": "@@ -806,7 +806,7 @@ AS (\n     WHERE MUTATION_TYPE = 'fusion'\n );\n INSERT INTO genetic_profile(STABLE_ID, CANCER_STUDY_ID, GENETIC_ALTERATION_TYPE, DATATYPE, NAME, DESCRIPTION, SHOW_PROFILE_IN_ANALYSIS_TAB)\n-SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_structural_variants'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0\n+SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_fusion'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxNzg3OQ=="}, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU5NTU4Nw==", "bodyText": "hi @inodb , sorry for a late comment.\n\nBecause the state of the database will differ when you import the study from when you perform the migration. If e.g. somebody works on this code in the future they might assume the case lists to be there based on the migration code\n\nagree with you\n\nWhat are your thoughts on removing the migration code & importer code altogether and changing the service layer instead to return a fusion profile if there's fusion data in the mutations table? Avoiding a database migration and importer update might make the rollout process easier\n\nprobably not a good idea I would say. Genetic profile is an ORM object mapped to the genetic_profile entity in the database. Each genetic profile is corresponding to a row in the genetic profile table.", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r364595587", "createdAt": "2020-01-09T07:47:12Z", "author": {"login": "khzhu"}, "path": "db-scripts/src/main/resources/migration.sql", "diffHunk": "@@ -806,7 +806,7 @@ AS (\n     WHERE MUTATION_TYPE = 'fusion'\n );\n INSERT INTO genetic_profile(STABLE_ID, CANCER_STUDY_ID, GENETIC_ALTERATION_TYPE, DATATYPE, NAME, DESCRIPTION, SHOW_PROFILE_IN_ANALYSIS_TAB)\n-SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_structural_variants'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0\n+SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_fusion'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxNzg3OQ=="}, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDgxOTA4Mg==", "bodyText": "@khzhu no worries! Thanks so much for still replying to this \ud83d\ude03 !\nLet's change the migration script to not generate case lists then and leave creation of the fusion profile in there", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r364819082", "createdAt": "2020-01-09T15:56:50Z", "author": {"login": "inodb"}, "path": "db-scripts/src/main/resources/migration.sql", "diffHunk": "@@ -806,7 +806,7 @@ AS (\n     WHERE MUTATION_TYPE = 'fusion'\n );\n INSERT INTO genetic_profile(STABLE_ID, CANCER_STUDY_ID, GENETIC_ALTERATION_TYPE, DATATYPE, NAME, DESCRIPTION, SHOW_PROFILE_IN_ANALYSIS_TAB)\n-SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_structural_variants'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0\n+SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_fusion'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxNzg3OQ=="}, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk5MTMyMQ==", "bodyText": "my pleasure, @inodb . Will make changes. thanks again for the review.", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r364991321", "createdAt": "2020-01-09T22:28:54Z", "author": {"login": "khzhu"}, "path": "db-scripts/src/main/resources/migration.sql", "diffHunk": "@@ -806,7 +806,7 @@ AS (\n     WHERE MUTATION_TYPE = 'fusion'\n );\n INSERT INTO genetic_profile(STABLE_ID, CANCER_STUDY_ID, GENETIC_ALTERATION_TYPE, DATATYPE, NAME, DESCRIPTION, SHOW_PROFILE_IN_ANALYSIS_TAB)\n-SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_structural_variants'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0\n+SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_fusion'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxNzg3OQ=="}, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkyNDkzMA==", "bodyText": "Hi @inodb , migration script updated. please let me know if there is anything else need to be addressed. Thank you!", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r365924930", "createdAt": "2020-01-13T17:17:12Z", "author": {"login": "khzhu"}, "path": "db-scripts/src/main/resources/migration.sql", "diffHunk": "@@ -806,7 +806,7 @@ AS (\n     WHERE MUTATION_TYPE = 'fusion'\n );\n INSERT INTO genetic_profile(STABLE_ID, CANCER_STUDY_ID, GENETIC_ALTERATION_TYPE, DATATYPE, NAME, DESCRIPTION, SHOW_PROFILE_IN_ANALYSIS_TAB)\n-SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_structural_variants'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0\n+SELECT CONCAT(CANCER_STUDY_IDENTIFIER, '_fusion'), CANCER_STUDY_ID, 'STRUCTURAL_VARIANT','SV','Fusions','Fusions',0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxNzg3OQ=="}, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NzAzMjI2OnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/impl/SampleServiceImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjowNzo1OFrOFa-AnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzo1NzowN1rOFbBF2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgyMzI2MA==", "bodyText": "might be good to have a comment here. Something like:\n/*\nTODO: Eventually all studies with STRUCTURAL_VARIANT data should have case lists, so there should always be an entry in `structuralVariantSampleIdsMap`. This case is to support old `FUSION` data in the mutations table that don't have case lists. In that case we assume any sample that has been sequenced to have been profiled for fusions as well\n*/\n\nMakes sense?", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363823260", "createdAt": "2020-01-07T16:07:58Z", "author": {"login": "inodb"}, "path": "service/src/main/java/org/cbioportal/service/impl/SampleServiceImpl.java", "diffHunk": "@@ -193,13 +201,17 @@ private void processSamples(List<Sample> samples, String projection) {\n             \n             Set<Integer> samplesWithCopyNumberSegMap = new HashSet<>();\n             samplesWithCopyNumberSegMap.addAll(samplesWithCopyNumberSeg);\n-           \n+\n             samples.forEach(sample -> {\n                 sample.setSequenced(sequencedSampleIdsMap.get(sample.getCancerStudyIdentifier())\n                     .contains(sample.getStableId()));\n                 sample.setCopyNumberSegmentPresent(samplesWithCopyNumberSegMap.contains(sample.getInternalId()));\n-                if (!structuralVariantSampleIdsMap.isEmpty()) {\n-                    sample.setProfiledForFusions(structuralVariantSampleIdsMap.get(sample.getCancerStudyIdentifier()).contains(sample.getStableId()));\n+                if (studiesProfiledWithSVs.contains(sample.getCancerStudyIdentifier())) {\n+                    if (!structuralVariantSampleIdsMap.get(sample.getCancerStudyIdentifier()).isEmpty()) {\n+                        sample.setProfiledForFusions(structuralVariantSampleIdsMap.get(sample.getCancerStudyIdentifier()).contains(sample.getStableId()));\n+                    } else {\n+                        sample.setProfiledForFusions(sequencedSampleIdsMap.get(sample.getCancerStudyIdentifier()).contains(sample.getStableId()));\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgyMzgzNw==", "bodyText": "It would be good to create an issue as well pointing to these various parts in the code where FUSION data should be cleaned up. I think by having FUSION specifically as a comment it will be easy to find for whoever tries to remove all FUSION related parts from the code.", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363823837", "createdAt": "2020-01-07T16:09:13Z", "author": {"login": "inodb"}, "path": "service/src/main/java/org/cbioportal/service/impl/SampleServiceImpl.java", "diffHunk": "@@ -193,13 +201,17 @@ private void processSamples(List<Sample> samples, String projection) {\n             \n             Set<Integer> samplesWithCopyNumberSegMap = new HashSet<>();\n             samplesWithCopyNumberSegMap.addAll(samplesWithCopyNumberSeg);\n-           \n+\n             samples.forEach(sample -> {\n                 sample.setSequenced(sequencedSampleIdsMap.get(sample.getCancerStudyIdentifier())\n                     .contains(sample.getStableId()));\n                 sample.setCopyNumberSegmentPresent(samplesWithCopyNumberSegMap.contains(sample.getInternalId()));\n-                if (!structuralVariantSampleIdsMap.isEmpty()) {\n-                    sample.setProfiledForFusions(structuralVariantSampleIdsMap.get(sample.getCancerStudyIdentifier()).contains(sample.getStableId()));\n+                if (studiesProfiledWithSVs.contains(sample.getCancerStudyIdentifier())) {\n+                    if (!structuralVariantSampleIdsMap.get(sample.getCancerStudyIdentifier()).isEmpty()) {\n+                        sample.setProfiledForFusions(structuralVariantSampleIdsMap.get(sample.getCancerStudyIdentifier()).contains(sample.getStableId()));\n+                    } else {\n+                        sample.setProfiledForFusions(sequencedSampleIdsMap.get(sample.getCancerStudyIdentifier()).contains(sample.getStableId()));\n+                    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgyMzI2MA=="}, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3Mzc1Mg==", "bodyText": "good idea, @inodb!", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363873752", "createdAt": "2020-01-07T17:57:07Z", "author": {"login": "khzhu"}, "path": "service/src/main/java/org/cbioportal/service/impl/SampleServiceImpl.java", "diffHunk": "@@ -193,13 +201,17 @@ private void processSamples(List<Sample> samples, String projection) {\n             \n             Set<Integer> samplesWithCopyNumberSegMap = new HashSet<>();\n             samplesWithCopyNumberSegMap.addAll(samplesWithCopyNumberSeg);\n-           \n+\n             samples.forEach(sample -> {\n                 sample.setSequenced(sequencedSampleIdsMap.get(sample.getCancerStudyIdentifier())\n                     .contains(sample.getStableId()));\n                 sample.setCopyNumberSegmentPresent(samplesWithCopyNumberSegMap.contains(sample.getInternalId()));\n-                if (!structuralVariantSampleIdsMap.isEmpty()) {\n-                    sample.setProfiledForFusions(structuralVariantSampleIdsMap.get(sample.getCancerStudyIdentifier()).contains(sample.getStableId()));\n+                if (studiesProfiledWithSVs.contains(sample.getCancerStudyIdentifier())) {\n+                    if (!structuralVariantSampleIdsMap.get(sample.getCancerStudyIdentifier()).isEmpty()) {\n+                        sample.setProfiledForFusions(structuralVariantSampleIdsMap.get(sample.getCancerStudyIdentifier()).contains(sample.getStableId()));\n+                    } else {\n+                        sample.setProfiledForFusions(sequencedSampleIdsMap.get(sample.getCancerStudyIdentifier()).contains(sample.getStableId()));\n+                    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgyMzI2MA=="}, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NzAzNjYxOnYy", "diffSide": "RIGHT", "path": "service/src/test/java/org/cbioportal/service/impl/SampleServiceImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjowOTozMVrOFa-DcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjowOTozMVrOFa-DcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgyMzk4NA==", "bodyText": "nice test", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363823984", "createdAt": "2020-01-07T16:09:31Z", "author": {"login": "inodb"}, "path": "service/src/test/java/org/cbioportal/service/impl/SampleServiceImplTest.java", "diffHunk": "@@ -259,6 +263,15 @@ public void fetchSamplesDetailed() throws Exception {\n             .thenReturn(new ArrayList<>());\n         Mockito.when(copyNumberSegmentRepository.fetchSamplesWithCopyNumberSegments(Mockito.anyListOf(String.class),\n             Mockito.anyListOf(String.class), Mockito.anyString())).thenReturn(expectedInternalIdList);\n+\n+        List<MolecularProfile> expectedMolecularProfileList = new ArrayList<>();\n+        MolecularProfile molecularProfile = new MolecularProfile();\n+        molecularProfile.setCancerStudyIdentifier(STUDY_ID);\n+        molecularProfile.setMolecularAlterationType(MolecularProfile.MolecularAlterationType.STRUCTURAL_VARIANT);\n+        expectedMolecularProfileList.add(molecularProfile);\n+\n+        Mockito.when(molecularProfileRepository.getMolecularProfilesInStudies(Arrays.asList(STUDY_ID), \"DETAILED\"))\n+            .thenReturn(expectedMolecularProfileList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3418, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}