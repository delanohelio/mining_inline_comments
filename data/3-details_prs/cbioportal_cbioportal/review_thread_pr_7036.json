{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1OTg3MTQ5", "number": 7036, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMjowMDoyNVrODaU27g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMDo1NTo0MVrODemlCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4OTMxMzEwOnYy", "diffSide": "RIGHT", "path": "model/src/main/java/org/cbioportal/model/AlterationCountByGene.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMjowMDoyNVrOFhOEBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMjowMDoyNVrOFhOEBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM3NzczMg==", "bodyText": "I don't think this is the ideal way of assigning a default value. It might be better/safer to do this in the function (or sql query) where we generate/map the actual data. Our models should be just a simple representation of the data without any initialization logic.", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r370377732", "createdAt": "2020-01-23T22:00:25Z", "author": {"login": "onursumer"}, "path": "model/src/main/java/org/cbioportal/model/AlterationCountByGene.java", "diffHunk": "@@ -8,9 +8,9 @@\n \n     private Integer entrezGeneId;\n     private String hugoGeneSymbol;\n-    private Integer numberOfAlteredCases;\n+    private Integer numberOfAlteredCases = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5090ce892ae67822bdb57425483cf2ac6d395a64"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNjQ0MjMwOnYy", "diffSide": "RIGHT", "path": "service/src/test/java/org/cbioportal/service/util/ProfiledCasesCounterTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMzozNDoyMlrOFmt4NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxOToyNjo0OFrOFnyogA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0MTg3Nw==", "bodyText": "@kalletlak might be good to add some tests here for groups with no alterations if possible? Or otherwise maybe file an issue that we need a E2E test for it? I'm not sure how our suite of current group comparison e2e tests is looking, maybe we can easily add this one?", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r376141877", "createdAt": "2020-02-06T23:34:22Z", "author": {"login": "inodb"}, "path": "service/src/test/java/org/cbioportal/service/util/ProfiledCasesCounterTest.java", "diffHunk": "@@ -113,7 +113,7 @@ public void calculate() throws Exception {\n         \n         profiledSamplesCounter.calculate(\n                 Arrays.asList(MOLECULAR_PROFILE_ID, MOLECULAR_PROFILE_ID, MOLECULAR_PROFILE_ID),\n-                Arrays.asList(SAMPLE_ID_1, SAMPLE_ID_2, SAMPLE_ID_3), alterationCounts, true);\n+                Arrays.asList(SAMPLE_ID_1, SAMPLE_ID_2, SAMPLE_ID_3), alterationCounts, true, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "783b2f3466eb0b456aeb273dd61dc76c929c1422"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI2ODM1Mg==", "bodyText": "added", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r377268352", "createdAt": "2020-02-10T19:26:48Z", "author": {"login": "kalletlak"}, "path": "service/src/test/java/org/cbioportal/service/util/ProfiledCasesCounterTest.java", "diffHunk": "@@ -113,7 +113,7 @@ public void calculate() throws Exception {\n         \n         profiledSamplesCounter.calculate(\n                 Arrays.asList(MOLECULAR_PROFILE_ID, MOLECULAR_PROFILE_ID, MOLECULAR_PROFILE_ID),\n-                Arrays.asList(SAMPLE_ID_1, SAMPLE_ID_2, SAMPLE_ID_3), alterationCounts, true);\n+                Arrays.asList(SAMPLE_ID_1, SAMPLE_ID_2, SAMPLE_ID_3), alterationCounts, true, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0MTg3Nw=="}, "originalCommit": {"oid": "783b2f3466eb0b456aeb273dd61dc76c929c1422"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDA4NDg1OnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMDozMDowOVrOFn0gtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMDozMDowOVrOFn0gtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI5OTEyNg==", "bodyText": "there should be a space between \"if\" and the open parenthesis", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r377299126", "createdAt": "2020-02-10T20:30:09Z", "author": {"login": "sheridancbio"}, "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "diffHunk": "@@ -69,15 +68,51 @@ public void calculate(List<String> molecularProfileIds, List<String> sampleIds,\n                 for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {\n                     allMatchingGenePanelIds.add(genePanel.getStableId());\n                     totalProfiledCases.addAll(casesWithDataInGenePanel.get(genePanel.getStableId()));\n-                    totalProfiledCases.addAll(casesWithoutPanelData);\n                 }\n+                totalProfiledCases.addAll(casesWithoutPanelData);\n                 alterationCountByGene.setNumberOfProfiledCases(totalProfiledCases.size());\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             } else {\n                 alterationCountByGene.setNumberOfProfiledCases(profiledCasesCount);\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             }\n+            alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n         }\n+        \n+        if(includeMissingAlterationsFromGenePanel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ec38e5a0a299ffd4837d0cbb90bd5f569426474"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDA4NzUzOnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMDozMTowNlrOFn0iWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMTowOTo0M1rOFn1pgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI5OTU0NQ==", "bodyText": "Wouldn't it be simpler to represent this as Set<Integer> genesWithAlteration?\nalso .. two spaces after =", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r377299545", "createdAt": "2020-02-10T20:31:06Z", "author": {"login": "sheridancbio"}, "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "diffHunk": "@@ -69,15 +68,51 @@ public void calculate(List<String> molecularProfileIds, List<String> sampleIds,\n                 for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {\n                     allMatchingGenePanelIds.add(genePanel.getStableId());\n                     totalProfiledCases.addAll(casesWithDataInGenePanel.get(genePanel.getStableId()));\n-                    totalProfiledCases.addAll(casesWithoutPanelData);\n                 }\n+                totalProfiledCases.addAll(casesWithoutPanelData);\n                 alterationCountByGene.setNumberOfProfiledCases(totalProfiledCases.size());\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             } else {\n                 alterationCountByGene.setNumberOfProfiledCases(profiledCasesCount);\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             }\n+            alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n         }\n+        \n+        if(includeMissingAlterationsFromGenePanel) {\n+            Map<Integer, Boolean> genesWithAlteration =  alterationCounts.stream().collect(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ec38e5a0a299ffd4837d0cbb90bd5f569426474"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxNzc2Mg==", "bodyText": "it would be efficient to check if that gene already has alteration at line 87 if its a Map", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r377317762", "createdAt": "2020-02-10T21:09:43Z", "author": {"login": "kalletlak"}, "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "diffHunk": "@@ -69,15 +68,51 @@ public void calculate(List<String> molecularProfileIds, List<String> sampleIds,\n                 for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {\n                     allMatchingGenePanelIds.add(genePanel.getStableId());\n                     totalProfiledCases.addAll(casesWithDataInGenePanel.get(genePanel.getStableId()));\n-                    totalProfiledCases.addAll(casesWithoutPanelData);\n                 }\n+                totalProfiledCases.addAll(casesWithoutPanelData);\n                 alterationCountByGene.setNumberOfProfiledCases(totalProfiledCases.size());\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             } else {\n                 alterationCountByGene.setNumberOfProfiledCases(profiledCasesCount);\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             }\n+            alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n         }\n+        \n+        if(includeMissingAlterationsFromGenePanel) {\n+            Map<Integer, Boolean> genesWithAlteration =  alterationCounts.stream().collect(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI5OTU0NQ=="}, "originalCommit": {"oid": "2ec38e5a0a299ffd4837d0cbb90bd5f569426474"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDA5ODg3OnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMDozNDo1N1rOFn0pMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMDozNDo1N1rOFn0pMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMwMTI5OA==", "bodyText": "two spaces after =", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r377301298", "createdAt": "2020-02-10T20:34:57Z", "author": {"login": "sheridancbio"}, "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "diffHunk": "@@ -69,15 +68,51 @@ public void calculate(List<String> molecularProfileIds, List<String> sampleIds,\n                 for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {\n                     allMatchingGenePanelIds.add(genePanel.getStableId());\n                     totalProfiledCases.addAll(casesWithDataInGenePanel.get(genePanel.getStableId()));\n-                    totalProfiledCases.addAll(casesWithoutPanelData);\n                 }\n+                totalProfiledCases.addAll(casesWithoutPanelData);\n                 alterationCountByGene.setNumberOfProfiledCases(totalProfiledCases.size());\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             } else {\n                 alterationCountByGene.setNumberOfProfiledCases(profiledCasesCount);\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             }\n+            alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n         }\n+        \n+        if(includeMissingAlterationsFromGenePanel) {\n+            Map<Integer, Boolean> genesWithAlteration =  alterationCounts.stream().collect(\n+                    Collectors.toMap(AlterationCountByGene::getEntrezGeneId, x-> true));\n+\n+            geneGenePanelMap.entrySet().forEach(entry -> {\n+                Integer entrezGeneId = entry.getKey();\n+                // add alterationCount object where there are no alterations but have genePanel object\n+                if (!genesWithAlteration.containsKey(entrezGeneId)) {\n+                    AlterationCountByGene alterationCountByGene = null;\n+\n+                    if (alterationCounts.get(0) instanceof MutationCountByGene) {\n+                        alterationCountByGene = new MutationCountByGene();\n+                    } else {\n+                        alterationCountByGene = new CopyNumberCountByGene();\n+                    }\n+\n+                    alterationCountByGene.setEntrezGeneId(entrezGeneId);\n+                    \n+                    Set<String> totalProfiledCases = new HashSet<String>();\n+                    Set<String> allMatchingGenePanelIds =  new HashSet<String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ec38e5a0a299ffd4837d0cbb90bd5f569426474"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDE1OTQ1OnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMDo1NTo0MVrOFn1PiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMTowNjo1MFrOFn1kPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxMTExMw==", "bodyText": "Here we add back into the response those genes which had no mutation events anywhere .. but which were present in some panel that was used in the profiles for this study (meaning ... at least one sample was profiled for that gene)\nThis will recover the records in the cbioportal mutation table which say \"gene X was profiled and zero mutations were found\"", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r377311113", "createdAt": "2020-02-10T20:55:41Z", "author": {"login": "sheridancbio"}, "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "diffHunk": "@@ -69,15 +68,51 @@ public void calculate(List<String> molecularProfileIds, List<String> sampleIds,\n                 for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {\n                     allMatchingGenePanelIds.add(genePanel.getStableId());\n                     totalProfiledCases.addAll(casesWithDataInGenePanel.get(genePanel.getStableId()));\n-                    totalProfiledCases.addAll(casesWithoutPanelData);\n                 }\n+                totalProfiledCases.addAll(casesWithoutPanelData);\n                 alterationCountByGene.setNumberOfProfiledCases(totalProfiledCases.size());\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             } else {\n                 alterationCountByGene.setNumberOfProfiledCases(profiledCasesCount);\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             }\n+            alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n         }\n+        \n+        if(includeMissingAlterationsFromGenePanel) {\n+            Map<Integer, Boolean> genesWithAlteration =  alterationCounts.stream().collect(\n+                    Collectors.toMap(AlterationCountByGene::getEntrezGeneId, x-> true));\n+\n+            geneGenePanelMap.entrySet().forEach(entry -> {\n+                Integer entrezGeneId = entry.getKey();\n+                // add alterationCount object where there are no alterations but have genePanel object\n+                if (!genesWithAlteration.containsKey(entrezGeneId)) {\n+                    AlterationCountByGene alterationCountByGene = null;\n+\n+                    if (alterationCounts.get(0) instanceof MutationCountByGene) {\n+                        alterationCountByGene = new MutationCountByGene();\n+                    } else {\n+                        alterationCountByGene = new CopyNumberCountByGene();\n+                    }\n+\n+                    alterationCountByGene.setEntrezGeneId(entrezGeneId);\n+                    \n+                    Set<String> totalProfiledCases = new HashSet<String>();\n+                    Set<String> allMatchingGenePanelIds =  new HashSet<String>();\n+                    for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {\n+                        allMatchingGenePanelIds.add(genePanel.getStableId());\n+                        totalProfiledCases.addAll(casesWithDataInGenePanel.get(genePanel.getStableId()));\n+                    }\n+                    totalProfiledCases.addAll(casesWithoutPanelData);\n+\n+                    alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n+                    alterationCountByGene.setNumberOfProfiledCases(totalProfiledCases.size());\n+                    alterationCountByGene.setNumberOfAlteredCases(0);\n+\n+                    alterationCounts.add((T) alterationCountByGene);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ec38e5a0a299ffd4837d0cbb90bd5f569426474"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxNjQxMg==", "bodyText": "These genes are not show in study view gene tables. includeMissingAlterationsFromGenePanel is set to false when invoking it from study view controller", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r377316412", "createdAt": "2020-02-10T21:06:50Z", "author": {"login": "kalletlak"}, "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "diffHunk": "@@ -69,15 +68,51 @@ public void calculate(List<String> molecularProfileIds, List<String> sampleIds,\n                 for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {\n                     allMatchingGenePanelIds.add(genePanel.getStableId());\n                     totalProfiledCases.addAll(casesWithDataInGenePanel.get(genePanel.getStableId()));\n-                    totalProfiledCases.addAll(casesWithoutPanelData);\n                 }\n+                totalProfiledCases.addAll(casesWithoutPanelData);\n                 alterationCountByGene.setNumberOfProfiledCases(totalProfiledCases.size());\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             } else {\n                 alterationCountByGene.setNumberOfProfiledCases(profiledCasesCount);\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             }\n+            alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n         }\n+        \n+        if(includeMissingAlterationsFromGenePanel) {\n+            Map<Integer, Boolean> genesWithAlteration =  alterationCounts.stream().collect(\n+                    Collectors.toMap(AlterationCountByGene::getEntrezGeneId, x-> true));\n+\n+            geneGenePanelMap.entrySet().forEach(entry -> {\n+                Integer entrezGeneId = entry.getKey();\n+                // add alterationCount object where there are no alterations but have genePanel object\n+                if (!genesWithAlteration.containsKey(entrezGeneId)) {\n+                    AlterationCountByGene alterationCountByGene = null;\n+\n+                    if (alterationCounts.get(0) instanceof MutationCountByGene) {\n+                        alterationCountByGene = new MutationCountByGene();\n+                    } else {\n+                        alterationCountByGene = new CopyNumberCountByGene();\n+                    }\n+\n+                    alterationCountByGene.setEntrezGeneId(entrezGeneId);\n+                    \n+                    Set<String> totalProfiledCases = new HashSet<String>();\n+                    Set<String> allMatchingGenePanelIds =  new HashSet<String>();\n+                    for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {\n+                        allMatchingGenePanelIds.add(genePanel.getStableId());\n+                        totalProfiledCases.addAll(casesWithDataInGenePanel.get(genePanel.getStableId()));\n+                    }\n+                    totalProfiledCases.addAll(casesWithoutPanelData);\n+\n+                    alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n+                    alterationCountByGene.setNumberOfProfiledCases(totalProfiledCases.size());\n+                    alterationCountByGene.setNumberOfAlteredCases(0);\n+\n+                    alterationCounts.add((T) alterationCountByGene);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxMTExMw=="}, "originalCommit": {"oid": "2ec38e5a0a299ffd4837d0cbb90bd5f569426474"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3428, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}