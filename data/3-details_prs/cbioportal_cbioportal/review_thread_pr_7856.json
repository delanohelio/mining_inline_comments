{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MzU4MjQz", "number": 7856, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo0MzoyNVrOEfn8pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo0MzoyNVrOEfn8pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTk1ODE1OnYy", "diffSide": "RIGHT", "path": "service/src/main/java/org/cbioportal/service/impl/GenericAssayServiceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo0MzoyNVrOHMA13Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo0MzoyNVrOHMA13Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM1ODc0OQ==", "bodyText": "Not important, you could use identity function here\n.collect(Collectors.toMap(Function.identity(), Function.identity()));", "url": "https://github.com/cBioPortal/cbioportal/pull/7856#discussion_r482358749", "createdAt": "2020-09-02T19:43:25Z", "author": {"login": "kalletlak"}, "path": "service/src/main/java/org/cbioportal/service/impl/GenericAssayServiceImpl.java", "diffHunk": "@@ -58,16 +58,22 @@\n                 List<String> stableIdsInMolecularProfiles = genericAssayRepository.getGenericAssayStableIdsByMolecularIds(distinctMolecularProfileIds);\n                 allStableIds.addAll(stableIdsInMolecularProfiles);\n             }\n-        } \n-        if (stableIds != null) {\n-\t\t\tMap<String, String> allStableIdMap = allStableIds\n-\t\t\t\t\t.stream()\n-\t\t\t\t\t.collect(Collectors.toMap(stableId -> stableId, stableId -> stableId));\n-\n-\t\t\tallStableIds = stableIds\n-\t\t\t\t\t.stream()\n-\t\t\t\t\t.filter(stableId -> allStableIdMap.containsKey(stableId))\n-\t\t\t\t\t.collect(Collectors.toSet());\n+            // if stableIds and molecularProfileIds both exist, find the common\n+            if (stableIds != null) {\n+                Map<String, String> allStableIdMap = allStableIds\n+                        .stream()\n+                        .collect(Collectors.toMap(stableId -> stableId, stableId -> stableId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "286bd86e7deff5098ea947ce6402055ab0d991d2"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3563, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}