{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNjI4ODQ0", "number": 432, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjozOToyNFrODqdaKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOToyMTo1NVrODqhY1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODQ4NjE5OnYy", "diffSide": "RIGHT", "path": "org/mozilla/jss/nss/SSL.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjozOToyNFrOF6OEhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjozOToyNFrOF6OEhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU5MjI2Mg==", "bodyText": "@edewata Namely, these checks here. (See this comment)", "url": "https://github.com/dogtagpki/jss/pull/432#discussion_r396592262", "createdAt": "2020-03-23T16:39:24Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/nss/SSL.c", "diffHunk": "@@ -365,6 +438,137 @@ Java_org_mozilla_jss_nss_SSL_SecurityStatus(JNIEnv *env, jclass clazz,\n         issuer, subject);\n }\n \n+JNIEXPORT jobject JNICALL\n+Java_org_mozilla_jss_nss_SSL_GetChannelInfo(JNIEnv *env, jclass clazz,\n+    jobject fd)\n+{\n+    PRFileDesc *real_fd = NULL;\n+    SSLChannelInfo info = { 0 };\n+    jint pV = 0;\n+    jint cS = 0;\n+    jint aKB = 0;\n+    jint kKB = 0;\n+    jlong cT = 0;\n+    jlong lAT = 0;\n+    jlong eT = 0;\n+    jbyteArray sID = NULL;\n+    jint cM = 0;\n+    jboolean eMSU = JNI_FALSE;\n+    jboolean eDA = JNI_FALSE;\n+    jint kT = 0;\n+    jint kG = 0;\n+    jint sC = 0;\n+    jint mA = 0;\n+    jint aT = 0;\n+    jint sS = 0;\n+    jboolean haveNSS334 = JNI_FALSE;\n+    jint oKG = 0;\n+    jboolean r = JNI_FALSE;\n+    jboolean pDC = JNI_FALSE;\n+\n+    PR_ASSERT(env != NULL && fd != NULL);\n+    PR_SetError(0, 0);\n+\n+    if (JSS_PR_getPRFileDesc(env, fd, &real_fd) != PR_SUCCESS) {\n+        return NULL;\n+    }\n+\n+    if (SSL_GetChannelInfo(real_fd, &info, sizeof(info)) != SECSuccess) {\n+        return NULL;\n+    }\n+\n+    pV = info.protocolVersion;\n+    cS = info.cipherSuite;\n+\n+    aKB = info.authKeyBits;\n+    kKB = info.keaKeyBits;\n+\n+    cT = info.creationTime;\n+    lAT = info.lastAccessTime;\n+    eT = info.expirationTime;\n+    sID = JSS_ToByteArray(env, info.sessionID, info.sessionIDLength);\n+\n+    cM = info.compressionMethod;\n+\n+    eMSU = info.extendedMasterSecretUsed;\n+\n+    eDA = info.earlyDataAccepted;\n+\n+    kT = info.keaType;\n+    kG = info.keaGroup;\n+    sC = info.symCipher;\n+    mA = info.macAlgorithm;\n+    aT = info.authType;\n+    sS = info.signatureScheme;\n+\n+#if (NSS_VMAJOR >= 3) && (NSS_VMINOR >= 34)\n+    /* The following fields were added in NSS v3.34 */\n+    haveNSS334 = JNI_TRUE;\n+    oKG = info.originalKeaGroup;\n+    r = info.resumed;\n+    pDC = info.peerDelegCred;\n+#endif\n+\n+    return JSS_NewSSLChannelInfo(env, pV, cS, aKB, kKB, cT, lAT, eT, sID, cM,\n+                                 eMSU, eDA, kT, kG, sC, mA, aT, sS,\n+                                 haveNSS334, oKG, r, pDC);\n+}\n+\n+JNIEXPORT jobject JNICALL\n+Java_org_mozilla_jss_nss_SSL_GetPreliminaryChannelInfo(JNIEnv *env,\n+    jclass clazz, jobject fd)\n+{\n+    PRFileDesc *real_fd = NULL;\n+    SSLPreliminaryChannelInfo info = { 0 };\n+    jlong vS = 0;\n+    jint pV = 0;\n+    jint cS = 0;\n+    jboolean cSED = JNI_FALSE;\n+    jlong mEDS = 0;\n+    jboolean haveNSS343 = JNI_FALSE;\n+    jint zRCS = 0;\n+    jboolean haveNSS348 = JNI_FALSE;\n+    jboolean pDC = JNI_FALSE;\n+    jint aKB = 0;\n+    jint sS = 0;\n+\n+    PR_ASSERT(env != NULL && fd != NULL);\n+    PR_SetError(0, 0);\n+\n+    if (JSS_PR_getPRFileDesc(env, fd, &real_fd) != PR_SUCCESS) {\n+        return NULL;\n+    }\n+\n+    if (SSL_GetPreliminaryChannelInfo(real_fd, &info, sizeof(info)) != SECSuccess) {\n+        return NULL;\n+    }\n+\n+    vS = info.valuesSet;\n+\n+    pV = info.protocolVersion;\n+    cS = info.cipherSuite;\n+\n+    cSED = info.canSendEarlyData;\n+\n+    mEDS = info.maxEarlyDataSize;\n+\n+#if (NSS_VMAJOR >= 3) && (NSS_VMINOR >= 43)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bfbb7a079c68ae71303d6e51738bed07c872a3e"}, "originalPosition": 198}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTEyNzIxOnYy", "diffSide": "RIGHT", "path": "org/mozilla/jss/nss/SSL.c", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOToxODozN1rOF6UeYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDoxNzoyMVrOF6WhsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NzE4NQ==", "bodyText": "Is haveNSS334 still needed? Or should it be renamed to something like haveNSSChannelInfoOriginalKeaGroup since the actual NSS version number is no longer relevant?", "url": "https://github.com/dogtagpki/jss/pull/432#discussion_r396697185", "createdAt": "2020-03-23T19:18:37Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/nss/SSL.c", "diffHunk": "@@ -365,6 +439,142 @@ Java_org_mozilla_jss_nss_SSL_SecurityStatus(JNIEnv *env, jclass clazz,\n         issuer, subject);\n }\n \n+JNIEXPORT jobject JNICALL\n+Java_org_mozilla_jss_nss_SSL_GetChannelInfo(JNIEnv *env, jclass clazz,\n+    jobject fd)\n+{\n+    PRFileDesc *real_fd = NULL;\n+    SSLChannelInfo info = { 0 };\n+    jint pV = 0;\n+    jint cS = 0;\n+    jint aKB = 0;\n+    jint kKB = 0;\n+    jlong cT = 0;\n+    jlong lAT = 0;\n+    jlong eT = 0;\n+    jbyteArray sID = NULL;\n+    jint cM = 0;\n+    jboolean eMSU = JNI_FALSE;\n+    jboolean eDA = JNI_FALSE;\n+    jint kT = 0;\n+    jint kG = 0;\n+    jint sC = 0;\n+    jint mA = 0;\n+    jint aT = 0;\n+    jint sS = 0;\n+    jboolean haveNSS334 = JNI_FALSE;\n+    jint oKG = 0;\n+    jboolean r = JNI_FALSE;\n+    jboolean pDC = JNI_FALSE;\n+\n+    PR_ASSERT(env != NULL && fd != NULL);\n+    PR_SetError(0, 0);\n+\n+    if (JSS_PR_getPRFileDesc(env, fd, &real_fd) != PR_SUCCESS) {\n+        return NULL;\n+    }\n+\n+    if (SSL_GetChannelInfo(real_fd, &info, sizeof(info)) != SECSuccess) {\n+        return NULL;\n+    }\n+\n+    pV = info.protocolVersion;\n+    cS = info.cipherSuite;\n+\n+    aKB = info.authKeyBits;\n+    kKB = info.keaKeyBits;\n+\n+    cT = info.creationTime;\n+    lAT = info.lastAccessTime;\n+    eT = info.expirationTime;\n+    sID = JSS_ToByteArray(env, info.sessionID, info.sessionIDLength);\n+\n+    cM = info.compressionMethod;\n+\n+    eMSU = info.extendedMasterSecretUsed;\n+\n+    eDA = info.earlyDataAccepted;\n+\n+    kT = info.keaType;\n+    kG = info.keaGroup;\n+    sC = info.symCipher;\n+    mA = info.macAlgorithm;\n+    aT = info.authType;\n+    sS = info.signatureScheme;\n+\n+#ifdef HAVE_NSS_CHANNEL_INFO_ORIGINAL_KEA_GROUP\n+    /* The following fields were added in NSS v3.34 and are detected\n+     * via feature detection in CMake. */\n+    haveNSS334 = JNI_TRUE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad2e40cc70d8e410e24aacc1b8ef6199d362cd2"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcwNTkyOA==", "bodyText": "I think the name is fine as-is. It is supposed to be present in that version or later. Also, in the SSLPreliminaryChannelInfo, it would conflict with the query field's implementation:\n\n  \n    \n      jss/org/mozilla/jss/nss/SSLPreliminaryChannelInfo.java\n    \n    \n        Lines 219 to 228\n      in\n      eeeeaa5\n    \n    \n    \n    \n\n        \n          \n               /** \n        \n\n        \n          \n                * Check this to see whether the value of zeroRttCipherSuite can be used. \n        \n\n        \n          \n                * \n        \n\n        \n          \n                * Returns true if the handshake has progressed far enough for the value \n        \n\n        \n          \n                * of the field to be determined. \n        \n\n        \n          \n                */ \n        \n\n        \n          \n               public boolean have0RTTCipherSuite() { \n        \n\n        \n          \n                   long ssl_preinfo_0rtt_cipher_suite = 1 << 2; \n        \n\n        \n          \n                   return haveField(ssl_preinfo_0rtt_cipher_suite) && haveNSS343; \n        \n\n        \n          \n               } \n        \n    \n  \n\n\nSo I'd perfer to leave it as-is, to show the separation.", "url": "https://github.com/dogtagpki/jss/pull/432#discussion_r396705928", "createdAt": "2020-03-23T19:34:11Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/nss/SSL.c", "diffHunk": "@@ -365,6 +439,142 @@ Java_org_mozilla_jss_nss_SSL_SecurityStatus(JNIEnv *env, jclass clazz,\n         issuer, subject);\n }\n \n+JNIEXPORT jobject JNICALL\n+Java_org_mozilla_jss_nss_SSL_GetChannelInfo(JNIEnv *env, jclass clazz,\n+    jobject fd)\n+{\n+    PRFileDesc *real_fd = NULL;\n+    SSLChannelInfo info = { 0 };\n+    jint pV = 0;\n+    jint cS = 0;\n+    jint aKB = 0;\n+    jint kKB = 0;\n+    jlong cT = 0;\n+    jlong lAT = 0;\n+    jlong eT = 0;\n+    jbyteArray sID = NULL;\n+    jint cM = 0;\n+    jboolean eMSU = JNI_FALSE;\n+    jboolean eDA = JNI_FALSE;\n+    jint kT = 0;\n+    jint kG = 0;\n+    jint sC = 0;\n+    jint mA = 0;\n+    jint aT = 0;\n+    jint sS = 0;\n+    jboolean haveNSS334 = JNI_FALSE;\n+    jint oKG = 0;\n+    jboolean r = JNI_FALSE;\n+    jboolean pDC = JNI_FALSE;\n+\n+    PR_ASSERT(env != NULL && fd != NULL);\n+    PR_SetError(0, 0);\n+\n+    if (JSS_PR_getPRFileDesc(env, fd, &real_fd) != PR_SUCCESS) {\n+        return NULL;\n+    }\n+\n+    if (SSL_GetChannelInfo(real_fd, &info, sizeof(info)) != SECSuccess) {\n+        return NULL;\n+    }\n+\n+    pV = info.protocolVersion;\n+    cS = info.cipherSuite;\n+\n+    aKB = info.authKeyBits;\n+    kKB = info.keaKeyBits;\n+\n+    cT = info.creationTime;\n+    lAT = info.lastAccessTime;\n+    eT = info.expirationTime;\n+    sID = JSS_ToByteArray(env, info.sessionID, info.sessionIDLength);\n+\n+    cM = info.compressionMethod;\n+\n+    eMSU = info.extendedMasterSecretUsed;\n+\n+    eDA = info.earlyDataAccepted;\n+\n+    kT = info.keaType;\n+    kG = info.keaGroup;\n+    sC = info.symCipher;\n+    mA = info.macAlgorithm;\n+    aT = info.authType;\n+    sS = info.signatureScheme;\n+\n+#ifdef HAVE_NSS_CHANNEL_INFO_ORIGINAL_KEA_GROUP\n+    /* The following fields were added in NSS v3.34 and are detected\n+     * via feature detection in CMake. */\n+    haveNSS334 = JNI_TRUE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NzE4NQ=="}, "originalCommit": {"oid": "9ad2e40cc70d8e410e24aacc1b8ef6199d362cd2"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcxMzI5Nw==", "bodyText": "Since the javadoc comments describe what the parameters represent, I guess this is fine for now. In the long term the more we have these discrepancies between version-based and feature-based checks the code could become more difficult to understand.", "url": "https://github.com/dogtagpki/jss/pull/432#discussion_r396713297", "createdAt": "2020-03-23T19:44:56Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/nss/SSL.c", "diffHunk": "@@ -365,6 +439,142 @@ Java_org_mozilla_jss_nss_SSL_SecurityStatus(JNIEnv *env, jclass clazz,\n         issuer, subject);\n }\n \n+JNIEXPORT jobject JNICALL\n+Java_org_mozilla_jss_nss_SSL_GetChannelInfo(JNIEnv *env, jclass clazz,\n+    jobject fd)\n+{\n+    PRFileDesc *real_fd = NULL;\n+    SSLChannelInfo info = { 0 };\n+    jint pV = 0;\n+    jint cS = 0;\n+    jint aKB = 0;\n+    jint kKB = 0;\n+    jlong cT = 0;\n+    jlong lAT = 0;\n+    jlong eT = 0;\n+    jbyteArray sID = NULL;\n+    jint cM = 0;\n+    jboolean eMSU = JNI_FALSE;\n+    jboolean eDA = JNI_FALSE;\n+    jint kT = 0;\n+    jint kG = 0;\n+    jint sC = 0;\n+    jint mA = 0;\n+    jint aT = 0;\n+    jint sS = 0;\n+    jboolean haveNSS334 = JNI_FALSE;\n+    jint oKG = 0;\n+    jboolean r = JNI_FALSE;\n+    jboolean pDC = JNI_FALSE;\n+\n+    PR_ASSERT(env != NULL && fd != NULL);\n+    PR_SetError(0, 0);\n+\n+    if (JSS_PR_getPRFileDesc(env, fd, &real_fd) != PR_SUCCESS) {\n+        return NULL;\n+    }\n+\n+    if (SSL_GetChannelInfo(real_fd, &info, sizeof(info)) != SECSuccess) {\n+        return NULL;\n+    }\n+\n+    pV = info.protocolVersion;\n+    cS = info.cipherSuite;\n+\n+    aKB = info.authKeyBits;\n+    kKB = info.keaKeyBits;\n+\n+    cT = info.creationTime;\n+    lAT = info.lastAccessTime;\n+    eT = info.expirationTime;\n+    sID = JSS_ToByteArray(env, info.sessionID, info.sessionIDLength);\n+\n+    cM = info.compressionMethod;\n+\n+    eMSU = info.extendedMasterSecretUsed;\n+\n+    eDA = info.earlyDataAccepted;\n+\n+    kT = info.keaType;\n+    kG = info.keaGroup;\n+    sC = info.symCipher;\n+    mA = info.macAlgorithm;\n+    aT = info.authType;\n+    sS = info.signatureScheme;\n+\n+#ifdef HAVE_NSS_CHANNEL_INFO_ORIGINAL_KEA_GROUP\n+    /* The following fields were added in NSS v3.34 and are detected\n+     * via feature detection in CMake. */\n+    haveNSS334 = JNI_TRUE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NzE4NQ=="}, "originalCommit": {"oid": "9ad2e40cc70d8e410e24aacc1b8ef6199d362cd2"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczMDgwMA==", "bodyText": "Okie dokie, thanks! (And yeah, I'm hoping most version/feature discrepancies can be hidden in the future and kept at the C level like the SSLCipher ones. ).", "url": "https://github.com/dogtagpki/jss/pull/432#discussion_r396730800", "createdAt": "2020-03-23T20:17:21Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/nss/SSL.c", "diffHunk": "@@ -365,6 +439,142 @@ Java_org_mozilla_jss_nss_SSL_SecurityStatus(JNIEnv *env, jclass clazz,\n         issuer, subject);\n }\n \n+JNIEXPORT jobject JNICALL\n+Java_org_mozilla_jss_nss_SSL_GetChannelInfo(JNIEnv *env, jclass clazz,\n+    jobject fd)\n+{\n+    PRFileDesc *real_fd = NULL;\n+    SSLChannelInfo info = { 0 };\n+    jint pV = 0;\n+    jint cS = 0;\n+    jint aKB = 0;\n+    jint kKB = 0;\n+    jlong cT = 0;\n+    jlong lAT = 0;\n+    jlong eT = 0;\n+    jbyteArray sID = NULL;\n+    jint cM = 0;\n+    jboolean eMSU = JNI_FALSE;\n+    jboolean eDA = JNI_FALSE;\n+    jint kT = 0;\n+    jint kG = 0;\n+    jint sC = 0;\n+    jint mA = 0;\n+    jint aT = 0;\n+    jint sS = 0;\n+    jboolean haveNSS334 = JNI_FALSE;\n+    jint oKG = 0;\n+    jboolean r = JNI_FALSE;\n+    jboolean pDC = JNI_FALSE;\n+\n+    PR_ASSERT(env != NULL && fd != NULL);\n+    PR_SetError(0, 0);\n+\n+    if (JSS_PR_getPRFileDesc(env, fd, &real_fd) != PR_SUCCESS) {\n+        return NULL;\n+    }\n+\n+    if (SSL_GetChannelInfo(real_fd, &info, sizeof(info)) != SECSuccess) {\n+        return NULL;\n+    }\n+\n+    pV = info.protocolVersion;\n+    cS = info.cipherSuite;\n+\n+    aKB = info.authKeyBits;\n+    kKB = info.keaKeyBits;\n+\n+    cT = info.creationTime;\n+    lAT = info.lastAccessTime;\n+    eT = info.expirationTime;\n+    sID = JSS_ToByteArray(env, info.sessionID, info.sessionIDLength);\n+\n+    cM = info.compressionMethod;\n+\n+    eMSU = info.extendedMasterSecretUsed;\n+\n+    eDA = info.earlyDataAccepted;\n+\n+    kT = info.keaType;\n+    kG = info.keaGroup;\n+    sC = info.symCipher;\n+    mA = info.macAlgorithm;\n+    aT = info.authType;\n+    sS = info.signatureScheme;\n+\n+#ifdef HAVE_NSS_CHANNEL_INFO_ORIGINAL_KEA_GROUP\n+    /* The following fields were added in NSS v3.34 and are detected\n+     * via feature detection in CMake. */\n+    haveNSS334 = JNI_TRUE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NzE4NQ=="}, "originalCommit": {"oid": "9ad2e40cc70d8e410e24aacc1b8ef6199d362cd2"}, "originalPosition": 158}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTEzODEyOnYy", "diffSide": "RIGHT", "path": "org/mozilla/jss/nss/SSL.c", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOToyMTo1NVrOF6Uldg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOToyMTo1NVrOF6Uldg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5ODk5OA==", "bodyText": "Same question about haveNSS348.", "url": "https://github.com/dogtagpki/jss/pull/432#discussion_r396698998", "createdAt": "2020-03-23T19:21:55Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/nss/SSL.c", "diffHunk": "@@ -365,6 +439,142 @@ Java_org_mozilla_jss_nss_SSL_SecurityStatus(JNIEnv *env, jclass clazz,\n         issuer, subject);\n }\n \n+JNIEXPORT jobject JNICALL\n+Java_org_mozilla_jss_nss_SSL_GetChannelInfo(JNIEnv *env, jclass clazz,\n+    jobject fd)\n+{\n+    PRFileDesc *real_fd = NULL;\n+    SSLChannelInfo info = { 0 };\n+    jint pV = 0;\n+    jint cS = 0;\n+    jint aKB = 0;\n+    jint kKB = 0;\n+    jlong cT = 0;\n+    jlong lAT = 0;\n+    jlong eT = 0;\n+    jbyteArray sID = NULL;\n+    jint cM = 0;\n+    jboolean eMSU = JNI_FALSE;\n+    jboolean eDA = JNI_FALSE;\n+    jint kT = 0;\n+    jint kG = 0;\n+    jint sC = 0;\n+    jint mA = 0;\n+    jint aT = 0;\n+    jint sS = 0;\n+    jboolean haveNSS334 = JNI_FALSE;\n+    jint oKG = 0;\n+    jboolean r = JNI_FALSE;\n+    jboolean pDC = JNI_FALSE;\n+\n+    PR_ASSERT(env != NULL && fd != NULL);\n+    PR_SetError(0, 0);\n+\n+    if (JSS_PR_getPRFileDesc(env, fd, &real_fd) != PR_SUCCESS) {\n+        return NULL;\n+    }\n+\n+    if (SSL_GetChannelInfo(real_fd, &info, sizeof(info)) != SECSuccess) {\n+        return NULL;\n+    }\n+\n+    pV = info.protocolVersion;\n+    cS = info.cipherSuite;\n+\n+    aKB = info.authKeyBits;\n+    kKB = info.keaKeyBits;\n+\n+    cT = info.creationTime;\n+    lAT = info.lastAccessTime;\n+    eT = info.expirationTime;\n+    sID = JSS_ToByteArray(env, info.sessionID, info.sessionIDLength);\n+\n+    cM = info.compressionMethod;\n+\n+    eMSU = info.extendedMasterSecretUsed;\n+\n+    eDA = info.earlyDataAccepted;\n+\n+    kT = info.keaType;\n+    kG = info.keaGroup;\n+    sC = info.symCipher;\n+    mA = info.macAlgorithm;\n+    aT = info.authType;\n+    sS = info.signatureScheme;\n+\n+#ifdef HAVE_NSS_CHANNEL_INFO_ORIGINAL_KEA_GROUP\n+    /* The following fields were added in NSS v3.34 and are detected\n+     * via feature detection in CMake. */\n+    haveNSS334 = JNI_TRUE;\n+    oKG = info.originalKeaGroup;\n+    r = info.resumed;\n+    pDC = info.peerDelegCred;\n+#endif\n+\n+    return JSS_NewSSLChannelInfo(env, pV, cS, aKB, kKB, cT, lAT, eT, sID, cM,\n+                                 eMSU, eDA, kT, kG, sC, mA, aT, sS,\n+                                 haveNSS334, oKG, r, pDC);\n+}\n+\n+JNIEXPORT jobject JNICALL\n+Java_org_mozilla_jss_nss_SSL_GetPreliminaryChannelInfo(JNIEnv *env,\n+    jclass clazz, jobject fd)\n+{\n+    PRFileDesc *real_fd = NULL;\n+    SSLPreliminaryChannelInfo info = { 0 };\n+    jlong vS = 0;\n+    jint pV = 0;\n+    jint cS = 0;\n+    jboolean cSED = JNI_FALSE;\n+    jlong mEDS = 0;\n+    jboolean haveNSS343 = JNI_FALSE;\n+    jint zRCS = 0;\n+    jboolean haveNSS348 = JNI_FALSE;\n+    jboolean pDC = JNI_FALSE;\n+    jint aKB = 0;\n+    jint sS = 0;\n+\n+    PR_ASSERT(env != NULL && fd != NULL);\n+    PR_SetError(0, 0);\n+\n+    if (JSS_PR_getPRFileDesc(env, fd, &real_fd) != PR_SUCCESS) {\n+        return NULL;\n+    }\n+\n+    if (SSL_GetPreliminaryChannelInfo(real_fd, &info, sizeof(info)) != SECSuccess) {\n+        return NULL;\n+    }\n+\n+    vS = info.valuesSet;\n+\n+    pV = info.protocolVersion;\n+    cS = info.cipherSuite;\n+\n+    cSED = info.canSendEarlyData;\n+\n+    mEDS = info.maxEarlyDataSize;\n+\n+#if HAVE_NSS_PRELIMINARY_CHANNEL_INFO_ZERO_RTT_CIPHER_SUITE\n+    /* The following fields were added in NSS v3.43 and are detected\n+     * via feature detection in CMake. */\n+    haveNSS343 = JNI_TRUE;\n+    zRCS = info.zeroRttCipherSuite;\n+#endif\n+\n+#if HAVE_NSS_PRELIMINARY_CHANNEL_INFO_PEER_DELEG_CRED\n+    /* The following fields were added in NSS v3.48 and are detected\n+     * via feature detection in CMake. */\n+    haveNSS348 = JNI_TRUE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad2e40cc70d8e410e24aacc1b8ef6199d362cd2"}, "originalPosition": 217}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2677, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}