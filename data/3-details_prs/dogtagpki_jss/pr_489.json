{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMjU2MDM1", "number": 489, "title": "SSLEngine - PostHandshake Authentication / Renegotation", "bodyText": "This should address some of the certificate issues we've seen in PKI CI. This is in several parts:\n\nExpose a bunch of new SSL options\nExpose SSL_ReHandshake (Necessary for renegotiation in TLS < 1.3)\nExpose SSL_SendCertificateRequest (necessary for PHA in TLS >= 1.3). Currently experimental, added in NSS v3.44.\nExpose the \"real\" handshake completion status in SSLFDProxy. Note that SecurityStatusResult.on reports on before the finish message is sent/received.\nAdd support for NSS configuration, PHA in JSSEngine/JSSEngineReferenceImpl.\nTest everything! :D", "createdAt": "2020-04-14T15:29:21Z", "url": "https://github.com/dogtagpki/jss/pull/489", "merged": true, "mergeCommit": {"oid": "4cadb954b6567bec5f683b6070e08e479ac03598"}, "closed": true, "closedAt": "2020-04-29T17:41:08Z", "author": {"login": "cipherboy"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXlPrQgBqjMyMzE2ODUwOTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcccBzCAFqTQwMjg4OTgwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da9ee0c940a607ead68d79f433d2164a376d0536", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/da9ee0c940a607ead68d79f433d2164a376d0536", "committedDate": "2020-04-14T15:25:06Z", "message": "Add Post-Handshake/rehandshake SSLEngine tests\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/9330d153aace36f808d08b6a67bbe5b696efded9", "committedDate": "2020-04-14T15:29:49Z", "message": "Add Post-Handshake/rehandshake SSLEngine tests\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTQ5OTA4", "url": "https://github.com/dogtagpki/jss/pull/489#pullrequestreview-393149908", "createdAt": "2020-04-14T17:36:24Z", "commit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzozNjoyNFrOGFZnIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzozNjoyNFrOGFZnIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxNTY4MA==", "bodyText": "Need to add the SSL option here.", "url": "https://github.com/dogtagpki/jss/pull/489#discussion_r408315680", "createdAt": "2020-04-14T17:36:24Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/ssl/javax/JSSEngine.java", "diffHunk": "@@ -804,6 +825,31 @@ public boolean isOutboundDone() {\n      */\n     public abstract SecurityStatusResult getStatus();\n \n+    /**\n+     * Gets the default configuration.\n+     */\n+    public HashMap<Integer, Integer> getDefaultConfiguration() {\n+        HashMap<Integer, Integer> result = new HashMap<Integer, Integer>();\n+        result.put(SSL.ENABLE_RENEGOTIATION, SSL.RENEGOTIATE_REQUIRES_XTN);\n+        result.put(SSL.REQUIRE_SAFE_NEGOTIATION, 1);\n+        result.put(28, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9"}, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTUwNjcx", "url": "https://github.com/dogtagpki/jss/pull/489#pullrequestreview-393150671", "createdAt": "2020-04-14T17:37:31Z", "commit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzozNzozMVrOGFZplw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzozNzozMVrOGFZplw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxNjMxMQ==", "bodyText": "Need to include these values as well in nss.SSL.", "url": "https://github.com/dogtagpki/jss/pull/489#discussion_r408316311", "createdAt": "2020-04-14T17:37:31Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/ssl/javax/JSSEngineReferenceImpl.java", "diffHunk": "@@ -267,11 +276,17 @@ private void initServer() {\n             throw new RuntimeException(\"Unable to configure SSL_REQUEST_CERTIFICATE option: \" + errorText(PR.GetError()));\n         }\n \n-        if (SSL.OptionSet(ssl_fd, SSL.REQUIRE_CERTIFICATE, need_client_auth ? 1 : 0) == SSL.SECFailure) {\n+        if (SSL.OptionSet(ssl_fd, SSL.REQUIRE_CERTIFICATE, need_client_auth ? 3 : 0) == SSL.SECFailure) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTUxOTgx", "url": "https://github.com/dogtagpki/jss/pull/489#pullrequestreview-393151981", "createdAt": "2020-04-14T17:39:20Z", "commit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzozOToyMFrOGFZuEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzozOToyMFrOGFZuEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxNzQ1OQ==", "bodyText": "Needs a comment about what we're doing here.", "url": "https://github.com/dogtagpki/jss/pull/489#discussion_r408317459", "createdAt": "2020-04-14T17:39:20Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/ssl/javax/JSSEngineReferenceImpl.java", "diffHunk": "@@ -395,15 +422,48 @@ public void beginHandshake() {\n         // beginHandshake(...) if ssl_fd == null.\n \n         // ssl_fd == null <-> we've not initialized anything yet.\n+\n+        boolean unwrap = as_server;\n         if (ssl_fd == null) {\n             init();\n+\n+            // Reset the handshake status, using the new socket and\n+            // configuration which was just created.\n+            if (SSL.ResetHandshake(ssl_fd, as_server) == SSL.SECFailure) {\n+                throw new RuntimeException(\"Unable to begin handshake: \" + errorText(PR.GetError()));\n+            }\n+        } else {\n+            unwrap = !unwrap;\n+\n+            if (session.getSSLVersion() == SSLVersion.TLS_1_3) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTUyMTM1", "url": "https://github.com/dogtagpki/jss/pull/489#pullrequestreview-393152135", "createdAt": "2020-04-14T17:39:32Z", "commit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzozOTozMlrOGFZulw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzozOTozMlrOGFZulw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxNzU5MQ==", "bodyText": "These comments need to be updated.", "url": "https://github.com/dogtagpki/jss/pull/489#discussion_r408317591", "createdAt": "2020-04-14T17:39:32Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/ssl/javax/JSSEngineReferenceImpl.java", "diffHunk": "@@ -395,15 +422,48 @@ public void beginHandshake() {\n         // beginHandshake(...) if ssl_fd == null.\n \n         // ssl_fd == null <-> we've not initialized anything yet.\n+\n+        boolean unwrap = as_server;\n         if (ssl_fd == null) {\n             init();\n+\n+            // Reset the handshake status, using the new socket and\n+            // configuration which was just created.\n+            if (SSL.ResetHandshake(ssl_fd, as_server) == SSL.SECFailure) {\n+                throw new RuntimeException(\"Unable to begin handshake: \" + errorText(PR.GetError()));\n+            }\n+        } else {\n+            unwrap = !unwrap;\n+\n+            if (session.getSSLVersion() == SSLVersion.TLS_1_3) {\n+                if (as_server) {\n+                    if (SSL.SendCertificateRequest(ssl_fd) == SSL.SECFailure) {\n+                        throw new RuntimeException(\"Unable to rehandshake on TLSv1.3: \" + errorText(PR.GetError()));\n+                    }\n+                }\n+            } else {\n+                if (SSL.ReHandshake(ssl_fd, true) == SSL.SECFailure) {\n+                    throw new RuntimeException(\"Unable to rehandshake: \" + errorText(PR.GetError()));\n+                }\n+            }\n+\n+            SSL.ForceHandshake(ssl_fd);\n         }\n \n-        // Always, reset the handshake status, using the existing\n-        // socket and configuration (which might've been just created).\n-        if (SSL.ResetHandshake(ssl_fd, as_server) == SSL.SECFailure) {\n-            throw new RuntimeException(\"Unable to begin handshake: \" + errorText(PR.GetError()));\n+        if (unwrap) {\n+            // Update handshake status; client initiates connection, so wait", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9"}, "originalPosition": 136}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTUyNjUy", "url": "https://github.com/dogtagpki/jss/pull/489#pullrequestreview-393152652", "createdAt": "2020-04-14T17:40:18Z", "commit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzo0MDoxOFrOGFZwXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzo0MDoxOFrOGFZwXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxODA0NA==", "bodyText": "Could probably drop these calls.", "url": "https://github.com/dogtagpki/jss/pull/489#discussion_r408318044", "createdAt": "2020-04-14T17:40:18Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/ssl/javax/JSSEngineReferenceImpl.java", "diffHunk": "@@ -619,8 +679,7 @@ private void updateHandshakeState() {\n         // currently on, update our handshake status. This happens even if\n         // we later exit before calling SSL.ForceHandshake() so that we can\n         // see what the session data contains.\n-        SecurityStatusResult preHandshakeStatus = getStatus();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9"}, "originalPosition": 156}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTUyODk2", "url": "https://github.com/dogtagpki/jss/pull/489#pullrequestreview-393152896", "createdAt": "2020-04-14T17:40:37Z", "commit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzo0MDozN1rOGFZxGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzo0MDozN1rOGFZxGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxODIzMw==", "bodyText": "Needs null check as well.", "url": "https://github.com/dogtagpki/jss/pull/489#discussion_r408318233", "createdAt": "2020-04-14T17:40:37Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/ssl/javax/JSSSession.java", "diffHunk": "@@ -50,8 +51,9 @@ public JSSEngine getEngine() {\n     }\n \n     public SSLChannelInfo getChannelInfo() {\n-        if (parent.getSSLFDProxy() != null) {\n-            return SSL.GetChannelInfo(parent.getSSLFDProxy());\n+        SSLFDProxy ssl_fd = parent.getSSLFDProxy();\n+        if (ssl_fd.handshakeComplete) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTUzMzA0", "url": "https://github.com/dogtagpki/jss/pull/489#pullrequestreview-393153304", "createdAt": "2020-04-14T17:41:09Z", "commit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzo0MTowOVrOGFZyWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNzo0MTowOVrOGFZyWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxODU1Mg==", "bodyText": "Remove this since they're unused currently.", "url": "https://github.com/dogtagpki/jss/pull/489#discussion_r408318552", "createdAt": "2020-04-14T17:41:09Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/ssl/javax/JSSSession.java", "diffHunk": "@@ -184,6 +193,8 @@ protected void setPeerCertificates(Certificate[] new_certs) {\n     }\n \n     public X509Certificate[] getPeerCertificateChain() throws SSLPeerUnverifiedException {\n+        refreshData();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9"}, "originalPosition": 67}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9330d153aace36f808d08b6a67bbe5b696efded9", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/9330d153aace36f808d08b6a67bbe5b696efded9", "committedDate": "2020-04-14T15:29:49Z", "message": "Add Post-Handshake/rehandshake SSLEngine tests\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "222774254861785341b990ca4621df585000d70e", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/222774254861785341b990ca4621df585000d70e", "committedDate": "2020-04-14T19:33:58Z", "message": "Add Post-Handshake/rehandshake SSLEngine tests\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMjM1MjA2", "url": "https://github.com/dogtagpki/jss/pull/489#pullrequestreview-393235206", "createdAt": "2020-04-14T19:35:37Z", "commit": {"oid": "222774254861785341b990ca4621df585000d70e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTozNTozN1rOGFd5jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTozNTozN1rOGFd5jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM4NTkzNQ==", "bodyText": "Spare space.", "url": "https://github.com/dogtagpki/jss/pull/489#discussion_r408385935", "createdAt": "2020-04-14T19:35:37Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/nss/SSL.c", "diffHunk": "@@ -598,6 +599,23 @@ Java_org_mozilla_jss_nss_SSL_ResetHandshake(JNIEnv *env, jclass clazz,\n     return SSL_ResetHandshake(real_fd, asServer);\n }\n \n+JNIEXPORT int JNICALL\n+Java_org_mozilla_jss_nss_SSL_ReHandshake(JNIEnv *env, jclass clazz,\n+    jobject fd, jboolean flushCache)\n+{\n+    PRFileDesc *real_fd = NULL;\n+\n+    PR_ASSERT(env != NULL && fd != NULL);\n+    PR_SetError(0, 0);\n+\n+    if (JSS_PR_getPRFileDesc(env, fd, &real_fd) != PR_SUCCESS) {\n+        return SECFailure;\n+    }\n+\n+    return SSL_ReHandshake(real_fd, flushCache);\n+}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "222774254861785341b990ca4621df585000d70e"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMjM1NjE4", "url": "https://github.com/dogtagpki/jss/pull/489#pullrequestreview-393235618", "createdAt": "2020-04-14T19:36:14Z", "commit": {"oid": "222774254861785341b990ca4621df585000d70e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTozNjoxNFrOGFd62A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTozNjoxNFrOGFd62A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM4NjI2NA==", "bodyText": "getSSLRequireNoError()", "url": "https://github.com/dogtagpki/jss/pull/489#discussion_r408386264", "createdAt": "2020-04-14T19:36:14Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/nss/SSL.java", "diffHunk": "@@ -52,6 +52,107 @@\n      */\n     public static final int SECWouldBlock = getSSLSECWouldBlock();\n \n+    /**\n+     * Enable post-handshake authentication extension. Value for use with\n+     * OptionGet.\n+     *\n+     * See also: SSL_ENABLE_POST_HANDSHAKE_AUTH in /usr/include/nss3/ssl.h\n+     */\n+    public static final int ENABLE_POST_HANDSHAKE_AUTH = getSSLEnablePostHandshakeAuth();\n+\n+    /**\n+     * Option for configuring renegotiation after initial handshake. Value for\n+     * use with OptionGet and OptionSet.\n+     *\n+     * See also: SSL_ENABLE_RENEGOTIATION in /usr/include/nss3/ssl.h\n+     */\n+    public static final int ENABLE_RENEGOTIATION = getSSLEnableRenegotiation();\n+\n+    /**\n+     * Option for requiring safe negotiation. Value for use with OptionGet and\n+     * OptionSet.\n+     *\n+     * See also: SSL_REQUIRE_SAFE_NEGOTIATION in /usr/include/nss3/ssl.h\n+     */\n+    public static final int REQUIRE_SAFE_NEGOTIATION = getSSLRequireSafeNegotiation();\n+\n+    /**\n+     * Value for never allowing renegotiation after initial handshake. Value\n+     * for use with ENABLE_RENEGOTIATION with OptionGet and OptionSet.\n+     *\n+     * See also: SSL_RENEGOTIATE_NEVER in /usr/include/nss3/ssl.h\n+     */\n+    public static final int RENEGOTIATE_NEVER = getSSLRenegotiateNever();\n+\n+    /**\n+     * Value for always allowing renegotiation after initial handshake,\n+     * regardless of whether or not the peer's client hellow bears the\n+     * renegotiation info extension; unsafe. Value for use with\n+     * ENABLE_RENEGOTIATION with OptionGet and OptionSet.\n+     *\n+     * See also: SSL_RENEGOTIATE_UNRESTRICTED in /usr/include/nss3/ssl.h\n+     */\n+    public static final int RENEGOTIATE_UNRESTRICTED = getSSLRenegotiateUnrestricted();\n+\n+    /**\n+     * Value for allowing renegotiation after initial handshake with the TLS\n+     * renegotiation_info extension; safe. Value for use with\n+     * ENABLE_RENEGOTIATION with OptionGet and OptionSet.\n+     *\n+     * See also: SSL_RENEGOTIATE_REQUIRES_XTN in /usr/include/nss3/ssl.h\n+     */\n+    public static final int RENEGOTIATE_REQUIRES_XTN = getSSLRenegotiateRequiresXtn();\n+\n+    /**\n+     * Value for disallowing unsafe renegotiation in server sockets only, but\n+     * allows clients to continue to renegotiate with vulnerable servers.\n+     * Value for use with ENABLE_RENEGOTIATION with OptionGet and OptionSet.\n+     *\n+     * See also: SSL_RENEGOTIATE_TRANSITIONAL in /usr/include/nss3/ssl.h\n+     */\n+    public static final int RENEGOTIATE_TRANSITIONAL = getSSLRenegotiateTransitional();\n+\n+    /**\n+     * Option for sending SCSV in handshakes. Value for use with OptionGet and\n+     * OptionSet.\n+     *\n+     * See also: SSL_ENABLE_FALLBACK_SCSV in /usr/include/nss3/ssl.h\n+     */\n+    public static final int ENABLE_FALLBACK_SCSV = getSSLEnableFallbackSCSV();\n+\n+    /**\n+     * Value for never requiring a certificate. Value for use with\n+     * SSL_REQUIRE_CERTIFICATE with OptionGet and OptionSet.\n+     *\n+     * See also: SSL_REQUIRE_NEVER in /usr/include/nss3/ssl.h\n+     */\n+    public static final int REQUIRE_NEVER = getSSLRequireNever();\n+\n+    /**\n+     * Value for always requiring a certificate. Value for use with\n+     * SSL_REQUIRE_CERTIFICATE with OptionGet and OptionSet.\n+     *\n+     * See also: SSL_REQUIRE_ALWAYS in /usr/include/nss3/ssl.h\n+     */\n+    public static final int REQUIRE_ALWAYS = getSSLRequireAlways();\n+\n+    /**\n+     * Value for requiring a certificate only on the first handshake. Value\n+     * for use with SSL_REQUIRE_CERTIFICATE with OptionGet and OptionSet.\n+     *\n+     * See also: SSL_REQUIRE_FIRST_HANDSHAKE in /usr/include/nss3/ssl.h\n+     */\n+    public static final int REQUIRE_FIRST_HANDSHAKE = getSSLRequireFirstHandshake();\n+\n+    /**\n+     * Value for requiring a certificate but not erring if the peer doesn't\n+     * provide one. Value for use with SSL_REQUIRE_CERTIFICATE with OptionGet\n+     * and OptionSet.\n+     *\n+     * See also: SSL_REQUIRE_NO_ERROR in /usr/include/nss3/ssl.h\n+     */\n+    public static final int REQUIRE_NO_ERROR = getSSLRequireNever();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "222774254861785341b990ca4621df585000d70e"}, "originalPosition": 103}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "222774254861785341b990ca4621df585000d70e", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/222774254861785341b990ca4621df585000d70e", "committedDate": "2020-04-14T19:33:58Z", "message": "Add Post-Handshake/rehandshake SSLEngine tests\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "b4108151837dfd8be112e481bf8173078c389b40", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/b4108151837dfd8be112e481bf8173078c389b40", "committedDate": "2020-04-14T19:51:59Z", "message": "Add Post-Handshake/rehandshake SSLEngine tests\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b4108151837dfd8be112e481bf8173078c389b40", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/b4108151837dfd8be112e481bf8173078c389b40", "committedDate": "2020-04-14T19:51:59Z", "message": "Add Post-Handshake/rehandshake SSLEngine tests\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "eda99b27a5d11e23adb16fa125fbfe0ed9d18502", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/eda99b27a5d11e23adb16fa125fbfe0ed9d18502", "committedDate": "2020-04-16T14:38:30Z", "message": "Add Post-Handshake/rehandshake SSLEngine tests\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODYxMzQ4", "url": "https://github.com/dogtagpki/jss/pull/489#pullrequestreview-396861348", "createdAt": "2020-04-20T22:38:45Z", "commit": {"oid": "eda99b27a5d11e23adb16fa125fbfe0ed9d18502"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjozODo0NVrOGIqiLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjozODo0NVrOGIqiLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczODY2OA==", "bodyText": "Should we call it setConfiguration() instead?", "url": "https://github.com/dogtagpki/jss/pull/489#discussion_r411738668", "createdAt": "2020-04-20T22:38:45Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/ssl/javax/JSSEngine.java", "diffHunk": "@@ -804,6 +825,31 @@ public boolean isOutboundDone() {\n      */\n     public abstract SecurityStatusResult getStatus();\n \n+    /**\n+     * Gets the default configuration.\n+     */\n+    public HashMap<Integer, Integer> getDefaultConfiguration() {\n+        HashMap<Integer, Integer> result = new HashMap<Integer, Integer>();\n+        result.put(SSL.ENABLE_RENEGOTIATION, SSL.RENEGOTIATE_REQUIRES_XTN);\n+        result.put(SSL.REQUIRE_SAFE_NEGOTIATION, 1);\n+        result.put(SSL.ENABLE_FALLBACK_SCSV, 1);\n+        return result;\n+    }\n+\n+    /**\n+     * Updates the configuration with the given value.\n+     */\n+    public void addConfiguration(int key, int value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eda99b27a5d11e23adb16fa125fbfe0ed9d18502"}, "originalPosition": 83}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eda99b27a5d11e23adb16fa125fbfe0ed9d18502", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/eda99b27a5d11e23adb16fa125fbfe0ed9d18502", "committedDate": "2020-04-16T14:38:30Z", "message": "Add Post-Handshake/rehandshake SSLEngine tests\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "18396b8552f86a6f6e1d1df5004ffa11eff717e3", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/18396b8552f86a6f6e1d1df5004ffa11eff717e3", "committedDate": "2020-04-21T15:08:48Z", "message": "Add Post-Handshake/rehandshake SSLEngine tests\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "18396b8552f86a6f6e1d1df5004ffa11eff717e3", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/18396b8552f86a6f6e1d1df5004ffa11eff717e3", "committedDate": "2020-04-21T15:08:48Z", "message": "Add Post-Handshake/rehandshake SSLEngine tests\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "79a0b2f31759a3fa47f82641db6dad9119588946", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/79a0b2f31759a3fa47f82641db6dad9119588946", "committedDate": "2020-04-21T15:14:34Z", "message": "Add Post-Handshake/rehandshake SSLEngine tests\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "670d421203e7ed739c5a819155864572f92760ea", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/670d421203e7ed739c5a819155864572f92760ea", "committedDate": "2020-04-23T18:14:16Z", "message": "Expose SSL_ENABLE_POST_HANDSHAKE_AUTH\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "888175e5096d8eb70cee5cac3e44445c38027d5c", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/888175e5096d8eb70cee5cac3e44445c38027d5c", "committedDate": "2020-04-23T18:14:16Z", "message": "Expose SSL renegotiation related options\n\nIncludes:\n - SSL_ENABLE_RENEGOTIATION and its four values:\n    - SSL_RENEGOTIATE_NEVER\n    - SSL_RENEGOTIATE_UNRESTRICTED\n    - SSL_RENEGOTIATE_REQUIRES_XTN\n    - SSL_RENEGOTIATE_TRANSITIONAL\n - SSL_REQUIRE_SAFE_NEGOTIATION\n - SSL_ENABLE_FALLBACK_SCSV\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dd17f76ea9fce84e3dd9d3469379cbed812e37a", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/9dd17f76ea9fce84e3dd9d3469379cbed812e37a", "committedDate": "2020-04-23T18:14:16Z", "message": "Expose SSL_ReHandshake\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db9e97b479e4e4eac8c74afaa7bbc00dc3884b7d", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/db9e97b479e4e4eac8c74afaa7bbc00dc3884b7d", "committedDate": "2020-04-23T18:14:17Z", "message": "Track handshake completion in SSLFDProxy\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08c654cdbde62dd215921b2161c3853475c56b41", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/08c654cdbde62dd215921b2161c3853475c56b41", "committedDate": "2020-04-23T18:14:17Z", "message": "Implement SSL_SendCertificateRequest\n\nThis method is experimental for TLS v1.3 support and replaces\nSSL_ReHandshake(...) for proper Post-Handshake Authentication\nsupport.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "742ab10180727bf59a92522c3dba1b05e3dc4382", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/742ab10180727bf59a92522c3dba1b05e3dc4382", "committedDate": "2020-04-23T18:14:17Z", "message": "Add SSL_REQUIRE_CERTIFICATE Values\n\nThis adds the following values for use with SSL_REQUIRE_CERTIFICATE:\n\n - SSL_REQUIRE_NEVER\n - SSL_REQUIRE_ALWAYS\n - SSL_REQUIRE_FIRST_HANDSHAKE\n - SSL_REQUIRE_NO_ERROR\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e85619e5d568a6513d878535fc50a817ec2be8d6", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/e85619e5d568a6513d878535fc50a817ec2be8d6", "committedDate": "2020-04-23T18:14:17Z", "message": "Implement SSL_KeyUpdate\n\nThis method is experimental for TLS v1.3 support and issues a key update\nrequest, similar to a reduced handshake.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c04a05e21e92e8e650c0a71c54dc7a30135422c6", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/c04a05e21e92e8e650c0a71c54dc7a30135422c6", "committedDate": "2020-04-23T18:14:17Z", "message": "Introduce JSSEngine configuration, PHA support\n\nNSS (and TomcatJSS) claim post-handshake authentication (PHA) support.\nIn order to support this, we need two features in JSSEngine:\n\n - Expose configuration options from NSS, including PHA options,\n - Adding ability to notify JSSEngine implementations about\n   certain configuration changes.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e812ca1df8a95f70200dd51f1837642bcf0bdb74", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/e812ca1df8a95f70200dd51f1837642bcf0bdb74", "committedDate": "2020-04-23T18:14:18Z", "message": "Add Post-Handshake/rehandshake SSLEngine tests\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79a0b2f31759a3fa47f82641db6dad9119588946", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/79a0b2f31759a3fa47f82641db6dad9119588946", "committedDate": "2020-04-21T15:14:34Z", "message": "Add Post-Handshake/rehandshake SSLEngine tests\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "e812ca1df8a95f70200dd51f1837642bcf0bdb74", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/e812ca1df8a95f70200dd51f1837642bcf0bdb74", "committedDate": "2020-04-23T18:14:18Z", "message": "Add Post-Handshake/rehandshake SSLEngine tests\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNDMwODY3", "url": "https://github.com/dogtagpki/jss/pull/489#pullrequestreview-401430867", "createdAt": "2020-04-28T01:08:07Z", "commit": {"oid": "e812ca1df8a95f70200dd51f1837642bcf0bdb74"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMTowODowN1rOGM-Jaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMToxNToxOFrOGM-SVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI1NDMxNQ==", "bodyText": "Question, since this block of code seems to happen in a bunch of methods, would having a convenience method be of use?", "url": "https://github.com/dogtagpki/jss/pull/489#discussion_r416254315", "createdAt": "2020-04-28T01:08:07Z", "author": {"login": "jmagne"}, "path": "org/mozilla/jss/nss/SSL.c", "diffHunk": "@@ -842,6 +891,27 @@ Java_org_mozilla_jss_nss_SSL_RemoveCallbacks(JNIEnv *env, jclass clazz,\n     SSL_AuthCertificateHook(real_fd, NULL, NULL);\n }\n \n+JNIEXPORT jint JNICALL\n+Java_org_mozilla_jss_nss_SSL_EnableHandshakeCallback(JNIEnv *env, jclass clazz,\n+    jobject fd)\n+{\n+    PRFileDesc *real_fd = NULL;\n+    jobject fd_ref = NULL;\n+\n+    PR_ASSERT(env != NULL && fd != NULL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e812ca1df8a95f70200dd51f1837642bcf0bdb74"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI1NjU5Ng==", "bodyText": "Just a question here. I see this callback just sets some boolean when the handshake it complete. Would there be any case to have a java method receive this callback as well?", "url": "https://github.com/dogtagpki/jss/pull/489#discussion_r416256596", "createdAt": "2020-04-28T01:15:18Z", "author": {"login": "jmagne"}, "path": "org/mozilla/jss/nss/SSLFDProxy.c", "diffHunk": "@@ -240,3 +240,33 @@ JSSL_SSLFDCertSelectionCallback(void *arg,\n     *pRetKey = privkey;\n     return SECSuccess;\n }\n+\n+void\n+JSSL_SSLFDHandshakeComplete(PRFileDesc *fd, void *client_data)\n+{\n+    JNIEnv *env = NULL;\n+    jobject sslfd_proxy = (jobject)client_data;\n+    jclass sslfdProxyClass;\n+    jfieldID handshakeCompleteField;\n+\n+    if (fd == NULL || client_data == NULL || JSS_javaVM == NULL) {\n+        return;\n+    }\n+\n+    if ((*JSS_javaVM)->AttachCurrentThread(JSS_javaVM, (void**)&env, NULL) != JNI_OK || env == NULL) {\n+        return;\n+    }\n+\n+    sslfdProxyClass = (*env)->GetObjectClass(env, sslfd_proxy);\n+    if (sslfdProxyClass == NULL) {\n+        return;\n+    }\n+\n+    handshakeCompleteField = (*env)->GetFieldID(env, sslfdProxyClass,\n+                                                \"handshakeComplete\", \"Z\");\n+    if (handshakeCompleteField == NULL) {\n+        return;\n+    }\n+\n+    (*env)->SetBooleanField(env, sslfd_proxy, handshakeCompleteField, JNI_TRUE);\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e812ca1df8a95f70200dd51f1837642bcf0bdb74"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyODg5ODAx", "url": "https://github.com/dogtagpki/jss/pull/489#pullrequestreview-402889801", "createdAt": "2020-04-29T17:35:16Z", "commit": {"oid": "e812ca1df8a95f70200dd51f1837642bcf0bdb74"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1582, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}