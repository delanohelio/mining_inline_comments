{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MDg0NjAx", "number": 539, "title": "JSSServerSocket to JSSSocket", "bodyText": "Based off of #532. Will be rebased once this is merged.\n\nThere are three major functionalities in SSLContext:\n\nSSLEngine -- merged in #150.\nSSLSocketFactory\nSSLServerSocketFactory\n\n#532 and this PR introduce the underlying JSSSocket and JSSServerSocket implementations these factories will return. Note that while SSLSocketFactory doesn't explicitly return a SSLSocket -- but its javadocs say that it does. Many places (including in OpenJDK itself!) blindly cast the Socket resulting from a SSLSocketFactory to SSLSocket without checking if it is possible. This makes returning the existing org.mozilla.jss.ssl.SSLSocket impossible, unless it is extended to implement the javax.net.ssl.SSLSocket interface.", "createdAt": "2020-05-06T13:07:14Z", "url": "https://github.com/dogtagpki/jss/pull/539", "merged": true, "mergeCommit": {"oid": "c799038524509290911c865729b9a88d31a3e0b0"}, "closed": true, "closedAt": "2020-05-11T21:49:52Z", "author": {"login": "cipherboy"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceomPfgBqjMzMDg0Njg3NDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgWLvwAFqTQwOTUyNjc5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d35fb738af800df3aaa2a27068b8a0bbfddfae19", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/d35fb738af800df3aaa2a27068b8a0bbfddfae19", "committedDate": "2020-05-06T13:00:30Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "4e59b53df629090a63b7c567c6b0a179f5fd5f93", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/4e59b53df629090a63b7c567c6b0a179f5fd5f93", "committedDate": "2020-05-06T13:21:29Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4e59b53df629090a63b7c567c6b0a179f5fd5f93", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/4e59b53df629090a63b7c567c6b0a179f5fd5f93", "committedDate": "2020-05-06T13:21:29Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "63369aa717048af1195f4feee0b67456fe3ea70d", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/63369aa717048af1195f4feee0b67456fe3ea70d", "committedDate": "2020-05-06T13:23:31Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63369aa717048af1195f4feee0b67456fe3ea70d", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/63369aa717048af1195f4feee0b67456fe3ea70d", "committedDate": "2020-05-06T13:23:31Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "2219188308e82d47f98a997dcd441efef2de754e", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/2219188308e82d47f98a997dcd441efef2de754e", "committedDate": "2020-05-06T13:31:31Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2219188308e82d47f98a997dcd441efef2de754e", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/2219188308e82d47f98a997dcd441efef2de754e", "committedDate": "2020-05-06T13:31:31Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "b06629971d783065474814e4f0cfbf49329ac2da", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/b06629971d783065474814e4f0cfbf49329ac2da", "committedDate": "2020-05-06T13:43:27Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b06629971d783065474814e4f0cfbf49329ac2da", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/b06629971d783065474814e4f0cfbf49329ac2da", "committedDate": "2020-05-06T13:43:27Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "bc75bb55d1b62f86977b13aff8d23c1db2c80108", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/bc75bb55d1b62f86977b13aff8d23c1db2c80108", "committedDate": "2020-05-06T18:27:48Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc75bb55d1b62f86977b13aff8d23c1db2c80108", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/bc75bb55d1b62f86977b13aff8d23c1db2c80108", "committedDate": "2020-05-06T18:27:48Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "656d12c7c4ee4be7d74ed1c00b4e8adbf745c752", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/656d12c7c4ee4be7d74ed1c00b4e8adbf745c752", "committedDate": "2020-05-07T17:34:38Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "656d12c7c4ee4be7d74ed1c00b4e8adbf745c752", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/656d12c7c4ee4be7d74ed1c00b4e8adbf745c752", "committedDate": "2020-05-07T17:34:38Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "14d60fc5be53f158288312d54bd7565690adb970", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/14d60fc5be53f158288312d54bd7565690adb970", "committedDate": "2020-05-07T20:04:30Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14d60fc5be53f158288312d54bd7565690adb970", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/14d60fc5be53f158288312d54bd7565690adb970", "committedDate": "2020-05-07T20:04:30Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "c0475e5854c13fbc947dd27d2d616236c14d0d43", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/c0475e5854c13fbc947dd27d2d616236c14d0d43", "committedDate": "2020-05-07T20:08:52Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9792693927eb10fc167f20edbfd4c3f25d1161a6", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/9792693927eb10fc167f20edbfd4c3f25d1161a6", "committedDate": "2020-05-07T20:12:06Z", "message": "Provide a JSSServerSocket implementation\n\nJSSServerSocket implements the javax.net.ssl.SSLServerSocket interface;\nthis is an interface over java.net.ServerSocket that, upon accept,\ncreates a JSSSocket and initializes it with configuration from the\nServerSocket. This allows child sockets to be used with minimal extra\nconfiguration beyond what the server itself has.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "191de520d29b795d6d89cc0eca77d3463edf0efe", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/191de520d29b795d6d89cc0eca77d3463edf0efe", "committedDate": "2020-05-07T20:12:06Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c0475e5854c13fbc947dd27d2d616236c14d0d43", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/c0475e5854c13fbc947dd27d2d616236c14d0d43", "committedDate": "2020-05-07T20:08:52Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "191de520d29b795d6d89cc0eca77d3463edf0efe", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/191de520d29b795d6d89cc0eca77d3463edf0efe", "committedDate": "2020-05-07T20:12:06Z", "message": "Add JSSServerSocketChannel for JSSServerSocket\n\nJSSServerSocketChannel introduces the semantics of ServerSocketChannel\nto JSSServerSocket. Like JSSSocketChannel and JSSSocket, the server\nsocket always has a channel associated with it, even if the underlying\nsocket doesn't.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODEzNTcx", "url": "https://github.com/dogtagpki/jss/pull/539#pullrequestreview-407813571", "createdAt": "2020-05-07T20:31:11Z", "commit": {"oid": "191de520d29b795d6d89cc0eca77d3463edf0efe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMDozMToxMVrOGSPHqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMDozMToxMVrOGSPHqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc3NTI3Mw==", "bodyText": "@edewata What do you think about this? It isn't technically right, but if we return null here, we could lose a client connection. Thoughts?", "url": "https://github.com/dogtagpki/jss/pull/539#discussion_r421775273", "createdAt": "2020-05-07T20:31:11Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/ssl/javax/JSSServerSocketChannel.java", "diffHunk": "@@ -0,0 +1,127 @@\n+package org.mozilla.jss.ssl.javax;\n+\n+import java.io.*;\n+import java.net.*;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.*;\n+import java.security.*;\n+import java.util.*;\n+\n+import javax.net.ssl.*;\n+\n+public class JSSServerSocketChannel extends ServerSocketChannel {\n+    private JSSServerSocket sslSocket;\n+    private ServerSocketChannel parent;\n+    private ServerSocket parentSocket;\n+    private JSSEngine engine;\n+\n+    public JSSServerSocketChannel(JSSServerSocket sslSocket, ServerSocketChannel parent, JSSEngine engine) throws IOException {\n+        super(null);\n+\n+        this.sslSocket = sslSocket;\n+        this.parent = parent;\n+        this.parentSocket = parent.socket();\n+        this.engine = engine;\n+\n+        // Copy blocking mode from the parent channel.\n+        configureBlocking(parent.isBlocking());\n+    }\n+\n+    public JSSServerSocketChannel(JSSServerSocket sslSocket, ServerSocket parentSocket, JSSEngine engine) throws IOException {\n+        super(null);\n+\n+        this.sslSocket = sslSocket;\n+        this.parentSocket = parentSocket;\n+        this.engine = engine;\n+\n+        // When there is no parent channel, the channel must be in\n+        // blocking mode.\n+        configureBlocking(false);\n+    }\n+\n+    public JSSSocketChannel accept() throws IOException {\n+        if (parent == null) {\n+            // Have to be in blocking mode. Call up to sslSocket to handle\n+            // the accept. Note that JSSSocket always has a SocketChannel even\n+            // when the underlying socket doesn't so the call to getChannel()\n+            // will be non-null.\n+            JSSSocket acceptedSocket = sslSocket.accept();\n+            return acceptedSocket.getInternalChannel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "191de520d29b795d6d89cc0eca77d3463edf0efe"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTI2Nzk3", "url": "https://github.com/dogtagpki/jss/pull/539#pullrequestreview-409526797", "createdAt": "2020-05-11T21:00:10Z", "commit": {"oid": "191de520d29b795d6d89cc0eca77d3463edf0efe"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowMDoxMFrOGTtMWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowMDoxMFrOGTtMWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMxNjU2OA==", "bodyText": "I'm not quite sure about the implication of each option, but if we don't want to deal with parent == null case we probably can throw an exception (either here or maybe in the constructor). That way people using JSS will know that it's not a supported configuration. As long as we provide a clear error message we don't have to worry about losing a client connection.", "url": "https://github.com/dogtagpki/jss/pull/539#discussion_r423316568", "createdAt": "2020-05-11T21:00:10Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/ssl/javax/JSSServerSocketChannel.java", "diffHunk": "@@ -0,0 +1,127 @@\n+package org.mozilla.jss.ssl.javax;\n+\n+import java.io.*;\n+import java.net.*;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.*;\n+import java.security.*;\n+import java.util.*;\n+\n+import javax.net.ssl.*;\n+\n+public class JSSServerSocketChannel extends ServerSocketChannel {\n+    private JSSServerSocket sslSocket;\n+    private ServerSocketChannel parent;\n+    private ServerSocket parentSocket;\n+    private JSSEngine engine;\n+\n+    public JSSServerSocketChannel(JSSServerSocket sslSocket, ServerSocketChannel parent, JSSEngine engine) throws IOException {\n+        super(null);\n+\n+        this.sslSocket = sslSocket;\n+        this.parent = parent;\n+        this.parentSocket = parent.socket();\n+        this.engine = engine;\n+\n+        // Copy blocking mode from the parent channel.\n+        configureBlocking(parent.isBlocking());\n+    }\n+\n+    public JSSServerSocketChannel(JSSServerSocket sslSocket, ServerSocket parentSocket, JSSEngine engine) throws IOException {\n+        super(null);\n+\n+        this.sslSocket = sslSocket;\n+        this.parentSocket = parentSocket;\n+        this.engine = engine;\n+\n+        // When there is no parent channel, the channel must be in\n+        // blocking mode.\n+        configureBlocking(false);\n+    }\n+\n+    public JSSSocketChannel accept() throws IOException {\n+        if (parent == null) {\n+            // Have to be in blocking mode. Call up to sslSocket to handle\n+            // the accept. Note that JSSSocket always has a SocketChannel even\n+            // when the underlying socket doesn't so the call to getChannel()\n+            // will be non-null.\n+            JSSSocket acceptedSocket = sslSocket.accept();\n+            return acceptedSocket.getInternalChannel();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc3NTI3Mw=="}, "originalCommit": {"oid": "191de520d29b795d6d89cc0eca77d3463edf0efe"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1505, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}