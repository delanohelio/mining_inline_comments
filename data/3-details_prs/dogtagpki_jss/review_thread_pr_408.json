{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0OTMxMDkz", "number": 408, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNTozODoxNVrODfl9Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNTozODoxNVrODfl9Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDU0Mzc1OnYy", "diffSide": "RIGHT", "path": "org/mozilla/jss/pkcs11/PK11DSAPrivateKey.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNTozODoxNVrOFpYoQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwNDowMDoxMlrOFprCDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkzOTQ1Nw==", "bodyText": "This is separate from this PR. Can we rename PK11PrivKey to PK11PrivateKey since it will appear in javadoc? I wouldn't worry about backward compatibility as long as it's done in a new minor version (i.e. 4.x).", "url": "https://github.com/dogtagpki/jss/pull/408#discussion_r378939457", "createdAt": "2020-02-13T15:38:15Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/pkcs11/PK11DSAPrivateKey.java", "diffHunk": "@@ -6,7 +6,7 @@\n import java.security.interfaces.DSAParams;\n import java.security.interfaces.DSAPrivateKey;\n \n-class PK11DSAPrivateKey\n+public class PK11DSAPrivateKey\n     extends PK11PrivKey implements DSAPrivateKey", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f56dc8d3442e8d6be623bdd51dc8c497f8f37d89"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3ODQ5NA==", "bodyText": "PK11PrivKey already exists in Javadocs, without this change.\nWhile a historical artifact, I think the naming makes some sense: the core classes have PK11PrivKey / PK11PubKey / PK11Cert / PK11SymKey, but while they're what gets used internally to JSS most often, as most applications (algorithms which use these keys) are agnostic of actual key type.\nHowever, occasionally more data is necessary and it is necessary to extract details about the (public) keys. Hence why the end classes are necessary. That happens, e.g., in the crypto.<x> interface.", "url": "https://github.com/dogtagpki/jss/pull/408#discussion_r378978494", "createdAt": "2020-02-13T16:37:52Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/pkcs11/PK11DSAPrivateKey.java", "diffHunk": "@@ -6,7 +6,7 @@\n import java.security.interfaces.DSAParams;\n import java.security.interfaces.DSAPrivateKey;\n \n-class PK11DSAPrivateKey\n+public class PK11DSAPrivateKey\n     extends PK11PrivKey implements DSAPrivateKey", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkzOTQ1Nw=="}, "originalCommit": {"oid": "f56dc8d3442e8d6be623bdd51dc8c497f8f37d89"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI0MDk3NQ==", "bodyText": "I'm not sure about symkey or cert, but shortening private and public into priv and pub seems to be uncommon, unnecessary, and inconsistent with the interfaces they're implementing (i.e. PrivateKey and PublicKey).", "url": "https://github.com/dogtagpki/jss/pull/408#discussion_r379240975", "createdAt": "2020-02-14T04:00:12Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/pkcs11/PK11DSAPrivateKey.java", "diffHunk": "@@ -6,7 +6,7 @@\n import java.security.interfaces.DSAParams;\n import java.security.interfaces.DSAPrivateKey;\n \n-class PK11DSAPrivateKey\n+public class PK11DSAPrivateKey\n     extends PK11PrivKey implements DSAPrivateKey", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkzOTQ1Nw=="}, "originalCommit": {"oid": "f56dc8d3442e8d6be623bdd51dc8c497f8f37d89"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2663, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}