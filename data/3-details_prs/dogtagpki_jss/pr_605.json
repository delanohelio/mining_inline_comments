{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1OTg2MjUw", "number": 605, "title": "More JSSEngine Memory Leak Fixes", "bodyText": "This introduces more memory fixes for JSSEngine:\n\nFix missing destructor call in the PR_Close implementation for NSPR PR/IO layers. This meant the BufferPRFD layer leaked.\nVarious small leak fixes in native (C) test case for BufferPRFDSSL. Not an issue in production.\n\nAdditional fixes include\n\nAllow duplication of PK11Cert, PK11PrivKey objects, to take ownership of new copies.\nMake SSLEngine take ownership of certs, keys, and then release memory when cleanup occurs.\n\n\nI've decided not to include the latter two fixes. This makes the PR smaller and we can figure out how to deal with copying certs&keys later.", "createdAt": "2020-07-23T22:37:46Z", "url": "https://github.com/dogtagpki/jss/pull/605", "merged": true, "mergeCommit": {"oid": "81a149764ec5d5bfd9e1205c4d349819fe154f5e"}, "closed": true, "closedAt": "2020-07-24T15:48:17Z", "author": {"login": "cipherboy"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3wWa9gH2gAyNDU1OTg2MjUwOjYzNTFkNTRkNDg4OGQwYzE4OTUxYTZkZWM5ZmJkZjVkZWYzYTkzZGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4Fh75ABqjM1ODQzNTUxNzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6351d54d4888d0c18951a6dec9fbdf5def3a93da", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/6351d54d4888d0c18951a6dec9fbdf5def3a93da", "committedDate": "2020-07-23T14:31:51Z", "message": "Fix memory leak during BufferPRFD destruction\n\nBufferPRFDs must destroy their layer when they're they only layer left,\notherwise closing a layer will leave allocated resources around.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ac14c645014acf6e4e58ee5e169bb8bc953dbd9", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/2ac14c645014acf6e4e58ee5e169bb8bc953dbd9", "committedDate": "2020-07-23T14:33:25Z", "message": "Fix memory leaks in TestBufferPRFDSSL\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NTQ0OTU1", "url": "https://github.com/dogtagpki/jss/pull/605#pullrequestreview-454544955", "createdAt": "2020-07-23T22:46:21Z", "commit": {"oid": "db0815eb2ed338c7b6763236c74ffe5c896c82ac"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo0NjoyMVrOG2eF5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo1Nzo1M1rOG2eUeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2OTMxNw==", "bodyText": "Should this be done later when it's actually needed, i.e. in line 1000?", "url": "https://github.com/dogtagpki/jss/pull/605#discussion_r459769317", "createdAt": "2020-07-23T22:46:21Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/ssl/javax/JSSEngine.java", "diffHunk": "@@ -980,6 +980,15 @@ protected static SSLFDProxy getServerTemplate(PK11Cert cert, PK11PrivKey key) {\n \n         SSLFDProxy fd = serverTemplates.get(cert);\n         if (fd == null) {\n+            // Here we clone the certificate. This certificate is functionally\n+            // the same, but its scope is owned by the serverTemplates map.\n+            // This allows the certificate to persist, even when the original\n+            // key is closed by the owning JSSEngine instance. Note that we\n+            // need not clone the key: ConfigServerCert will maintain its own\n+            // copy of the key and cert, so we are free to let it get garbage\n+            // collected.\n+            PK11Cert cert_clone = cert.duplicate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0815eb2ed338c7b6763236c74ffe5c896c82ac"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2OTgwNA==", "bodyText": "Could we log a warning if there's an exception so at least we know if there's something wrong?", "url": "https://github.com/dogtagpki/jss/pull/605#discussion_r459769804", "createdAt": "2020-07-23T22:47:53Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/ssl/javax/JSSEngineReferenceImpl.java", "diffHunk": "@@ -1435,21 +1439,45 @@ public void cleanup() {\n             session.close();\n             session = null;\n         }\n+\n+        cleanupKeys();\n+    }\n+\n+    private void cleanupKeys() {\n+        // Clean up the keys used in this transaction.\n+        if (cert != null) {\n+            try {\n+                cert.close();\n+            } catch (Exception e) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0815eb2ed338c7b6763236c74ffe5c896c82ac"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2OTgyNw==", "bodyText": "Same here.", "url": "https://github.com/dogtagpki/jss/pull/605#discussion_r459769827", "createdAt": "2020-07-23T22:48:01Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/ssl/javax/JSSEngineReferenceImpl.java", "diffHunk": "@@ -1435,21 +1439,45 @@ public void cleanup() {\n             session.close();\n             session = null;\n         }\n+\n+        cleanupKeys();\n+    }\n+\n+    private void cleanupKeys() {\n+        // Clean up the keys used in this transaction.\n+        if (cert != null) {\n+            try {\n+                cert.close();\n+            } catch (Exception e) {}\n+\n+            cert = null;\n+        }\n+\n+        if (key != null) {\n+            try {\n+                key.close();\n+            } catch (Exception e) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0815eb2ed338c7b6763236c74ffe5c896c82ac"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3MDQ4MA==", "bodyText": "Should we create separate if-statements for each socket?\nif (s_socket != null) {\n   ... close s_socket ...\n}\nif (c_socket != null) {\n   ... close c_socket ...\n}", "url": "https://github.com/dogtagpki/jss/pull/605#discussion_r459770480", "createdAt": "2020-07-23T22:50:00Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/ssl/javax/JSSEngineReferenceImpl.java", "diffHunk": "@@ -1435,21 +1439,45 @@ public void cleanup() {\n             session.close();\n             session = null;\n         }\n+\n+        cleanupKeys();\n+    }\n+\n+    private void cleanupKeys() {\n+        // Clean up the keys used in this transaction.\n+        if (cert != null) {\n+            try {\n+                cert.close();\n+            } catch (Exception e) {}\n+\n+            cert = null;\n+        }\n+\n+        if (key != null) {\n+            try {\n+                key.close();\n+            } catch (Exception e) {}\n+\n+            key = null;\n+        }\n     }\n \n     private void cleanupLoggingSocket() {\n-        if (debug_port > 0) {\n+        if (debug_port > 0 && s_socket != null && c_socket != null && ss_socket != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0815eb2ed338c7b6763236c74ffe5c896c82ac"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3MzA0OA==", "bodyText": "It's not really an issue, but usually this type of operation is implemented either as clone() or copy constructor. Do we want to use that instead of duplicate()? I'll let you decide.", "url": "https://github.com/dogtagpki/jss/pull/605#discussion_r459773048", "createdAt": "2020-07-23T22:57:53Z", "author": {"login": "edewata"}, "path": "lib/jss.map", "diffHunk": "@@ -485,3 +485,10 @@ Java_org_mozilla_jss_nss_SECErrors_getUntrustedCert;\n     local:\n         *;\n };\n+JSS_4.7.1 {\n+    global:\n+Java_org_mozilla_jss_pkcs11_PK11Cert_duplicate;\n+Java_org_mozilla_jss_pkcs11_PK11PrivKey_duplicate;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0815eb2ed338c7b6763236c74ffe5c896c82ac"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db0815eb2ed338c7b6763236c74ffe5c896c82ac", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/db0815eb2ed338c7b6763236c74ffe5c896c82ac", "committedDate": "2020-07-23T22:34:35Z", "message": "Cleaner handling of keys, certs in JSSEngine\n\nDue to recent changes in PK11Cert and PK11PrivKey, we can now clean up\ncertificates and keys explicitly after the JSSEngine finishes.\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}, "afterCommit": {"oid": "2ac14c645014acf6e4e58ee5e169bb8bc953dbd9", "author": {"user": {"login": "cipherboy", "name": "Alexander Scheel"}}, "url": "https://github.com/dogtagpki/jss/commit/2ac14c645014acf6e4e58ee5e169bb8bc953dbd9", "committedDate": "2020-07-23T14:33:25Z", "message": "Fix memory leaks in TestBufferPRFDSSL\n\nSigned-off-by: Alexander Scheel <ascheel@redhat.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1448, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}