{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1OTg2MjUw", "number": 605, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo0NjoyMVrOERpDPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo1Nzo1M1rOERpMqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTMzODIzOnYy", "diffSide": "RIGHT", "path": "org/mozilla/jss/ssl/javax/JSSEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo0NjoyMVrOG2eF5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo0NjoyMVrOG2eF5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2OTMxNw==", "bodyText": "Should this be done later when it's actually needed, i.e. in line 1000?", "url": "https://github.com/dogtagpki/jss/pull/605#discussion_r459769317", "createdAt": "2020-07-23T22:46:21Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/ssl/javax/JSSEngine.java", "diffHunk": "@@ -980,6 +980,15 @@ protected static SSLFDProxy getServerTemplate(PK11Cert cert, PK11PrivKey key) {\n \n         SSLFDProxy fd = serverTemplates.get(cert);\n         if (fd == null) {\n+            // Here we clone the certificate. This certificate is functionally\n+            // the same, but its scope is owned by the serverTemplates map.\n+            // This allows the certificate to persist, even when the original\n+            // key is closed by the owning JSSEngine instance. Note that we\n+            // need not clone the key: ConfigServerCert will maintain its own\n+            // copy of the key and cert, so we are free to let it get garbage\n+            // collected.\n+            PK11Cert cert_clone = cert.duplicate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0815eb2ed338c7b6763236c74ffe5c896c82ac"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTM0MTQzOnYy", "diffSide": "RIGHT", "path": "org/mozilla/jss/ssl/javax/JSSEngineReferenceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo0Nzo1M1rOG2eHzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo0Nzo1M1rOG2eHzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2OTgwNA==", "bodyText": "Could we log a warning if there's an exception so at least we know if there's something wrong?", "url": "https://github.com/dogtagpki/jss/pull/605#discussion_r459769804", "createdAt": "2020-07-23T22:47:53Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/ssl/javax/JSSEngineReferenceImpl.java", "diffHunk": "@@ -1435,21 +1439,45 @@ public void cleanup() {\n             session.close();\n             session = null;\n         }\n+\n+        cleanupKeys();\n+    }\n+\n+    private void cleanupKeys() {\n+        // Clean up the keys used in this transaction.\n+        if (cert != null) {\n+            try {\n+                cert.close();\n+            } catch (Exception e) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0815eb2ed338c7b6763236c74ffe5c896c82ac"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTM0MTU3OnYy", "diffSide": "RIGHT", "path": "org/mozilla/jss/ssl/javax/JSSEngineReferenceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo0ODowMVrOG2eH4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo0ODowMVrOG2eH4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2OTgyNw==", "bodyText": "Same here.", "url": "https://github.com/dogtagpki/jss/pull/605#discussion_r459769827", "createdAt": "2020-07-23T22:48:01Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/ssl/javax/JSSEngineReferenceImpl.java", "diffHunk": "@@ -1435,21 +1439,45 @@ public void cleanup() {\n             session.close();\n             session = null;\n         }\n+\n+        cleanupKeys();\n+    }\n+\n+    private void cleanupKeys() {\n+        // Clean up the keys used in this transaction.\n+        if (cert != null) {\n+            try {\n+                cert.close();\n+            } catch (Exception e) {}\n+\n+            cert = null;\n+        }\n+\n+        if (key != null) {\n+            try {\n+                key.close();\n+            } catch (Exception e) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0815eb2ed338c7b6763236c74ffe5c896c82ac"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTM0NTg4OnYy", "diffSide": "RIGHT", "path": "org/mozilla/jss/ssl/javax/JSSEngineReferenceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo1MDowMFrOG2eKcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo1MDowMFrOG2eKcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3MDQ4MA==", "bodyText": "Should we create separate if-statements for each socket?\nif (s_socket != null) {\n   ... close s_socket ...\n}\nif (c_socket != null) {\n   ... close c_socket ...\n}", "url": "https://github.com/dogtagpki/jss/pull/605#discussion_r459770480", "createdAt": "2020-07-23T22:50:00Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/ssl/javax/JSSEngineReferenceImpl.java", "diffHunk": "@@ -1435,21 +1439,45 @@ public void cleanup() {\n             session.close();\n             session = null;\n         }\n+\n+        cleanupKeys();\n+    }\n+\n+    private void cleanupKeys() {\n+        // Clean up the keys used in this transaction.\n+        if (cert != null) {\n+            try {\n+                cert.close();\n+            } catch (Exception e) {}\n+\n+            cert = null;\n+        }\n+\n+        if (key != null) {\n+            try {\n+                key.close();\n+            } catch (Exception e) {}\n+\n+            key = null;\n+        }\n     }\n \n     private void cleanupLoggingSocket() {\n-        if (debug_port > 0) {\n+        if (debug_port > 0 && s_socket != null && c_socket != null && ss_socket != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0815eb2ed338c7b6763236c74ffe5c896c82ac"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTM2MjM0OnYy", "diffSide": "RIGHT", "path": "lib/jss.map", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo1Nzo1M1rOG2eUeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo1Nzo1M1rOG2eUeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3MzA0OA==", "bodyText": "It's not really an issue, but usually this type of operation is implemented either as clone() or copy constructor. Do we want to use that instead of duplicate()? I'll let you decide.", "url": "https://github.com/dogtagpki/jss/pull/605#discussion_r459773048", "createdAt": "2020-07-23T22:57:53Z", "author": {"login": "edewata"}, "path": "lib/jss.map", "diffHunk": "@@ -485,3 +485,10 @@ Java_org_mozilla_jss_nss_SECErrors_getUntrustedCert;\n     local:\n         *;\n };\n+JSS_4.7.1 {\n+    global:\n+Java_org_mozilla_jss_pkcs11_PK11Cert_duplicate;\n+Java_org_mozilla_jss_pkcs11_PK11PrivKey_duplicate;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0815eb2ed338c7b6763236c74ffe5c896c82ac"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2591, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}