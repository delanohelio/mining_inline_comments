{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzODI1NTc3", "number": 369, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxODo1MTozMlrODY6CrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxODo1MTo1M1rODY6DDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NDQzMzczOnYy", "diffSide": "RIGHT", "path": "org/mozilla/jss/ssl/SSLCipher.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxODo1MTozMlrOFfCE2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxODo1MTozMlrOFfCE2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA4NDE4NQ==", "bodyText": "Shouldn't that be info.isFIPS != 0?\nThis expression is also a bit hard to read. Could we break it down maybe like this?\nif (info.nonStandard != 0) {\n    // non-standard ciphers are not supported\n    return JNI_FALSE;\n}\nif (info.isFIPS == 0 && PKI_IsFIPS()) {\n    // non-FIPS ciphers are not supported in FIPS mode\n    return JNI_FALSE;\n}\nreturn JNI_TRUE;", "url": "https://github.com/dogtagpki/jss/pull/369#discussion_r368084185", "createdAt": "2020-01-17T18:51:32Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/ssl/SSLCipher.c", "diffHunk": "@@ -0,0 +1,31 @@\n+#include <nspr.h>\n+#include <nss.h>\n+#include <ssl.h>\n+#include <pk11pub.h>\n+#include <jni.h>\n+\n+#include \"_jni/org_mozilla_jss_ssl_SSLCipher.h\"\n+\n+JNIEXPORT jboolean JNICALL\n+Java_org_mozilla_jss_ssl_SSLCipher_checkSupportedStatus(JNIEnv *env, jclass clazz, jint cipher_suite)\n+{\n+    SSLCipherSuiteInfo info = { 0 };\n+    jboolean found = JNI_FALSE;\n+\n+    for (PRUint16 index = 0; index < SSL_NumImplementedCiphers; index++) {\n+        if (SSL_ImplementedCiphers[index] == cipher_suite) {\n+            found = JNI_TRUE;\n+            break;\n+        }\n+    }\n+\n+    if (found == JNI_FALSE) {\n+        return found;\n+    }\n+\n+    if (SSL_GetCipherSuiteInfo(cipher_suite, &info, sizeof(info)) != SECSuccess || info.length < sizeof(info)) {\n+        return JNI_FALSE;\n+    }\n+\n+    return ((!PK11_IsFIPS() || (info.isFIPS == 0)) && (info.nonStandard == 0)) ? JNI_TRUE : JNI_FALSE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f00012b73bdefefbaa8d3ccbe0eeaba291b90f"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NDQzNDY5OnYy", "diffSide": "RIGHT", "path": "org/mozilla/jss/ssl/SSLCipher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxODo1MTo1M1rOFfCFaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxODo1ODo0OFrOFfCQ0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA4NDMzMQ==", "bodyText": "Enums have built-in valueOf() so this method is redundant.\nhttps://www.tutorialspoint.com/java/lang/enum_valueof.htm", "url": "https://github.com/dogtagpki/jss/pull/369#discussion_r368084331", "createdAt": "2020-01-17T18:51:53Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/ssl/SSLCipher.java", "diffHunk": "@@ -365,10 +379,36 @@ public boolean isECC() {\n         return ecc;\n     }\n \n+    public boolean isTLSv13() {\n+        return tls13;\n+    }\n+\n+    public boolean isSupported() {\n+        return supported;\n+    }\n+\n+    public boolean requiresRSACert() {\n+        return this.name().contains(\"_RSA_\");\n+    }\n+\n+    public boolean requiresECDSACert() {\n+        return this.name().contains(\"_ECDSA_\");\n+    }\n+\n     public static SSLCipher valueOf(int id) {\n         for (SSLCipher cipher : SSLCipher.class.getEnumConstants()) {\n             if (cipher.id == id) return cipher;\n         }\n         return null;\n     }\n+\n+    public static SSLCipher fromName(String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62f00012b73bdefefbaa8d3ccbe0eeaba291b90f"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA4NzI1MQ==", "bodyText": "Ah sorry. I was thinking I was going to need to add aliases here (between IANA and JDK names -- kinda like SSLVersion has), but I don't think I need to actually. So I can remove this.", "url": "https://github.com/dogtagpki/jss/pull/369#discussion_r368087251", "createdAt": "2020-01-17T18:58:48Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/ssl/SSLCipher.java", "diffHunk": "@@ -365,10 +379,36 @@ public boolean isECC() {\n         return ecc;\n     }\n \n+    public boolean isTLSv13() {\n+        return tls13;\n+    }\n+\n+    public boolean isSupported() {\n+        return supported;\n+    }\n+\n+    public boolean requiresRSACert() {\n+        return this.name().contains(\"_RSA_\");\n+    }\n+\n+    public boolean requiresECDSACert() {\n+        return this.name().contains(\"_ECDSA_\");\n+    }\n+\n     public static SSLCipher valueOf(int id) {\n         for (SSLCipher cipher : SSLCipher.class.getEnumConstants()) {\n             if (cipher.id == id) return cipher;\n         }\n         return null;\n     }\n+\n+    public static SSLCipher fromName(String name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA4NDMzMQ=="}, "originalCommit": {"oid": "62f00012b73bdefefbaa8d3ccbe0eeaba291b90f"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2730, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}