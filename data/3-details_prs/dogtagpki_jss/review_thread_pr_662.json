{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0ODc2NTU2", "number": 662, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxODo1MDo0NVrOE7rDwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxODo1MDo0NVrOE7rDwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMDA2OTEzOnYy", "diffSide": "RIGHT", "path": "org/mozilla/jss/provider/javax/crypto/JSSMacSpi.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxODo1MDo0NVrOH3c2DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMDowODoyMlrOH3fKWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkwNjMxNw==", "bodyText": "How about something like this so we can generate more specific exception message?\nif (key instanceof SecretKeyFacade) {\n    ...\n} else if (key instanceof SymmetricKey) {\n    ...\n} else if (key.getEncoded() != null) {\n    if (manufactured instanceof SecretKeyFacade) {\n        ...\n    } else if (manufactured instanceof SymmetricKey) {\n        ...\n    } else {\n        throw new InvalidKeyException(\"Unsupported key: \" + manufactured.getClass().getName());\n    }\n} else {\n    throw new InvalidKeyException(\"Missing key data: \" + key.getClass().getName());\n}", "url": "https://github.com/dogtagpki/jss/pull/662#discussion_r527906317", "createdAt": "2020-11-20T18:50:45Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/provider/javax/crypto/JSSMacSpi.java", "diffHunk": "@@ -48,20 +54,37 @@ public void engineInit(Key key, AlgorithmParameterSpec params)\n         throws InvalidKeyException, InvalidAlgorithmParameterException\n     {\n       try {\n-        SymmetricKey real_key;\n+        SymmetricKey real_key = null;\n         if (key instanceof SecretKeyFacade) {\n             SecretKeyFacade facade = (SecretKeyFacade)key;\n             real_key = facade.key;\n         } else if (key instanceof SymmetricKey) {\n             real_key = (SymmetricKey)key;\n-        } else {\n+        } else if (key.getEncoded() != null) {\n+            SecretKeyFactory factory = SecretKeyFactory.getInstance(keyName, \"Mozilla-JSS\");\n+            SecretKeySpec spec = new SecretKeySpec(key.getEncoded(), keyName);\n+            Key manufactured = factory.generateSecret(spec);\n+            if (manufactured instanceof SecretKeyFacade) {\n+                SecretKeyFacade facade = (SecretKeyFacade)manufactured;\n+                real_key = facade.key;\n+            } else if (manufactured instanceof SymmetricKey) {\n+                real_key = (SymmetricKey)manufactured;\n+            }\n+        }\n+\n+        if (real_key == null) {\n             throw new InvalidKeyException(\"Must use a key created by JSS! Try exporting the key data and importing it via SecretKeyFactory.\");\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3a2224ea83be2012c310135f768380106144ead"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkyOTk5Nw==", "bodyText": "Once we've imported the key to JSS, it shouldn't be unsupported any longer. It'll throw an exception (InvalidKeySpecException) if we can't import the key, or we get a valid key out.", "url": "https://github.com/dogtagpki/jss/pull/662#discussion_r527929997", "createdAt": "2020-11-20T19:37:27Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/provider/javax/crypto/JSSMacSpi.java", "diffHunk": "@@ -48,20 +54,37 @@ public void engineInit(Key key, AlgorithmParameterSpec params)\n         throws InvalidKeyException, InvalidAlgorithmParameterException\n     {\n       try {\n-        SymmetricKey real_key;\n+        SymmetricKey real_key = null;\n         if (key instanceof SecretKeyFacade) {\n             SecretKeyFacade facade = (SecretKeyFacade)key;\n             real_key = facade.key;\n         } else if (key instanceof SymmetricKey) {\n             real_key = (SymmetricKey)key;\n-        } else {\n+        } else if (key.getEncoded() != null) {\n+            SecretKeyFactory factory = SecretKeyFactory.getInstance(keyName, \"Mozilla-JSS\");\n+            SecretKeySpec spec = new SecretKeySpec(key.getEncoded(), keyName);\n+            Key manufactured = factory.generateSecret(spec);\n+            if (manufactured instanceof SecretKeyFacade) {\n+                SecretKeyFacade facade = (SecretKeyFacade)manufactured;\n+                real_key = facade.key;\n+            } else if (manufactured instanceof SymmetricKey) {\n+                real_key = (SymmetricKey)manufactured;\n+            }\n+        }\n+\n+        if (real_key == null) {\n             throw new InvalidKeyException(\"Must use a key created by JSS! Try exporting the key data and importing it via SecretKeyFactory.\");\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkwNjMxNw=="}, "originalCommit": {"oid": "c3a2224ea83be2012c310135f768380106144ead"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk0NDI4MQ==", "bodyText": "@edewata  Ok this has been updated.", "url": "https://github.com/dogtagpki/jss/pull/662#discussion_r527944281", "createdAt": "2020-11-20T20:08:22Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/provider/javax/crypto/JSSMacSpi.java", "diffHunk": "@@ -48,20 +54,37 @@ public void engineInit(Key key, AlgorithmParameterSpec params)\n         throws InvalidKeyException, InvalidAlgorithmParameterException\n     {\n       try {\n-        SymmetricKey real_key;\n+        SymmetricKey real_key = null;\n         if (key instanceof SecretKeyFacade) {\n             SecretKeyFacade facade = (SecretKeyFacade)key;\n             real_key = facade.key;\n         } else if (key instanceof SymmetricKey) {\n             real_key = (SymmetricKey)key;\n-        } else {\n+        } else if (key.getEncoded() != null) {\n+            SecretKeyFactory factory = SecretKeyFactory.getInstance(keyName, \"Mozilla-JSS\");\n+            SecretKeySpec spec = new SecretKeySpec(key.getEncoded(), keyName);\n+            Key manufactured = factory.generateSecret(spec);\n+            if (manufactured instanceof SecretKeyFacade) {\n+                SecretKeyFacade facade = (SecretKeyFacade)manufactured;\n+                real_key = facade.key;\n+            } else if (manufactured instanceof SymmetricKey) {\n+                real_key = (SymmetricKey)manufactured;\n+            }\n+        }\n+\n+        if (real_key == null) {\n             throw new InvalidKeyException(\"Must use a key created by JSS! Try exporting the key data and importing it via SecretKeyFactory.\");\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkwNjMxNw=="}, "originalCommit": {"oid": "c3a2224ea83be2012c310135f768380106144ead"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2613, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}