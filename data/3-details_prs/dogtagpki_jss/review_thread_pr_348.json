{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMTg4MTU4", "number": 348, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMDoyMTo1M1rODWaGBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMDoyMzo1OFrODWaHOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODIyNzg5OnYy", "diffSide": "RIGHT", "path": "org/mozilla/jss/ssl/SSLAlertDescription.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMDoyMTo1M1rOFbJsaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNTozMDoxMFrOFbaiFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAxNDY5OQ==", "bodyText": "Does this generate a warning in Eclipse? Usually a Class has to be specified as Class<?>.", "url": "https://github.com/dogtagpki/jss/pull/348#discussion_r364014699", "createdAt": "2020-01-08T00:21:53Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/ssl/SSLAlertDescription.java", "diffHunk": "@@ -4,57 +4,71 @@\n \n package org.mozilla.jss.ssl;\n \n+import javax.net.ssl.SSLProtocolException;\n+import javax.net.ssl.SSLHandshakeException;\n+import javax.net.ssl.SSLPeerUnverifiedException;\n+\n public enum SSLAlertDescription {\n \n     // see lib/ssl/ssl3prot.h in NSS\n     CLOSE_NOTIFY                    (0),\n     END_OF_EARLY_DATA               (1), // TLS 1.3\n-    UNEXPECTED_MESSAGE              (10),\n-    BAD_RECORD_MAC                  (20),\n-    DECRYPTION_FAILED               (21), // RFC 5246\n-    RECORD_OVERFLOW                 (22), // TLS only\n-    DECOMPRESSION_FAILURE           (30),\n-    HANDSHAKE_FAILURE               (40),\n-    NO_CERTIFICATE                  (41), // SSL3 only, NOT TLS\n-    BAD_CERTIFICATE                 (42),\n-    UNSUPPORTED_CERTIFICATE         (43),\n-    CERTIFICATE_REVOKED             (44),\n-    CERTIFICATE_EXPIRED             (45),\n-    CERTIFICATE_UNKNOWN             (46),\n-    ILLEGAL_PARAMETER               (47),\n+    UNEXPECTED_MESSAGE              (10, SSLProtocolException.class),\n+    BAD_RECORD_MAC                  (20, SSLProtocolException.class),\n+    DECRYPTION_FAILED               (21, SSLProtocolException.class), // RFC 5246\n+    RECORD_OVERFLOW                 (22, SSLProtocolException.class), // TLS only\n+    DECOMPRESSION_FAILURE           (30, SSLProtocolException.class),\n+    HANDSHAKE_FAILURE               (40, SSLHandshakeException.class),\n+    NO_CERTIFICATE                  (41, SSLPeerUnverifiedException.class), // SSL3 only, NOT TLS\n+    BAD_CERTIFICATE                 (42, SSLPeerUnverifiedException.class),\n+    UNSUPPORTED_CERTIFICATE         (43, SSLPeerUnverifiedException.class),\n+    CERTIFICATE_REVOKED             (44, SSLPeerUnverifiedException.class),\n+    CERTIFICATE_EXPIRED             (45, SSLPeerUnverifiedException.class),\n+    CERTIFICATE_UNKNOWN             (46, SSLPeerUnverifiedException.class),\n+    ILLEGAL_PARAMETER               (47, SSLProtocolException.class),\n \n     // All alerts below are TLS only.\n-    UNKNOWN_CA                      (48),\n-    ACCESS_DENIED                   (49),\n-    DECODE_ERROR                    (50),\n-    DECRYPT_ERROR                   (51),\n-    EXPORT_RESTRICTION              (60),\n-    PROTOCOL_VERSION                (70),\n-    INSUFFICIENT_SECURITY           (71),\n-    INTERNAL_ERROR                  (80),\n-    INAPPROPRIATE_FALLBACK          (86), // could also be sent for SSLv3\n-    USER_CANCELED                   (90),\n-    NO_RENEGOTIATION                (100),\n+    UNKNOWN_CA                      (48, SSLPeerUnverifiedException.class),\n+    ACCESS_DENIED                   (49, SSLHandshakeException.class),\n+    DECODE_ERROR                    (50, SSLProtocolException.class),\n+    DECRYPT_ERROR                   (51, SSLProtocolException.class),\n+    EXPORT_RESTRICTION              (60, SSLHandshakeException.class),\n+    PROTOCOL_VERSION                (70, SSLHandshakeException.class),\n+    INSUFFICIENT_SECURITY           (71, SSLHandshakeException.class),\n+    INTERNAL_ERROR                  (80, SSLProtocolException.class),\n+    INAPPROPRIATE_FALLBACK          (86, SSLProtocolException.class), // could also be sent for SSLv3\n+    USER_CANCELED                   (90, SSLProtocolException.class),\n+    NO_RENEGOTIATION                (100, SSLHandshakeException.class),\n \n     // Alerts for client hello extensions\n-    MISSING_EXTENSION               (109),\n-    UNSUPPORTED_EXTENSION           (110),\n-    CERTIFICATE_UNOBTAINABLE        (111),\n-    UNRECOGNIZED_NAME               (112),\n-    BAD_CERTIFICATE_STATUS_RESPONSE (113),\n-    BAD_CERTIFICATE_HASH_VALUE      (114),\n-    NO_APPLICATION_PROTOCOL         (120);\n+    MISSING_EXTENSION               (109, SSLHandshakeException.class),\n+    UNSUPPORTED_EXTENSION           (110, SSLHandshakeException.class),\n+    CERTIFICATE_UNOBTAINABLE        (111, SSLPeerUnverifiedException.class),\n+    UNRECOGNIZED_NAME               (112, SSLHandshakeException.class),\n+    BAD_CERTIFICATE_STATUS_RESPONSE (113, SSLPeerUnverifiedException.class),\n+    BAD_CERTIFICATE_HASH_VALUE      (114, SSLPeerUnverifiedException.class),\n+    NO_APPLICATION_PROTOCOL         (120, SSLHandshakeException.class);\n \n     private int id;\n+    private Class exception;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a9b5f9ccac5be3b8b6707d0639eac410a9d59b7"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI5MDU4Mw==", "bodyText": "@edewata I've updated this to be Class<? extends SSLException> since that's what actually happens... :-)", "url": "https://github.com/dogtagpki/jss/pull/348#discussion_r364290583", "createdAt": "2020-01-08T15:30:10Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/ssl/SSLAlertDescription.java", "diffHunk": "@@ -4,57 +4,71 @@\n \n package org.mozilla.jss.ssl;\n \n+import javax.net.ssl.SSLProtocolException;\n+import javax.net.ssl.SSLHandshakeException;\n+import javax.net.ssl.SSLPeerUnverifiedException;\n+\n public enum SSLAlertDescription {\n \n     // see lib/ssl/ssl3prot.h in NSS\n     CLOSE_NOTIFY                    (0),\n     END_OF_EARLY_DATA               (1), // TLS 1.3\n-    UNEXPECTED_MESSAGE              (10),\n-    BAD_RECORD_MAC                  (20),\n-    DECRYPTION_FAILED               (21), // RFC 5246\n-    RECORD_OVERFLOW                 (22), // TLS only\n-    DECOMPRESSION_FAILURE           (30),\n-    HANDSHAKE_FAILURE               (40),\n-    NO_CERTIFICATE                  (41), // SSL3 only, NOT TLS\n-    BAD_CERTIFICATE                 (42),\n-    UNSUPPORTED_CERTIFICATE         (43),\n-    CERTIFICATE_REVOKED             (44),\n-    CERTIFICATE_EXPIRED             (45),\n-    CERTIFICATE_UNKNOWN             (46),\n-    ILLEGAL_PARAMETER               (47),\n+    UNEXPECTED_MESSAGE              (10, SSLProtocolException.class),\n+    BAD_RECORD_MAC                  (20, SSLProtocolException.class),\n+    DECRYPTION_FAILED               (21, SSLProtocolException.class), // RFC 5246\n+    RECORD_OVERFLOW                 (22, SSLProtocolException.class), // TLS only\n+    DECOMPRESSION_FAILURE           (30, SSLProtocolException.class),\n+    HANDSHAKE_FAILURE               (40, SSLHandshakeException.class),\n+    NO_CERTIFICATE                  (41, SSLPeerUnverifiedException.class), // SSL3 only, NOT TLS\n+    BAD_CERTIFICATE                 (42, SSLPeerUnverifiedException.class),\n+    UNSUPPORTED_CERTIFICATE         (43, SSLPeerUnverifiedException.class),\n+    CERTIFICATE_REVOKED             (44, SSLPeerUnverifiedException.class),\n+    CERTIFICATE_EXPIRED             (45, SSLPeerUnverifiedException.class),\n+    CERTIFICATE_UNKNOWN             (46, SSLPeerUnverifiedException.class),\n+    ILLEGAL_PARAMETER               (47, SSLProtocolException.class),\n \n     // All alerts below are TLS only.\n-    UNKNOWN_CA                      (48),\n-    ACCESS_DENIED                   (49),\n-    DECODE_ERROR                    (50),\n-    DECRYPT_ERROR                   (51),\n-    EXPORT_RESTRICTION              (60),\n-    PROTOCOL_VERSION                (70),\n-    INSUFFICIENT_SECURITY           (71),\n-    INTERNAL_ERROR                  (80),\n-    INAPPROPRIATE_FALLBACK          (86), // could also be sent for SSLv3\n-    USER_CANCELED                   (90),\n-    NO_RENEGOTIATION                (100),\n+    UNKNOWN_CA                      (48, SSLPeerUnverifiedException.class),\n+    ACCESS_DENIED                   (49, SSLHandshakeException.class),\n+    DECODE_ERROR                    (50, SSLProtocolException.class),\n+    DECRYPT_ERROR                   (51, SSLProtocolException.class),\n+    EXPORT_RESTRICTION              (60, SSLHandshakeException.class),\n+    PROTOCOL_VERSION                (70, SSLHandshakeException.class),\n+    INSUFFICIENT_SECURITY           (71, SSLHandshakeException.class),\n+    INTERNAL_ERROR                  (80, SSLProtocolException.class),\n+    INAPPROPRIATE_FALLBACK          (86, SSLProtocolException.class), // could also be sent for SSLv3\n+    USER_CANCELED                   (90, SSLProtocolException.class),\n+    NO_RENEGOTIATION                (100, SSLHandshakeException.class),\n \n     // Alerts for client hello extensions\n-    MISSING_EXTENSION               (109),\n-    UNSUPPORTED_EXTENSION           (110),\n-    CERTIFICATE_UNOBTAINABLE        (111),\n-    UNRECOGNIZED_NAME               (112),\n-    BAD_CERTIFICATE_STATUS_RESPONSE (113),\n-    BAD_CERTIFICATE_HASH_VALUE      (114),\n-    NO_APPLICATION_PROTOCOL         (120);\n+    MISSING_EXTENSION               (109, SSLHandshakeException.class),\n+    UNSUPPORTED_EXTENSION           (110, SSLHandshakeException.class),\n+    CERTIFICATE_UNOBTAINABLE        (111, SSLPeerUnverifiedException.class),\n+    UNRECOGNIZED_NAME               (112, SSLHandshakeException.class),\n+    BAD_CERTIFICATE_STATUS_RESPONSE (113, SSLPeerUnverifiedException.class),\n+    BAD_CERTIFICATE_HASH_VALUE      (114, SSLPeerUnverifiedException.class),\n+    NO_APPLICATION_PROTOCOL         (120, SSLHandshakeException.class);\n \n     private int id;\n+    private Class exception;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAxNDY5OQ=="}, "originalCommit": {"oid": "1a9b5f9ccac5be3b8b6707d0639eac410a9d59b7"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODIzMDk4OnYy", "diffSide": "RIGHT", "path": "org/mozilla/jss/ssl/SSLAlertEvent.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMDoyMzo1OFrOFbJuXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMDozMjozMVrOFbJ1yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAxNTE5OA==", "bodyText": "I suppose this will catch the SSLException itself, so you might want to create the instance in the try-catch block, but throw it outside the block. The catch block should catch the exception thrown by getConstructor() and newInstance() and chain it to a new SSLException.", "url": "https://github.com/dogtagpki/jss/pull/348#discussion_r364015198", "createdAt": "2020-01-08T00:23:58Z", "author": {"login": "edewata"}, "path": "org/mozilla/jss/ssl/SSLAlertEvent.java", "diffHunk": "@@ -98,6 +100,20 @@ public void setDescription(SSLAlertDescription description) {\n         this.description = description.getID();\n     }\n \n+    public void throwException() throws SSLException {\n+        if (levelEnum == SSLAlertLevel.FATAL) {\n+            Class exception = descriptionEnum.getExceptionClass();\n+\n+            try {\n+                throw (SSLException) exception.getConstructor(String.class).newInstance(this.toString());\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a9b5f9ccac5be3b8b6707d0639eac410a9d59b7"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAxNzA5OQ==", "bodyText": "Ah, yeah, good catch.", "url": "https://github.com/dogtagpki/jss/pull/348#discussion_r364017099", "createdAt": "2020-01-08T00:32:31Z", "author": {"login": "cipherboy"}, "path": "org/mozilla/jss/ssl/SSLAlertEvent.java", "diffHunk": "@@ -98,6 +100,20 @@ public void setDescription(SSLAlertDescription description) {\n         this.description = description.getID();\n     }\n \n+    public void throwException() throws SSLException {\n+        if (levelEnum == SSLAlertLevel.FATAL) {\n+            Class exception = descriptionEnum.getExceptionClass();\n+\n+            try {\n+                throw (SSLException) exception.getConstructor(String.class).newInstance(this.toString());\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAxNTE5OA=="}, "originalCommit": {"oid": "1a9b5f9ccac5be3b8b6707d0639eac410a9d59b7"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2722, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}