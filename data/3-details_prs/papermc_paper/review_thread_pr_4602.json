{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MjI1ODA1", "number": 4602, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMToyNjowM1rOEqAr2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwOTo0Nzo1NFrOEsRK9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDg2ODcyOnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMToyNjowM1rOHcBE4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxNDozNzo1MFrOHcB5RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTgxMQ==", "bodyText": "The TPS should be the same as with /tps; the last 5s isn't always the best metric.\nAlso use an obfhelper to access this.d.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499139811", "createdAt": "2020-10-03T11:26:03Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0NTU5Mg==", "bodyText": "So you want Bukkit.getServer().getTPS[0] instead of Bukkit.getTPS[0] ?\nWhat is a obfhelper? I just searched it up on google, but didn't anything useful.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499145592", "createdAt": "2020-10-03T12:53:54Z", "author": {"login": "AlexProgrammerDE"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTgxMQ=="}, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0NTczMg==", "bodyText": "Check the TPS command's source.\nCheck the CONTRIBUTING.md file.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499145732", "createdAt": "2020-10-03T12:56:13Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTgxMQ=="}, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1MzIyMA==", "bodyText": "@Proximyst\n\nYou mean this code?\n\n        double[] tps = org.bukkit.Bukkit.getTPS();\n        String[] tpsAvg = new String[tps.length];\n\n        for ( int i = 0; i < tps.length; i++) {\n            tpsAvg[i] = format( tps[i] );\n        }\n        sender.sendMessage(ChatColor.GOLD + \"TPS from last 1m, 5m, 15m: \" + org.apache.commons.lang.StringUtils.join(tpsAvg, \", \"));`\nI still don't get what you want me to do here.\n2. Like this? public String[] getStatEntries() { return this.d; } // Paper - OBFHELPER", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499153220", "createdAt": "2020-10-03T14:37:50Z", "author": {"login": "AlexProgrammerDE"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTgxMQ=="}, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDg2OTQ3OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMToyNzoxOFrOHcBFQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMjo1MTo0OVrOHcBa5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTkwNQ==", "bodyText": "No need changing the constant, I can't see why we'd want a conflict on it if it ever changes.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499139905", "createdAt": "2020-10-03T11:27:18Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0NTQ0Ng==", "bodyText": "Yeah right imma revert them.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499145446", "createdAt": "2020-10-03T12:51:49Z", "author": {"login": "AlexProgrammerDE"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTkwNQ=="}, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDg2OTg0OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMToyNzo1NFrOHcBFcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMToyNzo1NFrOHcBFcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk1NA==", "bodyText": "No need changing the constant, I can't see why we'd want a conflict on it if it ever changes.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499139954", "createdAt": "2020-10-03T11:27:54Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDg2OTk0OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMToyODoxMVrOHcBFfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxMzowNDo0NlrOIQ38zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk2Nw==", "bodyText": "Did you check if this was the cause to your issue?", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499139967", "createdAt": "2020-10-03T11:28:11Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper\n+         jframe.add(servergui);\n+         jframe.pack();\n+         jframe.setLocationRelativeTo((Component) null);\n+         jframe.setVisible(true);\n++        jframe.setName(\"Minecraft server\"); // Paper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0NTQwNg==", "bodyText": "Nope, but even with official builds i saw it happen.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499145406", "createdAt": "2020-10-03T12:51:24Z", "author": {"login": "AlexProgrammerDE"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper\n+         jframe.add(servergui);\n+         jframe.pack();\n+         jframe.setLocationRelativeTo((Component) null);\n+         jframe.setVisible(true);\n++        jframe.setName(\"Minecraft server\"); // Paper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk2Nw=="}, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0NTY5Nw==", "bodyText": "See this stackoverflow comment: https://stackoverflow.com/questions/31219169/javafx-application-name-on-gnome#comment99994011_54467323\nSeems it needs a Preloader where the name is changed.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499145697", "createdAt": "2020-10-03T12:55:33Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper\n+         jframe.add(servergui);\n+         jframe.pack();\n+         jframe.setLocationRelativeTo((Component) null);\n+         jframe.setVisible(true);\n++        jframe.setName(\"Minecraft server\"); // Paper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk2Nw=="}, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1NzIxNw==", "bodyText": "I wonder if it is worth doing that. Seems like its going to get hard to fix this.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499157217", "createdAt": "2020-10-03T15:27:42Z", "author": {"login": "AlexProgrammerDE"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper\n+         jframe.add(servergui);\n+         jframe.pack();\n+         jframe.setLocationRelativeTo((Component) null);\n+         jframe.setVisible(true);\n++        jframe.setName(\"Minecraft server\"); // Paper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk2Nw=="}, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjIyMTQ0Nw==", "bodyText": "I will just skip this issue. May be worth fixing sometime else.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502221447", "createdAt": "2020-10-09T06:48:21Z", "author": {"login": "AlexProgrammerDE"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper\n+         jframe.add(servergui);\n+         jframe.pack();\n+         jframe.setLocationRelativeTo((Component) null);\n+         jframe.setVisible(true);\n++        jframe.setName(\"Minecraft server\"); // Paper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk2Nw=="}, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2NjQxMQ==", "bodyText": "I just pushed some changes which fixed it. Reflection is required.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502766411", "createdAt": "2020-10-10T08:54:31Z", "author": {"login": "AlexProgrammerDE"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper\n+         jframe.add(servergui);\n+         jframe.pack();\n+         jframe.setLocationRelativeTo((Component) null);\n+         jframe.setVisible(true);\n++        jframe.setName(\"Minecraft server\"); // Paper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk2Nw=="}, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDU2NDgxNQ==", "bodyText": "as talked about in discord this fix was removed", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r554564815", "createdAt": "2021-01-10T13:04:46Z", "author": {"login": "AlexProgrammerDE"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper\n+         jframe.add(servergui);\n+         jframe.pack();\n+         jframe.setLocationRelativeTo((Component) null);\n+         jframe.setVisible(true);\n++        jframe.setName(\"Minecraft server\"); // Paper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk2Nw=="}, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDg3MDExOnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMToyODozOVrOHcBFlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMToyODozOVrOHcBFlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzOTk4OQ==", "bodyText": "The name is in no way conveyed to the user (afaik?), so this is unnecessary.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499139989", "createdAt": "2020-10-03T11:28:39Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper\n+         jframe.add(servergui);\n+         jframe.pack();\n+         jframe.setLocationRelativeTo((Component) null);\n+         jframe.setVisible(true);\n++        jframe.setName(\"Minecraft server\"); // Paper\n++\n++        // Paper start - Add logo as frame image\n++        try {\n++            jframe.setIconImage(ImageIO.read(Objects.requireNonNull(ServerGUI.class.getClassLoader().getResourceAsStream(\"logo.png\"))));\n++        } catch (IOException ignore) {\n++        }\n++        // Paper end\n++\n+         jframe.addWindowListener(new WindowAdapter() {\n+             public void windowClosing(WindowEvent windowevent) {\n+                 if (!servergui.f.getAndSet(true)) {\n+                     jframe.setTitle(\"Minecraft server - shutting down!\");\n++                    jframe.setName(\"Minecraft server - shutting down!\"); // Paper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDg3MDQ5OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMToyOToxM1rOHcBFvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMToyOToxM1rOHcBFvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0MDAzMA==", "bodyText": "No need changing the constant, I can't see why we'd want a conflict on it if it ever changes.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499140030", "createdAt": "2020-10-03T11:29:13Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper\n+         jframe.add(servergui);\n+         jframe.pack();\n+         jframe.setLocationRelativeTo((Component) null);\n+         jframe.setVisible(true);\n++        jframe.setName(\"Minecraft server\"); // Paper\n++\n++        // Paper start - Add logo as frame image\n++        try {\n++            jframe.setIconImage(ImageIO.read(Objects.requireNonNull(ServerGUI.class.getClassLoader().getResourceAsStream(\"logo.png\"))));\n++        } catch (IOException ignore) {\n++        }\n++        // Paper end\n++\n+         jframe.addWindowListener(new WindowAdapter() {\n+             public void windowClosing(WindowEvent windowevent) {\n+                 if (!servergui.f.getAndSet(true)) {\n+                     jframe.setTitle(\"Minecraft server - shutting down!\");\n++                    jframe.setName(\"Minecraft server - shutting down!\"); // Paper\n+                     dedicatedserver.safeShutdown(true);\n+                     servergui.f();\n+                 }\n+@@ -100,7 +115,7 @@ public class ServerGUI extends JComponent {\n+ \n+     private JComponent d() {\n+         JList<?> jlist = new PlayerListBox(this.c);\n+-        JScrollPane jscrollpane = new JScrollPane(jlist, 22, 30);\n++        JScrollPane jscrollpane = new JScrollPane(jlist, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED); // Paper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDg3MDUxOnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMToyOToxN1rOHcBFwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMToyOToxN1rOHcBFwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0MDAzMw==", "bodyText": "No need changing the constant, I can't see why we'd want a conflict on it if it ever changes.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r499140033", "createdAt": "2020-10-03T11:29:17Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,121 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..3c98a6feded87f93c0119e2d414779037f003c66 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -1,5 +1,7 @@\n+ package net.minecraft.server;\n+ \n++import org.bukkit.Bukkit;\n++\n+ import java.awt.Color;\n+ import java.awt.Dimension;\n+ import java.awt.Graphics;\n+@@ -16,7 +18,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +37,13 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double tps = Bukkit.getTPS()[0];\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        this.d[2] = \"TPS:\" + ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 );\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..d2184e79dd3074da41565be32d5b6f5415307688 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -10,7 +10,9 @@ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +24,9 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.swing.WindowConstants;\n++import javax.swing.ScrollPaneConstants;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -32,7 +37,7 @@ import org.apache.logging.log4j.Logger;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+-    private static final Font a = new Font(\"Monospaced\", 0, 12);\n++    private static final Font a = new Font(\"Monospaced\", Font.PLAIN, 12); // Paper\n+     private static final Logger LOGGER = LogManager.getLogger();\n+     private final DedicatedServer c;\n+     private Thread d;\n+@@ -49,15 +54,25 @@ public class ServerGUI extends JComponent {\n+         final JFrame jframe = new JFrame(\"Minecraft server\");\n+         final ServerGUI servergui = new ServerGUI(dedicatedserver);\n+ \n+-        jframe.setDefaultCloseOperation(2);\n++        jframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); // Paper\n+         jframe.add(servergui);\n+         jframe.pack();\n+         jframe.setLocationRelativeTo((Component) null);\n+         jframe.setVisible(true);\n++        jframe.setName(\"Minecraft server\"); // Paper\n++\n++        // Paper start - Add logo as frame image\n++        try {\n++            jframe.setIconImage(ImageIO.read(Objects.requireNonNull(ServerGUI.class.getClassLoader().getResourceAsStream(\"logo.png\"))));\n++        } catch (IOException ignore) {\n++        }\n++        // Paper end\n++\n+         jframe.addWindowListener(new WindowAdapter() {\n+             public void windowClosing(WindowEvent windowevent) {\n+                 if (!servergui.f.getAndSet(true)) {\n+                     jframe.setTitle(\"Minecraft server - shutting down!\");\n++                    jframe.setName(\"Minecraft server - shutting down!\"); // Paper\n+                     dedicatedserver.safeShutdown(true);\n+                     servergui.f();\n+                 }\n+@@ -100,7 +115,7 @@ public class ServerGUI extends JComponent {\n+ \n+     private JComponent d() {\n+         JList<?> jlist = new PlayerListBox(this.c);\n+-        JScrollPane jscrollpane = new JScrollPane(jlist, 22, 30);\n++        JScrollPane jscrollpane = new JScrollPane(jlist, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED); // Paper\n+ \n+         jscrollpane.setBorder(new TitledBorder(new EtchedBorder(), \"Players\"));\n+         return jscrollpane;\n+@@ -109,7 +124,7 @@ public class ServerGUI extends JComponent {\n+     private JComponent e() {\n+         JPanel jpanel = new JPanel(new BorderLayout());\n+         JTextArea jtextarea = new JTextArea();\n+-        JScrollPane jscrollpane = new JScrollPane(jtextarea, 22, 30);\n++        JScrollPane jscrollpane = new JScrollPane(jtextarea, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED); // Paper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebe8782619d4539492d9764deb426cb879f4b19"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODUzODY3OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwOTo0NDozOFrOHfet3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwOTo0NDozOFrOHfet3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTE2NA==", "bodyText": "This is a Paper class.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502771164", "createdAt": "2020-10-10T09:44:38Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;\n+-\n+ import javax.swing.DefaultListCellRenderer;\n+ import javax.swing.DefaultListSelectionModel;\n+ import javax.swing.JList;\n+@@ -58,9 +56,20 @@ public class RAMDetails extends JList<String> {\n+     public void update() {\n+         GraphData data = RAMGraph.DATA.peekLast();\n+         Vector<String> vector = new Vector<>();\n++\n++        // Paper start - Add tps entry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de1964a1164fb40304f53430312143ca3df505c"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODUzODc4OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwOTo0NDo1MlrOHfet7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwOTo0NDo1MlrOHfet7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTE4MA==", "bodyText": "Paper comment", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502771180", "createdAt": "2020-10-10T09:44:52Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;\n+-\n+ import javax.swing.DefaultListCellRenderer;\n+ import javax.swing.DefaultListSelectionModel;\n+ import javax.swing.JList;\n+@@ -58,9 +56,20 @@ public class RAMDetails extends JList<String> {\n+     public void update() {\n+         GraphData data = RAMGraph.DATA.peekLast();\n+         Vector<String> vector = new Vector<>();\n++\n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         vector.add(\"Memory use: \" + (data.getUsedMem() / 1024L / 1024L) + \" mb (\" + (data.getFree() * 100L / data.getMax()) + \"% free)\");\n+         vector.add(\"Heap: \" + (data.getTotal() / 1024L / 1024L) + \" / \" + (data.getMax() / 1024L / 1024L) + \" mb\");\n+         vector.add(\"Avg tick: \" + DECIMAL_FORMAT.format(getAverage(server.getTickTimes())) + \" ms\");\n++        vector.add(\"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg));\n++        // Paper end\n++\n+         setListData(vector);\n+     }\n+ \n+@@ -71,4 +80,9 @@ public class RAMDetails extends JList<String> {\n+         }\n+         return ((double) total / (double) tickTimes.length) * 1.0E-6D;\n+     }\n++\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..0191358aab0dcaf30935c96ff7283fc2e4afd9ba 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -16,7 +16,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de1964a1164fb40304f53430312143ca3df505c"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODUzOTQzOnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwOTo0NToxNVrOHfeuNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxMDowMDoxMFrOHfeznw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTI1NA==", "bodyText": "No", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502771254", "createdAt": "2020-10-10T09:45:15Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;\n+-\n+ import javax.swing.DefaultListCellRenderer;\n+ import javax.swing.DefaultListSelectionModel;\n+ import javax.swing.JList;\n+@@ -58,9 +56,20 @@ public class RAMDetails extends JList<String> {\n+     public void update() {\n+         GraphData data = RAMGraph.DATA.peekLast();\n+         Vector<String> vector = new Vector<>();\n++\n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         vector.add(\"Memory use: \" + (data.getUsedMem() / 1024L / 1024L) + \" mb (\" + (data.getFree() * 100L / data.getMax()) + \"% free)\");\n+         vector.add(\"Heap: \" + (data.getTotal() / 1024L / 1024L) + \" / \" + (data.getMax() / 1024L / 1024L) + \" mb\");\n+         vector.add(\"Avg tick: \" + DECIMAL_FORMAT.format(getAverage(server.getTickTimes())) + \" ms\");\n++        vector.add(\"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg));\n++        // Paper end\n++\n+         setListData(vector);\n+     }\n+ \n+@@ -71,4 +80,9 @@ public class RAMDetails extends JList<String> {\n+         }\n+         return ((double) total / (double) tickTimes.length) * 1.0E-6D;\n+     }\n++\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..0191358aab0dcaf30935c96ff7283fc2e4afd9ba 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -16,7 +16,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +35,18 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        getStatEntries()[2] = \"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg);\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+@@ -83,4 +93,10 @@ public class GuiStatsComponent extends JComponent {\n+     public void a() {\n+         this.f.stop();\n+     }\n++\n++    public String[] getStatEntries() { return this.d; } // Paper - OBFHELPER\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..032283c520536cafa075dfd3690590c03e488b94 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -2,15 +2,15 @@ package net.minecraft.server;\n+ \n+ import com.google.common.collect.Lists;\n+ import com.mojang.util.QueueLogAppender;\n+-import java.awt.BorderLayout;\n+-import java.awt.Component;\n+-import java.awt.Dimension;\n+-import java.awt.Font;\n++\n++import java.awt.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de1964a1164fb40304f53430312143ca3df505c"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MjYzOQ==", "bodyText": "lmao sry again my ide is handling imports without me noticing.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502772639", "createdAt": "2020-10-10T10:00:10Z", "author": {"login": "AlexProgrammerDE"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;\n+-\n+ import javax.swing.DefaultListCellRenderer;\n+ import javax.swing.DefaultListSelectionModel;\n+ import javax.swing.JList;\n+@@ -58,9 +56,20 @@ public class RAMDetails extends JList<String> {\n+     public void update() {\n+         GraphData data = RAMGraph.DATA.peekLast();\n+         Vector<String> vector = new Vector<>();\n++\n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         vector.add(\"Memory use: \" + (data.getUsedMem() / 1024L / 1024L) + \" mb (\" + (data.getFree() * 100L / data.getMax()) + \"% free)\");\n+         vector.add(\"Heap: \" + (data.getTotal() / 1024L / 1024L) + \" / \" + (data.getMax() / 1024L / 1024L) + \" mb\");\n+         vector.add(\"Avg tick: \" + DECIMAL_FORMAT.format(getAverage(server.getTickTimes())) + \" ms\");\n++        vector.add(\"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg));\n++        // Paper end\n++\n+         setListData(vector);\n+     }\n+ \n+@@ -71,4 +80,9 @@ public class RAMDetails extends JList<String> {\n+         }\n+         return ((double) total / (double) tickTimes.length) * 1.0E-6D;\n+     }\n++\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..0191358aab0dcaf30935c96ff7283fc2e4afd9ba 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -16,7 +16,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +35,18 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        getStatEntries()[2] = \"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg);\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+@@ -83,4 +93,10 @@ public class GuiStatsComponent extends JComponent {\n+     public void a() {\n+         this.f.stop();\n+     }\n++\n++    public String[] getStatEntries() { return this.d; } // Paper - OBFHELPER\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..032283c520536cafa075dfd3690590c03e488b94 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -2,15 +2,15 @@ package net.minecraft.server;\n+ \n+ import com.google.common.collect.Lists;\n+ import com.mojang.util.QueueLogAppender;\n+-import java.awt.BorderLayout;\n+-import java.awt.Component;\n+-import java.awt.Dimension;\n+-import java.awt.Font;\n++\n++import java.awt.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTI1NA=="}, "originalCommit": {"oid": "3de1964a1164fb40304f53430312143ca3df505c"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODUzOTY1OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwOTo0NToyN1rOHfeuUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwOTo0NToyN1rOHfeuUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTI4Mg==", "bodyText": "Don't touch sun packages", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502771282", "createdAt": "2020-10-10T09:45:27Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;\n+-\n+ import javax.swing.DefaultListCellRenderer;\n+ import javax.swing.DefaultListSelectionModel;\n+ import javax.swing.JList;\n+@@ -58,9 +56,20 @@ public class RAMDetails extends JList<String> {\n+     public void update() {\n+         GraphData data = RAMGraph.DATA.peekLast();\n+         Vector<String> vector = new Vector<>();\n++\n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         vector.add(\"Memory use: \" + (data.getUsedMem() / 1024L / 1024L) + \" mb (\" + (data.getFree() * 100L / data.getMax()) + \"% free)\");\n+         vector.add(\"Heap: \" + (data.getTotal() / 1024L / 1024L) + \" / \" + (data.getMax() / 1024L / 1024L) + \" mb\");\n+         vector.add(\"Avg tick: \" + DECIMAL_FORMAT.format(getAverage(server.getTickTimes())) + \" ms\");\n++        vector.add(\"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg));\n++        // Paper end\n++\n+         setListData(vector);\n+     }\n+ \n+@@ -71,4 +80,9 @@ public class RAMDetails extends JList<String> {\n+         }\n+         return ((double) total / (double) tickTimes.length) * 1.0E-6D;\n+     }\n++\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..0191358aab0dcaf30935c96ff7283fc2e4afd9ba 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -16,7 +16,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +35,18 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        getStatEntries()[2] = \"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg);\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+@@ -83,4 +93,10 @@ public class GuiStatsComponent extends JComponent {\n+     public void a() {\n+         this.f.stop();\n+     }\n++\n++    public String[] getStatEntries() { return this.d; } // Paper - OBFHELPER\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..032283c520536cafa075dfd3690590c03e488b94 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -2,15 +2,15 @@ package net.minecraft.server;\n+ \n+ import com.google.common.collect.Lists;\n+ import com.mojang.util.QueueLogAppender;\n+-import java.awt.BorderLayout;\n+-import java.awt.Component;\n+-import java.awt.Dimension;\n+-import java.awt.Font;\n++\n++import java.awt.*;\n+ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +22,7 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -29,6 +30,7 @@ import javax.swing.text.BadLocationException;\n+ import javax.swing.text.Document;\n+ import org.apache.logging.log4j.LogManager;\n+ import org.apache.logging.log4j.Logger;\n++import sun.awt.X11.XToolkit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de1964a1164fb40304f53430312143ca3df505c"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODU0MDM2OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwOTo0NjoyMFrOHfeuow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwOTo0NjoyMFrOHfeuow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTM2Mw==", "bodyText": "You don't need reflection nor sun pkg stuff here. Did you not look at the stackoverflow answer I linked?", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502771363", "createdAt": "2020-10-10T09:46:20Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;\n+-\n+ import javax.swing.DefaultListCellRenderer;\n+ import javax.swing.DefaultListSelectionModel;\n+ import javax.swing.JList;\n+@@ -58,9 +56,20 @@ public class RAMDetails extends JList<String> {\n+     public void update() {\n+         GraphData data = RAMGraph.DATA.peekLast();\n+         Vector<String> vector = new Vector<>();\n++\n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         vector.add(\"Memory use: \" + (data.getUsedMem() / 1024L / 1024L) + \" mb (\" + (data.getFree() * 100L / data.getMax()) + \"% free)\");\n+         vector.add(\"Heap: \" + (data.getTotal() / 1024L / 1024L) + \" / \" + (data.getMax() / 1024L / 1024L) + \" mb\");\n+         vector.add(\"Avg tick: \" + DECIMAL_FORMAT.format(getAverage(server.getTickTimes())) + \" ms\");\n++        vector.add(\"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg));\n++        // Paper end\n++\n+         setListData(vector);\n+     }\n+ \n+@@ -71,4 +80,9 @@ public class RAMDetails extends JList<String> {\n+         }\n+         return ((double) total / (double) tickTimes.length) * 1.0E-6D;\n+     }\n++\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/GuiStatsComponent.java b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+index 859e31c63f94bdc7729c6d475990750b76e24b9c..0191358aab0dcaf30935c96ff7283fc2e4afd9ba 100644\n+--- a/src/main/java/net/minecraft/server/GuiStatsComponent.java\n++++ b/src/main/java/net/minecraft/server/GuiStatsComponent.java\n+@@ -16,7 +16,7 @@ public class GuiStatsComponent extends JComponent {\n+     });\n+     private final int[] b = new int[256];\n+     private int c;\n+-    private final String[] d = new String[11];\n++    private final String[] d = new String[12];\n+     private final MinecraftServer e;\n+     private final Timer f;\n+ \n+@@ -35,8 +35,18 @@ public class GuiStatsComponent extends JComponent {\n+     private void b() {\n+         long i = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();\n+ \n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();\n++        String[] tpsAvg = new String[tps.length];\n++\n++        for ( int g = 0; g < tps.length; g++) {\n++            tpsAvg[g] = format( tps[g] );\n++        }\n+         this.d[0] = \"Memory use: \" + i / 1024L / 1024L + \" mb (\" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + \"% free)\";\n+         this.d[1] = \"Avg tick: \" + GuiStatsComponent.a.format(this.a(this.e.h) * 1.0E-6D) + \" ms\";\n++        getStatEntries()[2] = \"TPS from last 1m, 5m, 15m: \" + String.join(\", \", tpsAvg);\n++        // Paper end\n++\n+         this.b[this.c++ & 255] = (int) (i * 100L / Runtime.getRuntime().maxMemory());\n+         this.repaint();\n+     }\n+@@ -83,4 +93,10 @@ public class GuiStatsComponent extends JComponent {\n+     public void a() {\n+         this.f.stop();\n+     }\n++\n++    public String[] getStatEntries() { return this.d; } // Paper - OBFHELPER\n++    private static String format(double tps) // Paper - Add tps entry\n++    {\n++        return ( ( tps > 21.0 ) ? \"*\" : \"\" ) + Math.min( Math.round( tps * 100.0 ) / 100.0, 20.0 ); // Paper - only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/ServerGUI.java b/src/main/java/net/minecraft/server/ServerGUI.java\n+index e51434f2323bcb9385d11e99d0438d66434e3e63..032283c520536cafa075dfd3690590c03e488b94 100644\n+--- a/src/main/java/net/minecraft/server/ServerGUI.java\n++++ b/src/main/java/net/minecraft/server/ServerGUI.java\n+@@ -2,15 +2,15 @@ package net.minecraft.server;\n+ \n+ import com.google.common.collect.Lists;\n+ import com.mojang.util.QueueLogAppender;\n+-import java.awt.BorderLayout;\n+-import java.awt.Component;\n+-import java.awt.Dimension;\n+-import java.awt.Font;\n++\n++import java.awt.*;\n+ import java.awt.event.FocusAdapter;\n+ import java.awt.event.FocusEvent;\n+ import java.awt.event.WindowAdapter;\n+ import java.awt.event.WindowEvent;\n++import java.io.IOException;\n+ import java.util.Collection;\n++import java.util.Objects;\n+ import java.util.concurrent.atomic.AtomicBoolean;\n+ import javax.swing.JComponent;\n+ import javax.swing.JFrame;\n+@@ -22,6 +22,7 @@ import javax.swing.JTextArea;\n+ import javax.swing.JTextField;\n+ import javax.swing.SwingUtilities;\n+ import javax.swing.UIManager;\n++import javax.imageio.ImageIO;\n+ import javax.swing.border.EtchedBorder;\n+ import javax.swing.border.TitledBorder;\n+ import javax.swing.text.AttributeSet;\n+@@ -29,6 +30,7 @@ import javax.swing.text.BadLocationException;\n+ import javax.swing.text.Document;\n+ import org.apache.logging.log4j.LogManager;\n+ import org.apache.logging.log4j.Logger;\n++import sun.awt.X11.XToolkit;\n+ \n+ public class ServerGUI extends JComponent {\n+ \n+@@ -46,6 +48,16 @@ public class ServerGUI extends JComponent {\n+             ;\n+         }\n+ \n++        // Paper start - Fix windows title issue on gnome desktop", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de1964a1164fb40304f53430312143ca3df505c"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODU0MTEyOnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwOTo0Nzo0MVrOHfeu_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwOTo0Nzo0MVrOHfeu_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTQ1Mg==", "bodyText": "Don't remove imports", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502771452", "createdAt": "2020-10-10T09:47:41Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de1964a1164fb40304f53430312143ca3df505c"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODU0MTMzOnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwOTo0Nzo1NFrOHfevFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwOTo1ODo1MlrOHfey_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTQ3Ng==", "bodyText": "Bukkit is imported.", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502771476", "createdAt": "2020-10-10T09:47:54Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;\n+-\n+ import javax.swing.DefaultListCellRenderer;\n+ import javax.swing.DefaultListSelectionModel;\n+ import javax.swing.JList;\n+@@ -58,9 +56,20 @@ public class RAMDetails extends JList<String> {\n+     public void update() {\n+         GraphData data = RAMGraph.DATA.peekLast();\n+         Vector<String> vector = new Vector<>();\n++\n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de1964a1164fb40304f53430312143ca3df505c"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MjQ3Nw==", "bodyText": "yeah idk what exactly happened there. Imma revert it", "url": "https://github.com/PaperMC/Paper/pull/4602#discussion_r502772477", "createdAt": "2020-10-10T09:58:52Z", "author": {"login": "AlexProgrammerDE"}, "path": "Spigot-Server-Patches/0581-Improve-ServerGUI.patch", "diffHunk": "@@ -0,0 +1,453 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>\n+Date: Sat, 3 Oct 2020 08:27:40 +0200\n+Subject: [PATCH] Improve ServerGUI\n+\n+- Added logo to server frame\n+- Show tps in the server stats\n+- Fix title issue on gnome\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+index e463a86a6ad6c4f2885f4df159411bad294e1208..50960535a64efaf9dfb9bb95ea765b6c19616b6f 100644\n+--- a/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n++++ b/src/main/java/com/destroystokyo/paper/gui/RAMDetails.java\n+@@ -2,8 +2,6 @@ package com.destroystokyo.paper.gui;\n+ \n+ import net.minecraft.server.MinecraftServer;\n+ import net.minecraft.server.SystemUtils;\n+-import org.bukkit.Bukkit;\n+-\n+ import javax.swing.DefaultListCellRenderer;\n+ import javax.swing.DefaultListSelectionModel;\n+ import javax.swing.JList;\n+@@ -58,9 +56,20 @@ public class RAMDetails extends JList<String> {\n+     public void update() {\n+         GraphData data = RAMGraph.DATA.peekLast();\n+         Vector<String> vector = new Vector<>();\n++\n++        // Paper start - Add tps entry\n++        double[] tps = org.bukkit.Bukkit.getTPS();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc3MTQ3Ng=="}, "originalCommit": {"oid": "3de1964a1164fb40304f53430312143ca3df505c"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1828, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}