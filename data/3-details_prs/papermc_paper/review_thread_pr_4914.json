{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyOTMwMjg1", "number": 4914, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQwMzozOTowMVrOFHhF1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQwMzozOTowMVrOFHhF1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNDI2NTE5OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0005-Paper-Metrics.patch", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQwMzozOTowMVrOIJAeoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNTozMzowM1rOIJFIEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMxNTkzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +        // WARNING: You must not modify and part of this Metrics class, including the submit delay or frequency!\n          \n          \n            \n            +        // WARNING: You must not modify any part of this Metrics class, including the submit delay or frequency!", "url": "https://github.com/PaperMC/Paper/pull/4914#discussion_r546315936", "createdAt": "2020-12-20T03:39:01Z", "author": {"login": "kashike"}, "path": "Spigot-Server-Patches/0005-Paper-Metrics.patch", "diffHunk": "@@ -107,16 +113,16 @@ index 0000000000000000000000000000000000000000..e4923ca371012188793b284cb0ed4280\n +     * Starts the Scheduler which submits our data every 30 minutes.\n +     */\n +    private void startSubmitting() {\n-+        final Timer timer = new Timer(true);\n-+        timer.scheduleAtFixedRate(new TimerTask() {\n-+            @Override\n-+            public void run() {\n-+                submitData();\n-+            }\n-+        }, 1000 * 60 * 5, 1000 * 60 * 30);\n-+        // Submit the data every 30 minutes, first time after 5 minutes to give other plugins enough time to start\n-+        // WARNING: Changing the frequency has no effect but your plugin WILL be blocked/deleted!\n-+        // WARNING: Just don't do it!\n++        final Runnable submitTask = this::submitData;\n++\n++        // Many servers tend to restart at a fixed time at xx:00 which causes an uneven distribution of requests on the\n++        // bStats backend. To circumvent this problem, we introduce some randomness into the initial and second delay.\n++        // WARNING: You must not modify and part of this Metrics class, including the submit delay or frequency!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a64b744fb4c079ad6f7a911cd9ab6630424fbeb"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5MjA4Mg==", "bodyText": "Fixed", "url": "https://github.com/PaperMC/Paper/pull/4914#discussion_r546392082", "createdAt": "2020-12-20T15:33:03Z", "author": {"login": "Bastian"}, "path": "Spigot-Server-Patches/0005-Paper-Metrics.patch", "diffHunk": "@@ -107,16 +113,16 @@ index 0000000000000000000000000000000000000000..e4923ca371012188793b284cb0ed4280\n +     * Starts the Scheduler which submits our data every 30 minutes.\n +     */\n +    private void startSubmitting() {\n-+        final Timer timer = new Timer(true);\n-+        timer.scheduleAtFixedRate(new TimerTask() {\n-+            @Override\n-+            public void run() {\n-+                submitData();\n-+            }\n-+        }, 1000 * 60 * 5, 1000 * 60 * 30);\n-+        // Submit the data every 30 minutes, first time after 5 minutes to give other plugins enough time to start\n-+        // WARNING: Changing the frequency has no effect but your plugin WILL be blocked/deleted!\n-+        // WARNING: Just don't do it!\n++        final Runnable submitTask = this::submitData;\n++\n++        // Many servers tend to restart at a fixed time at xx:00 which causes an uneven distribution of requests on the\n++        // bStats backend. To circumvent this problem, we introduce some randomness into the initial and second delay.\n++        // WARNING: You must not modify and part of this Metrics class, including the submit delay or frequency!", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMxNTkzNg=="}, "originalCommit": {"oid": "0a64b744fb4c079ad6f7a911cd9ab6630424fbeb"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1680, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}