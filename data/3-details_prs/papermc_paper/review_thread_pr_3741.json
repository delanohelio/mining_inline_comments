{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyODI2MTI1", "number": 3741, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzowOTowN1rOEKl-0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzowOTowN1rOEKl-0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NTQzNTA1OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0531-Update-itemstack-legacy-name-and-lore.patch", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzowOTowN1rOGrub6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QyMDozOToxM1rOGs3fYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUwMjc2MQ==", "bodyText": "This should validate that the components has a colored text and that italic is null before converting to avoid converting every single load", "url": "https://github.com/PaperMC/Paper/pull/3741#discussion_r448502761", "createdAt": "2020-07-01T17:09:07Z", "author": {"login": "aikar"}, "path": "Spigot-Server-Patches/0531-Update-itemstack-legacy-name-and-lore.patch", "diffHunk": "@@ -0,0 +1,91 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <Blake.Galbreath@GMail.com>\n+Date: Wed, 1 Jul 2020 11:57:40 -0500\n+Subject: [PATCH] Update itemstack legacy name and lore\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/ItemStack.java b/src/main/java/net/minecraft/server/ItemStack.java\n+index 00725529793d6c2fe26ecacf900355b40e31dad8..53dc47ffb48cce2ef160d1d61766e6700f67c6e3 100644\n+--- a/src/main/java/net/minecraft/server/ItemStack.java\n++++ b/src/main/java/net/minecraft/server/ItemStack.java\n+@@ -83,6 +83,52 @@ public final class ItemStack {\n+             list.sort((Comparator<? super NBTBase>) enchantSorter); // Paper\n+         } catch (Exception ignored) {}\n+     }\n++\n++    private void processText() {\n++        NBTTagCompound display = getSubTag(\"display\");\n++        if (display != null) {\n++            if (display.hasKeyOfType(\"Name\", 8)) {\n++                String json = display.getString(\"Name\");\n++                if (json != null && json.contains(\"\\u00A7\")) {\n++                    try {\n++                        display.set(\"Name\", convert(json));\n++                    } catch (JsonParseException jsonparseexception) {\n++                        display.remove(\"Name\");\n++                    }\n++                }\n++            }\n++            if (display.hasKeyOfType(\"Lore\", 9)) {\n++                NBTTagList list = display.getList(\"Lore\", 8);\n++                boolean legacy = false;\n++                for (int index = 0; index < list.size(); index++) {\n++                    String json = list.getString(index);\n++                    if (json != null && json.contains(\"\\u00A7\")) {\n++                        legacy = true;\n++                        break;\n++                    }\n++                }\n++                if (legacy) {\n++                    NBTTagList lore = new NBTTagList();\n++                    for (int index = 0; index < list.size(); index++) {\n++                        String json = list.getString(index);\n++                        try {\n++                            lore.add(convert(json));\n++                        } catch (JsonParseException ignore) {\n++                        }\n++                    }\n++                    display.set(\"Lore\", lore);\n++                }\n++            }\n++        }\n++    }\n++\n++    private NBTTagString convert(String json) {\n++        IChatBaseComponent component = IChatBaseComponent.ChatSerializer.jsonToComponent(json);\n++        if (component != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d411585540ae313d055d581f73365a453f37cf9"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUwNTc3Mw==", "bodyText": "I'm checking for the legacy color char \\u00A7 before running this convert method to prevent converting everything", "url": "https://github.com/PaperMC/Paper/pull/3741#discussion_r448505773", "createdAt": "2020-07-01T17:15:06Z", "author": {"login": "BillyGalbreath"}, "path": "Spigot-Server-Patches/0531-Update-itemstack-legacy-name-and-lore.patch", "diffHunk": "@@ -0,0 +1,91 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <Blake.Galbreath@GMail.com>\n+Date: Wed, 1 Jul 2020 11:57:40 -0500\n+Subject: [PATCH] Update itemstack legacy name and lore\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/ItemStack.java b/src/main/java/net/minecraft/server/ItemStack.java\n+index 00725529793d6c2fe26ecacf900355b40e31dad8..53dc47ffb48cce2ef160d1d61766e6700f67c6e3 100644\n+--- a/src/main/java/net/minecraft/server/ItemStack.java\n++++ b/src/main/java/net/minecraft/server/ItemStack.java\n+@@ -83,6 +83,52 @@ public final class ItemStack {\n+             list.sort((Comparator<? super NBTBase>) enchantSorter); // Paper\n+         } catch (Exception ignored) {}\n+     }\n++\n++    private void processText() {\n++        NBTTagCompound display = getSubTag(\"display\");\n++        if (display != null) {\n++            if (display.hasKeyOfType(\"Name\", 8)) {\n++                String json = display.getString(\"Name\");\n++                if (json != null && json.contains(\"\\u00A7\")) {\n++                    try {\n++                        display.set(\"Name\", convert(json));\n++                    } catch (JsonParseException jsonparseexception) {\n++                        display.remove(\"Name\");\n++                    }\n++                }\n++            }\n++            if (display.hasKeyOfType(\"Lore\", 9)) {\n++                NBTTagList list = display.getList(\"Lore\", 8);\n++                boolean legacy = false;\n++                for (int index = 0; index < list.size(); index++) {\n++                    String json = list.getString(index);\n++                    if (json != null && json.contains(\"\\u00A7\")) {\n++                        legacy = true;\n++                        break;\n++                    }\n++                }\n++                if (legacy) {\n++                    NBTTagList lore = new NBTTagList();\n++                    for (int index = 0; index < list.size(); index++) {\n++                        String json = list.getString(index);\n++                        try {\n++                            lore.add(convert(json));\n++                        } catch (JsonParseException ignore) {\n++                        }\n++                    }\n++                    display.set(\"Lore\", lore);\n++                }\n++            }\n++        }\n++    }\n++\n++    private NBTTagString convert(String json) {\n++        IChatBaseComponent component = IChatBaseComponent.ChatSerializer.jsonToComponent(json);\n++        if (component != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUwMjc2MQ=="}, "originalCommit": {"oid": "1d411585540ae313d055d581f73365a453f37cf9"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY5OTY4MQ==", "bodyText": "@aikar he's checking for the legacy color char \\u00A7 before running this convert method to prevent converting everything", "url": "https://github.com/PaperMC/Paper/pull/3741#discussion_r449699681", "createdAt": "2020-07-03T20:39:13Z", "author": null, "path": "Spigot-Server-Patches/0531-Update-itemstack-legacy-name-and-lore.patch", "diffHunk": "@@ -0,0 +1,91 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <Blake.Galbreath@GMail.com>\n+Date: Wed, 1 Jul 2020 11:57:40 -0500\n+Subject: [PATCH] Update itemstack legacy name and lore\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/ItemStack.java b/src/main/java/net/minecraft/server/ItemStack.java\n+index 00725529793d6c2fe26ecacf900355b40e31dad8..53dc47ffb48cce2ef160d1d61766e6700f67c6e3 100644\n+--- a/src/main/java/net/minecraft/server/ItemStack.java\n++++ b/src/main/java/net/minecraft/server/ItemStack.java\n+@@ -83,6 +83,52 @@ public final class ItemStack {\n+             list.sort((Comparator<? super NBTBase>) enchantSorter); // Paper\n+         } catch (Exception ignored) {}\n+     }\n++\n++    private void processText() {\n++        NBTTagCompound display = getSubTag(\"display\");\n++        if (display != null) {\n++            if (display.hasKeyOfType(\"Name\", 8)) {\n++                String json = display.getString(\"Name\");\n++                if (json != null && json.contains(\"\\u00A7\")) {\n++                    try {\n++                        display.set(\"Name\", convert(json));\n++                    } catch (JsonParseException jsonparseexception) {\n++                        display.remove(\"Name\");\n++                    }\n++                }\n++            }\n++            if (display.hasKeyOfType(\"Lore\", 9)) {\n++                NBTTagList list = display.getList(\"Lore\", 8);\n++                boolean legacy = false;\n++                for (int index = 0; index < list.size(); index++) {\n++                    String json = list.getString(index);\n++                    if (json != null && json.contains(\"\\u00A7\")) {\n++                        legacy = true;\n++                        break;\n++                    }\n++                }\n++                if (legacy) {\n++                    NBTTagList lore = new NBTTagList();\n++                    for (int index = 0; index < list.size(); index++) {\n++                        String json = list.getString(index);\n++                        try {\n++                            lore.add(convert(json));\n++                        } catch (JsonParseException ignore) {\n++                        }\n++                    }\n++                    display.set(\"Lore\", lore);\n++                }\n++            }\n++        }\n++    }\n++\n++    private NBTTagString convert(String json) {\n++        IChatBaseComponent component = IChatBaseComponent.ChatSerializer.jsonToComponent(json);\n++        if (component != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUwMjc2MQ=="}, "originalCommit": {"oid": "1d411585540ae313d055d581f73365a453f37cf9"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1939, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}