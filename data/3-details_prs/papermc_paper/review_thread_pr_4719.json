{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNjQ1MDc1", "number": 4719, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMDozMzowMlrOE2kiAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMDozMzowMlrOE2kiAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjU3MDg4OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0595-Throw-proper-exception-on-empty-JsonList-file.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMDozMzowMlrOHvb2Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMDozMzowMlrOHvb2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUwMTM2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +                com.google.common.base.Preconditions.checkNotNull(jsonarray, \"The file \\\"\" + this.c.getName() + \"\\\" is either empty or corrupt\"); // Paper\n          \n          \n            \n            +                com.google.common.base.Preconditions.checkState(jsonarray != null, \"The file \\\"\" + this.c.getName() + \"\\\" is either empty or corrupt\"); // Paper", "url": "https://github.com/PaperMC/Paper/pull/4719#discussion_r519501363", "createdAt": "2020-11-09T00:33:02Z", "author": {"login": "kashike"}, "path": "Spigot-Server-Patches/0595-Throw-proper-exception-on-empty-JsonList-file.patch", "diffHunk": "@@ -0,0 +1,18 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Mariell Hoversholm <proximyst@proximyst.com>\n+Date: Sun, 1 Nov 2020 16:43:11 +0100\n+Subject: [PATCH] Throw proper exception on empty JsonList file\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/JsonList.java b/src/main/java/net/minecraft/server/JsonList.java\n+index 9213bfb78e92b838189161045e3945588251b486..9463db9df21f187593ee5ea649288e5bc34da720 100644\n+--- a/src/main/java/net/minecraft/server/JsonList.java\n++++ b/src/main/java/net/minecraft/server/JsonList.java\n+@@ -187,6 +187,7 @@ public abstract class JsonList<K, V extends JsonListEntry<K>> {\n+ \n+             try {\n+                 JsonArray jsonarray = (JsonArray) JsonList.b.fromJson(bufferedreader, JsonArray.class);\n++                com.google.common.base.Preconditions.checkNotNull(jsonarray, \"The file \\\"\" + this.c.getName() + \"\\\" is either empty or corrupt\"); // Paper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a24562c458411f29f7c143ef08424630319d519f"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1719, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}