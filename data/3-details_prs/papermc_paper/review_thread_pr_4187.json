{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMTY3ODU5", "number": 4187, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMDowMDoxNFrOEbWRYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMDoxOTozNVrOEbWXJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTExOTA0OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMDowMDoxNFrOHFPf4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMDowMDoxNFrOHFPf4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI1ODg1MA==", "bodyText": "Lower the paper comment?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +    // Paper start\n          \n          \n            \n                 @Override\n          \n          \n            \n                 public boolean isCollidable() {\n          \n          \n            \n                 @Override\n          \n          \n            \n                 public boolean isCollidable() {\n          \n          \n            \n            +        // Paper start", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475258850", "createdAt": "2020-08-23T20:00:14Z", "author": {"login": "Prof-Bloodstone"}, "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "diffHunk": "@@ -0,0 +1,179 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <blake.galbreath@gmail.com>\n+Date: Sun, 23 Aug 2020 20:59:00 +0200\n+Subject: [PATCH] Climbing should not bypass cramming gamerule\n+\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+index d5a1ade21749bba420257f3ece7878f32148d6ff..9c921f9e6d2d053345d57546251a691dc76ccb42 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+@@ -654,4 +654,9 @@ public class PaperWorldConfig {\n+             maxLightningFlashDistance = 512; // Vanilla value\n+         }\n+     }\n++\n++    public boolean fixClimbingBypassingCrammingRule = false;\n++    private void fixClimbingBypassingCrammingRule() {\n++        fixClimbingBypassingCrammingRule = getBoolean(\"fix-climbing-bypassing-cramming-rule\", fixClimbingBypassingCrammingRule);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java\n+index 97e61dae7927d7da18fcb23d9e4bf639234af4a5..ad6673331e5036a13662a77237bdc66a88b79123 100644\n+--- a/src/main/java/net/minecraft/server/Entity.java\n++++ b/src/main/java/net/minecraft/server/Entity.java\n+@@ -1476,6 +1476,12 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke\n+     }\n+ \n+     public boolean isCollidable() {\n++        // Paper start\n++        return isCollidable(false);\n++    }\n++\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        // Paper end\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+index 70c2c2e3e42f9c9d03ccb07d20db246436d0e676..8627f03d8ef39d810da3b3ef226863baec95b2de 100644\n+--- a/src/main/java/net/minecraft/server/EntityArmorStand.java\n++++ b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+@@ -320,7 +320,7 @@ public class EntityArmorStand extends EntityLiving {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java\n+index a726dd6768c672ab19bae3717cdf40b2c2358e70..2c24fd4a91d8bf94a7bee95796b9ecd2dd00599f 100644\n+--- a/src/main/java/net/minecraft/server/EntityBat.java\n++++ b/src/main/java/net/minecraft/server/EntityBat.java\n+@@ -50,7 +50,7 @@ public class EntityBat extends EntityAmbient {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java\n+index 7df2837d6a058d375e8d45b7c00fac343abaf7fa..ce2145e314218697b06f02572c329305d6a7a8c6 100644\n+--- a/src/main/java/net/minecraft/server/EntityBoat.java\n++++ b/src/main/java/net/minecraft/server/EntityBoat.java\n+@@ -106,7 +106,7 @@ public class EntityBoat extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+index 8921c2333cd5efcb87dd52b95fe12fd5340df55f..cc298f28d376022ef34e14183425c86e66261e5e 100644\n+--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return !this.isVehicle();\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java\n+index b92e74349b402b6a8687876073f974128fe242a4..2662e5b1c4d47e5c76e39f0c19e41404483d31c0 100644\n+--- a/src/main/java/net/minecraft/server/EntityLiving.java\n++++ b/src/main/java/net/minecraft/server/EntityLiving.java\n+@@ -42,7 +42,6 @@ import org.bukkit.event.entity.EntityTeleportEvent;\n+ import org.bukkit.event.player.PlayerItemConsumeEvent;\n+ // CraftBukkit end\n+ \n+-import co.aikar.timings.MinecraftTimings; // Paper\n+ \n+ public abstract class EntityLiving extends Entity {\n+ \n+@@ -2835,7 +2834,7 @@ public abstract class EntityLiving extends Entity {\n+             return;\n+         }\n+         // Paper - end don't run getEntities if we're not going to use its result\n+-        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.a(this));\n++        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.pushable(this, world.paperConfig.fixClimbingBypassingCrammingRule)); // Paper - fix climbing bypassing cramming rule\n+ \n+         if (!list.isEmpty()) {\n+             // Paper - move up\n+@@ -2973,9 +2972,16 @@ public abstract class EntityLiving extends Entity {\n+         return !this.dead && this.collides; // CraftBukkit\n+     }\n+ \n++    // Paper start\n+     @Override\n+     public boolean isCollidable() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0f5a2d1f1579e46126a0eb995747e4085131185"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTEyMTg5OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMDowNDoyOVrOHFPhPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMDoyMDo1OVrOHFPn6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI1OTE5Nw==", "bodyText": "Since canCollideWith is checked on both entities - shouldn't isCollidable also be checked on both?", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475259197", "createdAt": "2020-08-23T20:04:29Z", "author": {"login": "Prof-Bloodstone"}, "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "diffHunk": "@@ -0,0 +1,179 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <blake.galbreath@gmail.com>\n+Date: Sun, 23 Aug 2020 20:59:00 +0200\n+Subject: [PATCH] Climbing should not bypass cramming gamerule\n+\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+index d5a1ade21749bba420257f3ece7878f32148d6ff..9c921f9e6d2d053345d57546251a691dc76ccb42 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+@@ -654,4 +654,9 @@ public class PaperWorldConfig {\n+             maxLightningFlashDistance = 512; // Vanilla value\n+         }\n+     }\n++\n++    public boolean fixClimbingBypassingCrammingRule = false;\n++    private void fixClimbingBypassingCrammingRule() {\n++        fixClimbingBypassingCrammingRule = getBoolean(\"fix-climbing-bypassing-cramming-rule\", fixClimbingBypassingCrammingRule);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java\n+index 97e61dae7927d7da18fcb23d9e4bf639234af4a5..ad6673331e5036a13662a77237bdc66a88b79123 100644\n+--- a/src/main/java/net/minecraft/server/Entity.java\n++++ b/src/main/java/net/minecraft/server/Entity.java\n+@@ -1476,6 +1476,12 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke\n+     }\n+ \n+     public boolean isCollidable() {\n++        // Paper start\n++        return isCollidable(false);\n++    }\n++\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        // Paper end\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+index 70c2c2e3e42f9c9d03ccb07d20db246436d0e676..8627f03d8ef39d810da3b3ef226863baec95b2de 100644\n+--- a/src/main/java/net/minecraft/server/EntityArmorStand.java\n++++ b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+@@ -320,7 +320,7 @@ public class EntityArmorStand extends EntityLiving {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java\n+index a726dd6768c672ab19bae3717cdf40b2c2358e70..2c24fd4a91d8bf94a7bee95796b9ecd2dd00599f 100644\n+--- a/src/main/java/net/minecraft/server/EntityBat.java\n++++ b/src/main/java/net/minecraft/server/EntityBat.java\n+@@ -50,7 +50,7 @@ public class EntityBat extends EntityAmbient {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java\n+index 7df2837d6a058d375e8d45b7c00fac343abaf7fa..ce2145e314218697b06f02572c329305d6a7a8c6 100644\n+--- a/src/main/java/net/minecraft/server/EntityBoat.java\n++++ b/src/main/java/net/minecraft/server/EntityBoat.java\n+@@ -106,7 +106,7 @@ public class EntityBoat extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+index 8921c2333cd5efcb87dd52b95fe12fd5340df55f..cc298f28d376022ef34e14183425c86e66261e5e 100644\n+--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return !this.isVehicle();\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java\n+index b92e74349b402b6a8687876073f974128fe242a4..2662e5b1c4d47e5c76e39f0c19e41404483d31c0 100644\n+--- a/src/main/java/net/minecraft/server/EntityLiving.java\n++++ b/src/main/java/net/minecraft/server/EntityLiving.java\n+@@ -42,7 +42,6 @@ import org.bukkit.event.entity.EntityTeleportEvent;\n+ import org.bukkit.event.player.PlayerItemConsumeEvent;\n+ // CraftBukkit end\n+ \n+-import co.aikar.timings.MinecraftTimings; // Paper\n+ \n+ public abstract class EntityLiving extends Entity {\n+ \n+@@ -2835,7 +2834,7 @@ public abstract class EntityLiving extends Entity {\n+             return;\n+         }\n+         // Paper - end don't run getEntities if we're not going to use its result\n+-        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.a(this));\n++        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.pushable(this, world.paperConfig.fixClimbingBypassingCrammingRule)); // Paper - fix climbing bypassing cramming rule\n+ \n+         if (!list.isEmpty()) {\n+             // Paper - move up\n+@@ -2973,9 +2972,16 @@ public abstract class EntityLiving extends Entity {\n+         return !this.dead && this.collides; // CraftBukkit\n+     }\n+ \n++    // Paper start\n+     @Override\n+     public boolean isCollidable() {\n+-        return this.isAlive() && !this.isSpectator() && !this.isClimbing() && this.collides; // CraftBukkit\n++        return this.isCollidable(world.paperConfig.fixClimbingBypassingCrammingRule);\n++    }\n++\n++    @Override\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        return this.isAlive() && !this.isSpectator() && (ignoreClimbing || !this.isClimbing()) && this.collides; // CraftBukkit\n++        // Paper end\n+     }\n+ \n+     // CraftBukkit start - collidable API\n+diff --git a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java\n+index 13fcb666ec20f844846eb48265ec9f77484b397a..4af241e4b8d073acf88a6c12896ea1bdeaa983d1 100644\n+--- a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java\n+@@ -107,7 +107,7 @@ public abstract class EntityMinecartAbstract extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityParrot.java b/src/main/java/net/minecraft/server/EntityParrot.java\n+index 34e08dda2e16cd4a6ecd8d8c6dc89f090ec2bc56..318852bff2b4ddc88465287a34377e47f3e72280 100644\n+--- a/src/main/java/net/minecraft/server/EntityParrot.java\n++++ b/src/main/java/net/minecraft/server/EntityParrot.java\n+@@ -314,8 +314,8 @@ public class EntityParrot extends EntityPerchable implements EntityBird {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n+-        return super.isCollidable(); // CraftBukkit - collidable API\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n++        return super.isCollidable(ignoreClimbing); // CraftBukkit - collidable API // Paper\n+     }\n+ \n+     @Override\n+diff --git a/src/main/java/net/minecraft/server/IEntitySelector.java b/src/main/java/net/minecraft/server/IEntitySelector.java\n+index 06ce390b6492f23343e57e648bff241d96fdb7b6..9dafea8af0284e17f7ae9b755eddc2e6349833df 100644\n+--- a/src/main/java/net/minecraft/server/IEntitySelector.java\n++++ b/src/main/java/net/minecraft/server/IEntitySelector.java\n+@@ -43,11 +43,17 @@ public final class IEntitySelector {\n+     }\n+ \n+     public static Predicate<Entity> a(Entity entity) {\n++        // Paper start - ignoreClimbing param\n++        return pushable(entity, false);\n++    }\n++\n++    public static Predicate<Entity> pushable(Entity entity, boolean ignoreClimbing) {\n++        // Paper end\n+         ScoreboardTeamBase scoreboardteambase = entity.getScoreboardTeam();\n+         ScoreboardTeamBase.EnumTeamPush scoreboardteambase_enumteampush = scoreboardteambase == null ? ScoreboardTeamBase.EnumTeamPush.ALWAYS : scoreboardteambase.getCollisionRule();\n+ \n+         return (Predicate) (scoreboardteambase_enumteampush == ScoreboardTeamBase.EnumTeamPush.NEVER ? Predicates.alwaysFalse() : IEntitySelector.g.and((entity1) -> {\n+-            if (!entity1.canCollideWith(entity) || !entity.canCollideWith(entity1)) { // CraftBukkit - collidable API\n++            if (!entity1.isCollidable(ignoreClimbing) || !entity1.canCollideWith(entity) || !entity.canCollideWith(entity1)) { // CraftBukkit - collidable API // Paper - isCollidable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0f5a2d1f1579e46126a0eb995747e4085131185"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDAwOA==", "bodyText": "No, the canCollideWith is an API addition from md_5 and has nothing to do with the cramming rule fix.", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475260008", "createdAt": "2020-08-23T20:12:50Z", "author": {"login": "BillyGalbreath"}, "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "diffHunk": "@@ -0,0 +1,179 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <blake.galbreath@gmail.com>\n+Date: Sun, 23 Aug 2020 20:59:00 +0200\n+Subject: [PATCH] Climbing should not bypass cramming gamerule\n+\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+index d5a1ade21749bba420257f3ece7878f32148d6ff..9c921f9e6d2d053345d57546251a691dc76ccb42 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+@@ -654,4 +654,9 @@ public class PaperWorldConfig {\n+             maxLightningFlashDistance = 512; // Vanilla value\n+         }\n+     }\n++\n++    public boolean fixClimbingBypassingCrammingRule = false;\n++    private void fixClimbingBypassingCrammingRule() {\n++        fixClimbingBypassingCrammingRule = getBoolean(\"fix-climbing-bypassing-cramming-rule\", fixClimbingBypassingCrammingRule);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java\n+index 97e61dae7927d7da18fcb23d9e4bf639234af4a5..ad6673331e5036a13662a77237bdc66a88b79123 100644\n+--- a/src/main/java/net/minecraft/server/Entity.java\n++++ b/src/main/java/net/minecraft/server/Entity.java\n+@@ -1476,6 +1476,12 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke\n+     }\n+ \n+     public boolean isCollidable() {\n++        // Paper start\n++        return isCollidable(false);\n++    }\n++\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        // Paper end\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+index 70c2c2e3e42f9c9d03ccb07d20db246436d0e676..8627f03d8ef39d810da3b3ef226863baec95b2de 100644\n+--- a/src/main/java/net/minecraft/server/EntityArmorStand.java\n++++ b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+@@ -320,7 +320,7 @@ public class EntityArmorStand extends EntityLiving {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java\n+index a726dd6768c672ab19bae3717cdf40b2c2358e70..2c24fd4a91d8bf94a7bee95796b9ecd2dd00599f 100644\n+--- a/src/main/java/net/minecraft/server/EntityBat.java\n++++ b/src/main/java/net/minecraft/server/EntityBat.java\n+@@ -50,7 +50,7 @@ public class EntityBat extends EntityAmbient {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java\n+index 7df2837d6a058d375e8d45b7c00fac343abaf7fa..ce2145e314218697b06f02572c329305d6a7a8c6 100644\n+--- a/src/main/java/net/minecraft/server/EntityBoat.java\n++++ b/src/main/java/net/minecraft/server/EntityBoat.java\n+@@ -106,7 +106,7 @@ public class EntityBoat extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+index 8921c2333cd5efcb87dd52b95fe12fd5340df55f..cc298f28d376022ef34e14183425c86e66261e5e 100644\n+--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return !this.isVehicle();\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java\n+index b92e74349b402b6a8687876073f974128fe242a4..2662e5b1c4d47e5c76e39f0c19e41404483d31c0 100644\n+--- a/src/main/java/net/minecraft/server/EntityLiving.java\n++++ b/src/main/java/net/minecraft/server/EntityLiving.java\n+@@ -42,7 +42,6 @@ import org.bukkit.event.entity.EntityTeleportEvent;\n+ import org.bukkit.event.player.PlayerItemConsumeEvent;\n+ // CraftBukkit end\n+ \n+-import co.aikar.timings.MinecraftTimings; // Paper\n+ \n+ public abstract class EntityLiving extends Entity {\n+ \n+@@ -2835,7 +2834,7 @@ public abstract class EntityLiving extends Entity {\n+             return;\n+         }\n+         // Paper - end don't run getEntities if we're not going to use its result\n+-        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.a(this));\n++        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.pushable(this, world.paperConfig.fixClimbingBypassingCrammingRule)); // Paper - fix climbing bypassing cramming rule\n+ \n+         if (!list.isEmpty()) {\n+             // Paper - move up\n+@@ -2973,9 +2972,16 @@ public abstract class EntityLiving extends Entity {\n+         return !this.dead && this.collides; // CraftBukkit\n+     }\n+ \n++    // Paper start\n+     @Override\n+     public boolean isCollidable() {\n+-        return this.isAlive() && !this.isSpectator() && !this.isClimbing() && this.collides; // CraftBukkit\n++        return this.isCollidable(world.paperConfig.fixClimbingBypassingCrammingRule);\n++    }\n++\n++    @Override\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        return this.isAlive() && !this.isSpectator() && (ignoreClimbing || !this.isClimbing()) && this.collides; // CraftBukkit\n++        // Paper end\n+     }\n+ \n+     // CraftBukkit start - collidable API\n+diff --git a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java\n+index 13fcb666ec20f844846eb48265ec9f77484b397a..4af241e4b8d073acf88a6c12896ea1bdeaa983d1 100644\n+--- a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java\n+@@ -107,7 +107,7 @@ public abstract class EntityMinecartAbstract extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityParrot.java b/src/main/java/net/minecraft/server/EntityParrot.java\n+index 34e08dda2e16cd4a6ecd8d8c6dc89f090ec2bc56..318852bff2b4ddc88465287a34377e47f3e72280 100644\n+--- a/src/main/java/net/minecraft/server/EntityParrot.java\n++++ b/src/main/java/net/minecraft/server/EntityParrot.java\n+@@ -314,8 +314,8 @@ public class EntityParrot extends EntityPerchable implements EntityBird {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n+-        return super.isCollidable(); // CraftBukkit - collidable API\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n++        return super.isCollidable(ignoreClimbing); // CraftBukkit - collidable API // Paper\n+     }\n+ \n+     @Override\n+diff --git a/src/main/java/net/minecraft/server/IEntitySelector.java b/src/main/java/net/minecraft/server/IEntitySelector.java\n+index 06ce390b6492f23343e57e648bff241d96fdb7b6..9dafea8af0284e17f7ae9b755eddc2e6349833df 100644\n+--- a/src/main/java/net/minecraft/server/IEntitySelector.java\n++++ b/src/main/java/net/minecraft/server/IEntitySelector.java\n+@@ -43,11 +43,17 @@ public final class IEntitySelector {\n+     }\n+ \n+     public static Predicate<Entity> a(Entity entity) {\n++        // Paper start - ignoreClimbing param\n++        return pushable(entity, false);\n++    }\n++\n++    public static Predicate<Entity> pushable(Entity entity, boolean ignoreClimbing) {\n++        // Paper end\n+         ScoreboardTeamBase scoreboardteambase = entity.getScoreboardTeam();\n+         ScoreboardTeamBase.EnumTeamPush scoreboardteambase_enumteampush = scoreboardteambase == null ? ScoreboardTeamBase.EnumTeamPush.ALWAYS : scoreboardteambase.getCollisionRule();\n+ \n+         return (Predicate) (scoreboardteambase_enumteampush == ScoreboardTeamBase.EnumTeamPush.NEVER ? Predicates.alwaysFalse() : IEntitySelector.g.and((entity1) -> {\n+-            if (!entity1.canCollideWith(entity) || !entity.canCollideWith(entity1)) { // CraftBukkit - collidable API\n++            if (!entity1.isCollidable(ignoreClimbing) || !entity1.canCollideWith(entity) || !entity.canCollideWith(entity1)) { // CraftBukkit - collidable API // Paper - isCollidable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI1OTE5Nw=="}, "originalCommit": {"oid": "e0f5a2d1f1579e46126a0eb995747e4085131185"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDkwNw==", "bodyText": "Derp. You are right, makes sense.", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475260907", "createdAt": "2020-08-23T20:20:59Z", "author": {"login": "Prof-Bloodstone"}, "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "diffHunk": "@@ -0,0 +1,179 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <blake.galbreath@gmail.com>\n+Date: Sun, 23 Aug 2020 20:59:00 +0200\n+Subject: [PATCH] Climbing should not bypass cramming gamerule\n+\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+index d5a1ade21749bba420257f3ece7878f32148d6ff..9c921f9e6d2d053345d57546251a691dc76ccb42 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+@@ -654,4 +654,9 @@ public class PaperWorldConfig {\n+             maxLightningFlashDistance = 512; // Vanilla value\n+         }\n+     }\n++\n++    public boolean fixClimbingBypassingCrammingRule = false;\n++    private void fixClimbingBypassingCrammingRule() {\n++        fixClimbingBypassingCrammingRule = getBoolean(\"fix-climbing-bypassing-cramming-rule\", fixClimbingBypassingCrammingRule);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java\n+index 97e61dae7927d7da18fcb23d9e4bf639234af4a5..ad6673331e5036a13662a77237bdc66a88b79123 100644\n+--- a/src/main/java/net/minecraft/server/Entity.java\n++++ b/src/main/java/net/minecraft/server/Entity.java\n+@@ -1476,6 +1476,12 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke\n+     }\n+ \n+     public boolean isCollidable() {\n++        // Paper start\n++        return isCollidable(false);\n++    }\n++\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        // Paper end\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+index 70c2c2e3e42f9c9d03ccb07d20db246436d0e676..8627f03d8ef39d810da3b3ef226863baec95b2de 100644\n+--- a/src/main/java/net/minecraft/server/EntityArmorStand.java\n++++ b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+@@ -320,7 +320,7 @@ public class EntityArmorStand extends EntityLiving {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java\n+index a726dd6768c672ab19bae3717cdf40b2c2358e70..2c24fd4a91d8bf94a7bee95796b9ecd2dd00599f 100644\n+--- a/src/main/java/net/minecraft/server/EntityBat.java\n++++ b/src/main/java/net/minecraft/server/EntityBat.java\n+@@ -50,7 +50,7 @@ public class EntityBat extends EntityAmbient {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java\n+index 7df2837d6a058d375e8d45b7c00fac343abaf7fa..ce2145e314218697b06f02572c329305d6a7a8c6 100644\n+--- a/src/main/java/net/minecraft/server/EntityBoat.java\n++++ b/src/main/java/net/minecraft/server/EntityBoat.java\n+@@ -106,7 +106,7 @@ public class EntityBoat extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+index 8921c2333cd5efcb87dd52b95fe12fd5340df55f..cc298f28d376022ef34e14183425c86e66261e5e 100644\n+--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return !this.isVehicle();\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java\n+index b92e74349b402b6a8687876073f974128fe242a4..2662e5b1c4d47e5c76e39f0c19e41404483d31c0 100644\n+--- a/src/main/java/net/minecraft/server/EntityLiving.java\n++++ b/src/main/java/net/minecraft/server/EntityLiving.java\n+@@ -42,7 +42,6 @@ import org.bukkit.event.entity.EntityTeleportEvent;\n+ import org.bukkit.event.player.PlayerItemConsumeEvent;\n+ // CraftBukkit end\n+ \n+-import co.aikar.timings.MinecraftTimings; // Paper\n+ \n+ public abstract class EntityLiving extends Entity {\n+ \n+@@ -2835,7 +2834,7 @@ public abstract class EntityLiving extends Entity {\n+             return;\n+         }\n+         // Paper - end don't run getEntities if we're not going to use its result\n+-        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.a(this));\n++        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.pushable(this, world.paperConfig.fixClimbingBypassingCrammingRule)); // Paper - fix climbing bypassing cramming rule\n+ \n+         if (!list.isEmpty()) {\n+             // Paper - move up\n+@@ -2973,9 +2972,16 @@ public abstract class EntityLiving extends Entity {\n+         return !this.dead && this.collides; // CraftBukkit\n+     }\n+ \n++    // Paper start\n+     @Override\n+     public boolean isCollidable() {\n+-        return this.isAlive() && !this.isSpectator() && !this.isClimbing() && this.collides; // CraftBukkit\n++        return this.isCollidable(world.paperConfig.fixClimbingBypassingCrammingRule);\n++    }\n++\n++    @Override\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        return this.isAlive() && !this.isSpectator() && (ignoreClimbing || !this.isClimbing()) && this.collides; // CraftBukkit\n++        // Paper end\n+     }\n+ \n+     // CraftBukkit start - collidable API\n+diff --git a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java\n+index 13fcb666ec20f844846eb48265ec9f77484b397a..4af241e4b8d073acf88a6c12896ea1bdeaa983d1 100644\n+--- a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java\n+@@ -107,7 +107,7 @@ public abstract class EntityMinecartAbstract extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityParrot.java b/src/main/java/net/minecraft/server/EntityParrot.java\n+index 34e08dda2e16cd4a6ecd8d8c6dc89f090ec2bc56..318852bff2b4ddc88465287a34377e47f3e72280 100644\n+--- a/src/main/java/net/minecraft/server/EntityParrot.java\n++++ b/src/main/java/net/minecraft/server/EntityParrot.java\n+@@ -314,8 +314,8 @@ public class EntityParrot extends EntityPerchable implements EntityBird {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n+-        return super.isCollidable(); // CraftBukkit - collidable API\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n++        return super.isCollidable(ignoreClimbing); // CraftBukkit - collidable API // Paper\n+     }\n+ \n+     @Override\n+diff --git a/src/main/java/net/minecraft/server/IEntitySelector.java b/src/main/java/net/minecraft/server/IEntitySelector.java\n+index 06ce390b6492f23343e57e648bff241d96fdb7b6..9dafea8af0284e17f7ae9b755eddc2e6349833df 100644\n+--- a/src/main/java/net/minecraft/server/IEntitySelector.java\n++++ b/src/main/java/net/minecraft/server/IEntitySelector.java\n+@@ -43,11 +43,17 @@ public final class IEntitySelector {\n+     }\n+ \n+     public static Predicate<Entity> a(Entity entity) {\n++        // Paper start - ignoreClimbing param\n++        return pushable(entity, false);\n++    }\n++\n++    public static Predicate<Entity> pushable(Entity entity, boolean ignoreClimbing) {\n++        // Paper end\n+         ScoreboardTeamBase scoreboardteambase = entity.getScoreboardTeam();\n+         ScoreboardTeamBase.EnumTeamPush scoreboardteambase_enumteampush = scoreboardteambase == null ? ScoreboardTeamBase.EnumTeamPush.ALWAYS : scoreboardteambase.getCollisionRule();\n+ \n+         return (Predicate) (scoreboardteambase_enumteampush == ScoreboardTeamBase.EnumTeamPush.NEVER ? Predicates.alwaysFalse() : IEntitySelector.g.and((entity1) -> {\n+-            if (!entity1.canCollideWith(entity) || !entity.canCollideWith(entity1)) { // CraftBukkit - collidable API\n++            if (!entity1.isCollidable(ignoreClimbing) || !entity1.canCollideWith(entity) || !entity.canCollideWith(entity1)) { // CraftBukkit - collidable API // Paper - isCollidable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI1OTE5Nw=="}, "originalCommit": {"oid": "e0f5a2d1f1579e46126a0eb995747e4085131185"}, "originalPosition": 176}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTEzMjUzOnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMDoxNzo1M1rOHFPmJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMDoxODozOFrOHFPmYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDQ1Mg==", "bodyText": "?", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475260452", "createdAt": "2020-08-23T20:17:53Z", "author": {"login": "BillyGalbreath"}, "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "diffHunk": "@@ -0,0 +1,179 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <blake.galbreath@gmail.com>\n+Date: Sun, 23 Aug 2020 20:59:00 +0200\n+Subject: [PATCH] Climbing should not bypass cramming gamerule\n+\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+index d5a1ade21749bba420257f3ece7878f32148d6ff..9c921f9e6d2d053345d57546251a691dc76ccb42 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+@@ -654,4 +654,9 @@ public class PaperWorldConfig {\n+             maxLightningFlashDistance = 512; // Vanilla value\n+         }\n+     }\n++\n++    public boolean fixClimbingBypassingCrammingRule = false;\n++    private void fixClimbingBypassingCrammingRule() {\n++        fixClimbingBypassingCrammingRule = getBoolean(\"fix-climbing-bypassing-cramming-rule\", fixClimbingBypassingCrammingRule);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java\n+index 97e61dae7927d7da18fcb23d9e4bf639234af4a5..ad6673331e5036a13662a77237bdc66a88b79123 100644\n+--- a/src/main/java/net/minecraft/server/Entity.java\n++++ b/src/main/java/net/minecraft/server/Entity.java\n+@@ -1476,6 +1476,12 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke\n+     }\n+ \n+     public boolean isCollidable() {\n++        // Paper start\n++        return isCollidable(false);\n++    }\n++\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        // Paper end\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+index 70c2c2e3e42f9c9d03ccb07d20db246436d0e676..8627f03d8ef39d810da3b3ef226863baec95b2de 100644\n+--- a/src/main/java/net/minecraft/server/EntityArmorStand.java\n++++ b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+@@ -320,7 +320,7 @@ public class EntityArmorStand extends EntityLiving {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java\n+index a726dd6768c672ab19bae3717cdf40b2c2358e70..2c24fd4a91d8bf94a7bee95796b9ecd2dd00599f 100644\n+--- a/src/main/java/net/minecraft/server/EntityBat.java\n++++ b/src/main/java/net/minecraft/server/EntityBat.java\n+@@ -50,7 +50,7 @@ public class EntityBat extends EntityAmbient {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java\n+index 7df2837d6a058d375e8d45b7c00fac343abaf7fa..ce2145e314218697b06f02572c329305d6a7a8c6 100644\n+--- a/src/main/java/net/minecraft/server/EntityBoat.java\n++++ b/src/main/java/net/minecraft/server/EntityBoat.java\n+@@ -106,7 +106,7 @@ public class EntityBoat extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+index 8921c2333cd5efcb87dd52b95fe12fd5340df55f..cc298f28d376022ef34e14183425c86e66261e5e 100644\n+--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return !this.isVehicle();\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java\n+index b92e74349b402b6a8687876073f974128fe242a4..2662e5b1c4d47e5c76e39f0c19e41404483d31c0 100644\n+--- a/src/main/java/net/minecraft/server/EntityLiving.java\n++++ b/src/main/java/net/minecraft/server/EntityLiving.java\n+@@ -42,7 +42,6 @@ import org.bukkit.event.entity.EntityTeleportEvent;\n+ import org.bukkit.event.player.PlayerItemConsumeEvent;\n+ // CraftBukkit end\n+ \n+-import co.aikar.timings.MinecraftTimings; // Paper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8bb5c4d0dbff798c49ec9d5d03246557cf87baf"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDUxMg==", "bodyText": "IntelliJ going rogue again \ud83d\ude20", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475260512", "createdAt": "2020-08-23T20:18:38Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "diffHunk": "@@ -0,0 +1,179 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <blake.galbreath@gmail.com>\n+Date: Sun, 23 Aug 2020 20:59:00 +0200\n+Subject: [PATCH] Climbing should not bypass cramming gamerule\n+\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+index d5a1ade21749bba420257f3ece7878f32148d6ff..9c921f9e6d2d053345d57546251a691dc76ccb42 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+@@ -654,4 +654,9 @@ public class PaperWorldConfig {\n+             maxLightningFlashDistance = 512; // Vanilla value\n+         }\n+     }\n++\n++    public boolean fixClimbingBypassingCrammingRule = false;\n++    private void fixClimbingBypassingCrammingRule() {\n++        fixClimbingBypassingCrammingRule = getBoolean(\"fix-climbing-bypassing-cramming-rule\", fixClimbingBypassingCrammingRule);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java\n+index 97e61dae7927d7da18fcb23d9e4bf639234af4a5..ad6673331e5036a13662a77237bdc66a88b79123 100644\n+--- a/src/main/java/net/minecraft/server/Entity.java\n++++ b/src/main/java/net/minecraft/server/Entity.java\n+@@ -1476,6 +1476,12 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke\n+     }\n+ \n+     public boolean isCollidable() {\n++        // Paper start\n++        return isCollidable(false);\n++    }\n++\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        // Paper end\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+index 70c2c2e3e42f9c9d03ccb07d20db246436d0e676..8627f03d8ef39d810da3b3ef226863baec95b2de 100644\n+--- a/src/main/java/net/minecraft/server/EntityArmorStand.java\n++++ b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+@@ -320,7 +320,7 @@ public class EntityArmorStand extends EntityLiving {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java\n+index a726dd6768c672ab19bae3717cdf40b2c2358e70..2c24fd4a91d8bf94a7bee95796b9ecd2dd00599f 100644\n+--- a/src/main/java/net/minecraft/server/EntityBat.java\n++++ b/src/main/java/net/minecraft/server/EntityBat.java\n+@@ -50,7 +50,7 @@ public class EntityBat extends EntityAmbient {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java\n+index 7df2837d6a058d375e8d45b7c00fac343abaf7fa..ce2145e314218697b06f02572c329305d6a7a8c6 100644\n+--- a/src/main/java/net/minecraft/server/EntityBoat.java\n++++ b/src/main/java/net/minecraft/server/EntityBoat.java\n+@@ -106,7 +106,7 @@ public class EntityBoat extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+index 8921c2333cd5efcb87dd52b95fe12fd5340df55f..cc298f28d376022ef34e14183425c86e66261e5e 100644\n+--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return !this.isVehicle();\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java\n+index b92e74349b402b6a8687876073f974128fe242a4..2662e5b1c4d47e5c76e39f0c19e41404483d31c0 100644\n+--- a/src/main/java/net/minecraft/server/EntityLiving.java\n++++ b/src/main/java/net/minecraft/server/EntityLiving.java\n+@@ -42,7 +42,6 @@ import org.bukkit.event.entity.EntityTeleportEvent;\n+ import org.bukkit.event.player.PlayerItemConsumeEvent;\n+ // CraftBukkit end\n+ \n+-import co.aikar.timings.MinecraftTimings; // Paper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDQ1Mg=="}, "originalCommit": {"oid": "a8bb5c4d0dbff798c49ec9d5d03246557cf87baf"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTEzMzgyOnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMDoxOTozNVrOHFPmxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QyMDo1MjozMlrOHFP7_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDYxNQ==", "bodyText": "This wasnt neccessary since Entity#isCollidable() already forwards to isCollidable(boolean)", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475260615", "createdAt": "2020-08-23T20:19:35Z", "author": {"login": "BillyGalbreath"}, "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "diffHunk": "@@ -0,0 +1,179 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <blake.galbreath@gmail.com>\n+Date: Sun, 23 Aug 2020 20:59:00 +0200\n+Subject: [PATCH] Climbing should not bypass cramming gamerule\n+\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+index d5a1ade21749bba420257f3ece7878f32148d6ff..9c921f9e6d2d053345d57546251a691dc76ccb42 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+@@ -654,4 +654,9 @@ public class PaperWorldConfig {\n+             maxLightningFlashDistance = 512; // Vanilla value\n+         }\n+     }\n++\n++    public boolean fixClimbingBypassingCrammingRule = false;\n++    private void fixClimbingBypassingCrammingRule() {\n++        fixClimbingBypassingCrammingRule = getBoolean(\"fix-climbing-bypassing-cramming-rule\", fixClimbingBypassingCrammingRule);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java\n+index 97e61dae7927d7da18fcb23d9e4bf639234af4a5..ad6673331e5036a13662a77237bdc66a88b79123 100644\n+--- a/src/main/java/net/minecraft/server/Entity.java\n++++ b/src/main/java/net/minecraft/server/Entity.java\n+@@ -1476,6 +1476,12 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke\n+     }\n+ \n+     public boolean isCollidable() {\n++        // Paper start\n++        return isCollidable(false);\n++    }\n++\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        // Paper end\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+index 70c2c2e3e42f9c9d03ccb07d20db246436d0e676..8627f03d8ef39d810da3b3ef226863baec95b2de 100644\n+--- a/src/main/java/net/minecraft/server/EntityArmorStand.java\n++++ b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+@@ -320,7 +320,7 @@ public class EntityArmorStand extends EntityLiving {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java\n+index a726dd6768c672ab19bae3717cdf40b2c2358e70..2c24fd4a91d8bf94a7bee95796b9ecd2dd00599f 100644\n+--- a/src/main/java/net/minecraft/server/EntityBat.java\n++++ b/src/main/java/net/minecraft/server/EntityBat.java\n+@@ -50,7 +50,7 @@ public class EntityBat extends EntityAmbient {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java\n+index 7df2837d6a058d375e8d45b7c00fac343abaf7fa..ce2145e314218697b06f02572c329305d6a7a8c6 100644\n+--- a/src/main/java/net/minecraft/server/EntityBoat.java\n++++ b/src/main/java/net/minecraft/server/EntityBoat.java\n+@@ -106,7 +106,7 @@ public class EntityBoat extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+index 8921c2333cd5efcb87dd52b95fe12fd5340df55f..cc298f28d376022ef34e14183425c86e66261e5e 100644\n+--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return !this.isVehicle();\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java\n+index b92e74349b402b6a8687876073f974128fe242a4..2662e5b1c4d47e5c76e39f0c19e41404483d31c0 100644\n+--- a/src/main/java/net/minecraft/server/EntityLiving.java\n++++ b/src/main/java/net/minecraft/server/EntityLiving.java\n+@@ -42,7 +42,6 @@ import org.bukkit.event.entity.EntityTeleportEvent;\n+ import org.bukkit.event.player.PlayerItemConsumeEvent;\n+ // CraftBukkit end\n+ \n+-import co.aikar.timings.MinecraftTimings; // Paper\n+ \n+ public abstract class EntityLiving extends Entity {\n+ \n+@@ -2835,7 +2834,7 @@ public abstract class EntityLiving extends Entity {\n+             return;\n+         }\n+         // Paper - end don't run getEntities if we're not going to use its result\n+-        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.a(this));\n++        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.pushable(this, world.paperConfig.fixClimbingBypassingCrammingRule)); // Paper - fix climbing bypassing cramming rule\n+ \n+         if (!list.isEmpty()) {\n+             // Paper - move up\n+@@ -2973,9 +2972,16 @@ public abstract class EntityLiving extends Entity {\n+         return !this.dead && this.collides; // CraftBukkit\n+     }\n+ \n+     @Override\n+     public boolean isCollidable() {\n++        // Paper start\n+-        return this.isAlive() && !this.isSpectator() && !this.isClimbing() && this.collides; // CraftBukkit\n++        return this.isCollidable(world.paperConfig.fixClimbingBypassingCrammingRule);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8bb5c4d0dbff798c49ec9d5d03246557cf87baf"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MTAyMg==", "bodyText": "It was when testing. Without that one, e.g. pigs in vines would not cram to death even though there were well over 50 pigs there; the second I started the server with, they crammed to death.", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475261022", "createdAt": "2020-08-23T20:22:23Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "diffHunk": "@@ -0,0 +1,179 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <blake.galbreath@gmail.com>\n+Date: Sun, 23 Aug 2020 20:59:00 +0200\n+Subject: [PATCH] Climbing should not bypass cramming gamerule\n+\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+index d5a1ade21749bba420257f3ece7878f32148d6ff..9c921f9e6d2d053345d57546251a691dc76ccb42 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+@@ -654,4 +654,9 @@ public class PaperWorldConfig {\n+             maxLightningFlashDistance = 512; // Vanilla value\n+         }\n+     }\n++\n++    public boolean fixClimbingBypassingCrammingRule = false;\n++    private void fixClimbingBypassingCrammingRule() {\n++        fixClimbingBypassingCrammingRule = getBoolean(\"fix-climbing-bypassing-cramming-rule\", fixClimbingBypassingCrammingRule);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java\n+index 97e61dae7927d7da18fcb23d9e4bf639234af4a5..ad6673331e5036a13662a77237bdc66a88b79123 100644\n+--- a/src/main/java/net/minecraft/server/Entity.java\n++++ b/src/main/java/net/minecraft/server/Entity.java\n+@@ -1476,6 +1476,12 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke\n+     }\n+ \n+     public boolean isCollidable() {\n++        // Paper start\n++        return isCollidable(false);\n++    }\n++\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        // Paper end\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+index 70c2c2e3e42f9c9d03ccb07d20db246436d0e676..8627f03d8ef39d810da3b3ef226863baec95b2de 100644\n+--- a/src/main/java/net/minecraft/server/EntityArmorStand.java\n++++ b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+@@ -320,7 +320,7 @@ public class EntityArmorStand extends EntityLiving {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java\n+index a726dd6768c672ab19bae3717cdf40b2c2358e70..2c24fd4a91d8bf94a7bee95796b9ecd2dd00599f 100644\n+--- a/src/main/java/net/minecraft/server/EntityBat.java\n++++ b/src/main/java/net/minecraft/server/EntityBat.java\n+@@ -50,7 +50,7 @@ public class EntityBat extends EntityAmbient {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java\n+index 7df2837d6a058d375e8d45b7c00fac343abaf7fa..ce2145e314218697b06f02572c329305d6a7a8c6 100644\n+--- a/src/main/java/net/minecraft/server/EntityBoat.java\n++++ b/src/main/java/net/minecraft/server/EntityBoat.java\n+@@ -106,7 +106,7 @@ public class EntityBoat extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+index 8921c2333cd5efcb87dd52b95fe12fd5340df55f..cc298f28d376022ef34e14183425c86e66261e5e 100644\n+--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return !this.isVehicle();\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java\n+index b92e74349b402b6a8687876073f974128fe242a4..2662e5b1c4d47e5c76e39f0c19e41404483d31c0 100644\n+--- a/src/main/java/net/minecraft/server/EntityLiving.java\n++++ b/src/main/java/net/minecraft/server/EntityLiving.java\n+@@ -42,7 +42,6 @@ import org.bukkit.event.entity.EntityTeleportEvent;\n+ import org.bukkit.event.player.PlayerItemConsumeEvent;\n+ // CraftBukkit end\n+ \n+-import co.aikar.timings.MinecraftTimings; // Paper\n+ \n+ public abstract class EntityLiving extends Entity {\n+ \n+@@ -2835,7 +2834,7 @@ public abstract class EntityLiving extends Entity {\n+             return;\n+         }\n+         // Paper - end don't run getEntities if we're not going to use its result\n+-        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.a(this));\n++        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.pushable(this, world.paperConfig.fixClimbingBypassingCrammingRule)); // Paper - fix climbing bypassing cramming rule\n+ \n+         if (!list.isEmpty()) {\n+             // Paper - move up\n+@@ -2973,9 +2972,16 @@ public abstract class EntityLiving extends Entity {\n+         return !this.dead && this.collides; // CraftBukkit\n+     }\n+ \n+     @Override\n+     public boolean isCollidable() {\n++        // Paper start\n+-        return this.isAlive() && !this.isSpectator() && !this.isClimbing() && this.collides; // CraftBukkit\n++        return this.isCollidable(world.paperConfig.fixClimbingBypassingCrammingRule);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDYxNQ=="}, "originalCommit": {"oid": "a8bb5c4d0dbff798c49ec9d5d03246557cf87baf"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MzU1OQ==", "bodyText": "You likely didn't add the param to this method in your test? My patch made it so the only isCollidable() was in Entity\nWill test here in a minute and see whats up", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475263559", "createdAt": "2020-08-23T20:33:28Z", "author": {"login": "BillyGalbreath"}, "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "diffHunk": "@@ -0,0 +1,179 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <blake.galbreath@gmail.com>\n+Date: Sun, 23 Aug 2020 20:59:00 +0200\n+Subject: [PATCH] Climbing should not bypass cramming gamerule\n+\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+index d5a1ade21749bba420257f3ece7878f32148d6ff..9c921f9e6d2d053345d57546251a691dc76ccb42 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+@@ -654,4 +654,9 @@ public class PaperWorldConfig {\n+             maxLightningFlashDistance = 512; // Vanilla value\n+         }\n+     }\n++\n++    public boolean fixClimbingBypassingCrammingRule = false;\n++    private void fixClimbingBypassingCrammingRule() {\n++        fixClimbingBypassingCrammingRule = getBoolean(\"fix-climbing-bypassing-cramming-rule\", fixClimbingBypassingCrammingRule);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java\n+index 97e61dae7927d7da18fcb23d9e4bf639234af4a5..ad6673331e5036a13662a77237bdc66a88b79123 100644\n+--- a/src/main/java/net/minecraft/server/Entity.java\n++++ b/src/main/java/net/minecraft/server/Entity.java\n+@@ -1476,6 +1476,12 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke\n+     }\n+ \n+     public boolean isCollidable() {\n++        // Paper start\n++        return isCollidable(false);\n++    }\n++\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        // Paper end\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+index 70c2c2e3e42f9c9d03ccb07d20db246436d0e676..8627f03d8ef39d810da3b3ef226863baec95b2de 100644\n+--- a/src/main/java/net/minecraft/server/EntityArmorStand.java\n++++ b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+@@ -320,7 +320,7 @@ public class EntityArmorStand extends EntityLiving {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java\n+index a726dd6768c672ab19bae3717cdf40b2c2358e70..2c24fd4a91d8bf94a7bee95796b9ecd2dd00599f 100644\n+--- a/src/main/java/net/minecraft/server/EntityBat.java\n++++ b/src/main/java/net/minecraft/server/EntityBat.java\n+@@ -50,7 +50,7 @@ public class EntityBat extends EntityAmbient {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java\n+index 7df2837d6a058d375e8d45b7c00fac343abaf7fa..ce2145e314218697b06f02572c329305d6a7a8c6 100644\n+--- a/src/main/java/net/minecraft/server/EntityBoat.java\n++++ b/src/main/java/net/minecraft/server/EntityBoat.java\n+@@ -106,7 +106,7 @@ public class EntityBoat extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+index 8921c2333cd5efcb87dd52b95fe12fd5340df55f..cc298f28d376022ef34e14183425c86e66261e5e 100644\n+--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return !this.isVehicle();\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java\n+index b92e74349b402b6a8687876073f974128fe242a4..2662e5b1c4d47e5c76e39f0c19e41404483d31c0 100644\n+--- a/src/main/java/net/minecraft/server/EntityLiving.java\n++++ b/src/main/java/net/minecraft/server/EntityLiving.java\n+@@ -42,7 +42,6 @@ import org.bukkit.event.entity.EntityTeleportEvent;\n+ import org.bukkit.event.player.PlayerItemConsumeEvent;\n+ // CraftBukkit end\n+ \n+-import co.aikar.timings.MinecraftTimings; // Paper\n+ \n+ public abstract class EntityLiving extends Entity {\n+ \n+@@ -2835,7 +2834,7 @@ public abstract class EntityLiving extends Entity {\n+             return;\n+         }\n+         // Paper - end don't run getEntities if we're not going to use its result\n+-        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.a(this));\n++        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.pushable(this, world.paperConfig.fixClimbingBypassingCrammingRule)); // Paper - fix climbing bypassing cramming rule\n+ \n+         if (!list.isEmpty()) {\n+             // Paper - move up\n+@@ -2973,9 +2972,16 @@ public abstract class EntityLiving extends Entity {\n+         return !this.dead && this.collides; // CraftBukkit\n+     }\n+ \n+     @Override\n+     public boolean isCollidable() {\n++        // Paper start\n+-        return this.isAlive() && !this.isSpectator() && !this.isClimbing() && this.collides; // CraftBukkit\n++        return this.isCollidable(world.paperConfig.fixClimbingBypassingCrammingRule);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDYxNQ=="}, "originalCommit": {"oid": "a8bb5c4d0dbff798c49ec9d5d03246557cf87baf"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2NjA0Nw==", "bodyText": "Ok, properly tested and confirmed you did fix a bug with my impl here. Carry on ^_^", "url": "https://github.com/PaperMC/Paper/pull/4187#discussion_r475266047", "createdAt": "2020-08-23T20:52:32Z", "author": {"login": "BillyGalbreath"}, "path": "Spigot-Server-Patches/0562-Climbing-should-not-bypass-cramming-gamerule.patch", "diffHunk": "@@ -0,0 +1,179 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: William Blake Galbreath <blake.galbreath@gmail.com>\n+Date: Sun, 23 Aug 2020 20:59:00 +0200\n+Subject: [PATCH] Climbing should not bypass cramming gamerule\n+\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+index d5a1ade21749bba420257f3ece7878f32148d6ff..9c921f9e6d2d053345d57546251a691dc76ccb42 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java\n+@@ -654,4 +654,9 @@ public class PaperWorldConfig {\n+             maxLightningFlashDistance = 512; // Vanilla value\n+         }\n+     }\n++\n++    public boolean fixClimbingBypassingCrammingRule = false;\n++    private void fixClimbingBypassingCrammingRule() {\n++        fixClimbingBypassingCrammingRule = getBoolean(\"fix-climbing-bypassing-cramming-rule\", fixClimbingBypassingCrammingRule);\n++    }\n+ }\n+diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java\n+index 97e61dae7927d7da18fcb23d9e4bf639234af4a5..ad6673331e5036a13662a77237bdc66a88b79123 100644\n+--- a/src/main/java/net/minecraft/server/Entity.java\n++++ b/src/main/java/net/minecraft/server/Entity.java\n+@@ -1476,6 +1476,12 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke\n+     }\n+ \n+     public boolean isCollidable() {\n++        // Paper start\n++        return isCollidable(false);\n++    }\n++\n++    public boolean isCollidable(boolean ignoreClimbing) {\n++        // Paper end\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+index 70c2c2e3e42f9c9d03ccb07d20db246436d0e676..8627f03d8ef39d810da3b3ef226863baec95b2de 100644\n+--- a/src/main/java/net/minecraft/server/EntityArmorStand.java\n++++ b/src/main/java/net/minecraft/server/EntityArmorStand.java\n+@@ -320,7 +320,7 @@ public class EntityArmorStand extends EntityLiving {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java\n+index a726dd6768c672ab19bae3717cdf40b2c2358e70..2c24fd4a91d8bf94a7bee95796b9ecd2dd00599f 100644\n+--- a/src/main/java/net/minecraft/server/EntityBat.java\n++++ b/src/main/java/net/minecraft/server/EntityBat.java\n+@@ -50,7 +50,7 @@ public class EntityBat extends EntityAmbient {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return false;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java\n+index 7df2837d6a058d375e8d45b7c00fac343abaf7fa..ce2145e314218697b06f02572c329305d6a7a8c6 100644\n+--- a/src/main/java/net/minecraft/server/EntityBoat.java\n++++ b/src/main/java/net/minecraft/server/EntityBoat.java\n+@@ -106,7 +106,7 @@ public class EntityBoat extends Entity {\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return true;\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+index 8921c2333cd5efcb87dd52b95fe12fd5340df55f..cc298f28d376022ef34e14183425c86e66261e5e 100644\n+--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n++++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java\n+@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven\n+     }\n+ \n+     @Override\n+-    public boolean isCollidable() {\n++    public boolean isCollidable(boolean ignoreClimbing) { // Paper\n+         return !this.isVehicle();\n+     }\n+ \n+diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java\n+index b92e74349b402b6a8687876073f974128fe242a4..2662e5b1c4d47e5c76e39f0c19e41404483d31c0 100644\n+--- a/src/main/java/net/minecraft/server/EntityLiving.java\n++++ b/src/main/java/net/minecraft/server/EntityLiving.java\n+@@ -42,7 +42,6 @@ import org.bukkit.event.entity.EntityTeleportEvent;\n+ import org.bukkit.event.player.PlayerItemConsumeEvent;\n+ // CraftBukkit end\n+ \n+-import co.aikar.timings.MinecraftTimings; // Paper\n+ \n+ public abstract class EntityLiving extends Entity {\n+ \n+@@ -2835,7 +2834,7 @@ public abstract class EntityLiving extends Entity {\n+             return;\n+         }\n+         // Paper - end don't run getEntities if we're not going to use its result\n+-        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.a(this));\n++        List<Entity> list = this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.pushable(this, world.paperConfig.fixClimbingBypassingCrammingRule)); // Paper - fix climbing bypassing cramming rule\n+ \n+         if (!list.isEmpty()) {\n+             // Paper - move up\n+@@ -2973,9 +2972,16 @@ public abstract class EntityLiving extends Entity {\n+         return !this.dead && this.collides; // CraftBukkit\n+     }\n+ \n+     @Override\n+     public boolean isCollidable() {\n++        // Paper start\n+-        return this.isAlive() && !this.isSpectator() && !this.isClimbing() && this.collides; // CraftBukkit\n++        return this.isCollidable(world.paperConfig.fixClimbingBypassingCrammingRule);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI2MDYxNQ=="}, "originalCommit": {"oid": "a8bb5c4d0dbff798c49ec9d5d03246557cf87baf"}, "originalPosition": 119}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1781, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}