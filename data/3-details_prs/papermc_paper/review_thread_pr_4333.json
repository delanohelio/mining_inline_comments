{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3ODUzMjEy", "number": 4333, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTozNjoyNlrOEj-R0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxODowMFrOE4_MIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTU1OTg2OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0580-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTozNjoyNlrOHSoouw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTozNjoyNlrOHSoouw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwMjIwMw==", "bodyText": "Do not add imports, use fully qualified names instead.", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r489302203", "createdAt": "2020-09-16T09:36:26Z", "author": {"login": "mikroskeem"}, "path": "Spigot-Server-Patches/0580-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,82 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Wed, 16 Sep 2020 01:12:29 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/ChunkGenerator.java b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+index 9a6fef215052f9c513b23024968995c97863a453..498a393cdc46cbab0f37a2396a7bba9fbdc6c3e7 100644\n+--- a/src/main/java/net/minecraft/server/ChunkGenerator.java\n++++ b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+@@ -2,6 +2,13 @@ package net.minecraft.server;\n+ \n+ import com.google.common.collect.Lists;\n+ import com.mojang.serialization.Codec;\n++// Paper start", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a4c11ae9e4e36765bd7ab1f087c1b9d46ee690e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTU2MDU5OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0580-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTozNjo0MFrOHSopSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTozNjo0MFrOHSopSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwMjM0Nw==", "bodyText": "Use Event#callEvent() instead.\nif (!event.callEvent()) {\n    return null;\n}", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r489302347", "createdAt": "2020-09-16T09:36:40Z", "author": {"login": "mikroskeem"}, "path": "Spigot-Server-Patches/0580-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,82 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Wed, 16 Sep 2020 01:12:29 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/ChunkGenerator.java b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+index 9a6fef215052f9c513b23024968995c97863a453..498a393cdc46cbab0f37a2396a7bba9fbdc6c3e7 100644\n+--- a/src/main/java/net/minecraft/server/ChunkGenerator.java\n++++ b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+@@ -2,6 +2,13 @@ package net.minecraft.server;\n+ \n+ import com.google.common.collect.Lists;\n+ import com.mojang.serialization.Codec;\n++// Paper start\n++import org.bukkit.Bukkit;\n++import org.bukkit.Location;\n++import org.bukkit.StructureType;\n++import org.bukkit.event.world.StructureLocateEvent;\n++// Paper end\n++\n+ import java.util.BitSet;\n+ import java.util.Iterator;\n+ import java.util.List;\n+@@ -124,9 +131,34 @@ public abstract class ChunkGenerator {\n+ \n+     @Nullable\n+     public BlockPosition findNearestMapFeature(WorldServer worldserver, StructureGenerator<?> structuregenerator, BlockPosition blockposition, int i, boolean flag) {\n+-        if (!this.b.a(structuregenerator)) {\n++        // Paper start\n++        org.bukkit.World world = worldserver.getWorld();\n++        Location originLocation = new Location(world, blockposition.getX(), blockposition.getY(), blockposition.getZ());\n++\n++        StructureLocateEvent event = new StructureLocateEvent(world, originLocation, StructureType.getStructureTypes().get(structuregenerator.i()), i, flag);\n++        Bukkit.getPluginManager().callEvent(event);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a4c11ae9e4e36765bd7ab1f087c1b9d46ee690e"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTU2NDQ1OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0580-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTozNzo0M1rOHSorxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMjo1ODozM1rOHhAWqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwMjk4MQ==", "bodyText": "Whitespace", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r489302981", "createdAt": "2020-09-16T09:37:43Z", "author": {"login": "mikroskeem"}, "path": "Spigot-Server-Patches/0580-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,82 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Wed, 16 Sep 2020 01:12:29 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/ChunkGenerator.java b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+index 9a6fef215052f9c513b23024968995c97863a453..498a393cdc46cbab0f37a2396a7bba9fbdc6c3e7 100644\n+--- a/src/main/java/net/minecraft/server/ChunkGenerator.java\n++++ b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+@@ -2,6 +2,13 @@ package net.minecraft.server;\n+ \n+ import com.google.common.collect.Lists;\n+ import com.mojang.serialization.Codec;\n++// Paper start\n++import org.bukkit.Bukkit;\n++import org.bukkit.Location;\n++import org.bukkit.StructureType;\n++import org.bukkit.event.world.StructureLocateEvent;\n++// Paper end\n++\n+ import java.util.BitSet;\n+ import java.util.Iterator;\n+ import java.util.List;\n+@@ -124,9 +131,34 @@ public abstract class ChunkGenerator {\n+ \n+     @Nullable\n+     public BlockPosition findNearestMapFeature(WorldServer worldserver, StructureGenerator<?> structuregenerator, BlockPosition blockposition, int i, boolean flag) {\n+-        if (!this.b.a(structuregenerator)) {\n++        // Paper start\n++        org.bukkit.World world = worldserver.getWorld();\n++        Location originLocation = new Location(world, blockposition.getX(), blockposition.getY(), blockposition.getZ());\n++\n++        StructureLocateEvent event = new StructureLocateEvent(world, originLocation, StructureType.getStructureTypes().get(structuregenerator.i()), i, flag);\n++        Bukkit.getPluginManager().callEvent(event);\n++\n++        if(event.isCancelled()) return null;\n++\n++        // If event call set a final location, skip structure finding and just return set result.\n++        Location finalLocation = event.getResult();\n++        if(finalLocation != null) {\n++            return new BlockPosition(finalLocation.getBlockX(), finalLocation.getBlockY(), finalLocation.getBlockZ());\n++        }\n++\n++        // Get origin location (re)defined by event call.\n++        Location newOriginLocation = event.getOrigin();\n++        BlockPosition newOriginPosition = new BlockPosition(newOriginLocation.getBlockX(), newOriginLocation.getBlockY(), newOriginLocation.getBlockZ());\n++\n++        // Get radius and whether to find unexplored structures (re)defined by event call.\n++        int radius = event.getRadius();\n++        boolean findUnexplored = event.shouldFindUnexplored();\n++        StructureGenerator<?> newGenerator = StructureGenerator.a.get(event.getType().getName());\n++        // Paper end\n++\n++        if(! this.b.a(newGenerator)) { // Paper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a4c11ae9e4e36765bd7ab1f087c1b9d46ee690e"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3MDg1OQ==", "bodyText": "whitespace issue still exists, but there is no reason why all of these fields need to be modified? just re-assign the existing field, less diff and less likely something will get missed in the future", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r504370859", "createdAt": "2020-10-14T02:58:33Z", "author": {"login": "electronicboy"}, "path": "Spigot-Server-Patches/0580-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,82 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Wed, 16 Sep 2020 01:12:29 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/ChunkGenerator.java b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+index 9a6fef215052f9c513b23024968995c97863a453..498a393cdc46cbab0f37a2396a7bba9fbdc6c3e7 100644\n+--- a/src/main/java/net/minecraft/server/ChunkGenerator.java\n++++ b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+@@ -2,6 +2,13 @@ package net.minecraft.server;\n+ \n+ import com.google.common.collect.Lists;\n+ import com.mojang.serialization.Codec;\n++// Paper start\n++import org.bukkit.Bukkit;\n++import org.bukkit.Location;\n++import org.bukkit.StructureType;\n++import org.bukkit.event.world.StructureLocateEvent;\n++// Paper end\n++\n+ import java.util.BitSet;\n+ import java.util.Iterator;\n+ import java.util.List;\n+@@ -124,9 +131,34 @@ public abstract class ChunkGenerator {\n+ \n+     @Nullable\n+     public BlockPosition findNearestMapFeature(WorldServer worldserver, StructureGenerator<?> structuregenerator, BlockPosition blockposition, int i, boolean flag) {\n+-        if (!this.b.a(structuregenerator)) {\n++        // Paper start\n++        org.bukkit.World world = worldserver.getWorld();\n++        Location originLocation = new Location(world, blockposition.getX(), blockposition.getY(), blockposition.getZ());\n++\n++        StructureLocateEvent event = new StructureLocateEvent(world, originLocation, StructureType.getStructureTypes().get(structuregenerator.i()), i, flag);\n++        Bukkit.getPluginManager().callEvent(event);\n++\n++        if(event.isCancelled()) return null;\n++\n++        // If event call set a final location, skip structure finding and just return set result.\n++        Location finalLocation = event.getResult();\n++        if(finalLocation != null) {\n++            return new BlockPosition(finalLocation.getBlockX(), finalLocation.getBlockY(), finalLocation.getBlockZ());\n++        }\n++\n++        // Get origin location (re)defined by event call.\n++        Location newOriginLocation = event.getOrigin();\n++        BlockPosition newOriginPosition = new BlockPosition(newOriginLocation.getBlockX(), newOriginLocation.getBlockY(), newOriginLocation.getBlockZ());\n++\n++        // Get radius and whether to find unexplored structures (re)defined by event call.\n++        int radius = event.getRadius();\n++        boolean findUnexplored = event.shouldFindUnexplored();\n++        StructureGenerator<?> newGenerator = StructureGenerator.a.get(event.getType().getName());\n++        // Paper end\n++\n++        if(! this.b.a(newGenerator)) { // Paper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwMjk4MQ=="}, "originalCommit": {"oid": "2a4c11ae9e4e36765bd7ab1f087c1b9d46ee690e"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTMxMjQ3OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0580-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMjo1OTowMlrOHhAXHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNTo0Mzo1M1rOHhDC5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3MDk3NA==", "bodyText": "same here, does this really need to be modified?", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r504370974", "createdAt": "2020-10-14T02:59:02Z", "author": {"login": "electronicboy"}, "path": "Spigot-Server-Patches/0580-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,61 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Wed, 16 Sep 2020 01:12:29 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/ChunkGenerator.java b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+index 9a6fef215052f9c513b23024968995c97863a453..16a477f2a99a5c8d68f0d1468d4cd79650a5a05d 100644\n+--- a/src/main/java/net/minecraft/server/ChunkGenerator.java\n++++ b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+@@ -124,9 +124,27 @@ public abstract class ChunkGenerator {\n+ \n+     @Nullable\n+     public BlockPosition findNearestMapFeature(WorldServer worldserver, StructureGenerator<?> structuregenerator, BlockPosition blockposition, int i, boolean flag) {\n+-        if (!this.b.a(structuregenerator)) {\n++        // Paper start\n++        org.bukkit.World world = worldserver.getWorld();\n++        org.bukkit.Location originLocation = new org.bukkit.Location(world, blockposition.getX(), blockposition.getY(), blockposition.getZ());\n++        org.bukkit.event.world.StructureLocateEvent event = new org.bukkit.event.world.StructureLocateEvent(world, originLocation, org.bukkit.StructureType.getStructureTypes().get(structuregenerator.i()), i, flag);\n++        if(!event.callEvent()) return null;\n++        // If event call set a final location, skip structure finding and just return set result.\n++        org.bukkit.Location finalLocation = event.getResult();\n++        if(finalLocation != null) {\n++            return new BlockPosition(finalLocation.getBlockX(), finalLocation.getBlockY(), finalLocation.getBlockZ());\n++        }\n++        // Get origin location (re)defined by event call.\n++        org.bukkit.Location newOriginLocation = event.getOrigin();\n++        BlockPosition newOriginPosition = new BlockPosition(newOriginLocation.getBlockX(), newOriginLocation.getBlockY(), newOriginLocation.getBlockZ());\n++        // Get radius and whether to find unexplored structures (re)defined by event call.\n++        int radius = event.getRadius();\n++        boolean findUnexplored = event.shouldFindUnexplored();\n++        StructureGenerator<?> newGenerator = StructureGenerator.a.get(event.getType().getName());\n++        // Paper end\n++        if(! this.b.a(newGenerator)) { // Paper\n+             return null;\n+-        } else if (structuregenerator == StructureGenerator.STRONGHOLD) {\n++        } else if (newGenerator == StructureGenerator.STRONGHOLD) { // Paper\n+             this.g();\n+             BlockPosition blockposition1 = null;\n+             double d0 = Double.MAX_VALUE;\n+@@ -137,7 +155,7 @@ public abstract class ChunkGenerator {\n+                 ChunkCoordIntPair chunkcoordintpair = (ChunkCoordIntPair) iterator.next();\n+ \n+                 blockposition_mutableblockposition.d((chunkcoordintpair.x << 4) + 8, 32, (chunkcoordintpair.z << 4) + 8);\n+-                double d1 = blockposition_mutableblockposition.j(blockposition);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea9a03402a0cd6bf4ed4d5457c6d6386aaba1668"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQxNDk1MA==", "bodyText": "Thank you for the feedback, this is my first ever PR so any additional feedback is appreciated!\nThese issues have been resolved in my latest commit :)", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r504414950", "createdAt": "2020-10-14T05:43:53Z", "author": {"login": "dfsek"}, "path": "Spigot-Server-Patches/0580-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,61 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Wed, 16 Sep 2020 01:12:29 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/ChunkGenerator.java b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+index 9a6fef215052f9c513b23024968995c97863a453..16a477f2a99a5c8d68f0d1468d4cd79650a5a05d 100644\n+--- a/src/main/java/net/minecraft/server/ChunkGenerator.java\n++++ b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+@@ -124,9 +124,27 @@ public abstract class ChunkGenerator {\n+ \n+     @Nullable\n+     public BlockPosition findNearestMapFeature(WorldServer worldserver, StructureGenerator<?> structuregenerator, BlockPosition blockposition, int i, boolean flag) {\n+-        if (!this.b.a(structuregenerator)) {\n++        // Paper start\n++        org.bukkit.World world = worldserver.getWorld();\n++        org.bukkit.Location originLocation = new org.bukkit.Location(world, blockposition.getX(), blockposition.getY(), blockposition.getZ());\n++        org.bukkit.event.world.StructureLocateEvent event = new org.bukkit.event.world.StructureLocateEvent(world, originLocation, org.bukkit.StructureType.getStructureTypes().get(structuregenerator.i()), i, flag);\n++        if(!event.callEvent()) return null;\n++        // If event call set a final location, skip structure finding and just return set result.\n++        org.bukkit.Location finalLocation = event.getResult();\n++        if(finalLocation != null) {\n++            return new BlockPosition(finalLocation.getBlockX(), finalLocation.getBlockY(), finalLocation.getBlockZ());\n++        }\n++        // Get origin location (re)defined by event call.\n++        org.bukkit.Location newOriginLocation = event.getOrigin();\n++        BlockPosition newOriginPosition = new BlockPosition(newOriginLocation.getBlockX(), newOriginLocation.getBlockY(), newOriginLocation.getBlockZ());\n++        // Get radius and whether to find unexplored structures (re)defined by event call.\n++        int radius = event.getRadius();\n++        boolean findUnexplored = event.shouldFindUnexplored();\n++        StructureGenerator<?> newGenerator = StructureGenerator.a.get(event.getType().getName());\n++        // Paper end\n++        if(! this.b.a(newGenerator)) { // Paper\n+             return null;\n+-        } else if (structuregenerator == StructureGenerator.STRONGHOLD) {\n++        } else if (newGenerator == StructureGenerator.STRONGHOLD) { // Paper\n+             this.g();\n+             BlockPosition blockposition1 = null;\n+             double d0 = Double.MAX_VALUE;\n+@@ -137,7 +155,7 @@ public abstract class ChunkGenerator {\n+                 ChunkCoordIntPair chunkcoordintpair = (ChunkCoordIntPair) iterator.next();\n+ \n+                 blockposition_mutableblockposition.d((chunkcoordintpair.x << 4) + 8, 32, (chunkcoordintpair.z << 4) + 8);\n+-                double d1 = blockposition_mutableblockposition.j(blockposition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3MDk3NA=="}, "originalCommit": {"oid": "ea9a03402a0cd6bf4ed4d5457c6d6386aaba1668"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkwNDkwOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxMTo0OVrOHzM_1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMDo1ODozN1rOHzlDaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1MjM3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +package org.bukkit.event.world;\n          \n          \n            \n            +package io.papermc.paper.event.world;", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523452373", "createdAt": "2020-11-14T19:11:49Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Tue, 15 Sep 2020 21:59:16 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/org/bukkit/event/world/StructureLocateEvent.java b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+new file mode 100644\n+index 0000000000000000000000000000000000000000..1011b03fcc7be912e617a6fde3f62e68d70f2c1c\n+--- /dev/null\n++++ b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+@@ -0,0 +1,137 @@\n++package org.bukkit.event.world;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgzOTU3NA==", "bodyText": "Shouldn't this be com.destroystokyo.paper, or are you guys moving away from that package?", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523839574", "createdAt": "2020-11-16T00:36:58Z", "author": {"login": "dfsek"}, "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Tue, 15 Sep 2020 21:59:16 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/org/bukkit/event/world/StructureLocateEvent.java b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+new file mode 100644\n+index 0000000000000000000000000000000000000000..1011b03fcc7be912e617a6fde3f62e68d70f2c1c\n+--- /dev/null\n++++ b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+@@ -0,0 +1,137 @@\n++package org.bukkit.event.world;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1MjM3Mw=="}, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg0NjUwNw==", "bodyText": "Moving away", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523846507", "createdAt": "2020-11-16T00:58:37Z", "author": {"login": "A248"}, "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Tue, 15 Sep 2020 21:59:16 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/org/bukkit/event/world/StructureLocateEvent.java b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+new file mode 100644\n+index 0000000000000000000000000000000000000000..1011b03fcc7be912e617a6fde3f62e68d70f2c1c\n+--- /dev/null\n++++ b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+@@ -0,0 +1,137 @@\n++package org.bukkit.event.world;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1MjM3Mw=="}, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkwNTU5OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxMjozOVrOHzNAKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxMjozOVrOHzNAKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1MjQ1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            + * This happens when:<br>\n          \n          \n            \n            + *   - The /locate command is used.<br>\n          \n          \n            \n            + *   - An Eye of Ender is used.<br>\n          \n          \n            \n            + *   - An Explorer/Treasure Map is activated.<br>\n          \n          \n            \n            + *   - {@link World#locateNearestStructure(Location, StructureType, int, boolean)} is invoked.\n          \n          \n            \n            + * This happens when:\n          \n          \n            \n            + * <ul>\n          \n          \n            \n            + *   <li>The /locate command is used.</li>\n          \n          \n            \n            + *   <li>An Eye of Ender is used.</li>\n          \n          \n            \n            + *   <li>An Explorer/Treasure Map is activated.</li>\n          \n          \n            \n            + *   <li>{@link World#locateNearestStructure(Location, StructureType, int, boolean)} is invoked.</li>\n          \n          \n            \n            + * </ul>", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523452458", "createdAt": "2020-11-14T19:12:39Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Tue, 15 Sep 2020 21:59:16 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/org/bukkit/event/world/StructureLocateEvent.java b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+new file mode 100644\n+index 0000000000000000000000000000000000000000..1011b03fcc7be912e617a6fde3f62e68d70f2c1c\n+--- /dev/null\n++++ b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+@@ -0,0 +1,137 @@\n++package org.bukkit.event.world;\n++\n++import org.bukkit.Location;\n++import org.bukkit.StructureType;\n++import org.bukkit.World;\n++import org.bukkit.event.Cancellable;\n++import org.bukkit.event.HandlerList;\n++import org.jetbrains.annotations.NotNull;\n++import org.jetbrains.annotations.Nullable;\n++\n++/**\n++ * Called <b>before</b> a structure/feature is located.\n++ * This happens when:<br>\n++ *   - The /locate command is used.<br>\n++ *   - An Eye of Ender is used.<br>\n++ *   - An Explorer/Treasure Map is activated.<br>\n++ *   - {@link World#locateNearestStructure(Location, StructureType, int, boolean)} is invoked.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkwNTY0OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxMjo0OFrOHzNAMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxMjo0OFrOHzNAMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1MjQ2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +    private boolean cancelled = false;\n          \n          \n            \n            +    public StructureLocateEvent(@NotNull World world, @NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored) {\n          \n          \n            \n            +    private boolean cancelled = false;\n          \n          \n            \n            +\n          \n          \n            \n            +    public StructureLocateEvent(@NotNull World world, @NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored) {", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523452465", "createdAt": "2020-11-14T19:12:48Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Tue, 15 Sep 2020 21:59:16 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/org/bukkit/event/world/StructureLocateEvent.java b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+new file mode 100644\n+index 0000000000000000000000000000000000000000..1011b03fcc7be912e617a6fde3f62e68d70f2c1c\n+--- /dev/null\n++++ b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+@@ -0,0 +1,137 @@\n++package org.bukkit.event.world;\n++\n++import org.bukkit.Location;\n++import org.bukkit.StructureType;\n++import org.bukkit.World;\n++import org.bukkit.event.Cancellable;\n++import org.bukkit.event.HandlerList;\n++import org.jetbrains.annotations.NotNull;\n++import org.jetbrains.annotations.Nullable;\n++\n++/**\n++ * Called <b>before</b> a structure/feature is located.\n++ * This happens when:<br>\n++ *   - The /locate command is used.<br>\n++ *   - An Eye of Ender is used.<br>\n++ *   - An Explorer/Treasure Map is activated.<br>\n++ *   - {@link World#locateNearestStructure(Location, StructureType, int, boolean)} is invoked.\n++ */\n++public class StructureLocateEvent extends WorldEvent implements Cancellable {\n++    private static final HandlerList handlers = new HandlerList();\n++    private final Location origin;\n++    private Location result = null;\n++    private StructureType type;\n++    private int radius;\n++    private boolean findUnexplored;\n++    private boolean cancelled = false;\n++    public StructureLocateEvent(@NotNull World world, @NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkwNjM3OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNDowMVrOHzNAjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNDowMVrOHzNAjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1MjU1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +    /**\n          \n          \n            \n            +     * Gets the location set as the structure location, if it was defined.<br>\n          \n          \n            \n            +     * Returns null if it has not been set by {@link StructureLocateEvent#setResult(Location)}.<br>\n          \n          \n            \n            +     * Since this event fires <i>before</i> the search is done, the actual location is unknown at this point.<br>\n          \n          \n            \n            +     * If you wish to manipulate the location, use {@link World#locateNearestStructure(Location, StructureType, int, boolean)}\n          \n          \n            \n            +     * @return The result location, if it has been set. null if it has not.\n          \n          \n            \n            +     */\n          \n          \n            \n            +    /**\n          \n          \n            \n            +     * Gets the location set as the structure location, if it was defined.\n          \n          \n            \n            +     * <p>\n          \n          \n            \n            +     * Returns {@code null} if it has not been set by {@link StructureLocateEvent#setResult(Location)}.\n          \n          \n            \n            +     * Since this event fires <i>before</i> the search is done, the actual location is unknown at this point.\n          \n          \n            \n            +     * If you wish to manipulate the location, use {@link World#locateNearestStructure(Location, StructureType, int, boolean)}.\n          \n          \n            \n            +     *\n          \n          \n            \n            +     * @return The result location, if it has been set. {@code null} if it has not.\n          \n          \n            \n            +     */", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523452559", "createdAt": "2020-11-14T19:14:01Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Tue, 15 Sep 2020 21:59:16 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/org/bukkit/event/world/StructureLocateEvent.java b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+new file mode 100644\n+index 0000000000000000000000000000000000000000..1011b03fcc7be912e617a6fde3f62e68d70f2c1c\n+--- /dev/null\n++++ b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+@@ -0,0 +1,137 @@\n++package org.bukkit.event.world;\n++\n++import org.bukkit.Location;\n++import org.bukkit.StructureType;\n++import org.bukkit.World;\n++import org.bukkit.event.Cancellable;\n++import org.bukkit.event.HandlerList;\n++import org.jetbrains.annotations.NotNull;\n++import org.jetbrains.annotations.Nullable;\n++\n++/**\n++ * Called <b>before</b> a structure/feature is located.\n++ * This happens when:<br>\n++ *   - The /locate command is used.<br>\n++ *   - An Eye of Ender is used.<br>\n++ *   - An Explorer/Treasure Map is activated.<br>\n++ *   - {@link World#locateNearestStructure(Location, StructureType, int, boolean)} is invoked.\n++ */\n++public class StructureLocateEvent extends WorldEvent implements Cancellable {\n++    private static final HandlerList handlers = new HandlerList();\n++    private final Location origin;\n++    private Location result = null;\n++    private StructureType type;\n++    private int radius;\n++    private boolean findUnexplored;\n++    private boolean cancelled = false;\n++    public StructureLocateEvent(@NotNull World world, @NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored) {\n++        super(world);\n++        this.origin = origin;\n++        this.type = structureType;\n++        this.radius = radius;\n++        this.findUnexplored = findUnexplored;\n++    }\n++\n++    @NotNull\n++    @Override\n++    public HandlerList getHandlers() {\n++        return handlers;\n++    }\n++\n++    @NotNull\n++    public static HandlerList getHandlerList() {\n++        return handlers;\n++    }\n++\n++    /**\n++     * Gets the location set as the structure location, if it was defined.<br>\n++     * Returns null if it has not been set by {@link StructureLocateEvent#setResult(Location)}.<br>\n++     * Since this event fires <i>before</i> the search is done, the actual location is unknown at this point.<br>\n++     * If you wish to manipulate the location, use {@link World#locateNearestStructure(Location, StructureType, int, boolean)}\n++     * @return The result location, if it has been set. null if it has not.\n++     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkwNzA5OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNDo0MlrOHzNA4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNDo0MlrOHzNA4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1MjY0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * Sets the result Location. This causes the search to be skipped, and the location passed here to be used as the result.\n          \n          \n            \n            +     * @param result the Location of the structure.\n          \n          \n            \n            +     * Sets the result {@link Location}. This causes the search to be skipped, and the location passed here to be used as the result.\n          \n          \n            \n            +     *\n          \n          \n            \n            +     * @param result the {@link Location} of the structure.", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523452643", "createdAt": "2020-11-14T19:14:42Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Tue, 15 Sep 2020 21:59:16 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/org/bukkit/event/world/StructureLocateEvent.java b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+new file mode 100644\n+index 0000000000000000000000000000000000000000..1011b03fcc7be912e617a6fde3f62e68d70f2c1c\n+--- /dev/null\n++++ b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+@@ -0,0 +1,137 @@\n++package org.bukkit.event.world;\n++\n++import org.bukkit.Location;\n++import org.bukkit.StructureType;\n++import org.bukkit.World;\n++import org.bukkit.event.Cancellable;\n++import org.bukkit.event.HandlerList;\n++import org.jetbrains.annotations.NotNull;\n++import org.jetbrains.annotations.Nullable;\n++\n++/**\n++ * Called <b>before</b> a structure/feature is located.\n++ * This happens when:<br>\n++ *   - The /locate command is used.<br>\n++ *   - An Eye of Ender is used.<br>\n++ *   - An Explorer/Treasure Map is activated.<br>\n++ *   - {@link World#locateNearestStructure(Location, StructureType, int, boolean)} is invoked.\n++ */\n++public class StructureLocateEvent extends WorldEvent implements Cancellable {\n++    private static final HandlerList handlers = new HandlerList();\n++    private final Location origin;\n++    private Location result = null;\n++    private StructureType type;\n++    private int radius;\n++    private boolean findUnexplored;\n++    private boolean cancelled = false;\n++    public StructureLocateEvent(@NotNull World world, @NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored) {\n++        super(world);\n++        this.origin = origin;\n++        this.type = structureType;\n++        this.radius = radius;\n++        this.findUnexplored = findUnexplored;\n++    }\n++\n++    @NotNull\n++    @Override\n++    public HandlerList getHandlers() {\n++        return handlers;\n++    }\n++\n++    @NotNull\n++    public static HandlerList getHandlerList() {\n++        return handlers;\n++    }\n++\n++    /**\n++     * Gets the location set as the structure location, if it was defined.<br>\n++     * Returns null if it has not been set by {@link StructureLocateEvent#setResult(Location)}.<br>\n++     * Since this event fires <i>before</i> the search is done, the actual location is unknown at this point.<br>\n++     * If you wish to manipulate the location, use {@link World#locateNearestStructure(Location, StructureType, int, boolean)}\n++     * @return The result location, if it has been set. null if it has not.\n++     */\n++    @Nullable\n++    public Location getResult() {\n++        return result;\n++    }\n++\n++    /**\n++     * Sets the result Location. This causes the search to be skipped, and the location passed here to be used as the result.\n++     * @param result the Location of the structure.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkwNzI3OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNDo1NFrOHzNA9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNDo1NFrOHzNA9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1MjY2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * Gets the {@link StructureType} that is to be located.\n          \n          \n            \n            +     * @return the structure type.\n          \n          \n            \n            +     * Gets the {@link StructureType} that is to be located.\n          \n          \n            \n            +     *\n          \n          \n            \n            +     * @return the structure type.", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523452661", "createdAt": "2020-11-14T19:14:54Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Tue, 15 Sep 2020 21:59:16 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/org/bukkit/event/world/StructureLocateEvent.java b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+new file mode 100644\n+index 0000000000000000000000000000000000000000..1011b03fcc7be912e617a6fde3f62e68d70f2c1c\n+--- /dev/null\n++++ b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+@@ -0,0 +1,137 @@\n++package org.bukkit.event.world;\n++\n++import org.bukkit.Location;\n++import org.bukkit.StructureType;\n++import org.bukkit.World;\n++import org.bukkit.event.Cancellable;\n++import org.bukkit.event.HandlerList;\n++import org.jetbrains.annotations.NotNull;\n++import org.jetbrains.annotations.Nullable;\n++\n++/**\n++ * Called <b>before</b> a structure/feature is located.\n++ * This happens when:<br>\n++ *   - The /locate command is used.<br>\n++ *   - An Eye of Ender is used.<br>\n++ *   - An Explorer/Treasure Map is activated.<br>\n++ *   - {@link World#locateNearestStructure(Location, StructureType, int, boolean)} is invoked.\n++ */\n++public class StructureLocateEvent extends WorldEvent implements Cancellable {\n++    private static final HandlerList handlers = new HandlerList();\n++    private final Location origin;\n++    private Location result = null;\n++    private StructureType type;\n++    private int radius;\n++    private boolean findUnexplored;\n++    private boolean cancelled = false;\n++    public StructureLocateEvent(@NotNull World world, @NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored) {\n++        super(world);\n++        this.origin = origin;\n++        this.type = structureType;\n++        this.radius = radius;\n++        this.findUnexplored = findUnexplored;\n++    }\n++\n++    @NotNull\n++    @Override\n++    public HandlerList getHandlers() {\n++        return handlers;\n++    }\n++\n++    @NotNull\n++    public static HandlerList getHandlerList() {\n++        return handlers;\n++    }\n++\n++    /**\n++     * Gets the location set as the structure location, if it was defined.<br>\n++     * Returns null if it has not been set by {@link StructureLocateEvent#setResult(Location)}.<br>\n++     * Since this event fires <i>before</i> the search is done, the actual location is unknown at this point.<br>\n++     * If you wish to manipulate the location, use {@link World#locateNearestStructure(Location, StructureType, int, boolean)}\n++     * @return The result location, if it has been set. null if it has not.\n++     */\n++    @Nullable\n++    public Location getResult() {\n++        return result;\n++    }\n++\n++    /**\n++     * Sets the result Location. This causes the search to be skipped, and the location passed here to be used as the result.\n++     * @param result the Location of the structure.\n++     */\n++    public void setResult(@Nullable Location result) {\n++        this.result = result;\n++    }\n++\n++    /**\n++     * Gets the {@link StructureType} that is to be located.\n++     * @return the structure type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkwNzU0OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNTowNlrOHzNBFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNTowNlrOHzNBFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1MjY5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * Sets the {@link StructureType} that is to be located.\n          \n          \n            \n            +     * @param type the structure type.\n          \n          \n            \n            +     * Sets the {@link StructureType} that is to be located.\n          \n          \n            \n            +     *\n          \n          \n            \n            +     * @param type the structure type.", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523452692", "createdAt": "2020-11-14T19:15:06Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Tue, 15 Sep 2020 21:59:16 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/org/bukkit/event/world/StructureLocateEvent.java b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+new file mode 100644\n+index 0000000000000000000000000000000000000000..1011b03fcc7be912e617a6fde3f62e68d70f2c1c\n+--- /dev/null\n++++ b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+@@ -0,0 +1,137 @@\n++package org.bukkit.event.world;\n++\n++import org.bukkit.Location;\n++import org.bukkit.StructureType;\n++import org.bukkit.World;\n++import org.bukkit.event.Cancellable;\n++import org.bukkit.event.HandlerList;\n++import org.jetbrains.annotations.NotNull;\n++import org.jetbrains.annotations.Nullable;\n++\n++/**\n++ * Called <b>before</b> a structure/feature is located.\n++ * This happens when:<br>\n++ *   - The /locate command is used.<br>\n++ *   - An Eye of Ender is used.<br>\n++ *   - An Explorer/Treasure Map is activated.<br>\n++ *   - {@link World#locateNearestStructure(Location, StructureType, int, boolean)} is invoked.\n++ */\n++public class StructureLocateEvent extends WorldEvent implements Cancellable {\n++    private static final HandlerList handlers = new HandlerList();\n++    private final Location origin;\n++    private Location result = null;\n++    private StructureType type;\n++    private int radius;\n++    private boolean findUnexplored;\n++    private boolean cancelled = false;\n++    public StructureLocateEvent(@NotNull World world, @NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored) {\n++        super(world);\n++        this.origin = origin;\n++        this.type = structureType;\n++        this.radius = radius;\n++        this.findUnexplored = findUnexplored;\n++    }\n++\n++    @NotNull\n++    @Override\n++    public HandlerList getHandlers() {\n++        return handlers;\n++    }\n++\n++    @NotNull\n++    public static HandlerList getHandlerList() {\n++        return handlers;\n++    }\n++\n++    /**\n++     * Gets the location set as the structure location, if it was defined.<br>\n++     * Returns null if it has not been set by {@link StructureLocateEvent#setResult(Location)}.<br>\n++     * Since this event fires <i>before</i> the search is done, the actual location is unknown at this point.<br>\n++     * If you wish to manipulate the location, use {@link World#locateNearestStructure(Location, StructureType, int, boolean)}\n++     * @return The result location, if it has been set. null if it has not.\n++     */\n++    @Nullable\n++    public Location getResult() {\n++        return result;\n++    }\n++\n++    /**\n++     * Sets the result Location. This causes the search to be skipped, and the location passed here to be used as the result.\n++     * @param result the Location of the structure.\n++     */\n++    public void setResult(@Nullable Location result) {\n++        this.result = result;\n++    }\n++\n++    /**\n++     * Gets the {@link StructureType} that is to be located.\n++     * @return the structure type.\n++     */\n++    @NotNull\n++    public StructureType getType() {\n++        return type;\n++    }\n++\n++    /**\n++     * Sets the {@link StructureType} that is to be located.\n++     * @param type the structure type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkwNzY2OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNToxNVrOHzNBIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNToxNVrOHzNBIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1MjcwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * Gets the location from which the search is to be conducted.\n          \n          \n            \n            +     * @return Location where search begins\n          \n          \n            \n            +     * Gets the location from which the search is to be conducted.\n          \n          \n            \n            +     *\n          \n          \n            \n            +     * @return Location where search begins", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523452707", "createdAt": "2020-11-14T19:15:15Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Tue, 15 Sep 2020 21:59:16 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/org/bukkit/event/world/StructureLocateEvent.java b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+new file mode 100644\n+index 0000000000000000000000000000000000000000..1011b03fcc7be912e617a6fde3f62e68d70f2c1c\n+--- /dev/null\n++++ b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+@@ -0,0 +1,137 @@\n++package org.bukkit.event.world;\n++\n++import org.bukkit.Location;\n++import org.bukkit.StructureType;\n++import org.bukkit.World;\n++import org.bukkit.event.Cancellable;\n++import org.bukkit.event.HandlerList;\n++import org.jetbrains.annotations.NotNull;\n++import org.jetbrains.annotations.Nullable;\n++\n++/**\n++ * Called <b>before</b> a structure/feature is located.\n++ * This happens when:<br>\n++ *   - The /locate command is used.<br>\n++ *   - An Eye of Ender is used.<br>\n++ *   - An Explorer/Treasure Map is activated.<br>\n++ *   - {@link World#locateNearestStructure(Location, StructureType, int, boolean)} is invoked.\n++ */\n++public class StructureLocateEvent extends WorldEvent implements Cancellable {\n++    private static final HandlerList handlers = new HandlerList();\n++    private final Location origin;\n++    private Location result = null;\n++    private StructureType type;\n++    private int radius;\n++    private boolean findUnexplored;\n++    private boolean cancelled = false;\n++    public StructureLocateEvent(@NotNull World world, @NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored) {\n++        super(world);\n++        this.origin = origin;\n++        this.type = structureType;\n++        this.radius = radius;\n++        this.findUnexplored = findUnexplored;\n++    }\n++\n++    @NotNull\n++    @Override\n++    public HandlerList getHandlers() {\n++        return handlers;\n++    }\n++\n++    @NotNull\n++    public static HandlerList getHandlerList() {\n++        return handlers;\n++    }\n++\n++    /**\n++     * Gets the location set as the structure location, if it was defined.<br>\n++     * Returns null if it has not been set by {@link StructureLocateEvent#setResult(Location)}.<br>\n++     * Since this event fires <i>before</i> the search is done, the actual location is unknown at this point.<br>\n++     * If you wish to manipulate the location, use {@link World#locateNearestStructure(Location, StructureType, int, boolean)}\n++     * @return The result location, if it has been set. null if it has not.\n++     */\n++    @Nullable\n++    public Location getResult() {\n++        return result;\n++    }\n++\n++    /**\n++     * Sets the result Location. This causes the search to be skipped, and the location passed here to be used as the result.\n++     * @param result the Location of the structure.\n++     */\n++    public void setResult(@Nullable Location result) {\n++        this.result = result;\n++    }\n++\n++    /**\n++     * Gets the {@link StructureType} that is to be located.\n++     * @return the structure type.\n++     */\n++    @NotNull\n++    public StructureType getType() {\n++        return type;\n++    }\n++\n++    /**\n++     * Sets the {@link StructureType} that is to be located.\n++     * @param type the structure type.\n++     */\n++    public void setType(@NotNull StructureType type) {\n++        this.type = type;\n++    }\n++\n++    /**\n++     * Gets the location from which the search is to be conducted.\n++     * @return Location where search begins", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkwODA4OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNTozOFrOHzNBTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNTozOFrOHzNBTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1Mjc0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * Gets the search radius in which to attempt locating the structure.<br>\n          \n          \n            \n            +     * This radius may not always be obeyed during the structure search!\n          \n          \n            \n            +     * @return the search radius.\n          \n          \n            \n            +     * Gets the search radius in which to attempt locating the structure.\n          \n          \n            \n            +     * <p>\n          \n          \n            \n            +     * This radius may not always be obeyed during the structure search!\n          \n          \n            \n            +     *\n          \n          \n            \n            +     * @return the search radius.", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523452749", "createdAt": "2020-11-14T19:15:38Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Tue, 15 Sep 2020 21:59:16 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/org/bukkit/event/world/StructureLocateEvent.java b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+new file mode 100644\n+index 0000000000000000000000000000000000000000..1011b03fcc7be912e617a6fde3f62e68d70f2c1c\n+--- /dev/null\n++++ b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+@@ -0,0 +1,137 @@\n++package org.bukkit.event.world;\n++\n++import org.bukkit.Location;\n++import org.bukkit.StructureType;\n++import org.bukkit.World;\n++import org.bukkit.event.Cancellable;\n++import org.bukkit.event.HandlerList;\n++import org.jetbrains.annotations.NotNull;\n++import org.jetbrains.annotations.Nullable;\n++\n++/**\n++ * Called <b>before</b> a structure/feature is located.\n++ * This happens when:<br>\n++ *   - The /locate command is used.<br>\n++ *   - An Eye of Ender is used.<br>\n++ *   - An Explorer/Treasure Map is activated.<br>\n++ *   - {@link World#locateNearestStructure(Location, StructureType, int, boolean)} is invoked.\n++ */\n++public class StructureLocateEvent extends WorldEvent implements Cancellable {\n++    private static final HandlerList handlers = new HandlerList();\n++    private final Location origin;\n++    private Location result = null;\n++    private StructureType type;\n++    private int radius;\n++    private boolean findUnexplored;\n++    private boolean cancelled = false;\n++    public StructureLocateEvent(@NotNull World world, @NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored) {\n++        super(world);\n++        this.origin = origin;\n++        this.type = structureType;\n++        this.radius = radius;\n++        this.findUnexplored = findUnexplored;\n++    }\n++\n++    @NotNull\n++    @Override\n++    public HandlerList getHandlers() {\n++        return handlers;\n++    }\n++\n++    @NotNull\n++    public static HandlerList getHandlerList() {\n++        return handlers;\n++    }\n++\n++    /**\n++     * Gets the location set as the structure location, if it was defined.<br>\n++     * Returns null if it has not been set by {@link StructureLocateEvent#setResult(Location)}.<br>\n++     * Since this event fires <i>before</i> the search is done, the actual location is unknown at this point.<br>\n++     * If you wish to manipulate the location, use {@link World#locateNearestStructure(Location, StructureType, int, boolean)}\n++     * @return The result location, if it has been set. null if it has not.\n++     */\n++    @Nullable\n++    public Location getResult() {\n++        return result;\n++    }\n++\n++    /**\n++     * Sets the result Location. This causes the search to be skipped, and the location passed here to be used as the result.\n++     * @param result the Location of the structure.\n++     */\n++    public void setResult(@Nullable Location result) {\n++        this.result = result;\n++    }\n++\n++    /**\n++     * Gets the {@link StructureType} that is to be located.\n++     * @return the structure type.\n++     */\n++    @NotNull\n++    public StructureType getType() {\n++        return type;\n++    }\n++\n++    /**\n++     * Sets the {@link StructureType} that is to be located.\n++     * @param type the structure type.\n++     */\n++    public void setType(@NotNull StructureType type) {\n++        this.type = type;\n++    }\n++\n++    /**\n++     * Gets the location from which the search is to be conducted.\n++     * @return Location where search begins\n++     */\n++    @NotNull\n++    public Location getOrigin() {\n++        return origin;\n++    }\n++\n++    /**\n++     * Gets the search radius in which to attempt locating the structure.<br>\n++     * This radius may not always be obeyed during the structure search!\n++     * @return the search radius.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkwODQwOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNjowMlrOHzNBcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNjowMlrOHzNBcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1Mjc4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * Sets the search radius in which to attempt locating the structure.<br>\n          \n          \n            \n            +     * This radius may not always be obeyed during the structure search!\n          \n          \n            \n            +     * @param radius the search radius.\n          \n          \n            \n            +     * Sets the search radius in which to attempt locating the structure.\n          \n          \n            \n            +     * <p>\n          \n          \n            \n            +     * This radius may not always be obeyed during the structure search!\n          \n          \n            \n            +     *\n          \n          \n            \n            +     * @return the search radius.", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523452787", "createdAt": "2020-11-14T19:16:02Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Tue, 15 Sep 2020 21:59:16 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/org/bukkit/event/world/StructureLocateEvent.java b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+new file mode 100644\n+index 0000000000000000000000000000000000000000..1011b03fcc7be912e617a6fde3f62e68d70f2c1c\n+--- /dev/null\n++++ b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+@@ -0,0 +1,137 @@\n++package org.bukkit.event.world;\n++\n++import org.bukkit.Location;\n++import org.bukkit.StructureType;\n++import org.bukkit.World;\n++import org.bukkit.event.Cancellable;\n++import org.bukkit.event.HandlerList;\n++import org.jetbrains.annotations.NotNull;\n++import org.jetbrains.annotations.Nullable;\n++\n++/**\n++ * Called <b>before</b> a structure/feature is located.\n++ * This happens when:<br>\n++ *   - The /locate command is used.<br>\n++ *   - An Eye of Ender is used.<br>\n++ *   - An Explorer/Treasure Map is activated.<br>\n++ *   - {@link World#locateNearestStructure(Location, StructureType, int, boolean)} is invoked.\n++ */\n++public class StructureLocateEvent extends WorldEvent implements Cancellable {\n++    private static final HandlerList handlers = new HandlerList();\n++    private final Location origin;\n++    private Location result = null;\n++    private StructureType type;\n++    private int radius;\n++    private boolean findUnexplored;\n++    private boolean cancelled = false;\n++    public StructureLocateEvent(@NotNull World world, @NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored) {\n++        super(world);\n++        this.origin = origin;\n++        this.type = structureType;\n++        this.radius = radius;\n++        this.findUnexplored = findUnexplored;\n++    }\n++\n++    @NotNull\n++    @Override\n++    public HandlerList getHandlers() {\n++        return handlers;\n++    }\n++\n++    @NotNull\n++    public static HandlerList getHandlerList() {\n++        return handlers;\n++    }\n++\n++    /**\n++     * Gets the location set as the structure location, if it was defined.<br>\n++     * Returns null if it has not been set by {@link StructureLocateEvent#setResult(Location)}.<br>\n++     * Since this event fires <i>before</i> the search is done, the actual location is unknown at this point.<br>\n++     * If you wish to manipulate the location, use {@link World#locateNearestStructure(Location, StructureType, int, boolean)}\n++     * @return The result location, if it has been set. null if it has not.\n++     */\n++    @Nullable\n++    public Location getResult() {\n++        return result;\n++    }\n++\n++    /**\n++     * Sets the result Location. This causes the search to be skipped, and the location passed here to be used as the result.\n++     * @param result the Location of the structure.\n++     */\n++    public void setResult(@Nullable Location result) {\n++        this.result = result;\n++    }\n++\n++    /**\n++     * Gets the {@link StructureType} that is to be located.\n++     * @return the structure type.\n++     */\n++    @NotNull\n++    public StructureType getType() {\n++        return type;\n++    }\n++\n++    /**\n++     * Sets the {@link StructureType} that is to be located.\n++     * @param type the structure type.\n++     */\n++    public void setType(@NotNull StructureType type) {\n++        this.type = type;\n++    }\n++\n++    /**\n++     * Gets the location from which the search is to be conducted.\n++     * @return Location where search begins\n++     */\n++    @NotNull\n++    public Location getOrigin() {\n++        return origin;\n++    }\n++\n++    /**\n++     * Gets the search radius in which to attempt locating the structure.<br>\n++     * This radius may not always be obeyed during the structure search!\n++     * @return the search radius.\n++     */\n++    public int getRadius() {\n++        return radius;\n++    }\n++\n++    /**\n++     * Sets the search radius in which to attempt locating the structure.<br>\n++     * This radius may not always be obeyed during the structure search!\n++     * @param radius the search radius.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkwODg2OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNjoyNVrOHzNBpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNjoyNVrOHzNBpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1MjgzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * Gets whether to search exclusively for unexplored structures.<br>\n          \n          \n            \n            +     * As with the search radius, this value is not always obeyed.\n          \n          \n            \n            +     * @return Whether to search for only unexplored structures.\n          \n          \n            \n            +     * Gets whether to search exclusively for unexplored structures.\n          \n          \n            \n            +     * <p>\n          \n          \n            \n            +     * As with the search radius, this value is not always obeyed.\n          \n          \n            \n            +     *\n          \n          \n            \n            +     * @return Whether to search for only unexplored structures.", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523452836", "createdAt": "2020-11-14T19:16:25Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Tue, 15 Sep 2020 21:59:16 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/org/bukkit/event/world/StructureLocateEvent.java b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+new file mode 100644\n+index 0000000000000000000000000000000000000000..1011b03fcc7be912e617a6fde3f62e68d70f2c1c\n+--- /dev/null\n++++ b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+@@ -0,0 +1,137 @@\n++package org.bukkit.event.world;\n++\n++import org.bukkit.Location;\n++import org.bukkit.StructureType;\n++import org.bukkit.World;\n++import org.bukkit.event.Cancellable;\n++import org.bukkit.event.HandlerList;\n++import org.jetbrains.annotations.NotNull;\n++import org.jetbrains.annotations.Nullable;\n++\n++/**\n++ * Called <b>before</b> a structure/feature is located.\n++ * This happens when:<br>\n++ *   - The /locate command is used.<br>\n++ *   - An Eye of Ender is used.<br>\n++ *   - An Explorer/Treasure Map is activated.<br>\n++ *   - {@link World#locateNearestStructure(Location, StructureType, int, boolean)} is invoked.\n++ */\n++public class StructureLocateEvent extends WorldEvent implements Cancellable {\n++    private static final HandlerList handlers = new HandlerList();\n++    private final Location origin;\n++    private Location result = null;\n++    private StructureType type;\n++    private int radius;\n++    private boolean findUnexplored;\n++    private boolean cancelled = false;\n++    public StructureLocateEvent(@NotNull World world, @NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored) {\n++        super(world);\n++        this.origin = origin;\n++        this.type = structureType;\n++        this.radius = radius;\n++        this.findUnexplored = findUnexplored;\n++    }\n++\n++    @NotNull\n++    @Override\n++    public HandlerList getHandlers() {\n++        return handlers;\n++    }\n++\n++    @NotNull\n++    public static HandlerList getHandlerList() {\n++        return handlers;\n++    }\n++\n++    /**\n++     * Gets the location set as the structure location, if it was defined.<br>\n++     * Returns null if it has not been set by {@link StructureLocateEvent#setResult(Location)}.<br>\n++     * Since this event fires <i>before</i> the search is done, the actual location is unknown at this point.<br>\n++     * If you wish to manipulate the location, use {@link World#locateNearestStructure(Location, StructureType, int, boolean)}\n++     * @return The result location, if it has been set. null if it has not.\n++     */\n++    @Nullable\n++    public Location getResult() {\n++        return result;\n++    }\n++\n++    /**\n++     * Sets the result Location. This causes the search to be skipped, and the location passed here to be used as the result.\n++     * @param result the Location of the structure.\n++     */\n++    public void setResult(@Nullable Location result) {\n++        this.result = result;\n++    }\n++\n++    /**\n++     * Gets the {@link StructureType} that is to be located.\n++     * @return the structure type.\n++     */\n++    @NotNull\n++    public StructureType getType() {\n++        return type;\n++    }\n++\n++    /**\n++     * Sets the {@link StructureType} that is to be located.\n++     * @param type the structure type.\n++     */\n++    public void setType(@NotNull StructureType type) {\n++        this.type = type;\n++    }\n++\n++    /**\n++     * Gets the location from which the search is to be conducted.\n++     * @return Location where search begins\n++     */\n++    @NotNull\n++    public Location getOrigin() {\n++        return origin;\n++    }\n++\n++    /**\n++     * Gets the search radius in which to attempt locating the structure.<br>\n++     * This radius may not always be obeyed during the structure search!\n++     * @return the search radius.\n++     */\n++    public int getRadius() {\n++        return radius;\n++    }\n++\n++    /**\n++     * Sets the search radius in which to attempt locating the structure.<br>\n++     * This radius may not always be obeyed during the structure search!\n++     * @param radius the search radius.\n++     */\n++    public void setRadius(int radius) {\n++        this.radius = radius;\n++    }\n++\n++    /**\n++     * Gets whether to search exclusively for unexplored structures.<br>\n++     * As with the search radius, this value is not always obeyed.\n++     * @return Whether to search for only unexplored structures.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkwOTEwOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNjozOFrOHzNBvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxNjozOFrOHzNBvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1Mjg2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * Sets whether to search exclusively for unexplored structures.<br>\n          \n          \n            \n            +     * As with the search radius, this value is not always obeyed.\n          \n          \n            \n            +     * @param findUnexplored Whether to search for only unexplored structures.\n          \n          \n            \n            +     * Sets whether to search exclusively for unexplored structures.\n          \n          \n            \n            +     * <p>\n          \n          \n            \n            +     * As with the search radius, this value is not always obeyed.\n          \n          \n            \n            +     *\n          \n          \n            \n            +     * @param findUnexplored Whether to search for only unexplored structures.", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523452863", "createdAt": "2020-11-14T19:16:38Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0227-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Tue, 15 Sep 2020 21:59:16 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/org/bukkit/event/world/StructureLocateEvent.java b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+new file mode 100644\n+index 0000000000000000000000000000000000000000..1011b03fcc7be912e617a6fde3f62e68d70f2c1c\n+--- /dev/null\n++++ b/src/main/java/org/bukkit/event/world/StructureLocateEvent.java\n+@@ -0,0 +1,137 @@\n++package org.bukkit.event.world;\n++\n++import org.bukkit.Location;\n++import org.bukkit.StructureType;\n++import org.bukkit.World;\n++import org.bukkit.event.Cancellable;\n++import org.bukkit.event.HandlerList;\n++import org.jetbrains.annotations.NotNull;\n++import org.jetbrains.annotations.Nullable;\n++\n++/**\n++ * Called <b>before</b> a structure/feature is located.\n++ * This happens when:<br>\n++ *   - The /locate command is used.<br>\n++ *   - An Eye of Ender is used.<br>\n++ *   - An Explorer/Treasure Map is activated.<br>\n++ *   - {@link World#locateNearestStructure(Location, StructureType, int, boolean)} is invoked.\n++ */\n++public class StructureLocateEvent extends WorldEvent implements Cancellable {\n++    private static final HandlerList handlers = new HandlerList();\n++    private final Location origin;\n++    private Location result = null;\n++    private StructureType type;\n++    private int radius;\n++    private boolean findUnexplored;\n++    private boolean cancelled = false;\n++    public StructureLocateEvent(@NotNull World world, @NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored) {\n++        super(world);\n++        this.origin = origin;\n++        this.type = structureType;\n++        this.radius = radius;\n++        this.findUnexplored = findUnexplored;\n++    }\n++\n++    @NotNull\n++    @Override\n++    public HandlerList getHandlers() {\n++        return handlers;\n++    }\n++\n++    @NotNull\n++    public static HandlerList getHandlerList() {\n++        return handlers;\n++    }\n++\n++    /**\n++     * Gets the location set as the structure location, if it was defined.<br>\n++     * Returns null if it has not been set by {@link StructureLocateEvent#setResult(Location)}.<br>\n++     * Since this event fires <i>before</i> the search is done, the actual location is unknown at this point.<br>\n++     * If you wish to manipulate the location, use {@link World#locateNearestStructure(Location, StructureType, int, boolean)}\n++     * @return The result location, if it has been set. null if it has not.\n++     */\n++    @Nullable\n++    public Location getResult() {\n++        return result;\n++    }\n++\n++    /**\n++     * Sets the result Location. This causes the search to be skipped, and the location passed here to be used as the result.\n++     * @param result the Location of the structure.\n++     */\n++    public void setResult(@Nullable Location result) {\n++        this.result = result;\n++    }\n++\n++    /**\n++     * Gets the {@link StructureType} that is to be located.\n++     * @return the structure type.\n++     */\n++    @NotNull\n++    public StructureType getType() {\n++        return type;\n++    }\n++\n++    /**\n++     * Sets the {@link StructureType} that is to be located.\n++     * @param type the structure type.\n++     */\n++    public void setType(@NotNull StructureType type) {\n++        this.type = type;\n++    }\n++\n++    /**\n++     * Gets the location from which the search is to be conducted.\n++     * @return Location where search begins\n++     */\n++    @NotNull\n++    public Location getOrigin() {\n++        return origin;\n++    }\n++\n++    /**\n++     * Gets the search radius in which to attempt locating the structure.<br>\n++     * This radius may not always be obeyed during the structure search!\n++     * @return the search radius.\n++     */\n++    public int getRadius() {\n++        return radius;\n++    }\n++\n++    /**\n++     * Sets the search radius in which to attempt locating the structure.<br>\n++     * This radius may not always be obeyed during the structure search!\n++     * @param radius the search radius.\n++     */\n++    public void setRadius(int radius) {\n++        this.radius = radius;\n++    }\n++\n++    /**\n++     * Gets whether to search exclusively for unexplored structures.<br>\n++     * As with the search radius, this value is not always obeyed.\n++     * @return Whether to search for only unexplored structures.\n++     */\n++    public boolean shouldFindUnexplored() {\n++        return findUnexplored;\n++    }\n++\n++    /**\n++     * Sets whether to search exclusively for unexplored structures.<br>\n++     * As with the search radius, this value is not always obeyed.\n++     * @param findUnexplored Whether to search for only unexplored structures.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkxMDA4OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0580-Add-StructureLocateEvent.patch", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToxODowMFrOHzNCMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwNjoxMDoxN1rOHzpTow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1Mjk3OQ==", "bodyText": "What if the location has a different world?", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523452979", "createdAt": "2020-11-14T19:18:00Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0580-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,31 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Wed, 16 Sep 2020 01:12:29 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/ChunkGenerator.java b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+index 9a6fef215052f9c513b23024968995c97863a453..5adc9dc871b22dfd76e298505db1b3f5385b554a 100644\n+--- a/src/main/java/net/minecraft/server/ChunkGenerator.java\n++++ b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+@@ -124,6 +124,20 @@ public abstract class ChunkGenerator {\n+ \n+     @Nullable\n+     public BlockPosition findNearestMapFeature(WorldServer worldserver, StructureGenerator<?> structuregenerator, BlockPosition blockposition, int i, boolean flag) {\n++        // Paper start\n++        org.bukkit.World world = worldserver.getWorld();\n++        org.bukkit.Location originLocation = new org.bukkit.Location(world, blockposition.getX(), blockposition.getY(), blockposition.getZ());\n++        org.bukkit.event.world.StructureLocateEvent event = new org.bukkit.event.world.StructureLocateEvent(world, originLocation, org.bukkit.StructureType.getStructureTypes().get(structuregenerator.i()), i, flag);\n++        if(!event.callEvent()) return null;\n++        // If event call set a final location, skip structure finding and just return set result.\n++        if(event.getResult() != null) return new BlockPosition(event.getResult().getBlockX(), event.getResult().getBlockY(), event.getResult().getBlockZ());\n++        // Get origin location (re)defined by event call.\n++        blockposition = new BlockPosition(event.getOrigin().getBlockX(), event.getOrigin().getBlockY(), event.getOrigin().getBlockZ());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzkxNjE5NQ==", "bodyText": "World is updated in latest commit.", "url": "https://github.com/PaperMC/Paper/pull/4333#discussion_r523916195", "createdAt": "2020-11-16T06:10:17Z", "author": {"login": "dfsek"}, "path": "Spigot-Server-Patches/0580-Add-StructureLocateEvent.patch", "diffHunk": "@@ -0,0 +1,31 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: dfsek <dfsek@protonmail.com>\n+Date: Wed, 16 Sep 2020 01:12:29 -0700\n+Subject: [PATCH] Add StructureLocateEvent\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/ChunkGenerator.java b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+index 9a6fef215052f9c513b23024968995c97863a453..5adc9dc871b22dfd76e298505db1b3f5385b554a 100644\n+--- a/src/main/java/net/minecraft/server/ChunkGenerator.java\n++++ b/src/main/java/net/minecraft/server/ChunkGenerator.java\n+@@ -124,6 +124,20 @@ public abstract class ChunkGenerator {\n+ \n+     @Nullable\n+     public BlockPosition findNearestMapFeature(WorldServer worldserver, StructureGenerator<?> structuregenerator, BlockPosition blockposition, int i, boolean flag) {\n++        // Paper start\n++        org.bukkit.World world = worldserver.getWorld();\n++        org.bukkit.Location originLocation = new org.bukkit.Location(world, blockposition.getX(), blockposition.getY(), blockposition.getZ());\n++        org.bukkit.event.world.StructureLocateEvent event = new org.bukkit.event.world.StructureLocateEvent(world, originLocation, org.bukkit.StructureType.getStructureTypes().get(structuregenerator.i()), i, flag);\n++        if(!event.callEvent()) return null;\n++        // If event call set a final location, skip structure finding and just return set result.\n++        if(event.getResult() != null) return new BlockPosition(event.getResult().getBlockX(), event.getResult().getBlockY(), event.getResult().getBlockZ());\n++        // Get origin location (re)defined by event call.\n++        blockposition = new BlockPosition(event.getOrigin().getBlockX(), event.getOrigin().getBlockY(), event.getOrigin().getBlockZ());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1Mjk3OQ=="}, "originalCommit": {"oid": "836f20dea3e02b6deb10e258363a602cd5316684"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1816, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}