{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3Mzk2NDU4", "number": 3366, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzoyNjowN1rOD8Kirg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzoyNjowN1rOD8Kirg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDEzODcwOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0201-Prioritise-own-classes-where-possible.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzoyNjowN1rOGU8Axg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzoyNjowN1rOGU8Axg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwNzk0Mg==", "bodyText": "(Comment by @mikroskeem on Discord) Make this final.", "url": "https://github.com/PaperMC/Paper/pull/3366#discussion_r424607942", "createdAt": "2020-05-13T17:26:07Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0201-Prioritise-own-classes-where-possible.patch", "diffHunk": "@@ -0,0 +1,64 @@\n+From 9cff75ff6e1772fce2c46e485119476e5b0b1a8b Mon Sep 17 00:00:00 2001\n+From: Mariell Hoversholm <proximyst@proximyst.com>\n+Date: Mon, 27 Apr 2020 12:31:59 +0200\n+Subject: [PATCH] Prioritise own classes where possible\n+\n+This adds the server property `Paper.DisableClassPrioritization` to disable\n+prioritization of own classes for plugins' classloaders.\n+\n+This value is by default not present, and this will therefore break any\n+plugins which abuse behaviour related to not using their own classes\n+while still loading their own. This is often an issue with failing to\n+relocate or shade properly, such as when shading plugin APIs like Vault.\n+\n+A plugin's classloader will first look in the same jar as it is loading\n+in for a requested class, then load it. It does not re-use other\n+plugins' classes if it has the chance to avoid doing so.\n+\n+If a class is not found in the same jar as it is loading for and it does\n+find it elsewhere, it will still choose the class elsewhere. This is\n+intended behaviour, as it will only prioritise classes it has in its own\n+jar, no other plugins' classes will be prioritised in any other order\n+than the one they were registered in.\n+\n+The patch in general terms just loads the class in the plugin's jar\n+before it starts looking elsewhere for it.\n+\n+diff --git a/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java b/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java\n+index 3a02dbe9..45f90501 100644\n+--- a/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java\n++++ b/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java\n+@@ -29,6 +29,7 @@ import org.jetbrains.annotations.Nullable;\n+  * A ClassLoader for plugins, to allow shared classes across multiple plugins\n+  */\n+ public final class PluginClassLoader extends URLClassLoader { // Spigot\n++    private static boolean DISABLE_CLASS_PRIORITIZATION = Boolean.getBoolean(\"Paper.DisableClassPrioritization\"); // Paper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4dfddef8768934b44fca83caef5288b3851b8a7"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1974, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}