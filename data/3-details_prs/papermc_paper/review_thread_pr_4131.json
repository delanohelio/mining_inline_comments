{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MTc2NjU3", "number": 4131, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMzoyMzoxMVrOEZv4Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQyMDoxNToxM1rOEbP_GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NDM0Mjg2OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0552-Prevent-headless-pistons-from-being-created.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMzoyMzoxMVrOHCvf6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMzoyMzoxMVrOHCvf6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjYzNzQxOA==", "bodyText": "needs an obfuscation helper for the .h()", "url": "https://github.com/PaperMC/Paper/pull/4131#discussion_r472637418", "createdAt": "2020-08-19T03:23:11Z", "author": {"login": "aikar"}, "path": "Spigot-Server-Patches/0552-Prevent-headless-pistons-from-being-created.patch", "diffHunk": "@@ -0,0 +1,44 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: commandblockguy <commandblockguy1@gmail.com>\n+Date: Fri, 14 Aug 2020 14:44:14 -0500\n+Subject: [PATCH] Prevent headless pistons from being created\n+\n+Prevent headless pistons from being created by explosions or tree/mushroom growth.\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+index 60f03502a7fd622d2de3b2da9fe8014b289f3d31..9fc12595a566f216620a7fb296d2d30e22332689 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+@@ -436,6 +436,12 @@ public class PaperConfig {\n+         set(\"settings.unsupported-settings.allow-tnt-duplication\", null);\n+     }\n+ \n++    public static boolean allowHeadlessPistons;\n++    private static void allowHeadlessPistons() {\n++        config.set(\"settings.unsupported-settings.allow-headless-pistons-readme\", \"This setting controls if players should be able to create headless pistons.\");\n++        allowHeadlessPistons = getBoolean(\"settings.unsupported-settings.allow-headless-pistons\", false);\n++    }\n++\n+     public static int playerAutoSaveRate = -1;\n+     public static int maxPlayerAutoSavePerTick = 10;\n+     private static void playerAutoSaveRate() {\n+diff --git a/src/main/java/net/minecraft/server/Explosion.java b/src/main/java/net/minecraft/server/Explosion.java\n+index e408ec8c645e9ceb278a13a5b0de8ecf57f3929e..388afbd1f130de43fd558de715326c39029ef215 100644\n+--- a/src/main/java/net/minecraft/server/Explosion.java\n++++ b/src/main/java/net/minecraft/server/Explosion.java\n+@@ -134,6 +134,15 @@ public class Explosion {\n+ \n+                             if (f > 0.0F && this.k.a(this, this.world, blockposition, iblockdata, f) && blockposition.getY() < 256 && blockposition.getY() >= 0) { // CraftBukkit - don't wrap explosions\n+                                 set.add(blockposition);\n++                                // Paper start - prevent headless pistons from forming\n++                                if (!com.destroystokyo.paper.PaperConfig.allowHeadlessPistons && iblockdata.getBlock() == Blocks.MOVING_PISTON) {\n++                                    TileEntityPiston extension = (TileEntityPiston)this.world.getTileEntity(blockposition);\n++                                    if (extension.h()) { // check if this is the piston head", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "732e66a232ded473c7bc1a0c6290c4b501cccd4c"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MDA4OTIwOnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0552-Prevent-headless-pistons-from-being-created.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQyMDoxNToxM1rOHFH5yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQyMDoxNToxM1rOHFH5yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEzNDQxMA==", "bodyText": "Place this right above the h method.", "url": "https://github.com/PaperMC/Paper/pull/4131#discussion_r475134410", "createdAt": "2020-08-22T20:15:13Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0552-Prevent-headless-pistons-from-being-created.patch", "diffHunk": "@@ -0,0 +1,57 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: commandblockguy <commandblockguy1@gmail.com>\n+Date: Fri, 14 Aug 2020 14:44:14 -0500\n+Subject: [PATCH] Prevent headless pistons from being created\n+\n+Prevent headless pistons from being created by explosions or tree/mushroom growth.\n+\n+diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+index 60f03502a7fd622d2de3b2da9fe8014b289f3d31..9fc12595a566f216620a7fb296d2d30e22332689 100644\n+--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java\n++++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java\n+@@ -436,6 +436,12 @@ public class PaperConfig {\n+         set(\"settings.unsupported-settings.allow-tnt-duplication\", null);\n+     }\n+ \n++    public static boolean allowHeadlessPistons;\n++    private static void allowHeadlessPistons() {\n++        config.set(\"settings.unsupported-settings.allow-headless-pistons-readme\", \"This setting controls if players should be able to create headless pistons.\");\n++        allowHeadlessPistons = getBoolean(\"settings.unsupported-settings.allow-headless-pistons\", false);\n++    }\n++\n+     public static int playerAutoSaveRate = -1;\n+     public static int maxPlayerAutoSavePerTick = 10;\n+     private static void playerAutoSaveRate() {\n+diff --git a/src/main/java/net/minecraft/server/Explosion.java b/src/main/java/net/minecraft/server/Explosion.java\n+index e408ec8c645e9ceb278a13a5b0de8ecf57f3929e..809b98a529282ce4df025f5c73b4417cfe658646 100644\n+--- a/src/main/java/net/minecraft/server/Explosion.java\n++++ b/src/main/java/net/minecraft/server/Explosion.java\n+@@ -134,6 +134,15 @@ public class Explosion {\n+ \n+                             if (f > 0.0F && this.k.a(this, this.world, blockposition, iblockdata, f) && blockposition.getY() < 256 && blockposition.getY() >= 0) { // CraftBukkit - don't wrap explosions\n+                                 set.add(blockposition);\n++                                // Paper start - prevent headless pistons from forming\n++                                if (!com.destroystokyo.paper.PaperConfig.allowHeadlessPistons && iblockdata.getBlock() == Blocks.MOVING_PISTON) {\n++                                    TileEntityPiston extension = (TileEntityPiston)this.world.getTileEntity(blockposition);\n++                                    if (extension.isHead()) {\n++                                       EnumDirection direction = iblockdata.get(BlockPistonExtension.FACING);\n++                                       set.add(blockposition.shift(direction.opposite()));\n++                                    }\n++                                }\n++                                // Paper end\n+                             }\n+ \n+                             d4 += d0 * 0.30000001192092896D;\n+diff --git a/src/main/java/net/minecraft/server/TileEntityPiston.java b/src/main/java/net/minecraft/server/TileEntityPiston.java\n+index e7b7e468fc874b0fbcd43f87d816a42420f9b05e..88ed2906f158837a1b7ea02f839ccf2baf468075 100644\n+--- a/src/main/java/net/minecraft/server/TileEntityPiston.java\n++++ b/src/main/java/net/minecraft/server/TileEntityPiston.java\n+@@ -45,6 +45,8 @@ public class TileEntityPiston extends TileEntity implements ITickable {\n+         return this.g;\n+     }\n+ \n++    public final boolean isHead() { return this.h(); } // Paper - OBFHELPER", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49676ca429e0ae0376618832a4d8df38e99ab43f"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1894, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}