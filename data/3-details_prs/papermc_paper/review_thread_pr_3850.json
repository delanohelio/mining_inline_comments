{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NzY4NjQ3", "number": 3850, "reviewThreads": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTo0NzowNFrOEMTNAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0yM1QxOTozNzoyN1rOF15UOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzMyOTk0OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTo0NzowNFrOGuVPfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTo0NzowNFrOGuVPfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNTcwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +    boolean isBedWorks();\n          \n          \n            \n            +    boolean doesBedWork();", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r451235708", "createdAt": "2020-07-08T01:47:04Z", "author": {"login": "FranKusmiruk"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,48 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..6b4bc8535970e761287273d20b752d97080b2f82 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,37 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    boolean isUltrawarm();\n++\n++    boolean isNatural();\n++\n++    boolean isShrunk();\n++\n++    boolean hasSkylight();\n++\n++    boolean hasCeiling();\n++\n++    boolean isPiglinSafe();\n++\n++    boolean isBedWorks();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a50e26c18d65c7f17bccf2456d69d4e1d3bb034"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzMzNDU1OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTo1MDowM1rOGuVSTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTo1MDowM1rOGuVSTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNjQzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +    boolean isRespawnAnchorWorks();\n          \n          \n            \n            +    boolean doesRespawnAnchorWork();", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r451236430", "createdAt": "2020-07-08T01:50:03Z", "author": {"login": "FranKusmiruk"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,48 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..6b4bc8535970e761287273d20b752d97080b2f82 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,37 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    boolean isUltrawarm();\n++\n++    boolean isNatural();\n++\n++    boolean isShrunk();\n++\n++    boolean hasSkylight();\n++\n++    boolean hasCeiling();\n++\n++    boolean isPiglinSafe();\n++\n++    boolean isBedWorks();\n++\n++    boolean isRespawnAnchorWorks();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a50e26c18d65c7f17bccf2456d69d4e1d3bb034"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzMDE0OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0MTo1MlrOHzNLXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0MTo1MlrOHzNLXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTMyNA==", "bodyText": "Drop this", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455324", "createdAt": "2020-11-14T19:41:52Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzMDQ1OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0MjowOFrOHzNLgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0MjowOFrOHzNLgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTM2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * Locates the nearest biome based on an origin, biome type, and radius to search\n          \n          \n            \n            +     * Step defaults to 8\n          \n          \n            \n            +     * Locates the nearest biome based on an origin, biome type, and radius to search.\n          \n          \n            \n            +     * Step defaults to {@code 8}.", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455363", "createdAt": "2020-11-14T19:42:08Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzMTEwOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0MzowN1rOHzNL2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0MzowN1rOHzNL2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTQ0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * Checks if the world:\n          \n          \n            \n            +     * evaporates water\n          \n          \n            \n            +     * dries sponges\n          \n          \n            \n            +     * has lava spread faster and further\n          \n          \n            \n            +     *\n          \n          \n            \n            +     * @return true if ultrawarm, false if not\n          \n          \n            \n            +     * Checks if the world:\n          \n          \n            \n            +     * <ul>\n          \n          \n            \n            +     *     <li>evaporates water</li>\n          \n          \n            \n            +     *     <li>dries sponges</li>\n          \n          \n            \n            +     *     <li>has lava spread faster and further</li>\n          \n          \n            \n            +     * </ul>\n          \n          \n            \n            +     *\n          \n          \n            \n            +     * @return whether the world is ultrawarm", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455448", "createdAt": "2020-11-14T19:43:07Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzMTQ2OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0Mzo1M1rOHzNMCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0Mzo1M1rOHzNMCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTQ5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * Checks if the world is natural\n          \n          \n            \n            +     * If false, compasses will spin randomly in the world\n          \n          \n            \n            +     * if true, nether portals will spawn zombified piglins\n          \n          \n            \n            +     *\n          \n          \n            \n            +     * @return true or false\n          \n          \n            \n            +     * Checks if the world is natural.\n          \n          \n            \n            +    * <p>\n          \n          \n            \n            +     * If {@code false}, compasses will spin randomly in the world.\n          \n          \n            \n            +     * If {@code true}, nether portals will spawn Zombified Piglins.\n          \n          \n            \n            +     *\n          \n          \n            \n            +     * @return whether the world is natural", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455499", "createdAt": "2020-11-14T19:43:53Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzMjAxOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NDoxM1rOHzNMRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NDoxM1rOHzNMRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTU1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * Checks if the world is shrunk\n          \n          \n            \n            +     * where 1 block is 8 blocks in the overworld\n          \n          \n            \n            +     * like the nether\n          \n          \n            \n            +     * Checks if the world is shrunk where 1 block is 8 blocks in the overworld like the Nether.", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455556", "createdAt": "2020-11-14T19:44:13Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzMjA3OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NDoyM1rOHzNMSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NDoyM1rOHzNMSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTU2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * @return true if shrunk\n          \n          \n            \n            +     * @return whether the world is shrunk", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455563", "createdAt": "2020-11-14T19:44:23Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether\n++     *\n++     * @return true if shrunk", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzMjUyOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NDozNVrOHzNMfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NDozNVrOHzNMfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTYxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * @return true if it has access\n          \n          \n            \n            +     * @return whether there is skylight", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455613", "createdAt": "2020-11-14T19:44:35Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether\n++     *\n++     * @return true if shrunk\n++     */\n++    boolean isShrunk();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return true if it has access", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzMjcwOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NDo0NVrOHzNMkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NDo0NVrOHzNMkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTYzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * @return true if it has a bedrock ceiling\n          \n          \n            \n            +     * @return whether the world has a bedrock ceiling", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455633", "createdAt": "2020-11-14T19:44:45Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether\n++     *\n++     * @return true if shrunk\n++     */\n++    boolean isShrunk();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return true if it has access\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return true if it has a bedrock ceiling", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzMjc4OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NDo1M1rOHzNMnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NDo1M1rOHzNMnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTY0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +    boolean hasCeiling();\n          \n          \n            \n            +    boolean hasBedrockCeiling();", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455644", "createdAt": "2020-11-14T19:44:53Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether\n++     *\n++     * @return true if shrunk\n++     */\n++    boolean isShrunk();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return true if it has access\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return true if it has a bedrock ceiling\n++     */\n++    boolean hasCeiling();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzMzEwOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NToxMVrOHzNMxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NToxMVrOHzNMxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTY4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * Checks if piglins will turn into zombified piglins\n          \n          \n            \n            +     * in this world\n          \n          \n            \n            +     * Checks if Piglins will convert to Zombified Piglins in this world.", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455684", "createdAt": "2020-11-14T19:45:11Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether\n++     *\n++     * @return true if shrunk\n++     */\n++    boolean isShrunk();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return true if it has access\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return true if it has a bedrock ceiling\n++     */\n++    boolean hasCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into zombified piglins\n++     * in this world", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzMzU0OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NTozNlrOHzNM9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NTozNlrOHzNM9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTczNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * @return true if piglins will NOT transform\n          \n          \n            \n            +     * @return whether Piglins will <i>not</i> transform", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455735", "createdAt": "2020-11-14T19:45:36Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether\n++     *\n++     * @return true if shrunk\n++     */\n++    boolean isShrunk();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return true if it has access\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return true if it has a bedrock ceiling\n++     */\n++    boolean hasCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into zombified piglins\n++     * in this world\n++     *\n++     * @return true if piglins will NOT transform", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzMzc5OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NTo0OVrOHzNNEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NTo0OVrOHzNNEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTc2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * @return true if beds work\n          \n          \n            \n            +     * @return whether beds work\n          \n      \n    \n    \n  \n\nWhat if they don't work?", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455762", "createdAt": "2020-11-14T19:45:49Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether\n++     *\n++     * @return true if shrunk\n++     */\n++    boolean isShrunk();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return true if it has access\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return true if it has a bedrock ceiling\n++     */\n++    boolean hasCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into zombified piglins\n++     * in this world\n++     *\n++     * @return true if piglins will NOT transform\n++     */\n++    boolean isPiglinSafe();\n++\n++    /**\n++     * Checks if beds work\n++     *\n++     * @return true if beds work", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzNDAxOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NjowNlrOHzNNKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NjowNlrOHzNNKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTc4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * @return true if they work\n          \n          \n            \n            +     * @return whether respawn anchors work\n          \n      \n    \n    \n  \n\nWhat if they don't work?", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455785", "createdAt": "2020-11-14T19:46:06Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether\n++     *\n++     * @return true if shrunk\n++     */\n++    boolean isShrunk();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return true if it has access\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return true if it has a bedrock ceiling\n++     */\n++    boolean hasCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into zombified piglins\n++     * in this world\n++     *\n++     * @return true if piglins will NOT transform\n++     */\n++    boolean isPiglinSafe();\n++\n++    /**\n++     * Checks if beds work\n++     *\n++     * @return true if beds work\n++     */\n++    boolean doesBedWork();\n++\n++    /**\n++     * Checks if respawn anchors work\n++     *\n++     * @return true if they work", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzNDQ0OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NjozMVrOHzNNWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NjozMVrOHzNNWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTgzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * @return true if supported\n          \n          \n            \n            +     * @return whether this world supports raids", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455835", "createdAt": "2020-11-14T19:46:31Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether\n++     *\n++     * @return true if shrunk\n++     */\n++    boolean isShrunk();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return true if it has access\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return true if it has a bedrock ceiling\n++     */\n++    boolean hasCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into zombified piglins\n++     * in this world\n++     *\n++     * @return true if piglins will NOT transform\n++     */\n++    boolean isPiglinSafe();\n++\n++    /**\n++     * Checks if beds work\n++     *\n++     * @return true if beds work\n++     */\n++    boolean doesBedWork();\n++\n++    /**\n++     * Checks if respawn anchors work\n++     *\n++     * @return true if they work\n++     */\n++    boolean doesRespawnAnchorWork();\n++\n++    /**\n++     * Checks if this world supports raids\n++     *\n++     * @return true if supported", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzNDY5OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0Njo0MFrOHzNNeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0Njo0MFrOHzNNeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTg2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * @return true if fixed\n          \n          \n            \n            +     * @return whether the world has fixed time", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455864", "createdAt": "2020-11-14T19:46:40Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether\n++     *\n++     * @return true if shrunk\n++     */\n++    boolean isShrunk();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return true if it has access\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return true if it has a bedrock ceiling\n++     */\n++    boolean hasCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into zombified piglins\n++     * in this world\n++     *\n++     * @return true if piglins will NOT transform\n++     */\n++    boolean isPiglinSafe();\n++\n++    /**\n++     * Checks if beds work\n++     *\n++     * @return true if beds work\n++     */\n++    boolean doesBedWork();\n++\n++    /**\n++     * Checks if respawn anchors work\n++     *\n++     * @return true if they work\n++     */\n++    boolean doesRespawnAnchorWork();\n++\n++    /**\n++     * Checks if this world supports raids\n++     *\n++     * @return true if supported\n++     */\n++    boolean hasRaids();\n++\n++    /**\n++     * Checks if this world has a fixed time\n++     *\n++     * @return true if fixed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzNTExOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0NzowNlrOHzNNqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQyMzozMDozNVrOHzOcZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTkxMw==", "bodyText": "This feels weird, as every other method is not inverse. Might be good to rename this?", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523455913", "createdAt": "2020-11-14T19:47:06Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether\n++     *\n++     * @return true if shrunk\n++     */\n++    boolean isShrunk();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return true if it has access\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return true if it has a bedrock ceiling\n++     */\n++    boolean hasCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into zombified piglins\n++     * in this world\n++     *\n++     * @return true if piglins will NOT transform\n++     */\n++    boolean isPiglinSafe();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ3NjA3MQ==", "bodyText": "I was just taking them directly as they were laid out in DimensionManager", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523476071", "createdAt": "2020-11-14T23:30:35Z", "author": {"login": "Machine-Maker"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether\n++     *\n++     * @return true if shrunk\n++     */\n++    boolean isShrunk();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return true if it has access\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return true if it has a bedrock ceiling\n++     */\n++    boolean hasCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into zombified piglins\n++     * in this world\n++     *\n++     * @return true if piglins will NOT transform\n++     */\n++    boolean isPiglinSafe();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NTkxMw=="}, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzNTc5OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0ODoxMVrOHzNOBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0ODoxMVrOHzNOBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NjAwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     * Gets the collection of materials that burn\n          \n          \n            \n            +     * infinitely in this world\n          \n          \n            \n            +     *\n          \n          \n            \n            +     * @return the infinite burn materials\n          \n          \n            \n            +     * Gets the collection of materials that burn infinitely in this world.\n          \n          \n            \n            +     *\n          \n          \n            \n            +     * @return the materials that will forever stay lit by fire", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523456004", "createdAt": "2020-11-14T19:48:11Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether\n++     *\n++     * @return true if shrunk\n++     */\n++    boolean isShrunk();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return true if it has access\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return true if it has a bedrock ceiling\n++     */\n++    boolean hasCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into zombified piglins\n++     * in this world\n++     *\n++     * @return true if piglins will NOT transform\n++     */\n++    boolean isPiglinSafe();\n++\n++    /**\n++     * Checks if beds work\n++     *\n++     * @return true if beds work\n++     */\n++    boolean doesBedWork();\n++\n++    /**\n++     * Checks if respawn anchors work\n++     *\n++     * @return true if they work\n++     */\n++    boolean doesRespawnAnchorWork();\n++\n++    /**\n++     * Checks if this world supports raids\n++     *\n++     * @return true if supported\n++     */\n++    boolean hasRaids();\n++\n++    /**\n++     * Checks if this world has a fixed time\n++     *\n++     * @return true if fixed\n++     */\n++    boolean isFixedTime();\n++\n++    /**\n++     * Gets the collection of materials that burn\n++     * infinitely in this world\n++     *\n++     * @return the infinite burn materials", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzNTkwOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0ODoyN1rOHzNOGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0ODoyN1rOHzNOGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NjAyNA==", "bodyText": "Components", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523456024", "createdAt": "2020-11-14T19:48:27Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether\n++     *\n++     * @return true if shrunk\n++     */\n++    boolean isShrunk();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return true if it has access\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return true if it has a bedrock ceiling\n++     */\n++    boolean hasCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into zombified piglins\n++     * in this world\n++     *\n++     * @return true if piglins will NOT transform\n++     */\n++    boolean isPiglinSafe();\n++\n++    /**\n++     * Checks if beds work\n++     *\n++     * @return true if beds work\n++     */\n++    boolean doesBedWork();\n++\n++    /**\n++     * Checks if respawn anchors work\n++     *\n++     * @return true if they work\n++     */\n++    boolean doesRespawnAnchorWork();\n++\n++    /**\n++     * Checks if this world supports raids\n++     *\n++     * @return true if supported\n++     */\n++    boolean hasRaids();\n++\n++    /**\n++     * Checks if this world has a fixed time\n++     *\n++     * @return true if fixed\n++     */\n++    boolean isFixedTime();\n++\n++    /**\n++     * Gets the collection of materials that burn\n++     * infinitely in this world\n++     *\n++     * @return the infinite burn materials\n++     */\n++    @NotNull\n++    Collection<Material> getInfiniburn();\n++\n++    /**\n++     * Broadcast a message to all players\n++     * in this world\n++     *\n++     * @param message Message to broadcast\n++     */\n++    void broadcastMessage(@NotNull String message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzNTk2OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0218-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0ODozMlrOHzNOIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0ODozMlrOHzNOIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NjAzMw==", "bodyText": "Components", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523456033", "createdAt": "2020-11-14T19:48:32Z", "author": {"login": "Proximyst"}, "path": "Spigot-API-Patches/0218-More-World-API.patch", "diffHunk": "@@ -0,0 +1,149 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * Step defaults to 8\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * evaporates water\n++     * dries sponges\n++     * has lava spread faster and further\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural\n++     * If false, compasses will spin randomly in the world\n++     * if true, nether portals will spawn zombified piglins\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Checks if the world is shrunk\n++     * where 1 block is 8 blocks in the overworld\n++     * like the nether\n++     *\n++     * @return true if shrunk\n++     */\n++    boolean isShrunk();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return true if it has access\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return true if it has a bedrock ceiling\n++     */\n++    boolean hasCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into zombified piglins\n++     * in this world\n++     *\n++     * @return true if piglins will NOT transform\n++     */\n++    boolean isPiglinSafe();\n++\n++    /**\n++     * Checks if beds work\n++     *\n++     * @return true if beds work\n++     */\n++    boolean doesBedWork();\n++\n++    /**\n++     * Checks if respawn anchors work\n++     *\n++     * @return true if they work\n++     */\n++    boolean doesRespawnAnchorWork();\n++\n++    /**\n++     * Checks if this world supports raids\n++     *\n++     * @return true if supported\n++     */\n++    boolean hasRaids();\n++\n++    /**\n++     * Checks if this world has a fixed time\n++     *\n++     * @return true if fixed\n++     */\n++    boolean isFixedTime();\n++\n++    /**\n++     * Gets the collection of materials that burn\n++     * infinitely in this world\n++     *\n++     * @return the infinite burn materials\n++     */\n++    @NotNull\n++    Collection<Material> getInfiniburn();\n++\n++    /**\n++     * Broadcast a message to all players\n++     * in this world\n++     *\n++     * @param message Message to broadcast\n++     */\n++    void broadcastMessage(@NotNull String message);\n++\n++    /**\n++     * Broadcast a message to all players\n++     * with a permission in a world\n++     *\n++     * @param message Message to broadcast\n++     * @param permission Permission to check\n++     */\n++    void broadcastMessage(@NotNull String message, @NotNull String permission);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzNjE1OnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0542-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0ODo0NVrOHzNOOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0ODo0NVrOHzNOOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NjA1OA==", "bodyText": "OBFHELPER", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523456058", "createdAt": "2020-11-14T19:48:45Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0542-More-World-API.patch", "diffHunk": "@@ -0,0 +1,110 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:52:34 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java\n+index 3a740f5669876271a3f13c64e28eb6f2cb033b4c..cc1a5976b2c9de4caba8a17e8429ff39c2633ade 100644\n+--- a/src/main/java/net/minecraft/server/WorldServer.java\n++++ b/src/main/java/net/minecraft/server/WorldServer.java\n+@@ -1670,6 +1670,7 @@ public class WorldServer extends World implements GeneratorAccessSeed {\n+         return !this.worldDataServer.getGeneratorSettings().shouldGenerateMapFeatures() ? null : this.getChunkProvider().getChunkGenerator().findNearestMapFeature(this, structuregenerator, blockposition, i, flag); // CraftBukkit\n+     }\n+ \n++    public BlockPosition getNearestBiome(BiomeBase biomeBase, BlockPosition blockPosition, int radius, int step) { return this.a(biomeBase, blockPosition, radius, step); } // Paper - OBFHELPER\n+     @Nullable\n+     public BlockPosition a(BiomeBase biomebase, BlockPosition blockposition, int i, int j) {\n+         return this.getChunkProvider().getChunkGenerator().getWorldChunkManager().a(blockposition.getX(), blockposition.getY(), blockposition.getZ(), i, j, ImmutableList.of(biomebase), this.random, true);\n+diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java\n+index 65b36a17418ae64b6166704b3d0ecf97df1e9445..92cd420b1968b858d09e6711ae5598a1d8d867aa 100644\n+--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java\n++++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java\n+@@ -2493,6 +2493,87 @@ public class CraftWorld implements World {\n+         return (nearest == null) ? null : new Location(this, nearest.getX(), nearest.getY(), nearest.getZ());\n+     }\n+ \n++    // Paper start\n++    @Override\n++    public Location locateNearestBiome(Location origin, Biome biome, int radius) {\n++        return this.locateNearestBiome(origin, biome, radius, 8);\n++    }\n++\n++    @Override\n++    public Location locateNearestBiome(Location origin, Biome biome, int radius, int step) {\n++        BlockPosition originPos = new BlockPosition(origin.getX(), origin.getY(), origin.getZ());\n++        BlockPosition nearest = getHandle().getNearestBiome(CraftBlock.biomeToBiomeBase(biome), originPos, radius, step);\n++        return (nearest == null) ? null : new Location(this, nearest.getX(), nearest.getY(), nearest.getZ());\n++    }\n++\n++    @Override\n++    public boolean isUltrawarm() {\n++        return getHandle().getDimensionManager().isNether();\n++    }\n++\n++    @Override\n++    public boolean isNatural() {\n++        return getHandle().getDimensionManager().isNatural();\n++    }\n++\n++    @Override\n++    public boolean isShrunk() {\n++        return getHandle().getDimensionManager().h();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkzNjQwOnYy", "diffSide": "RIGHT", "path": "Spigot-Server-Patches/0542-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0OTowMFrOHzNOWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOTo0OTowMFrOHzNOWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NjA4OQ==", "bodyText": "OBFHELPER", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r523456089", "createdAt": "2020-11-14T19:49:00Z", "author": {"login": "Proximyst"}, "path": "Spigot-Server-Patches/0542-More-World-API.patch", "diffHunk": "@@ -0,0 +1,110 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:52:34 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java\n+index 3a740f5669876271a3f13c64e28eb6f2cb033b4c..cc1a5976b2c9de4caba8a17e8429ff39c2633ade 100644\n+--- a/src/main/java/net/minecraft/server/WorldServer.java\n++++ b/src/main/java/net/minecraft/server/WorldServer.java\n+@@ -1670,6 +1670,7 @@ public class WorldServer extends World implements GeneratorAccessSeed {\n+         return !this.worldDataServer.getGeneratorSettings().shouldGenerateMapFeatures() ? null : this.getChunkProvider().getChunkGenerator().findNearestMapFeature(this, structuregenerator, blockposition, i, flag); // CraftBukkit\n+     }\n+ \n++    public BlockPosition getNearestBiome(BiomeBase biomeBase, BlockPosition blockPosition, int radius, int step) { return this.a(biomeBase, blockPosition, radius, step); } // Paper - OBFHELPER\n+     @Nullable\n+     public BlockPosition a(BiomeBase biomebase, BlockPosition blockposition, int i, int j) {\n+         return this.getChunkProvider().getChunkGenerator().getWorldChunkManager().a(blockposition.getX(), blockposition.getY(), blockposition.getZ(), i, j, ImmutableList.of(biomebase), this.random, true);\n+diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java\n+index 65b36a17418ae64b6166704b3d0ecf97df1e9445..92cd420b1968b858d09e6711ae5598a1d8d867aa 100644\n+--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java\n++++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java\n+@@ -2493,6 +2493,87 @@ public class CraftWorld implements World {\n+         return (nearest == null) ? null : new Location(this, nearest.getX(), nearest.getY(), nearest.getZ());\n+     }\n+ \n++    // Paper start\n++    @Override\n++    public Location locateNearestBiome(Location origin, Biome biome, int radius) {\n++        return this.locateNearestBiome(origin, biome, radius, 8);\n++    }\n++\n++    @Override\n++    public Location locateNearestBiome(Location origin, Biome biome, int radius, int step) {\n++        BlockPosition originPos = new BlockPosition(origin.getX(), origin.getY(), origin.getZ());\n++        BlockPosition nearest = getHandle().getNearestBiome(CraftBlock.biomeToBiomeBase(biome), originPos, radius, step);\n++        return (nearest == null) ? null : new Location(this, nearest.getX(), nearest.getY(), nearest.getZ());\n++    }\n++\n++    @Override\n++    public boolean isUltrawarm() {\n++        return getHandle().getDimensionManager().isNether();\n++    }\n++\n++    @Override\n++    public boolean isNatural() {\n++        return getHandle().getDimensionManager().isNatural();\n++    }\n++\n++    @Override\n++    public boolean isShrunk() {\n++        return getHandle().getDimensionManager().h();\n++    }\n++\n++    @Override\n++    public boolean hasSkylight() {\n++        return getHandle().getDimensionManager().hasSkyLight();\n++    }\n++\n++    @Override\n++    public boolean hasCeiling() {\n++        return getHandle().getDimensionManager().hasCeiling();\n++    }\n++\n++    @Override\n++    public boolean isPiglinSafe() {\n++        return getHandle().getDimensionManager().isPiglinSafe();\n++    }\n++\n++    @Override\n++    public boolean doesBedWork() {\n++        return getHandle().getDimensionManager().isBedWorks();\n++    }\n++\n++    @Override\n++    public boolean doesRespawnAnchorWork() {\n++        return getHandle().getDimensionManager().isRespawnAnchorWorks();\n++    }\n++\n++    @Override\n++    public boolean hasRaids() {\n++        return getHandle().getDimensionManager().hasRaids();\n++    }\n++\n++    @Override\n++    public boolean isFixedTime() {\n++        return getHandle().getDimensionManager().isFixedTime();\n++    }\n++\n++    @Override\n++    public Collection<org.bukkit.Material> getInfiniburn() {\n++        return com.google.common.collect.Sets.newHashSet(com.google.common.collect.Iterators.transform(getHandle().getDimensionManager().q().getTagged().iterator(), CraftMagicNumbers::getMaterial));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63ff3ec6026976074df53c7179a1ba3e8b3af59a"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTA5NTc3OnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0236-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMTo1NzoyNlrOH9Xlcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMTo1NzoyNlrOH9Xlcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDExMTYwMw==", "bodyText": "Remove this method from this pull request - tracking in #4830.", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r534111603", "createdAt": "2020-12-02T11:57:26Z", "author": {"login": "kashike"}, "path": "Spigot-API-Patches/0236-More-World-API.patch", "diffHunk": "@@ -0,0 +1,156 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index e827e1a6f5c0f8410ed32dda8f17aa769b469999..039115f57fe9f7345dfefe705c14b06e2bda6e4e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -2,6 +2,7 @@ package org.bukkit;\n+ \n+ import java.io.File;\n+ \n++import net.md_5.bungee.api.chat.BaseComponent;\n+ import org.bukkit.event.entity.CreatureSpawnEvent;\n+ import org.bukkit.generator.ChunkGenerator;\n+ \n+@@ -3379,6 +3380,137 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search.\n++     * Step defaults to {@code 8}.\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * <ul>\n++     *     <li>evaporates water</li>\n++     *     <li>dries sponges</li>\n++     *     <li>has lava spread faster and further</li>\n++     * </ul>\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural.\n++     * <p>\n++     *     If {@code false}, compasses will spin randomly in the world.\n++     *      * if {@code true}, nether portals will spawn zombified piglins.\n++     * </p>\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Gets the coordinate scaling of this world.\n++     *\n++     * @return the coordinate scale\n++     */\n++    double getCoordinateScale();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return whether there is skylight\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return whether the world has a bedrock ceiling\n++     */\n++    boolean hasBedrockCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into Zombified Piglins in this world\n++     *\n++     * @return whether Piglins will <i>not</i> transform\n++     */\n++    boolean isPiglinSafe();\n++\n++    /**\n++     * Checks if beds work\n++     *\n++     * @return whether beds work\n++     */\n++    boolean doesBedWork();\n++\n++    /**\n++     * Checks if respawn anchors work\n++     *\n++     * @return whether respawn anchors work\n++     */\n++    boolean doesRespawnAnchorWork();\n++\n++    /**\n++     * Checks if this world supports raids\n++     *\n++     * @return whether this world supports raids\n++     */\n++    boolean hasRaids();\n++\n++    /**\n++     * Checks if this world has a fixed time\n++     *\n++     * @return whether this world has fixed time\n++     */\n++    boolean isFixedTime();\n++\n++    /**\n++     * Gets the collection of materials that burn infinitely in this world.\n++     *\n++     * @return the materials that will forever stay lit by fire\n++     */\n++    @NotNull\n++    Collection<Material> getInfiniburn();\n++\n++    /**\n++     * Broadcast a message to all players\n++     * in this world\n++     *\n++     * @param message Message to broadcast\n++     */\n++    void broadcastMessage(@NotNull BaseComponent[] message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76d8f9cbafed4b8ccbc55891f29906b3085fa4d1"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTA5NjAzOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0236-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMTo1NzozMVrOH9Xlng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNToxNTozMFrOH9fz_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDExMTY0Ng==", "bodyText": "Remove this method from this pull request - tracking in #4830.", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r534111646", "createdAt": "2020-12-02T11:57:31Z", "author": {"login": "kashike"}, "path": "Spigot-API-Patches/0236-More-World-API.patch", "diffHunk": "@@ -0,0 +1,156 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index e827e1a6f5c0f8410ed32dda8f17aa769b469999..039115f57fe9f7345dfefe705c14b06e2bda6e4e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -2,6 +2,7 @@ package org.bukkit;\n+ \n+ import java.io.File;\n+ \n++import net.md_5.bungee.api.chat.BaseComponent;\n+ import org.bukkit.event.entity.CreatureSpawnEvent;\n+ import org.bukkit.generator.ChunkGenerator;\n+ \n+@@ -3379,6 +3380,137 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search.\n++     * Step defaults to {@code 8}.\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * <ul>\n++     *     <li>evaporates water</li>\n++     *     <li>dries sponges</li>\n++     *     <li>has lava spread faster and further</li>\n++     * </ul>\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural.\n++     * <p>\n++     *     If {@code false}, compasses will spin randomly in the world.\n++     *      * if {@code true}, nether portals will spawn zombified piglins.\n++     * </p>\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Gets the coordinate scaling of this world.\n++     *\n++     * @return the coordinate scale\n++     */\n++    double getCoordinateScale();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return whether there is skylight\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return whether the world has a bedrock ceiling\n++     */\n++    boolean hasBedrockCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into Zombified Piglins in this world\n++     *\n++     * @return whether Piglins will <i>not</i> transform\n++     */\n++    boolean isPiglinSafe();\n++\n++    /**\n++     * Checks if beds work\n++     *\n++     * @return whether beds work\n++     */\n++    boolean doesBedWork();\n++\n++    /**\n++     * Checks if respawn anchors work\n++     *\n++     * @return whether respawn anchors work\n++     */\n++    boolean doesRespawnAnchorWork();\n++\n++    /**\n++     * Checks if this world supports raids\n++     *\n++     * @return whether this world supports raids\n++     */\n++    boolean hasRaids();\n++\n++    /**\n++     * Checks if this world has a fixed time\n++     *\n++     * @return whether this world has fixed time\n++     */\n++    boolean isFixedTime();\n++\n++    /**\n++     * Gets the collection of materials that burn infinitely in this world.\n++     *\n++     * @return the materials that will forever stay lit by fire\n++     */\n++    @NotNull\n++    Collection<Material> getInfiniburn();\n++\n++    /**\n++     * Broadcast a message to all players\n++     * in this world\n++     *\n++     * @param message Message to broadcast\n++     */\n++    void broadcastMessage(@NotNull BaseComponent[] message);\n++\n++    /**\n++     * Broadcast a message to all players\n++     * with a permission in a world\n++     *\n++     * @param message Message to broadcast\n++     * @param permission Permission to check\n++     */\n++    void broadcastMessage(@NotNull BaseComponent[] message, @NotNull String permission);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76d8f9cbafed4b8ccbc55891f29906b3085fa4d1"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI0NjM5OQ==", "bodyText": "Done", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r534246399", "createdAt": "2020-12-02T15:15:30Z", "author": {"login": "Machine-Maker"}, "path": "Spigot-API-Patches/0236-More-World-API.patch", "diffHunk": "@@ -0,0 +1,156 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index e827e1a6f5c0f8410ed32dda8f17aa769b469999..039115f57fe9f7345dfefe705c14b06e2bda6e4e 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -2,6 +2,7 @@ package org.bukkit;\n+ \n+ import java.io.File;\n+ \n++import net.md_5.bungee.api.chat.BaseComponent;\n+ import org.bukkit.event.entity.CreatureSpawnEvent;\n+ import org.bukkit.generator.ChunkGenerator;\n+ \n+@@ -3379,6 +3380,137 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search.\n++     * Step defaults to {@code 8}.\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * <ul>\n++     *     <li>evaporates water</li>\n++     *     <li>dries sponges</li>\n++     *     <li>has lava spread faster and further</li>\n++     * </ul>\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural.\n++     * <p>\n++     *     If {@code false}, compasses will spin randomly in the world.\n++     *      * if {@code true}, nether portals will spawn zombified piglins.\n++     * </p>\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Gets the coordinate scaling of this world.\n++     *\n++     * @return the coordinate scale\n++     */\n++    double getCoordinateScale();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return whether there is skylight\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return whether the world has a bedrock ceiling\n++     */\n++    boolean hasBedrockCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into Zombified Piglins in this world\n++     *\n++     * @return whether Piglins will <i>not</i> transform\n++     */\n++    boolean isPiglinSafe();\n++\n++    /**\n++     * Checks if beds work\n++     *\n++     * @return whether beds work\n++     */\n++    boolean doesBedWork();\n++\n++    /**\n++     * Checks if respawn anchors work\n++     *\n++     * @return whether respawn anchors work\n++     */\n++    boolean doesRespawnAnchorWork();\n++\n++    /**\n++     * Checks if this world supports raids\n++     *\n++     * @return whether this world supports raids\n++     */\n++    boolean hasRaids();\n++\n++    /**\n++     * Checks if this world has a fixed time\n++     *\n++     * @return whether this world has fixed time\n++     */\n++    boolean isFixedTime();\n++\n++    /**\n++     * Gets the collection of materials that burn infinitely in this world.\n++     *\n++     * @return the materials that will forever stay lit by fire\n++     */\n++    @NotNull\n++    Collection<Material> getInfiniburn();\n++\n++    /**\n++     * Broadcast a message to all players\n++     * in this world\n++     *\n++     * @param message Message to broadcast\n++     */\n++    void broadcastMessage(@NotNull BaseComponent[] message);\n++\n++    /**\n++     * Broadcast a message to all players\n++     * with a permission in a world\n++     *\n++     * @param message Message to broadcast\n++     * @param permission Permission to check\n++     */\n++    void broadcastMessage(@NotNull BaseComponent[] message, @NotNull String permission);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDExMTY0Ng=="}, "originalCommit": {"oid": "76d8f9cbafed4b8ccbc55891f29906b3085fa4d1"}, "originalPosition": 151}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2Nzg1OTkyOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0237-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxMToxMToxOVrOH_0w9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDo0MjoyN1rOH_7cxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjY4NjgzOQ==", "bodyText": "These two methods will end up deprecated as part of #4842 - is it worth even adding them now?", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r536686839", "createdAt": "2020-12-05T11:11:19Z", "author": {"login": "kashike"}, "path": "Spigot-API-Patches/0237-More-World-API.patch", "diffHunk": "@@ -0,0 +1,156 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index e6d2abf284c103a8bcddd8b4f9cb34d86a4f2fa6..b7556c84a95500ec49661eddbbdcbc4c6257b44d 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -2,6 +2,7 @@ package org.bukkit;\n+ \n+ import java.io.File;\n+ \n++import net.md_5.bungee.api.chat.BaseComponent;\n+ import org.bukkit.event.entity.CreatureSpawnEvent;\n+ import org.bukkit.generator.ChunkGenerator;\n+ \n+@@ -3431,6 +3432,137 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search.\n++     * Step defaults to {@code 8}.\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * <ul>\n++     *     <li>evaporates water</li>\n++     *     <li>dries sponges</li>\n++     *     <li>has lava spread faster and further</li>\n++     * </ul>\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural.\n++     * <p>\n++     *     If {@code false}, compasses will spin randomly in the world.\n++     *      * if {@code true}, nether portals will spawn zombified piglins.\n++     * </p>\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Gets the coordinate scaling of this world.\n++     *\n++     * @return the coordinate scale\n++     */\n++    double getCoordinateScale();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return whether there is skylight\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return whether the world has a bedrock ceiling\n++     */\n++    boolean hasBedrockCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into Zombified Piglins in this world\n++     *\n++     * @return whether Piglins will <i>not</i> transform\n++     */\n++    boolean isPiglinSafe();\n++\n++    /**\n++     * Checks if beds work\n++     *\n++     * @return whether beds work\n++     */\n++    boolean doesBedWork();\n++\n++    /**\n++     * Checks if respawn anchors work\n++     *\n++     * @return whether respawn anchors work\n++     */\n++    boolean doesRespawnAnchorWork();\n++\n++    /**\n++     * Checks if this world supports raids\n++     *\n++     * @return whether this world supports raids\n++     */\n++    boolean hasRaids();\n++\n++    /**\n++     * Checks if this world has a fixed time\n++     *\n++     * @return whether this world has fixed time\n++     */\n++    boolean isFixedTime();\n++\n++    /**\n++     * Gets the collection of materials that burn infinitely in this world.\n++     *\n++     * @return the materials that will forever stay lit by fire\n++     */\n++    @NotNull\n++    Collection<Material> getInfiniburn();\n++\n++    /**\n++     * Broadcast a message to all players\n++     * in this world\n++     *\n++     * @param message Message to broadcast\n++     */\n++    void broadcastMessage(@NotNull String message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "030246767e2c407c8bd061af9b6db4564b1761ce"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc5NjM1Nw==", "bodyText": "Yeah, you're right. I'll just leave a note to add the Component method after adventure get merged", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r536796357", "createdAt": "2020-12-05T14:42:27Z", "author": {"login": "Machine-Maker"}, "path": "Spigot-API-Patches/0237-More-World-API.patch", "diffHunk": "@@ -0,0 +1,156 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More-World-API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index e6d2abf284c103a8bcddd8b4f9cb34d86a4f2fa6..b7556c84a95500ec49661eddbbdcbc4c6257b44d 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -2,6 +2,7 @@ package org.bukkit;\n+ \n+ import java.io.File;\n+ \n++import net.md_5.bungee.api.chat.BaseComponent;\n+ import org.bukkit.event.entity.CreatureSpawnEvent;\n+ import org.bukkit.generator.ChunkGenerator;\n+ \n+@@ -3431,6 +3432,137 @@ public interface World extends PluginMessageRecipient, Metadatable {\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search.\n++     * Step defaults to {@code 8}.\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 -> every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * <ul>\n++     *     <li>evaporates water</li>\n++     *     <li>dries sponges</li>\n++     *     <li>has lava spread faster and further</li>\n++     * </ul>\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural.\n++     * <p>\n++     *     If {@code false}, compasses will spin randomly in the world.\n++     *      * if {@code true}, nether portals will spawn zombified piglins.\n++     * </p>\n++     *\n++     * @return true or false\n++     */\n++    boolean isNatural();\n++\n++    /**\n++     * Gets the coordinate scaling of this world.\n++     *\n++     * @return the coordinate scale\n++     */\n++    double getCoordinateScale();\n++\n++    /**\n++     * Checks if the world has skylight access\n++     *\n++     * @return whether there is skylight\n++     */\n++    boolean hasSkylight();\n++\n++    /**\n++     * Checks if the world has a bedrock ceiling\n++     *\n++     * @return whether the world has a bedrock ceiling\n++     */\n++    boolean hasBedrockCeiling();\n++\n++    /**\n++     * Checks if piglins will turn into Zombified Piglins in this world\n++     *\n++     * @return whether Piglins will <i>not</i> transform\n++     */\n++    boolean isPiglinSafe();\n++\n++    /**\n++     * Checks if beds work\n++     *\n++     * @return whether beds work\n++     */\n++    boolean doesBedWork();\n++\n++    /**\n++     * Checks if respawn anchors work\n++     *\n++     * @return whether respawn anchors work\n++     */\n++    boolean doesRespawnAnchorWork();\n++\n++    /**\n++     * Checks if this world supports raids\n++     *\n++     * @return whether this world supports raids\n++     */\n++    boolean hasRaids();\n++\n++    /**\n++     * Checks if this world has a fixed time\n++     *\n++     * @return whether this world has fixed time\n++     */\n++    boolean isFixedTime();\n++\n++    /**\n++     * Gets the collection of materials that burn infinitely in this world.\n++     *\n++     * @return the materials that will forever stay lit by fire\n++     */\n++    @NotNull\n++    Collection<Material> getInfiniburn();\n++\n++    /**\n++     * Broadcast a message to all players\n++     * in this world\n++     *\n++     * @param message Message to broadcast\n++     */\n++    void broadcastMessage(@NotNull String message);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjY4NjgzOQ=="}, "originalCommit": {"oid": "030246767e2c407c8bd061af9b6db4564b1761ce"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzkyMDU3OTEzOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0283-More-World-API.patch", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0yM1QxOTozNzoyN1rOJOwi5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0yM1QxOTozNzoyN1rOJOwi5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTQ1NTIwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            +     *      * if {@code true}, nether portals will spawn zombified piglins.\n          \n          \n            \n            +     *      if {@code true}, nether portals will spawn zombified piglins.", "url": "https://github.com/PaperMC/Paper/pull/3850#discussion_r619455206", "createdAt": "2021-04-23T19:37:27Z", "author": {"login": "MiniDigger"}, "path": "Spigot-API-Patches/0283-More-World-API.patch", "diffHunk": "@@ -0,0 +1,131 @@\n+From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001\n+From: Jake Potrebic <jake.m.potrebic@gmail.com>\n+Date: Tue, 7 Jul 2020 10:53:22 -0700\n+Subject: [PATCH] More World API\n+\n+\n+diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java\n+index 064497506e6a5ab89ca43b99968ca79d51d67c46..2d175b3b25dfd7a9d13e0b355ac8175163f3c4ef 100644\n+--- a/src/main/java/org/bukkit/World.java\n++++ b/src/main/java/org/bukkit/World.java\n+@@ -3473,6 +3473,120 @@ public interface World extends PluginMessageRecipient, Metadatable, net.kyori.ad\n+     @Nullable\n+     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);\n+ \n++    // Paper start\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search.\n++     * Step defaults to {@code 8}.\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);\n++\n++    /**\n++     * Locates the nearest biome based on an origin, biome type, and radius to search\n++     * and step\n++     *\n++     * @param origin Origin location\n++     * @param biome Biome to find\n++     * @param radius radius to search\n++     * @param step Search step 1 would mean checking every block, 8 would be every 8th block\n++     * @return Location of biome or null if not found in specified radius\n++     */\n++    @Nullable\n++    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);\n++\n++    /**\n++     * Checks if the world:\n++     * <ul>\n++     *     <li>evaporates water</li>\n++     *     <li>dries sponges</li>\n++     *     <li>has lava spread faster and further</li>\n++     * </ul>\n++     *\n++     * @return true if ultrawarm, false if not\n++     */\n++    boolean isUltrawarm();\n++\n++    /**\n++     * Checks if the world is natural.\n++     * <p>\n++     *     If {@code false}, compasses will spin randomly in the world.\n++     *      * if {@code true}, nether portals will spawn zombified piglins.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e94af71d40c1919313ef9537c176e5445fecda8"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1962, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}