{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NzQ2NDMz", "number": 3193, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQyMzowMTo0MlrODze64A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODo0NDoyNlrOD0YYaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MzEwNTYwOnYy", "diffSide": "RIGHT", "path": "Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommands.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQyMzowMTo0MlrOGH-H6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQyMzowNDowOFrOGH-Jaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAxMTA1MQ==", "bodyText": "Wasn't this supposed to be called AsyncPlayerSendCommandsEvent?", "url": "https://github.com/PaperMC/Paper/pull/3193#discussion_r411011051", "createdAt": "2020-04-19T23:01:42Z", "author": {"login": "JavierKasunic"}, "path": "Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommands.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.destroystokyo.paper.event.brigadier;\n+\n+import com.mojang.brigadier.tree.RootCommandNode;\n+import org.bukkit.Bukkit;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Fired any time a Brigadier RootCommandNode is generated for a player to inform the client of commands.\n+ * You may manipulate this CommandNode to change what the client sees.\n+ *\n+ * This event may fire on login, world change, and permission rebuilds, by plugin request, and potentially future means.\n+ *\n+ * WARNING: This event will potentially (and most likely) fire twice! Once for Async, and once again for Sync.\n+ * It is important that you check event.isAsync() and event.hasFiredAsync() to ensure you only act once.\n+ * If for some reason we are unable to send this asynchronously in the future, only the sync method will fire.\n+ *\n+ * Your logic should look like this:\n+ * if (event.isAsync() || (!event.isAsync() && !event.hasFiredAsync())) { do stuff }\n+ *\n+ * If your logic is not safe to run asynchronously, only react to the synchronous version.\n+ */\n+public class AsyncPlayerSendCommands extends PlayerEvent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96f24f8716ee709a891c4e7ab22a4126dc9e9387"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAxMTQzNQ==", "bodyText": "good catch", "url": "https://github.com/PaperMC/Paper/pull/3193#discussion_r411011435", "createdAt": "2020-04-19T23:04:08Z", "author": {"login": "aikar"}, "path": "Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommands.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.destroystokyo.paper.event.brigadier;\n+\n+import com.mojang.brigadier.tree.RootCommandNode;\n+import org.bukkit.Bukkit;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Fired any time a Brigadier RootCommandNode is generated for a player to inform the client of commands.\n+ * You may manipulate this CommandNode to change what the client sees.\n+ *\n+ * This event may fire on login, world change, and permission rebuilds, by plugin request, and potentially future means.\n+ *\n+ * WARNING: This event will potentially (and most likely) fire twice! Once for Async, and once again for Sync.\n+ * It is important that you check event.isAsync() and event.hasFiredAsync() to ensure you only act once.\n+ * If for some reason we are unable to send this asynchronously in the future, only the sync method will fire.\n+ *\n+ * Your logic should look like this:\n+ * if (event.isAsync() || (!event.isAsync() && !event.hasFiredAsync())) { do stuff }\n+ *\n+ * If your logic is not safe to run asynchronously, only react to the synchronous version.\n+ */\n+public class AsyncPlayerSendCommands extends PlayerEvent {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAxMTA1MQ=="}, "originalCommit": {"oid": "96f24f8716ee709a891c4e7ab22a4126dc9e9387"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTg3NzgyOnYy", "diffSide": "RIGHT", "path": "Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommandsEvent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjoyODo1OVrOGJNNEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjoyODo1OVrOGJNNEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMwNjcwNQ==", "bodyText": "I know this is pseudo code, but for easy copy and pasting, this and the reference in line 20 should prolly say isAsynchronous since thats the proper name of the method.\nIntelliJ also reminded me, that this can be simplified to event.isAsynchronous() || !event.hasFiredAsync()", "url": "https://github.com/PaperMC/Paper/pull/3193#discussion_r412306705", "createdAt": "2020-04-21T16:28:59Z", "author": {"login": "MiniDigger"}, "path": "Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommandsEvent.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.destroystokyo.paper.event.brigadier;\n+\n+import com.mojang.brigadier.tree.RootCommandNode;\n+import org.bukkit.Bukkit;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Fired any time a Brigadier RootCommandNode is generated for a player to inform the client of commands.\n+ * You may manipulate this CommandNode to change what the client sees.\n+ *\n+ * This event may fire on login, world change, and permission rebuilds, by plugin request, and potentially future means.\n+ *\n+ * This event will fire before {@link org.bukkit.event.player.PlayerCommandSendEvent}, so no filtering has been done by\n+ * other plugins yet.\n+ *\n+ * WARNING: This event will potentially (and most likely) fire twice! Once for Async, and once again for Sync.\n+ * It is important that you check event.isAsync() and event.hasFiredAsync() to ensure you only act once.\n+ * If for some reason we are unable to send this asynchronously in the future, only the sync method will fire.\n+ *\n+ * Your logic should look like this:\n+ * if (event.isAsync() || (!event.isAsync() && !event.hasFiredAsync())) { do stuff }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ed04a5e6c619935fac534f0f7a2a0bb9fe59a69"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MjUyMDExOnYy", "diffSide": "RIGHT", "path": "Spigot-API-Patches/0001-POM-changes.patch", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODo0NDoyNlrOGJTGvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxODo1OToxM1rOGJTtMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQwMzM4OA==", "bodyText": "I do not think this change is in the correct patch?", "url": "https://github.com/PaperMC/Paper/pull/3193#discussion_r412403388", "createdAt": "2020-04-21T18:44:26Z", "author": {"login": "chickeneer"}, "path": "Spigot-API-Patches/0001-POM-changes.patch", "diffHunk": "@@ -110,6 +110,19 @@ index 8964b9e33..ce09baeab 100644\n                      <!-- when downloading via Maven we can pull depends individually -->\n                      <shadedArtifactAttached>true</shadedArtifactAttached>\n                  </configuration>\n+diff --git a/src/main/java/org/bukkit/event/player/PlayerEvent.java b/src/main/java/org/bukkit/event/player/PlayerEvent.java\n+index 793b661b..b7c8f2c3 100644\n+--- a/src/main/java/org/bukkit/event/player/PlayerEvent.java\n++++ b/src/main/java/org/bukkit/event/player/PlayerEvent.java\n+@@ -14,7 +14,7 @@ public abstract class PlayerEvent extends Event {\n+         player = who;\n+     }\n+ \n+-    PlayerEvent(@NotNull final Player who, boolean async) {\n++    public PlayerEvent(@NotNull final Player who, boolean async) { // Paper - wtf?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ed04a5e6c619935fac534f0f7a2a0bb9fe59a69"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQxMjAxNg==", "bodyText": "I didn't want to make a new patch for it lol", "url": "https://github.com/PaperMC/Paper/pull/3193#discussion_r412412016", "createdAt": "2020-04-21T18:57:25Z", "author": {"login": "aikar"}, "path": "Spigot-API-Patches/0001-POM-changes.patch", "diffHunk": "@@ -110,6 +110,19 @@ index 8964b9e33..ce09baeab 100644\n                      <!-- when downloading via Maven we can pull depends individually -->\n                      <shadedArtifactAttached>true</shadedArtifactAttached>\n                  </configuration>\n+diff --git a/src/main/java/org/bukkit/event/player/PlayerEvent.java b/src/main/java/org/bukkit/event/player/PlayerEvent.java\n+index 793b661b..b7c8f2c3 100644\n+--- a/src/main/java/org/bukkit/event/player/PlayerEvent.java\n++++ b/src/main/java/org/bukkit/event/player/PlayerEvent.java\n+@@ -14,7 +14,7 @@ public abstract class PlayerEvent extends Event {\n+         player = who;\n+     }\n+ \n+-    PlayerEvent(@NotNull final Player who, boolean async) {\n++    public PlayerEvent(@NotNull final Player who, boolean async) { // Paper - wtf?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQwMzM4OA=="}, "originalCommit": {"oid": "7ed04a5e6c619935fac534f0f7a2a0bb9fe59a69"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQxMzIzMw==", "bodyText": "though i was thinking we already had other crap in pom patch, but thats on -Server", "url": "https://github.com/PaperMC/Paper/pull/3193#discussion_r412413233", "createdAt": "2020-04-21T18:59:13Z", "author": {"login": "aikar"}, "path": "Spigot-API-Patches/0001-POM-changes.patch", "diffHunk": "@@ -110,6 +110,19 @@ index 8964b9e33..ce09baeab 100644\n                      <!-- when downloading via Maven we can pull depends individually -->\n                      <shadedArtifactAttached>true</shadedArtifactAttached>\n                  </configuration>\n+diff --git a/src/main/java/org/bukkit/event/player/PlayerEvent.java b/src/main/java/org/bukkit/event/player/PlayerEvent.java\n+index 793b661b..b7c8f2c3 100644\n+--- a/src/main/java/org/bukkit/event/player/PlayerEvent.java\n++++ b/src/main/java/org/bukkit/event/player/PlayerEvent.java\n+@@ -14,7 +14,7 @@ public abstract class PlayerEvent extends Event {\n+         player = who;\n+     }\n+ \n+-    PlayerEvent(@NotNull final Player who, boolean async) {\n++    public PlayerEvent(@NotNull final Player who, boolean async) { // Paper - wtf?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQwMzM4OA=="}, "originalCommit": {"oid": "7ed04a5e6c619935fac534f0f7a2a0bb9fe59a69"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1647, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}