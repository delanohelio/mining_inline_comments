{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNzY1NTEx", "number": 5972, "title": "fix(clients/go): print activate jobs ouput as valid json", "bodyText": "Description\nIn previous version the output of zbctl activate job was not really json compilant. Furthermore there was additional output to make it human readable, which is not necessary and not consistent with the other commands we have. The additional output makes it also harder to process it further with other commands\nPrevious output:\n[zell ~/ ns:testbench]$ zbctl --insecure activate jobs --maxJobsToActivate 2 benchmark-task\n2020/12/04 21:15:23 Activated 2 for type benchmark-task\n2020/12/04 21:15:23 Job 1 / 2\n{\n  \"key\": 2251799813685257,\n  \"type\": \"benchmark-task\",\n  \"workflowInstanceKey\": 2251799813685252,\n  \"bpmnProcessId\": \"benchmark\",\n  \"workflowDefinitionVersion\": 1,\n  \"workflowKey\": 2251799813685250,\n  \"elementId\": \"task\",\n  \"elementInstanceKey\": 2251799813685256,\n  \"customHeaders\": \"{}\",\n  \"worker\": \"zbctl\",\n  \"retries\": 3,\n  \"deadline\": 1607113223419,\n  \"variables\": \"{}\"\n}\n2020/12/04 21:15:23 Job 2 / 2\n{\n  \"key\": 2251799813685263,\n  \"type\": \"benchmark-task\",\n  \"workflowInstanceKey\": 2251799813685258,\n  \"bpmnProcessId\": \"benchmark\",\n  \"workflowDefinitionVersion\": 1,\n  \"workflowKey\": 2251799813685250,\n  \"elementId\": \"task\",\n  \"elementInstanceKey\": 2251799813685262,\n  \"customHeaders\": \"{}\",\n  \"worker\": \"zbctl\",\n  \"retries\": 3,\n  \"deadline\": 1607113223419,\n  \"variables\": \"{}\"\n}\nNew version:\n[zell dist/ ns:testbench]$ ./zbctl --insecure activate jobs --maxJobsToActivate 2 benchmark-task\n[\n  {\n    \"key\": 2251799813685270,\n    \"type\": \"benchmark-task\",\n    \"workflowInstanceKey\": 2251799813685265,\n    \"bpmnProcessId\": \"benchmark\",\n    \"workflowDefinitionVersion\": 1,\n    \"workflowKey\": 2251799813685250,\n    \"elementId\": \"task\",\n    \"elementInstanceKey\": 2251799813685269,\n    \"customHeaders\": \"{}\",\n    \"worker\": \"zbctl\",\n    \"retries\": 3,\n    \"deadline\": 1607113327063,\n    \"variables\": \"{}\"\n  },\n  {\n    \"key\": 2251799813685276,\n    \"type\": \"benchmark-task\",\n    \"workflowInstanceKey\": 2251799813685271,\n    \"bpmnProcessId\": \"benchmark\",\n    \"workflowDefinitionVersion\": 1,\n    \"workflowKey\": 2251799813685250,\n    \"elementId\": \"task\",\n    \"elementInstanceKey\": 2251799813685275,\n    \"customHeaders\": \"{}\",\n    \"worker\": \"zbctl\",\n    \"retries\": 3,\n    \"deadline\": 1607113327063,\n    \"variables\": \"{}\"\n  }\n]\n\nWhat I did:\n\nthe result of the command is directly serialized as json\nif the jobs result is empty then an empty json array is printed - the json marshall would return an empty string, which we dont want\nthe additional log outputs are removed\ntwo new tests are added for empty response and multiple job activation\n\nRelated issues\n\ncloses #5888\nDefinition of Done\nNot all items need to be done depending on the issue and the pull request.\nCode changes:\n\n The changes are backwards compatibility with previous versions\n If it fixes a bug then PRs are created to backport the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. backport stable/0.25) to the PR, in case that fails you need to create backports manually.\n\nTesting:\n\n There are unit/integration tests that verify all acceptance criterias of the issue\n New tests are written to ensure backwards compatibility with further versions\n The behavior is tested manually\n The impact of the changes is verified by a benchmark\n\nDocumentation:\n\n The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\n New content is added to the release announcement", "createdAt": "2020-12-04T20:19:41Z", "url": "https://github.com/camunda-cloud/zeebe/pull/5972", "merged": true, "mergeCommit": {"oid": "cfc21501d04cdc5b798a01803fc8e57f4c97ca8d"}, "closed": true, "closedAt": "2020-12-14T13:26:35Z", "author": {"login": "Zelldon"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdi9538gBqjQwNzQzODM4MDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmFWhcgBqjQxMDkwOTAwMTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "04a4eaa0329c4f95ab6935fcd2096eb4dac79925", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/04a4eaa0329c4f95ab6935fcd2096eb4dac79925", "committedDate": "2020-12-04T20:02:41Z", "message": "fix(clients/go): print activate jobs ouput as valid json"}, "afterCommit": {"oid": "d525cc42aa36687717181071d5372e40efa3fdf2", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/d525cc42aa36687717181071d5372e40efa3fdf2", "committedDate": "2020-12-04T20:37:52Z", "message": "fix(clients/go): print activate jobs ouput as valid json"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1OTA1OTk4", "url": "https://github.com/camunda-cloud/zeebe/pull/5972#pullrequestreview-545905998", "createdAt": "2020-12-07T08:06:28Z", "commit": {"oid": "d525cc42aa36687717181071d5372e40efa3fdf2"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwODowNjoyOFrOIAaVxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwODowODo0NlrOIAabAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMwMjQ2OQ==", "bodyText": "This isn't obvious to me, can you elaborate? By deploying this means we spend more time in setup, so we don't have to wait for the jobs to be created?", "url": "https://github.com/camunda-cloud/zeebe/pull/5972#discussion_r537302469", "createdAt": "2020-12-07T08:06:28Z", "author": {"login": "npepinpe"}, "path": "clients/go/cmd/zbctl/main_test.go", "diffHunk": "@@ -95,10 +95,22 @@ var tests = []struct {\n \t\tgoldenFile: \"testdata/create_worker.golden\",\n \t},\n \t{\n-\t\tname:       \"activate job\",\n+\t\tname:       \"empty activate job\",\n+\t\tcmd:        \"--insecure activate jobs jobType --maxJobsToActivate 0\",\n+\t\tgoldenFile: \"testdata/empty_activate_job.golden\",\n+\t},\n+\t{\n+\t\tname:       \"single activate job\",\n \t\tsetupCmds:  []string{\"--insecure deploy testdata/job_model.bpmn\", \"--insecure create instance jobProcess\"},\n-\t\tcmd:        \"--insecure activate jobs jobType\",\n-\t\tgoldenFile: \"testdata/activate_job.golden\",\n+\t\tcmd:        \"--insecure activate jobs jobType --maxJobsToActivate 1\",\n+\t\tgoldenFile: \"testdata/single_activate_job.golden\",\n+\t},\n+\t{\n+\t\tname: \"double activate job\",\n+\t\t// we deploy on the end again to spent more time in setup phase to avoid a race condition, that we can activate more jobs then one", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d525cc42aa36687717181071d5372e40efa3fdf2"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMwMjc2NA==", "bodyText": "hehe, welcome to the world of go, where all variables are a single letter \ud83d\ude02", "url": "https://github.com/camunda-cloud/zeebe/pull/5972#discussion_r537302764", "createdAt": "2020-12-07T08:06:58Z", "author": {"login": "npepinpe"}, "path": "clients/go/cmd/zbctl/main_test.go", "diffHunk": "@@ -118,16 +130,16 @@ func TestZbctlWithInsecureGateway(t *testing.T) {\n \t\t})\n }\n \n-func (s *integrationTestSuite) TestCommonCommands() {\n+func (suite *integrationTestSuite) TestCommonCommands() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d525cc42aa36687717181071d5372e40efa3fdf2"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMwMzgwOA==", "bodyText": "If that's correct, then wouldn't setting a longer time out on activate jobs work? Or is that not possible via zbctl?", "url": "https://github.com/camunda-cloud/zeebe/pull/5972#discussion_r537303808", "createdAt": "2020-12-07T08:08:46Z", "author": {"login": "npepinpe"}, "path": "clients/go/cmd/zbctl/main_test.go", "diffHunk": "@@ -95,10 +95,22 @@ var tests = []struct {\n \t\tgoldenFile: \"testdata/create_worker.golden\",\n \t},\n \t{\n-\t\tname:       \"activate job\",\n+\t\tname:       \"empty activate job\",\n+\t\tcmd:        \"--insecure activate jobs jobType --maxJobsToActivate 0\",\n+\t\tgoldenFile: \"testdata/empty_activate_job.golden\",\n+\t},\n+\t{\n+\t\tname:       \"single activate job\",\n \t\tsetupCmds:  []string{\"--insecure deploy testdata/job_model.bpmn\", \"--insecure create instance jobProcess\"},\n-\t\tcmd:        \"--insecure activate jobs jobType\",\n-\t\tgoldenFile: \"testdata/activate_job.golden\",\n+\t\tcmd:        \"--insecure activate jobs jobType --maxJobsToActivate 1\",\n+\t\tgoldenFile: \"testdata/single_activate_job.golden\",\n+\t},\n+\t{\n+\t\tname: \"double activate job\",\n+\t\t// we deploy on the end again to spent more time in setup phase to avoid a race condition, that we can activate more jobs then one", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMwMjQ2OQ=="}, "originalCommit": {"oid": "d525cc42aa36687717181071d5372e40efa3fdf2"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MTQ4Mzcy", "url": "https://github.com/camunda-cloud/zeebe/pull/5972#pullrequestreview-546148372", "createdAt": "2020-12-07T13:31:17Z", "commit": {"oid": "d525cc42aa36687717181071d5372e40efa3fdf2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d525cc42aa36687717181071d5372e40efa3fdf2", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/d525cc42aa36687717181071d5372e40efa3fdf2", "committedDate": "2020-12-04T20:37:52Z", "message": "fix(clients/go): print activate jobs ouput as valid json"}, "afterCommit": {"oid": "f4032853245dcb9844c5616c79911be82d511ccc", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/f4032853245dcb9844c5616c79911be82d511ccc", "committedDate": "2020-12-10T07:38:52Z", "message": "chore(clients/go): bring convention back"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMzQxMDk1", "url": "https://github.com/camunda-cloud/zeebe/pull/5972#pullrequestreview-551341095", "createdAt": "2020-12-14T12:59:41Z", "commit": {"oid": "f4032853245dcb9844c5616c79911be82d511ccc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6995d6718f9f5a5de8d733d9143757be2dfb6606", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/6995d6718f9f5a5de8d733d9143757be2dfb6606", "committedDate": "2020-12-14T13:00:21Z", "message": "fix(clients/go): print activate jobs ouput as valid json"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4032853245dcb9844c5616c79911be82d511ccc", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/f4032853245dcb9844c5616c79911be82d511ccc", "committedDate": "2020-12-10T07:38:52Z", "message": "chore(clients/go): bring convention back"}, "afterCommit": {"oid": "6995d6718f9f5a5de8d733d9143757be2dfb6606", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/6995d6718f9f5a5de8d733d9143757be2dfb6606", "committedDate": "2020-12-14T13:00:21Z", "message": "fix(clients/go): print activate jobs ouput as valid json"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2297, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}