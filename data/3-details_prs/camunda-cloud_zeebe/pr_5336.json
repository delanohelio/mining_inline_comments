{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0OTY2MjI4", "number": 5336, "title": "Expose rocksdb ColumnFamilyOptions", "bodyText": "Description\nThis PR adds a new database config property to the data config.\nThis DatabaseCfg allows users to set an advanced config property named\ncolumnFamilyOptions which is a multiline properties definition.\nThese column family options can be used to overwrite our RocksDB\nColumnFamilyOption defaults. Use these options with care since you can\neasily break Zeebe by changing these values too much. However, it can be\ninteresting for more advanced users to optimise these values for better\nperformance on their specific hardware or for their specific usecase.\nPlease not that the expected property key names and values are derived\nfrom the C implementation. Please look at RocksDBs SCM repo for the\nfiles: cf_options.h and options_helper.cc.\nRelated issues\ncloses #5279\nDefinition of Done\nNot all items need to be done depending on the issue and the pull request.\nCode changes:\n\n The changes are backwards compatibility with previous versions\n If it fixes a bug then PRs are created to backport the fix to the last two minor versions\n\nTesting:\n\n There are unit/integration tests that verify all acceptance criterias of the issue\n New tests are written to ensure backwards compatibility with further versions\n The behavior is tested manually\n The impact of the changes is verified by a benchmark\n\nDocumentation:\n\n The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\n New content is added to the release announcement", "createdAt": "2020-09-11T11:28:46Z", "url": "https://github.com/camunda-cloud/zeebe/pull/5336", "merged": true, "mergeCommit": {"oid": "27afabe550e1b965719c75918ada4b563ccedecc"}, "closed": true, "closedAt": "2020-09-17T12:19:41Z", "author": {"login": "korthout"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHzvfQABqjM3NTU3NDA1MTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJvHeBgBqjM3Nzc0MjY3MzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b63658ebac88184e4f0cda173c836404c68b9c6", "author": {"user": {"login": "korthout", "name": "Nico Korthout"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/7b63658ebac88184e4f0cda173c836404c68b9c6", "committedDate": "2020-09-11T11:19:15Z", "message": "feat(broker): expose rocksdb ColumnFamilyOptions\n\nThis commit adds a new `database` config property to the `data` config.\nThis DatabaseCfg allows users to set an advanced config property named\n`columnFamilyOptions` which is a multiline properties definition.\n\nThese column family options can be used to overwrite our RocksDB\nColumnFamilyOption defaults. Use these options with care since you can\neasily break Zeebe by changing these values too much. However, it can be\ninteresting for more advanced users to optimise these values for better\nperformance on their specific hardware or for their specific usecase.\n\nPlease not that the expected property key names and values are derived\nfrom the C implementation. Please look at RocksDBs SCM repo for the\nfiles: cf_options.h and options_helper.cc."}, "afterCommit": {"oid": "c6b43aee72bd971546c0937efd5d95e3b0eef8c2", "author": {"user": {"login": "korthout", "name": "Nico Korthout"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/c6b43aee72bd971546c0937efd5d95e3b0eef8c2", "committedDate": "2020-09-11T11:31:34Z", "message": "feat(broker): expose rocksdb ColumnFamilyOptions\n\nThis commit adds a new `database` config property to the `data` config.\nThis DatabaseCfg allows users to set an advanced config property named\n`columnFamilyOptions` which is a multiline properties definition.\n\nThese column family options can be used to overwrite our RocksDB\nColumnFamilyOption defaults. Use these options with care since you can\neasily break Zeebe by changing these values too much. However, it can be\ninteresting for more advanced users to optimise these values for better\nperformance on their specific hardware or for their specific usecase.\n\nPlease not that the expected property key names and values are derived\nfrom the C implementation. Please look at RocksDBs SCM repo for the\nfiles: cf_options.h and options_helper.cc."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6545c32fd5ee9dc9cea00f7675c5d134ef1e92ac", "author": {"user": {"login": "korthout", "name": "Nico Korthout"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/6545c32fd5ee9dc9cea00f7675c5d134ef1e92ac", "committedDate": "2020-09-11T13:04:07Z", "message": "chore(broker): allow setting the property to null"}, "afterCommit": {"oid": "b1c1d4201c7ed52f03391dc675cfba3d95ae6044", "author": {"user": {"login": "korthout", "name": "Nico Korthout"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/b1c1d4201c7ed52f03391dc675cfba3d95ae6044", "committedDate": "2020-09-11T13:52:50Z", "message": "feat(broker): expose rocksdb ColumnFamilyOptions\n\nThis commit adds a new `database` config property to the `data` config.\nThis DatabaseCfg allows users to set an advanced config property named\n`columnFamilyOptions` which is a multiline properties definition.\n\nThese column family options can be used to overwrite our RocksDB\nColumnFamilyOption defaults. Use these options with care since you can\neasily break Zeebe by changing these values too much. However, it can be\ninteresting for more advanced users to optimise these values for better\nperformance on their specific hardware or for their specific usecase.\n\nPlease not that the expected property key names and values are derived\nfrom the C implementation. Please look at RocksDBs SCM repo for the\nfiles: cf_options.h and options_helper.cc."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b1c1d4201c7ed52f03391dc675cfba3d95ae6044", "author": {"user": {"login": "korthout", "name": "Nico Korthout"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/b1c1d4201c7ed52f03391dc675cfba3d95ae6044", "committedDate": "2020-09-11T13:52:50Z", "message": "feat(broker): expose rocksdb ColumnFamilyOptions\n\nThis commit adds a new `database` config property to the `data` config.\nThis DatabaseCfg allows users to set an advanced config property named\n`columnFamilyOptions` which is a multiline properties definition.\n\nThese column family options can be used to overwrite our RocksDB\nColumnFamilyOption defaults. Use these options with care since you can\neasily break Zeebe by changing these values too much. However, it can be\ninteresting for more advanced users to optimise these values for better\nperformance on their specific hardware or for their specific usecase.\n\nPlease not that the expected property key names and values are derived\nfrom the C implementation. Please look at RocksDBs SCM repo for the\nfiles: cf_options.h and options_helper.cc."}, "afterCommit": {"oid": "a000663a27c090be07b001a8c8943e1d8f2afe7e", "author": {"user": {"login": "korthout", "name": "Nico Korthout"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/a000663a27c090be07b001a8c8943e1d8f2afe7e", "committedDate": "2020-09-14T09:19:55Z", "message": "feat(broker): expose rocksdb ColumnFamilyOptions\n\nThis commit adds a new `database` config property to the `data` config.\nThis DatabaseCfg allows users to set an advanced config property named\n`columnFamilyOptions` which is a multiline properties definition.\n\nThese column family options can be used to overwrite our RocksDB\nColumnFamilyOption defaults. Use these options with care since you can\neasily break Zeebe by changing these values too much. However, it can be\ninteresting for more advanced users to optimise these values for better\nperformance on their specific hardware or for their specific usecase.\n\nPlease not that the expected property key names and values are derived\nfrom the C implementation. Please look at RocksDBs SCM repo for the\nfiles: cf_options.h and options_helper.cc."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a000663a27c090be07b001a8c8943e1d8f2afe7e", "author": {"user": {"login": "korthout", "name": "Nico Korthout"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/a000663a27c090be07b001a8c8943e1d8f2afe7e", "committedDate": "2020-09-14T09:19:55Z", "message": "feat(broker): expose rocksdb ColumnFamilyOptions\n\nThis commit adds a new `database` config property to the `data` config.\nThis DatabaseCfg allows users to set an advanced config property named\n`columnFamilyOptions` which is a multiline properties definition.\n\nThese column family options can be used to overwrite our RocksDB\nColumnFamilyOption defaults. Use these options with care since you can\neasily break Zeebe by changing these values too much. However, it can be\ninteresting for more advanced users to optimise these values for better\nperformance on their specific hardware or for their specific usecase.\n\nPlease not that the expected property key names and values are derived\nfrom the C implementation. Please look at RocksDBs SCM repo for the\nfiles: cf_options.h and options_helper.cc."}, "afterCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b", "author": {"user": {"login": "korthout", "name": "Nico Korthout"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/c4834935cd91b16530631b68d4ed6e13a7262b9b", "committedDate": "2020-09-14T14:11:02Z", "message": "feat(broker): expose rocksdb ColumnFamilyOptions\n\nThis commit adds a new `database` config property to the `data` config.\nThis DatabaseCfg allows users to set an advanced config property named\n`columnFamilyOptions` which is a multiline properties definition.\n\nThese column family options can be used to overwrite our RocksDB\nColumnFamilyOption defaults. Use these options with care since you can\neasily break Zeebe by changing these values too much. However, it can be\ninteresting for more advanced users to optimise these values for better\nperformance on their specific hardware or for their specific usecase.\n\nPlease not that the expected property key names and values are derived\nfrom the C implementation. Please look at RocksDBs SCM repo for the\nfiles: cf_options.h and options_helper.cc."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NTEzOTY1", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#pullrequestreview-488513965", "createdAt": "2020-09-15T09:48:42Z", "commit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOTo0ODo0MlrOHR53TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOTo0ODo0MlrOHR53TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUzNTg4NA==", "bodyText": "I had to replace this global constant with a method to allow different ways of constructing the factory (for different tests). It is now replaced by a Singleton pattern", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r488535884", "createdAt": "2020-09-15T09:48:42Z", "author": {"login": "korthout"}, "path": "engine/src/main/java/io/zeebe/engine/state/DefaultZeebeDbFactory.java", "diffHunk": "@@ -11,34 +11,68 @@\n import io.zeebe.db.ZeebeDbFactory;\n import io.zeebe.db.impl.rocksdb.ZeebeRocksDBMetricExporter;\n import io.zeebe.db.impl.rocksdb.ZeebeRocksDbFactory;\n+import java.util.Properties;\n import java.util.function.BiFunction;\n \n public final class DefaultZeebeDbFactory {\n \n+  public static final BiFunction<String, ZeebeDb<ZbColumnFamilies>, ZeebeRocksDBMetricExporter>\n+      DEFAULT_DB_METRIC_EXPORTER_FACTORY =\n+          (partitionId, database) ->\n+              new ZeebeRocksDBMetricExporter<>(partitionId, database, ZbColumnFamilies.class);\n+  private static ZeebeDbFactory<ZbColumnFamilies> instance;\n+\n   /**\n-   * The default zeebe database factory, which is used in most of the places except for the\n+   * Returns the default zeebe database factory, which is used in most of the places except for the\n    * exporters.\n+   *\n+   * @return the created zeebe database factory\n    */\n-  public static final ZeebeDbFactory<ZbColumnFamilies> DEFAULT_DB_FACTORY =\n-      defaultFactory(ZbColumnFamilies.class);\n+  public static ZeebeDbFactory<ZbColumnFamilies> defaultFactory() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NTE0NDY1", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#pullrequestreview-488514465", "createdAt": "2020-09-15T09:49:22Z", "commit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOTo0OToyMlrOHR54vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOTo0OToyMlrOHR54vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUzNjI1NA==", "bodyText": "Here you'll find the main change to apply the column family options config.", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r488536254", "createdAt": "2020-09-15T09:49:22Z", "author": {"login": "korthout"}, "path": "zb-db/src/main/java/io/zeebe/db/impl/rocksdb/ZeebeRocksDbFactory.java", "diffHunk": "@@ -98,9 +111,28 @@ private ZeebeRocksDbFactory(final Class<ColumnFamilyType> columnFamilyTypeClass)\n     return columnFamilyDescriptors;\n   }\n \n-  private static ColumnFamilyOptions createColumnFamilyOptions() {\n-    // Options which are used on all column families\n-    return new ColumnFamilyOptions()\n-        .setCompactionPriority(CompactionPriority.OldestSmallestSeqFirst);\n+  /** @return Options which are used on all column families */\n+  public ColumnFamilyOptions createColumnFamilyOptions() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MzA3MTQ2", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#pullrequestreview-489307146", "createdAt": "2020-09-16T06:22:16Z", "commit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNjoyMjoxNlrOHSh0Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTo0NDoyN1rOHSo8UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE5MDQ5NA==", "bodyText": "Please add a link to possible configuration options and an example.", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489190494", "createdAt": "2020-09-16T06:22:16Z", "author": {"login": "deepthidevaki"}, "path": "dist/src/main/config/broker.standalone.yaml.template", "diffHunk": "@@ -200,6 +200,12 @@\n       # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DISKUSAGEMONITORINGINTERVAL\n       # diskUsageMonitoringInterval = 1s\n \n+      # database:\n+        # Specify custom column family options overwriting Zeebe's own defaults.\n+        # WARNING: This setting requires in-depth knowledge of Zeebe's embedded database.\n+        # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE5ODkyOA==", "bodyText": "I wouldn't add it here because it is an advanced option. It is in the configuration templates. So that would be enough.", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489198928", "createdAt": "2020-09-16T06:42:34Z", "author": {"login": "deepthidevaki"}, "path": "dist/src/main/config/application.yaml", "diffHunk": "@@ -59,6 +59,12 @@ zeebe:\n       # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_SNAPSHOTPERIOD.\n       snapshotPeriod: 15m\n \n+      database:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwMTg0Mw==", "bodyText": "Does Singleton pattern fits here? What if defaultFactory was called twice with different parameters?", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489201843", "createdAt": "2020-09-16T06:48:53Z", "author": {"login": "deepthidevaki"}, "path": "engine/src/main/java/io/zeebe/engine/state/DefaultZeebeDbFactory.java", "diffHunk": "@@ -11,34 +11,68 @@\n import io.zeebe.db.ZeebeDbFactory;\n import io.zeebe.db.impl.rocksdb.ZeebeRocksDBMetricExporter;\n import io.zeebe.db.impl.rocksdb.ZeebeRocksDbFactory;\n+import java.util.Properties;\n import java.util.function.BiFunction;\n \n public final class DefaultZeebeDbFactory {\n \n+  public static final BiFunction<String, ZeebeDb<ZbColumnFamilies>, ZeebeRocksDBMetricExporter>\n+      DEFAULT_DB_METRIC_EXPORTER_FACTORY =\n+          (partitionId, database) ->\n+              new ZeebeRocksDBMetricExporter<>(partitionId, database, ZbColumnFamilies.class);\n+  private static ZeebeDbFactory<ZbColumnFamilies> instance;\n+\n   /**\n-   * The default zeebe database factory, which is used in most of the places except for the\n+   * Returns the default zeebe database factory, which is used in most of the places except for the\n    * exporters.\n+   *\n+   * @return the created zeebe database factory\n    */\n-  public static final ZeebeDbFactory<ZbColumnFamilies> DEFAULT_DB_FACTORY =\n-      defaultFactory(ZbColumnFamilies.class);\n+  public static ZeebeDbFactory<ZbColumnFamilies> defaultFactory() {\n+    return defaultFactory(new Properties());\n+  }\n \n-  public static final BiFunction<String, ZeebeDb<ZbColumnFamilies>, ZeebeRocksDBMetricExporter>\n-      DEFAULT_DB_METRIC_EXPORTER_FACTORY =\n-          (partitionId, database) -> {\n-            return new ZeebeRocksDBMetricExporter<>(partitionId, database, ZbColumnFamilies.class);\n-          };\n+  /**\n+   * Returns the default zeebe database factory, which is used in most of the places except for the\n+   * exporters.\n+   *\n+   * @param userProvidedColumnFamilyOptions additional column family options\n+   * @return the created zeebe database factory\n+   */\n+  public static synchronized ZeebeDbFactory<ZbColumnFamilies> defaultFactory(\n+      final Properties userProvidedColumnFamilyOptions) {\n+    if (instance == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIxOTU4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void columnFamilyOptionsCanBeOverwritten() {\n          \n          \n            \n              public void shouldOverwriteDefaultColumnFamilyOptions() {", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489219589", "createdAt": "2020-09-16T07:24:35Z", "author": {"login": "deepthidevaki"}, "path": "zb-db/src/test/java/io/zeebe/db/impl/rocksdb/ZeebeRocksDbFactoryTest.java", "diffHunk": "@@ -58,4 +62,32 @@ public void shouldCreateTwoNewDbs() throws Exception {\n     firstDb.close();\n     secondDb.close();\n   }\n+\n+  @Test\n+  public void columnFamilyOptionsCanBeOverwritten() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIzNTcwNA==", "bodyText": "Same as above. Please add a link to possible configuration options and an example.", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489235704", "createdAt": "2020-09-16T07:52:16Z", "author": {"login": "deepthidevaki"}, "path": "dist/src/main/config/broker.yaml.template", "diffHunk": "@@ -160,6 +160,12 @@\n       # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DISKUSAGEMONITORINGINTERVAL\n       # diskUsageMonitoringInterval = 1s\n \n+      # database:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIzNzA2NA==", "bodyText": "May be assert other entries also.", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489237064", "createdAt": "2020-09-16T07:54:33Z", "author": {"login": "deepthidevaki"}, "path": "broker/src/test/java/io/zeebe/broker/system/configuration/DatabaseCfgTest.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.configuration;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.junit.Test;\n+\n+public final class DatabaseCfgTest {\n+\n+  public final Map<String, String> environment = new HashMap<>();\n+\n+  @Test\n+  public void shouldSetColumnFamilyOptionsConfig() {\n+    // when\n+    final BrokerCfg cfg = TestConfigReader.readConfig(\"database-cfg\", environment);\n+    final var zeebeDb = cfg.getData().getDatabase();\n+\n+    // then\n+    assertThat(zeebeDb.getColumnFamilyOptions()).containsEntry(\"foo_foo\", \"bar\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwNzIxNg==", "bodyText": "If the environment variable does not work as expected, we should remove them and document it here.", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489307216", "createdAt": "2020-09-16T09:44:27Z", "author": {"login": "deepthidevaki"}, "path": "dist/src/main/config/broker.standalone.yaml.template", "diffHunk": "@@ -200,6 +200,12 @@\n       # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DISKUSAGEMONITORINGINTERVAL\n       # diskUsageMonitoringInterval = 1s\n \n+      # database:\n+        # Specify custom column family options overwriting Zeebe's own defaults.\n+        # WARNING: This setting requires in-depth knowledge of Zeebe's embedded database.\n+        # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE5MDQ5NA=="}, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMjcwNzUw", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#pullrequestreview-490270750", "createdAt": "2020-09-17T06:13:47Z", "commit": {"oid": "beda16d3be821d74391ecbd1caee86c12f1c7716"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjoxMzo0N1rOHTS3NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjo0ODo1OFrOHTTxOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk5NDAzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static synchronized ZeebeDbFactory<ZbColumnFamilies> defaultFactory(\n          \n          \n            \n              public static ZeebeDbFactory<ZbColumnFamilies> defaultFactory(", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489994036", "createdAt": "2020-09-17T06:13:47Z", "author": {"login": "deepthidevaki"}, "path": "engine/src/main/java/io/zeebe/engine/state/DefaultZeebeDbFactory.java", "diffHunk": "@@ -11,34 +11,64 @@\n import io.zeebe.db.ZeebeDbFactory;\n import io.zeebe.db.impl.rocksdb.ZeebeRocksDBMetricExporter;\n import io.zeebe.db.impl.rocksdb.ZeebeRocksDbFactory;\n+import java.util.Properties;\n import java.util.function.BiFunction;\n \n public final class DefaultZeebeDbFactory {\n \n+  public static final BiFunction<String, ZeebeDb<ZbColumnFamilies>, ZeebeRocksDBMetricExporter>\n+      DEFAULT_DB_METRIC_EXPORTER_FACTORY =\n+          (partitionId, database) ->\n+              new ZeebeRocksDBMetricExporter<>(partitionId, database, ZbColumnFamilies.class);\n+\n   /**\n-   * The default zeebe database factory, which is used in most of the places except for the\n+   * Returns the default zeebe database factory, which is used in most of the places except for the\n    * exporters.\n+   *\n+   * @return the created zeebe database factory\n    */\n-  public static final ZeebeDbFactory<ZbColumnFamilies> DEFAULT_DB_FACTORY =\n-      defaultFactory(ZbColumnFamilies.class);\n+  public static ZeebeDbFactory<ZbColumnFamilies> defaultFactory() {\n+    return defaultFactory(new Properties());\n+  }\n \n-  public static final BiFunction<String, ZeebeDb<ZbColumnFamilies>, ZeebeRocksDBMetricExporter>\n-      DEFAULT_DB_METRIC_EXPORTER_FACTORY =\n-          (partitionId, database) -> {\n-            return new ZeebeRocksDBMetricExporter<>(partitionId, database, ZbColumnFamilies.class);\n-          };\n+  /**\n+   * Returns the default zeebe database factory, which is used in most of the places except for the\n+   * exporters.\n+   *\n+   * @param userProvidedColumnFamilyOptions additional column family options\n+   * @return the created zeebe database factory\n+   */\n+  public static synchronized ZeebeDbFactory<ZbColumnFamilies> defaultFactory(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beda16d3be821d74391ecbd1caee86c12f1c7716"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwODg5MA==", "bodyText": "Setting the environment variable does not follow the normal pattern here,  right? That is ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS_WRITE_BUFFER_SIZE does not work here. So should we just say that don't use environment variable? Otherwise we should document how to use env variable - eg:- ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS=\"write_buffer_size=4\" .  I would prefer just saying please don't use env variable. Wdyt?", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r490008890", "createdAt": "2020-09-17T06:48:58Z", "author": {"login": "deepthidevaki"}, "path": "dist/src/main/config/broker.yaml.template", "diffHunk": "@@ -160,6 +160,18 @@\n       # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DISKUSAGEMONITORINGINTERVAL\n       # diskUsageMonitoringInterval = 1s\n \n+      # database:\n+        # Specify custom column family options overwriting Zeebe's own defaults.\n+        # WARNING: This setting requires in-depth knowledge of Zeebe's embedded database!\n+        # The expected property key names and values are derived from RocksDB's C implementation,\n+        # and are not limited to the provided examples below. Please look in RocksDB's SCM repo\n+        # for the files: `cf_options.h` and `options_helper.cc`. This setting can also be overridden\n+        # using the environment variable ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS.\n+        # However, it does not seem possible to provide multiple column family options that way.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beda16d3be821d74391ecbd1caee86c12f1c7716"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNDMyODI3", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#pullrequestreview-490432827", "createdAt": "2020-09-17T09:57:18Z", "commit": {"oid": "4ad1e32a5a9ca4148c42ae9572683c0eab5c589d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07ff018529d83643b1b400284b12d3339fc40caa", "author": {"user": {"login": "korthout", "name": "Nico Korthout"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/07ff018529d83643b1b400284b12d3339fc40caa", "committedDate": "2020-09-17T11:15:03Z", "message": "feat(broker): expose rocksdb ColumnFamilyOptions\n\nThis commit adds a new `rocksdb` config property to the `data` config.\nThis RocksdbCfg allows users to set an advanced config property named\n`columnFamilyOptions` which is a multiline properties definition.\n\nThese column family options can be used to overwrite our RocksDB\nColumnFamilyOption defaults. Use these options with care since you can\neasily break Zeebe by changing these values too much. However, it can be\ninteresting for more advanced users to optimise these values for better\nperformance on their specific hardware or for their specific usecase.\n\nPlease not that the expected property key names and values are derived\nfrom the C implementation. Please look at RocksDBs SCM repo for the\nfiles: cf_options.h and options_helper.cc.\n\nCo-authored-by: Deepthi Devaki Akkoorath <deepthidevaki@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4ad1e32a5a9ca4148c42ae9572683c0eab5c589d", "author": {"user": {"login": "korthout", "name": "Nico Korthout"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/4ad1e32a5a9ca4148c42ae9572683c0eab5c589d", "committedDate": "2020-09-17T09:27:48Z", "message": "chore(broker): rename database cfg to rocksdb cfg"}, "afterCommit": {"oid": "07ff018529d83643b1b400284b12d3339fc40caa", "author": {"user": {"login": "korthout", "name": "Nico Korthout"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/07ff018529d83643b1b400284b12d3339fc40caa", "committedDate": "2020-09-17T11:15:03Z", "message": "feat(broker): expose rocksdb ColumnFamilyOptions\n\nThis commit adds a new `rocksdb` config property to the `data` config.\nThis RocksdbCfg allows users to set an advanced config property named\n`columnFamilyOptions` which is a multiline properties definition.\n\nThese column family options can be used to overwrite our RocksDB\nColumnFamilyOption defaults. Use these options with care since you can\neasily break Zeebe by changing these values too much. However, it can be\ninteresting for more advanced users to optimise these values for better\nperformance on their specific hardware or for their specific usecase.\n\nPlease not that the expected property key names and values are derived\nfrom the C implementation. Please look at RocksDBs SCM repo for the\nfiles: cf_options.h and options_helper.cc.\n\nCo-authored-by: Deepthi Devaki Akkoorath <deepthidevaki@users.noreply.github.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2492, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}