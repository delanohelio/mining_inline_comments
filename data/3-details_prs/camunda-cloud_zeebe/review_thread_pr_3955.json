{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMzY3MzUz", "number": 3955, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMzowMDoyM1rODjzg1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMzowMDoyM1rODjzg1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODcwNzQwOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/io/zeebe/engine/state/LastProcessedState.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMzowMDoyM1rOFv0K0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMzozMjoxOFrOFv1CGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY4MjEzMQ==", "bodyText": "These method names mirror the methods in ZeebeState but I think here they can be shortened to be less redudant. So instead of LastProcessedState#getLastSuccessfulProcessedRecordPosition() something like LastProcessedState#getPosition. I think you get the same information from both. What do you think?", "url": "https://github.com/camunda-cloud/zeebe/pull/3955#discussion_r385682131", "createdAt": "2020-02-28T13:00:23Z", "author": {"login": "MiguelPires"}, "path": "engine/src/main/java/io/zeebe/engine/state/LastProcessedState.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.engine.state;\n+\n+import io.zeebe.db.ColumnFamily;\n+import io.zeebe.db.DbContext;\n+import io.zeebe.db.ZeebeDb;\n+import io.zeebe.db.impl.DbLong;\n+import io.zeebe.db.impl.DbString;\n+\n+public final class LastProcessedState {\n+\n+  private static final String LAST_PROCESSED_EVENT_KEY = \"LAST_PROCESSED_EVENT_KEY\";\n+  private static final long NO_EVENTS_PROCESSED = -1L;\n+\n+  private final DbString lastProcessedEventKey;\n+  private final DbLong lastProcessedEventPosition;\n+  private final ColumnFamily<DbString, DbLong> lastProcessedRecordPositionColumnFamily;\n+\n+  public LastProcessedState(final ZeebeDb<ZbColumnFamilies> zeebeDb, final DbContext dbContext) {\n+    lastProcessedEventKey = new DbString();\n+    lastProcessedEventKey.wrapString(LAST_PROCESSED_EVENT_KEY);\n+    lastProcessedEventPosition = new DbLong();\n+    lastProcessedRecordPositionColumnFamily =\n+        zeebeDb.createColumnFamily(\n+            ZbColumnFamilies.DEFAULT, dbContext, lastProcessedEventKey, lastProcessedEventPosition);\n+  }\n+\n+  public void markAsProcessed(final long position) {\n+    lastProcessedEventPosition.wrapLong(position);\n+    lastProcessedRecordPositionColumnFamily.put(lastProcessedEventKey, lastProcessedEventPosition);\n+  }\n+\n+  public long getLastSuccessfulProcessedRecordPosition() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f40077e73bbf8cfe44d31eb008f96c236a791ad"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY5NjI4Mg==", "bodyText": "I think you are right. I will change it.", "url": "https://github.com/camunda-cloud/zeebe/pull/3955#discussion_r385696282", "createdAt": "2020-02-28T13:32:18Z", "author": {"login": "Zelldon"}, "path": "engine/src/main/java/io/zeebe/engine/state/LastProcessedState.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.engine.state;\n+\n+import io.zeebe.db.ColumnFamily;\n+import io.zeebe.db.DbContext;\n+import io.zeebe.db.ZeebeDb;\n+import io.zeebe.db.impl.DbLong;\n+import io.zeebe.db.impl.DbString;\n+\n+public final class LastProcessedState {\n+\n+  private static final String LAST_PROCESSED_EVENT_KEY = \"LAST_PROCESSED_EVENT_KEY\";\n+  private static final long NO_EVENTS_PROCESSED = -1L;\n+\n+  private final DbString lastProcessedEventKey;\n+  private final DbLong lastProcessedEventPosition;\n+  private final ColumnFamily<DbString, DbLong> lastProcessedRecordPositionColumnFamily;\n+\n+  public LastProcessedState(final ZeebeDb<ZbColumnFamilies> zeebeDb, final DbContext dbContext) {\n+    lastProcessedEventKey = new DbString();\n+    lastProcessedEventKey.wrapString(LAST_PROCESSED_EVENT_KEY);\n+    lastProcessedEventPosition = new DbLong();\n+    lastProcessedRecordPositionColumnFamily =\n+        zeebeDb.createColumnFamily(\n+            ZbColumnFamilies.DEFAULT, dbContext, lastProcessedEventKey, lastProcessedEventPosition);\n+  }\n+\n+  public void markAsProcessed(final long position) {\n+    lastProcessedEventPosition.wrapLong(position);\n+    lastProcessedRecordPositionColumnFamily.put(lastProcessedEventKey, lastProcessedEventPosition);\n+  }\n+\n+  public long getLastSuccessfulProcessedRecordPosition() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY4MjEzMQ=="}, "originalCommit": {"oid": "4f40077e73bbf8cfe44d31eb008f96c236a791ad"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4880, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}