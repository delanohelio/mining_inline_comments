{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MzM2NDA5", "number": 5761, "title": "Reprocessing detection feature flag", "bodyText": "Description\nIntroduces a new feature flag in the experimental config to enable the detection of reprocessing inconsistency. Per default it is now disabled.\n\nRelated issues\n\ncloses #5759\nDefinition of Done\nNot all items need to be done depending on the issue and the pull request.\nCode changes:\n\n The changes are backwards compatibility with previous versions\n If it fixes a bug then PRs are created to backport the fix to the last two minor versions\n\nTesting:\n\n There are unit/integration tests that verify all acceptance criterias of the issue\n New tests are written to ensure backwards compatibility with further versions\n The behavior is tested manually\n The impact of the changes is verified by a benchmark\n\nDocumentation:\n\n The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\n New content is added to the release announcement", "createdAt": "2020-11-04T11:56:37Z", "url": "https://github.com/camunda-cloud/zeebe/pull/5761", "merged": true, "mergeCommit": {"oid": "8b1495cc2feaefc49617a405affd87aee117d276"}, "closed": true, "closedAt": "2020-11-05T16:33:22Z", "author": {"login": "Zelldon"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZMfkWgFqTUyMzI5NDAzNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZkmjVABqjM5NjMxNjExNjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMjk0MDM3", "url": "https://github.com/camunda-cloud/zeebe/pull/5761#pullrequestreview-523294037", "createdAt": "2020-11-04T11:57:38Z", "commit": {"oid": "5e0a7c805a91e0dc1c6b0e071d93d0ba20a1843c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMTo1NzozOVrOHtVCDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMTo1Nzo1M1rOHtVChg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI5MjU1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  # failed and the partition becomes unhealthy, now further progress will made on that specific partition.\n          \n          \n            \n                  # failed and the partition becomes unhealthy, no further progress will made on that specific partition.", "url": "https://github.com/camunda-cloud/zeebe/pull/5761#discussion_r517292556", "createdAt": "2020-11-04T11:57:39Z", "author": {"login": "npepinpe"}, "path": "dist/src/main/config/broker.standalone.yaml.template", "diffHunk": "@@ -524,3 +524,8 @@\n       # Sets the maximum batch size, which is send per append request to a follower.\n       # This setting can also be overridden using the environment variable ZEEBE_EXPERIMENTAL_MAX_APPEND_BATCH_SIZE\n       # maxAppendBatchSize = 32KB;\n+\n+      # Enables the detection of an inconsistency during reprocessing. If a inconsistency is detect the StreamProcessor is\n+      # failed and the partition becomes unhealthy, now further progress will made on that specific partition.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0a7c805a91e0dc1c6b0e071d93d0ba20a1843c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI5MjY3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  # detectReprocessingInconsistency = 32KB;\n          \n          \n            \n                  # detectReprocessingInconsistency = false;", "url": "https://github.com/camunda-cloud/zeebe/pull/5761#discussion_r517292678", "createdAt": "2020-11-04T11:57:53Z", "author": {"login": "npepinpe"}, "path": "dist/src/main/config/broker.standalone.yaml.template", "diffHunk": "@@ -524,3 +524,8 @@\n       # Sets the maximum batch size, which is send per append request to a follower.\n       # This setting can also be overridden using the environment variable ZEEBE_EXPERIMENTAL_MAX_APPEND_BATCH_SIZE\n       # maxAppendBatchSize = 32KB;\n+\n+      # Enables the detection of an inconsistency during reprocessing. If a inconsistency is detect the StreamProcessor is\n+      # failed and the partition becomes unhealthy, now further progress will made on that specific partition.\n+      # This setting can also be overridden using the environment variable ZEEBE_EXPERIMENTAL_DETECT_REPROCESSING_INCONSISTENCY\n+      # detectReprocessingInconsistency = 32KB;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e0a7c805a91e0dc1c6b0e071d93d0ba20a1843c"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c3d92aa1cdc6b5ef3dddb4e1ef0ca534eb8f1ca", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/3c3d92aa1cdc6b5ef3dddb4e1ef0ca534eb8f1ca", "committedDate": "2020-11-04T15:02:27Z", "message": "chore(broker): introduce new experimental flag to turn of reprocessing detection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b3af81f67184f490c806f687299371960f610a5", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/3b3af81f67184f490c806f687299371960f610a5", "committedDate": "2020-11-04T14:45:36Z", "message": "test(engine): turn off inconsistency detection test"}, "afterCommit": {"oid": "f9a4ea0d93468b998864755af15008f9212af2e7", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/f9a4ea0d93468b998864755af15008f9212af2e7", "committedDate": "2020-11-04T15:02:43Z", "message": "chore(broker): add test for feature flag"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNTIyOTQ4", "url": "https://github.com/camunda-cloud/zeebe/pull/5761#pullrequestreview-523522948", "createdAt": "2020-11-04T16:22:03Z", "commit": {"oid": "f9a4ea0d93468b998864755af15008f9212af2e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjoyMjowNFrOHtfp8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNjoyMjowNFrOHtfp8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ2NjYxMA==", "bodyText": "Can we add a timeout? Otherwise we could end up with a test that never finishes", "url": "https://github.com/camunda-cloud/zeebe/pull/5761#discussion_r517466610", "createdAt": "2020-11-04T16:22:04Z", "author": {"login": "npepinpe"}, "path": "engine/src/test/java/io/zeebe/engine/util/EngineRule.java", "diffHunk": "@@ -346,6 +367,19 @@ private void onNewEventCommitted() {\n     }\n   }\n \n+  private final class ReprocessingCompletedListener implements StreamProcessorLifecycleAware {\n+    private final ActorFuture<Void> reprocessingComplete = new CompletableActorFuture<>();\n+\n+    @Override\n+    public void onRecovered(final ReadonlyProcessingContext context) {\n+      reprocessingComplete.complete(null);\n+    }\n+\n+    public void awaitReprocessingComplete() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9a4ea0d93468b998864755af15008f9212af2e7"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MjU2MzM0", "url": "https://github.com/camunda-cloud/zeebe/pull/5761#pullrequestreview-524256334", "createdAt": "2020-11-05T13:26:45Z", "commit": {"oid": "a8f27ebe11343659cb10c90fcc7d77a5877ef022"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d04c729b04d2bd65fe14d9eecb3701224c1d487d", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/d04c729b04d2bd65fe14d9eecb3701224c1d487d", "committedDate": "2020-11-05T16:02:02Z", "message": "test(engine): turn off inconsistency detection test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffe9b9c28cb27a7113a9876c88a83fdb941d2e86", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/ffe9b9c28cb27a7113a9876c88a83fdb941d2e86", "committedDate": "2020-11-05T16:02:02Z", "message": "chore(broker): add test for feature flag"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8f27ebe11343659cb10c90fcc7d77a5877ef022", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/a8f27ebe11343659cb10c90fcc7d77a5877ef022", "committedDate": "2020-11-05T06:45:13Z", "message": "chore(engine): add reprocessing timeout"}, "afterCommit": {"oid": "ffe9b9c28cb27a7113a9876c88a83fdb941d2e86", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/ffe9b9c28cb27a7113a9876c88a83fdb941d2e86", "committedDate": "2020-11-05T16:02:02Z", "message": "chore(broker): add test for feature flag"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2344, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}