{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0ODI2OTUy", "number": 3999, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowMTozMVrODlzllQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNTozNDo0NVrODmjStg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTY5MTA5OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/job/FailProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowMTozMVrOFy5q2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowMTozMVrOFy5q2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkxNzk3OA==", "bodyText": "Would be nice if we could just remove this conditional statement.", "url": "https://github.com/camunda-cloud/zeebe/pull/3999#discussion_r388917978", "createdAt": "2020-03-06T14:01:31Z", "author": {"login": "Zelldon"}, "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/job/FailProcessor.java", "diffHunk": "@@ -35,7 +35,7 @@ public boolean onCommand(\n     final long key = command.getKey();\n     final JobState.State jobState = state.getState(key);\n \n-    if (jobState == State.ACTIVATED) {\n+    if (jobState == State.ACTIVATED || jobState == State.ACTIVATABLE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0820967a7013a69e50cf8063c4b48e62d94c489d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzQ5NDE0OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/job/DefaultJobCommandProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwNjowMDozOFrOFzbqRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwNjowMDozOFrOFzbqRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ3NDg4NQ==", "bodyText": "I think throw an error for job this part is also dynamic, like fail and complete", "url": "https://github.com/camunda-cloud/zeebe/pull/3999#discussion_r389474885", "createdAt": "2020-03-09T06:00:38Z", "author": {"login": "Zelldon"}, "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/job/DefaultJobCommandProcessor.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.engine.processor.workflow.job;\n+\n+import io.zeebe.engine.processor.CommandProcessor;\n+import io.zeebe.engine.processor.TypedRecord;\n+import io.zeebe.engine.state.instance.JobState;\n+import io.zeebe.engine.state.instance.JobState.State;\n+import io.zeebe.protocol.impl.record.value.job.JobRecord;\n+import io.zeebe.protocol.record.RejectionType;\n+import java.util.function.BiConsumer;\n+\n+/**\n+ * Default implementation to process JobCommands to reduce duplication in CommandProcessor\n+ * implementations.\n+ */\n+final class DefaultJobCommandProcessor<J extends JobRecord> implements CommandProcessor<J> {\n+\n+  private static final String NO_JOB_FOUND_MESSAGE =\n+      \"Expected to throw an error for job with key '%d', but no such job was found\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4339fb1c31ae5a38f69b169e107d06659ccc8e70"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzUwMjU1OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/job/JobEventProcessors.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNTozMTo0MFrOF0B_Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMjoxNDoxOFrOF0MR3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwMjc4Nw==", "bodyText": "Can here the correct type be interfered?", "url": "https://github.com/camunda-cloud/zeebe/pull/3999#discussion_r390102787", "createdAt": "2020-03-10T05:31:40Z", "author": {"login": "Zelldon"}, "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/job/JobEventProcessors.java", "diffHunk": "@@ -35,10 +35,10 @@ public static JobErrorThrownProcessor addJobProcessors(\n         .onEvent(ValueType.JOB, JobIntent.CREATED, new JobCreatedProcessor(workflowState))\n         .onEvent(ValueType.JOB, JobIntent.COMPLETED, new JobCompletedEventProcessor(workflowState))\n         .onCommand(ValueType.JOB, JobIntent.CREATE, new CreateProcessor(jobState))\n-        .onCommand(ValueType.JOB, JobIntent.COMPLETE, new CompleteProcessor(jobState))\n-        .onCommand(ValueType.JOB, JobIntent.FAIL, new FailProcessor(jobState))\n+        .onCommand(ValueType.JOB, JobIntent.COMPLETE, new CompleteProcessor<>(jobState))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "baff0c97fd24b9c666525fe611baf64870c32370"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI3MTQ1NQ==", "bodyText": "Yes it could, but it created a problem in calling commandControl.accept(JobIntent, JobRecord) because the JobRecord was bounded by J extends JobRecord and the value to place their was retrieved using JobRecord getJob(long) in JobState, which was not generified. So in the end it was not possible to use this.", "url": "https://github.com/camunda-cloud/zeebe/pull/3999#discussion_r390271455", "createdAt": "2020-03-10T12:14:18Z", "author": {"login": "korthout"}, "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/job/JobEventProcessors.java", "diffHunk": "@@ -35,10 +35,10 @@ public static JobErrorThrownProcessor addJobProcessors(\n         .onEvent(ValueType.JOB, JobIntent.CREATED, new JobCreatedProcessor(workflowState))\n         .onEvent(ValueType.JOB, JobIntent.COMPLETED, new JobCompletedEventProcessor(workflowState))\n         .onCommand(ValueType.JOB, JobIntent.CREATE, new CreateProcessor(jobState))\n-        .onCommand(ValueType.JOB, JobIntent.COMPLETE, new CompleteProcessor(jobState))\n-        .onCommand(ValueType.JOB, JobIntent.FAIL, new FailProcessor(jobState))\n+        .onCommand(ValueType.JOB, JobIntent.COMPLETE, new CompleteProcessor<>(jobState))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwMjc4Nw=="}, "originalCommit": {"oid": "baff0c97fd24b9c666525fe611baf64870c32370"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzUwNzEwOnYy", "diffSide": "LEFT", "path": "engine/src/test/java/io/zeebe/engine/processor/workflow/job/FailJobTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNTozNDo0NVrOF0CBqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMjo1Nzo0N1rOF0Nmpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwMzQ2NA==", "bodyText": "So we should now be able to fail a job without activating it. Could we re-add this one and assert that it is failed correctly.", "url": "https://github.com/camunda-cloud/zeebe/pull/3999#discussion_r390103464", "createdAt": "2020-03-10T05:34:45Z", "author": {"login": "Zelldon"}, "path": "engine/src/test/java/io/zeebe/engine/processor/workflow/job/FailJobTest.java", "diffHunk": "@@ -193,20 +193,6 @@ public void shouldRejectFailIfJobAlreadyFailed() {\n     assertThat(jobRecord.getRejectionReason()).contains(\"it is in state 'FAILED'\");\n   }\n \n-  @Test\n-  public void shouldRejectFailIfJobCreated() {\n-    // given\n-    final Record<JobRecordValue> job = ENGINE.createJob(jobType, PROCESS_ID);\n-\n-    // when\n-    final Record<JobRecordValue> jobRecord =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "baff0c97fd24b9c666525fe611baf64870c32370"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI5MzE1OQ==", "bodyText": "I re-added it with some modifications and moved the test case up so its together with the other successful command cases.", "url": "https://github.com/camunda-cloud/zeebe/pull/3999#discussion_r390293159", "createdAt": "2020-03-10T12:57:47Z", "author": {"login": "korthout"}, "path": "engine/src/test/java/io/zeebe/engine/processor/workflow/job/FailJobTest.java", "diffHunk": "@@ -193,20 +193,6 @@ public void shouldRejectFailIfJobAlreadyFailed() {\n     assertThat(jobRecord.getRejectionReason()).contains(\"it is in state 'FAILED'\");\n   }\n \n-  @Test\n-  public void shouldRejectFailIfJobCreated() {\n-    // given\n-    final Record<JobRecordValue> job = ENGINE.createJob(jobType, PROCESS_ID);\n-\n-    // when\n-    final Record<JobRecordValue> jobRecord =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwMzQ2NA=="}, "originalCommit": {"oid": "baff0c97fd24b9c666525fe611baf64870c32370"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4892, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}