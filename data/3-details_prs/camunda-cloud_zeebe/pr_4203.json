{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2ODc5OTEz", "number": 4203, "title": "chore(engine): fix flaky StreamProcessorTest snapshot tests", "bodyText": "Description\nThis PR updates tests in StreamProcessorTest where we wanted to wait for one event to be processed, but were actually waiting for one event to appear on the log; this usually coincided, but not 100% of the time. It replaces checking the event count on the stream with actually awaiting that we have processed this event; there was a race condition where the event count might be incremented before the processor had processed, resulting in non-deterministic tests.\nRelated issues\nCloses #4202, #4010\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-04-01T09:40:25Z", "url": "https://github.com/camunda-cloud/zeebe/pull/4203", "merged": true, "mergeCommit": {"oid": "ab851c78e65e1c1790b6b3d8856fc7ba07fb8a56"}, "closed": true, "closedAt": "2020-04-06T09:39:05Z", "author": {"login": "npepinpe"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTUehcgBqjMxODcwNzQxNTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcU7BMMABqjMyMDQzNzUxMzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32d0284325c88edf29c31bfce931a8a63314c643", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/32d0284325c88edf29c31bfce931a8a63314c643", "committedDate": "2020-04-01T09:32:14Z", "message": "chore(engine): fix flaky tests\n\n- replaces checking the event count on the stream with actually awaiting\n  that we have processed this event; there was a race condition where\n  the event count might be incremented before the processor had\n  processed, resulting in non-deterministic tests"}, "afterCommit": {"oid": "7175ff9237e7c61a6d7a2d7601cb7da4b19b395a", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/7175ff9237e7c61a6d7a2d7601cb7da4b19b395a", "committedDate": "2020-04-01T09:41:57Z", "message": "chore(engine): fix flaky tests\n\n- replaces checking the event count on the stream with actually awaiting\n  that we have processed this event; there was a race condition where\n  the event count might be incremented before the processor had\n  processed, resulting in non-deterministic tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7175ff9237e7c61a6d7a2d7601cb7da4b19b395a", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/7175ff9237e7c61a6d7a2d7601cb7da4b19b395a", "committedDate": "2020-04-01T09:41:57Z", "message": "chore(engine): fix flaky tests\n\n- replaces checking the event count on the stream with actually awaiting\n  that we have processed this event; there was a race condition where\n  the event count might be incremented before the processor had\n  processed, resulting in non-deterministic tests"}, "afterCommit": {"oid": "b5bebfd3293c3559a1715b8f217b3ce8595a27e7", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/b5bebfd3293c3559a1715b8f217b3ce8595a27e7", "committedDate": "2020-04-01T09:42:38Z", "message": "chore(engine): fix flaky tests\n\n- replaces checking the event count on the stream with actually awaiting\n  that we have processed this event; there was a race condition where\n  the event count might be incremented before the processor had\n  processed, resulting in non-deterministic tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTY4OTM1", "url": "https://github.com/camunda-cloud/zeebe/pull/4203#pullrequestreview-386168935", "createdAt": "2020-04-02T07:29:30Z", "commit": {"oid": "b5bebfd3293c3559a1715b8f217b3ce8595a27e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNzoyOTozMVrOF_elmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNzoyOTozMVrOF_elmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEwNTc1NA==", "bodyText": "I did not understand the intention of this test. The name says no processor process event, but there is a processor processing the event. \ud83e\udd14", "url": "https://github.com/camunda-cloud/zeebe/pull/4203#discussion_r402105754", "createdAt": "2020-04-02T07:29:31Z", "author": {"login": "deepthidevaki"}, "path": "engine/src/test/java/io/zeebe/engine/processor/StreamProcessorTest.java", "diffHunk": "@@ -578,16 +587,25 @@ public void onRecovered(final ReadonlyProcessingContext context) {\n   }\n \n   @Test\n-  public void shouldCreateSnapshotsEvenIfNoProcessorProcessEvent() {\n+  public void shouldCreateSnapshotsEvenIfNoProcessorProcessEvent() throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5bebfd3293c3559a1715b8f217b3ce8595a27e7"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f83af74e3bc8983747e599b23060c20ec471aa61", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/f83af74e3bc8983747e599b23060c20ec471aa61", "committedDate": "2020-04-03T12:37:15Z", "message": "chore(engine): use onProcessedListener to wait for processing"}, "afterCommit": {"oid": "0047fd6cffc1d3a9158b8697c7c7710d9df06a3d", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/0047fd6cffc1d3a9158b8697c7c7710d9df06a3d", "committedDate": "2020-04-03T12:37:43Z", "message": "chore(engine): use onProcessedListener to wait for processing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0047fd6cffc1d3a9158b8697c7c7710d9df06a3d", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/0047fd6cffc1d3a9158b8697c7c7710d9df06a3d", "committedDate": "2020-04-03T12:37:43Z", "message": "chore(engine): use onProcessedListener to wait for processing"}, "afterCommit": {"oid": "41c584c3be8a2a675f08d6dfc2201a199704e741", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/41c584c3be8a2a675f08d6dfc2201a199704e741", "committedDate": "2020-04-03T12:40:38Z", "message": "chore(engine): use onProcessedListener to wait for processing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Mzc1ODA3", "url": "https://github.com/camunda-cloud/zeebe/pull/4203#pullrequestreview-387375807", "createdAt": "2020-04-03T15:48:17Z", "commit": {"oid": "41c584c3be8a2a675f08d6dfc2201a199704e741"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTo0ODoxN1rOGAbQUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTo0ODoxN1rOGAbQUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5OTcyOQ==", "bodyText": "This log statement can be removed.", "url": "https://github.com/camunda-cloud/zeebe/pull/4203#discussion_r403099729", "createdAt": "2020-04-03T15:48:17Z", "author": {"login": "deepthidevaki"}, "path": "engine/src/test/java/io/zeebe/engine/processor/StreamProcessorTest.java", "diffHunk": "@@ -731,31 +693,56 @@ public void processRecord(\n   }\n \n   @Test\n-  public void shouldInvokeOnProcessedListener() throws InterruptedException {\n+  public void shouldInvokeOnProcessedListener() throws InterruptedException, TimeoutException {\n     // given\n-    final CountDownLatch processLatch = new CountDownLatch(1);\n+    final var onProcessedListener = new AwaitableProcessedListener();\n     streamProcessorRule.startTypedStreamProcessor(\n         (processors, context) ->\n             processors.onEvent(\n                 ValueType.WORKFLOW_INSTANCE,\n                 WorkflowInstanceIntent.ELEMENT_ACTIVATING,\n-                new TypedRecordProcessor<UnifiedRecordValue>() {\n-                  @Override\n-                  public void processRecord(\n-                      final long position,\n-                      final TypedRecord<UnifiedRecordValue> record,\n-                      final TypedResponseWriter responseWriter,\n-                      final TypedStreamWriter streamWriter,\n-                      final Consumer<SideEffectProducer> sideEffect) {\n-                    processLatch.countDown();\n-                  }\n-                }));\n+                mock(TypedRecordProcessor.class)),\n+        onProcessedListener.expect(1));\n \n     // when\n-    streamProcessorRule.writeWorkflowInstanceEvent(WorkflowInstanceIntent.ELEMENT_ACTIVATING);\n-    processLatch.await();\n+    final var position =\n+        streamProcessorRule.writeWorkflowInstanceEvent(WorkflowInstanceIntent.ELEMENT_ACTIVATING);\n \n     // then\n-    verify(streamProcessorRule.getProcessedListener(), timeout(1000).times(1)).accept(any());\n+    onProcessedListener.await();\n+    assertThat(onProcessedListener.lastProcessedRecord.getPosition()).isEqualTo(position);\n+  }\n+\n+  /**\n+   * A simple listener which allows you to wait for specific amount of records to be processed.\n+   *\n+   * <p>As it uses a phaser internally, you must always call {@link #expect(int)} before {@link\n+   * #accept(TypedRecord)}}!\n+   */\n+  @SuppressWarnings(\"rawtypes\")\n+  private static final class AwaitableProcessedListener implements Consumer<TypedRecord> {\n+    private static final Duration TIMEOUT = Duration.ofSeconds(5);\n+    private final Phaser phaser = new Phaser();\n+\n+    private int expectedPhase = -1;\n+    private TypedRecord lastProcessedRecord;\n+\n+    private AwaitableProcessedListener() {}\n+\n+    @Override\n+    public void accept(final TypedRecord typedRecord) {\n+      phaser.arrive();\n+      lastProcessedRecord = typedRecord;\n+    }\n+\n+    private AwaitableProcessedListener expect(final int expectedCount) {\n+      expectedPhase = phaser.bulkRegister(expectedCount);\n+      return this;\n+    }\n+\n+    private void await() throws TimeoutException, InterruptedException {\n+      Loggers.LOGSTREAMS_LOGGER.info(\"Expected phase: {}\", expectedPhase);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c584c3be8a2a675f08d6dfc2201a199704e741"}, "originalPosition": 415}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDYzNTQy", "url": "https://github.com/camunda-cloud/zeebe/pull/4203#pullrequestreview-388063542", "createdAt": "2020-04-06T09:08:49Z", "commit": {"oid": "6c0f328a1bbfd0d8a5d8f1f19dee72c3bec8c6ce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cf059ff91e8b3713920da294b54c57b0d99be65", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/2cf059ff91e8b3713920da294b54c57b0d99be65", "committedDate": "2020-04-06T09:10:04Z", "message": "chore(engine): fix flaky tests\n\n- replaces checking the event count on the stream with actually awaiting\n  that we have processed this event; there was a race condition where\n  the event count might be incremented before the processor had\n  processed, resulting in non-deterministic tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c0f328a1bbfd0d8a5d8f1f19dee72c3bec8c6ce", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/6c0f328a1bbfd0d8a5d8f1f19dee72c3bec8c6ce", "committedDate": "2020-04-03T17:20:03Z", "message": "chore(engine): switch to simpler countdownlatch"}, "afterCommit": {"oid": "2cf059ff91e8b3713920da294b54c57b0d99be65", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/2cf059ff91e8b3713920da294b54c57b0d99be65", "committedDate": "2020-04-06T09:10:04Z", "message": "chore(engine): fix flaky tests\n\n- replaces checking the event count on the stream with actually awaiting\n  that we have processed this event; there was a race condition where\n  the event count might be incremented before the processor had\n  processed, resulting in non-deterministic tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2960, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}