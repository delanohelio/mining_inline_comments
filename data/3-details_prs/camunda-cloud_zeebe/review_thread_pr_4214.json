{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NDA5MjMz", "number": 4214, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo1Mzo1NFrODt6v1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo1Mzo1NFrODt6v1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDc1MDMwOnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/clustering/atomix/ZeebeRaftStateMachine.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo1Mzo1NFrOF_nqPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo1OTozN1rOF_n2iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1NDM5Ng==", "bodyText": "Do we still need this one as well?", "url": "https://github.com/camunda-cloud/zeebe/pull/4214#discussion_r402254396", "createdAt": "2020-04-02T11:53:54Z", "author": {"login": "npepinpe"}, "path": "broker/src/main/java/io/zeebe/broker/clustering/atomix/ZeebeRaftStateMachine.java", "diffHunk": "@@ -64,7 +64,7 @@ public ThreadContext executor() {\n       if (index > reader.getFirstIndex()) {\n         final var future = new CompletableFuture<Void>();\n         logger.debug(\"Compacting log up from {} up to {}\", reader.getFirstIndex(), index);\n-        raft.getThreadContext().execute(() -> safeCompact(index, future));\n+        threadContext.execute(() -> safeCompact(index, future));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db02986ad8c68ce8006f204c941c1c359b9c56fc"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1NzU0NA==", "bodyText": "You are right. It is also always called from raft context.", "url": "https://github.com/camunda-cloud/zeebe/pull/4214#discussion_r402257544", "createdAt": "2020-04-02T11:59:37Z", "author": {"login": "deepthidevaki"}, "path": "broker/src/main/java/io/zeebe/broker/clustering/atomix/ZeebeRaftStateMachine.java", "diffHunk": "@@ -64,7 +64,7 @@ public ThreadContext executor() {\n       if (index > reader.getFirstIndex()) {\n         final var future = new CompletableFuture<Void>();\n         logger.debug(\"Compacting log up from {} up to {}\", reader.getFirstIndex(), index);\n-        raft.getThreadContext().execute(() -> safeCompact(index, future));\n+        threadContext.execute(() -> safeCompact(index, future));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1NDM5Ng=="}, "originalCommit": {"oid": "db02986ad8c68ce8006f204c941c1c359b9c56fc"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4840, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}