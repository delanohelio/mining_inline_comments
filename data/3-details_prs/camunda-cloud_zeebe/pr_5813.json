{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5Mjk5MjA1", "number": 5813, "title": "fix(broker): handle failures during transitions", "bodyText": "Description\nWe've seen nodes get stuck in invalid states because of errors during role transitions. This PR makes improves handling of these failures by:\n\nensuring that all steps are closed even if one of them fails (nothing is gained by leaving some pieces of state open)\npartition listeners are notified if a transition fails or if the partition transitions to inactive (we want to close things like the commandApiService even if the follower wasn't successfully installed)\nif an error occurs during the closing part of a transition, we still try to install the new partition (some closing failures are expected in which case we shouldn't prevent the install)\nif an error occurs while trying to install the leader partition, we step down to follower\nif an error occurs while trying to install the follower partition, we become inactive\n\nRelated issues\ncloses #5117\ncloses #5291\nDefinition of Done\nNot all items need to be done depending on the issue and the pull request.\nCode changes:\n\n The changes are backwards compatibility with previous versions\n If it fixes a bug then PRs are created to backport the fix to the last two minor versions\n\nTesting:\n\n There are unit/integration tests that verify all acceptance criterias of the issue\n New tests are written to ensure backwards compatibility with further versions\n The behavior is tested manually\n The impact of the changes is verified by a benchmark\n\nDocumentation:\n\n The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\n New content is added to the release announcement", "createdAt": "2020-11-11T16:11:26Z", "url": "https://github.com/camunda-cloud/zeebe/pull/5813", "merged": true, "mergeCommit": {"oid": "65f91233f9fb362cf04c71c2f91becf4ab59f2b6"}, "closed": true, "closedAt": "2020-11-20T11:13:55Z", "author": {"login": "MiguelPires"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddAygGAFqTUzMTAxMjgzOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdeTX9oABqjQwMTk4MDg1Mzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMDEyODM5", "url": "https://github.com/camunda-cloud/zeebe/pull/5813#pullrequestreview-531012839", "createdAt": "2020-11-16T07:55:01Z", "commit": {"oid": "7bfd3beffd8b73081828614b5b6388864eb4419c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwNzo1NTowMVrOHzraDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODoyODoxMFrOHzsZuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk1MDYwNw==", "bodyText": "If the node leaves the partition, quorum will also change from 3 to 2. We don't want to do that.", "url": "https://github.com/camunda-cloud/zeebe/pull/5813#discussion_r523950607", "createdAt": "2020-11-16T07:55:01Z", "author": {"login": "deepthidevaki"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -272,11 +272,17 @@ public void onRecovered() {\n         });\n   }\n \n-  private void onInstallFailure() {\n+  private void onInstallFailure(final long term) {\n     zeebePartitionHealth.setServicesInstalled(false);\n+    context\n+        .getPartitionListeners()\n+        .forEach(l -> l.onBecomingInactive(context.getPartitionId(), term));\n+\n     if (context.getRaftPartition().getRole() == Role.LEADER) {\n       LOG.info(\"Unexpected failures occurred when installing leader services, stepping down\");\n       context.getRaftPartition().stepDown();\n+    } else {\n+      context.getRaftPartition().leave();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bfd3beffd8b73081828614b5b6388864eb4419c"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk1MjA5Mw==", "bodyText": "This log level can be debug, right?", "url": "https://github.com/camunda-cloud/zeebe/pull/5813#discussion_r523952093", "createdAt": "2020-11-16T07:58:19Z", "author": {"login": "deepthidevaki"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/impl/PartitionTransitionImpl.java", "diffHunk": "@@ -107,23 +100,41 @@ private void installPartition(\n             });\n   }\n \n+  private void tryCloseStep(final PartitionStep step) {\n+    // close if there's anything to close. Don't add to 'opened' list, since the open did not\n+    // complete, the close might also fail but that shouldn't prevent the next transition\n+    try {\n+      step.close(context);\n+    } catch (final Exception e) {\n+      LOG.info(\"Couldn't close partition step '{}' that failed to open\", step.getName(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bfd3beffd8b73081828614b5b6388864eb4419c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk1MzM1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    (v, newThrowable) -> {\n          \n          \n            \n                    (v, closeFailedError) -> {", "url": "https://github.com/camunda-cloud/zeebe/pull/5813#discussion_r523953351", "createdAt": "2020-11-16T08:00:50Z", "author": {"login": "deepthidevaki"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/impl/PartitionTransitionImpl.java", "diffHunk": "@@ -132,26 +143,22 @@ private void stepByStepClosing(\n \n     final ActorFuture<Void> closeFuture = step.close(context);\n     closeFuture.onComplete(\n-        (v, t) -> {\n-          if (t == null) {\n+        (v, newThrowable) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bfd3beffd8b73081828614b5b6388864eb4419c"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk1NTc3OA==", "bodyText": "How does this work on the gateway side? Would it work during rolling upgrade, gateway and broker is on different versions?", "url": "https://github.com/camunda-cloud/zeebe/pull/5813#discussion_r523955778", "createdAt": "2020-11-16T08:06:29Z", "author": {"login": "deepthidevaki"}, "path": "protocol/src/main/resources/protocol.xml", "diffHunk": "@@ -55,6 +55,7 @@\n     <enum name=\"PartitionRole\" encodingType=\"uint8\">\n       <validValue name=\"LEADER\">0</validValue>\n       <validValue name=\"FOLLOWER\">1</validValue>\n+      <validValue name=\"INACTIVE\">2</validValue>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bfd3beffd8b73081828614b5b6388864eb4419c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk2NjkwNQ==", "bodyText": "We should either \"stop\" the raft server or transition to \"Role.INACTIVE\". Transitioning to Inactive will be safer, because several other modules might expect a running raft server.", "url": "https://github.com/camunda-cloud/zeebe/pull/5813#discussion_r523966905", "createdAt": "2020-11-16T08:28:10Z", "author": {"login": "deepthidevaki"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -272,11 +272,17 @@ public void onRecovered() {\n         });\n   }\n \n-  private void onInstallFailure() {\n+  private void onInstallFailure(final long term) {\n     zeebePartitionHealth.setServicesInstalled(false);\n+    context\n+        .getPartitionListeners()\n+        .forEach(l -> l.onBecomingInactive(context.getPartitionId(), term));\n+\n     if (context.getRaftPartition().getRole() == Role.LEADER) {\n       LOG.info(\"Unexpected failures occurred when installing leader services, stepping down\");\n       context.getRaftPartition().stepDown();\n+    } else {\n+      context.getRaftPartition().leave();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk1MDYwNw=="}, "originalCommit": {"oid": "7bfd3beffd8b73081828614b5b6388864eb4419c"}, "originalPosition": 56}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7bfd3beffd8b73081828614b5b6388864eb4419c", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/7bfd3beffd8b73081828614b5b6388864eb4419c", "committedDate": "2020-11-11T15:47:05Z", "message": "fix(broker): handle failures during transitions"}, "afterCommit": {"oid": "1885b611ca2d4f6a1d1f8f9f55a3a156eb4d2b57", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/1885b611ca2d4f6a1d1f8f9f55a3a156eb4d2b57", "committedDate": "2020-11-18T10:13:19Z", "message": "chore(atomix): review feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MTc1Njk4", "url": "https://github.com/camunda-cloud/zeebe/pull/5813#pullrequestreview-535175698", "createdAt": "2020-11-20T07:38:41Z", "commit": {"oid": "1885b611ca2d4f6a1d1f8f9f55a3a156eb4d2b57"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNzozODo0MVrOH3Dmaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNzo0MjowNlrOH3DrtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5MjcxNQ==", "bodyText": "Add @Override", "url": "https://github.com/camunda-cloud/zeebe/pull/5813#discussion_r527492715", "createdAt": "2020-11-20T07:38:41Z", "author": {"login": "deepthidevaki"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/impl/DefaultRaftServer.java", "diffHunk": "@@ -149,6 +149,17 @@ public void removeFailureListener(final Runnable failureListener) {\n     return future;\n   }\n \n+  public CompletableFuture<Void> goInactive() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1885b611ca2d4f6a1d1f8f9f55a3a156eb4d2b57"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5MzczNw==", "bodyText": "May be also add a log here?", "url": "https://github.com/camunda-cloud/zeebe/pull/5813#discussion_r527493737", "createdAt": "2020-11-20T07:41:09Z", "author": {"login": "deepthidevaki"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -272,11 +272,17 @@ public void onRecovered() {\n         });\n   }\n \n-  private void onInstallFailure() {\n+  private void onInstallFailure(final long term) {\n     zeebePartitionHealth.setServicesInstalled(false);\n+    context\n+        .getPartitionListeners()\n+        .forEach(l -> l.onBecomingInactive(context.getPartitionId(), term));\n+\n     if (context.getRaftPartition().getRole() == Role.LEADER) {\n       LOG.info(\"Unexpected failures occurred when installing leader services, stepping down\");\n       context.getRaftPartition().stepDown();\n+    } else {\n+      context.getRaftPartition().goInactive();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1885b611ca2d4f6a1d1f8f9f55a3a156eb4d2b57"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5Mzk1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThatNoException().isThrownBy(() -> latch.await(30, TimeUnit.SECONDS));\n          \n          \n            \n                assertThat(latch.await(30, TimeUnit.SECONDS)).isTrue();", "url": "https://github.com/camunda-cloud/zeebe/pull/5813#discussion_r527493953", "createdAt": "2020-11-20T07:41:51Z", "author": {"login": "deepthidevaki"}, "path": "broker/src/test/java/io/zeebe/broker/system/partitions/ZeebePartitionTest.java", "diffHunk": "@@ -100,6 +107,76 @@ public void shouldCallOnRecoveredOnAddFailureListenerAndHealthy() {\n     verify(failureListener, only()).onRecovered();\n   }\n \n+  @Test\n+  public void shouldStepDownAfterFailedLeaderTransition() {\n+    // given\n+    final ZeebePartition partition = new ZeebePartition(ctx, transition);\n+    schedulerRule.submitActor(partition);\n+    final CountDownLatch latch = new CountDownLatch(1);\n+\n+    when(transition.toLeader())\n+        .thenReturn(CompletableActorFuture.completedExceptionally(new Exception(\"expected\")));\n+    when(transition.toFollower())\n+        .then(\n+            invocation -> {\n+              latch.countDown();\n+              return CompletableActorFuture.completed(null);\n+            });\n+    when(raft.getRole()).thenReturn(Role.LEADER);\n+    when(raft.stepDown())\n+        .then(\n+            invocation -> {\n+              partition.onNewRole(Role.FOLLOWER, 2);\n+              return CompletableFuture.completedFuture(null);\n+            });\n+\n+    // when\n+    partition.onNewRole(Role.LEADER, 1);\n+    schedulerRule.workUntilDone();\n+    assertThatNoException().isThrownBy(() -> latch.await(30, TimeUnit.SECONDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1885b611ca2d4f6a1d1f8f9f55a3a156eb4d2b57"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5NDA2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThatNoException().isThrownBy(() -> latch.await(30, TimeUnit.SECONDS));\n          \n          \n            \n                assertThat(latch.await(30, TimeUnit.SECONDS)).isTrue();", "url": "https://github.com/camunda-cloud/zeebe/pull/5813#discussion_r527494068", "createdAt": "2020-11-20T07:42:06Z", "author": {"login": "deepthidevaki"}, "path": "broker/src/test/java/io/zeebe/broker/system/partitions/ZeebePartitionTest.java", "diffHunk": "@@ -100,6 +107,76 @@ public void shouldCallOnRecoveredOnAddFailureListenerAndHealthy() {\n     verify(failureListener, only()).onRecovered();\n   }\n \n+  @Test\n+  public void shouldStepDownAfterFailedLeaderTransition() {\n+    // given\n+    final ZeebePartition partition = new ZeebePartition(ctx, transition);\n+    schedulerRule.submitActor(partition);\n+    final CountDownLatch latch = new CountDownLatch(1);\n+\n+    when(transition.toLeader())\n+        .thenReturn(CompletableActorFuture.completedExceptionally(new Exception(\"expected\")));\n+    when(transition.toFollower())\n+        .then(\n+            invocation -> {\n+              latch.countDown();\n+              return CompletableActorFuture.completed(null);\n+            });\n+    when(raft.getRole()).thenReturn(Role.LEADER);\n+    when(raft.stepDown())\n+        .then(\n+            invocation -> {\n+              partition.onNewRole(Role.FOLLOWER, 2);\n+              return CompletableFuture.completedFuture(null);\n+            });\n+\n+    // when\n+    partition.onNewRole(Role.LEADER, 1);\n+    schedulerRule.workUntilDone();\n+    assertThatNoException().isThrownBy(() -> latch.await(30, TimeUnit.SECONDS));\n+\n+    // then\n+    final InOrder order = inOrder(transition, raft);\n+    order.verify(transition).toLeader();\n+    order.verify(raft).stepDown();\n+    order.verify(transition).toFollower();\n+  }\n+\n+  @Test\n+  public void shouldGoInactiveAfterFailedFollowerTransition() {\n+    // given\n+    final ZeebePartition partition = new ZeebePartition(ctx, transition);\n+    schedulerRule.submitActor(partition);\n+    final CountDownLatch latch = new CountDownLatch(1);\n+\n+    when(transition.toFollower())\n+        .thenReturn(CompletableActorFuture.completedExceptionally(new Exception(\"expected\")));\n+    when(transition.toInactive())\n+        .then(\n+            invocation -> {\n+              latch.countDown();\n+              return CompletableActorFuture.completed(null);\n+            });\n+    when(raft.getRole()).thenReturn(Role.FOLLOWER);\n+    when(raft.goInactive())\n+        .then(\n+            invocation -> {\n+              partition.onNewRole(Role.INACTIVE, 2);\n+              return CompletableFuture.completedFuture(null);\n+            });\n+\n+    // when\n+    partition.onNewRole(Role.FOLLOWER, 1);\n+    schedulerRule.workUntilDone();\n+    assertThatNoException().isThrownBy(() -> latch.await(30, TimeUnit.SECONDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1885b611ca2d4f6a1d1f8f9f55a3a156eb4d2b57"}, "originalPosition": 114}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MjE0NjEz", "url": "https://github.com/camunda-cloud/zeebe/pull/5813#pullrequestreview-535214613", "createdAt": "2020-11-20T08:35:09Z", "commit": {"oid": "8fb6d9b8c48defe125d2ec0763945411c22e1de4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c01553b1ddd9d546ff5f2995aa386b70ba3a12f9", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/c01553b1ddd9d546ff5f2995aa386b70ba3a12f9", "committedDate": "2020-11-20T08:48:58Z", "message": "fix(broker): handle failures during transitions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8fb6d9b8c48defe125d2ec0763945411c22e1de4", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/8fb6d9b8c48defe125d2ec0763945411c22e1de4", "committedDate": "2020-11-20T08:33:53Z", "message": "chore(broker): test improvements"}, "afterCommit": {"oid": "c01553b1ddd9d546ff5f2995aa386b70ba3a12f9", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/c01553b1ddd9d546ff5f2995aa386b70ba3a12f9", "committedDate": "2020-11-20T08:48:58Z", "message": "fix(broker): handle failures during transitions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2376, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}