{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2ODM2OTA1", "number": 3736, "title": "fix(broker): merge variable on output mapping", "bodyText": "Description\n\na document variable is merged using an output mapping that adds a new entry to the document, instead of replacing the document\n\nRelated issues\ncloses #3621\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-01-24T13:29:59Z", "url": "https://github.com/camunda-cloud/zeebe/pull/3736", "merged": true, "mergeCommit": {"oid": "294ec40974f8b7204c3363694325c1dc0722ec8a"}, "closed": true, "closedAt": "2020-01-31T15:27:25Z", "author": {"login": "saig0"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_rPuTgFqTM1MTM0OTk4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_wi6UABqjI5OTczOTc0MDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMzQ5OTg0", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#pullrequestreview-351349984", "createdAt": "2020-01-31T08:24:44Z", "commit": {"oid": "3f5a4006663b3ee74952980ce2d83e01fddbc982"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwODoyNDo0NFrOFkEMJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwODo1NDo1MFrOFkE1GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2MTcwMA==", "bodyText": "Why we haven't used that before ? \ud83e\udd14", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373361700", "createdAt": "2020-01-31T08:24:44Z", "author": {"login": "Zelldon"}, "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/deployment/model/element/ExecutableFlowNode.java", "diffHunk": "@@ -16,8 +16,8 @@\n   private final List<ExecutableSequenceFlow> incoming = new ArrayList<>();\n   private final List<ExecutableSequenceFlow> outgoing = new ArrayList<>();\n \n-  private Mapping[] inputMappings = new Mapping[0];\n-  private Mapping[] outputMappings = new Mapping[0];\n+  private Mappings inputMappings = new Mappings();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5a4006663b3ee74952980ce2d83e01fddbc982"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2MjExOQ==", "bodyText": "I like to have these kind of variables hasOutputMappings the ! are often overseen", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373362119", "createdAt": "2020-01-31T08:26:05Z", "author": {"login": "Zelldon"}, "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/handlers/IOMappingHelper.java", "diffHunk": "@@ -45,34 +48,56 @@\n       variablesState.removeTemporaryVariables(elementInstanceKey);\n     }\n \n-    if (hasOutputMappings) {\n-      mergeTool.reset();\n-\n-      final DirectBuffer variables =\n-          determineVariables(variablesState, elementInstanceKey, outputMappings);\n-\n-      mergeTool.mergeDocumentStrictly(variables, outputMappings);\n-      final DirectBuffer mergedVariables = mergeTool.writeResultToBuffer();\n+    if (!outputMappings.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5a4006663b3ee74952980ce2d83e01fddbc982"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2Mjc3Mw==", "bodyText": "this is the old index right ? \ud83d\ude05", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373362773", "createdAt": "2020-01-31T08:28:08Z", "author": {"login": "Zelldon"}, "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/handlers/IOMappingHelper.java", "diffHunk": "@@ -45,34 +48,56 @@\n       variablesState.removeTemporaryVariables(elementInstanceKey);\n     }\n \n-    if (hasOutputMappings) {\n-      mergeTool.reset();\n-\n-      final DirectBuffer variables =\n-          determineVariables(variablesState, elementInstanceKey, outputMappings);\n-\n-      mergeTool.mergeDocumentStrictly(variables, outputMappings);\n-      final DirectBuffer mergedVariables = mergeTool.writeResultToBuffer();\n+    if (!outputMappings.isEmpty()) {\n+      final DirectBuffer mergedVariables =\n+          mergeOutputVariables(variablesState, elementInstanceKey, outputMappings);\n \n       variablesState.setVariablesFromDocument(\n           getVariableScopeKey(context), workflowKey, mergedVariables);\n     }\n   }\n \n+  private DirectBuffer mergeOutputVariables(\n+      final VariablesState variablesState,\n+      final long elementInstanceKey,\n+      final Mappings outputMappings) {\n+\n+    mergeTool.reset();\n+\n+    // fetch the variables from the target mappings to allow merging with existing variables\n+    final DirectBuffer targetVariables =\n+        variablesState.getVariablesAsDocument(\n+            elementInstanceKey, outputMappings.getTargetVariableNames());\n+\n+    // copy variables to not override them with next variable state access\n+    buffer.putBytes(0, targetVariables, 0, targetVariables.capacity());\n+    bufferView.wrap(buffer, 0, targetVariables.capacity());\n+\n+    mergeTool.mergeDocument(bufferView);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5a4006663b3ee74952980ce2d83e01fddbc982"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2MjkwMQ==", "bodyText": "I'm wondering why we haven't found this issue before \ud83d\ude05", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373362901", "createdAt": "2020-01-31T08:28:26Z", "author": {"login": "Zelldon"}, "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/handlers/IOMappingHelper.java", "diffHunk": "@@ -45,34 +48,56 @@\n       variablesState.removeTemporaryVariables(elementInstanceKey);\n     }\n \n-    if (hasOutputMappings) {\n-      mergeTool.reset();\n-\n-      final DirectBuffer variables =\n-          determineVariables(variablesState, elementInstanceKey, outputMappings);\n-\n-      mergeTool.mergeDocumentStrictly(variables, outputMappings);\n-      final DirectBuffer mergedVariables = mergeTool.writeResultToBuffer();\n+    if (!outputMappings.isEmpty()) {\n+      final DirectBuffer mergedVariables =\n+          mergeOutputVariables(variablesState, elementInstanceKey, outputMappings);\n \n       variablesState.setVariablesFromDocument(\n           getVariableScopeKey(context), workflowKey, mergedVariables);\n     }\n   }\n \n+  private DirectBuffer mergeOutputVariables(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5a4006663b3ee74952980ce2d83e01fddbc982"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2NDExNQ==", "bodyText": "Do you remember why this is called strictly ? \ud83d\ude05", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373364115", "createdAt": "2020-01-31T08:32:08Z", "author": {"login": "Zelldon"}, "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/handlers/IOMappingHelper.java", "diffHunk": "@@ -45,34 +48,56 @@\n       variablesState.removeTemporaryVariables(elementInstanceKey);\n     }\n \n-    if (hasOutputMappings) {\n-      mergeTool.reset();\n-\n-      final DirectBuffer variables =\n-          determineVariables(variablesState, elementInstanceKey, outputMappings);\n-\n-      mergeTool.mergeDocumentStrictly(variables, outputMappings);\n-      final DirectBuffer mergedVariables = mergeTool.writeResultToBuffer();\n+    if (!outputMappings.isEmpty()) {\n+      final DirectBuffer mergedVariables =\n+          mergeOutputVariables(variablesState, elementInstanceKey, outputMappings);\n \n       variablesState.setVariablesFromDocument(\n           getVariableScopeKey(context), workflowKey, mergedVariables);\n     }\n   }\n \n+  private DirectBuffer mergeOutputVariables(\n+      final VariablesState variablesState,\n+      final long elementInstanceKey,\n+      final Mappings outputMappings) {\n+\n+    mergeTool.reset();\n+\n+    // fetch the variables from the target mappings to allow merging with existing variables\n+    final DirectBuffer targetVariables =\n+        variablesState.getVariablesAsDocument(\n+            elementInstanceKey, outputMappings.getTargetVariableNames());\n+\n+    // copy variables to not override them with next variable state access\n+    buffer.putBytes(0, targetVariables, 0, targetVariables.capacity());\n+    bufferView.wrap(buffer, 0, targetVariables.capacity());\n+\n+    mergeTool.mergeDocument(bufferView);\n+\n+    final DirectBuffer sourceVariables =\n+        variablesState.getVariablesAsDocument(\n+            elementInstanceKey, outputMappings.getSourceVariableNames());\n+\n+    mergeTool.mergeDocumentStrictly(sourceVariables, outputMappings.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5a4006663b3ee74952980ce2d83e01fddbc982"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2NTQ5Ng==", "bodyText": "why \ud83d\ude05", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373365496", "createdAt": "2020-01-31T08:36:25Z", "author": {"login": "Zelldon"}, "path": "json-path/src/test/java/io/zeebe/msgpack/mapping/MappingMergeParameterizedTest.java", "diffHunk": "@@ -322,25 +322,6 @@\n             // expected result\n             \"{'obj':{'test':'value','newFoo':1},'int':1}\"\n           },\n-          // 37. Test zeebe-io/zeebe#297", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5a4006663b3ee74952980ce2d83e01fddbc982"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM2NTY5Mg==", "bodyText": "I thought we had this utility before \ud83d\ude48 :D", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373365692", "createdAt": "2020-01-31T08:36:57Z", "author": {"login": "Zelldon"}, "path": "json-path/src/main/java/io/zeebe/msgpack/mapping/Mappings.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.msgpack.mapping;\n+\n+import io.zeebe.msgpack.jsonpath.JsonPathQuery;\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.agrona.DirectBuffer;\n+\n+public class Mappings {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5a4006663b3ee74952980ce2d83e01fddbc982"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3MTg4OA==", "bodyText": "This test is green without the fix \ud83e\udd14", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373371888", "createdAt": "2020-01-31T08:53:59Z", "author": {"login": "Zelldon"}, "path": "engine/src/test/java/io/zeebe/engine/processor/workflow/variable/mapping/MessageOutputMappingTest.java", "diffHunk": "@@ -104,6 +104,12 @@\n         activityVariables(tuple(\"x\", \"{\\\"y\\\":2}\")),\n         scopeVariables(tuple(\"y\", \"2\"))\n       },\n+      {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5a4006663b3ee74952980ce2d83e01fddbc982"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3MTkyMw==", "bodyText": "This test is green without the fix \ud83e\udd14", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373371923", "createdAt": "2020-01-31T08:54:04Z", "author": {"login": "Zelldon"}, "path": "engine/src/test/java/io/zeebe/engine/processor/workflow/variable/mapping/JobOutputMappingTest.java", "diffHunk": "@@ -100,6 +100,12 @@\n         activityVariables(tuple(\"x\", \"{\\\"y\\\":2}\")),\n         scopeVariables(tuple(\"y\", \"2\"))\n       },\n+      {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5a4006663b3ee74952980ce2d83e01fddbc982"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3MjEwNg==", "bodyText": "This test is green without the fix \ud83e\udd14", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373372106", "createdAt": "2020-01-31T08:54:36Z", "author": {"login": "Zelldon"}, "path": "engine/src/test/java/io/zeebe/engine/processor/workflow/variable/mapping/ActivityOutputMappingTest.java", "diffHunk": "@@ -72,6 +72,16 @@\n         scopeVariables(tuple(\"z\", \"{\\\"y\\\":2}\"))\n       },\n       {\"{'x': {'y': 2}}\", mapping(b -> b.zeebeOutput(\"x.y\", \"z\")), scopeVariables(tuple(\"z\", \"2\"))},\n+      {\n+        \"{'z': {'x': 1}, 'y': 2}\",\n+        mapping(b -> b.zeebeOutput(\"y\", \"z.y\")),\n+        scopeVariables(tuple(\"z\", \"{\\\"x\\\":1,\\\"y\\\":2}\"))\n+      },\n+      {\n+        \"{'x': 1, 'y': 2}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5a4006663b3ee74952980ce2d83e01fddbc982"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM3MjE4NQ==", "bodyText": "This is the only one which failed without the fix \ud83d\ude05", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#discussion_r373372185", "createdAt": "2020-01-31T08:54:50Z", "author": {"login": "Zelldon"}, "path": "engine/src/test/java/io/zeebe/engine/processor/workflow/variable/mapping/ActivityOutputMappingTest.java", "diffHunk": "@@ -72,6 +72,16 @@\n         scopeVariables(tuple(\"z\", \"{\\\"y\\\":2}\"))\n       },\n       {\"{'x': {'y': 2}}\", mapping(b -> b.zeebeOutput(\"x.y\", \"z\")), scopeVariables(tuple(\"z\", \"2\"))},\n+      {\n+        \"{'z': {'x': 1}, 'y': 2}\",\n+        mapping(b -> b.zeebeOutput(\"y\", \"z.y\")),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5a4006663b3ee74952980ce2d83e01fddbc982"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNTU4NTMy", "url": "https://github.com/camunda-cloud/zeebe/pull/3736#pullrequestreview-351558532", "createdAt": "2020-01-31T14:55:09Z", "commit": {"oid": "9e19037182d39f920f744bf918752a6c6fd6aba3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "294ec40974f8b7204c3363694325c1dc0722ec8a", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/294ec40974f8b7204c3363694325c1dc0722ec8a", "committedDate": "2020-01-31T15:04:36Z", "message": "fix(broker): merge variable on output mapping\n\n* a document variable is merged using an output mapping that adds a new entry to the document, instead of replacing the document"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e19037182d39f920f744bf918752a6c6fd6aba3", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/9e19037182d39f920f744bf918752a6c6fd6aba3", "committedDate": "2020-01-31T14:45:40Z", "message": "chore(json-path): remove non-strict merging method"}, "afterCommit": {"oid": "294ec40974f8b7204c3363694325c1dc0722ec8a", "author": {"user": {"login": "Zelldon", "name": "Christopher Zell"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/294ec40974f8b7204c3363694325c1dc0722ec8a", "committedDate": "2020-01-31T15:04:36Z", "message": "fix(broker): merge variable on output mapping\n\n* a document variable is merged using an output mapping that adds a new entry to the document, instead of replacing the document"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3105, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}