{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NzAyNDU3", "number": 3923, "title": "fix(broker): broadcast snapshots to static set of followers", "bodyText": "Description\nRemoves our dependency on the buggy ClusterEventService for snapshot replication, and instead broadcasting is changed to sending to all other reachable nodes in our Raft for the given topic. Removing this dependency fixes known issues where topic subscriptions are not propagated in certain cases, resulting in missed snapshots.\nThis keeps the same guarantees as the previous implementation, insofar as it may still fail to send some chunks as we perform UDP unicast.\nThis introduces a very thin abstraction over messaging to other Raft nodes such that our services do not need to know much about Atomix.\nRelated issues\ncloses #3763\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-02-25T17:09:00Z", "url": "https://github.com/camunda-cloud/zeebe/pull/3923", "merged": true, "mergeCommit": {"oid": "03a854adf9c6fa1130680976f84a6012ee848f4f"}, "closed": true, "closedAt": "2020-03-11T16:44:07Z", "author": {"login": "npepinpe"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIFj21AFqTM2NDg0MTY2MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMppddABqjMxMTk1Njc4OTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODQxNjYw", "url": "https://github.com/camunda-cloud/zeebe/pull/3923#pullrequestreview-364841660", "createdAt": "2020-02-26T12:00:42Z", "commit": {"oid": "c1cbeba2b6a6802360ea607151465004d4089763"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMjowMDo0MlrOFuo4-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMjowMToxMlrOFuo5-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ0ODc2Mw==", "bodyText": "Could we remove the Raft prefix, since it is not really related to that right?", "url": "https://github.com/camunda-cloud/zeebe/pull/3923#discussion_r384448763", "createdAt": "2020-02-26T12:00:42Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/RaftMessagingService.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.partitions;\n+\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.Executor;\n+import java.util.function.Consumer;\n+\n+/** Abstracts away messaging to other members of a given Raft - add operations as needed. */\n+public interface RaftMessagingService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1cbeba2b6a6802360ea607151465004d4089763"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ0OTAxNg==", "bodyText": "just member in the cluster - whether it is a raft member is more implementation specific or?", "url": "https://github.com/camunda-cloud/zeebe/pull/3923#discussion_r384449016", "createdAt": "2020-02-26T12:01:12Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/RaftMessagingService.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.partitions;\n+\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.Executor;\n+import java.util.function.Consumer;\n+\n+/** Abstracts away messaging to other members of a given Raft - add operations as needed. */\n+public interface RaftMessagingService {\n+\n+  /**\n+   * Subscribes to a given subject - if another Raft member sends a message on this topic, the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1cbeba2b6a6802360ea607151465004d4089763"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c1cbeba2b6a6802360ea607151465004d4089763", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/c1cbeba2b6a6802360ea607151465004d4089763", "committedDate": "2020-02-25T17:04:16Z", "message": "chore(broker): broadcast snapshots to static set of followers\n\n- abstracts away Atomix from the StateReplication by hiding it behind a\n  thin RaftMessagingService interface, which allows sending messages to\n  other Raft members"}, "afterCommit": {"oid": "163dd7c2372b43689d4d1b39345bdff1f8ec0ae9", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/163dd7c2372b43689d4d1b39345bdff1f8ec0ae9", "committedDate": "2020-02-26T13:15:21Z", "message": "chore(broker): remove reference to Raft in favor of Partition"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14c2f6bb82d789539ad4e0ac055dbd8c3a497b89", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/14c2f6bb82d789539ad4e0ac055dbd8c3a497b89", "committedDate": "2020-02-26T15:40:38Z", "message": "chore(broker): handle potential NPE when filtering reachable members"}, "afterCommit": {"oid": "15f894f8faee8dc1485e2025b3603550505a3816", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/15f894f8faee8dc1485e2025b3603550505a3816", "committedDate": "2020-03-06T10:54:56Z", "message": "chore(qa): add more snapshot replication integration tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "15f894f8faee8dc1485e2025b3603550505a3816", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/15f894f8faee8dc1485e2025b3603550505a3816", "committedDate": "2020-03-06T10:54:56Z", "message": "chore(qa): add more snapshot replication integration tests"}, "afterCommit": {"oid": "8b2964183f3bcde6289245ef7a020bedb8bf7aea", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/8b2964183f3bcde6289245ef7a020bedb8bf7aea", "committedDate": "2020-03-06T12:05:57Z", "message": "chore(qa): add more snapshot replication integration tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMzU5NTQx", "url": "https://github.com/camunda-cloud/zeebe/pull/3923#pullrequestreview-370359541", "createdAt": "2020-03-06T14:27:14Z", "commit": {"oid": "8b2964183f3bcde6289245ef7a020bedb8bf7aea"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoyNzoxNFrOFy6iVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoyNzoxNFrOFy6iVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzMjE4Mg==", "bodyText": "This only works when all nodes configured as initial entries right?", "url": "https://github.com/camunda-cloud/zeebe/pull/3923#discussion_r388932182", "createdAt": "2020-03-06T14:27:14Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/impl/AtomixPartitionMessagingService.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.partitions.impl;\n+\n+import io.atomix.cluster.ClusterMembershipService;\n+import io.atomix.cluster.Member;\n+import io.atomix.cluster.MemberId;\n+import io.atomix.cluster.messaging.ClusterCommunicationService;\n+import io.zeebe.broker.system.partitions.PartitionMessagingService;\n+import java.nio.ByteBuffer;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.concurrent.Executor;\n+import java.util.function.Consumer;\n+import java.util.stream.Collectors;\n+\n+public class AtomixPartitionMessagingService implements PartitionMessagingService {\n+  private final ClusterCommunicationService communicationService;\n+  private final ClusterMembershipService clusterMembershipService;\n+  private final Set<MemberId> otherMembers;\n+\n+  public AtomixPartitionMessagingService(\n+      final ClusterCommunicationService communicationService,\n+      final ClusterMembershipService clusterMembershipService,\n+      final Collection<MemberId> members) {\n+    this.communicationService = communicationService;\n+    this.clusterMembershipService = clusterMembershipService;\n+    this.otherMembers = getOtherMemberIds(clusterMembershipService, members);\n+  }\n+\n+  @Override\n+  public void subscribe(\n+      final String subject, final Consumer<ByteBuffer> consumer, final Executor executor) {\n+    communicationService.subscribe(subject, consumer, executor);\n+  }\n+\n+  @Override\n+  public void broadcast(final String subject, final ByteBuffer payload) {\n+    final var reachableMembers =\n+        otherMembers.stream().filter(this::isReachable).collect(Collectors.toUnmodifiableSet());\n+\n+    communicationService.multicast(subject, payload, reachableMembers);\n+  }\n+\n+  @Override\n+  public void unsubscribe(final String subject) {\n+    communicationService.unsubscribe(subject);\n+  }\n+\n+  private Set<MemberId> getOtherMemberIds(\n+      final ClusterMembershipService clusterMembershipService, final Collection<MemberId> members) {\n+    final var localMemberId = clusterMembershipService.getLocalMember().id();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b2964183f3bcde6289245ef7a020bedb8bf7aea"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fabc605aa262d820b3bb43c18d787331891b087d", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/fabc605aa262d820b3bb43c18d787331891b087d", "committedDate": "2020-03-11T11:36:28Z", "message": "chore(engine): add serialization to ByteBuffer"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b2964183f3bcde6289245ef7a020bedb8bf7aea", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/8b2964183f3bcde6289245ef7a020bedb8bf7aea", "committedDate": "2020-03-06T12:05:57Z", "message": "chore(qa): add more snapshot replication integration tests"}, "afterCommit": {"oid": "59bc0c7325088293b1c630315f22e8925a352181", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/59bc0c7325088293b1c630315f22e8925a352181", "committedDate": "2020-03-11T11:41:27Z", "message": "chore(qa): add more snapshot replication integration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bfb1449b000ca8b9c11bda694bcd3aebcecb1c3", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/1bfb1449b000ca8b9c11bda694bcd3aebcecb1c3", "committedDate": "2020-03-11T16:24:26Z", "message": "chore(broker): broadcast snapshots to static set of followers\n\n- abstracts away Atomix from the StateReplication by hiding it behind a\n  thin RaftMessagingService interface, which allows sending messages to\n  other Raft members"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d55c306db8625b59035ba5c2c4efafdb4892ac9", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/2d55c306db8625b59035ba5c2c4efafdb4892ac9", "committedDate": "2020-03-11T16:24:26Z", "message": "chore(qa): add more snapshot replication integration tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "877eabfb762715b2ad4c27d0f860d58e61aa6ddc", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/877eabfb762715b2ad4c27d0f860d58e61aa6ddc", "committedDate": "2020-03-11T15:55:02Z", "message": "chore(qa): increase snapshot period to avoid unexpected snapshots"}, "afterCommit": {"oid": "2d55c306db8625b59035ba5c2c4efafdb4892ac9", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/2d55c306db8625b59035ba5c2c4efafdb4892ac9", "committedDate": "2020-03-11T16:24:26Z", "message": "chore(qa): add more snapshot replication integration tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3168, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}