{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4OTUzMjEy", "number": 4804, "title": "Engine clean up", "bodyText": "Description\n\nremove old BPMN handlers\nremove BPMN steps and lifecycle binding\nremove step context, event output and workflow engine state\n\nRelated issues\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-06-24T04:27:57Z", "url": "https://github.com/camunda-cloud/zeebe/pull/4804", "merged": true, "mergeCommit": {"oid": "d937676cde6e12a7d8584860e9f3bf900a710385"}, "closed": true, "closedAt": "2020-07-03T05:32:47Z", "author": {"login": "saig0"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcvDLqzgBqjM0ODY1ODk4NDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxLhf7gBqjM1MDk0OTcyODk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e84b21c766abea7197a42fdd2bca60e93cba3805", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/e84b21c766abea7197a42fdd2bca60e93cba3805", "committedDate": "2020-06-26T12:51:50Z", "message": "chore(engine): add java-doc"}, "afterCommit": {"oid": "e8843f86017363fc4d05b24d6dec5e4067f446df", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/e8843f86017363fc4d05b24d6dec5e4067f446df", "committedDate": "2020-06-26T13:15:50Z", "message": "chore(engine): clean up BPMN behaviors\n\n* don't expose the variable state\n* extract incident record wrapper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MDc1NjQ5", "url": "https://github.com/camunda-cloud/zeebe/pull/4804#pullrequestreview-439075649", "createdAt": "2020-06-29T12:08:39Z", "commit": {"oid": "e8843f86017363fc4d05b24d6dec5e4067f446df"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjowODozOVrOGqN1_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjo1OTo1MFrOGqPwdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkyMDE5MA==", "bodyText": "Can we change this message to the error message convention we normally use? Something like: Expected to ..., but ...", "url": "https://github.com/camunda-cloud/zeebe/pull/4804#discussion_r446920190", "createdAt": "2020-06-29T12:08:39Z", "author": {"login": "korthout"}, "path": "engine/src/main/java/io/zeebe/engine/nwe/BpmnElementProcessors.java", "diffHunk": "@@ -67,8 +67,8 @@ public BpmnElementProcessors(final BpmnBehaviors bpmnBehaviors) {\n \n     final var processor = (BpmnElementProcessor<T>) processors.get(bpmnElementType);\n     if (processor == null) {\n-      //      throw new UnsupportedOperationException(\n-      //          String.format(\"no processor found for BPMN element type '%s'\", bpmnElementType));\n+      throw new UnsupportedOperationException(\n+          String.format(\"no processor found for BPMN element type '%s'\", bpmnElementType));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8843f86017363fc4d05b24d6dec5e4067f446df"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0MTE1MQ==", "bodyText": "Please document use of magic number -1 as a means to have an empty variable scope.", "url": "https://github.com/camunda-cloud/zeebe/pull/4804#discussion_r446941151", "createdAt": "2020-06-29T12:43:39Z", "author": {"login": "korthout"}, "path": "engine/src/test/java/io/zeebe/engine/processor/workflow/ExpressionProcessorCorrelationKeyResultHandlerTest.java", "diffHunk": "@@ -26,8 +25,7 @@\n \n   public static final String TEST_EXPRESSION = \"expression\";\n \n-  CorrelationKeyResultHandler sutResultHandler =\n-      new CorrelationKeyResultHandler(new MessageCorrelationKeyContext());\n+  CorrelationKeyResultHandler sutResultHandler = new CorrelationKeyResultHandler(-1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e18e516260b87e34d42fa5634e38ec2d3d7aedec"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0MTgzMw==", "bodyText": "Please document its intended use. EDIT: nice! I just noted this while going through the commits 1 by 1. Good work", "url": "https://github.com/camunda-cloud/zeebe/pull/4804#discussion_r446941833", "createdAt": "2020-06-29T12:44:43Z", "author": {"login": "korthout"}, "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/SideEffects.java", "diffHunk": "@@ -0,0 +1,15 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.engine.processor.workflow;\n+\n+import io.zeebe.engine.processor.SideEffectProducer;\n+\n+public interface SideEffects {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e18e516260b87e34d42fa5634e38ec2d3d7aedec"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0NDM3NA==", "bodyText": "As the remaining behavior in this copy is almost the same as the init method below, should we reuse the assignments?", "url": "https://github.com/camunda-cloud/zeebe/pull/4804#discussion_r446944374", "createdAt": "2020-06-29T12:48:44Z", "author": {"login": "korthout"}, "path": "engine/src/main/java/io/zeebe/engine/nwe/BpmnElementContextImpl.java", "diffHunk": "@@ -120,31 +87,19 @@ public BpmnElementContext copy(\n       final WorkflowInstanceRecord recordValue,\n       final WorkflowInstanceIntent intent) {\n \n-    final var copy = new BpmnElementContextImpl(stepContext);\n+    final var copy = new BpmnElementContextImpl();\n     copy.elementInstanceKey = elementInstanceKey;\n     copy.recordValue = recordValue;\n     copy.intent = intent;\n \n-    // the step context is not initialized for the copy\n-    // because it is not needed yet", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73db93f6ef01e0a4b8c7e10bc6e76779bd11e0c6"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk1MTU0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * An action that is executed add the end of the processing. It will <b>not</b> be executed during\n          \n          \n            \n             * An action that is executed at the end of the processing. It will <b>not</b> be executed during", "url": "https://github.com/camunda-cloud/zeebe/pull/4804#discussion_r446951540", "createdAt": "2020-06-29T12:59:50Z", "author": {"login": "korthout"}, "path": "engine/src/main/java/io/zeebe/engine/processor/SideEffectProducer.java", "diffHunk": "@@ -7,14 +7,17 @@\n  */\n package io.zeebe.engine.processor;\n \n+/**\n+ * An action that is executed add the end of the processing. It will <b>not</b> be executed during", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8843f86017363fc4d05b24d6dec5e4067f446df"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNzIwNDMx", "url": "https://github.com/camunda-cloud/zeebe/pull/4804#pullrequestreview-441720431", "createdAt": "2020-07-02T14:14:50Z", "commit": {"oid": "638bfc2155e05f5dfb79c67b7f1f103dd27f1966"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoxNDo1MFrOGsO0PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoxNDo1MFrOGsO0PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzMzI3Nw==", "bodyText": "I'm still not really sure about this. The name implies something about the value, but it still seems like a magic number. Why is it 21?", "url": "https://github.com/camunda-cloud/zeebe/pull/4804#discussion_r449033277", "createdAt": "2020-07-02T14:14:50Z", "author": {"login": "korthout"}, "path": "engine/src/test/java/io/zeebe/engine/processor/workflow/ExpressionProcessorCorrelationKeyResultHandlerTest.java", "diffHunk": "@@ -23,9 +23,11 @@\n @RunWith(MockitoJUnitRunner.class)\n public class ExpressionProcessorCorrelationKeyResultHandlerTest {\n \n-  public static final String TEST_EXPRESSION = \"expression\";\n+  private static final String TEST_EXPRESSION = \"expression\";\n+  private static final long VARIABLE_SCOPE_KEY = 21;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "638bfc2155e05f5dfb79c67b7f1f103dd27f1966"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c950710c1efc568b7aeaede8db2bc4137a874a26", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/c950710c1efc568b7aeaede8db2bc4137a874a26", "committedDate": "2020-07-03T04:13:41Z", "message": "chore(engine): clean up old BPMN processing\n\n* remove BPMN steps and lifecycle binding\n* don't wait for an event in the intermediate catch event processor if it is connected to an event-based gateway\n* replace step context in catch event behavior\n* replace message correlation context with scope key\n* remove step context, event output and workflow engine state\n* fix incident resolve processor to send to response\n* don't expose the variable state"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "638bfc2155e05f5dfb79c67b7f1f103dd27f1966", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/638bfc2155e05f5dfb79c67b7f1f103dd27f1966", "committedDate": "2020-07-02T09:25:58Z", "message": "chore(engine): apply review hints"}, "afterCommit": {"oid": "c950710c1efc568b7aeaede8db2bc4137a874a26", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/c950710c1efc568b7aeaede8db2bc4137a874a26", "committedDate": "2020-07-03T04:13:41Z", "message": "chore(engine): clean up old BPMN processing\n\n* remove BPMN steps and lifecycle binding\n* don't wait for an event in the intermediate catch event processor if it is connected to an event-based gateway\n* replace step context in catch event behavior\n* replace message correlation context with scope key\n* remove step context, event output and workflow engine state\n* fix incident resolve processor to send to response\n* don't expose the variable state"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2642, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}