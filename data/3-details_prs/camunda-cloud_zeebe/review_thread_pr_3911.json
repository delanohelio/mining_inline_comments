{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4OTIzMjQ0", "number": 3911, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDo0Mzo1M1rODlX6dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDo0OTo1M1rODlYCZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNTE1NzAzOnYy", "diffSide": "RIGHT", "path": "upgrade-tests/src/test/java/io/zeebe/test/ContainerStateRule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDo0Mzo1M1rOFyOpEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMTowMTowNVrOFyPMsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxMzAwOA==", "bodyText": "We could compact the loop with the check a bit. For example:\nArrays.stream(lines).anyMatch(line -> Arrays.stream(pieces).allMatch(line::contains))", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#discussion_r388213008", "createdAt": "2020-03-05T10:43:53Z", "author": {"login": "saig0"}, "path": "upgrade-tests/src/test/java/io/zeebe/test/ContainerStateRule.java", "diffHunk": "@@ -99,11 +100,24 @@ private void log(final String type, final String log) {\n    *     false\n    */\n   public boolean hasElementInState(final String elementId, final String intent) {\n+    return findLogContaining(\n+        String.format(\"\\\"elementId\\\":\\\"%s\\\"\", elementId),\n+        String.format(\"\\\"intent\\\":\\\"%s\\\"\", intent));\n+  }\n+\n+  /** @return true if the message was found in the specified intent. Otherwise, returns false */\n+  public boolean hasMessageInState(final String name, final String intent) {\n+    return findLogContaining(\n+        String.format(\"\\\"name\\\":\\\"%s\\\"\", name), String.format(\"\\\"intent\\\":\\\"%s\\\"\", intent));\n+  }\n+\n+  // returns true if it finds a line that contains every piece.\n+  boolean findLogContaining(final String... piece) {\n     final String[] lines = broker.getLogs().split(\"\\n\");\n \n     for (int i = lines.length - 1; i >= 0; --i) {\n-      if (lines[i].contains(String.format(\"\\\"elementId\\\":\\\"%s\\\"\", elementId))\n-          && lines[i].contains(String.format(\"\\\"intent\\\":\\\"%s\\\"\", intent))) {\n+      final int finalI = i;\n+      if (Arrays.stream(piece).allMatch(p -> lines[finalI].contains(p))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7322467bea4c4e9588fe8cb0427fd9d7d8549072"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIyMjEyOA==", "bodyText": "I considered that but I thought it was harder to read. I guess it's a matter of preference, I can change it", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#discussion_r388222128", "createdAt": "2020-03-05T11:01:05Z", "author": {"login": "MiguelPires"}, "path": "upgrade-tests/src/test/java/io/zeebe/test/ContainerStateRule.java", "diffHunk": "@@ -99,11 +100,24 @@ private void log(final String type, final String log) {\n    *     false\n    */\n   public boolean hasElementInState(final String elementId, final String intent) {\n+    return findLogContaining(\n+        String.format(\"\\\"elementId\\\":\\\"%s\\\"\", elementId),\n+        String.format(\"\\\"intent\\\":\\\"%s\\\"\", intent));\n+  }\n+\n+  /** @return true if the message was found in the specified intent. Otherwise, returns false */\n+  public boolean hasMessageInState(final String name, final String intent) {\n+    return findLogContaining(\n+        String.format(\"\\\"name\\\":\\\"%s\\\"\", name), String.format(\"\\\"intent\\\":\\\"%s\\\"\", intent));\n+  }\n+\n+  // returns true if it finds a line that contains every piece.\n+  boolean findLogContaining(final String... piece) {\n     final String[] lines = broker.getLogs().split(\"\\n\");\n \n     for (int i = lines.length - 1; i >= 0; --i) {\n-      if (lines[i].contains(String.format(\"\\\"elementId\\\":\\\"%s\\\"\", elementId))\n-          && lines[i].contains(String.format(\"\\\"intent\\\":\\\"%s\\\"\", intent))) {\n+      final int finalI = i;\n+      if (Arrays.stream(piece).allMatch(p -> lines[finalI].contains(p))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxMzAwOA=="}, "originalCommit": {"oid": "7322467bea4c4e9588fe8cb0427fd9d7d8549072"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNTE2ODM4OnYy", "diffSide": "RIGHT", "path": "upgrade-tests/src/test/java/io/zeebe/test/UpgradeTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDo0NzoxMFrOFyOv6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDo0NzoxMFrOFyOv6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxNDc2Mg==", "bodyText": "IMO: a full name is easier to read. So messageWorkflow() instead of msgWorkflow(). But it is more of a personal preference.", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#discussion_r388214762", "createdAt": "2020-03-05T10:47:10Z", "author": {"login": "saig0"}, "path": "upgrade-tests/src/test/java/io/zeebe/test/UpgradeTest.java", "diffHunk": "@@ -152,6 +161,36 @@ private static BpmnModelInstance jobWorkflow() {\n         state.client().newCompleteCommand(key).send().join();\n   }\n \n+  private static BpmnModelInstance msgWorkflow() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7322467bea4c4e9588fe8cb0427fd9d7d8549072"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNTE3MDM0OnYy", "diffSide": "RIGHT", "path": "upgrade-tests/src/test/java/io/zeebe/test/UpgradeTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDo0Nzo0NVrOFyOxGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDo0Nzo0NVrOFyOxGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxNTA2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final String MSG = \"msg\";\n          \n          \n            \n              private static final String MESSAGE_NAME = \"message\";", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#discussion_r388215065", "createdAt": "2020-03-05T10:47:45Z", "author": {"login": "saig0"}, "path": "upgrade-tests/src/test/java/io/zeebe/test/UpgradeTest.java", "diffHunk": "@@ -42,6 +43,7 @@\n   private static final String CURRENT_VERSION = \"current-test\";\n   private static final String PROCESS_ID = \"process\";\n   private static final String TASK = \"task\";\n+  private static final String MSG = \"msg\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7322467bea4c4e9588fe8cb0427fd9d7d8549072"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNTE3NzM1OnYy", "diffSide": "RIGHT", "path": "upgrade-tests/src/test/java/io/zeebe/test/UpgradeTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDo0OTo1M1rOFyO1gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDo0OTo1M1rOFyO1gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxNjE5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static Function<ContainerStateRule, Long> messageSubscription() {\n          \n          \n            \n              private static Function<ContainerStateRule, Long> awaitOpenMessageSubscription() {", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#discussion_r388216195", "createdAt": "2020-03-05T10:49:53Z", "author": {"login": "saig0"}, "path": "upgrade-tests/src/test/java/io/zeebe/test/UpgradeTest.java", "diffHunk": "@@ -152,6 +161,36 @@ private static BpmnModelInstance jobWorkflow() {\n         state.client().newCompleteCommand(key).send().join();\n   }\n \n+  private static BpmnModelInstance msgWorkflow() {\n+    return Bpmn.createExecutableProcess(PROCESS_ID)\n+        .startEvent()\n+        .intermediateCatchEvent(\n+            \"catch\", b -> b.message(m -> m.name(MSG).zeebeCorrelationKey(\"key\")))\n+        .endEvent()\n+        .done();\n+  }\n+\n+  private static Function<ContainerStateRule, Long> messageSubscription() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7322467bea4c4e9588fe8cb0427fd9d7d8549072"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}