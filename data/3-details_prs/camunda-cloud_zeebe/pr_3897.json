{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MjcwMzE5", "number": 3897, "title": "chore(expression-language): improve variable resolving for expression evaluation", "bodyText": "Description\n\nadd a method to get a single variable value from the variable state\npass a context for evaluating an expression instead of all variables to only read the required variables\nreplace Jackson MessagePack object mapper by manual transformation using Zeebe's MessagePack reader/writer to reduce overhead\n\nRelated issues\ncloses #3794\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-02-21T12:58:00Z", "url": "https://github.com/camunda-cloud/zeebe/pull/3897", "merged": true, "mergeCommit": {"oid": "8f4494aa686d7c81db1654e6bb67a33b29693e1c"}, "closed": true, "closedAt": "2020-03-05T10:16:14Z", "author": {"login": "saig0"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGfT6VABqjMwNjAzOTc2NjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKnhZXABqjMxMDAyMDE4MTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4f1af3b9fe5370dcb04ccd1877137cf77abcb3b", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/a4f1af3b9fe5370dcb04ccd1877137cf77abcb3b", "committedDate": "2020-02-21T11:18:43Z", "message": "chore(expression-language): pass variables as context\n\n* pass a context for evaluating an expression instead of all variables to only read the required variables\n* replace Jackson MessagePack object mapper by manual transformation using Zeebe's MessagePack reader/writer to reduce overhead"}, "afterCommit": {"oid": "acc02e49e3da06e2477271abe5f3dcd786ec6d3d", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/acc02e49e3da06e2477271abe5f3dcd786ec6d3d", "committedDate": "2020-02-21T12:54:41Z", "message": "chore(expression-language): pass variables as context\n\n* pass a context for evaluating an expression instead of all variables to only read the required variables\n* replace Jackson MessagePack object mapper by manual transformation using Zeebe's MessagePack reader/writer to reduce overhead"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzOTM0OTM5", "url": "https://github.com/camunda-cloud/zeebe/pull/3897#pullrequestreview-363934939", "createdAt": "2020-02-25T08:07:36Z", "commit": {"oid": "fc0bab37e007d2c59624263a1727e55960bfaf1d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwODowNzozNlrOFt7_lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTowNDoyMlrOFt9qgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcxMzE3Mw==", "bodyText": "Please add missing params to doc.", "url": "https://github.com/camunda-cloud/zeebe/pull/3897#discussion_r383713173", "createdAt": "2020-02-25T08:07:36Z", "author": {"login": "deepthidevaki"}, "path": "engine/src/main/java/io/zeebe/engine/state/instance/VariablesState.java", "diffHunk": "@@ -221,6 +221,44 @@ private VariableInstance getVariableLocal(\n     return variablesColumnFamily.get(scopeKeyVariableNameKey);\n   }\n \n+  /**\n+   * Find the variable with the given name. If the variable is not present in the given scope then\n+   * it looks in the parent scope and continues until it is found.\n+   *\n+   * @param scopeKey the key of the variable scope to start from\n+   * @param name the name of the variable\n+   * @return the value of the variable, or {@code null} if it is not present in the variable scope\n+   */\n+  public DirectBuffer getVariable(final long scopeKey, final DirectBuffer name) {\n+    return getVariable(scopeKey, name, 0, name.capacity());\n+  }\n+\n+  /**\n+   * Find the variable with the given name. If the variable is not present in the given scope then\n+   * it looks in the parent scope and continues until it is found.\n+   *\n+   * @param scopeKey the key of the variable scope to start from\n+   * @param name the name of the variable\n+   * @return the value of the variable, or {@code null} if it is not present in the variable scope", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc0bab37e007d2c59624263a1727e55960bfaf1d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzczMDQyOQ==", "bodyText": "Do we need a new logger here? Also it is not used.", "url": "https://github.com/camunda-cloud/zeebe/pull/3897#discussion_r383730429", "createdAt": "2020-02-25T08:44:42Z", "author": {"login": "deepthidevaki"}, "path": "expression-language/src/main/java/io/zeebe/el/impl/Loggers.java", "diffHunk": "@@ -0,0 +1,15 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.el.impl;\n+\n+import io.zeebe.util.ZbLogger;\n+import org.slf4j.Logger;\n+\n+public final class Loggers {\n+  public static final Logger LOGGER = new ZbLogger(\"io.zeebe.expression-language\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc0bab37e007d2c59624263a1727e55960bfaf1d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc0MDU0Ng==", "bodyText": "Is there a reason why this class was moved from java to scala?", "url": "https://github.com/camunda-cloud/zeebe/pull/3897#discussion_r383740546", "createdAt": "2020-02-25T09:04:22Z", "author": {"login": "deepthidevaki"}, "path": "expression-language/src/main/scala/io/zeebe/el/impl/feel/FeelEvaluationResult.scala", "diffHunk": "@@ -0,0 +1,54 @@\n+/**\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.el.impl.feel\n+\n+import java.lang\n+\n+import io.zeebe.el.{EvaluationResult, Expression, ResultType}\n+import org.agrona.DirectBuffer\n+import org.camunda.feel.interpreter.{Val, ValBoolean, ValContext, ValList, ValNull, ValNumber, ValString}\n+\n+class FeelEvaluationResult(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc0bab37e007d2c59624263a1727e55960bfaf1d"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MzQyNzAy", "url": "https://github.com/camunda-cloud/zeebe/pull/3897#pullrequestreview-369342702", "createdAt": "2020-03-05T07:27:02Z", "commit": {"oid": "2eb5c975f11e801b24b9d37002ba322b7b3cf608"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e01151fb322523cc75de75da09d4fb680c2c61e4", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/e01151fb322523cc75de75da09d4fb680c2c61e4", "committedDate": "2020-03-05T08:46:07Z", "message": "chore(expression-language): pass variables as context\n\n* pass a context for evaluating an expression instead of all variables to only read the required variables\n* replace Jackson MessagePack object mapper by manual transformation using Zeebe's MessagePack reader/writer to reduce overhead\n* allow multi-line expressions\n* ignore Spotbugs for Scala classes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2eb5c975f11e801b24b9d37002ba322b7b3cf608", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/2eb5c975f11e801b24b9d37002ba322b7b3cf608", "committedDate": "2020-02-26T12:15:28Z", "message": "chore(engine): add missing JavaDoc"}, "afterCommit": {"oid": "e01151fb322523cc75de75da09d4fb680c2c61e4", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/e01151fb322523cc75de75da09d4fb680c2c61e4", "committedDate": "2020-03-05T08:46:07Z", "message": "chore(expression-language): pass variables as context\n\n* pass a context for evaluating an expression instead of all variables to only read the required variables\n* replace Jackson MessagePack object mapper by manual transformation using Zeebe's MessagePack reader/writer to reduce overhead\n* allow multi-line expressions\n* ignore Spotbugs for Scala classes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3152, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}