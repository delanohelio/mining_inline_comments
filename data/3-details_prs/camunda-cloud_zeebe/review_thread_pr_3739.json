{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NTA1Nzgz", "number": 3739, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTo0NjozMFrODbMOVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzozOToxMFrODbOP9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODM4NDIxOnYy", "diffSide": "RIGHT", "path": "gateway/src/main/java/io/zeebe/gateway/impl/broker/cluster/BrokerClusterStateImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTo0NjozMFrOFiiIIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzozMjoyMVrOFilCZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1NTA0MA==", "bodyText": "Hm, feels strange to have side effects of putting things in other objects as part of the compute if absent, no? Seems a little unexpected.", "url": "https://github.com/camunda-cloud/zeebe/pull/3739#discussion_r371755040", "createdAt": "2020-01-28T11:46:30Z", "author": {"login": "npepinpe"}, "path": "gateway/src/main/java/io/zeebe/gateway/impl/broker/cluster/BrokerClusterStateImpl.java", "diffHunk": "@@ -76,20 +79,26 @@ public void addPartitionIfAbsent(final int partitionId) {\n   }\n \n   public void addBrokerIfAbsent(final int nodeId) {\n-    if (brokerAddresses.get(nodeId) == null) {\n-      brokerAddresses.put(nodeId, \"\");\n-      brokers.addInt(nodeId);\n-    }\n+    brokerAddresses.computeIfAbsent(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14388190ad289364d9cc48b879ef43772617ed28"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgwMjcyNw==", "bodyText": "I get what you mean. It doesn't bother me too much, but maybe it's because I'm the one who did it. I'll revert it", "url": "https://github.com/camunda-cloud/zeebe/pull/3739#discussion_r371802727", "createdAt": "2020-01-28T13:32:21Z", "author": {"login": "MiguelPires"}, "path": "gateway/src/main/java/io/zeebe/gateway/impl/broker/cluster/BrokerClusterStateImpl.java", "diffHunk": "@@ -76,20 +79,26 @@ public void addPartitionIfAbsent(final int partitionId) {\n   }\n \n   public void addBrokerIfAbsent(final int nodeId) {\n-    if (brokerAddresses.get(nodeId) == null) {\n-      brokerAddresses.put(nodeId, \"\");\n-      brokers.addInt(nodeId);\n-    }\n+    brokerAddresses.computeIfAbsent(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1NTA0MA=="}, "originalCommit": {"oid": "14388190ad289364d9cc48b879ef43772617ed28"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODYxNjU4OnYy", "diffSide": "RIGHT", "path": "protocol-impl/src/main/java/io/zeebe/protocol/impl/encoding/BrokerInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzowODo1MFrOFikUFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzowODo1MFrOFikUFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5MDg2OA==", "bodyText": "I think with bodyDecoder.wrapVersion() we don't need to keep track of the offset. The whole method can be replaced by:\n@Override\n  public void wrap(final DirectBuffer buffer, int offset, final int length) {\n    reset();\n\n    final int frameEnd = offset + length;\n\n    headerDecoder.wrap(buffer, offset);\n    bodyDecoder.wrap(\n        buffer,\n        offset + headerDecoder.encodedLength(),\n        headerDecoder.blockLength(),\n        headerDecoder.version());\n\n    nodeId = bodyDecoder.nodeId();\n    partitionsCount = bodyDecoder.partitionsCount();\n    clusterSize = bodyDecoder.clusterSize();\n    replicationFactor = bodyDecoder.replicationFactor();\n\n    final AddressesDecoder addressesDecoder = bodyDecoder.addresses();\n    while (addressesDecoder.hasNext()) {\n      addressesDecoder.next();\n      final int apiNameLength = addressesDecoder.apiNameLength();\n      final byte[] apiNameBytes = new byte[apiNameLength];\n      addressesDecoder.getApiName(apiNameBytes, 0, apiNameLength);\n\n      final int addressLength = addressesDecoder.addressLength();\n      final byte[] addressBytes = new byte[addressLength];\n      addressesDecoder.getAddress(addressBytes, 0, addressLength);\n\n      this.addAddress(new UnsafeBuffer(apiNameBytes), new UnsafeBuffer(addressBytes));\n    }\n\n    final PartitionRolesDecoder partitionRolesDecoder = bodyDecoder.partitionRoles();\n    while (partitionRolesDecoder.hasNext()) {\n      partitionRolesDecoder.next();\n      this.addPartitionRole(partitionRolesDecoder.partitionId(), partitionRolesDecoder.role());\n    }\n\n    final PartitionLeaderTermsDecoder partitionLeaderTermsDecoder =\n        bodyDecoder.partitionLeaderTerms();\n    while (partitionLeaderTermsDecoder.hasNext()) {\n      partitionLeaderTermsDecoder.next();\n      this.partitionLeaderTerms.put(\n          partitionLeaderTermsDecoder.partitionId(), partitionLeaderTermsDecoder.term());\n    }\n\n    if (bodyDecoder.versionLength() > 0) {\n      bodyDecoder.wrapVersion(version);\n    } else {\n      bodyDecoder.skipVersion();\n    }\n\n    assert bodyDecoder.limit() == frameEnd\n        : \"Decoder read only to position \"\n            + bodyDecoder.limit()\n            + \" but expected \"\n            + frameEnd\n            + \" as final position\";\n  }", "url": "https://github.com/camunda-cloud/zeebe/pull/3739#discussion_r371790868", "createdAt": "2020-01-28T13:08:50Z", "author": {"login": "npepinpe"}, "path": "protocol-impl/src/main/java/io/zeebe/protocol/impl/encoding/BrokerInfo.java", "diffHunk": "@@ -209,22 +227,40 @@ public void wrap(final DirectBuffer buffer, int offset, final int length) {\n       addressesDecoder.getAddress(addressBytes, 0, addressLength);\n \n       this.addAddress(new UnsafeBuffer(apiNameBytes), new UnsafeBuffer(addressBytes));\n+      offset +=\n+          AddressesDecoder.apiNameHeaderLength()\n+              + apiNameLength\n+              + AddressesDecoder.addressHeaderLength()\n+              + addressLength;\n     }\n \n+    offset += PartitionRolesDecoder.sbeHeaderSize();\n     final PartitionRolesDecoder partitionRolesDecoder = bodyDecoder.partitionRoles();\n     while (partitionRolesDecoder.hasNext()) {\n       partitionRolesDecoder.next();\n       this.addPartitionRole(partitionRolesDecoder.partitionId(), partitionRolesDecoder.role());\n+      offset += 4 + 1;\n     }\n \n+    offset += PartitionLeaderTermsDecoder.sbeHeaderSize();\n     final PartitionLeaderTermsDecoder partitionLeaderTermsDecoder =\n         bodyDecoder.partitionLeaderTerms();\n     while (partitionLeaderTermsDecoder.hasNext()) {\n       partitionLeaderTermsDecoder.next();\n       this.partitionLeaderTerms.put(\n           partitionLeaderTermsDecoder.partitionId(), partitionLeaderTermsDecoder.term());\n+      offset += 4 + 8;\n     }\n \n+    final int versionLength = bodyDecoder.versionLength();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14388190ad289364d9cc48b879ef43772617ed28"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODcxNjA0OnYy", "diffSide": "RIGHT", "path": "gateway/src/main/java/io/zeebe/gateway/impl/broker/cluster/BrokerClusterStateImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzozOToxMFrOFilP1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzo0NDoxMlrOFilaHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgwNjE2NQ==", "bodyText": "Missing brokerVersions.put(nodeId, \"\")?", "url": "https://github.com/camunda-cloud/zeebe/pull/3739#discussion_r371806165", "createdAt": "2020-01-28T13:39:10Z", "author": {"login": "npepinpe"}, "path": "gateway/src/main/java/io/zeebe/gateway/impl/broker/cluster/BrokerClusterStateImpl.java", "diffHunk": "@@ -79,13 +79,10 @@ public void addPartitionIfAbsent(final int partitionId) {\n   }\n \n   public void addBrokerIfAbsent(final int nodeId) {\n-    brokerAddresses.computeIfAbsent(\n-        nodeId,\n-        k -> {\n-          brokerVersions.put(nodeId, \"\");\n-          brokers.addInt(nodeId);\n-          return \"\";\n-        });\n+    if (brokerAddresses.get(nodeId) == null) {\n+      brokerAddresses.put(nodeId, \"\");\n+      brokers.addInt(nodeId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f20325d48eddce5493013b861d281059bfe8d7c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgwODc5OA==", "bodyText": "Yup, missed it when rolling back. Thanks", "url": "https://github.com/camunda-cloud/zeebe/pull/3739#discussion_r371808798", "createdAt": "2020-01-28T13:44:12Z", "author": {"login": "MiguelPires"}, "path": "gateway/src/main/java/io/zeebe/gateway/impl/broker/cluster/BrokerClusterStateImpl.java", "diffHunk": "@@ -79,13 +79,10 @@ public void addPartitionIfAbsent(final int partitionId) {\n   }\n \n   public void addBrokerIfAbsent(final int nodeId) {\n-    brokerAddresses.computeIfAbsent(\n-        nodeId,\n-        k -> {\n-          brokerVersions.put(nodeId, \"\");\n-          brokers.addInt(nodeId);\n-          return \"\";\n-        });\n+    if (brokerAddresses.get(nodeId) == null) {\n+      brokerAddresses.put(nodeId, \"\");\n+      brokers.addInt(nodeId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgwNjE2NQ=="}, "originalCommit": {"oid": "4f20325d48eddce5493013b861d281059bfe8d7c"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4952, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}