{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4OTIzMjQ0", "number": 3911, "title": "Test message upgradability", "bodyText": "Description\nAdds messages to the upgrade test suite.\nRelated issues\ncloses #3840\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-02-24T10:48:05Z", "url": "https://github.com/camunda-cloud/zeebe/pull/3911", "merged": true, "mergeCommit": {"oid": "35b386b445b9e1877139dc681e3c94236e8275ac"}, "closed": true, "closedAt": "2020-03-05T12:24:50Z", "author": {"login": "MiguelPires"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHvvLIgBqjMwNjg5MDExOTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKqPd_ABqjMxMDA4ODkwMzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c2ffb652a0fdb928ef9401215417d0ad92e165e", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/8c2ffb652a0fdb928ef9401215417d0ad92e165e", "committedDate": "2020-02-24T10:23:25Z", "message": "chore(upgrade-tests): cover message upgradability"}, "afterCommit": {"oid": "7322467bea4c4e9588fe8cb0427fd9d7d8549072", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/7322467bea4c4e9588fe8cb0427fd9d7d8549072", "committedDate": "2020-02-25T10:40:15Z", "message": "chore(upgrade-tests): cover message upgradability"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NDY0NTE4", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#pullrequestreview-369464518", "createdAt": "2020-03-05T10:43:53Z", "commit": {"oid": "7322467bea4c4e9588fe8cb0427fd9d7d8549072"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDo0Mzo1M1rOFyOpEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDo0OTo1M1rOFyO1gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxMzAwOA==", "bodyText": "We could compact the loop with the check a bit. For example:\nArrays.stream(lines).anyMatch(line -> Arrays.stream(pieces).allMatch(line::contains))", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#discussion_r388213008", "createdAt": "2020-03-05T10:43:53Z", "author": {"login": "saig0"}, "path": "upgrade-tests/src/test/java/io/zeebe/test/ContainerStateRule.java", "diffHunk": "@@ -99,11 +100,24 @@ private void log(final String type, final String log) {\n    *     false\n    */\n   public boolean hasElementInState(final String elementId, final String intent) {\n+    return findLogContaining(\n+        String.format(\"\\\"elementId\\\":\\\"%s\\\"\", elementId),\n+        String.format(\"\\\"intent\\\":\\\"%s\\\"\", intent));\n+  }\n+\n+  /** @return true if the message was found in the specified intent. Otherwise, returns false */\n+  public boolean hasMessageInState(final String name, final String intent) {\n+    return findLogContaining(\n+        String.format(\"\\\"name\\\":\\\"%s\\\"\", name), String.format(\"\\\"intent\\\":\\\"%s\\\"\", intent));\n+  }\n+\n+  // returns true if it finds a line that contains every piece.\n+  boolean findLogContaining(final String... piece) {\n     final String[] lines = broker.getLogs().split(\"\\n\");\n \n     for (int i = lines.length - 1; i >= 0; --i) {\n-      if (lines[i].contains(String.format(\"\\\"elementId\\\":\\\"%s\\\"\", elementId))\n-          && lines[i].contains(String.format(\"\\\"intent\\\":\\\"%s\\\"\", intent))) {\n+      final int finalI = i;\n+      if (Arrays.stream(piece).allMatch(p -> lines[finalI].contains(p))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7322467bea4c4e9588fe8cb0427fd9d7d8549072"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxNDc2Mg==", "bodyText": "IMO: a full name is easier to read. So messageWorkflow() instead of msgWorkflow(). But it is more of a personal preference.", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#discussion_r388214762", "createdAt": "2020-03-05T10:47:10Z", "author": {"login": "saig0"}, "path": "upgrade-tests/src/test/java/io/zeebe/test/UpgradeTest.java", "diffHunk": "@@ -152,6 +161,36 @@ private static BpmnModelInstance jobWorkflow() {\n         state.client().newCompleteCommand(key).send().join();\n   }\n \n+  private static BpmnModelInstance msgWorkflow() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7322467bea4c4e9588fe8cb0427fd9d7d8549072"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxNTA2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final String MSG = \"msg\";\n          \n          \n            \n              private static final String MESSAGE_NAME = \"message\";", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#discussion_r388215065", "createdAt": "2020-03-05T10:47:45Z", "author": {"login": "saig0"}, "path": "upgrade-tests/src/test/java/io/zeebe/test/UpgradeTest.java", "diffHunk": "@@ -42,6 +43,7 @@\n   private static final String CURRENT_VERSION = \"current-test\";\n   private static final String PROCESS_ID = \"process\";\n   private static final String TASK = \"task\";\n+  private static final String MSG = \"msg\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7322467bea4c4e9588fe8cb0427fd9d7d8549072"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxNjE5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static Function<ContainerStateRule, Long> messageSubscription() {\n          \n          \n            \n              private static Function<ContainerStateRule, Long> awaitOpenMessageSubscription() {", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#discussion_r388216195", "createdAt": "2020-03-05T10:49:53Z", "author": {"login": "saig0"}, "path": "upgrade-tests/src/test/java/io/zeebe/test/UpgradeTest.java", "diffHunk": "@@ -152,6 +161,36 @@ private static BpmnModelInstance jobWorkflow() {\n         state.client().newCompleteCommand(key).send().join();\n   }\n \n+  private static BpmnModelInstance msgWorkflow() {\n+    return Bpmn.createExecutableProcess(PROCESS_ID)\n+        .startEvent()\n+        .intermediateCatchEvent(\n+            \"catch\", b -> b.message(m -> m.name(MSG).zeebeCorrelationKey(\"key\")))\n+        .endEvent()\n+        .done();\n+  }\n+\n+  private static Function<ContainerStateRule, Long> messageSubscription() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7322467bea4c4e9588fe8cb0427fd9d7d8549072"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NTAzMzYw", "url": "https://github.com/camunda-cloud/zeebe/pull/3911#pullrequestreview-369503360", "createdAt": "2020-03-05T11:46:48Z", "commit": {"oid": "80cebc6b74bfbbfd512da174e11f5acca5a52296"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c172efaa8f7970ca100b654ba06f571981aa5ea", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/3c172efaa8f7970ca100b654ba06f571981aa5ea", "committedDate": "2020-03-05T11:58:00Z", "message": "chore(upgrade-tests): cover message upgradability"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "80cebc6b74bfbbfd512da174e11f5acca5a52296", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/80cebc6b74bfbbfd512da174e11f5acca5a52296", "committedDate": "2020-03-05T11:06:00Z", "message": "chore(upgrade-tests): readability improvements"}, "afterCommit": {"oid": "3c172efaa8f7970ca100b654ba06f571981aa5ea", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/3c172efaa8f7970ca100b654ba06f571981aa5ea", "committedDate": "2020-03-05T11:58:00Z", "message": "chore(upgrade-tests): cover message upgradability"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3162, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}