{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NTA1Nzgz", "number": 3739, "title": "chore(broker): distribute broker version in topology", "bodyText": "Description\nAdds the broker's version to the topology information that is distributed between brokers and gateway.\nRelated issues\n\ncloses #3732\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-01-27T13:58:18Z", "url": "https://github.com/camunda-cloud/zeebe/pull/3739", "merged": true, "mergeCommit": {"oid": "ceeea9bdadff934000365d539e8350147f8dd453"}, "closed": true, "closedAt": "2020-01-28T15:01:47Z", "author": {"login": "MiguelPires"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-dlflABqjI5ODE5OTU2OTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-xlwGgBqjI5ODU2ODU0NzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f94f7ce614b188a16cba3d4ad4ea5eb1b3709cb6", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/f94f7ce614b188a16cba3d4ad4ea5eb1b3709cb6", "committedDate": "2020-01-27T13:22:39Z", "message": "chore(broker): distribute broker version in topology"}, "afterCommit": {"oid": "14388190ad289364d9cc48b879ef43772617ed28", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/14388190ad289364d9cc48b879ef43772617ed28", "committedDate": "2020-01-27T14:26:11Z", "message": "chore(broker): distribute broker version in topology"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MzEzMTg1", "url": "https://github.com/camunda-cloud/zeebe/pull/3739#pullrequestreview-349313185", "createdAt": "2020-01-28T11:46:30Z", "commit": {"oid": "14388190ad289364d9cc48b879ef43772617ed28"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTo0NjozMFrOFiiIIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzowODo1MFrOFikUFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1NTA0MA==", "bodyText": "Hm, feels strange to have side effects of putting things in other objects as part of the compute if absent, no? Seems a little unexpected.", "url": "https://github.com/camunda-cloud/zeebe/pull/3739#discussion_r371755040", "createdAt": "2020-01-28T11:46:30Z", "author": {"login": "npepinpe"}, "path": "gateway/src/main/java/io/zeebe/gateway/impl/broker/cluster/BrokerClusterStateImpl.java", "diffHunk": "@@ -76,20 +79,26 @@ public void addPartitionIfAbsent(final int partitionId) {\n   }\n \n   public void addBrokerIfAbsent(final int nodeId) {\n-    if (brokerAddresses.get(nodeId) == null) {\n-      brokerAddresses.put(nodeId, \"\");\n-      brokers.addInt(nodeId);\n-    }\n+    brokerAddresses.computeIfAbsent(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14388190ad289364d9cc48b879ef43772617ed28"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5MDg2OA==", "bodyText": "I think with bodyDecoder.wrapVersion() we don't need to keep track of the offset. The whole method can be replaced by:\n@Override\n  public void wrap(final DirectBuffer buffer, int offset, final int length) {\n    reset();\n\n    final int frameEnd = offset + length;\n\n    headerDecoder.wrap(buffer, offset);\n    bodyDecoder.wrap(\n        buffer,\n        offset + headerDecoder.encodedLength(),\n        headerDecoder.blockLength(),\n        headerDecoder.version());\n\n    nodeId = bodyDecoder.nodeId();\n    partitionsCount = bodyDecoder.partitionsCount();\n    clusterSize = bodyDecoder.clusterSize();\n    replicationFactor = bodyDecoder.replicationFactor();\n\n    final AddressesDecoder addressesDecoder = bodyDecoder.addresses();\n    while (addressesDecoder.hasNext()) {\n      addressesDecoder.next();\n      final int apiNameLength = addressesDecoder.apiNameLength();\n      final byte[] apiNameBytes = new byte[apiNameLength];\n      addressesDecoder.getApiName(apiNameBytes, 0, apiNameLength);\n\n      final int addressLength = addressesDecoder.addressLength();\n      final byte[] addressBytes = new byte[addressLength];\n      addressesDecoder.getAddress(addressBytes, 0, addressLength);\n\n      this.addAddress(new UnsafeBuffer(apiNameBytes), new UnsafeBuffer(addressBytes));\n    }\n\n    final PartitionRolesDecoder partitionRolesDecoder = bodyDecoder.partitionRoles();\n    while (partitionRolesDecoder.hasNext()) {\n      partitionRolesDecoder.next();\n      this.addPartitionRole(partitionRolesDecoder.partitionId(), partitionRolesDecoder.role());\n    }\n\n    final PartitionLeaderTermsDecoder partitionLeaderTermsDecoder =\n        bodyDecoder.partitionLeaderTerms();\n    while (partitionLeaderTermsDecoder.hasNext()) {\n      partitionLeaderTermsDecoder.next();\n      this.partitionLeaderTerms.put(\n          partitionLeaderTermsDecoder.partitionId(), partitionLeaderTermsDecoder.term());\n    }\n\n    if (bodyDecoder.versionLength() > 0) {\n      bodyDecoder.wrapVersion(version);\n    } else {\n      bodyDecoder.skipVersion();\n    }\n\n    assert bodyDecoder.limit() == frameEnd\n        : \"Decoder read only to position \"\n            + bodyDecoder.limit()\n            + \" but expected \"\n            + frameEnd\n            + \" as final position\";\n  }", "url": "https://github.com/camunda-cloud/zeebe/pull/3739#discussion_r371790868", "createdAt": "2020-01-28T13:08:50Z", "author": {"login": "npepinpe"}, "path": "protocol-impl/src/main/java/io/zeebe/protocol/impl/encoding/BrokerInfo.java", "diffHunk": "@@ -209,22 +227,40 @@ public void wrap(final DirectBuffer buffer, int offset, final int length) {\n       addressesDecoder.getAddress(addressBytes, 0, addressLength);\n \n       this.addAddress(new UnsafeBuffer(apiNameBytes), new UnsafeBuffer(addressBytes));\n+      offset +=\n+          AddressesDecoder.apiNameHeaderLength()\n+              + apiNameLength\n+              + AddressesDecoder.addressHeaderLength()\n+              + addressLength;\n     }\n \n+    offset += PartitionRolesDecoder.sbeHeaderSize();\n     final PartitionRolesDecoder partitionRolesDecoder = bodyDecoder.partitionRoles();\n     while (partitionRolesDecoder.hasNext()) {\n       partitionRolesDecoder.next();\n       this.addPartitionRole(partitionRolesDecoder.partitionId(), partitionRolesDecoder.role());\n+      offset += 4 + 1;\n     }\n \n+    offset += PartitionLeaderTermsDecoder.sbeHeaderSize();\n     final PartitionLeaderTermsDecoder partitionLeaderTermsDecoder =\n         bodyDecoder.partitionLeaderTerms();\n     while (partitionLeaderTermsDecoder.hasNext()) {\n       partitionLeaderTermsDecoder.next();\n       this.partitionLeaderTerms.put(\n           partitionLeaderTermsDecoder.partitionId(), partitionLeaderTermsDecoder.term());\n+      offset += 4 + 8;\n     }\n \n+    final int versionLength = bodyDecoder.versionLength();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14388190ad289364d9cc48b879ef43772617ed28"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5Mzc4NDkx", "url": "https://github.com/camunda-cloud/zeebe/pull/3739#pullrequestreview-349378491", "createdAt": "2020-01-28T13:39:10Z", "commit": {"oid": "4f20325d48eddce5493013b861d281059bfe8d7c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzozOToxMFrOFilP1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzozOToxMFrOFilP1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgwNjE2NQ==", "bodyText": "Missing brokerVersions.put(nodeId, \"\")?", "url": "https://github.com/camunda-cloud/zeebe/pull/3739#discussion_r371806165", "createdAt": "2020-01-28T13:39:10Z", "author": {"login": "npepinpe"}, "path": "gateway/src/main/java/io/zeebe/gateway/impl/broker/cluster/BrokerClusterStateImpl.java", "diffHunk": "@@ -79,13 +79,10 @@ public void addPartitionIfAbsent(final int partitionId) {\n   }\n \n   public void addBrokerIfAbsent(final int nodeId) {\n-    brokerAddresses.computeIfAbsent(\n-        nodeId,\n-        k -> {\n-          brokerVersions.put(nodeId, \"\");\n-          brokers.addInt(nodeId);\n-          return \"\";\n-        });\n+    if (brokerAddresses.get(nodeId) == null) {\n+      brokerAddresses.put(nodeId, \"\");\n+      brokers.addInt(nodeId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f20325d48eddce5493013b861d281059bfe8d7c"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MzgxODg0", "url": "https://github.com/camunda-cloud/zeebe/pull/3739#pullrequestreview-349381884", "createdAt": "2020-01-28T13:44:15Z", "commit": {"oid": "d6876830fbf6a9162718e7814ef72415ab712c4c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ceeea9bdadff934000365d539e8350147f8dd453", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/ceeea9bdadff934000365d539e8350147f8dd453", "committedDate": "2020-01-28T13:44:28Z", "message": "chore(broker): distribute broker version in topology"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d6876830fbf6a9162718e7814ef72415ab712c4c", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/d6876830fbf6a9162718e7814ef72415ab712c4c", "committedDate": "2020-01-28T13:43:44Z", "message": "chore(gateway): fix"}, "afterCommit": {"oid": "ceeea9bdadff934000365d539e8350147f8dd453", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/ceeea9bdadff934000365d539e8350147f8dd453", "committedDate": "2020-01-28T13:44:28Z", "message": "chore(broker): distribute broker version in topology"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3108, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}