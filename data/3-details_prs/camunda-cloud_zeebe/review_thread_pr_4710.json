{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNTY4Njgx", "number": 4710, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOTozOToxM1rOEE_0sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOTozOToxM1rOEE_0sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjc1NDQzOnYy", "diffSide": "RIGHT", "path": "clients/go/test/license_test.go", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOTozOToxM1rOGi9uZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOTo0MToyMVrOGi9ynQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMxNjA3MQ==", "bodyText": "What if we turn this into a \"skipList\" with the prefixes of files/dirs to ignore? Then we wouldn't need to add a new if clause for every directory we want to ignore and we're already using this map as a list which is a bit strange. Something like:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t// These files are generated.\n          \n          \n            \n            var skipList = []string{\n          \n          \n            \n              // These files are generated.\n          \n          \n            \n              \"../pkg/pb/gateway.pb.go\",\n          \n          \n            \n              \"../internal/mock_pb/\",\n          \n          \n            \n              \"../vendor/\",\n          \n          \n            \n            }\n          \n          \n            \n            \n          \n          \n            \n            func TestLicense(t *testing.T) {\n          \n          \n            \n            \terr := filepath.Walk(\"..\", func(path string, fi os.FileInfo, err error) error {\n          \n          \n            \n                for _, skip := range skipList {\n          \n          \n            \n                  if strings.HasPrefix(path, skip) {\n          \n          \n            \n                    return nil\n          \n          \n            \n                  }\n          \n          \n            \n                }", "url": "https://github.com/camunda-cloud/zeebe/pull/4710#discussion_r439316071", "createdAt": "2020-06-12T09:39:13Z", "author": {"login": "MiguelPires"}, "path": "clients/go/test/license_test.go", "diffHunk": "@@ -40,8 +40,7 @@ const license = `// Copyright \u00a9 2018 Camunda Services GmbH (info@camunda.com)\n \n var skip = map[string]bool{\n \t// These files are generated.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5c90168f9586334a5992089bd774dfceaaf5990"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMxNzE0OQ==", "bodyText": "Sounds good \ud83d\udc4d", "url": "https://github.com/camunda-cloud/zeebe/pull/4710#discussion_r439317149", "createdAt": "2020-06-12T09:41:21Z", "author": {"login": "npepinpe"}, "path": "clients/go/test/license_test.go", "diffHunk": "@@ -40,8 +40,7 @@ const license = `// Copyright \u00a9 2018 Camunda Services GmbH (info@camunda.com)\n \n var skip = map[string]bool{\n \t// These files are generated.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMxNjA3MQ=="}, "originalCommit": {"oid": "c5c90168f9586334a5992089bd774dfceaaf5990"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 508, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}