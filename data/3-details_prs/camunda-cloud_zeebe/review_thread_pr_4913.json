{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDQ4MDAx", "number": 4913, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTowMToyM1rOEM2K3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTowNjoyNFrOEM2Q0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTA1ODg3OnYy", "diffSide": "RIGHT", "path": "atomix/cluster/src/main/java/io/atomix/cluster/messaging/impl/NettyMessagingService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTowMToyM1rOGvMOxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTozMjowMlrOGvNIOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEzNjY0NA==", "bodyText": "Unfortunately I don't know how to add comments to lines which were not changed.\nMy question is: Do we also need to add/remove the future for the local connection case above?", "url": "https://github.com/camunda-cloud/zeebe/pull/4913#discussion_r452136644", "createdAt": "2020-07-09T11:01:23Z", "author": {"login": "pihme"}, "path": "atomix/cluster/src/main/java/io/atomix/cluster/messaging/impl/NettyMessagingService.java", "diffHunk": "@@ -462,12 +477,15 @@ private void initEventLoopGroup() {\n       return;\n     }\n \n+    // we need these to close them on stop", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202455f3a0c8ae4d5c2ccb4506f9de9d5dd56f63"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE1MTM1Mw==", "bodyText": "No because they are executed anyway directly.", "url": "https://github.com/camunda-cloud/zeebe/pull/4913#discussion_r452151353", "createdAt": "2020-07-09T11:32:02Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/main/java/io/atomix/cluster/messaging/impl/NettyMessagingService.java", "diffHunk": "@@ -462,12 +477,15 @@ private void initEventLoopGroup() {\n       return;\n     }\n \n+    // we need these to close them on stop", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEzNjY0NA=="}, "originalCommit": {"oid": "202455f3a0c8ae4d5c2ccb4506f9de9d5dd56f63"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTA3NDA4OnYy", "diffSide": "RIGHT", "path": "atomix/cluster/src/test/java/io/atomix/cluster/messaging/impl/NettyUnicastServiceTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTowNjoyNFrOGvMYJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMToyNzo0OFrOGvNAUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEzOTA0Nw==", "bodyText": "Maybe better:\nAssertions.assertThatCode(() -> toTest.method()).doesNotThrowAnyException(); or\n@Test(expected = Test.None.class /* no exception expected */)\npublic void test_printLine() {\n    Printer.printLine(\"line\");\n}", "url": "https://github.com/camunda-cloud/zeebe/pull/4913#discussion_r452139047", "createdAt": "2020-07-09T11:06:24Z", "author": {"login": "pihme"}, "path": "atomix/cluster/src/test/java/io/atomix/cluster/messaging/impl/NettyUnicastServiceTest.java", "diffHunk": "@@ -55,6 +56,18 @@ public void testUnicast() throws Exception {\n     await(5000);\n   }\n \n+  @Test\n+  public void shouldNotThrowExceptionWhenServiceStopped() throws Exception {\n+    // given\n+    service2.stop();\n+\n+    // when\n+    service2.unicast(address1, \"test\", \"Hello world!\".getBytes());\n+\n+    // then\n+    assertTrue(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202455f3a0c8ae4d5c2ccb4506f9de9d5dd56f63"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0OTMzMA==", "bodyText": "Yeah I searched yesterday evening for that but was not able to find it idk maybe was to late. Thanks\nTried always assertThat and doesNotThrow \ud83d\ude05", "url": "https://github.com/camunda-cloud/zeebe/pull/4913#discussion_r452149330", "createdAt": "2020-07-09T11:27:48Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/test/java/io/atomix/cluster/messaging/impl/NettyUnicastServiceTest.java", "diffHunk": "@@ -55,6 +56,18 @@ public void testUnicast() throws Exception {\n     await(5000);\n   }\n \n+  @Test\n+  public void shouldNotThrowExceptionWhenServiceStopped() throws Exception {\n+    // given\n+    service2.stop();\n+\n+    // when\n+    service2.unicast(address1, \"test\", \"Hello world!\".getBytes());\n+\n+    // then\n+    assertTrue(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEzOTA0Nw=="}, "originalCommit": {"oid": "202455f3a0c8ae4d5c2ccb4506f9de9d5dd56f63"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 429, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}