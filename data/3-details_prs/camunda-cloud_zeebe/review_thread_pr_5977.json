{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzNzM4NzYz", "number": 5977, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjoxMDowNFrOFB258w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjoxNjozMVrOFB3Gjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDkyNDY3OnYy", "diffSide": "RIGHT", "path": ".ci/scripts/distribution/qa-testbench.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjoxMDowNFrOIAuT4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjoxMDowNFrOIAuT4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYyOTY2Nw==", "bodyText": "Is error.txt used for anything? Or do you just want to silence it? If that's the case, you can just redirect to /dev/null, i.e.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"${zbctl}\"  activate jobs \"$businessKey\" > activationresponse.txt 2>error.txt\n          \n          \n            \n                \"${zbctl}\"  activate jobs \"$businessKey\" > activationresponse.txt 2>/dev/null", "url": "https://github.com/camunda-cloud/zeebe/pull/5977#discussion_r537629667", "createdAt": "2020-12-07T16:10:04Z", "author": {"login": "npepinpe"}, "path": ".ci/scripts/distribution/qa-testbench.sh", "diffHunk": "@@ -1,7 +1,50 @@\n-#!/bin/sh -eux\n+#!/bin/bash -eux\n \n chmod +x clients/go/cmd/zbctl/dist/zbctl\n \n-alias zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n+zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n \n-zbctl create instance qa-protocol --variables \"${QA_RUN_VARIABLES}\"\n+\"${zbctl}\" create instance external-tool-integration --variables \"${QA_RUN_VARIABLES}\"\n+\n+businessKey=\"${BUSINESS_KEY}\"\n+\n+waiting=1\n+\n+echo \"Waiting for result of $businessKey\"\n+\n+while [ $waiting -eq 1 ]; do\n+\n+    \"${zbctl}\"  activate jobs \"$businessKey\" > activationresponse.txt 2>error.txt", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a77749624029966dee4cd3010c095467cd790cd"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDk0MjEwOnYy", "diffSide": "RIGHT", "path": ".ci/scripts/distribution/qa-testbench.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjoxMzozM1rOIAueTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjoxMzozM1rOIAueTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzMjMzNA==", "bodyText": "You can do\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            while [ $waiting -eq 1 ]; do\n          \n          \n            \n            while true; do\n          \n      \n    \n    \n  \n\nAnd use a break statement to break out of the loop instead of setting the variable to 1. So for example:\nwhile true ; do\n    ...\n    if [ -z \"$key\" ]; then\n        ...\n    else\n        echo \"QA run completed\"\n        break\n    fi\ndone", "url": "https://github.com/camunda-cloud/zeebe/pull/5977#discussion_r537632334", "createdAt": "2020-12-07T16:13:33Z", "author": {"login": "npepinpe"}, "path": ".ci/scripts/distribution/qa-testbench.sh", "diffHunk": "@@ -1,7 +1,50 @@\n-#!/bin/sh -eux\n+#!/bin/bash -eux\n \n chmod +x clients/go/cmd/zbctl/dist/zbctl\n \n-alias zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n+zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n \n-zbctl create instance qa-protocol --variables \"${QA_RUN_VARIABLES}\"\n+\"${zbctl}\" create instance external-tool-integration --variables \"${QA_RUN_VARIABLES}\"\n+\n+businessKey=\"${BUSINESS_KEY}\"\n+\n+waiting=1\n+\n+echo \"Waiting for result of $businessKey\"\n+\n+while [ $waiting -eq 1 ]; do", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a77749624029966dee4cd3010c095467cd790cd"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDk0OTI2OnYy", "diffSide": "RIGHT", "path": ".ci/scripts/distribution/qa-testbench.sh", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjoxNDo1NVrOIAuifg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTo1MToxN1rOIA35WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzMzQwNg==", "bodyText": "With the information we have here, can we link to the result page already? Could save you time if you can just immediately click to go and see your results. Here or in the build results, whichever.", "url": "https://github.com/camunda-cloud/zeebe/pull/5977#discussion_r537633406", "createdAt": "2020-12-07T16:14:55Z", "author": {"login": "npepinpe"}, "path": ".ci/scripts/distribution/qa-testbench.sh", "diffHunk": "@@ -1,7 +1,50 @@\n-#!/bin/sh -eux\n+#!/bin/bash -eux\n \n chmod +x clients/go/cmd/zbctl/dist/zbctl\n \n-alias zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n+zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n \n-zbctl create instance qa-protocol --variables \"${QA_RUN_VARIABLES}\"\n+\"${zbctl}\" create instance external-tool-integration --variables \"${QA_RUN_VARIABLES}\"\n+\n+businessKey=\"${BUSINESS_KEY}\"\n+\n+waiting=1\n+\n+echo \"Waiting for result of $businessKey\"\n+\n+while [ $waiting -eq 1 ]; do\n+\n+    \"${zbctl}\"  activate jobs \"$businessKey\" > activationresponse.txt 2>error.txt\n+\n+    key=$(jq -r '.key' < activationresponse.txt)\n+\n+    if [ -z \"$key\" ]; then\n+        echo \"Still waiting\"\n+        sleep 5m\n+    else\n+        echo \"QA run completed\"\n+        waiting=0\n+    fi\n+done\n+\n+key=$(jq -r '.key' < activationresponse.txt)\n+\n+echo \"Job key is: $key\"\n+\n+variables=$(jq -r '.variables' < activationresponse.txt)\n+\n+echo \"Job variables are: $variables\"\n+\n+testResult=$(echo \"$variables\" | jq -r '.aggregatedTestResult')\n+\n+echo \"Test result is: $testResult\"\n+\n+\"${zbctl}\"  complete job \"$key\"\n+\n+if [ \"$testResult\" == \"FAILED\" ]; then\n+  echo \"Test failed\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a77749624029966dee4cd3010c095467cd790cd"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY5NTY5MA==", "bodyText": "Which result page? Not sure what you mean?", "url": "https://github.com/camunda-cloud/zeebe/pull/5977#discussion_r537695690", "createdAt": "2020-12-07T17:36:45Z", "author": {"login": "pihme"}, "path": ".ci/scripts/distribution/qa-testbench.sh", "diffHunk": "@@ -1,7 +1,50 @@\n-#!/bin/sh -eux\n+#!/bin/bash -eux\n \n chmod +x clients/go/cmd/zbctl/dist/zbctl\n \n-alias zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n+zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n \n-zbctl create instance qa-protocol --variables \"${QA_RUN_VARIABLES}\"\n+\"${zbctl}\" create instance external-tool-integration --variables \"${QA_RUN_VARIABLES}\"\n+\n+businessKey=\"${BUSINESS_KEY}\"\n+\n+waiting=1\n+\n+echo \"Waiting for result of $businessKey\"\n+\n+while [ $waiting -eq 1 ]; do\n+\n+    \"${zbctl}\"  activate jobs \"$businessKey\" > activationresponse.txt 2>error.txt\n+\n+    key=$(jq -r '.key' < activationresponse.txt)\n+\n+    if [ -z \"$key\" ]; then\n+        echo \"Still waiting\"\n+        sleep 5m\n+    else\n+        echo \"QA run completed\"\n+        waiting=0\n+    fi\n+done\n+\n+key=$(jq -r '.key' < activationresponse.txt)\n+\n+echo \"Job key is: $key\"\n+\n+variables=$(jq -r '.variables' < activationresponse.txt)\n+\n+echo \"Job variables are: $variables\"\n+\n+testResult=$(echo \"$variables\" | jq -r '.aggregatedTestResult')\n+\n+echo \"Test result is: $testResult\"\n+\n+\"${zbctl}\"  complete job \"$key\"\n+\n+if [ \"$testResult\" == \"FAILED\" ]; then\n+  echo \"Test failed\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzMzQwNg=="}, "originalCommit": {"oid": "9a77749624029966dee4cd3010c095467cd790cd"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY5ODMwNg==", "bodyText": "The Test Reports (Zeebe Cluster Testbench) Google doc - but I already noticed you mentioned we'll be pulling in the results in a separate PR, so that's moot \ud83d\udc4d", "url": "https://github.com/camunda-cloud/zeebe/pull/5977#discussion_r537698306", "createdAt": "2020-12-07T17:40:25Z", "author": {"login": "npepinpe"}, "path": ".ci/scripts/distribution/qa-testbench.sh", "diffHunk": "@@ -1,7 +1,50 @@\n-#!/bin/sh -eux\n+#!/bin/bash -eux\n \n chmod +x clients/go/cmd/zbctl/dist/zbctl\n \n-alias zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n+zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n \n-zbctl create instance qa-protocol --variables \"${QA_RUN_VARIABLES}\"\n+\"${zbctl}\" create instance external-tool-integration --variables \"${QA_RUN_VARIABLES}\"\n+\n+businessKey=\"${BUSINESS_KEY}\"\n+\n+waiting=1\n+\n+echo \"Waiting for result of $businessKey\"\n+\n+while [ $waiting -eq 1 ]; do\n+\n+    \"${zbctl}\"  activate jobs \"$businessKey\" > activationresponse.txt 2>error.txt\n+\n+    key=$(jq -r '.key' < activationresponse.txt)\n+\n+    if [ -z \"$key\" ]; then\n+        echo \"Still waiting\"\n+        sleep 5m\n+    else\n+        echo \"QA run completed\"\n+        waiting=0\n+    fi\n+done\n+\n+key=$(jq -r '.key' < activationresponse.txt)\n+\n+echo \"Job key is: $key\"\n+\n+variables=$(jq -r '.variables' < activationresponse.txt)\n+\n+echo \"Job variables are: $variables\"\n+\n+testResult=$(echo \"$variables\" | jq -r '.aggregatedTestResult')\n+\n+echo \"Test result is: $testResult\"\n+\n+\"${zbctl}\"  complete job \"$key\"\n+\n+if [ \"$testResult\" == \"FAILED\" ]; then\n+  echo \"Test failed\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzMzQwNg=="}, "originalCommit": {"oid": "9a77749624029966dee4cd3010c095467cd790cd"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzczNzE2Mw==", "bodyText": "@npepinpe Still no idea what you mean. And I have no plans to do much more than what is already there. Let's discuss that tomorrow. Maybe there was a misunderstanding or I missed somethin.", "url": "https://github.com/camunda-cloud/zeebe/pull/5977#discussion_r537737163", "createdAt": "2020-12-07T18:38:04Z", "author": {"login": "pihme"}, "path": ".ci/scripts/distribution/qa-testbench.sh", "diffHunk": "@@ -1,7 +1,50 @@\n-#!/bin/sh -eux\n+#!/bin/bash -eux\n \n chmod +x clients/go/cmd/zbctl/dist/zbctl\n \n-alias zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n+zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n \n-zbctl create instance qa-protocol --variables \"${QA_RUN_VARIABLES}\"\n+\"${zbctl}\" create instance external-tool-integration --variables \"${QA_RUN_VARIABLES}\"\n+\n+businessKey=\"${BUSINESS_KEY}\"\n+\n+waiting=1\n+\n+echo \"Waiting for result of $businessKey\"\n+\n+while [ $waiting -eq 1 ]; do\n+\n+    \"${zbctl}\"  activate jobs \"$businessKey\" > activationresponse.txt 2>error.txt\n+\n+    key=$(jq -r '.key' < activationresponse.txt)\n+\n+    if [ -z \"$key\" ]; then\n+        echo \"Still waiting\"\n+        sleep 5m\n+    else\n+        echo \"QA run completed\"\n+        waiting=0\n+    fi\n+done\n+\n+key=$(jq -r '.key' < activationresponse.txt)\n+\n+echo \"Job key is: $key\"\n+\n+variables=$(jq -r '.variables' < activationresponse.txt)\n+\n+echo \"Job variables are: $variables\"\n+\n+testResult=$(echo \"$variables\" | jq -r '.aggregatedTestResult')\n+\n+echo \"Test result is: $testResult\"\n+\n+\"${zbctl}\"  complete job \"$key\"\n+\n+if [ \"$testResult\" == \"FAILED\" ]; then\n+  echo \"Test failed\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzMzQwNg=="}, "originalCommit": {"oid": "9a77749624029966dee4cd3010c095467cd790cd"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc4MTU4Ng==", "bodyText": "Yeah, I was probably not explaining myself correctly.\nI was thinking, what would I do when I see that the QA stage fails - where should I look, how can I know what went wrong? As far as I know, we have a shared spreadsheet in Google Docs which collects the test results. To correlate the results, I need to know the generation so I can look up the relevant tests in there. Once I know what went wrong, what else can I do? I can find the cluster ID and look up the logs in Google Cloud, or check Operate in Testbench.\nI just thought, that's a lot of places and I need to know all of these - what if we added the links directly in the test results/build result? That way I can just click on it and be taken directly from Jenkins to the relevant places to figure out what went wrong.\nBut like I said, if you plan on already importing the results into Jenkins, then there's nothing to be done \ud83d\udc4d\nHope that helps, otherwise let's quickly talk about it in our sync so I can improve how I communicate \ud83d\ude42", "url": "https://github.com/camunda-cloud/zeebe/pull/5977#discussion_r537781586", "createdAt": "2020-12-07T19:43:04Z", "author": {"login": "npepinpe"}, "path": ".ci/scripts/distribution/qa-testbench.sh", "diffHunk": "@@ -1,7 +1,50 @@\n-#!/bin/sh -eux\n+#!/bin/bash -eux\n \n chmod +x clients/go/cmd/zbctl/dist/zbctl\n \n-alias zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n+zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n \n-zbctl create instance qa-protocol --variables \"${QA_RUN_VARIABLES}\"\n+\"${zbctl}\" create instance external-tool-integration --variables \"${QA_RUN_VARIABLES}\"\n+\n+businessKey=\"${BUSINESS_KEY}\"\n+\n+waiting=1\n+\n+echo \"Waiting for result of $businessKey\"\n+\n+while [ $waiting -eq 1 ]; do\n+\n+    \"${zbctl}\"  activate jobs \"$businessKey\" > activationresponse.txt 2>error.txt\n+\n+    key=$(jq -r '.key' < activationresponse.txt)\n+\n+    if [ -z \"$key\" ]; then\n+        echo \"Still waiting\"\n+        sleep 5m\n+    else\n+        echo \"QA run completed\"\n+        waiting=0\n+    fi\n+done\n+\n+key=$(jq -r '.key' < activationresponse.txt)\n+\n+echo \"Job key is: $key\"\n+\n+variables=$(jq -r '.variables' < activationresponse.txt)\n+\n+echo \"Job variables are: $variables\"\n+\n+testResult=$(echo \"$variables\" | jq -r '.aggregatedTestResult')\n+\n+echo \"Test result is: $testResult\"\n+\n+\"${zbctl}\"  complete job \"$key\"\n+\n+if [ \"$testResult\" == \"FAILED\" ]; then\n+  echo \"Test failed\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzMzQwNg=="}, "originalCommit": {"oid": "9a77749624029966dee4cd3010c095467cd790cd"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc4NjcxMw==", "bodyText": "Yeah, let's talk about it tomorrow. I don't plan to export test results into Jenkins - not in the way I think you imagine it. Which I realize now sounds confusing.\nSo the only test result that Jenkins will know about is whether all tests succeeded or any test failed. This is done with this PR and I wanted to keep it at that,\nBut I understand your desire to make correlation easier.\nThere is: zeebe-io/zeebe-cluster-testbench#188\nThis will make it easier. But maybe we need a little more.", "url": "https://github.com/camunda-cloud/zeebe/pull/5977#discussion_r537786713", "createdAt": "2020-12-07T19:51:17Z", "author": {"login": "pihme"}, "path": ".ci/scripts/distribution/qa-testbench.sh", "diffHunk": "@@ -1,7 +1,50 @@\n-#!/bin/sh -eux\n+#!/bin/bash -eux\n \n chmod +x clients/go/cmd/zbctl/dist/zbctl\n \n-alias zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n+zbctl=\"clients/go/cmd/zbctl/dist/zbctl\"\n \n-zbctl create instance qa-protocol --variables \"${QA_RUN_VARIABLES}\"\n+\"${zbctl}\" create instance external-tool-integration --variables \"${QA_RUN_VARIABLES}\"\n+\n+businessKey=\"${BUSINESS_KEY}\"\n+\n+waiting=1\n+\n+echo \"Waiting for result of $businessKey\"\n+\n+while [ $waiting -eq 1 ]; do\n+\n+    \"${zbctl}\"  activate jobs \"$businessKey\" > activationresponse.txt 2>error.txt\n+\n+    key=$(jq -r '.key' < activationresponse.txt)\n+\n+    if [ -z \"$key\" ]; then\n+        echo \"Still waiting\"\n+        sleep 5m\n+    else\n+        echo \"QA run completed\"\n+        waiting=0\n+    fi\n+done\n+\n+key=$(jq -r '.key' < activationresponse.txt)\n+\n+echo \"Job key is: $key\"\n+\n+variables=$(jq -r '.variables' < activationresponse.txt)\n+\n+echo \"Job variables are: $variables\"\n+\n+testResult=$(echo \"$variables\" | jq -r '.aggregatedTestResult')\n+\n+echo \"Test result is: $testResult\"\n+\n+\"${zbctl}\"  complete job \"$key\"\n+\n+if [ \"$testResult\" == \"FAILED\" ]; then\n+  echo \"Test failed\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzMzQwNg=="}, "originalCommit": {"oid": "9a77749624029966dee4cd3010c095467cd790cd"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDk1Njk1OnYy", "diffSide": "LEFT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjoxNjozMVrOIAunCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzozOToxMFrOIAycjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzNDU3MA==", "bodyText": "Is dropping the time out on purpose?", "url": "https://github.com/camunda-cloud/zeebe/pull/5977#discussion_r537634570", "createdAt": "2020-12-07T16:16:31Z", "author": {"login": "npepinpe"}, "path": "Jenkinsfile", "diffHunk": "@@ -278,33 +278,41 @@ pipeline {\n                 DOCKER_GCR = credentials(\"zeebe-gcr-serviceaccount-json\")\n                 ZEEBE_AUTHORIZATION_SERVER_URL = 'https://login.cloud.ultrawombat.com/oauth/token'\n                 ZEEBE_CLIENT_ID = 'W5a4JUc3I1NIetNnodo3YTvdsRIFb12w'\n-                QA_RUN_VARIABLES = \"{\\\"zeebeImage\\\": \\\"${env.IMAGE}:${env.TAG}\\\", \\\"generationTemplate\\\": \\\"${params.GENERATION_TEMPLATE}\\\", \\\"channel\\\": \\\"Internal Dev\\\", \" +\n-                    \"\\\"branch\\\": \\\"${env.BRANCH_NAME}\\\", \\\"build\\\": \\\"${currentBuild.absoluteUrl}\\\"}\"\n+                QA_RUN_VARIABLES = \"{\\\"zeebeImage\\\": \\\"${env.IMAGE}:${env.TAG}\\\", \\\"generationTemplate\\\": \\\"${params.GENERATION_TEMPLATE}\\\", \" +\n+                                    \"\\\"channel\\\": \\\"Internal Dev\\\", \\\"branch\\\": \\\"${env.BRANCH_NAME}\\\", \\\"build\\\": \\\"${currentBuild.absoluteUrl}\\\", \" +\n+                                    \"\\\"businessKey\\\": \\\"${currentBuild.absoluteUrl}\\\", \\\"processId\\\": \\\"qa-protocol\\\"}\"\n+                BUSINESS_KEY = \"${currentBuild.absoluteUrl}\"\n             }\n \n             steps {\n-                timeout(time: shortTimeoutMinutes, unit: 'MINUTES') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a77749624029966dee4cd3010c095467cd790cd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY5NzQyMw==", "bodyText": "Yes, it is intended. Before this was the timeout for starting the QA run. And then there was a second step to wait for user input, which had no timeout. Now the waiting for the result is part of this process. Currently, the QA run has to wait until all analyses have been completed, so it can take an arbitrary number of time.\nLater this week we hopefully have an implementation that sends the result to Jenkins as soon as possible, without waiting for the analysis to be completed. At this point we could add a generous timeout again here.", "url": "https://github.com/camunda-cloud/zeebe/pull/5977#discussion_r537697423", "createdAt": "2020-12-07T17:39:10Z", "author": {"login": "pihme"}, "path": "Jenkinsfile", "diffHunk": "@@ -278,33 +278,41 @@ pipeline {\n                 DOCKER_GCR = credentials(\"zeebe-gcr-serviceaccount-json\")\n                 ZEEBE_AUTHORIZATION_SERVER_URL = 'https://login.cloud.ultrawombat.com/oauth/token'\n                 ZEEBE_CLIENT_ID = 'W5a4JUc3I1NIetNnodo3YTvdsRIFb12w'\n-                QA_RUN_VARIABLES = \"{\\\"zeebeImage\\\": \\\"${env.IMAGE}:${env.TAG}\\\", \\\"generationTemplate\\\": \\\"${params.GENERATION_TEMPLATE}\\\", \\\"channel\\\": \\\"Internal Dev\\\", \" +\n-                    \"\\\"branch\\\": \\\"${env.BRANCH_NAME}\\\", \\\"build\\\": \\\"${currentBuild.absoluteUrl}\\\"}\"\n+                QA_RUN_VARIABLES = \"{\\\"zeebeImage\\\": \\\"${env.IMAGE}:${env.TAG}\\\", \\\"generationTemplate\\\": \\\"${params.GENERATION_TEMPLATE}\\\", \" +\n+                                    \"\\\"channel\\\": \\\"Internal Dev\\\", \\\"branch\\\": \\\"${env.BRANCH_NAME}\\\", \\\"build\\\": \\\"${currentBuild.absoluteUrl}\\\", \" +\n+                                    \"\\\"businessKey\\\": \\\"${currentBuild.absoluteUrl}\\\", \\\"processId\\\": \\\"qa-protocol\\\"}\"\n+                BUSINESS_KEY = \"${currentBuild.absoluteUrl}\"\n             }\n \n             steps {\n-                timeout(time: shortTimeoutMinutes, unit: 'MINUTES') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzNDU3MA=="}, "originalCommit": {"oid": "9a77749624029966dee4cd3010c095467cd790cd"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 91, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}