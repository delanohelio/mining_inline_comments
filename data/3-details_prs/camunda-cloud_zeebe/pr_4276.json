{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwODIwOTAz", "number": 4276, "title": "docs(operations): add doc for health checks", "bodyText": "Description\nAdd documentation for health check http endpoint\nRelated issues\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-04-08T12:33:43Z", "url": "https://github.com/camunda-cloud/zeebe/pull/4276", "merged": true, "mergeCommit": {"oid": "eea1ea2410d5079eb830fb14ce5c4e9ae0c022e2"}, "closed": true, "closedAt": "2020-04-14T14:11:07Z", "author": {"login": "deepthidevaki"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXbyOPAFqTM5MjU5MjI2OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXj1hugBqjMyMzEyMzY0MjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNTkyMjY5", "url": "https://github.com/camunda-cloud/zeebe/pull/4276#pullrequestreview-392592269", "createdAt": "2020-04-14T04:16:32Z", "commit": {"oid": "fd3b1cad5ade88cf0429463eb7223959e7de38f4"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNDoxNjozM1rOGE9mLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNDoyNzozNVrOGE9xBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg1NjY4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Once it is ready it is always ready.\n          \n          \n            \n            Once it is ready it will never become unready again.\n          \n      \n    \n    \n  \n\nMaybe more like this?", "url": "https://github.com/camunda-cloud/zeebe/pull/4276#discussion_r407856685", "createdAt": "2020-04-14T04:16:33Z", "author": {"login": "Zelldon"}, "path": "docs/src/operations/health.md", "diffHunk": "@@ -0,0 +1,29 @@\n+# Health Status\n+\n+Zeebe broker exposes two http endpoints to query its health status. \n+* Ready check\n+* Health check\n+ \n+## Ready Check\n+Ready check endpoint is exposed via `http://{zeebe-broker}:{zeebe.broker.network.monitoringApi.port}/ready`.\n+This endpoint return an empty 204 response. If it is not ready, it will return a 503 error.\n+\n+A broker is ready when it has installed all necessary services to start processing in all partitions. \n+Once it is ready it is always ready.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd3b1cad5ade88cf0429463eb7223959e7de38f4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg1NzUzOQ==", "bodyText": "We accept requests already before right? But not for all partitions, maybe we add that the broker will after he is ready he can work on all his partitions, then probably we need to add that ready != leader available", "url": "https://github.com/camunda-cloud/zeebe/pull/4276#discussion_r407857539", "createdAt": "2020-04-14T04:19:59Z", "author": {"login": "Zelldon"}, "path": "docs/src/operations/health.md", "diffHunk": "@@ -0,0 +1,29 @@\n+# Health Status\n+\n+Zeebe broker exposes two http endpoints to query its health status. \n+* Ready check\n+* Health check\n+ \n+## Ready Check\n+Ready check endpoint is exposed via `http://{zeebe-broker}:{zeebe.broker.network.monitoringApi.port}/ready`.\n+This endpoint return an empty 204 response. If it is not ready, it will return a 503 error.\n+\n+A broker is ready when it has installed all necessary services to start processing in all partitions. \n+Once it is ready it is always ready.\n+\n+A ready check is useful, for example, to use as a `readinessProbe` in a kubernetes configuration to control when a pod can be restarted for rolling upgrade. \n+Depending on the cluster configuration, restarting one pod before the previous one is ready might make the system unavailable because the quorum of replicas is not available.\n+By configuring a `readinessProbe` that uses the ready check endpoint we can inform Kubernetes when it is safe to proceed with rolling update.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd3b1cad5ade88cf0429463eb7223959e7de38f4"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg1ODg3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A broker is healthy, when it can process workflows, accepts commands, and perform all its expected tasks.\n          \n          \n            \n            If it is unhealthy, then it can mean three things: it is only temporarily unhealthy (e.g. due to environmental circumstances such as temporary I/O issues), it is partially unhealthy, or it is completely dead.\n          \n          \n            \n            Partial failure could mean that one or more partitions is unhealthy, while the rest of them are able to process workflows.\n          \n          \n            \n            A broker is healthy, when it can process workflows, accepts commands, and perform all its expected tasks.\n          \n          \n            \n            If it is unhealthy, then it can mean three things:\n          \n          \n            \n             * **it is only temporarily unhealthy**, e.g. due to environmental circumstances such as temporary I/O issues\n          \n          \n            \n             * **it is partially unhealthy**, could mean that one or more partitions is unhealthy, while the rest of them are able to process workflows\n          \n          \n            \n             * **it is completely dead**", "url": "https://github.com/camunda-cloud/zeebe/pull/4276#discussion_r407858879", "createdAt": "2020-04-14T04:25:18Z", "author": {"login": "Zelldon"}, "path": "docs/src/operations/health.md", "diffHunk": "@@ -0,0 +1,29 @@\n+# Health Status\n+\n+Zeebe broker exposes two http endpoints to query its health status. \n+* Ready check\n+* Health check\n+ \n+## Ready Check\n+Ready check endpoint is exposed via `http://{zeebe-broker}:{zeebe.broker.network.monitoringApi.port}/ready`.\n+This endpoint return an empty 204 response. If it is not ready, it will return a 503 error.\n+\n+A broker is ready when it has installed all necessary services to start processing in all partitions. \n+Once it is ready it is always ready.\n+\n+A ready check is useful, for example, to use as a `readinessProbe` in a kubernetes configuration to control when a pod can be restarted for rolling upgrade. \n+Depending on the cluster configuration, restarting one pod before the previous one is ready might make the system unavailable because the quorum of replicas is not available.\n+By configuring a `readinessProbe` that uses the ready check endpoint we can inform Kubernetes when it is safe to proceed with rolling update.\n+\n+## Health Check\n+Health check endpoint is exposed via `http://{zeebe-broker}:{zeebe.broker.network.monitoringApi.port}/health`.\n+This endpoint return an empty 204 response if the broker is healthy. If it is not healthy, it will return a 503 error.\n+A broker is never healthy before it is ready. \n+Unlike ready check, a broker can become unhealthy after it is healthy.\n+Hence it gives a better status of a running broker.\n+\n+A broker is healthy, when it can process workflows, accepts commands, and perform all its expected tasks.\n+If it is unhealthy, then it can mean three things: it is only temporarily unhealthy (e.g. due to environmental circumstances such as temporary I/O issues), it is partially unhealthy, or it is completely dead.\n+Partial failure could mean that one or more partitions is unhealthy, while the rest of them are able to process workflows.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd3b1cad5ade88cf0429463eb7223959e7de38f4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg1OTQ2MA==", "bodyText": "Do we have already docs for health metrics?", "url": "https://github.com/camunda-cloud/zeebe/pull/4276#discussion_r407859460", "createdAt": "2020-04-14T04:27:35Z", "author": {"login": "Zelldon"}, "path": "docs/src/operations/health.md", "diffHunk": "@@ -0,0 +1,29 @@\n+# Health Status\n+\n+Zeebe broker exposes two http endpoints to query its health status. \n+* Ready check\n+* Health check\n+ \n+## Ready Check\n+Ready check endpoint is exposed via `http://{zeebe-broker}:{zeebe.broker.network.monitoringApi.port}/ready`.\n+This endpoint return an empty 204 response. If it is not ready, it will return a 503 error.\n+\n+A broker is ready when it has installed all necessary services to start processing in all partitions. \n+Once it is ready it is always ready.\n+\n+A ready check is useful, for example, to use as a `readinessProbe` in a kubernetes configuration to control when a pod can be restarted for rolling upgrade. \n+Depending on the cluster configuration, restarting one pod before the previous one is ready might make the system unavailable because the quorum of replicas is not available.\n+By configuring a `readinessProbe` that uses the ready check endpoint we can inform Kubernetes when it is safe to proceed with rolling update.\n+\n+## Health Check\n+Health check endpoint is exposed via `http://{zeebe-broker}:{zeebe.broker.network.monitoringApi.port}/health`.\n+This endpoint return an empty 204 response if the broker is healthy. If it is not healthy, it will return a 503 error.\n+A broker is never healthy before it is ready. \n+Unlike ready check, a broker can become unhealthy after it is healthy.\n+Hence it gives a better status of a running broker.\n+\n+A broker is healthy, when it can process workflows, accepts commands, and perform all its expected tasks.\n+If it is unhealthy, then it can mean three things: it is only temporarily unhealthy (e.g. due to environmental circumstances such as temporary I/O issues), it is partially unhealthy, or it is completely dead.\n+Partial failure could mean that one or more partitions is unhealthy, while the rest of them are able to process workflows.\n+[Metrics](/operations/metrics) give more insight into which partition is healthy or unhealthy.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd3b1cad5ade88cf0429463eb7223959e7de38f4"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyODgwNzAy", "url": "https://github.com/camunda-cloud/zeebe/pull/4276#pullrequestreview-392880702", "createdAt": "2020-04-14T12:33:22Z", "commit": {"oid": "7bed36659521399ef8758df45dd31bf98f5235bb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d39a0b1b43b00f2abf1cd10c96ab70f7399489c", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/3d39a0b1b43b00f2abf1cd10c96ab70f7399489c", "committedDate": "2020-04-14T13:50:30Z", "message": "docs(operations): add doc for health checks"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7bed36659521399ef8758df45dd31bf98f5235bb", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/7bed36659521399ef8758df45dd31bf98f5235bb", "committedDate": "2020-04-14T09:50:43Z", "message": "chore(doc): update metric"}, "afterCommit": {"oid": "3d39a0b1b43b00f2abf1cd10c96ab70f7399489c", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/3d39a0b1b43b00f2abf1cd10c96ab70f7399489c", "committedDate": "2020-04-14T13:50:30Z", "message": "docs(operations): add doc for health checks"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2996, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}