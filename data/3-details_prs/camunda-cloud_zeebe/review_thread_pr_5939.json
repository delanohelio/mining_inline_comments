{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4OTMwODY1", "number": 5939, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOTowNDo0MVrOE-jiMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjozODoyMlrOE-vRbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDI5MzYxOnYy", "diffSide": "RIGHT", "path": "broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOTowNDo0MVrOH7xgng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOTowNDo0MVrOH7xgng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQzOTE5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void shouldDisableDebugLogExporter() {\n          \n          \n            \n              public void shouldNotRegisterDebugLogExporter() {", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532439198", "createdAt": "2020-11-30T09:04:41Z", "author": {"login": "pihme"}, "path": "broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java", "diffHunk": "@@ -240,16 +240,20 @@ public void shouldEnableDebugLogExporter() {\n     environment.put(ENV_DEBUG_EXPORTER, \"true\");\n \n     // then\n-    assertDefaultDebugLogExporter(false);\n+    assertDefaultDebugLogExporter();\n   }\n \n   @Test\n-  public void shouldEnableDebugLogExporterWithPrettyOption() {\n+  public void shouldDisableDebugLogExporter() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "378f56e49f4f02c18b25cd11aaa55a02233c1bdb"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDMwMzY3OnYy", "diffSide": "RIGHT", "path": "broker/src/test/java/io/zeebe/broker/test/EmbeddedBrokerConfigurator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOTowNzoyM1rOH7xmmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMjo1MTo1M1rOH75uSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MDczMA==", "bodyText": "Is it deliberate that the literal is used here? (as opposed to using DebugLogExporter.defaultConfig();", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532440730", "createdAt": "2020-11-30T09:07:23Z", "author": {"login": "pihme"}, "path": "broker/src/test/java/io/zeebe/broker/test/EmbeddedBrokerConfigurator.java", "diffHunk": "@@ -20,7 +20,7 @@\n public final class EmbeddedBrokerConfigurator {\n \n   public static final Consumer<BrokerCfg> DEBUG_EXPORTER =\n-      cfg -> cfg.getExporters().put(\"DebugLogExporter\", DebugLogExporter.defaultConfig(false));\n+      cfg -> cfg.getExporters().put(\"DebugLogExporter\", DebugLogExporter.defaultConfig());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "378f56e49f4f02c18b25cd11aaa55a02233c1bdb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU3MjA5NQ==", "bodyText": "I don't understand - do you mean the exporter ID? This is using DebugLogExporter.defaultConfig().", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532572095", "createdAt": "2020-11-30T12:48:49Z", "author": {"login": "npepinpe"}, "path": "broker/src/test/java/io/zeebe/broker/test/EmbeddedBrokerConfigurator.java", "diffHunk": "@@ -20,7 +20,7 @@\n public final class EmbeddedBrokerConfigurator {\n \n   public static final Consumer<BrokerCfg> DEBUG_EXPORTER =\n-      cfg -> cfg.getExporters().put(\"DebugLogExporter\", DebugLogExporter.defaultConfig(false));\n+      cfg -> cfg.getExporters().put(\"DebugLogExporter\", DebugLogExporter.defaultConfig());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MDczMA=="}, "originalCommit": {"oid": "378f56e49f4f02c18b25cd11aaa55a02233c1bdb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU3MzA5Ng==", "bodyText": "I mean the key in the map", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532573096", "createdAt": "2020-11-30T12:50:36Z", "author": {"login": "pihme"}, "path": "broker/src/test/java/io/zeebe/broker/test/EmbeddedBrokerConfigurator.java", "diffHunk": "@@ -20,7 +20,7 @@\n public final class EmbeddedBrokerConfigurator {\n \n   public static final Consumer<BrokerCfg> DEBUG_EXPORTER =\n-      cfg -> cfg.getExporters().put(\"DebugLogExporter\", DebugLogExporter.defaultConfig(false));\n+      cfg -> cfg.getExporters().put(\"DebugLogExporter\", DebugLogExporter.defaultConfig());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MDczMA=="}, "originalCommit": {"oid": "378f56e49f4f02c18b25cd11aaa55a02233c1bdb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU3Mzc2OA==", "bodyText": "Ah, no I just refactored the usage - I can't really speak for the original intent, and I was unaware we had a DebugLogExporter.defaultExporterId(), but I can use it \ud83d\udc4d", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532573768", "createdAt": "2020-11-30T12:51:53Z", "author": {"login": "npepinpe"}, "path": "broker/src/test/java/io/zeebe/broker/test/EmbeddedBrokerConfigurator.java", "diffHunk": "@@ -20,7 +20,7 @@\n public final class EmbeddedBrokerConfigurator {\n \n   public static final Consumer<BrokerCfg> DEBUG_EXPORTER =\n-      cfg -> cfg.getExporters().put(\"DebugLogExporter\", DebugLogExporter.defaultConfig(false));\n+      cfg -> cfg.getExporters().put(\"DebugLogExporter\", DebugLogExporter.defaultConfig());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MDczMA=="}, "originalCommit": {"oid": "378f56e49f4f02c18b25cd11aaa55a02233c1bdb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDMxMjI1OnYy", "diffSide": "RIGHT", "path": "broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOTowOTo0NVrOH7xr3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzowMzoyMFrOH76JVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MjA3Nw==", "bodyText": "Is there a test case that verifies the debug exporter is not enabled if the environment variable doesn't exist?", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532442077", "createdAt": "2020-11-30T09:09:45Z", "author": {"login": "pihme"}, "path": "broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java", "diffHunk": "@@ -240,16 +240,20 @@ public void shouldEnableDebugLogExporter() {\n     environment.put(ENV_DEBUG_EXPORTER, \"true\");\n \n     // then\n-    assertDefaultDebugLogExporter(false);\n+    assertDefaultDebugLogExporter();\n   }\n \n   @Test\n-  public void shouldEnableDebugLogExporterWithPrettyOption() {\n+  public void shouldDisableDebugLogExporter() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "378f56e49f4f02c18b25cd11aaa55a02233c1bdb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU3MTY0Nw==", "bodyText": "No, and honestly I was on the fence about the worth of this test - on one hand, the normal state is to not have the exporter. On the other hand, previous versions would include it regardless of the value, so I did want a \"regression\" test to ensure the behaviour was changed.\nHowever, now that I think about it, we could simply have a test which checks there are no exporters by default (we have several other default tests, but none for exporters).", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532571647", "createdAt": "2020-11-30T12:47:59Z", "author": {"login": "npepinpe"}, "path": "broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java", "diffHunk": "@@ -240,16 +240,20 @@ public void shouldEnableDebugLogExporter() {\n     environment.put(ENV_DEBUG_EXPORTER, \"true\");\n \n     // then\n-    assertDefaultDebugLogExporter(false);\n+    assertDefaultDebugLogExporter();\n   }\n \n   @Test\n-  public void shouldEnableDebugLogExporterWithPrettyOption() {\n+  public void shouldDisableDebugLogExporter() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MjA3Nw=="}, "originalCommit": {"oid": "378f56e49f4f02c18b25cd11aaa55a02233c1bdb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU4MDY5Mw==", "bodyText": "Added the test and a follow up issue: #5944", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532580693", "createdAt": "2020-11-30T13:03:20Z", "author": {"login": "npepinpe"}, "path": "broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java", "diffHunk": "@@ -240,16 +240,20 @@ public void shouldEnableDebugLogExporter() {\n     environment.put(ENV_DEBUG_EXPORTER, \"true\");\n \n     // then\n-    assertDefaultDebugLogExporter(false);\n+    assertDefaultDebugLogExporter();\n   }\n \n   @Test\n-  public void shouldEnableDebugLogExporterWithPrettyOption() {\n+  public void shouldDisableDebugLogExporter() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MjA3Nw=="}, "originalCommit": {"oid": "378f56e49f4f02c18b25cd11aaa55a02233c1bdb"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTUyMjE1OnYy", "diffSide": "RIGHT", "path": "broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoxNDo0OVrOH789Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoxNDo0OVrOH789Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYyNjc1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private void assertDefaultDebugLogExporter() {\n          \n          \n            \n              private void assertDebugLogExporterRegistered() {\n          \n      \n    \n    \n  \n\nThe name is confusing. In line 262  public void shouldHaveNoExportersByDefault() { we test for having no exporter by default.\nHere, with the name Default in it we would be testing that there is an exporter registered. But the only place we call it from is not a vanilla default configuration.", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532626751", "createdAt": "2020-11-30T14:14:49Z", "author": {"login": "pihme"}, "path": "broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java", "diffHunk": "@@ -836,13 +847,13 @@ private void assertEmbeddedGatewayEnabled(final String configFileName, final boo\n     assertThat(gatewayCfg.isEnable()).isEqualTo(enabled);\n   }\n \n-  private void assertDefaultDebugLogExporter(final boolean prettyPrint) {\n-    assertDebugLogExporter(\"default\", prettyPrint);\n-    assertDebugLogExporter(\"empty\", prettyPrint);\n+  private void assertDefaultDebugLogExporter() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8db10bf46c8d15a207efd42c45cf9ddfa1328b8"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MjIxNjc2OnYy", "diffSide": "RIGHT", "path": "broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjozODoyMlrOH8Dkdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjozODoyMlrOH8Dkdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjczNTA5NA==", "bodyText": "This could be renamed:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private void assertWithDefaultConfiguration(\n          \n          \n            \n              private void assertWithConfiguration(", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532735094", "createdAt": "2020-11-30T16:38:22Z", "author": {"login": "pihme"}, "path": "broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java", "diffHunk": "@@ -892,4 +892,15 @@ private void assertSystemClusterConfiguration(\n     assertThat(cfgCluster.getClusterSize()).isEqualTo(clusterSize);\n     assertThat(cfgCluster.getInitialContactPoints()).isEqualTo(initialContactPoints);\n   }\n+\n+  private void assertWithDefaultConfigurations(final Consumer<BrokerCfg> assertions) {\n+    Stream.of(\"default\", \"empty\")\n+        .forEach(configFileName -> assertWithDefaultConfiguration(assertions, configFileName));\n+  }\n+\n+  private void assertWithDefaultConfiguration(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b44cf930b9ad543b776d044a97b93891bd5067"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 82, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}