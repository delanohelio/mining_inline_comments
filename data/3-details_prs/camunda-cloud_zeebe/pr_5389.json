{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMzI4OTk5", "number": 5389, "title": "Prepare 0.24 for rolling upgrade to 0.25", "bodyText": "Description\nPrepares 0.24 for a rolling upgrade to 0.25. This version still uses the fallback strategy to try to deserialize bytes with the new serializer and fall back to the legacy one, in case of failure. However, it first checks the serialized object for a header with a version in order to avoid the slower fallback path in the common case. If the serialized object doesn't have a header, we know it was serialized by 0.24 or earlier.\nOne note about the structure of the byte header: since Kryo serializes integers with the least significant byte at the lowest address (little endian), we use a header with two bytes in which the first is the version number and the second is a magic byte (0xFF). For a valid registration to conflict with this header, we'd have to register a class with the id 65281 and greater, which is unlikely.\nRelated issues\ncloses #5104\nDefinition of Done\nNot all items need to be done depending on the issue and the pull request.\nCode changes:\n\n The changes are backwards compatibility with previous versions\n If it fixes a bug then PRs are created to backport the fix to the last two minor versions\n\nTesting:\n\n There are unit/integration tests that verify all acceptance criterias of the issue\n New tests are written to ensure backwards compatibility with further versions\n The behavior is tested manually\n The impact of the changes is verified by a benchmark\n\nDocumentation:\n\n The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\n New content is added to the release announcement", "createdAt": "2020-09-21T14:12:31Z", "url": "https://github.com/camunda-cloud/zeebe/pull/5389", "merged": true, "mergeCommit": {"oid": "c77b6fc8520fa1d5aef0598e7ff5e4706ab5f372"}, "closed": true, "closedAt": "2020-09-23T08:02:05Z", "author": {"login": "MiguelPires"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLSSEpAFqTQ5MzE2Mjk5Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLnaAFABqjM3OTY2NDAxNjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTYyOTkz", "url": "https://github.com/camunda-cloud/zeebe/pull/5389#pullrequestreview-493162993", "createdAt": "2020-09-22T06:43:42Z", "commit": {"oid": "28a96aa3533ebb62fea199c13341127c3b60e9f8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjo0Mzo0MlrOHVsHUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjo0Mzo0MlrOHVsHUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUwNDkxMg==", "bodyText": "Name fallback is a bit misleading as it uses fallback as default for serializing. Can we give more meaningful names?", "url": "https://github.com/camunda-cloud/zeebe/pull/5389#discussion_r492504912", "createdAt": "2020-09-22T06:43:42Z", "author": {"login": "deepthidevaki"}, "path": "atomix/utils/src/main/java/io/atomix/utils/serializer/FallbackNamespace.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * Copyright \u00a9 2020 camunda services GmbH (info@camunda.com)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.atomix.utils.serializer;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.atomix.utils.serializer.NamespaceImpl.Builder;\n+import io.atomix.utils.serializer.NamespaceImpl.RegistrationBlock;\n+import java.nio.ByteBuffer;\n+import org.slf4j.Logger;\n+\n+public class FallbackNamespace implements Namespace {\n+\n+  private static final Logger LOG = getLogger(FallbackNamespace.class);\n+  private static final String DESERIALIZE_ERROR =\n+      \"Serialized bytes contained header with version but deserialization failed (will fallback to FieldSerializer):\\n\";\n+  private static final String UNKNOWN_VERSION_ERROR =\n+      \"Magic byte was encountered, signalling newer version of serializer, but version {} is unrecognized. Using FieldSerializer as fallback\";\n+  private static final byte MAGIC_BYTE = (byte) 0xFF;\n+  private static final byte VERSION_BYTE = 0x01;\n+  private final NamespaceImpl fallback;\n+  private final NamespaceImpl namespace;\n+\n+  FallbackNamespace(final NamespaceImpl fallback, final NamespaceImpl namespace) {\n+    this.fallback = fallback;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28a96aa3533ebb62fea199c13341127c3b60e9f8"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0Mjc2NTk0", "url": "https://github.com/camunda-cloud/zeebe/pull/5389#pullrequestreview-494276594", "createdAt": "2020-09-23T06:48:18Z", "commit": {"oid": "dffba7b96081e0c547f03a120819c1712b193964"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5815ca13b7e8cb3cd21372f4f1790f6b4271c266", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/5815ca13b7e8cb3cd21372f4f1790f6b4271c266", "committedDate": "2020-09-23T07:21:35Z", "message": "chore(atomix): prepare 0.24 for rolling upgrade"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f1317724488749b8dcb849181c08f38e5c6091c", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/3f1317724488749b8dcb849181c08f38e5c6091c", "committedDate": "2020-09-23T07:21:40Z", "message": "chore(atomix): disable Kryo logs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dffba7b96081e0c547f03a120819c1712b193964", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/dffba7b96081e0c547f03a120819c1712b193964", "committedDate": "2020-09-22T12:21:10Z", "message": "chore(atomix): change namespace names"}, "afterCommit": {"oid": "3f1317724488749b8dcb849181c08f38e5c6091c", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/3f1317724488749b8dcb849181c08f38e5c6091c", "committedDate": "2020-09-23T07:21:40Z", "message": "chore(atomix): disable Kryo logs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2516, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}