{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNDA4NzI5", "number": 6021, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMjoyNToxNFrOFGrrGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1ODoxOFrOFIGMgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNTUxMzIwOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMjoyNToxNFrOIHzPQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMjoyNToxNFrOIHzPQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA1MDQzNA==", "bodyText": "Moved here to avoid error if there are only flaky tests in the main agent, since you cannot test if a stash is present or not", "url": "https://github.com/camunda-cloud/zeebe/pull/6021#discussion_r545050434", "createdAt": "2020-12-17T12:25:14Z", "author": {"login": "npepinpe"}, "path": "Jenkinsfile", "diffHunk": "@@ -248,20 +259,19 @@ pipeline {\n \n                             steps {\n                                 timeout(time: longTimeoutMinutes, unit: 'MINUTES') {\n-                                    unstash name: \"zeebe-build\"\n                                     runMavenContainerCommand('.ci/scripts/distribution/it-java.sh')\n                                 }\n                             }\n \n                             post {\n                                 always {\n                                     junit testResults: \"**/*/TEST*${SUREFIRE_REPORT_NAME_SUFFIX}*.xml\", keepLongStdio: true\n+                                    stash allowEmpty: true, name: itFlakyTestStashName, includes: '**/FlakyTests.txt'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddcd99bbc040e52793937034049bc9d60b08f551"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDM0NDM1OnYy", "diffSide": "RIGHT", "path": ".ci/scripts/distribution/test-java8.sh", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTo1ODoxOFrOIJ1TRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxMzowMjowMlrOIO_OhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE4MTM4MA==", "bodyText": "This variable does not appear to be used anywhere, previously it was exported (see prev L3) and I think that may be important. Please verify", "url": "https://github.com/camunda-cloud/zeebe/pull/6021#discussion_r547181380", "createdAt": "2020-12-22T09:58:18Z", "author": {"login": "korthout"}, "path": ".ci/scripts/distribution/test-java8.sh", "diffHunk": "@@ -1,29 +1,28 @@\n #!/bin/bash -eux\n \n-export JAVA_TOOL_OPTIONS=\"$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\"\n-\n-mvn -v\n-\n+source \"${BASH_SOURCE%/*}/../lib/flaky-tests.sh\"\n+\n+# getconf is a POSIX way to get the number of processors available which works on both Linux and macOS\n+LIMITS_CPU=${LIMITS_CPU:-$(getconf _NPROCESSORS_ONLN)}\n+MAVEN_PARALLELISM=${MAVEN_PARALLELISM:-$LIMITS_CPU}\n+SUREFIRE_FORK_COUNT=${SUREFIRE_FORK_COUNT:-}\n+MAVEN_PROPERTIES=(\n+  -DtestMavenId=3\n+  -Dsurefire.rerunFailingTestsCount=7\n+)\n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n+if [ ! -z \"$SUREFIRE_FORK_COUNT\" ]; then\n+  MAVEN_PROPERTIES+=(\"-DforkCount=$SUREFIRE_FORK_COUNT\")\n+  # if we know the fork count, we can limit the max heap for each fork to ensure we're not OOM killed\n+  JAVA_TOOL_OPTIONS=\"${JAVA_TOOL_OPTIONS} -XX:MaxRAMPercentage=$((100 / ($MAVEN_PARALLELISM * $SUREFIRE_FORK_COUNT)))\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddcd99bbc040e52793937034049bc9d60b08f551"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjU4NTI3Ng==", "bodyText": "Ah, you're right it should be exported! \ud83d\ude48", "url": "https://github.com/camunda-cloud/zeebe/pull/6021#discussion_r552585276", "createdAt": "2021-01-06T12:59:53Z", "author": {"login": "npepinpe"}, "path": ".ci/scripts/distribution/test-java8.sh", "diffHunk": "@@ -1,29 +1,28 @@\n #!/bin/bash -eux\n \n-export JAVA_TOOL_OPTIONS=\"$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\"\n-\n-mvn -v\n-\n+source \"${BASH_SOURCE%/*}/../lib/flaky-tests.sh\"\n+\n+# getconf is a POSIX way to get the number of processors available which works on both Linux and macOS\n+LIMITS_CPU=${LIMITS_CPU:-$(getconf _NPROCESSORS_ONLN)}\n+MAVEN_PARALLELISM=${MAVEN_PARALLELISM:-$LIMITS_CPU}\n+SUREFIRE_FORK_COUNT=${SUREFIRE_FORK_COUNT:-}\n+MAVEN_PROPERTIES=(\n+  -DtestMavenId=3\n+  -Dsurefire.rerunFailingTestsCount=7\n+)\n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n+if [ ! -z \"$SUREFIRE_FORK_COUNT\" ]; then\n+  MAVEN_PROPERTIES+=(\"-DforkCount=$SUREFIRE_FORK_COUNT\")\n+  # if we know the fork count, we can limit the max heap for each fork to ensure we're not OOM killed\n+  JAVA_TOOL_OPTIONS=\"${JAVA_TOOL_OPTIONS} -XX:MaxRAMPercentage=$((100 / ($MAVEN_PARALLELISM * $SUREFIRE_FORK_COUNT)))\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE4MTM4MA=="}, "originalCommit": {"oid": "ddcd99bbc040e52793937034049bc9d60b08f551"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjU4Njg4NA==", "bodyText": "Consequences of not exporting means that you could run out of memory (the famous error code 137), but it seems not to have affected us too much.", "url": "https://github.com/camunda-cloud/zeebe/pull/6021#discussion_r552586884", "createdAt": "2021-01-06T13:02:02Z", "author": {"login": "npepinpe"}, "path": ".ci/scripts/distribution/test-java8.sh", "diffHunk": "@@ -1,29 +1,28 @@\n #!/bin/bash -eux\n \n-export JAVA_TOOL_OPTIONS=\"$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\"\n-\n-mvn -v\n-\n+source \"${BASH_SOURCE%/*}/../lib/flaky-tests.sh\"\n+\n+# getconf is a POSIX way to get the number of processors available which works on both Linux and macOS\n+LIMITS_CPU=${LIMITS_CPU:-$(getconf _NPROCESSORS_ONLN)}\n+MAVEN_PARALLELISM=${MAVEN_PARALLELISM:-$LIMITS_CPU}\n+SUREFIRE_FORK_COUNT=${SUREFIRE_FORK_COUNT:-}\n+MAVEN_PROPERTIES=(\n+  -DtestMavenId=3\n+  -Dsurefire.rerunFailingTestsCount=7\n+)\n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n+if [ ! -z \"$SUREFIRE_FORK_COUNT\" ]; then\n+  MAVEN_PROPERTIES+=(\"-DforkCount=$SUREFIRE_FORK_COUNT\")\n+  # if we know the fork count, we can limit the max heap for each fork to ensure we're not OOM killed\n+  JAVA_TOOL_OPTIONS=\"${JAVA_TOOL_OPTIONS} -XX:MaxRAMPercentage=$((100 / ($MAVEN_PARALLELISM * $SUREFIRE_FORK_COUNT)))\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE4MTM4MA=="}, "originalCommit": {"oid": "ddcd99bbc040e52793937034049bc9d60b08f551"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 46, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}