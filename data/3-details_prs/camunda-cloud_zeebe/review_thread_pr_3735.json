{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2ODEwMzgx", "number": 3735, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwODozMzo0M1rODaqVcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwOTowNjozMlrODazcOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjgzMTg0OnYy", "diffSide": "RIGHT", "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/topology/TopologyClusterTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwODozMzo0M1rOFhvRjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwOTozNzoxOVrOFh8cJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMTg3MA==", "bodyText": "Can't we assert the correct version?", "url": "https://github.com/camunda-cloud/zeebe/pull/3735#discussion_r370921870", "createdAt": "2020-01-25T08:33:43Z", "author": {"login": "npepinpe"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/topology/TopologyClusterTest.java", "diffHunk": "@@ -85,5 +85,6 @@ public void shouldExposeClusterSettings() {\n     assertThat(topology.getClusterSize()).isEqualTo(CLUSTERING_RULE.getClusterSize());\n     assertThat(topology.getPartitionsCount()).isEqualTo(CLUSTERING_RULE.getPartitionCount());\n     assertThat(topology.getReplicationFactor()).isEqualTo(CLUSTERING_RULE.getReplicationFactor());\n+    assertThat(topology.getGatewayVersion()).isNotBlank();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff84d166c403724b29ddac669278a485fd2804ee"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEzMDE4Ng==", "bodyText": "It's null when we get it in the test", "url": "https://github.com/camunda-cloud/zeebe/pull/3735#discussion_r371130186", "createdAt": "2020-01-27T09:20:55Z", "author": {"login": "MiguelPires"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/topology/TopologyClusterTest.java", "diffHunk": "@@ -85,5 +85,6 @@ public void shouldExposeClusterSettings() {\n     assertThat(topology.getClusterSize()).isEqualTo(CLUSTERING_RULE.getClusterSize());\n     assertThat(topology.getPartitionsCount()).isEqualTo(CLUSTERING_RULE.getPartitionCount());\n     assertThat(topology.getReplicationFactor()).isEqualTo(CLUSTERING_RULE.getReplicationFactor());\n+    assertThat(topology.getGatewayVersion()).isNotBlank();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMTg3MA=="}, "originalCommit": {"oid": "ff84d166c403724b29ddac669278a485fd2804ee"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEzNzU3NA==", "bodyText": "Hm, not very helpful to test I guess \ud83d\ude05 Is that always or just when running them from the IDE? I think the maven tests should run with the JAR itself, no? \ud83e\udd14", "url": "https://github.com/camunda-cloud/zeebe/pull/3735#discussion_r371137574", "createdAt": "2020-01-27T09:37:19Z", "author": {"login": "npepinpe"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/topology/TopologyClusterTest.java", "diffHunk": "@@ -85,5 +85,6 @@ public void shouldExposeClusterSettings() {\n     assertThat(topology.getClusterSize()).isEqualTo(CLUSTERING_RULE.getClusterSize());\n     assertThat(topology.getPartitionsCount()).isEqualTo(CLUSTERING_RULE.getPartitionCount());\n     assertThat(topology.getReplicationFactor()).isEqualTo(CLUSTERING_RULE.getReplicationFactor());\n+    assertThat(topology.getGatewayVersion()).isNotBlank();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMTg3MA=="}, "originalCommit": {"oid": "ff84d166c403724b29ddac669278a485fd2804ee"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDI4ODMwOnYy", "diffSide": "RIGHT", "path": "clients/go/test/integration_test.go", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwODo1Mzo0OVrOFh7RrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwOTozMjozMVrOFh8UJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTExODUwOA==", "bodyText": "Any reason why we don't test the value here?", "url": "https://github.com/camunda-cloud/zeebe/pull/3735#discussion_r371118508", "createdAt": "2020-01-27T08:53:49Z", "author": {"login": "npepinpe"}, "path": "clients/go/test/integration_test.go", "diffHunk": "@@ -72,6 +71,7 @@ func (s *integrationTestSuite) TestTopology() {\n \ts.EqualValues(1, response.GetClusterSize())\n \ts.EqualValues(1, response.GetPartitionsCount())\n \ts.EqualValues(1, response.GetReplicationFactor())\n+\ts.NotEmpty(response.GetGatewayVersion())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff84d166c403724b29ddac669278a485fd2804ee"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEyOTAwNg==", "bodyText": "Is there a reasonably easy way to find out what it is?", "url": "https://github.com/camunda-cloud/zeebe/pull/3735#discussion_r371129006", "createdAt": "2020-01-27T09:18:09Z", "author": {"login": "MiguelPires"}, "path": "clients/go/test/integration_test.go", "diffHunk": "@@ -72,6 +71,7 @@ func (s *integrationTestSuite) TestTopology() {\n \ts.EqualValues(1, response.GetClusterSize())\n \ts.EqualValues(1, response.GetPartitionsCount())\n \ts.EqualValues(1, response.GetReplicationFactor())\n+\ts.NotEmpty(response.GetGatewayVersion())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTExODUwOA=="}, "originalCommit": {"oid": "ff84d166c403724b29ddac669278a485fd2804ee"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEzNTUyNw==", "bodyText": "Hm, you mean we don't know what's the current version for this build? For release builds we have an env variable but I guess for normal builds we have nothing...Probably fine for now then.", "url": "https://github.com/camunda-cloud/zeebe/pull/3735#discussion_r371135527", "createdAt": "2020-01-27T09:32:31Z", "author": {"login": "npepinpe"}, "path": "clients/go/test/integration_test.go", "diffHunk": "@@ -72,6 +71,7 @@ func (s *integrationTestSuite) TestTopology() {\n \ts.EqualValues(1, response.GetClusterSize())\n \ts.EqualValues(1, response.GetPartitionsCount())\n \ts.EqualValues(1, response.GetReplicationFactor())\n+\ts.NotEmpty(response.GetGatewayVersion())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTExODUwOA=="}, "originalCommit": {"oid": "ff84d166c403724b29ddac669278a485fd2804ee"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDMyMzc4OnYy", "diffSide": "RIGHT", "path": "gateway/src/main/java/io/zeebe/gateway/EndpointManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwOTowNjozMlrOFh7meQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwOTozMzo1OVrOFh8WtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEyMzgzMw==", "bodyText": "just a nit pick, feel free to ignore, afaik if the version is blank is that that's what we set when we built the JAR, so not sure if it's all that important to check it here.", "url": "https://github.com/camunda-cloud/zeebe/pull/3735#discussion_r371123833", "createdAt": "2020-01-27T09:06:32Z", "author": {"login": "npepinpe"}, "path": "gateway/src/main/java/io/zeebe/gateway/EndpointManager.java", "diffHunk": "@@ -251,6 +249,11 @@ public void topology(\n           .setPartitionsCount(topology.getPartitionsCount())\n           .setReplicationFactor(topology.getReplicationFactor());\n \n+      final String gatewayVersion = getClass().getPackage().getImplementationVersion();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff84d166c403724b29ddac669278a485fd2804ee"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEyODQxMA==", "bodyText": "If we set the version to null, it will throw an NPE. I agree that if it's an empty string it's not serious since the clients already check and deal with that. But I thought it'd be better to include this since this way the clients don't have to deal with random whitespace, since the version will be either something or an empty string", "url": "https://github.com/camunda-cloud/zeebe/pull/3735#discussion_r371128410", "createdAt": "2020-01-27T09:16:49Z", "author": {"login": "MiguelPires"}, "path": "gateway/src/main/java/io/zeebe/gateway/EndpointManager.java", "diffHunk": "@@ -251,6 +249,11 @@ public void topology(\n           .setPartitionsCount(topology.getPartitionsCount())\n           .setReplicationFactor(topology.getReplicationFactor());\n \n+      final String gatewayVersion = getClass().getPackage().getImplementationVersion();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEyMzgzMw=="}, "originalCommit": {"oid": "ff84d166c403724b29ddac669278a485fd2804ee"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEzNjE4MA==", "bodyText": "Fair enough", "url": "https://github.com/camunda-cloud/zeebe/pull/3735#discussion_r371136180", "createdAt": "2020-01-27T09:33:59Z", "author": {"login": "npepinpe"}, "path": "gateway/src/main/java/io/zeebe/gateway/EndpointManager.java", "diffHunk": "@@ -251,6 +249,11 @@ public void topology(\n           .setPartitionsCount(topology.getPartitionsCount())\n           .setReplicationFactor(topology.getReplicationFactor());\n \n+      final String gatewayVersion = getClass().getPackage().getImplementationVersion();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEyMzgzMw=="}, "originalCommit": {"oid": "ff84d166c403724b29ddac669278a485fd2804ee"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4947, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}