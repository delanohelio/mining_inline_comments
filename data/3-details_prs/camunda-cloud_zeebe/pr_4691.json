{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNzkwMjAx", "number": 4691, "title": "fix(exporters/elasticsearch-exporter): report ES errors on flush", "bodyText": "Description\n\nfix deserialization of bulk response\nlog errors from bulk response\nmark flush as not successful to try it again\n\nRelated issues\ncloses #4667\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-06-09T13:22:38Z", "url": "https://github.com/camunda-cloud/zeebe/pull/4691", "merged": true, "mergeCommit": {"oid": "70f185e013dd496c8c9952f728c81734bb7537da"}, "closed": true, "closedAt": "2020-06-12T12:19:21Z", "author": {"login": "saig0"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpk-nQgH2gAyNDMxNzkwMjAxOjA3ODEzYWZlMDMwMDg0YWNjZDE1ZDVmMjQ2ODhjZmU4OTIxMTU5MWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqhrWTgFqTQyOTY4NjE1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "07813afe030084accd15d5f24688cfe89211591c", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/07813afe030084accd15d5f24688cfe89211591c", "committedDate": "2020-06-09T13:21:57Z", "message": "fix(exporters/elasticsearch-exporter): report ES errors on flush\n\n* fix deserialization of bulk response\n* log errors from bulk response\n* mark flush as not successful to try it again"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NjYzNDA1", "url": "https://github.com/camunda-cloud/zeebe/pull/4691#pullrequestreview-429663405", "createdAt": "2020-06-12T11:20:50Z", "commit": {"oid": "07813afe030084accd15d5f24688cfe89211591c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5Njg2MTU2", "url": "https://github.com/camunda-cloud/zeebe/pull/4691#pullrequestreview-429686156", "createdAt": "2020-06-12T12:05:07Z", "commit": {"oid": "07813afe030084accd15d5f24688cfe89211591c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjowNTowN1rOGjBjOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjowNTowN1rOGjBjOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM3ODc0Nw==", "bodyText": "@saig0 I don't think it is a good idea to log every failed item, the reason is that we have thousands of records in a bulk request in a high load scenario. As far as I remember initial we had a similar approach in the first implementation which we saw as a potential problem with log pollution, see #1344 (comment).\n/cc @npepinpe wdyt?", "url": "https://github.com/camunda-cloud/zeebe/pull/4691#discussion_r439378747", "createdAt": "2020-06-12T12:05:07Z", "author": {"login": "menski"}, "path": "exporters/elasticsearch-exporter/src/main/java/io/zeebe/exporter/ElasticsearchClient.java", "diffHunk": "@@ -136,21 +140,36 @@ public boolean flush() {\n         bulkRequest = new ArrayList<>();\n       }\n     }\n-\n     return success;\n   }\n \n-  private boolean exportBulk() throws IOException {\n+  private boolean checkBulkResponse(final BulkResponse bulkResponse) {\n+    final var hasErrors = bulkResponse.hasErrors();\n+    if (hasErrors) {\n+      bulkResponse.getItems().stream()\n+          .map(BulkItem::getIndex)\n+          .map(BulkItemIndex::getError)\n+          .forEach(\n+              error ->\n+                  log.warn(\n+                      \"Failed to flush item of bulk request [type: {}, reason: {}]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07813afe030084accd15d5f24688cfe89211591c"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2751, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}