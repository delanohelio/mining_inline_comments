{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzOTE1NzQz", "number": 5979, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzozODoxNVrOFCxpkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjo1MToyOFrOFC6Hpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDU0OTMwOnYy", "diffSide": "RIGHT", "path": "test-util/src/main/java/io/zeebe/test/util/asserts/TopologyAssert.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzozODoxNVrOICGb3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoxNDozOFrOICM2LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3MzUwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .filter(PartitionInfo::isLeader)\n          \n          \n            \n                        .filter(Predicate.not(PartitionInfo::isLeader))", "url": "https://github.com/camunda-cloud/zeebe/pull/5979#discussion_r539073501", "createdAt": "2020-12-09T07:38:15Z", "author": {"login": "deepthidevaki"}, "path": "test-util/src/main/java/io/zeebe/test/util/asserts/TopologyAssert.java", "diffHunk": "@@ -44,6 +47,25 @@ public final TopologyAssert isComplete(final int clusterSize, final int partitio\n           partitionCount, brokersWithUnexpectedPartitionCount);\n     }\n \n+    final Set<Integer> partitionsWithLeader =\n+        brokers.stream()\n+            .flatMap(b -> b.getPartitions().stream())\n+            .filter(PartitionInfo::isLeader)\n+            .map(PartitionInfo::getPartitionId)\n+            .collect(Collectors.toUnmodifiableSet());\n+    final Set<Integer> partitionsWithoutLeader =\n+        brokers.stream()\n+            .flatMap(b -> b.getPartitions().stream())\n+            .filter(PartitionInfo::isLeader)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7fcbce71211b6d7283b1335191cc35ed94e9b2c"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTExNTE4Ng==", "bodyText": "\ud83d\ude48", "url": "https://github.com/camunda-cloud/zeebe/pull/5979#discussion_r539115186", "createdAt": "2020-12-09T08:46:34Z", "author": {"login": "npepinpe"}, "path": "test-util/src/main/java/io/zeebe/test/util/asserts/TopologyAssert.java", "diffHunk": "@@ -44,6 +47,25 @@ public final TopologyAssert isComplete(final int clusterSize, final int partitio\n           partitionCount, brokersWithUnexpectedPartitionCount);\n     }\n \n+    final Set<Integer> partitionsWithLeader =\n+        brokers.stream()\n+            .flatMap(b -> b.getPartitions().stream())\n+            .filter(PartitionInfo::isLeader)\n+            .map(PartitionInfo::getPartitionId)\n+            .collect(Collectors.toUnmodifiableSet());\n+    final Set<Integer> partitionsWithoutLeader =\n+        brokers.stream()\n+            .flatMap(b -> b.getPartitions().stream())\n+            .filter(PartitionInfo::isLeader)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3MzUwMQ=="}, "originalCommit": {"oid": "d7fcbce71211b6d7283b1335191cc35ed94e9b2c"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3ODU0MQ==", "bodyText": "Actually the line had to be removed - what I want is set difference. Actually, now that I think about it, this is a very round about way of doing it. Let me check if I can't make it simpler.", "url": "https://github.com/camunda-cloud/zeebe/pull/5979#discussion_r539178541", "createdAt": "2020-12-09T10:14:38Z", "author": {"login": "npepinpe"}, "path": "test-util/src/main/java/io/zeebe/test/util/asserts/TopologyAssert.java", "diffHunk": "@@ -44,6 +47,25 @@ public final TopologyAssert isComplete(final int clusterSize, final int partitio\n           partitionCount, brokersWithUnexpectedPartitionCount);\n     }\n \n+    final Set<Integer> partitionsWithLeader =\n+        brokers.stream()\n+            .flatMap(b -> b.getPartitions().stream())\n+            .filter(PartitionInfo::isLeader)\n+            .map(PartitionInfo::getPartitionId)\n+            .collect(Collectors.toUnmodifiableSet());\n+    final Set<Integer> partitionsWithoutLeader =\n+        brokers.stream()\n+            .flatMap(b -> b.getPartitions().stream())\n+            .filter(PartitionInfo::isLeader)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3MzUwMQ=="}, "originalCommit": {"oid": "d7fcbce71211b6d7283b1335191cc35ed94e9b2c"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTkzNzAyOnYy", "diffSide": "RIGHT", "path": "test-util/src/main/java/io/zeebe/test/util/asserts/TopologyAssert.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjo1MToyOFrOICTERA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjo1MToyOFrOICTERA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI4MDQ1Mg==", "bodyText": "The javadoc from failWithMessage actually recommends using throw failure instead, as the compiler can now realize we're throwing an error (whereas with failWithMessage it thinks execution will continue).", "url": "https://github.com/camunda-cloud/zeebe/pull/5979#discussion_r539280452", "createdAt": "2020-12-09T12:51:28Z", "author": {"login": "npepinpe"}, "path": "test-util/src/main/java/io/zeebe/test/util/asserts/TopologyAssert.java", "diffHunk": "@@ -30,7 +32,7 @@ public final TopologyAssert isComplete(final int clusterSize, final int partitio\n     final List<BrokerInfo> brokers = actual.getBrokers();\n \n     if (brokers.size() != clusterSize) {\n-      failWithMessage(\"Expected broker count to be <%s> but was <%s>\", clusterSize, brokers.size());\n+      throw failure(\"Expected broker count to be <%s> but was <%s>\", clusterSize, brokers.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dddc27c784d0ef163cdb0a1b8637665227ee1d"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 93, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}