{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MDE1NTEw", "number": 4946, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTo1MDoxMlrOENvqQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTo1MjoxMFrOENvtWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyODQ3ODA5OnYy", "diffSide": "RIGHT", "path": "transport/src/main/java/io/zeebe/transport/impl/AtomixClientTransportAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTo1MDoxMlrOGwhUcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTo1MDoxMlrOGwhUcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUzMDczNw==", "bodyText": "Maybe wrap in isTraceEnabled()", "url": "https://github.com/camunda-cloud/zeebe/pull/4946#discussion_r453530737", "createdAt": "2020-07-13T09:50:12Z", "author": {"login": "pihme"}, "path": "transport/src/main/java/io/zeebe/transport/impl/AtomixClientTransportAdapter.java", "diffHunk": "@@ -111,6 +126,12 @@ private void tryToSend(final RequestContext requestContext) {\n       return;\n     }\n \n+    LOG.trace(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6be707a2be67ce84867cee03fac32511a7755814"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyODQ4MjA1OnYy", "diffSide": "RIGHT", "path": "transport/src/main/java/io/zeebe/transport/impl/AtomixClientTransportAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTo1MToxM1rOGwhW1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTo1MToxM1rOGwhW1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUzMTM0OQ==", "bodyText": "Maybe wrap in isTraceEnabled(). Also at other places in this class", "url": "https://github.com/camunda-cloud/zeebe/pull/4946#discussion_r453531349", "createdAt": "2020-07-13T09:51:13Z", "author": {"login": "pihme"}, "path": "transport/src/main/java/io/zeebe/transport/impl/AtomixClientTransportAdapter.java", "diffHunk": "@@ -122,14 +143,21 @@ private void tryToSend(final RequestContext requestContext) {\n   private void handleResponse(\n       final RequestContext requestContext, final byte[] response, final Throwable errorOnRequest) {\n     if (requestContext.isDone()) {\n+      LOG.trace(\"Handle response, but request {} is already done\", requestContext.hashCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6be707a2be67ce84867cee03fac32511a7755814"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyODQ4NjAxOnYy", "diffSide": "RIGHT", "path": "transport/src/main/java/io/zeebe/transport/impl/AtomixServerTransport.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTo1MjoxMFrOGwhZOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMDoxMToxMlrOGwiFWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUzMTk2MQ==", "bodyText": "Maybe wrp in \u00ecsTraceEnabled() also at other places in this class", "url": "https://github.com/camunda-cloud/zeebe/pull/4946#discussion_r453531961", "createdAt": "2020-07-13T09:52:10Z", "author": {"login": "pihme"}, "path": "transport/src/main/java/io/zeebe/transport/impl/AtomixServerTransport.java", "diffHunk": "@@ -68,9 +65,11 @@ public void close() {\n   public ActorFuture<Void> subscribe(final int partitionId, final RequestHandler requestHandler) {\n     return actor.call(\n         () -> {\n+          final var topicName = topicName(partitionId);\n+          LOG.trace(\"Subscribe for topic {}\", topicName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6be707a2be67ce84867cee03fac32511a7755814"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUzNDE2MA==", "bodyText": "actually this is done by ZbLogger as far as I know", "url": "https://github.com/camunda-cloud/zeebe/pull/4946#discussion_r453534160", "createdAt": "2020-07-13T09:55:56Z", "author": {"login": "Zelldon"}, "path": "transport/src/main/java/io/zeebe/transport/impl/AtomixServerTransport.java", "diffHunk": "@@ -68,9 +65,11 @@ public void close() {\n   public ActorFuture<Void> subscribe(final int partitionId, final RequestHandler requestHandler) {\n     return actor.call(\n         () -> {\n+          final var topicName = topicName(partitionId);\n+          LOG.trace(\"Subscribe for topic {}\", topicName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUzMTk2MQ=="}, "originalCommit": {"oid": "6be707a2be67ce84867cee03fac32511a7755814"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUzNTk5Nw==", "bodyText": "No, it is not. ZBLogger will prevent it from being logged (which ordinary loggers do anyways), but still the string will need to be composed, which can be expensive.\nIn newer logging implementation you often find lambdas:\nLOG.trace(() -> calculateLongString()) which circumvent this once and for all. But these methods aren't available in Logger", "url": "https://github.com/camunda-cloud/zeebe/pull/4946#discussion_r453535997", "createdAt": "2020-07-13T09:58:54Z", "author": {"login": "pihme"}, "path": "transport/src/main/java/io/zeebe/transport/impl/AtomixServerTransport.java", "diffHunk": "@@ -68,9 +65,11 @@ public void close() {\n   public ActorFuture<Void> subscribe(final int partitionId, final RequestHandler requestHandler) {\n     return actor.call(\n         () -> {\n+          final var topicName = topicName(partitionId);\n+          LOG.trace(\"Subscribe for topic {}\", topicName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUzMTk2MQ=="}, "originalCommit": {"oid": "6be707a2be67ce84867cee03fac32511a7755814"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU0MzI1OQ==", "bodyText": "ok get what you mean thanks", "url": "https://github.com/camunda-cloud/zeebe/pull/4946#discussion_r453543259", "createdAt": "2020-07-13T10:11:12Z", "author": {"login": "Zelldon"}, "path": "transport/src/main/java/io/zeebe/transport/impl/AtomixServerTransport.java", "diffHunk": "@@ -68,9 +65,11 @@ public void close() {\n   public ActorFuture<Void> subscribe(final int partitionId, final RequestHandler requestHandler) {\n     return actor.call(\n         () -> {\n+          final var topicName = topicName(partitionId);\n+          LOG.trace(\"Subscribe for topic {}\", topicName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUzMTk2MQ=="}, "originalCommit": {"oid": "6be707a2be67ce84867cee03fac32511a7755814"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 442, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}