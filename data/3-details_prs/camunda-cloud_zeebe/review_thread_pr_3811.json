{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNzI2ODIy", "number": 3811, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwOTowODoyMlrODgUE7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMjoxMzowOVrODh29sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MjA5OTY2OnYy", "diffSide": "RIGHT", "path": "gateway/src/main/java/io/zeebe/gateway/EndpointManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwOTowODoyMlrOFqc3Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwOToxNzozOVrOFqdItA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA1NzM4Mw==", "bodyText": "Could we somehow reuse the method sendRequest, i dont like this duplication.", "url": "https://github.com/camunda-cloud/zeebe/pull/3811#discussion_r380057383", "createdAt": "2020-02-17T09:08:22Z", "author": {"login": "Zelldon"}, "path": "gateway/src/main/java/io/zeebe/gateway/EndpointManager.java", "diffHunk": "@@ -320,6 +326,11 @@ public void updateJobRetries(\n       return;\n     }\n \n+    final ServerCallStreamObserver<GrpcResponseT> serverObserver =\n+        (ServerCallStreamObserver<GrpcResponseT>) streamObserver;\n+    serverObserver.setOnCancelHandler(\n+        () -> Loggers.GATEWAY_LOGGER.trace(\"gRPC {} request cancelled\", grpcRequest.getClass()));\n+\n     brokerClient.sendRequest(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21b6320f3317bbd95f5a50d27e7520b18e32981c"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA2MTg3Ng==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/camunda-cloud/zeebe/pull/3811#discussion_r380061876", "createdAt": "2020-02-17T09:17:39Z", "author": {"login": "npepinpe"}, "path": "gateway/src/main/java/io/zeebe/gateway/EndpointManager.java", "diffHunk": "@@ -320,6 +326,11 @@ public void updateJobRetries(\n       return;\n     }\n \n+    final ServerCallStreamObserver<GrpcResponseT> serverObserver =\n+        (ServerCallStreamObserver<GrpcResponseT>) streamObserver;\n+    serverObserver.setOnCancelHandler(\n+        () -> Loggers.GATEWAY_LOGGER.trace(\"gRPC {} request cancelled\", grpcRequest.getClass()));\n+\n     brokerClient.sendRequest(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA1NzM4Mw=="}, "originalCommit": {"oid": "21b6320f3317bbd95f5a50d27e7520b18e32981c"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODMwMTMwOnYy", "diffSide": "RIGHT", "path": "gateway/src/main/java/io/zeebe/gateway/EndpointManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMjoxMzowOVrOFs0_yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjoyODo0MFrOFs839Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU0OTk2Mg==", "bodyText": "What happend before without the handler again? Sorry \ud83d\ude05", "url": "https://github.com/camunda-cloud/zeebe/pull/3811#discussion_r382549962", "createdAt": "2020-02-21T12:13:09Z", "author": {"login": "Zelldon"}, "path": "gateway/src/main/java/io/zeebe/gateway/EndpointManager.java", "diffHunk": "@@ -320,13 +322,22 @@ public void updateJobRetries(\n       return;\n     }\n \n+    suppressCancelledException(grpcRequest, streamObserver);\n     brokerClient.sendRequest(\n         brokerRequest,\n         (key, response) -> consumeResponse(responseMapper, streamObserver, key, response),\n         error -> streamObserver.onError(convertThrowable(error)),\n         timeout);\n   }\n \n+  private <GrpcRequestT, GrpcResponseT> void suppressCancelledException(\n+      final GrpcRequestT grpcRequest, final StreamObserver<GrpcResponseT> streamObserver) {\n+    final ServerCallStreamObserver<GrpcResponseT> serverObserver =\n+        (ServerCallStreamObserver<GrpcResponseT>) streamObserver;\n+    serverObserver.setOnCancelHandler(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abe08abc220a47471bc160ffa7de54fe7ec17ecb"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU1MDcxMQ==", "bodyText": "Because these exceptions are fixed with the addition check right?\nI 2020-01-30T03:17:21.480895200Z io.grpc.StatusRuntimeException: CANCELLED: call already cancelled\n\tat io.grpc.Status.asRuntimeException(Status.java:524) ~[grpc-api-1.26.0.jar:1.26.0]\n\tat io.grpc.stub.ServerCalls$ServerCallStreamObserverImpl.onCompleted(ServerCalls.java:368) ~[grpc-stub-1.26.0.jar:1.26.0]\n\tat io.zeebe.gateway.impl.job.LongPollingActivateJobsRequest.complete(LongPollingActivateJobsRequest.java:73) ~[zeebe-gateway-0.23.0-SNAPSHOT.jar:0.23.0-SNAPSHOT]\n\tat io.zeebe.gateway.impl.job.LongPollingActivateJobsRequest.timeout(LongPollingActivateJobsRequest.java:95) ~[zeebe-gateway-0.23.0-SNAPSHOT.jar:0.23.0-SNAPSHOT]\n\tat io.zeebe.gateway.impl.job.LongPollingActivateJobsHandler.lambda$addTimeOut$9(LongPollingActivateJobsHandler.java:191) ~[zeebe-gateway-0.23.0-SNAPSHOT.jar:0.23.0-SNAPSHOT]\n\tat io.zeebe.util.sched.ActorJob.invoke(ActorJob.java:76) [zeebe-util-0.23.0-SNAPSHOT.jar:0.23.0-SNAPSHOT]\n\tat io.zeebe.util.sched.ActorJob.execute(ActorJob.java:39) [zeebe-util-0.23.0-SNAPSHOT.jar:0.23.0-SNAPSHOT]\n\tat io.zeebe.util.sched.ActorTask.execute(ActorTask.java:115) [zeebe-util-0.23.0-SNAPSHOT.jar:0.23.0-SNAPSHOT]\n\tat io.zeebe.util.sched.ActorThread.executeCurrentTask(ActorThread.java:107) [zeebe-util-0.23.0-SNAPSHOT.jar:0.23.0-SNAPSHOT]\n\tat io.zeebe.util.sched.ActorThread.doWork(ActorThread.java:91) [zeebe-util-0.23.0-SNAPSHOT.jar:0.23.0-SNAPSHOT]\n\tat io.zeebe.util.sched.ActorThread.run(ActorThread.java:195) [zeebe-util-0.23.0-SNAPSHOT.jar:0.23.0-SNAPSHOT]", "url": "https://github.com/camunda-cloud/zeebe/pull/3811#discussion_r382550711", "createdAt": "2020-02-21T12:15:21Z", "author": {"login": "Zelldon"}, "path": "gateway/src/main/java/io/zeebe/gateway/EndpointManager.java", "diffHunk": "@@ -320,13 +322,22 @@ public void updateJobRetries(\n       return;\n     }\n \n+    suppressCancelledException(grpcRequest, streamObserver);\n     brokerClient.sendRequest(\n         brokerRequest,\n         (key, response) -> consumeResponse(responseMapper, streamObserver, key, response),\n         error -> streamObserver.onError(convertThrowable(error)),\n         timeout);\n   }\n \n+  private <GrpcRequestT, GrpcResponseT> void suppressCancelledException(\n+      final GrpcRequestT grpcRequest, final StreamObserver<GrpcResponseT> streamObserver) {\n+    final ServerCallStreamObserver<GrpcResponseT> serverObserver =\n+        (ServerCallStreamObserver<GrpcResponseT>) streamObserver;\n+    serverObserver.setOnCancelHandler(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU0OTk2Mg=="}, "originalCommit": {"oid": "abe08abc220a47471bc160ffa7de54fe7ec17ecb"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY3OTAyOQ==", "bodyText": "Yes, it's the current way grpc-java has to disable throwing an exception when the call was already cancelled (not ideal imo, but that's their current recommended workaround)", "url": "https://github.com/camunda-cloud/zeebe/pull/3811#discussion_r382679029", "createdAt": "2020-02-21T16:28:40Z", "author": {"login": "npepinpe"}, "path": "gateway/src/main/java/io/zeebe/gateway/EndpointManager.java", "diffHunk": "@@ -320,13 +322,22 @@ public void updateJobRetries(\n       return;\n     }\n \n+    suppressCancelledException(grpcRequest, streamObserver);\n     brokerClient.sendRequest(\n         brokerRequest,\n         (key, response) -> consumeResponse(responseMapper, streamObserver, key, response),\n         error -> streamObserver.onError(convertThrowable(error)),\n         timeout);\n   }\n \n+  private <GrpcRequestT, GrpcResponseT> void suppressCancelledException(\n+      final GrpcRequestT grpcRequest, final StreamObserver<GrpcResponseT> streamObserver) {\n+    final ServerCallStreamObserver<GrpcResponseT> serverObserver =\n+        (ServerCallStreamObserver<GrpcResponseT>) streamObserver;\n+    serverObserver.setOnCancelHandler(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU0OTk2Mg=="}, "originalCommit": {"oid": "abe08abc220a47471bc160ffa7de54fe7ec17ecb"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4962, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}