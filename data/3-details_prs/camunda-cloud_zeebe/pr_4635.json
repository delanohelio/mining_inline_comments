{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1MDI0NzUz", "number": 4635, "title": "4547 replace custom http server", "bodyText": "Description\nReplaces HTTP server with Spring Boot server. See #4547 for details of implementation.\nRelated issues\ncloses #4547, #4492, #4632\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-05-29T10:36:17Z", "url": "https://github.com/camunda-cloud/zeebe/pull/4635", "merged": true, "mergeCommit": {"oid": "9dc25b0067f4da6117ad9704aee71411ad88b11e"}, "closed": true, "closedAt": "2020-06-11T14:43:43Z", "author": {"login": "pihme"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoAXFYAFqTQyNDE2MjY2Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqPGK4gBqjM0MzQ0MjY5ODI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MTYyNjYz", "url": "https://github.com/camunda-cloud/zeebe/pull/4635#pullrequestreview-424162663", "createdAt": "2020-06-04T07:15:36Z", "commit": {"oid": "6e0b574fdc8dc8ba91c30de6d7413ef7acc988ea"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNzoxNTozNlrOGe4xMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjowMzoyN1rOGfNIRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA0MDU2Mg==", "bodyText": "I was under the impression this module was necessary for the HotSpot collectors? Are there any side effects to removing it?", "url": "https://github.com/camunda-cloud/zeebe/pull/4635#discussion_r435040562", "createdAt": "2020-06-04T07:15:36Z", "author": {"login": "npepinpe"}, "path": "broker/pom.xml", "diffHunk": "@@ -178,16 +160,6 @@\n       <artifactId>simpleclient</artifactId>\n     </dependency>\n \n-    <dependency>\n-      <groupId>io.prometheus</groupId>\n-      <artifactId>simpleclient_common</artifactId>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>io.prometheus</groupId>\n-      <artifactId>simpleclient_hotspot</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e0b574fdc8dc8ba91c30de6d7413ef7acc988ea"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0NDQyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (healthCheckServiceSupplier != null) {\n          \n          \n            \n                  return Optional.ofNullable(healthCheckServiceSupplier.get());\n          \n          \n            \n                } else {\n          \n          \n            \n                  return Optional.empty();\n          \n          \n            \n                }\n          \n          \n            \n                return Optional.ofNullable(healthCheckServiceSupplier).map(Supplier::get);", "url": "https://github.com/camunda-cloud/zeebe/pull/4635#discussion_r435344422", "createdAt": "2020-06-04T15:24:04Z", "author": {"login": "npepinpe"}, "path": "broker/src/main/java/io/zeebe/broker/SpringBrokerBridge.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker;\n+\n+import io.zeebe.broker.system.monitoring.BrokerHealthCheckService;\n+import java.util.Optional;\n+import java.util.function.Supplier;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Helper class that allows Spring beans to access information from the Broker code that is not\n+ * managed by Spring\n+ */\n+@Component\n+public class SpringBrokerBridge {\n+\n+  private Supplier<BrokerHealthCheckService> healthCheckServiceSupplier;\n+\n+  public void registerBrokerHealthCheckServiceSupplier(\n+      Supplier<BrokerHealthCheckService> healthCheckServiceSupplier) {\n+    this.healthCheckServiceSupplier = healthCheckServiceSupplier;\n+  }\n+\n+  public Optional<BrokerHealthCheckService> getBrokerHealthCheckService() {\n+    if (healthCheckServiceSupplier != null) {\n+      return Optional.ofNullable(healthCheckServiceSupplier.get());\n+    } else {\n+      return Optional.empty();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e0b574fdc8dc8ba91c30de6d7413ef7acc988ea"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2NTE4NQ==", "bodyText": "We have a zeebe-test-util module, where we group test utilities. Do you think this could fit there, as opposed to depending on the test JAR of the client module?", "url": "https://github.com/camunda-cloud/zeebe/pull/4635#discussion_r435365185", "createdAt": "2020-06-04T15:50:28Z", "author": {"login": "npepinpe"}, "path": "clients/java/src/test/java/io/zeebe/client/assertions/TopologyAssert.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright \u00a9 2017 camunda services GmbH (info@camunda.com)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.zeebe.client.assertions;\n+\n+import io.zeebe.client.api.response.BrokerInfo;\n+import io.zeebe.client.api.response.Topology;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.assertj.core.api.AbstractAssert;\n+\n+public class TopologyAssert extends AbstractAssert<TopologyAssert, Topology> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e0b574fdc8dc8ba91c30de6d7413ef7acc988ea"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2NjQ0OQ==", "bodyText": "Is this because the config may not have been initialized through the Broker yet? If so it feels a little fragile, having this call coming from different places; do we have any other options? Or perhaps it's not as big of a deal as I think, what do you think?", "url": "https://github.com/camunda-cloud/zeebe/pull/4635#discussion_r435366449", "createdAt": "2020-06-04T15:52:25Z", "author": {"login": "npepinpe"}, "path": "dist/src/main/java/io/zeebe/broker/BrokerSpringServerCustomizer.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker;\n+\n+import static java.net.InetAddress.getByName;\n+\n+import io.prometheus.client.CollectorRegistry;\n+import io.zeebe.broker.system.configuration.BrokerCfg;\n+import io.zeebe.util.exception.UncheckedExecutionException;\n+import java.net.UnknownHostException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration;\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.web.server.WebServerFactoryCustomizer;\n+import org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class BrokerSpringServerCustomizer\n+    implements WebServerFactoryCustomizer<ConfigurableServletWebServerFactory> {\n+\n+  @Autowired BrokerCfg brokerCfg;\n+\n+  @Override\n+  public void customize(ConfigurableServletWebServerFactory server) {\n+    final var networkCfg = brokerCfg.getNetwork();\n+    // trigger application of defaults so that the monitoring config no longer has null values\n+    networkCfg.applyDefaults();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e0b574fdc8dc8ba91c30de6d7413ef7acc988ea"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM3Mzc1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public final class BrokerMonitoirngEndpointTest {\n          \n          \n            \n            public final class BrokerMonitoringEndpointTest {", "url": "https://github.com/camunda-cloud/zeebe/pull/4635#discussion_r435373755", "createdAt": "2020-06-04T16:02:51Z", "author": {"login": "npepinpe"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/health/BrokerMonitoirngEndpointTest.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.it.health;\n+\n+import static io.restassured.RestAssured.given;\n+\n+import io.restassured.builder.RequestSpecBuilder;\n+import io.restassured.filter.log.RequestLoggingFilter;\n+import io.restassured.filter.log.ResponseLoggingFilter;\n+import io.restassured.http.ContentType;\n+import io.restassured.specification.RequestSpecification;\n+import io.zeebe.containers.ZeebeBrokerContainer;\n+import java.io.IOException;\n+import org.hamcrest.CoreMatchers;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public final class BrokerMonitoirngEndpointTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e0b574fdc8dc8ba91c30de6d7413ef7acc988ea"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM3NDE1MA==", "bodyText": "I'm not familiar with this framework RestAssured, but I like it, great stuff \ud83d\udc4d\nMaybe when we wrap up the OKR and we show it off, you can also mention how to test these things, as I don't know if everybody on the team is familiar with this.", "url": "https://github.com/camunda-cloud/zeebe/pull/4635#discussion_r435374150", "createdAt": "2020-06-04T16:03:27Z", "author": {"login": "npepinpe"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/health/BrokerMonitoirngEndpointTest.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.it.health;\n+\n+import static io.restassured.RestAssured.given;\n+\n+import io.restassured.builder.RequestSpecBuilder;\n+import io.restassured.filter.log.RequestLoggingFilter;\n+import io.restassured.filter.log.ResponseLoggingFilter;\n+import io.restassured.http.ContentType;\n+import io.restassured.specification.RequestSpecification;\n+import io.zeebe.containers.ZeebeBrokerContainer;\n+import java.io.IOException;\n+import org.hamcrest.CoreMatchers;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public final class BrokerMonitoirngEndpointTest {\n+\n+  static ZeebeBrokerContainer sutBroker;\n+\n+  static RequestSpecification brokerServerSpec;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e0b574fdc8dc8ba91c30de6d7413ef7acc988ea"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a98a725471914b9fc66a94d548c9bfa005fa622c", "author": {"user": {"login": "pihme", "name": "Peter Ihme"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/a98a725471914b9fc66a94d548c9bfa005fa622c", "committedDate": "2020-06-05T12:01:05Z", "message": "Apply suggestions from code review\r\n\r\nchore(broker): accept review suggestions\n\nCo-authored-by: Nicolas Pepin-Perreault <nicolas.pepin-perreault@camunda.com>"}, "afterCommit": {"oid": "d4f7a762503085781fbe4ca9668b77a5f713b98a", "author": {"user": {"login": "pihme", "name": "Peter Ihme"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/d4f7a762503085781fbe4ca9668b77a5f713b98a", "committedDate": "2020-06-05T12:20:26Z", "message": "chore(broker): accept review suggestions\n\nCo-authored-by: Nicolas Pepin-Perreault <nicolas.pepin-perreault@camunda.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86d9a65a40c620f54d0ae19f244cf26c8c663d91", "author": {"user": {"login": "pihme", "name": "Peter Ihme"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/86d9a65a40c620f54d0ae19f244cf26c8c663d91", "committedDate": "2020-06-05T13:11:11Z", "message": "chore(broker): incorporate review comments"}, "afterCommit": {"oid": "c9b0a188e3ae28fb2a864f739de16d0df160659d", "author": {"user": {"login": "pihme", "name": "Peter Ihme"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/c9b0a188e3ae28fb2a864f739de16d0df160659d", "committedDate": "2020-06-10T13:55:16Z", "message": "chore(broker): incorporate review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4ODY4MzI1", "url": "https://github.com/camunda-cloud/zeebe/pull/4635#pullrequestreview-428868325", "createdAt": "2020-06-11T12:41:51Z", "commit": {"oid": "12961ef1eb2df5f0d00d45bde5c0168b79bbc330"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d8eb261c125834b8e5e3b3ef126a436095d3b3c", "author": {"user": {"login": "pihme", "name": "Peter Ihme"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/9d8eb261c125834b8e5e3b3ef126a436095d3b3c", "committedDate": "2020-06-11T14:22:31Z", "message": "chore(broker): replace custom HTTP server for Broker and Gateway"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "12961ef1eb2df5f0d00d45bde5c0168b79bbc330", "author": {"user": {"login": "pihme", "name": "Peter Ihme"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/12961ef1eb2df5f0d00d45bde5c0168b79bbc330", "committedDate": "2020-06-10T14:12:27Z", "message": "chore(broker): move TopologyAssert into test-util"}, "afterCommit": {"oid": "9d8eb261c125834b8e5e3b3ef126a436095d3b3c", "author": {"user": {"login": "pihme", "name": "Peter Ihme"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/9d8eb261c125834b8e5e3b3ef126a436095d3b3c", "committedDate": "2020-06-11T14:22:31Z", "message": "chore(broker): replace custom HTTP server for Broker and Gateway"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2716, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}