{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NjkwODA2", "number": 4139, "title": "chore(qa): fix flaky snapshot replication test", "bodyText": "Description\nensure we don't restart broker-0 to prevent unexpected elections.\nRelated issues\ncloses #4053\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-03-27T11:09:12Z", "url": "https://github.com/camunda-cloud/zeebe/pull/4139", "merged": true, "mergeCommit": {"oid": "8d2ff1d553537a7d28c934e3afca6f9864759891"}, "closed": true, "closedAt": "2020-03-27T13:47:07Z", "author": {"login": "deepthidevaki"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRvGLigFqTM4Mjc3ODU2Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRvZ6PABqjMxNzIwOTYwMTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNzc4NTY3", "url": "https://github.com/camunda-cloud/zeebe/pull/4139#pullrequestreview-382778567", "createdAt": "2020-03-27T11:31:57Z", "commit": {"oid": "7679ca22ebd8fa10e4251a3e5711996723dfd870"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMTozMTo1N1rOF8tS8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMTozNDo1M1rOF8tY6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMTAxMA==", "bodyText": "Nit: to get rid of warnings, you can use orElseThrow() instead of get() in tests, since probably if we didn't find it you'd want to abort anyway.", "url": "https://github.com/camunda-cloud/zeebe/pull/4139#discussion_r399201010", "createdAt": "2020-03-27T11:31:57Z", "author": {"login": "npepinpe"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/SnapshotReplicationTest.java", "diffHunk": "@@ -77,9 +77,16 @@ public void shouldReplicateSnapshots() {\n   public void shouldReceiveLatestSnapshotOnRejoin() {\n     // given\n     final var leaderNodeId = clusteringRule.getLeaderForPartition(1).getNodeId();\n-    final var otherBrokers = clusteringRule.getOtherBrokerObjects(leaderNodeId);\n-    final var firstFollowerId = otherBrokers.get(0).getConfig().getCluster().getNodeId();\n-    final var secondFollowerId = otherBrokers.get(1).getConfig().getCluster().getNodeId();\n+    final var followers =\n+        clusteringRule.getOtherBrokerObjects(leaderNodeId).stream()\n+            .map(b -> b.getConfig().getCluster().getNodeId())\n+            .collect(Collectors.toList());\n+\n+    // Temp fix to make sure we don't restart broker-0 due to\n+    // https://github.com/zeebe-io/atomix/issues/208\n+    final var firstFollowerId = followers.stream().filter(nodeId -> nodeId != 0).findFirst().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7679ca22ebd8fa10e4251a3e5711996723dfd870"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMTQ1OA==", "bodyText": "Nit: by using implicit variable inference with var above, the type of firstFollowerId is now Number (i.e. it was not implicitly unboxed by casting it to int), so != checks object instance equality. I mean it works here but not sure if this is what you intended \ud83d\ude05", "url": "https://github.com/camunda-cloud/zeebe/pull/4139#discussion_r399201458", "createdAt": "2020-03-27T11:32:52Z", "author": {"login": "npepinpe"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/SnapshotReplicationTest.java", "diffHunk": "@@ -77,9 +77,16 @@ public void shouldReplicateSnapshots() {\n   public void shouldReceiveLatestSnapshotOnRejoin() {\n     // given\n     final var leaderNodeId = clusteringRule.getLeaderForPartition(1).getNodeId();\n-    final var otherBrokers = clusteringRule.getOtherBrokerObjects(leaderNodeId);\n-    final var firstFollowerId = otherBrokers.get(0).getConfig().getCluster().getNodeId();\n-    final var secondFollowerId = otherBrokers.get(1).getConfig().getCluster().getNodeId();\n+    final var followers =\n+        clusteringRule.getOtherBrokerObjects(leaderNodeId).stream()\n+            .map(b -> b.getConfig().getCluster().getNodeId())\n+            .collect(Collectors.toList());\n+\n+    // Temp fix to make sure we don't restart broker-0 due to\n+    // https://github.com/zeebe-io/atomix/issues/208\n+    final var firstFollowerId = followers.stream().filter(nodeId -> nodeId != 0).findFirst().get();\n+    final var secondFollowerId =\n+        followers.stream().filter(nodeId -> nodeId != firstFollowerId).findFirst().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7679ca22ebd8fa10e4251a3e5711996723dfd870"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIwMjUzNg==", "bodyText": "Nit: I guess we could just sort by nodeId and always pick the last one, which is for sure not 0. But the intent of what we're doing may be less clear as we're not explicitly checking for != 0, which is more obvious. Plus I hope this is temporary, so \ud83e\udd37\u200d\u2642\ufe0f", "url": "https://github.com/camunda-cloud/zeebe/pull/4139#discussion_r399202536", "createdAt": "2020-03-27T11:34:53Z", "author": {"login": "npepinpe"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/SnapshotReplicationTest.java", "diffHunk": "@@ -77,9 +77,16 @@ public void shouldReplicateSnapshots() {\n   public void shouldReceiveLatestSnapshotOnRejoin() {\n     // given\n     final var leaderNodeId = clusteringRule.getLeaderForPartition(1).getNodeId();\n-    final var otherBrokers = clusteringRule.getOtherBrokerObjects(leaderNodeId);\n-    final var firstFollowerId = otherBrokers.get(0).getConfig().getCluster().getNodeId();\n-    final var secondFollowerId = otherBrokers.get(1).getConfig().getCluster().getNodeId();\n+    final var followers =\n+        clusteringRule.getOtherBrokerObjects(leaderNodeId).stream()\n+            .map(b -> b.getConfig().getCluster().getNodeId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7679ca22ebd8fa10e4251a3e5711996723dfd870"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c0b590e0ca9aa41eb0d56802d6d2169e31f6379", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/9c0b590e0ca9aa41eb0d56802d6d2169e31f6379", "committedDate": "2020-03-27T11:56:16Z", "message": "chore(qa): fix flaky snapshot replication test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7679ca22ebd8fa10e4251a3e5711996723dfd870", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/7679ca22ebd8fa10e4251a3e5711996723dfd870", "committedDate": "2020-03-27T10:28:55Z", "message": "chore(qa): fix flaky snapshot replication test"}, "afterCommit": {"oid": "9c0b590e0ca9aa41eb0d56802d6d2169e31f6379", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/9c0b590e0ca9aa41eb0d56802d6d2169e31f6379", "committedDate": "2020-03-27T11:56:16Z", "message": "chore(qa): fix flaky snapshot replication test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2945, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}