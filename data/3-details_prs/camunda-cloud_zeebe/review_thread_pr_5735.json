{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMDI3MDQw", "number": 5735, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDowMjoxMVrOEzzngg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoyNjozN1rOEz3ceQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzU4NTMwOnYy", "diffSide": "RIGHT", "path": ".ci/scripts/distribution/it-java.sh", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDowMjoxMVrOHrQa8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDo1MDoyNFrOHrScAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExOTg1Nw==", "bodyText": "Only the jars build by us in the Build (Java) stage are stashed and unstashed, we still need to download all external dependencies from nexus so this can no longer be offline", "url": "https://github.com/camunda-cloud/zeebe/pull/5735#discussion_r515119857", "createdAt": "2020-10-30T14:02:11Z", "author": {"login": "korthout"}, "path": ".ci/scripts/distribution/it-java.sh", "diffHunk": "@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\"$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\"\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n+mvn -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6e33397b2d435821d0044f54defda7890243f93"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEyMjAwOA==", "bodyText": "Can't we just stash the whole .m2 folder?", "url": "https://github.com/camunda-cloud/zeebe/pull/5735#discussion_r515122008", "createdAt": "2020-10-30T14:04:30Z", "author": {"login": "npepinpe"}, "path": ".ci/scripts/distribution/it-java.sh", "diffHunk": "@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\"$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\"\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n+mvn -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExOTg1Nw=="}, "originalCommit": {"oid": "c6e33397b2d435821d0044f54defda7890243f93"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzMTA4NA==", "bodyText": "Please don't, that will depending on the size put severe load on the Jenkins central server as per https://www.jenkins.io/doc/pipeline/steps/workflow-basic-steps/#stash-stash-some-files-to-be-used-later-in-the-build:\n\nThis is because stashed files are archived in a compressed TAR, and with large files this demands considerable on-master resources, particularly CPU time. There's not a hard stash size limit, but between 5-100 MB you should probably consider alternatives.", "url": "https://github.com/camunda-cloud/zeebe/pull/5735#discussion_r515131084", "createdAt": "2020-10-30T14:18:14Z", "author": {"login": "cmur2"}, "path": ".ci/scripts/distribution/it-java.sh", "diffHunk": "@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\"$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\"\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n+mvn -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExOTg1Nw=="}, "originalCommit": {"oid": "c6e33397b2d435821d0044f54defda7890243f93"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzMjExMw==", "bodyText": "Hm, I suggested this because Optimize does it I think ;) What would you propose? Re-downloading all the artifacts is non negligible, and sometimes may cause builds to fail (which is one of the reason we decided to go offline after the initial pull in the past).", "url": "https://github.com/camunda-cloud/zeebe/pull/5735#discussion_r515132113", "createdAt": "2020-10-30T14:19:46Z", "author": {"login": "npepinpe"}, "path": ".ci/scripts/distribution/it-java.sh", "diffHunk": "@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\"$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\"\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n+mvn -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExOTg1Nw=="}, "originalCommit": {"oid": "c6e33397b2d435821d0044f54defda7890243f93"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzMjQwOQ==", "bodyText": "With stashing the artifacts produced by the Build (Java) stage we're already a bit over the limits suggested by the documentation. To preserve the whole .m2 folder a completely different approach needs to be taken, e.g. using a GCloud storage bucket with subfolders per branch and build number. This in turn involves having the GCloud SDK/gsutil tool available to the build and proper authentication etc.", "url": "https://github.com/camunda-cloud/zeebe/pull/5735#discussion_r515132409", "createdAt": "2020-10-30T14:20:10Z", "author": {"login": "cmur2"}, "path": ".ci/scripts/distribution/it-java.sh", "diffHunk": "@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\"$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\"\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n+mvn -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExOTg1Nw=="}, "originalCommit": {"oid": "c6e33397b2d435821d0044f54defda7890243f93"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzNDkyNQ==", "bodyText": "Hm, I suggested this because Optimize does it I think ;)\n\nI think Optimize caches also not everything but just org.camunda Maven group artifacts I think: https://github.com/camunda/camunda-optimize/blob/master/Jenkinsfile#L319\n\nRe-downloading all the artifacts is non negligible, and sometimes may cause builds to fail (which is one of the reason we decided to go offline after the initial pull in the past).\n\nRe-downloading is quite fine because we employ Maven caches located in the same K8s cluster as the CI jobs. They are referred using cluster-local URLs so also quite isolated and stable.", "url": "https://github.com/camunda-cloud/zeebe/pull/5735#discussion_r515134925", "createdAt": "2020-10-30T14:23:54Z", "author": {"login": "cmur2"}, "path": ".ci/scripts/distribution/it-java.sh", "diffHunk": "@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\"$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\"\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n+mvn -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExOTg1Nw=="}, "originalCommit": {"oid": "c6e33397b2d435821d0044f54defda7890243f93"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0OTYxMg==", "bodyText": "@npepinpe do you see any other issues with not using --offline?", "url": "https://github.com/camunda-cloud/zeebe/pull/5735#discussion_r515149612", "createdAt": "2020-10-30T14:45:39Z", "author": {"login": "korthout"}, "path": ".ci/scripts/distribution/it-java.sh", "diffHunk": "@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\"$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\"\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n+mvn -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExOTg1Nw=="}, "originalCommit": {"oid": "c6e33397b2d435821d0044f54defda7890243f93"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1Mjg5OA==", "bodyText": "I honestly can't remember why we did that, maybe @menski can?", "url": "https://github.com/camunda-cloud/zeebe/pull/5735#discussion_r515152898", "createdAt": "2020-10-30T14:50:24Z", "author": {"login": "npepinpe"}, "path": ".ci/scripts/distribution/it-java.sh", "diffHunk": "@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\"$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\"\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n+mvn -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExOTg1Nw=="}, "originalCommit": {"oid": "c6e33397b2d435821d0044f54defda7890243f93"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODIxMjQxOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoyNjozN1rOHrWouw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzoyMToyM1rOHz-bzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIyMTY5MQ==", "bodyText": "This change will be supported by camunda/infra-core#1729 but I'm holding back merging camunda/infra-core#1729 before it becomes clear that this PR get's green-lit.", "url": "https://github.com/camunda-cloud/zeebe/pull/5735#discussion_r515221691", "createdAt": "2020-10-30T16:26:37Z", "author": {"login": "cmur2"}, "path": "Jenkinsfile", "diffHunk": "@@ -69,12 +69,20 @@ pipeline {\n         }\n \n         stage('Build (Java)') {\n+            environment {\n+                VERSION = readMavenPom(file: 'parent/pom.xml').getVersion()\n+            }\n             steps {\n                 container('maven') {\n-                    configFileProvider([configFile(fileId: 'maven-nexus-settings-zeebe', variable: 'MAVEN_SETTINGS_XML')]) {\n+                    configFileProvider([configFile(fileId: 'maven-nexus-settings-zeebe-local-repo', variable: 'MAVEN_SETTINGS_XML')]) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89bc2f668be76287b289be82fd54728d1b627b07"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI1MTcxNA==", "bodyText": "@cmur2 should that change be made before this is merged?", "url": "https://github.com/camunda-cloud/zeebe/pull/5735#discussion_r524251714", "createdAt": "2020-11-16T13:03:20Z", "author": {"login": "korthout"}, "path": "Jenkinsfile", "diffHunk": "@@ -69,12 +69,20 @@ pipeline {\n         }\n \n         stage('Build (Java)') {\n+            environment {\n+                VERSION = readMavenPom(file: 'parent/pom.xml').getVersion()\n+            }\n             steps {\n                 container('maven') {\n-                    configFileProvider([configFile(fileId: 'maven-nexus-settings-zeebe', variable: 'MAVEN_SETTINGS_XML')]) {\n+                    configFileProvider([configFile(fileId: 'maven-nexus-settings-zeebe-local-repo', variable: 'MAVEN_SETTINGS_XML')]) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIyMTY5MQ=="}, "originalCommit": {"oid": "89bc2f668be76287b289be82fd54728d1b627b07"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI2MjM1MA==", "bodyText": "The order here is arbitrary as the change is already applied in https://ci.zeebe.camunda.cloud/configfiles/editConfig?id=maven-nexus-settings-zeebe-local-repo so my PR camunda/infra-core#1729 can go before or after, it merely makes official configuration as code what is applied in prod.", "url": "https://github.com/camunda-cloud/zeebe/pull/5735#discussion_r524262350", "createdAt": "2020-11-16T13:21:23Z", "author": {"login": "cmur2"}, "path": "Jenkinsfile", "diffHunk": "@@ -69,12 +69,20 @@ pipeline {\n         }\n \n         stage('Build (Java)') {\n+            environment {\n+                VERSION = readMavenPom(file: 'parent/pom.xml').getVersion()\n+            }\n             steps {\n                 container('maven') {\n-                    configFileProvider([configFile(fileId: 'maven-nexus-settings-zeebe', variable: 'MAVEN_SETTINGS_XML')]) {\n+                    configFileProvider([configFile(fileId: 'maven-nexus-settings-zeebe-local-repo', variable: 'MAVEN_SETTINGS_XML')]) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIyMTY5MQ=="}, "originalCommit": {"oid": "89bc2f668be76287b289be82fd54728d1b627b07"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 113, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}