{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NTExMzMw", "number": 4977, "title": "fix(broker): refactor zeebe partition health monitoring", "bodyText": "Description\nAdd ZeebePartition's health as a health monitorable component to the criticalComponentsHealthMonitor.\nRelated issues\ncloses #4943\nDefinition of Done\nNot all items need to be done depending on the issue and the pull request.\nCode changes:\n\n The changes are backwards compatibility with previous versions\n If it fixes a bug then PRs are created to backport the fix to the last two minor versions\n\nTesting:\n\n There are unit/integration tests that verify all acceptance criterias of the issue\n New tests are written to ensure backwards compatibility with further versions\n The behavior is tested manually\n The impact of the changes is verified by a benchmark\n\nDocumentation:\n\n The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\n New content is added to the release annoncement", "createdAt": "2020-07-15T14:17:26Z", "url": "https://github.com/camunda-cloud/zeebe/pull/4977", "merged": true, "mergeCommit": {"oid": "6bcad99e4f093043590ad32ba54a508254d0132a"}, "closed": true, "closedAt": "2020-07-21T12:14:17Z", "author": {"login": "deepthidevaki"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1dKKegFqTQ0OTU5OTQ3Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3CXfTgBqjM1NzAwOTMyMDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NTk5NDc3", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#pullrequestreview-449599477", "createdAt": "2020-07-16T07:46:45Z", "commit": {"oid": "70622ef699cc3dc3e9e08df43b74c0fdec152aac"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNzo0Njo0NVrOGyeN6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMTowMTo0OVrOGyl94g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU3NzA2Ng==", "bodyText": "To organize a little, please place this field next to raftPartitionHealth", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#discussion_r455577066", "createdAt": "2020-07-16T07:46:45Z", "author": {"login": "korthout"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -112,6 +111,7 @@\n   private long term;\n   private final String raftPartitionName;\n   private StreamProcessor streamProcessor;\n+  private final ZeebePartitionHealth zeebePartitionHealth;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70622ef699cc3dc3e9e08df43b74c0fdec152aac"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU3ODEwOA==", "bodyText": "Here I would appreciate that organisation as well.", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#discussion_r455578108", "createdAt": "2020-07-16T07:47:43Z", "author": {"login": "korthout"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -154,6 +154,7 @@ public ZeebePartition(\n     raftPartitionHealth = new RaftPartitionHealth(atomixRaftPartition, actor, this::onRaftFailed);\n     healthMetrics = new HealthMetrics(partitionId);\n     healthMetrics.setUnhealthy();\n+    zeebePartitionHealth = new ZeebePartitionHealth(partitionId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70622ef699cc3dc3e9e08df43b74c0fdec152aac"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU3OTc2OA==", "bodyText": "I like consistency. So please either create a zeebePartitionName field similar to raftPartitionName, or change raftPartitionName to a getName method as a member of RaftPartitionHealth", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#discussion_r455579768", "createdAt": "2020-07-16T07:49:21Z", "author": {"login": "korthout"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -665,16 +666,19 @@ public void onActorStarting() {\n     atomixLogStorage = AtomixLogStorage.ofPartition(zeebeIndexMapping, atomixRaftPartition);\n     atomixRaftPartition.getServer().addCommitListener(this);\n     atomixRaftPartition.addRoleChangeListener(this);\n+    criticalComponentsHealthMonitor.addFailureListener(this);\n     onRoleChange(atomixRaftPartition.getRole(), atomixRaftPartition.term());\n-    onRecoveredInternal();\n   }\n \n   @Override\n   protected void onActorStarted() {\n     criticalComponentsHealthMonitor.startMonitoring();\n-    criticalComponentsHealthMonitor.addFailureListener(this);\n-\n     criticalComponentsHealthMonitor.registerComponent(raftPartitionName, raftPartitionHealth);\n+    // Add a component that keep track of health of ZeebePartition. This way\n+    // criticalComponentsHealthMonitor can monitor the health of ZeebePartition similar to other\n+    // components.\n+    criticalComponentsHealthMonitor.registerComponent(\n+        zeebePartitionHealth.getName(), zeebePartitionHealth);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70622ef699cc3dc3e9e08df43b74c0fdec152aac"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU4MTk2Nw==", "bodyText": "This entire method (i.e. updateHealthStatus) can be inlined, I think that might be better, please just have a look whether that makes sense.", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#discussion_r455581967", "createdAt": "2020-07-16T07:51:28Z", "author": {"login": "korthout"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -748,45 +752,38 @@ private void onRecoveredInternal() {\n   }\n \n   private void updateHealthStatus(final HealthStatus newStatus) {\n-    if (healthStatus != newStatus) {\n-      healthStatus = newStatus;\n-      switch (newStatus) {\n-        case HEALTHY:\n-          healthMetrics.setHealthy();\n-          if (failureListener != null) {\n-            failureListener.onRecovered();\n-          }\n-          break;\n-        case UNHEALTHY:\n-          healthMetrics.setUnhealthy();\n-          if (failureListener != null) {\n-            failureListener.onFailure();\n-          }\n-          break;\n-        default:\n-          LOG.warn(\"Unknown health status {}\", newStatus);\n-          break;\n-      }\n-    }\n+    zeebePartitionHealth.setHealthStatus(newStatus);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70622ef699cc3dc3e9e08df43b74c0fdec152aac"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTcwMjU2MA==", "bodyText": "It's possible that the health status is updated, but that the failure listener is not made aware of this (because failure listener is still null), should we add a delayed onRecover/onFailure to the moment the failure listener is added?\nOf course we also still have the probing part (getHealthStatus), so that part works correctly anyways, but has delay, since its periodically", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#discussion_r455702560", "createdAt": "2020-07-16T10:58:58Z", "author": {"login": "korthout"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartitionHealth.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.partitions;\n+\n+import io.zeebe.util.health.FailureListener;\n+import io.zeebe.util.health.HealthMonitorable;\n+import io.zeebe.util.health.HealthStatus;\n+\n+/**\n+ * Reflects the health of ZeebePartition. The health is updated by ZeebePartition when role\n+ * transitions either succeeded or failed.\n+ */\n+class ZeebePartitionHealth implements HealthMonitorable {\n+  private HealthStatus healthStatus = HealthStatus.UNHEALTHY;\n+  private final String name;\n+  private FailureListener failureListener;\n+\n+  public ZeebePartitionHealth(final int partitionId) {\n+    this.name = \"ZeebePartition-\" + partitionId;\n+  }\n+\n+  @Override\n+  public HealthStatus getHealthStatus() {\n+    return healthStatus;\n+  }\n+\n+  @Override\n+  public void addFailureListener(final FailureListener failureListener) {\n+    this.failureListener = failureListener;\n+  }\n+\n+  void setHealthStatus(final HealthStatus healthStatus) {\n+    final var previousStatus = this.healthStatus;\n+    this.healthStatus = healthStatus;\n+\n+    if (previousStatus != healthStatus && failureListener != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70622ef699cc3dc3e9e08df43b74c0fdec152aac"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTcwNDAzNA==", "bodyText": "Also, perhaps we can find a way to remove the duplication between this method, CriticalComponentsHealthMonitor#calculateHealth and ZeebePartition#notifyFailureListenerAndUpdateMetrics?", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#discussion_r455704034", "createdAt": "2020-07-16T11:01:49Z", "author": {"login": "korthout"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartitionHealth.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.partitions;\n+\n+import io.zeebe.util.health.FailureListener;\n+import io.zeebe.util.health.HealthMonitorable;\n+import io.zeebe.util.health.HealthStatus;\n+\n+/**\n+ * Reflects the health of ZeebePartition. The health is updated by ZeebePartition when role\n+ * transitions either succeeded or failed.\n+ */\n+class ZeebePartitionHealth implements HealthMonitorable {\n+  private HealthStatus healthStatus = HealthStatus.UNHEALTHY;\n+  private final String name;\n+  private FailureListener failureListener;\n+\n+  public ZeebePartitionHealth(final int partitionId) {\n+    this.name = \"ZeebePartition-\" + partitionId;\n+  }\n+\n+  @Override\n+  public HealthStatus getHealthStatus() {\n+    return healthStatus;\n+  }\n+\n+  @Override\n+  public void addFailureListener(final FailureListener failureListener) {\n+    this.failureListener = failureListener;\n+  }\n+\n+  void setHealthStatus(final HealthStatus healthStatus) {\n+    final var previousStatus = this.healthStatus;\n+    this.healthStatus = healthStatus;\n+\n+    if (previousStatus != healthStatus && failureListener != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTcwMjU2MA=="}, "originalCommit": {"oid": "70622ef699cc3dc3e9e08df43b74c0fdec152aac"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjI4ODA5", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#pullrequestreview-451628809", "createdAt": "2020-07-20T13:55:35Z", "commit": {"oid": "36d56a12bbecd86210db87ecb34b51067da385d9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f836edfbc8f914b7460f1904608e549d99f9d10f", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/f836edfbc8f914b7460f1904608e549d99f9d10f", "committedDate": "2020-07-21T08:51:22Z", "message": "fix(broker): refactor zeebe partition health monitoring"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "36d56a12bbecd86210db87ecb34b51067da385d9", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/36d56a12bbecd86210db87ecb34b51067da385d9", "committedDate": "2020-07-17T08:24:40Z", "message": "chore(broker): review comments"}, "afterCommit": {"oid": "f836edfbc8f914b7460f1904608e549d99f9d10f", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/f836edfbc8f914b7460f1904608e549d99f9d10f", "committedDate": "2020-07-21T08:51:22Z", "message": "fix(broker): refactor zeebe partition health monitoring"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2702, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}