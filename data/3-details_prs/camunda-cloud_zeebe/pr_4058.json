{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MjE5ODk5", "number": 4058, "title": "chore(java): rearrange code", "bodyText": "Description\nLet intellij code formatter rearrange code", "createdAt": "2020-03-16T13:01:11Z", "url": "https://github.com/camunda-cloud/zeebe/pull/4058", "merged": true, "mergeCommit": {"oid": "ff3c0cf90dfe7f8b5a6a8bd002d92063589df33e"}, "closed": true, "closedAt": "2020-03-16T15:37:54Z", "author": {"login": "menski"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcONuUlgH2gAyMzg5MjE5ODk5Ojc4MDZlZGU3MGZjMTc5YTM3NTk2N2QyMWZhYzI1ZmYyMTgxMGE5MjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOTQ1EAFqTM3NTUyMTk5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7806ede70fc179a375967d21fac25ff21810a925", "author": {"user": {"login": "menski", "name": "Sebastian Menski"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/7806ede70fc179a375967d21fac25ff21810a925", "committedDate": "2020-03-16T13:00:23Z", "message": "chore(java): rearrange code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0eaffc8507d87468cf8977340ab0052aac99a32", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/e0eaffc8507d87468cf8977340ab0052aac99a32", "committedDate": "2020-03-16T13:08:15Z", "message": "chore(java): reformat after rearranging"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MTk2Mzky", "url": "https://github.com/camunda-cloud/zeebe/pull/4058#pullrequestreview-375196392", "createdAt": "2020-03-16T13:09:18Z", "commit": {"oid": "7806ede70fc179a375967d21fac25ff21810a925"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NTIxMDE2", "url": "https://github.com/camunda-cloud/zeebe/pull/4058#pullrequestreview-375521016", "createdAt": "2020-03-16T19:25:59Z", "commit": {"oid": "e0eaffc8507d87468cf8977340ab0052aac99a32"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOToyNTo1OVrOF3CyZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOToyNTo1OVrOF3CyZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI2MTY3MA==", "bodyText": "Why is this for example splitted with the setter \ud83d\ude05", "url": "https://github.com/camunda-cloud/zeebe/pull/4058#discussion_r393261670", "createdAt": "2020-03-16T19:25:59Z", "author": {"login": "Zelldon"}, "path": "transport/src/main/java/io/zeebe/transport/impl/ServerResponseImpl.java", "diffHunk": "@@ -72,4 +58,18 @@ public BufferWriter getWriter() {\n   public long getRequestId() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0eaffc8507d87468cf8977340ab0052aac99a32"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NTIxOTkw", "url": "https://github.com/camunda-cloud/zeebe/pull/4058#pullrequestreview-375521990", "createdAt": "2020-03-16T19:27:35Z", "commit": {"oid": "e0eaffc8507d87468cf8977340ab0052aac99a32"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOToyNzozNlrOF3C1dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOToyNzozNlrOF3C1dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI2MjQ1Mg==", "bodyText": "Which setting exactly we used now? It seems for me it is lexicographical method ordering ?", "url": "https://github.com/camunda-cloud/zeebe/pull/4058#discussion_r393262452", "createdAt": "2020-03-16T19:27:36Z", "author": {"login": "Zelldon"}, "path": "logstreams/src/test/java/io/zeebe/logstreams/util/SyncLogStream.java", "diffHunk": "@@ -73,4 +63,14 @@ public void setCommitPosition(final long position) {\n   public LogStreamReader newLogStreamReader() {\n     return logStream.newLogStreamReader().join();\n   }\n+\n+  @Override\n+  public LogStreamRecordWriter newLogStreamRecordWriter() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0eaffc8507d87468cf8977340ab0052aac99a32"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3067, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}