{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NDg4OTEz", "number": 5893, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzozMjo0OFrOE8N9QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNjoyNDoxM1rOE9feuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTc4Njg5OnYy", "diffSide": "RIGHT", "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzozMjo0OFrOH4NmXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNDowODoxMFrOH5CeoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcwNTExNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private void validate() throws IllegalArgumentException {\n          \n          \n            \n              private void validate() {\n          \n      \n    \n    \n  \n\nSonarLint will complain about this declaration since IllegalArgumentException is a RuntimeException and doesn't need to be declared", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r528705117", "createdAt": "2020-11-23T13:32:48Z", "author": {"login": "MiguelPires"}, "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -146,9 +193,17 @@ private void applyDefaults() {\n     if (authorizationServerUrl == null) {\n       authorizationServerUrl = DEFAULT_AUTHZ_SERVER;\n     }\n+\n+    if (connectTimeout == null) {\n+      connectTimeout = DEFAULT_CONNECT_TIMEOUT;\n+    }\n+\n+    if (readTimeout == null) {\n+      readTimeout = DEFAULT_READ_TIMEOUT;\n+    }\n   }\n \n-  private void validate() {\n+  private void validate() throws IllegalArgumentException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "275241d9a027b64d58b1eec4ba781eca8ae42425"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU3MTQ4OA==", "bodyText": "Done", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r529571488", "createdAt": "2020-11-24T14:08:10Z", "author": {"login": "aivinog1"}, "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -146,9 +193,17 @@ private void applyDefaults() {\n     if (authorizationServerUrl == null) {\n       authorizationServerUrl = DEFAULT_AUTHZ_SERVER;\n     }\n+\n+    if (connectTimeout == null) {\n+      connectTimeout = DEFAULT_CONNECT_TIMEOUT;\n+    }\n+\n+    if (readTimeout == null) {\n+      readTimeout = DEFAULT_READ_TIMEOUT;\n+    }\n   }\n \n-  private void validate() {\n+  private void validate() throws IllegalArgumentException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcwNTExNw=="}, "originalCommit": {"oid": "275241d9a027b64d58b1eec4ba781eca8ae42425"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTgzMjA2OnYy", "diffSide": "RIGHT", "path": "clients/java/src/test/java/io/zeebe/client/OAuthCredentialsProviderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzo0NDowOVrOH4OBzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNDowODoxNlrOH5Cezw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcxMjE0MA==", "bodyText": "Maybe we can call these arguments replyDelay, I think it'd be clearer", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r528712140", "createdAt": "2020-11-23T13:44:09Z", "author": {"login": "MiguelPires"}, "path": "clients/java/src/test/java/io/zeebe/client/OAuthCredentialsProviderTest.java", "diffHunk": "@@ -442,7 +513,20 @@ private void mockCredentials(final String accessToken) {\n     mockCredentials(accessToken, AUDIENCE);\n   }\n \n+  private void mockCredentials(final Integer readDelay) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "275241d9a027b64d58b1eec4ba781eca8ae42425"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU3MTUzNQ==", "bodyText": "Done", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r529571535", "createdAt": "2020-11-24T14:08:16Z", "author": {"login": "aivinog1"}, "path": "clients/java/src/test/java/io/zeebe/client/OAuthCredentialsProviderTest.java", "diffHunk": "@@ -442,7 +513,20 @@ private void mockCredentials(final String accessToken) {\n     mockCredentials(accessToken, AUDIENCE);\n   }\n \n+  private void mockCredentials(final Integer readDelay) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcxMjE0MA=="}, "originalCommit": {"oid": "275241d9a027b64d58b1eec4ba781eca8ae42425"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTg5MjcwOnYy", "diffSide": "RIGHT", "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzo1ODo1N1rOH4OmRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNDoxMDo1NFrOH5ClrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcyMTQ3OQ==", "bodyText": "SonarLint complains about the nested try here. We could fix that and also make this less repetitive by refactoring it to a validateTimeout method. If the validation fails, we can throw an exception stating what we expect. Something like \"Connect/read timeout is XYZ, expected timeout to be a positive number smaller than Integer.MAX_VALUE\". Wdyt?", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r528721479", "createdAt": "2020-11-23T13:58:57Z", "author": {"login": "MiguelPires"}, "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -163,6 +218,24 @@ private void validate() {\n         throw new IllegalArgumentException(\n             \"Expected specified credentials cache to be a file but found directory instead.\");\n       }\n+      if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n+        throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n+      }\n+      try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "275241d9a027b64d58b1eec4ba781eca8ae42425"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI1MzUxNA==", "bodyText": "Agree, that makes sense, I'll fix that :)", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r529253514", "createdAt": "2020-11-24T07:26:31Z", "author": {"login": "aivinog1"}, "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -163,6 +218,24 @@ private void validate() {\n         throw new IllegalArgumentException(\n             \"Expected specified credentials cache to be a file but found directory instead.\");\n       }\n+      if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n+        throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n+      }\n+      try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcyMTQ3OQ=="}, "originalCommit": {"oid": "275241d9a027b64d58b1eec4ba781eca8ae42425"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU3MzI5Mw==", "bodyText": "Done. I've also made some refactoring to determine whether the\ntimeout value in milliseconds included in the Integer range :) I think, that now it looks prettier :)", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r529573293", "createdAt": "2020-11-24T14:10:54Z", "author": {"login": "aivinog1"}, "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -163,6 +218,24 @@ private void validate() {\n         throw new IllegalArgumentException(\n             \"Expected specified credentials cache to be a file but found directory instead.\");\n       }\n+      if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n+        throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n+      }\n+      try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcyMTQ3OQ=="}, "originalCommit": {"oid": "275241d9a027b64d58b1eec4ba781eca8ae42425"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyOTEyMDkwOnYy", "diffSide": "RIGHT", "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNjoxMjoyMFrOH6NCrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODo0NDo1MVrOH6RGkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc5MzEzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n          \n          \n            \n                    throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n          \n          \n            \n                  }\n          \n      \n    \n    \n  \n\nThis check is duplicated and can be removed.", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r530793133", "createdAt": "2020-11-26T06:12:20Z", "author": {"login": "MiguelPires"}, "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -163,8 +216,29 @@ private void validate() {\n         throw new IllegalArgumentException(\n             \"Expected specified credentials cache to be a file but found directory instead.\");\n       }\n+      if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n+        throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54136e9b767c32d111e05888e06ea076fe9ea0ef"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg1OTY2Ng==", "bodyText": "Done", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r530859666", "createdAt": "2020-11-26T08:44:51Z", "author": {"login": "aivinog1"}, "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -163,8 +216,29 @@ private void validate() {\n         throw new IllegalArgumentException(\n             \"Expected specified credentials cache to be a file but found directory instead.\");\n       }\n+      if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n+        throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc5MzEzMw=="}, "originalCommit": {"oid": "54136e9b767c32d111e05888e06ea076fe9ea0ef"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyOTE0MzYzOnYy", "diffSide": "RIGHT", "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNjoyNDoxM1rOH6NPug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODo0NDo1NlrOH6RGwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc5NjQ3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final boolean valid;\n          \n          \n            \n                if (timeout.isZero() || timeout.isNegative()) {\n          \n          \n            \n                  valid = false;\n          \n          \n            \n                } else {\n          \n          \n            \n                  final long millis = timeout.toMillis();\n          \n          \n            \n                  valid = millis < Integer.MAX_VALUE && millis > Integer.MIN_VALUE;\n          \n          \n            \n                }\n          \n          \n            \n                if (!valid) {\n          \n          \n            \n                if (timeout.isZero() || timeout.isNegative() || timeout.toMillis() > Integer.MAX_VALUE) {\n          \n      \n    \n    \n  \n\nThe > Integer.MIN_VALUE is redundant at this point so we can check this more a bit more concisely", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r530796474", "createdAt": "2020-11-26T06:24:13Z", "author": {"login": "MiguelPires"}, "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -163,8 +216,29 @@ private void validate() {\n         throw new IllegalArgumentException(\n             \"Expected specified credentials cache to be a file but found directory instead.\");\n       }\n+      if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n+        throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n+      }\n+      validateTimeout(connectTimeout, \"ConnectTimeout\");\n+      validateTimeout(readTimeout, \"ReadTimeout\");\n     } catch (final NullPointerException | IOException e) {\n       throw new IllegalArgumentException(e);\n     }\n   }\n+\n+  private void validateTimeout(final Duration timeout, final String timeoutName) {\n+    final boolean valid;\n+    if (timeout.isZero() || timeout.isNegative()) {\n+      valid = false;\n+    } else {\n+      final long millis = timeout.toMillis();\n+      valid = millis < Integer.MAX_VALUE && millis > Integer.MIN_VALUE;\n+    }\n+    if (!valid) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54136e9b767c32d111e05888e06ea076fe9ea0ef"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg1OTcxNA==", "bodyText": "Done", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r530859714", "createdAt": "2020-11-26T08:44:56Z", "author": {"login": "aivinog1"}, "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -163,8 +216,29 @@ private void validate() {\n         throw new IllegalArgumentException(\n             \"Expected specified credentials cache to be a file but found directory instead.\");\n       }\n+      if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n+        throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n+      }\n+      validateTimeout(connectTimeout, \"ConnectTimeout\");\n+      validateTimeout(readTimeout, \"ReadTimeout\");\n     } catch (final NullPointerException | IOException e) {\n       throw new IllegalArgumentException(e);\n     }\n   }\n+\n+  private void validateTimeout(final Duration timeout, final String timeoutName) {\n+    final boolean valid;\n+    if (timeout.isZero() || timeout.isNegative()) {\n+      valid = false;\n+    } else {\n+      final long millis = timeout.toMillis();\n+      valid = millis < Integer.MAX_VALUE && millis > Integer.MIN_VALUE;\n+    }\n+    if (!valid) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc5NjQ3NA=="}, "originalCommit": {"oid": "54136e9b767c32d111e05888e06ea076fe9ea0ef"}, "originalPosition": 125}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 58, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}