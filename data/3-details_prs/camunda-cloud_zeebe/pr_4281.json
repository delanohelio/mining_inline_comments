{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwODY2MjI1", "number": 4281, "title": "chore(engine): add onFailed stream processor lifecycle", "bodyText": "Description\nEnable stream processor lifecycle listeners to react when StreamProcessor fails.\nRelated issues\n\ncloses #4081\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-04-08T13:56:22Z", "url": "https://github.com/camunda-cloud/zeebe/pull/4281", "merged": true, "mergeCommit": {"oid": "e8f532ef5d5c8543017c06199e362b881560f582"}, "closed": true, "closedAt": "2020-04-17T14:15:33Z", "author": {"login": "deepthidevaki"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXbknJAFqTM5MjU5MTA5MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYg-kTABqjMyNDQzMDI1NTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNTkxMDkx", "url": "https://github.com/camunda-cloud/zeebe/pull/4281#pullrequestreview-392591091", "createdAt": "2020-04-14T04:11:51Z", "commit": {"oid": "76020d3f96b29a47aa54c9271a975928d3f444e8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNDoxMTo1MVrOGE9hrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNDoxMjo0N1rOGE9isQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg1NTUzMw==", "bodyText": "Why this failed?", "url": "https://github.com/camunda-cloud/zeebe/pull/4281#discussion_r407855533", "createdAt": "2020-04-14T04:11:51Z", "author": {"login": "Zelldon"}, "path": "engine/src/test/java/io/zeebe/engine/util/TestStreams.java", "diffHunk": "@@ -444,7 +444,11 @@ public void close() throws Exception {\n         return;\n       }\n \n-      asyncSnapshotDirector.closeAsync().join();\n+      try {\n+        asyncSnapshotDirector.closeAsync().join();\n+      } catch (final Exception e) {\n+        Loggers.IO_LOGGER.debug(\"Close snapshot director failed\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76020d3f96b29a47aa54c9271a975928d3f444e8"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg1NTc5Mw==", "bodyText": "do we need the mock since we already have the latch with the other listener ?", "url": "https://github.com/camunda-cloud/zeebe/pull/4281#discussion_r407855793", "createdAt": "2020-04-14T04:12:47Z", "author": {"login": "Zelldon"}, "path": "engine/src/test/java/io/zeebe/engine/processor/StreamProcessorTest.java", "diffHunk": "@@ -87,6 +87,37 @@ public void onRecovered(final ReadonlyProcessingContext context) {\n     inOrder.verifyNoMoreInteractions();\n   }\n \n+  @Test\n+  public void shouldCallStreamProcessorLifecycleOnFail() throws InterruptedException {\n+    // given\n+    final StreamProcessorLifecycleAware lifecycleAware = mock(StreamProcessorLifecycleAware.class);\n+    final CountDownLatch failedLatch = new CountDownLatch(1);\n+    streamProcessorRule.startTypedStreamProcessor(\n+        (processors, state) ->\n+            processors\n+                .withListener(lifecycleAware)\n+                .withListener(\n+                    new StreamProcessorLifecycleAware() {\n+                      @Override\n+                      public void onRecovered(final ReadonlyProcessingContext context) {\n+                        throw new RuntimeException(\"force fail\");\n+                      }\n+\n+                      @Override\n+                      public void onFailed() {\n+                        failedLatch.countDown();\n+                      }\n+                    }));\n+\n+    // when\n+    assertThat(failedLatch.await(1000, TimeUnit.MILLISECONDS)).isTrue();\n+\n+    // then\n+    verify(lifecycleAware, times(1)).onRecovered(any());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76020d3f96b29a47aa54c9271a975928d3f444e8"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "76020d3f96b29a47aa54c9271a975928d3f444e8", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/76020d3f96b29a47aa54c9271a975928d3f444e8", "committedDate": "2020-04-08T13:46:57Z", "message": "chore(engine): add onFailed stream processor lifecycle"}, "afterCommit": {"oid": "0344a91bfa8e6bbcd9adcca2b522a604a4a49e07", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/0344a91bfa8e6bbcd9adcca2b522a604a4a49e07", "committedDate": "2020-04-14T13:48:36Z", "message": "chore(engine): add onFailed stream processor lifecycle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MzAxMTQ4", "url": "https://github.com/camunda-cloud/zeebe/pull/4281#pullrequestreview-395301148", "createdAt": "2020-04-17T09:28:26Z", "commit": {"oid": "0344a91bfa8e6bbcd9adcca2b522a604a4a49e07"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0344a91bfa8e6bbcd9adcca2b522a604a4a49e07", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/0344a91bfa8e6bbcd9adcca2b522a604a4a49e07", "committedDate": "2020-04-14T13:48:36Z", "message": "chore(engine): add onFailed stream processor lifecycle"}, "afterCommit": {"oid": "7b24e788ccdb078a9f0245db84b85b9052e485df", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/7b24e788ccdb078a9f0245db84b85b9052e485df", "committedDate": "2020-04-17T12:35:59Z", "message": "chore(engine): add onFailed stream processor lifecycle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1b9d16ca8cab9ff70698f048efeaacdde7c4e4b", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/f1b9d16ca8cab9ff70698f048efeaacdde7c4e4b", "committedDate": "2020-04-17T13:02:35Z", "message": "chore(engine): add onFailed stream processor lifecycle"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b24e788ccdb078a9f0245db84b85b9052e485df", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/7b24e788ccdb078a9f0245db84b85b9052e485df", "committedDate": "2020-04-17T12:35:59Z", "message": "chore(engine): add onFailed stream processor lifecycle"}, "afterCommit": {"oid": "f1b9d16ca8cab9ff70698f048efeaacdde7c4e4b", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/f1b9d16ca8cab9ff70698f048efeaacdde7c4e4b", "committedDate": "2020-04-17T13:02:35Z", "message": "chore(engine): add onFailed stream processor lifecycle"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3008, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}