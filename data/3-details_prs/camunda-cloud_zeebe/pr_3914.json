{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MDQwODQ0", "number": 3914, "title": "chore(clients/go): fix linter warnings", "bodyText": "Description\n\nfixes linter warnings\nreturns interface in New...CredentialsCache instead of unexported struct\ntechnically, this PR breaks backwards compatibility but actually it's probably not a huge deal since the struct was unexported so the only way it could be stored/passed was through an implementing interface (since the methods weren't changed, these have not reason to break).\nthe remaining linter issues weren't fixed since they would break compat in the commands (likely to bother users) and they're not very serious\n\nRelated issues\ncloses #3004\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-02-24T15:08:32Z", "url": "https://github.com/camunda-cloud/zeebe/pull/3914", "merged": true, "mergeCommit": {"oid": "960c22e740ec998a8625f71708788d7bc1a33995"}, "closed": true, "closedAt": "2020-02-24T18:27:30Z", "author": {"login": "MiguelPires"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHe4CrgH2gAyMzc5MDQwODQ0OjM4NThjZjQ4MjFmNTYwMGM0ZjZjZDI1ZDU2ZWViYzY5MmE5YWRkY2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHfAgrAFqTM2MzQ2MDY0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3858cf4821f5600c4f6cd25d56eebc692a9addcc", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/3858cf4821f5600c4f6cd25d56eebc692a9addcc", "committedDate": "2020-02-24T15:01:55Z", "message": "chore(clients/go): fix linter warnings\n\n  * return interface in `New...CredentialsCache` instead of unexported struct"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNDYwNjQw", "url": "https://github.com/camunda-cloud/zeebe/pull/3914#pullrequestreview-363460640", "createdAt": "2020-02-24T15:10:59Z", "commit": {"oid": "3858cf4821f5600c4f6cd25d56eebc692a9addcc"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNToxMDo1OVrOFtkFiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNToxMDo1OVrOFtkFiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMyMTQ4Mw==", "bodyText": "We could also have NewOAuthYamlCredentialsCache wrap a newOAuthYamlCredentialsCache which returns the unexpected struct, and us that here. IDK, I don't care that much, this is also fine for me", "url": "https://github.com/camunda-cloud/zeebe/pull/3914#discussion_r383321483", "createdAt": "2020-02-24T15:10:59Z", "author": {"login": "npepinpe"}, "path": "clients/go/pkg/zbc/oauthCredentialsCache_test.go", "diffHunk": "@@ -86,7 +86,9 @@ func (s *oauthCredsCacheTestSuite) TestWriteCacheGoldenFile() {\n \terr = cache.Update(capybaraAudience, capybara)\n \ts.NoError(err)\n \n-\tcacheCopy, _ := NewOAuthYamlCredentialsCache(cachePath)\n+\tcacheCopyI, _ := NewOAuthYamlCredentialsCache(cachePath)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3858cf4821f5600c4f6cd25d56eebc692a9addcc"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3165, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}