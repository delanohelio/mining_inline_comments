{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NTE3MDI0", "number": 5133, "title": "Handle snapshot replication from 0.23.x brokers", "bodyText": "Description\nThis PR allows a 0.24.x broker to receive and replicate a snapshot being sent by a 0.23.x broker, fixing the rolling upgrade problem on start up. It essentially does so by attempting to decode the SBE message, and if it fails to do so, falling back to interpreting it as an old request where the data is the chunk data, building a snapshot chunk out of the install request instead.\nThis means there is no checksum checks (neither for the chunk nor the total snapshot) if it comes from a 0.23.x, which is essentially the behaviour of the 0.23.x snapshot replication.\nRelated issues\ncloses #5102\ncloses #5035\nDefinition of Done\nNot all items need to be done depending on the issue and the pull request.\nCode changes:\n\n The changes are backwards compatibility with previous versions\n If it fixes a bug then PRs are created to backport the fix to the last two minor versions\n\n\nNot necessary to back port as it affects only 0.24.x, but should be forward ported to develop.\n\nTesting:\n\n There are unit/integration tests that verify all acceptance criterias of the issue\n New tests are written to ensure backwards compatibility with further versions\n The behavior is tested manually\n The impact of the changes is verified by a benchmark\n\nDocumentation:\n\n The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\n New content is added to the release announcement", "createdAt": "2020-08-07T10:07:02Z", "url": "https://github.com/camunda-cloud/zeebe/pull/5133", "merged": true, "mergeCommit": {"oid": "6bf66f23357de8638cd6804e733126b13f22c015"}, "closed": true, "closedAt": "2020-08-11T10:06:14Z", "author": {"login": "npepinpe"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8ihElAFqTQ2MzIzMDgwMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9yvWVABqjM2NDIwOTMzNzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMjMwODAx", "url": "https://github.com/camunda-cloud/zeebe/pull/5133#pullrequestreview-463230801", "createdAt": "2020-08-07T11:14:25Z", "commit": {"oid": "270b591b47bcd45b65544962afd35a2d195cc018"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMToxNDoyNlrOG9V-Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMToxNDoyNlrOG9V-Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk3NjMzOA==", "bodyText": "Suggestion: you can use snapshotChunkImpl.tryWrap", "url": "https://github.com/camunda-cloud/zeebe/pull/5133#discussion_r466976338", "createdAt": "2020-08-07T11:14:26Z", "author": {"login": "deepthidevaki"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/roles/PassiveRole.java", "diffHunk": "@@ -185,8 +189,17 @@ private void addSnapshotListener() {\n                   .build()));\n     }\n \n-    final var snapshotChunk = new SnapshotChunkImpl();\n-    snapshotChunk.wrap(new UnsafeBuffer(request.data()), 0, request.data().capacity());\n+    SnapshotChunk snapshotChunk;\n+    try {\n+      final var snapshotChunkImpl = new SnapshotChunkImpl();\n+      snapshotChunkImpl.wrap(new UnsafeBuffer(request.data()), 0, request.data().capacity());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "270b591b47bcd45b65544962afd35a2d195cc018"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MDI2NDA2", "url": "https://github.com/camunda-cloud/zeebe/pull/5133#pullrequestreview-464026406", "createdAt": "2020-08-10T08:05:28Z", "commit": {"oid": "028d5a5158fd57e65225e5b5230e53771c3a4282"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODowNToyOFrOG-E4Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODoyMjozNVrOG-FY3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc0NDc4Mg==", "bodyText": "Maybe we can have a legacy util class or something where we keep this code and can it remove it more easily. This might be also easier to track then.", "url": "https://github.com/camunda-cloud/zeebe/pull/5133#discussion_r467744782", "createdAt": "2020-08-10T08:05:28Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/roles/PassiveRole.java", "diffHunk": "@@ -385,6 +389,18 @@ private void addSnapshotListener() {\n                 .build()));\n   }\n \n+  private SnapshotChunk decodeSnapshotChunk(final InstallRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "028d5a5158fd57e65225e5b5230e53771c3a4282"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc0NjQ1MQ==", "bodyText": "I think it feels less hacky if you name the constants. Like FALLBACK_TOTAL_COUNT or something", "url": "https://github.com/camunda-cloud/zeebe/pull/5133#discussion_r467746451", "createdAt": "2020-08-10T08:09:18Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/snapshot/impl/FileBasedReceivedSnapshot.java", "diffHunk": "@@ -192,27 +192,29 @@ public PersistedSnapshot persist() {\n     final var files = directory.toFile().listFiles();\n     Objects.requireNonNull(files, \"No chunks have been applied yet\");\n \n-    if (files.length != expectedTotalCount) {\n+    if (expectedTotalCount != Integer.MIN_VALUE && files.length != expectedTotalCount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "028d5a5158fd57e65225e5b5230e53771c3a4282"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc0Njk3Nw==", "bodyText": "The same here - currently I would ask why it should be min value. But if you add a constant which describes this a bit better I think it would be clearer", "url": "https://github.com/camunda-cloud/zeebe/pull/5133#discussion_r467746977", "createdAt": "2020-08-10T08:10:28Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/snapshot/impl/FileBasedReceivedSnapshot.java", "diffHunk": "@@ -192,27 +192,29 @@ public PersistedSnapshot persist() {\n     final var files = directory.toFile().listFiles();\n     Objects.requireNonNull(files, \"No chunks have been applied yet\");\n \n-    if (files.length != expectedTotalCount) {\n+    if (expectedTotalCount != Integer.MIN_VALUE && files.length != expectedTotalCount) {\n       throw new IllegalStateException(\n           String.format(\n               \"Expected '%d' chunk files for this snapshot, but found '%d'. Files are: %s.\",\n               expectedSnapshotChecksum, files.length, Arrays.toString(files)));\n     }\n \n-    final var filePaths =\n-        Arrays.stream(files).sorted().map(File::toPath).collect(Collectors.toList());\n-    final long actualSnapshotChecksum;\n-    try {\n-      actualSnapshotChecksum = ChecksumUtil.createCombinedChecksum(filePaths);\n-    } catch (final IOException e) {\n-      throw new UncheckedIOException(\"Unexpected exception on calculating snapshot checksum.\", e);\n-    }\n-\n-    if (actualSnapshotChecksum != expectedSnapshotChecksum) {\n-      throw new IllegalStateException(\n-          String.format(\n-              \"Expected snapshot checksum %d, but calculated %d.\",\n-              expectedSnapshotChecksum, actualSnapshotChecksum));\n+    if (expectedSnapshotChecksum != Long.MIN_VALUE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "028d5a5158fd57e65225e5b5230e53771c3a4282"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc1MzE4MA==", "bodyText": "I think we need a mechanism to track these kind of methods or logic, which we expect to remove at some point. Maybe via annotation or adding it to a separate class which can be tracked more easily.", "url": "https://github.com/camunda-cloud/zeebe/pull/5133#discussion_r467753180", "createdAt": "2020-08-10T08:22:35Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/snapshot/impl/SnapshotChunkUtil.java", "diffHunk": "@@ -23,6 +25,36 @@ static long createChecksum(final byte[] content) {\n     return crc32.getValue();\n   }\n \n+  /**\n+   * Returns a new snapshot chunk from a pre 0.24.x install request. Should be removed once no\n+   * versions below 0.24.x are supported.\n+   *\n+   * <p>The snapshot chunk will take most of its information from the install request, and use the\n+   * data as the chunk content, while setting the total count to {@link Integer#MIN_VALUE} and the\n+   * snapshot checksum to {@link Long#MIN_VALUE} so that neither will be validated against. See\n+   * {@link FileBasedReceivedSnapshot} for more on that.\n+   *\n+   * @param request the install request to build from\n+   * @return a valid {@link SnapshotChunk} built from the request\n+   */\n+  public static SnapshotChunk fromOldInstallRequest(final InstallRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "028d5a5158fd57e65225e5b5230e53771c3a4282"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0ODYyODE3", "url": "https://github.com/camunda-cloud/zeebe/pull/5133#pullrequestreview-464862817", "createdAt": "2020-08-11T08:39:18Z", "commit": {"oid": "23a8a9f4ef26ebed331e9a442bbc94ed608ff4f8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d2e5182c452cdd0505563693a936086c740392e", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/0d2e5182c452cdd0505563693a936086c740392e", "committedDate": "2020-08-11T08:42:15Z", "message": "chore(parent): bump zeebe-test-container version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a37ee24331d136c8615e5c0f91ecfe474042f2c", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/3a37ee24331d136c8615e5c0f91ecfe474042f2c", "committedDate": "2020-08-11T08:42:15Z", "message": "chore(test-util): backport topology assert extensions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea7848a33e6906a5a15119c36c6d2059a6f0fa93", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/ea7848a33e6906a5a15119c36c6d2059a6f0fa93", "committedDate": "2020-08-11T08:42:15Z", "message": "chore(upgrade-tests): backport rolling upgrade test + new test with snapshot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7b6ccfcb94e354de945f2a6dc73e5a0af86a9e4", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/e7b6ccfcb94e354de945f2a6dc73e5a0af86a9e4", "committedDate": "2020-08-11T08:42:16Z", "message": "chore(atomix/cluster): handle old 0.23.x snapshot replication"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23a8a9f4ef26ebed331e9a442bbc94ed608ff4f8", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/23a8a9f4ef26ebed331e9a442bbc94ed608ff4f8", "committedDate": "2020-08-10T09:44:34Z", "message": "chore(atomix/cluster): minor clean up"}, "afterCommit": {"oid": "e7b6ccfcb94e354de945f2a6dc73e5a0af86a9e4", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/e7b6ccfcb94e354de945f2a6dc73e5a0af86a9e4", "committedDate": "2020-08-11T08:42:16Z", "message": "chore(atomix/cluster): handle old 0.23.x snapshot replication"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2633, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}