{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NDMyNTkz", "number": 5445, "title": "Records contains the version of the broker", "bodyText": "Description\n\nadd the version of the broker to the record metadata that wrote the record\nexpose the version in the exporter API\nadd a new property in the ES record template\n\nRelated issues\ncloses #5379\nDefinition of Done\nNot all items need to be done depending on the issue and the pull request.\nCode changes:\n\n The changes are backwards compatibility with previous versions\n If it fixes a bug then PRs are created to backport the fix to the last two minor versions\n\nTesting:\n\n There are unit/integration tests that verify all acceptance criterias of the issue\n New tests are written to ensure backwards compatibility with further versions\n The behavior is tested manually\n The impact of the changes is verified by a benchmark\n\nDocumentation:\n\n The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\n New content is added to the release announcement", "createdAt": "2020-09-30T11:11:48Z", "url": "https://github.com/camunda-cloud/zeebe/pull/5445", "merged": true, "mergeCommit": {"oid": "2731251852fba7b24452c95832b1eb860d6b0a93"}, "closed": true, "closedAt": "2020-10-02T05:05:17Z", "author": {"login": "saig0"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdN60JPAH2gAyNDk1NDMyNTkzOmViOThmNTA0MGI0NWRkOGMxMDMyZDhkZDYzOWFmYWE2YzE2YzU2YWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOO0DTAFqTUwMDIxMTEzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "eb98f5040b45dd8c1032d8dd639afaa6c16c56af", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/eb98f5040b45dd8c1032d8dd639afaa6c16c56af", "committedDate": "2020-09-30T11:09:42Z", "message": "feat(broker): records with broker version\n\n* add the version of the broker to the record metadata that wrote the record\n* expose the version in the exporter API\n* add a new property in the ES record template"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MzI0NDU1", "url": "https://github.com/camunda-cloud/zeebe/pull/5445#pullrequestreview-499324455", "createdAt": "2020-09-30T11:16:55Z", "commit": {"oid": "eb98f5040b45dd8c1032d8dd639afaa6c16c56af"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToxNjo1NlrOHaYu8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToyMjoyOFrOHaY5PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzMDI1Nw==", "bodyText": "I wrote this test in the broker because some records are written from broker code (e.g. deployments, user commands, message subscription records, etc.).", "url": "https://github.com/camunda-cloud/zeebe/pull/5445#discussion_r497430257", "createdAt": "2020-09-30T11:16:56Z", "author": {"login": "saig0"}, "path": "broker/src/test/java/io/zeebe/broker/engine/RecordVersionTest.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.engine;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import io.zeebe.broker.test.EmbeddedBrokerRule;\n+import io.zeebe.model.bpmn.Bpmn;\n+import io.zeebe.model.bpmn.BpmnModelInstance;\n+import io.zeebe.protocol.record.Record;\n+import io.zeebe.protocol.record.ValueType;\n+import io.zeebe.protocol.record.intent.DeploymentIntent;\n+import io.zeebe.protocol.record.intent.WorkflowInstanceCreationIntent;\n+import io.zeebe.test.broker.protocol.commandapi.CommandApiRule;\n+import io.zeebe.test.util.BrokerClassRuleHelper;\n+import io.zeebe.test.util.record.RecordingExporter;\n+import io.zeebe.util.VersionUtil;\n+import java.io.ByteArrayOutputStream;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.ClassRule;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+\n+public final class RecordVersionTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb98f5040b45dd8c1032d8dd639afaa6c16c56af"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzMDc0Ng==", "bodyText": "The protocol version is always set then calling metadata.reset().", "url": "https://github.com/camunda-cloud/zeebe/pull/5445#discussion_r497430746", "createdAt": "2020-09-30T11:17:57Z", "author": {"login": "saig0"}, "path": "engine/src/main/java/io/zeebe/engine/processing/streamprocessor/writers/TypedCommandWriterImpl.java", "diffHunk": "@@ -31,7 +30,6 @@\n   protected long sourceRecordPosition = -1;\n \n   public TypedCommandWriterImpl(final LogStreamBatchWriter batchWriter) {\n-    metadata.protocolVersion(Protocol.PROTOCOL_VERSION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb98f5040b45dd8c1032d8dd639afaa6c16c56af"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzMTYyNA==", "bodyText": "If it reads a record from a previous version then decoder.brokerVersion() returns null.", "url": "https://github.com/camunda-cloud/zeebe/pull/5445#discussion_r497431624", "createdAt": "2020-09-30T11:19:51Z", "author": {"login": "saig0"}, "path": "protocol-impl/src/main/java/io/zeebe/protocol/impl/record/RecordMetadata.java", "diffHunk": "@@ -64,6 +73,16 @@ public void wrap(final DirectBuffer buffer, int offset, final int length) {\n     intent = Intent.fromProtocolValue(valueType, decoder.intent());\n     rejectionType = decoder.rejectionType();\n \n+    brokerVersion =\n+        Optional.ofNullable(decoder.brokerVersion())\n+            .map(\n+                versionDecoder ->\n+                    new VersionInfo(\n+                        versionDecoder.majorVersion(),\n+                        versionDecoder.minorVersion(),\n+                        versionDecoder.patchVersion()))\n+            .orElse(VersionInfo.UNKNOWN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb98f5040b45dd8c1032d8dd639afaa6c16c56af"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzMjI5Ng==", "bodyText": "By default, it set the current version. So, we don't need to set the version explicitly when using the log stream writer.", "url": "https://github.com/camunda-cloud/zeebe/pull/5445#discussion_r497432296", "createdAt": "2020-09-30T11:21:10Z", "author": {"login": "saig0"}, "path": "protocol-impl/src/main/java/io/zeebe/protocol/impl/record/RecordMetadata.java", "diffHunk": "@@ -202,6 +236,7 @@ public RecordMetadata reset() {\n     intent = null;\n     rejectionType = RejectionType.NULL_VAL;\n     rejectionReason.wrap(0, 0);\n+    brokerVersion = CURRENT_BROKER_VERSION;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb98f5040b45dd8c1032d8dd639afaa6c16c56af"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzMjg5Mw==", "bodyText": "The main change of this PR. Adding a new field for the broker version. Following https://github.com/real-logic/simple-binary-encoding/wiki/Message-Versioning.", "url": "https://github.com/camunda-cloud/zeebe/pull/5445#discussion_r497432893", "createdAt": "2020-09-30T11:22:28Z", "author": {"login": "saig0"}, "path": "protocol/src/main/resources/protocol.xml", "diffHunk": "@@ -97,6 +104,7 @@\n     <field name=\"intent\" id=\"6\" type=\"uint8\"/>\n     <!-- populated when RecordType is COMMAND_REJECTION -->\n     <field name=\"rejectionType\" id=\"7\" type=\"RejectionType\"/>\n+    <field name=\"brokerVersion\" id=\"9\" type=\"Version\" sinceVersion=\"2\" presence=\"optional\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb98f5040b45dd8c1032d8dd639afaa6c16c56af"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMTE0OTA1", "url": "https://github.com/camunda-cloud/zeebe/pull/5445#pullrequestreview-500114905", "createdAt": "2020-10-01T08:24:02Z", "commit": {"oid": "eb98f5040b45dd8c1032d8dd639afaa6c16c56af"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMjExMTM4", "url": "https://github.com/camunda-cloud/zeebe/pull/5445#pullrequestreview-500211138", "createdAt": "2020-10-01T10:27:42Z", "commit": {"oid": "eb98f5040b45dd8c1032d8dd639afaa6c16c56af"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2533, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}