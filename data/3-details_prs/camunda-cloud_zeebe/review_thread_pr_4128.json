{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNzAxNzcy", "number": 4128, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNToxNjoxNlrODrsZcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNTo1MjoyM1rODrtfzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTQyNzcxOnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/PartitionListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNToxNjoxN1rOF8L6vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNToxNjoxN1rOF8L6vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1NDE0MA==", "bodyText": "maybe we can say something about it \ud83d\ude05", "url": "https://github.com/camunda-cloud/zeebe/pull/4128#discussion_r398654140", "createdAt": "2020-03-26T15:16:17Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/PartitionListener.java", "diffHunk": "@@ -22,8 +25,9 @@\n    * @param partitionId the corresponding partition id\n    * @param term the current term\n    * @param logStream the corresponding log stream\n+   * @return future", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37ead6141cf9a05f2c38af0a5daf8f18d469294a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTU1OTA0OnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNTo0MjozNFrOF8NNqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNTo0MjozNFrOF8NNqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY3NTM2OQ==", "bodyText": "Btw I think the actor scheduler support a method which accepts multiple future to react on a failure", "url": "https://github.com/camunda-cloud/zeebe/pull/4128#discussion_r398675369", "createdAt": "2020-03-26T15:42:34Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -188,12 +190,22 @@ private void leaderTransition(final long newTerm) {\n         .onComplete(\n             (success, error) -> {\n               if (error == null) {\n-                partitionListeners.forEach(\n-                    l -> l.onBecomingLeader(partitionId, newTerm, logStream));\n+                partitionListeners.stream()\n+                    .map(l -> l.onBecomingLeader(partitionId, newTerm, logStream))\n+                    .forEach(\n+                        future ->\n+                            future.onComplete(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79a3d2325f8fb1a476311d522effd100e7bfb59b"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTU2MTA1OnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNTo0Mjo1N1rOF8NO6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNTo0Mjo1N1rOF8NO6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY3NTY4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // we should probably retry here", "url": "https://github.com/camunda-cloud/zeebe/pull/4128#discussion_r398675689", "createdAt": "2020-03-26T15:42:57Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -205,11 +217,11 @@ private void followerTransition(final long newTerm) {\n               if (error == null) {\n                 partitionListeners.forEach(\n                     l -> l.onBecomingFollower(partitionId, newTerm, logStream));\n+                onRecoveredInternal();\n               } else {\n                 LOG.error(\"Failed to install follower partition {}\", partitionId, error);\n-                // TODO https://github.com/zeebe-io/zeebe/issues/3499\n                 // we should probably retry here", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79a3d2325f8fb1a476311d522effd100e7bfb59b"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTU3NzgyOnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNTo0NjowOVrOF8NZZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjowMDo0OFrOF8OHJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY3ODM3Mg==", "bodyText": "If we would step down on failure we would try to reinstallt the follower partition right ? Maybe this makes also sense?", "url": "https://github.com/camunda-cloud/zeebe/pull/4128#discussion_r398678372", "createdAt": "2020-03-26T15:46:09Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -697,7 +703,19 @@ public void onFailure() {\n \n   @Override\n   public void onRecovered() {\n-    actor.run(() -> updateHealthStatus(HealthStatus.HEALTHY));\n+    actor.run(this::onRecoveredInternal);\n+  }\n+\n+  private void onInstallFailure() {\n+    updateHealthStatus(HealthStatus.UNHEALTHY);\n+    if (atomixRaftPartition.getRole() == Role.LEADER) {\n+      LOG.info(\"Unexpected failures occurred when installing leader services, stepping down\");\n+      atomixRaftPartition.stepDown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79a3d2325f8fb1a476311d522effd100e7bfb59b"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5MDA4Ng==", "bodyText": "Did you mean we step down on all failures? Please see my other comment.", "url": "https://github.com/camunda-cloud/zeebe/pull/4128#discussion_r398690086", "createdAt": "2020-03-26T16:00:48Z", "author": {"login": "deepthidevaki"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -697,7 +703,19 @@ public void onFailure() {\n \n   @Override\n   public void onRecovered() {\n-    actor.run(() -> updateHealthStatus(HealthStatus.HEALTHY));\n+    actor.run(this::onRecoveredInternal);\n+  }\n+\n+  private void onInstallFailure() {\n+    updateHealthStatus(HealthStatus.UNHEALTHY);\n+    if (atomixRaftPartition.getRole() == Role.LEADER) {\n+      LOG.info(\"Unexpected failures occurred when installing leader services, stepping down\");\n+      atomixRaftPartition.stepDown();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY3ODM3Mg=="}, "originalCommit": {"oid": "79a3d2325f8fb1a476311d522effd100e7bfb59b"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTYwNzgwOnYy", "diffSide": "RIGHT", "path": "logstreams/src/main/java/io/zeebe/logstreams/impl/log/LogStreamImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNTo1MjoyM1rOF8Nsag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjowMTo0NVrOF8OKMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY4MzI0Mg==", "bodyText": "Why we need to schedule a job here now?", "url": "https://github.com/camunda-cloud/zeebe/pull/4128#discussion_r398683242", "createdAt": "2020-03-26T15:52:23Z", "author": {"login": "Zelldon"}, "path": "logstreams/src/main/java/io/zeebe/logstreams/impl/log/LogStreamImpl.java", "diffHunk": "@@ -331,17 +337,23 @@ public void addFailureListener(final FailureListener failureListener) {\n \n   @Override\n   public void onFailure() {\n-    if (failureListener != null) {\n-      failureListener.onFailure();\n-    }\n-    closeAsync();\n+    actor.run(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79a3d2325f8fb1a476311d522effd100e7bfb59b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5MDg2Nw==", "bodyText": "This can be called externally by LogStorageAppender when it fails.", "url": "https://github.com/camunda-cloud/zeebe/pull/4128#discussion_r398690867", "createdAt": "2020-03-26T16:01:45Z", "author": {"login": "deepthidevaki"}, "path": "logstreams/src/main/java/io/zeebe/logstreams/impl/log/LogStreamImpl.java", "diffHunk": "@@ -331,17 +337,23 @@ public void addFailureListener(final FailureListener failureListener) {\n \n   @Override\n   public void onFailure() {\n-    if (failureListener != null) {\n-      failureListener.onFailure();\n-    }\n-    closeAsync();\n+    actor.run(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY4MzI0Mg=="}, "originalCommit": {"oid": "79a3d2325f8fb1a476311d522effd100e7bfb59b"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4809, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}