{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MDA2MDE5", "number": 3744, "title": "feat(broker): support error end events", "bodyText": "Description\n\nvalidate and transform error end events\nthrow an error event when the end event is activated\ncreate an incident if the error is not caught\nresolving the incident will create a new one\nextract logic to handle the error events\n\nRelated issues\ncloses #3510\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-01-28T13:12:06Z", "url": "https://github.com/camunda-cloud/zeebe/pull/3744", "merged": true, "mergeCommit": {"oid": "a1f14944694611d1e212d83f7d924b8a4a875aa2"}, "closed": true, "closedAt": "2020-01-31T06:05:29Z", "author": {"login": "saig0"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_ZRRZgFqTM1MDcwMTE0Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_od-VABqjI5OTU4NzY0OTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNzAxMTQy", "url": "https://github.com/camunda-cloud/zeebe/pull/3744#pullrequestreview-350701142", "createdAt": "2020-01-30T09:59:41Z", "commit": {"oid": "634bb85cdaa5bd4c080c75c4a684329aeaa3d263"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOTo1OTo0MVrOFjlQ4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMTo1Nzo1N1rOFjoiBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg1NTAwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            An error indicates that some kind of business error is occurred which should be handled in the workflow, for example, by taking a different path to compensate the error.\n          \n          \n            \n            An error indicates that some kind of business error has occurred which should be handled in the workflow, for example, by taking a different path to compensate the error.", "url": "https://github.com/camunda-cloud/zeebe/pull/3744#discussion_r372855008", "createdAt": "2020-01-30T09:59:41Z", "author": {"login": "MiguelPires"}, "path": "docs/src/bpmn-workflows/error-events/error-events.md", "diffHunk": "@@ -4,8 +4,7 @@ Error events are events which reference an error. They are used to handle busine\n \n  ![workflow](/bpmn-workflows/error-events/error-events.png)\n \n-An error is triggered from a **client command** while processing a job. It indicates that some kind of business error is occurred which should be handled in the workflow, for example, by taking a different path to compensate the error.\n-\n+An error indicates that some kind of business error is occurred which should be handled in the workflow, for example, by taking a different path to compensate the error.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "634bb85cdaa5bd4c080c75c4a684329aeaa3d263"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwODU1MQ==", "bodyText": "Why is this a Handle instead of Handler?", "url": "https://github.com/camunda-cloud/zeebe/pull/3744#discussion_r372908551", "createdAt": "2020-01-30T11:57:57Z", "author": {"login": "MiguelPires"}, "path": "engine/src/main/java/io/zeebe/engine/processor/workflow/handlers/endevent/ErrorEventHandle.java", "diffHunk": "@@ -0,0 +1,146 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.engine.processor.workflow.handlers.endevent;\n+\n+import io.zeebe.engine.processor.KeyGenerator;\n+import io.zeebe.engine.processor.TypedStreamWriter;\n+import io.zeebe.engine.processor.workflow.EventHandle;\n+import io.zeebe.engine.processor.workflow.deployment.model.element.ExecutableActivity;\n+import io.zeebe.engine.processor.workflow.deployment.model.element.ExecutableCatchEvent;\n+import io.zeebe.engine.processor.workflow.deployment.model.element.ExecutableWorkflow;\n+import io.zeebe.engine.state.deployment.WorkflowState;\n+import io.zeebe.engine.state.instance.ElementInstance;\n+import io.zeebe.engine.state.instance.ElementInstanceState;\n+import org.agrona.DirectBuffer;\n+import org.agrona.concurrent.UnsafeBuffer;\n+\n+public final class ErrorEventHandle {\n+\n+  private static final DirectBuffer NO_VARIABLES = new UnsafeBuffer();\n+\n+  private final CatchEventTuple catchEventTuple = new CatchEventTuple();\n+\n+  private final WorkflowState workflowState;\n+  private final ElementInstanceState elementInstanceState;\n+  private final EventHandle eventHandle;\n+\n+  public ErrorEventHandle(final WorkflowState workflowState, final KeyGenerator keyGenerator) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "634bb85cdaa5bd4c080c75c4a684329aeaa3d263"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1f14944694611d1e212d83f7d924b8a4a875aa2", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/a1f14944694611d1e212d83f7d924b8a4a875aa2", "committedDate": "2020-01-31T05:40:26Z", "message": "feat(broker): support error end events\n\n* validate and transform error end events\n* throw an error event when the end event is activated\n* create an incident if the error is not caught\n* resolving the incident will create a new one\n* extract logic to handle the error events"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "634bb85cdaa5bd4c080c75c4a684329aeaa3d263", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/634bb85cdaa5bd4c080c75c4a684329aeaa3d263", "committedDate": "2020-01-28T13:11:26Z", "message": "docs(bpmn-workflows): update error event section\n\n* add the error end event as option to throw an error\n* add more details about catching an error across the scope hierarchy"}, "afterCommit": {"oid": "a1f14944694611d1e212d83f7d924b8a4a875aa2", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/a1f14944694611d1e212d83f7d924b8a4a875aa2", "committedDate": "2020-01-31T05:40:26Z", "message": "feat(broker): support error end events\n\n* validate and transform error end events\n* throw an error event when the end event is activated\n* create an incident if the error is not caught\n* resolving the incident will create a new one\n* extract logic to handle the error events"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3111, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}