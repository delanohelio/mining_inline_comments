{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNzQ5ODQ3", "number": 3984, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMTowMTo1N1rODlM5dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMTowMTo1N1rODlM5dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzM1MjIyOnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMTowMTo1N1rOFx9fig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwODoyMToxOFrOFzeBUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzMjA0Mg==", "bodyText": "Can this call fail? E.g. Exception?", "url": "https://github.com/camunda-cloud/zeebe/pull/3984#discussion_r387932042", "createdAt": "2020-03-04T21:01:57Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -601,18 +605,22 @@ public void onRecovered() {\n   private void updateHealthStatus(final HealthStatus newStatus) {\n     if (healthStatus != newStatus) {\n       healthStatus = newStatus;\n-      if (failureListener != null) {\n-        switch (newStatus) {\n-          case HEALTHY:\n+      switch (newStatus) {\n+        case HEALTHY:\n+          healthMetrics.setHealthy();\n+          if (failureListener != null) {\n             failureListener.onRecovered();\n-            break;\n-          case UNHEALTHY:\n+          }\n+          break;\n+        case UNHEALTHY:\n+          healthMetrics.setUnhealthy();\n+          if (failureListener != null) {\n             failureListener.onFailure();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26412730e86cbe791f3c86b95d2933ffb6b1a7df"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE0NjU3Nw==", "bodyText": "Probably not. But in case it fails, what would be the expected behavior? If it is just for logging, it will be logged by the actor controller. Health monitor is also periodically probing these modules. So it will detect the failure of this module eventually.", "url": "https://github.com/camunda-cloud/zeebe/pull/3984#discussion_r388146577", "createdAt": "2020-03-05T08:42:26Z", "author": {"login": "deepthidevaki"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -601,18 +605,22 @@ public void onRecovered() {\n   private void updateHealthStatus(final HealthStatus newStatus) {\n     if (healthStatus != newStatus) {\n       healthStatus = newStatus;\n-      if (failureListener != null) {\n-        switch (newStatus) {\n-          case HEALTHY:\n+      switch (newStatus) {\n+        case HEALTHY:\n+          healthMetrics.setHealthy();\n+          if (failureListener != null) {\n             failureListener.onRecovered();\n-            break;\n-          case UNHEALTHY:\n+          }\n+          break;\n+        case UNHEALTHY:\n+          healthMetrics.setUnhealthy();\n+          if (failureListener != null) {\n             failureListener.onFailure();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzMjA0Mg=="}, "originalCommit": {"oid": "26412730e86cbe791f3c86b95d2933ffb6b1a7df"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI3NDA3Ng==", "bodyText": "So it will detect the failure of this module eventually.\n\nOk here I was unsure. I thought that we might miss an failure. E. g. we report healthy and the failureListener throws an exception that the actors might then have a problem but we are not seeing it?", "url": "https://github.com/camunda-cloud/zeebe/pull/3984#discussion_r388274076", "createdAt": "2020-03-05T12:53:18Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -601,18 +605,22 @@ public void onRecovered() {\n   private void updateHealthStatus(final HealthStatus newStatus) {\n     if (healthStatus != newStatus) {\n       healthStatus = newStatus;\n-      if (failureListener != null) {\n-        switch (newStatus) {\n-          case HEALTHY:\n+      switch (newStatus) {\n+        case HEALTHY:\n+          healthMetrics.setHealthy();\n+          if (failureListener != null) {\n             failureListener.onRecovered();\n-            break;\n-          case UNHEALTHY:\n+          }\n+          break;\n+        case UNHEALTHY:\n+          healthMetrics.setUnhealthy();\n+          if (failureListener != null) {\n             failureListener.onFailure();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzMjA0Mg=="}, "originalCommit": {"oid": "26412730e86cbe791f3c86b95d2933ffb6b1a7df"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUxMDYwNA==", "bodyText": "If just the notification to failure listener fails, health monitor will detect the health status correctly in the next probe. Do you suggest to handle it any other way?", "url": "https://github.com/camunda-cloud/zeebe/pull/3984#discussion_r389510604", "createdAt": "2020-03-09T08:12:47Z", "author": {"login": "deepthidevaki"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -601,18 +605,22 @@ public void onRecovered() {\n   private void updateHealthStatus(final HealthStatus newStatus) {\n     if (healthStatus != newStatus) {\n       healthStatus = newStatus;\n-      if (failureListener != null) {\n-        switch (newStatus) {\n-          case HEALTHY:\n+      switch (newStatus) {\n+        case HEALTHY:\n+          healthMetrics.setHealthy();\n+          if (failureListener != null) {\n             failureListener.onRecovered();\n-            break;\n-          case UNHEALTHY:\n+          }\n+          break;\n+        case UNHEALTHY:\n+          healthMetrics.setUnhealthy();\n+          if (failureListener != null) {\n             failureListener.onFailure();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzMjA0Mg=="}, "originalCommit": {"oid": "26412730e86cbe791f3c86b95d2933ffb6b1a7df"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUxMTM4MQ==", "bodyText": "How often the probe is done? Sorry I think I have not the complete picture currently.", "url": "https://github.com/camunda-cloud/zeebe/pull/3984#discussion_r389511381", "createdAt": "2020-03-09T08:15:05Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -601,18 +605,22 @@ public void onRecovered() {\n   private void updateHealthStatus(final HealthStatus newStatus) {\n     if (healthStatus != newStatus) {\n       healthStatus = newStatus;\n-      if (failureListener != null) {\n-        switch (newStatus) {\n-          case HEALTHY:\n+      switch (newStatus) {\n+        case HEALTHY:\n+          healthMetrics.setHealthy();\n+          if (failureListener != null) {\n             failureListener.onRecovered();\n-            break;\n-          case UNHEALTHY:\n+          }\n+          break;\n+        case UNHEALTHY:\n+          healthMetrics.setUnhealthy();\n+          if (failureListener != null) {\n             failureListener.onFailure();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzMjA0Mg=="}, "originalCommit": {"oid": "26412730e86cbe791f3c86b95d2933ffb6b1a7df"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUxMjI4Nw==", "bodyText": "Currently hard coded to 60 seconds.", "url": "https://github.com/camunda-cloud/zeebe/pull/3984#discussion_r389512287", "createdAt": "2020-03-09T08:17:55Z", "author": {"login": "deepthidevaki"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -601,18 +605,22 @@ public void onRecovered() {\n   private void updateHealthStatus(final HealthStatus newStatus) {\n     if (healthStatus != newStatus) {\n       healthStatus = newStatus;\n-      if (failureListener != null) {\n-        switch (newStatus) {\n-          case HEALTHY:\n+      switch (newStatus) {\n+        case HEALTHY:\n+          healthMetrics.setHealthy();\n+          if (failureListener != null) {\n             failureListener.onRecovered();\n-            break;\n-          case UNHEALTHY:\n+          }\n+          break;\n+        case UNHEALTHY:\n+          healthMetrics.setUnhealthy();\n+          if (failureListener != null) {\n             failureListener.onFailure();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzMjA0Mg=="}, "originalCommit": {"oid": "26412730e86cbe791f3c86b95d2933ffb6b1a7df"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTUxMzU1Mw==", "bodyText": "Ok thanks yes should be fine", "url": "https://github.com/camunda-cloud/zeebe/pull/3984#discussion_r389513553", "createdAt": "2020-03-09T08:21:18Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -601,18 +605,22 @@ public void onRecovered() {\n   private void updateHealthStatus(final HealthStatus newStatus) {\n     if (healthStatus != newStatus) {\n       healthStatus = newStatus;\n-      if (failureListener != null) {\n-        switch (newStatus) {\n-          case HEALTHY:\n+      switch (newStatus) {\n+        case HEALTHY:\n+          healthMetrics.setHealthy();\n+          if (failureListener != null) {\n             failureListener.onRecovered();\n-            break;\n-          case UNHEALTHY:\n+          }\n+          break;\n+        case UNHEALTHY:\n+          healthMetrics.setUnhealthy();\n+          if (failureListener != null) {\n             failureListener.onFailure();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkzMjA0Mg=="}, "originalCommit": {"oid": "26412730e86cbe791f3c86b95d2933ffb6b1a7df"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4889, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}