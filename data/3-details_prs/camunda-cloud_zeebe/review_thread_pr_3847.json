{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NDMwMjg3", "number": 3847, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNTo1NzoxNVrODgcDtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNTo1NzoxNVrODgcDtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzQwNzI1OnYy", "diffSide": "RIGHT", "path": "exporters/elasticsearch-exporter/src/main/java/io/zeebe/exporter/ElasticsearchClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNTo1NzoxNVrOFqpQ-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNTo1NzoxNVrOFqpQ-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI2MDYwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final String version = VersionUtil.getVersion().toLowerCase();\n          \n          \n            \n                final String version = VersionUtil.getVersionLowerCase();\n          \n      \n    \n    \n  \n\nLet's use the caching method you added or cache the lowercase version somewhere in the constructor.", "url": "https://github.com/camunda-cloud/zeebe/pull/3847#discussion_r380260600", "createdAt": "2020-02-17T15:57:15Z", "author": {"login": "menski"}, "path": "exporters/elasticsearch-exporter/src/main/java/io/zeebe/exporter/ElasticsearchClient.java", "diffHunk": "@@ -229,8 +232,17 @@ protected String indexPrefixForValueTypeWithDelimiter(final ValueType valueType)\n     return indexPrefixForValueType(valueType) + INDEX_DELIMITER;\n   }\n \n+  private String aliasNameForValueType(final ValueType valueType) {\n+    return configuration.index.prefix + ALIAS_DELIMITER + valueTypeToString(valueType);\n+  }\n+\n   private String indexPrefixForValueType(final ValueType valueType) {\n-    return configuration.index.prefix + \"-\" + valueTypeToString(valueType);\n+    final String version = VersionUtil.getVersion().toLowerCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3d929ea35ec1eb7c7d6ff6ce3eb87a47b77d330"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4977, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}