{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNTQ2NTUx", "number": 3977, "title": "chore(broker): expose health status via http endpoint", "bodyText": "Description\nExposes broker health status via http endpoint /health. Similar to ready endpoint, it respond with an empty content when broker is healthy and respond with 'SERVICE_UNAVAILABLE' when it is not healthy.\nRelated issues\ncloses #3833\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-03-04T13:13:04Z", "url": "https://github.com/camunda-cloud/zeebe/pull/3977", "merged": true, "mergeCommit": {"oid": "e08ec1d7c16e65cfcae494432252d24b164616d1"}, "closed": true, "closedAt": "2020-03-06T15:05:42Z", "author": {"login": "deepthidevaki"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcK_LFVgFqTM3MDI4MDg2OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLAFAXgBqjMxMDUzMzYwNjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMjgwODY5", "url": "https://github.com/camunda-cloud/zeebe/pull/3977#pullrequestreview-370280869", "createdAt": "2020-03-06T12:17:39Z", "commit": {"oid": "6c46a03d9c6ee85bb39d409ec08ebf83b6f049ff"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjoxNzozOVrOFy20xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjoxODo1NlrOFy22yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg3MTM2Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private boolean isBrokerHealthy(final Broker broker) {\n          \n          \n            \n                final SocketBindingCfg monitoringApi = broker.getConfig().getNetwork().getMonitoringApi();\n          \n          \n            \n                final String baseUrl =\n          \n          \n            \n                    String.format(\"http://%s:%d\", monitoringApi.getHost(), monitoringApi.getPort());\n          \n          \n            \n                final String url = baseUrl + \"/health\";\n          \n          \n            \n            \n          \n          \n            \n                try (final CloseableHttpClient client = HttpClients.createDefault()) {\n          \n          \n            \n                  final HttpGet request = new HttpGet(url);\n          \n          \n            \n                  try (final CloseableHttpResponse response = client.execute(request)) {\n          \n          \n            \n                    return response.getStatusLine().getStatusCode() != 503;\n          \n          \n            \n                  }\n          \n          \n            \n                } catch (final IOException e) {\n          \n          \n            \n                  e.printStackTrace();\n          \n          \n            \n                }\n          \n          \n            \n                return false;\n          \n          \n            \n              }\n          \n          \n            \n              private boolean isBrokerHealthy(final Broker broker) {\n          \n          \n            \n                final var monitoringApi = broker.getConfig().getNetwork().getMonitoringApi();\n          \n          \n            \n                final var host = monitoringApi.getHost();\n          \n          \n            \n                final var port = monitoringApi.getPort();\n          \n          \n            \n                final var uri = URI.create(String.format(\"http://%s:%d/health\", host, port));\n          \n          \n            \n                final var client = HttpClient.newHttpClient();\n          \n          \n            \n                final var request = HttpRequest.newBuilder(uri).build();\n          \n          \n            \n            \n          \n          \n            \n                try {\n          \n          \n            \n                  return client.send(request, BodyHandlers.discarding()).statusCode() == 204;\n          \n          \n            \n                } catch (InterruptedException | IOException e) {\n          \n          \n            \n                  LangUtil.rethrowUnchecked(e);\n          \n          \n            \n                  return false; // should not happen\n          \n          \n            \n                }\n          \n          \n            \n              }\n          \n      \n    \n    \n  \n\nJava 11 comes with a build in usable HttpClient (although still no URIBuilder \ud83d\ude44) so we don't need the Apache Components dependency here. We can also reuse it for the other test above.", "url": "https://github.com/camunda-cloud/zeebe/pull/3977#discussion_r388871367", "createdAt": "2020-03-06T12:17:39Z", "author": {"login": "npepinpe"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/health/HealthMonitoringTest.java", "diffHunk": "@@ -77,4 +81,21 @@ private void corruptAllSnapshots(final Broker leader) {\n                   .forEach(file -> file.delete());\n             });\n   }\n+\n+  private boolean isBrokerHealthy(final Broker broker) {\n+    final SocketBindingCfg monitoringApi = broker.getConfig().getNetwork().getMonitoringApi();\n+    final String baseUrl =\n+        String.format(\"http://%s:%d\", monitoringApi.getHost(), monitoringApi.getPort());\n+    final String url = baseUrl + \"/health\";\n+\n+    try (final CloseableHttpClient client = HttpClients.createDefault()) {\n+      final HttpGet request = new HttpGet(url);\n+      try (final CloseableHttpResponse response = client.execute(request)) {\n+        return response.getStatusLine().getStatusCode() != 503;\n+      }\n+    } catch (final IOException e) {\n+      e.printStackTrace();\n+    }\n+    return false;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c46a03d9c6ee85bb39d409ec08ebf83b6f049ff"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg3MTg4Mw==", "bodyText": "We should use the method reference syntax wherever possible\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              .forEach(file -> file.delete());\n          \n          \n            \n                              .forEach(File::delete);", "url": "https://github.com/camunda-cloud/zeebe/pull/3977#discussion_r388871883", "createdAt": "2020-03-06T12:18:56Z", "author": {"login": "npepinpe"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/health/HealthMonitoringTest.java", "diffHunk": "@@ -77,4 +81,21 @@ private void corruptAllSnapshots(final Broker leader) {\n                   .forEach(file -> file.delete());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c46a03d9c6ee85bb39d409ec08ebf83b6f049ff"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c46a03d9c6ee85bb39d409ec08ebf83b6f049ff", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/6c46a03d9c6ee85bb39d409ec08ebf83b6f049ff", "committedDate": "2020-03-03T15:34:17Z", "message": "chore(broker): expose health status via http endpoint"}, "afterCommit": {"oid": "a3624b9322281a9bd12981383d7631fb9a2d2673", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/a3624b9322281a9bd12981383d7631fb9a2d2673", "committedDate": "2020-03-06T13:11:35Z", "message": "chore(test): fix codestyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMzE0Mjcy", "url": "https://github.com/camunda-cloud/zeebe/pull/3977#pullrequestreview-370314272", "createdAt": "2020-03-06T13:19:35Z", "commit": {"oid": "a3624b9322281a9bd12981383d7631fb9a2d2673"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5198a454acb4fb6a9dd5b119e16bf40f1fee6ca4", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/5198a454acb4fb6a9dd5b119e16bf40f1fee6ca4", "committedDate": "2020-03-06T13:23:49Z", "message": "chore(broker): expose health status via http endpoint"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a3624b9322281a9bd12981383d7631fb9a2d2673", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/a3624b9322281a9bd12981383d7631fb9a2d2673", "committedDate": "2020-03-06T13:11:35Z", "message": "chore(test): fix codestyle"}, "afterCommit": {"oid": "5198a454acb4fb6a9dd5b119e16bf40f1fee6ca4", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/5198a454acb4fb6a9dd5b119e16bf40f1fee6ca4", "committedDate": "2020-03-06T13:23:49Z", "message": "chore(broker): expose health status via http endpoint"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3027, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}