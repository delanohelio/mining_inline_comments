{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MzMyNDU0", "number": 5981, "title": "fix(clients/go): retry job poll after token refresh", "bodyText": "Description\nAdds retry/refresh logic to the job poller and activate command. It also adds a way to test streaming RPCs which we previously weren't doing. This adds a new parameter to the NewJobWorkerBuilder which breaks compatibility but it's probably not used by users.\nRelated issues\ncloses #5625\nDefinition of Done\nNot all items need to be done depending on the issue and the pull request.\nCode changes:\n\n The changes are backwards compatibility with previous versions\n If it fixes a bug then PRs are created to backport the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. backport stable/0.25) to the PR, in case that fails you need to create backports manually.\n\nTesting:\n\n There are unit/integration tests that verify all acceptance criterias of the issue\n New tests are written to ensure backwards compatibility with further versions\n The behavior is tested manually\n The impact of the changes is verified by a benchmark\n\nDocumentation:\n\n The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\n New content is added to the release announcement", "createdAt": "2020-12-08T10:01:45Z", "url": "https://github.com/camunda-cloud/zeebe/pull/5981", "merged": true, "mergeCommit": {"oid": "708fc845b2adf24a8d31a63cc5b14b6e208ea85a"}, "closed": true, "closedAt": "2020-12-09T15:00:12Z", "author": {"login": "MiguelPires"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkHPjdABqjQwODM5NTY1Mjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkfb2RgBqjQwOTAxNTYzODA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d238c8c9a0bde86757729feb39ce823c33d7c69", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/4d238c8c9a0bde86757729feb39ce823c33d7c69", "committedDate": "2020-12-08T09:47:39Z", "message": "fix(clients/go): retry job poll after token refresh"}, "afterCommit": {"oid": "bf033be794f4178b9002e939ca4835f13384166f", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/bf033be794f4178b9002e939ca4835f13384166f", "committedDate": "2020-12-08T10:04:28Z", "message": "fix(clients/go): retry job poll after token refresh"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3MTgzODkx", "url": "https://github.com/camunda-cloud/zeebe/pull/5981#pullrequestreview-547183891", "createdAt": "2020-12-08T12:24:11Z", "commit": {"oid": "bf033be794f4178b9002e939ca4835f13384166f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjoyNDoxMVrOIBXr6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzowOTowOVrOIBaM2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMwNzU2MQ==", "bodyText": "I wouldn't add UNAUTHENTICATED since that's coupling the implementation of shouldRetry - plus we already print out the error, so why no just say:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tlog.Printf(\"Failed to reopen job polling stream after UNATHENTICATED error: %v\\n\", err)\n          \n          \n            \n            \t\t\t\tlog.Printf(\"Failed to reopen job polling stream: %v\\n\", err)", "url": "https://github.com/camunda-cloud/zeebe/pull/5981#discussion_r538307561", "createdAt": "2020-12-08T12:24:11Z", "author": {"login": "npepinpe"}, "path": "clients/go/pkg/commands/activate_jobs.go", "diffHunk": "@@ -81,21 +82,26 @@ func (cmd *ActivateJobsCommand) FetchVariables(fetchVariables ...string) Activat\n func (cmd *ActivateJobsCommand) Send(ctx context.Context) ([]entities.Job, error) {\n \tcmd.request.RequestTimeout = getLongPollingMillis(ctx)\n \n-\tstream, err := cmd.gateway.ActivateJobs(ctx, &cmd.request)\n+\tstream, err := cmd.openStream(ctx)\n \tif err != nil {\n-\t\tif cmd.shouldRetry(ctx, err) {\n-\t\t\treturn cmd.Send(ctx)\n-\t\t}\n \t\treturn nil, err\n \t}\n \n \tvar activatedJobs []entities.Job\n-\n \tfor {\n \t\tresponse, err := stream.Recv()\n \t\tif err == io.EOF {\n \t\t\tbreak\n \t\t}\n+\t\tif cmd.shouldRetry(ctx, err) {\n+\t\t\t// the headers are outdated and need to be remade\n+\t\t\tstream, err = cmd.openStream(ctx)\n+\t\t\tif err != nil {\n+\t\t\t\tlog.Printf(\"Failed to reopen job polling stream after UNATHENTICATED error: %v\\n\", err)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf033be794f4178b9002e939ca4835f13384166f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMyMTI3OA==", "bodyText": "Also, maybe a dumb question, but wouldn't the \"standard\" thing be to print errors out on STDERR?", "url": "https://github.com/camunda-cloud/zeebe/pull/5981#discussion_r538321278", "createdAt": "2020-12-08T12:40:29Z", "author": {"login": "npepinpe"}, "path": "clients/go/pkg/commands/activate_jobs.go", "diffHunk": "@@ -81,21 +82,26 @@ func (cmd *ActivateJobsCommand) FetchVariables(fetchVariables ...string) Activat\n func (cmd *ActivateJobsCommand) Send(ctx context.Context) ([]entities.Job, error) {\n \tcmd.request.RequestTimeout = getLongPollingMillis(ctx)\n \n-\tstream, err := cmd.gateway.ActivateJobs(ctx, &cmd.request)\n+\tstream, err := cmd.openStream(ctx)\n \tif err != nil {\n-\t\tif cmd.shouldRetry(ctx, err) {\n-\t\t\treturn cmd.Send(ctx)\n-\t\t}\n \t\treturn nil, err\n \t}\n \n \tvar activatedJobs []entities.Job\n-\n \tfor {\n \t\tresponse, err := stream.Recv()\n \t\tif err == io.EOF {\n \t\t\tbreak\n \t\t}\n+\t\tif cmd.shouldRetry(ctx, err) {\n+\t\t\t// the headers are outdated and need to be remade\n+\t\t\tstream, err = cmd.openStream(ctx)\n+\t\t\tif err != nil {\n+\t\t\t\tlog.Printf(\"Failed to reopen job polling stream after UNATHENTICATED error: %v\\n\", err)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMwNzU2MQ=="}, "originalCommit": {"oid": "bf033be794f4178b9002e939ca4835f13384166f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM0NjE0Mg==", "bodyText": "Why not use errors.Wrapf?", "url": "https://github.com/camunda-cloud/zeebe/pull/5981#discussion_r538346142", "createdAt": "2020-12-08T13:06:34Z", "author": {"login": "npepinpe"}, "path": "clients/go/pkg/worker/jobPoller.go", "diffHunk": "@@ -101,6 +113,18 @@ func (poller *jobPoller) activateJobs() {\n \t}\n }\n \n+func (poller *jobPoller) openStream(ctx context.Context) (pb.Gateway_ActivateJobsClient, error) {\n+\tstream, err := poller.client.ActivateJobs(ctx, poller.request)\n+\tif err != nil {\n+\t\tif poller.shouldRetry(ctx, err) {\n+\t\t\treturn poller.openStream(ctx)\n+\t\t}\n+\t\treturn nil, fmt.Errorf(\"Worker '%s' failed to open job stream due to error: %w\", poller.request.Worker, err)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf033be794f4178b9002e939ca4835f13384166f"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM0NzE5Nw==", "bodyText": "Should we introduce a type as we did for credentials provider? Considering this is then passed in a public function, it would help document its intent.", "url": "https://github.com/camunda-cloud/zeebe/pull/5981#discussion_r538347197", "createdAt": "2020-12-08T13:07:35Z", "author": {"login": "npepinpe"}, "path": "clients/go/pkg/worker/jobPoller_test.go", "diffHunk": "@@ -51,6 +52,7 @@ func (suite *JobPollerSuite) BeforeTest(_, _ string) {\n \t\tcloseSignal:    make(chan struct{}),\n \t\tremaining:      0,\n \t\tthreshold:      int(math.Round(float64(DefaultJobWorkerMaxJobActive) * DefaultJobWorkerPollThreshold)),\n+\t\tshouldRetry:    func(_ context.Context, _ error) bool { return false },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf033be794f4178b9002e939ca4835f13384166f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM0ODc2Mw==", "bodyText": "Just realized, we don't document the public API in this package? \ud83e\udd37\u200d\u2642\ufe0f\nDo you think it would make sense to pass here the CredentialsProvider instead? It might make the intent of the predicate clearer, and we could document it as \"you should pass the same credentials provider used when creating the client\" or something.", "url": "https://github.com/camunda-cloud/zeebe/pull/5981#discussion_r538348763", "createdAt": "2020-12-08T13:09:09Z", "author": {"login": "npepinpe"}, "path": "clients/go/pkg/worker/jobWorker_builder.go", "diffHunk": "@@ -190,7 +193,7 @@ func (builder *JobWorkerBuilder) Open() JobWorker {\n \t}\n }\n \n-func NewJobWorkerBuilder(gatewayClient pb.GatewayClient, jobClient JobClient) JobWorkerBuilderStep1 {\n+func NewJobWorkerBuilder(gatewayClient pb.GatewayClient, jobClient JobClient, retryPred func(ctx context.Context, err error) bool) JobWorkerBuilderStep1 {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf033be794f4178b9002e939ca4835f13384166f"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MTUyOTA1", "url": "https://github.com/camunda-cloud/zeebe/pull/5981#pullrequestreview-548152905", "createdAt": "2020-12-09T12:54:24Z", "commit": {"oid": "9474af972d2bf4d9dddd439d9260779c536cc8b0"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjo1NDoyNFrOICTLwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjo1NDoyNFrOICTLwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI4MjM2OQ==", "bodyText": "Can we give an example usage here?", "url": "https://github.com/camunda-cloud/zeebe/pull/5981#discussion_r539282369", "createdAt": "2020-12-09T12:54:24Z", "author": {"login": "npepinpe"}, "path": "clients/go/pkg/worker/jobWorker_builder.go", "diffHunk": "@@ -190,7 +193,8 @@ func (builder *JobWorkerBuilder) Open() JobWorker {\n \t}\n }\n \n-func NewJobWorkerBuilder(gatewayClient pb.GatewayClient, jobClient JobClient) JobWorkerBuilderStep1 {\n+// NewJobWorkerBuilder should use the same retryPredicate used by the CredentialProvider (ShouldRetry method)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9474af972d2bf4d9dddd439d9260779c536cc8b0"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f63a0c0a2cdec483c250f0765694822bf932a40f", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/f63a0c0a2cdec483c250f0765694822bf932a40f", "committedDate": "2020-12-09T14:15:44Z", "message": "fix(clients/go): retry job poll after token refresh"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9474af972d2bf4d9dddd439d9260779c536cc8b0", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/9474af972d2bf4d9dddd439d9260779c536cc8b0", "committedDate": "2020-12-09T11:42:42Z", "message": "chore(clients/go): review feedback"}, "afterCommit": {"oid": "f63a0c0a2cdec483c250f0765694822bf932a40f", "author": {"user": null}, "url": "https://github.com/camunda-cloud/zeebe/commit/f63a0c0a2cdec483c250f0765694822bf932a40f", "committedDate": "2020-12-09T14:15:44Z", "message": "fix(clients/go): retry job poll after token refresh"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2308, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}