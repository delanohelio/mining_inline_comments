{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NDg4OTEz", "number": 5893, "title": "feat(clients/java): Optional read and connect timeout for an OAuth2 credentials client.", "bodyText": "Description\nI've added optional timeouts for a credentials client.\nRelated issues\n\ncloses #3556\nDefinition of Done\nNot all items need to be done depending on the issue and the pull request.\nCode changes:\n\n The changes are backwards compatibility with previous versions\n If it fixes a bug then PRs are created to backport the fix to the last two minor versions. You can trigger a backport by assigning labels (e.g. backport stable/0.25) to the PR, in case that fails you need to create backports manually.\n\nTesting:\n\n There are unit/integration tests that verify all acceptance criterias of the issue\n New tests are written to ensure backwards compatibility with further versions\n The behavior is tested manually\n The impact of the changes is verified by a benchmark\n\nDocumentation:\n\n The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\n New content is added to the release announcement", "createdAt": "2020-11-23T06:32:31Z", "url": "https://github.com/camunda-cloud/zeebe/pull/5893", "merged": true, "mergeCommit": {"oid": "67a5bcb796e344301385430dd193b785958452e0"}, "closed": true, "closedAt": "2020-11-26T13:39:47Z", "author": {"login": "aivinog1"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfVqXTAFqTUzNjQ1NTIwMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgShBHAFqTUzOTI5MTc0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NDU1MjAz", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#pullrequestreview-536455203", "createdAt": "2020-11-23T13:07:54Z", "commit": {"oid": "275241d9a027b64d58b1eec4ba781eca8ae42425"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzozMjo0OFrOH4NmXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzo1ODo1N1rOH4OmRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcwNTExNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private void validate() throws IllegalArgumentException {\n          \n          \n            \n              private void validate() {\n          \n      \n    \n    \n  \n\nSonarLint will complain about this declaration since IllegalArgumentException is a RuntimeException and doesn't need to be declared", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r528705117", "createdAt": "2020-11-23T13:32:48Z", "author": {"login": "MiguelPires"}, "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -146,9 +193,17 @@ private void applyDefaults() {\n     if (authorizationServerUrl == null) {\n       authorizationServerUrl = DEFAULT_AUTHZ_SERVER;\n     }\n+\n+    if (connectTimeout == null) {\n+      connectTimeout = DEFAULT_CONNECT_TIMEOUT;\n+    }\n+\n+    if (readTimeout == null) {\n+      readTimeout = DEFAULT_READ_TIMEOUT;\n+    }\n   }\n \n-  private void validate() {\n+  private void validate() throws IllegalArgumentException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "275241d9a027b64d58b1eec4ba781eca8ae42425"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcxMjE0MA==", "bodyText": "Maybe we can call these arguments replyDelay, I think it'd be clearer", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r528712140", "createdAt": "2020-11-23T13:44:09Z", "author": {"login": "MiguelPires"}, "path": "clients/java/src/test/java/io/zeebe/client/OAuthCredentialsProviderTest.java", "diffHunk": "@@ -442,7 +513,20 @@ private void mockCredentials(final String accessToken) {\n     mockCredentials(accessToken, AUDIENCE);\n   }\n \n+  private void mockCredentials(final Integer readDelay) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "275241d9a027b64d58b1eec4ba781eca8ae42425"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcyMTQ3OQ==", "bodyText": "SonarLint complains about the nested try here. We could fix that and also make this less repetitive by refactoring it to a validateTimeout method. If the validation fails, we can throw an exception stating what we expect. Something like \"Connect/read timeout is XYZ, expected timeout to be a positive number smaller than Integer.MAX_VALUE\". Wdyt?", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r528721479", "createdAt": "2020-11-23T13:58:57Z", "author": {"login": "MiguelPires"}, "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -163,6 +218,24 @@ private void validate() {\n         throw new IllegalArgumentException(\n             \"Expected specified credentials cache to be a file but found directory instead.\");\n       }\n+      if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n+        throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n+      }\n+      try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "275241d9a027b64d58b1eec4ba781eca8ae42425"}, "originalPosition": 121}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MDE3NDc5", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#pullrequestreview-539017479", "createdAt": "2020-11-26T06:12:20Z", "commit": {"oid": "54136e9b767c32d111e05888e06ea076fe9ea0ef"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNjoxMjoyMFrOH6NCrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNjoyNDoxM1rOH6NPug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc5MzEzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n          \n          \n            \n                    throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n          \n          \n            \n                  }\n          \n      \n    \n    \n  \n\nThis check is duplicated and can be removed.", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r530793133", "createdAt": "2020-11-26T06:12:20Z", "author": {"login": "MiguelPires"}, "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -163,8 +216,29 @@ private void validate() {\n         throw new IllegalArgumentException(\n             \"Expected specified credentials cache to be a file but found directory instead.\");\n       }\n+      if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n+        throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54136e9b767c32d111e05888e06ea076fe9ea0ef"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc5NjQ3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final boolean valid;\n          \n          \n            \n                if (timeout.isZero() || timeout.isNegative()) {\n          \n          \n            \n                  valid = false;\n          \n          \n            \n                } else {\n          \n          \n            \n                  final long millis = timeout.toMillis();\n          \n          \n            \n                  valid = millis < Integer.MAX_VALUE && millis > Integer.MIN_VALUE;\n          \n          \n            \n                }\n          \n          \n            \n                if (!valid) {\n          \n          \n            \n                if (timeout.isZero() || timeout.isNegative() || timeout.toMillis() > Integer.MAX_VALUE) {\n          \n      \n    \n    \n  \n\nThe > Integer.MIN_VALUE is redundant at this point so we can check this more a bit more concisely", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r530796474", "createdAt": "2020-11-26T06:24:13Z", "author": {"login": "MiguelPires"}, "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -163,8 +216,29 @@ private void validate() {\n         throw new IllegalArgumentException(\n             \"Expected specified credentials cache to be a file but found directory instead.\");\n       }\n+      if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n+        throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n+      }\n+      validateTimeout(connectTimeout, \"ConnectTimeout\");\n+      validateTimeout(readTimeout, \"ReadTimeout\");\n     } catch (final NullPointerException | IOException e) {\n       throw new IllegalArgumentException(e);\n     }\n   }\n+\n+  private void validateTimeout(final Duration timeout, final String timeoutName) {\n+    final boolean valid;\n+    if (timeout.isZero() || timeout.isNegative()) {\n+      valid = false;\n+    } else {\n+      final long millis = timeout.toMillis();\n+      valid = millis < Integer.MAX_VALUE && millis > Integer.MIN_VALUE;\n+    }\n+    if (!valid) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54136e9b767c32d111e05888e06ea076fe9ea0ef"}, "originalPosition": 125}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64e22e43afb94256aa860037b29237bc0517cec5", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/64e22e43afb94256aa860037b29237bc0517cec5", "committedDate": "2020-11-26T08:44:18Z", "message": "feat(clients/java): Optional read and connect timeout for an OAuth2 credentials client."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "54136e9b767c32d111e05888e06ea076fe9ea0ef", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/54136e9b767c32d111e05888e06ea076fe9ea0ef", "committedDate": "2020-11-24T14:07:50Z", "message": "feat(clients/java): Code review. Improve validation\n\nRefactoring(prod and test), simplified interval checking"}, "afterCommit": {"oid": "64e22e43afb94256aa860037b29237bc0517cec5", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/64e22e43afb94256aa860037b29237bc0517cec5", "committedDate": "2020-11-26T08:44:18Z", "message": "feat(clients/java): Optional read and connect timeout for an OAuth2 credentials client."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MjkxNzQ4", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#pullrequestreview-539291748", "createdAt": "2020-11-26T12:57:10Z", "commit": {"oid": "64e22e43afb94256aa860037b29237bc0517cec5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2256, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}