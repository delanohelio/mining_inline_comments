{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2MDA3MDcz", "number": 5343, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTowOTowNFrOEkXkLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjo0MTozMlrOEoh7hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTcwMjg0OnYy", "diffSide": "RIGHT", "path": "clients/java/ignored-changes.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTowOTowNFrOHTRn7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTowOTowNFrOHTRn7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3Mzc0MQ==", "bodyText": "This is the third exception for the same type. We can replace them with one exception for the package to allow new methods in the interfaces:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              <difference>\n          \n          \n            \n                <className>io/zeebe/client/api/response/PublishMessageResponse</className>\n          \n          \n            \n                <method>long messageKey()</method>\n          \n          \n            \n                <differenceType>7012</differenceType>\n          \n          \n            \n              </difference>\n          \n          \n            \n             <difference>\n          \n          \n            \n               <className>io/zeebe/client/api/*</className>\n          \n          \n            \n               <method>*</method>\n          \n          \n            \n               <differenceType>7012</differenceType>\n          \n          \n            \n             </difference>", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r489973741", "createdAt": "2020-09-17T05:09:04Z", "author": {"login": "saig0"}, "path": "clients/java/ignored-changes.xml", "diffHunk": "@@ -28,4 +28,9 @@\n     <method>ZeebeClientCredentials(java.lang.String, long, java.lang.String, java.lang.String)</method>\n     <differenceType>7004</differenceType>\n   </difference>\n+  <difference>\n+    <className>io/zeebe/client/api/response/PublishMessageResponse</className>\n+    <method>long messageKey()</method>\n+    <differenceType>7012</differenceType>\n+  </difference>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30f7eb1cb58d075d04d4966bf8ae1aa15fc500b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTcwOTYwOnYy", "diffSide": "RIGHT", "path": "clients/java/src/main/java/io/zeebe/client/api/response/PublishMessageResponse.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNToxMjozMFrOHTRrqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNToxMjozMFrOHTRrqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3NDY5Ng==", "bodyText": "Please add some JavaDoc.\nFor example, Returns the record key of the message that was published.", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r489974696", "createdAt": "2020-09-17T05:12:30Z", "author": {"login": "saig0"}, "path": "clients/java/src/main/java/io/zeebe/client/api/response/PublishMessageResponse.java", "diffHunk": "@@ -15,4 +15,7 @@\n  */\n package io.zeebe.client.api.response;\n \n-public interface PublishMessageResponse {}\n+public interface PublishMessageResponse {\n+\n+  long messageKey();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30f7eb1cb58d075d04d4966bf8ae1aa15fc500b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTcxOTA5OnYy", "diffSide": "RIGHT", "path": "clients/java/src/main/java/io/zeebe/client/impl/response/PublishMessageResponseImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNToxNzozMFrOHTRxAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNToxNzozMFrOHTRxAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3NjA2NQ==", "bodyText": "Let's make the class final.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class PublishMessageResponseImpl implements PublishMessageResponse {\n          \n          \n            \n            public final class PublishMessageResponseImpl implements PublishMessageResponse {", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r489976065", "createdAt": "2020-09-17T05:17:30Z", "author": {"login": "saig0"}, "path": "clients/java/src/main/java/io/zeebe/client/impl/response/PublishMessageResponseImpl.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright \u00a9 2017 camunda services GmbH (info@camunda.com)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.zeebe.client.impl.response;\n+\n+import io.zeebe.client.api.response.PublishMessageResponse;\n+import io.zeebe.gateway.protocol.GatewayOuterClass;\n+\n+public class PublishMessageResponseImpl implements PublishMessageResponse {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30f7eb1cb58d075d04d4966bf8ae1aa15fc500b"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTczMDc3OnYy", "diffSide": "RIGHT", "path": "gateway-protocol/src/main/proto/gateway.proto", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNToyMzo1NlrOHTR4EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNzoyOToyMVrOHUBVuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3Nzg3Mg==", "bodyText": "The new field must be optional to be backward compatible with older versions. Otherwise, the response of an older broker version would fail because it doesn't contain this new field.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              int64 key = 1;\n          \n          \n            \n              // the unique ID of the message that was published\n          \n          \n            \n              optional int64 key = 1 [default = -1];", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r489977872", "createdAt": "2020-09-17T05:23:56Z", "author": {"login": "saig0"}, "path": "gateway-protocol/src/main/proto/gateway.proto", "diffHunk": "@@ -226,6 +226,7 @@ message PublishMessageRequest {\n }\n \n message PublishMessageResponse {\n+  int64 key = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30f7eb1cb58d075d04d4966bf8ae1aa15fc500b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwNzgzMA==", "bodyText": "Looking at https://github.com/zeebe-io/zeebe/wiki/Protocol-Backwards-Compatibility#protobuf.\nOkay. We don't need the optional but the default value should still make sense.", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r490007830", "createdAt": "2020-09-17T06:46:30Z", "author": {"login": "saig0"}, "path": "gateway-protocol/src/main/proto/gateway.proto", "diffHunk": "@@ -226,6 +226,7 @@ message PublishMessageRequest {\n }\n \n message PublishMessageResponse {\n+  int64 key = 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3Nzg3Mg=="}, "originalCommit": {"oid": "c30f7eb1cb58d075d04d4966bf8ae1aa15fc500b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc0MjcwMg==", "bodyText": "@saig0 I'm trying to compile with the code that you provided and I see this:\n[INFO] Compiling 1 proto file(s) to /Users/a.i.vinogradov/IdeaProjects/zeebe/gateway-protocol-impl/target/generated-sources/protobuf/java\n[ERROR] PROTOC FAILED: gateway.proto:230:37: Explicit default values are not allowed in proto3.\n\n[ERROR] /Users/a.i.vinogradov/IdeaProjects/zeebe/gateway-protocol-impl/target/proto/gateway.proto [0:0]: gateway.proto:230:37: Explicit default values are not allowed in proto3.\n\nStart looking into docs: https://developers.google.com/protocol-buffers/docs/proto3#default I see that default values are already used (for example, for numeric values it is zero). So, can you provide a solution you like:\n\nUse dirty workarounds, like https://stackoverflow.com/a/55402302/11112760 to make it returns -1 by default.\nUse the default value that proto3 provides.", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r490742702", "createdAt": "2020-09-18T07:01:46Z", "author": {"login": "aivinog1"}, "path": "gateway-protocol/src/main/proto/gateway.proto", "diffHunk": "@@ -226,6 +226,7 @@ message PublishMessageRequest {\n }\n \n message PublishMessageResponse {\n+  int64 key = 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3Nzg3Mg=="}, "originalCommit": {"oid": "c30f7eb1cb58d075d04d4966bf8ae1aa15fc500b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc1NTUxMw==", "bodyText": "Now I just add a comment about the new field :)", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r490755513", "createdAt": "2020-09-18T07:29:21Z", "author": {"login": "aivinog1"}, "path": "gateway-protocol/src/main/proto/gateway.proto", "diffHunk": "@@ -226,6 +226,7 @@ message PublishMessageRequest {\n }\n \n message PublishMessageResponse {\n+  int64 key = 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3Nzg3Mg=="}, "originalCommit": {"oid": "c30f7eb1cb58d075d04d4966bf8ae1aa15fc500b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDIyMzQyOnYy", "diffSide": "RIGHT", "path": "clients/java/src/main/java/io/zeebe/client/api/response/PublishMessageResponse.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTo0NjoxMFrOHY6AYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTo0NjoxMFrOHY6AYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3ODI0MA==", "bodyText": "Align the method name with the other responses.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              long messageKey();\n          \n          \n            \n              long getMessageKey();", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r495878240", "createdAt": "2020-09-28T11:46:10Z", "author": {"login": "saig0"}, "path": "clients/java/src/main/java/io/zeebe/client/api/response/PublishMessageResponse.java", "diffHunk": "@@ -15,4 +15,12 @@\n  */\n package io.zeebe.client.api.response;\n \n-public interface PublishMessageResponse {}\n+public interface PublishMessageResponse {\n+\n+  /**\n+   * Returns the record key of the message that was published.\n+   *\n+   * @return record key of the message.\n+   */\n+  long messageKey();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15356a755b1f99988a837a9897d4980877596964"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTExODA0OnYy", "diffSide": "RIGHT", "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/client/command/MessageCorrelationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo0MDo0OFrOHZpByg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo0MDo0OFrOHZpByg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0ODY1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void shouldReturnNonZeroMessageKey() {\n          \n          \n            \n              public void shouldReturnTheMessageKey() {", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r496648650", "createdAt": "2020-09-29T11:40:48Z", "author": {"login": "saig0"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/client/command/MessageCorrelationTest.java", "diffHunk": "@@ -174,4 +174,20 @@ public void shouldRejectMessageWithSameId() {\n         .hasMessageContaining(\n             \"Expected to publish a new message with id 'foo', but a message with that id was already published\");\n   }\n+\n+  @Test\n+  public void shouldReturnNonZeroMessageKey() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5af68ae406a023710049b900991785c31be5ccdf"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTE2MDMwOnYy", "diffSide": "RIGHT", "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/client/command/MessageCorrelationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo1Mjo1N1rOHZpa4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo1Mjo1N1rOHZpa4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NTA3Mg==", "bodyText": "We can compare the response key with the record key on the log stream.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThat(response.getMessageKey()).isNotZero();\n          \n          \n            \n                final var messagePublished =\n          \n          \n            \n                    RecordingExporter.messageRecords(MessageIntent.PUBLISHED).getFirst();\n          \n          \n            \n            \n          \n          \n            \n                assertThat(response.getMessageKey()).isEqualTo(messagePublished.getKey());", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r496655072", "createdAt": "2020-09-29T11:52:57Z", "author": {"login": "saig0"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/client/command/MessageCorrelationTest.java", "diffHunk": "@@ -174,4 +174,20 @@ public void shouldRejectMessageWithSameId() {\n         .hasMessageContaining(\n             \"Expected to publish a new message with id 'foo', but a message with that id was already published\");\n   }\n+\n+  @Test\n+  public void shouldReturnNonZeroMessageKey() {\n+    // when\n+    final PublishMessageResponse response =\n+        CLIENT_RULE\n+            .getClient()\n+            .newPublishMessageCommand()\n+            .messageName(MESSAGE_NAME)\n+            .correlationKey(correlationValue)\n+            .send()\n+            .join();\n+\n+    // then\n+    assertThat(response.getMessageKey()).isNotZero();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5af68ae406a023710049b900991785c31be5ccdf"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTM0NDA3OnYy", "diffSide": "RIGHT", "path": "clients/java/src/test/java/io/zeebe/client/workflow/PublishMessageTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjo0MTozMlrOHZrLQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjo0MTozMlrOHZrLQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY4Mzg0Mg==", "bodyText": "Let's check that we return the correct key.\nFirst, we need to instrument the gateway:\n    // given\n    final long messageKey = 123L;\n    gatewayService.onPublishMessageRequest(messageKey);\n\nWhen we can check the response:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThat(response.getMessageKey()).isZero();\n          \n          \n            \n                assertThat(response.getMessageKey()).isEqualTo(messageKey);\n          \n      \n    \n    \n  \n\nIn io.zeebe.client.util.RecordingGatewayService, we need to add the new method to control the response:\n  public void onPublishMessageRequest(final long key) {\n    addRequestHandler(\n        PublishMessageRequest.class,\n        request -> PublishMessageResponse.newBuilder().setKey(key).build());\n  }", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r496683842", "createdAt": "2020-09-29T12:41:32Z", "author": {"login": "saig0"}, "path": "clients/java/src/test/java/io/zeebe/client/workflow/PublishMessageTest.java", "diffHunk": "@@ -34,21 +35,23 @@\n   @Test\n   public void shouldPublishMessage() {\n     // when\n-    client\n-        .newPublishMessageCommand()\n-        .messageName(\"name\")\n-        .correlationKey(\"key\")\n-        .timeToLive(Duration.ofDays(1))\n-        .messageId(\"theId\")\n-        .send()\n-        .join();\n+    final PublishMessageResponse response =\n+        client\n+            .newPublishMessageCommand()\n+            .messageName(\"name\")\n+            .correlationKey(\"key\")\n+            .timeToLive(Duration.ofDays(1))\n+            .messageId(\"theId\")\n+            .send()\n+            .join();\n \n     // then\n     final PublishMessageRequest request = gatewayService.getLastRequest();\n     assertThat(request.getName()).isEqualTo(\"name\");\n     assertThat(request.getCorrelationKey()).isEqualTo(\"key\");\n     assertThat(request.getMessageId()).isEqualTo(\"theId\");\n     assertThat(request.getTimeToLive()).isEqualTo(Duration.ofDays(1).toMillis());\n+    assertThat(response.getMessageKey()).isZero();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5af68ae406a023710049b900991785c31be5ccdf"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 248, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}