{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5Nzg0NTQ4", "number": 5535, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjowNDoyM1rOEs4K5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoyNjo1MFrOEs4goQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDkzMDkyOnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjowNDoyM1rOHgWmJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNzoyNTo0M1rOHgY12g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NjY5Mw==", "bodyText": "A bit unsure with this name. Maybe we can change it to BrokerStepMetrics or BrokerMetrics? What do you think?", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503686693", "createdAt": "2020-10-13T06:04:23Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.monitoring;\n+\n+import io.prometheus.client.Gauge;\n+\n+public class ProcessLifetimeMetrics {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0bc83db78d47e50239128f6a877618852b1938d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcyMzQ4Mg==", "bodyText": "Hm, I like BrokerStepMetrics. It is not too broad as BrokerMetrics :)", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503723482", "createdAt": "2020-10-13T07:25:43Z", "author": {"login": "aivinog1"}, "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.monitoring;\n+\n+import io.prometheus.client.Gauge;\n+\n+public class ProcessLifetimeMetrics {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NjY5Mw=="}, "originalCommit": {"oid": "f0bc83db78d47e50239128f6a877618852b1938d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDkzNzQ4OnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjowNzowNFrOHgWp4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjowNzowNFrOHgWp4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzY1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      .name(\"broker_process_startup_metric\")\n          \n          \n            \n                      .name(\"broker_start_step_latency\")", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503687650", "createdAt": "2020-10-13T06:07:04Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.monitoring;\n+\n+import io.prometheus.client.Gauge;\n+\n+public class ProcessLifetimeMetrics {\n+\n+  public static final String ZEEBE_NAMESPACE = \"zeebe\";\n+  public static final String PROCESS_NAME_LABEL = \"processName\";\n+  public static final String STEP_NAME_LABEL = \"stepName\";\n+  private static final Gauge STARTUP_METRIC =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_startup_metric\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0bc83db78d47e50239128f6a877618852b1938d"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDkzODQ2OnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjowNzoyN1rOHgWqeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjowNzoyN1rOHgWqeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzgwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      .name(\"broker_process_close_metric\")\n          \n          \n            \n                      .name(\"broker_close_step_latency\")", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503687800", "createdAt": "2020-10-13T06:07:27Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.monitoring;\n+\n+import io.prometheus.client.Gauge;\n+\n+public class ProcessLifetimeMetrics {\n+\n+  public static final String ZEEBE_NAMESPACE = \"zeebe\";\n+  public static final String PROCESS_NAME_LABEL = \"processName\";\n+  public static final String STEP_NAME_LABEL = \"stepName\";\n+  private static final Gauge STARTUP_METRIC =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_startup_metric\")\n+          .labelNames(PROCESS_NAME_LABEL, STEP_NAME_LABEL)\n+          .create()\n+          .register();\n+\n+  private static final Gauge CLOSE_METRICS =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_close_metric\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0bc83db78d47e50239128f6a877618852b1938d"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDk0MTAzOnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjowODozOFrOHgWr9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjowODozOFrOHgWr9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4ODE4MA==", "bodyText": "Please add an help to the metric, which describes what it actually contains. Like: \"Time for each broker start step to complete.\"", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503688180", "createdAt": "2020-10-13T06:08:38Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.monitoring;\n+\n+import io.prometheus.client.Gauge;\n+\n+public class ProcessLifetimeMetrics {\n+\n+  public static final String ZEEBE_NAMESPACE = \"zeebe\";\n+  public static final String PROCESS_NAME_LABEL = \"processName\";\n+  public static final String STEP_NAME_LABEL = \"stepName\";\n+  private static final Gauge STARTUP_METRIC =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_startup_metric\")\n+          .labelNames(PROCESS_NAME_LABEL, STEP_NAME_LABEL)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0bc83db78d47e50239128f6a877618852b1938d"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDk0NDA5OnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjowOTo1OFrOHgWt0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjowOTo1OFrOHgWt0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4ODY1Nw==", "bodyText": "Normally we use observe, could you change that please.", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503688657", "createdAt": "2020-10-13T06:09:58Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.monitoring;\n+\n+import io.prometheus.client.Gauge;\n+\n+public class ProcessLifetimeMetrics {\n+\n+  public static final String ZEEBE_NAMESPACE = \"zeebe\";\n+  public static final String PROCESS_NAME_LABEL = \"processName\";\n+  public static final String STEP_NAME_LABEL = \"stepName\";\n+  private static final Gauge STARTUP_METRIC =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_startup_metric\")\n+          .labelNames(PROCESS_NAME_LABEL, STEP_NAME_LABEL)\n+          .create()\n+          .register();\n+\n+  private static final Gauge CLOSE_METRICS =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_close_metric\")\n+          .labelNames(PROCESS_NAME_LABEL, STEP_NAME_LABEL)\n+          .create()\n+          .register();\n+\n+  private final String processName;\n+\n+  public ProcessLifetimeMetrics(final String processName) {\n+    this.processName = processName;\n+  }\n+\n+  /**\n+   * Meter the time to start for a single step.\n+   *\n+   * @param stepName the name of the step\n+   * @param startupDuration the step start duration in ms\n+   */\n+  public void meterStartupTimeForStep(String stepName, long startupDuration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0bc83db78d47e50239128f6a877618852b1938d"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDk0ODAzOnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/bootstrap/StartProcess.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoxMToyNFrOHgWwHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzo1NTo1NFrOHhGtaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4OTI0NQ==", "bodyText": "Why is this necessary?", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503689245", "createdAt": "2020-10-13T06:11:24Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/bootstrap/StartProcess.java", "diffHunk": "@@ -90,7 +94,7 @@ static long takeDuration(final CheckedRunnable runner) throws Exception {\n     return endTime - startTime;\n   }\n \n-  private static class StartStep {\n+  public static class StartStep {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0bc83db78d47e50239128f6a877618852b1938d"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3NDk4Nw==", "bodyText": "No, this is a useless change, I'll revert this", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r504474987", "createdAt": "2020-10-14T07:55:54Z", "author": {"login": "aivinog1"}, "path": "broker/src/main/java/io/zeebe/broker/bootstrap/StartProcess.java", "diffHunk": "@@ -90,7 +94,7 @@ static long takeDuration(final CheckedRunnable runner) throws Exception {\n     return endTime - startTime;\n   }\n \n-  private static class StartStep {\n+  public static class StartStep {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4OTI0NQ=="}, "originalCommit": {"oid": "f0bc83db78d47e50239128f6a877618852b1938d"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDk1MDAyOnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/bootstrap/StartProcess.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoxMjoxM1rOHgWxOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzo1NTo1OVrOHhGtmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4OTUzMA==", "bodyText": "Why is this necessary?", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503689530", "createdAt": "2020-10-13T06:12:13Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/bootstrap/StartProcess.java", "diffHunk": "@@ -100,11 +104,11 @@ static long takeDuration(final CheckedRunnable runner) throws Exception {\n       this.startFunction = startFunction;\n     }\n \n-    String getName() {\n+    public String getName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0bc83db78d47e50239128f6a877618852b1938d"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3NTAzNQ==", "bodyText": "No, this is a useless change, I'll revert this", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r504475035", "createdAt": "2020-10-14T07:55:59Z", "author": {"login": "aivinog1"}, "path": "broker/src/main/java/io/zeebe/broker/bootstrap/StartProcess.java", "diffHunk": "@@ -100,11 +104,11 @@ static long takeDuration(final CheckedRunnable runner) throws Exception {\n       this.startFunction = startFunction;\n     }\n \n-    String getName() {\n+    public String getName() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4OTUzMA=="}, "originalCommit": {"oid": "f0bc83db78d47e50239128f6a877618852b1938d"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDk1MDE4OnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/bootstrap/StartProcess.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoxMjoxN1rOHgWxUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzo1NjoxMVrOHhGuIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4OTU1Mg==", "bodyText": "Why is this necessary?", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503689552", "createdAt": "2020-10-13T06:12:17Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/bootstrap/StartProcess.java", "diffHunk": "@@ -100,11 +104,11 @@ static long takeDuration(final CheckedRunnable runner) throws Exception {\n       this.startFunction = startFunction;\n     }\n \n-    String getName() {\n+    public String getName() {\n       return name;\n     }\n \n-    StartFunction getStartFunction() {\n+    public StartFunction getStartFunction() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0bc83db78d47e50239128f6a877618852b1938d"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3NTE2OA==", "bodyText": "No, this is a useless change, I'll revert this", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r504475168", "createdAt": "2020-10-14T07:56:11Z", "author": {"login": "aivinog1"}, "path": "broker/src/main/java/io/zeebe/broker/bootstrap/StartProcess.java", "diffHunk": "@@ -100,11 +104,11 @@ static long takeDuration(final CheckedRunnable runner) throws Exception {\n       this.startFunction = startFunction;\n     }\n \n-    String getName() {\n+    public String getName() {\n       return name;\n     }\n \n-    StartFunction getStartFunction() {\n+    public StartFunction getStartFunction() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4OTU1Mg=="}, "originalCommit": {"oid": "f0bc83db78d47e50239128f6a877618852b1938d"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDk3NjIxOnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoyMjo1N1rOHgXAvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoyMjo1N1rOHgXAvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5MzUwMA==", "bodyText": "I think we didn't need the \"process name\", this is automatically added by Prometheus on which pod this metric was scraped.", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503693500", "createdAt": "2020-10-13T06:22:57Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.monitoring;\n+\n+import io.prometheus.client.Gauge;\n+\n+public class ProcessLifetimeMetrics {\n+\n+  public static final String ZEEBE_NAMESPACE = \"zeebe\";\n+  public static final String PROCESS_NAME_LABEL = \"processName\";\n+  public static final String STEP_NAME_LABEL = \"stepName\";\n+  private static final Gauge STARTUP_METRIC =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_startup_metric\")\n+          .labelNames(PROCESS_NAME_LABEL, STEP_NAME_LABEL)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0bc83db78d47e50239128f6a877618852b1938d"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDk4NjU3OnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoyNjo1MFrOHgXG4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoyNjo1MFrOHgXG4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5NTA3NA==", "bodyText": "Register does already create, so this is not necessary.", "url": "https://github.com/camunda-cloud/zeebe/pull/5535#discussion_r503695074", "createdAt": "2020-10-13T06:26:50Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/monitoring/ProcessLifetimeMetrics.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.monitoring;\n+\n+import io.prometheus.client.Gauge;\n+\n+public class ProcessLifetimeMetrics {\n+\n+  public static final String ZEEBE_NAMESPACE = \"zeebe\";\n+  public static final String PROCESS_NAME_LABEL = \"processName\";\n+  public static final String STEP_NAME_LABEL = \"stepName\";\n+  private static final Gauge STARTUP_METRIC =\n+      Gauge.build()\n+          .namespace(ZEEBE_NAMESPACE)\n+          .name(\"broker_process_startup_metric\")\n+          .labelNames(PROCESS_NAME_LABEL, STEP_NAME_LABEL)\n+          .create()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0bc83db78d47e50239128f6a877618852b1938d"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 191, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}