{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMDM4MzU3", "number": 4303, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwODoyNzoyOVrODxiVhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMTozNjozNVrODxmqsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMjY5MzgyOnYy", "diffSide": "RIGHT", "path": "util/src/main/java/io/zeebe/util/sched/ActorTask.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwODoyNzoyOVrOGFDsfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwOTo0OToxNVrOGFG40A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk1NjYwNQ==", "bodyText": "I'm not sure about this line. The comment says that we should copy the subscripts to avoid concurrent access. With this change, the subscriptions are not copied any more. Do you need to care about it?", "url": "https://github.com/camunda-cloud/zeebe/pull/4303#discussion_r407956605", "createdAt": "2020-04-14T08:27:29Z", "author": {"login": "saig0"}, "path": "util/src/main/java/io/zeebe/util/sched/ActorTask.java", "diffHunk": "@@ -331,7 +329,7 @@ boolean tryWait() {\n     // take copy of subscriptions list: once we set the state to WAITING, the task could be woken up\n     // by another\n     // thread. That thread could modify the subscriptions array.\n-    final ActorSubscription[] subscriptionsCopy = this.subscriptions;\n+    final List<ActorSubscription> subscriptionsRef = this.subscriptions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "484826a55c07922f1a88da91db8fd98989511922"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk1ODA2OA==", "bodyText": "Actually this was never a copy. This just stores the reference and this is the same as before, except that the list is not always replaced. But I think it might make sense to just use a thread safe data structure here", "url": "https://github.com/camunda-cloud/zeebe/pull/4303#discussion_r407958068", "createdAt": "2020-04-14T08:29:40Z", "author": {"login": "Zelldon"}, "path": "util/src/main/java/io/zeebe/util/sched/ActorTask.java", "diffHunk": "@@ -331,7 +329,7 @@ boolean tryWait() {\n     // take copy of subscriptions list: once we set the state to WAITING, the task could be woken up\n     // by another\n     // thread. That thread could modify the subscriptions array.\n-    final ActorSubscription[] subscriptionsCopy = this.subscriptions;\n+    final List<ActorSubscription> subscriptionsRef = this.subscriptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk1NjYwNQ=="}, "originalCommit": {"oid": "484826a55c07922f1a88da91db8fd98989511922"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAwODkxMg==", "bodyText": "As discussed I copy the elements on the tryWait. Furthermore I added an check for the thread on add and removing subscriptions", "url": "https://github.com/camunda-cloud/zeebe/pull/4303#discussion_r408008912", "createdAt": "2020-04-14T09:49:15Z", "author": {"login": "Zelldon"}, "path": "util/src/main/java/io/zeebe/util/sched/ActorTask.java", "diffHunk": "@@ -331,7 +329,7 @@ boolean tryWait() {\n     // take copy of subscriptions list: once we set the state to WAITING, the task could be woken up\n     // by another\n     // thread. That thread could modify the subscriptions array.\n-    final ActorSubscription[] subscriptionsCopy = this.subscriptions;\n+    final List<ActorSubscription> subscriptionsRef = this.subscriptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk1NjYwNQ=="}, "originalCommit": {"oid": "484826a55c07922f1a88da91db8fd98989511922"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzQwMzM2OnYy", "diffSide": "RIGHT", "path": "util/src/main/java/io/zeebe/util/sched/ActorTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMTozNjozNVrOGFKgFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMTozNjozNVrOGFKgFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2ODExOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ensureCalledFromActorThread(\"removeSubscription(ActorSubscription)\");\n          \n          \n            \n                ensureCalledFromActorThread(\"addSubscription(ActorSubscription)\");", "url": "https://github.com/camunda-cloud/zeebe/pull/4303#discussion_r408068119", "createdAt": "2020-04-14T11:36:35Z", "author": {"login": "saig0"}, "path": "util/src/main/java/io/zeebe/util/sched/ActorTask.java", "diffHunk": "@@ -489,10 +489,12 @@ public ActorLifecyclePhase getLifecyclePhase() {\n   }\n \n   public void addSubscription(final ActorSubscription subscription) {\n+    ensureCalledFromActorThread(\"removeSubscription(ActorSubscription)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "728ff43bc2bc95f83e8fad5b2acd578490f3bd7d"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4875, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}