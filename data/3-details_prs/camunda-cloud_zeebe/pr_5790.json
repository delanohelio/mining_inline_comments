{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MzUwODAz", "number": 5790, "title": "Clients show partition health", "bodyText": "Description\nI've added support for partition health to the Java client and the Go client.\nRelated issues\n\ncloses #5483\ncloses #4853\nDefinition of Done\nNot all items need to be done depending on the issue and the pull request.\nCode changes:\n\n The changes are backwards compatibility with previous versions\n If it fixes a bug then PRs are created to backport the fix to the last two minor versions\n\nTesting:\n\n There are unit/integration tests that verify all acceptance criterias of the issue\n New tests are written to ensure backwards compatibility with further versions\n The behavior is tested manually\n The impact of the changes is verified by a benchmark\n\nDocumentation:\n\n The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\n New content is added to the release announcement", "createdAt": "2020-11-08T18:37:05Z", "url": "https://github.com/camunda-cloud/zeebe/pull/5790", "merged": true, "mergeCommit": {"oid": "425b2615be79cddbcb8faf439c5fc97a128687ff"}, "closed": true, "closedAt": "2020-11-10T19:42:57Z", "author": {"login": "aivinog1"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdaygrogFqTUyNjA3OTE1NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbNNycgBqjM5ODAyMjU2NDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDc5MTU1", "url": "https://github.com/camunda-cloud/zeebe/pull/5790#pullrequestreview-526079155", "createdAt": "2020-11-09T09:44:49Z", "commit": {"oid": "d9605d181d6bdb7194ed3c93a5739af839163b0e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTo0NDo0OVrOHvmbGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTo0NDo0OVrOHvmbGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY3NDY0OQ==", "bodyText": "Was this generated or did you change this? I'm unsure whether this should be part of this change. @MiguelPires WDYT?", "url": "https://github.com/camunda-cloud/zeebe/pull/5790#discussion_r519674649", "createdAt": "2020-11-09T09:44:49Z", "author": {"login": "korthout"}, "path": "clients/go/pkg/pb/gateway.pb.go", "diffHunk": "@@ -1,6 +1,6 @@\n // Code generated by protoc-gen-go. DO NOT EDIT.\n // versions:\n-// \tprotoc-gen-go v1.25.0-devel\n+// \tprotoc-gen-go v1.25.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9605d181d6bdb7194ed3c93a5739af839163b0e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MzQyNjY5", "url": "https://github.com/camunda-cloud/zeebe/pull/5790#pullrequestreview-526342669", "createdAt": "2020-11-09T15:01:21Z", "commit": {"oid": "174161bd0ae95dd89de4c7471c2980e352f434f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNTowMToyMVrOHvy4cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNTowMToyMVrOHvy4cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg3ODc3MA==", "bodyText": "@deepthidevaki how do you feel about moving this failure listener to the constructor? I think it makes sense, but perhaps I'm overlooking an actor scheduler issue.", "url": "https://github.com/camunda-cloud/zeebe/pull/5790#discussion_r519878770", "createdAt": "2020-11-09T15:01:21Z", "author": {"login": "korthout"}, "path": "broker/src/main/java/io/zeebe/broker/Broker.java", "diffHunk": "@@ -407,10 +407,14 @@ private AutoCloseable partitionsStep(\n                     buildExporterRepository(brokerCfg));\n             final PartitionTransitionImpl transitionBehavior =\n                 new PartitionTransitionImpl(context, LEADER_STEPS, FOLLOWER_STEPS);\n-            final ZeebePartition zeebePartition = new ZeebePartition(context, transitionBehavior);\n+            final ZeebePartition zeebePartition =\n+                new ZeebePartition(\n+                    context,\n+                    transitionBehavior,\n+                    List.of(\n+                        new PartitionHealthBroadcaster(\n+                            partitionId, topologyManager::onHealthChanged)));\n             scheduleActor(zeebePartition);\n-            zeebePartition.addFailureListener(\n-                new PartitionHealthBroadcaster(partitionId, topologyManager::onHealthChanged));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "174161bd0ae95dd89de4c7471c2980e352f434f9"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MzQzMzM5", "url": "https://github.com/camunda-cloud/zeebe/pull/5790#pullrequestreview-526343339", "createdAt": "2020-11-09T15:02:00Z", "commit": {"oid": "174161bd0ae95dd89de4c7471c2980e352f434f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNTowMjowMVrOHvy6Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNTowMjowMVrOHvy6Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg3OTIxOQ==", "bodyText": "\ud83d\ude06 Good find!", "url": "https://github.com/camunda-cloud/zeebe/pull/5790#discussion_r519879219", "createdAt": "2020-11-09T15:02:01Z", "author": {"login": "korthout"}, "path": "broker/src/main/java/io/zeebe/broker/clustering/topology/TopologyManagerImpl.java", "diffHunk": "@@ -257,9 +257,9 @@ public void onHealthChanged(final int partitionId, final HealthStatus status) {\n     actor.run(\n         () -> {\n           if (status == HealthStatus.HEALTHY) {\n-            localBroker.setPartitionUnhealthy(partitionId);\n-          } else if (status == HealthStatus.UNHEALTHY) {\n             localBroker.setPartitionHealthy(partitionId);\n+          } else if (status == HealthStatus.UNHEALTHY) {\n+            localBroker.setPartitionUnhealthy(partitionId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "174161bd0ae95dd89de4c7471c2980e352f434f9"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTY4Njk0", "url": "https://github.com/camunda-cloud/zeebe/pull/5790#pullrequestreview-527168694", "createdAt": "2020-11-10T12:50:15Z", "commit": {"oid": "7e560372bcbeab0e21ab61b5ee39573a74e537a4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjo1MDoxNVrOHwbDnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjo1NDoxNVrOHwbNDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUzNjk5MQ==", "bodyText": "Please use ZeebePartition.getHealthStatus() to determine the current health.\nthis.zeebePartitionHealth only contains the health that the ZeebePartition can control (e.g. installation failure), while there are also other components that may fail, like the log stream and the stream processor. Each of these is a different component, and they are all registered in the CriticalComponentsHealthMonitor, which is used to determine the health status when you just call ZeebePartition.getHealthStatus().", "url": "https://github.com/camunda-cloud/zeebe/pull/5790#discussion_r520536991", "createdAt": "2020-11-10T12:50:15Z", "author": {"login": "korthout"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -294,7 +291,15 @@ public HealthStatus getHealthStatus() {\n \n   @Override\n   public void addFailureListener(final FailureListener failureListener) {\n-    actor.run(() -> this.failureListeners.add(failureListener));\n+    actor.run(\n+        () -> {\n+          this.failureListeners.add(failureListener);\n+          if (this.zeebePartitionHealth.getHealthStatus() == HealthStatus.HEALTHY) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e560372bcbeab0e21ab61b5ee39573a74e537a4"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUzNzk2Mg==", "bodyText": "The test doesn't make it clear that the partition's health is really Unhealthy. Can you make that more explicit in the test?", "url": "https://github.com/camunda-cloud/zeebe/pull/5790#discussion_r520537962", "createdAt": "2020-11-10T12:51:53Z", "author": {"login": "korthout"}, "path": "broker/src/test/java/io/zeebe/broker/system/partitions/ZeebePartitionTest.java", "diffHunk": "@@ -61,6 +63,41 @@ public void shouldInstallLeaderPartition() {\n     verify(transition).toLeader();\n   }\n \n+  @Test\n+  public void shouldCallOnFailureOnAddFailureListenerAndUnhealthy() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e560372bcbeab0e21ab61b5ee39573a74e537a4"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUzOTQwNA==", "bodyText": "You can actually just use the healthMonitor (see L45), and stub the healthstatus. Something like:\nwhen(healthMonitor.getHealthStatus())\n  .thenReturn(HealthStatus.HEALTHY)", "url": "https://github.com/camunda-cloud/zeebe/pull/5790#discussion_r520539404", "createdAt": "2020-11-10T12:54:15Z", "author": {"login": "korthout"}, "path": "broker/src/test/java/io/zeebe/broker/system/partitions/ZeebePartitionTest.java", "diffHunk": "@@ -61,6 +63,41 @@ public void shouldInstallLeaderPartition() {\n     verify(transition).toLeader();\n   }\n \n+  @Test\n+  public void shouldCallOnFailureOnAddFailureListenerAndUnhealthy() {\n+    // given\n+    final ZeebePartition partition = new ZeebePartition(ctx, transition);\n+    schedulerRule.submitActor(partition);\n+    final FailureListener failureListener = mock(FailureListener.class);\n+    doNothing().when(failureListener).onFailure();\n+\n+    // when\n+    partition.addFailureListener(failureListener);\n+    schedulerRule.workUntilDone();\n+\n+    // then\n+    verify(failureListener, only()).onFailure();\n+  }\n+\n+  @Test\n+  public void shouldCallOnRecoveredOnAddFailureListenerAndHealthy() {\n+    // given\n+    final ZeebePartition partition = new ZeebePartition(ctx, transition);\n+    schedulerRule.submitActor(partition);\n+    final FailureListener failureListener = mock(FailureListener.class);\n+    doNothing().when(failureListener).onRecovered();\n+    // make partition healthy\n+    partition.onNewRole(Role.LEADER, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e560372bcbeab0e21ab61b5ee39573a74e537a4"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MjQ2MDk3", "url": "https://github.com/camunda-cloud/zeebe/pull/5790#pullrequestreview-527246097", "createdAt": "2020-11-10T14:17:51Z", "commit": {"oid": "84fdd7556ca5ccdb02445987d13165ee4a7b41b9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64679e9a0fd7f76811021be55ac667a517cbe56d", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/64679e9a0fd7f76811021be55ac667a517cbe56d", "committedDate": "2020-11-10T14:20:43Z", "message": "feat(clients/go): a Go and Java client shows a partition health"}, "afterCommit": {"oid": "f0ce836ad201c87006647fea051672d66e149e50", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/f0ce836ad201c87006647fea051672d66e149e50", "committedDate": "2020-11-10T15:39:22Z", "message": "feat(clients/go): a Go and Java client shows a partition health"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d86af8e14f24a4653bfd48dc23b257e72abf2a8", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/2d86af8e14f24a4653bfd48dc23b257e72abf2a8", "committedDate": "2020-11-10T17:56:50Z", "message": "feat(clients/go): a Go and Java client shows a partition health"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0ce836ad201c87006647fea051672d66e149e50", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/f0ce836ad201c87006647fea051672d66e149e50", "committedDate": "2020-11-10T15:39:22Z", "message": "feat(clients/go): a Go and Java client shows a partition health"}, "afterCommit": {"oid": "2d86af8e14f24a4653bfd48dc23b257e72abf2a8", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/2d86af8e14f24a4653bfd48dc23b257e72abf2a8", "committedDate": "2020-11-10T17:56:50Z", "message": "feat(clients/go): a Go and Java client shows a partition health"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2363, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}