{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzODMxOTg1", "number": 5742, "title": "feat(clients/java): add capability to change ZeebeObjectMapper", "bodyText": "Description\nI've added methods in the Java API that can change the usage of io.zeebe.client.impl.ZeebeObjectMapper.\nRelated issues\n\ncloses #5578\nDefinition of Done\nNot all items need to be done depending on the issue and the pull request.\nCode changes:\n\n The changes are backwards compatibility with previous versions\n If it fixes a bug then PRs are created to backport the fix to the last two minor versions\n\nTesting:\n\n There are unit/integration tests that verify all acceptance criterias of the issue\n New tests are written to ensure backwards compatibility with further versions\n The behavior is tested manually\n The impact of the changes is verified by a benchmark\n\nDocumentation:\n\n The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\n New content is added to the release announcement", "createdAt": "2020-11-02T06:44:01Z", "url": "https://github.com/camunda-cloud/zeebe/pull/5742", "merged": true, "mergeCommit": {"oid": "04222cbfdd5a1bbc936381b99984ea55805f2196"}, "closed": true, "closedAt": "2021-01-29T11:24:25Z", "author": {"login": "aivinog1"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYmXJ1AFqTUyMTczNzc1Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABd03M7mAFqTU3OTE1MDM4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzM3NzUy", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#pullrequestreview-521737752", "createdAt": "2020-11-02T15:33:06Z", "commit": {"oid": "c4e8c159d09576b07847e7213708af1f60e0f3a6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8663b8dea6e29d1abf913e7649a3bb6de68ef75a", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/8663b8dea6e29d1abf913e7649a3bb6de68ef75a", "committedDate": "2020-11-03T07:51:30Z", "message": "feat(clients/java): create ZeebeObjectMapperWrapper and use it instead of ZeebeObjectMapper. Deprecate ZeebeObjectMapper."}, "afterCommit": {"oid": "7536e8f493a15c38ad69e894ecb0e7c00a457440", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/7536e8f493a15c38ad69e894ecb0e7c00a457440", "committedDate": "2020-11-03T07:52:35Z", "message": "feat(clients/java): create ZeebeObjectMapperWrapper and use it instead of ZeebeObjectMapper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMjkwNTY1", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#pullrequestreview-523290565", "createdAt": "2020-11-04T11:53:00Z", "commit": {"oid": "7536e8f493a15c38ad69e894ecb0e7c00a457440"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96c7db6ccd5d701e9b1e106f762131b24238cebb", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/96c7db6ccd5d701e9b1e106f762131b24238cebb", "committedDate": "2020-11-05T12:58:54Z", "message": "feat(clients/java): create JsonMapper and make ZeebeObjectMapper implement in. Using this interface instead its implementation"}, "afterCommit": {"oid": "8886278e66482c32bfa6a3e36bd0b2ca2b4eb0ed", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/8886278e66482c32bfa6a3e36bd0b2ca2b4eb0ed", "committedDate": "2020-11-05T12:59:53Z", "message": "feat(clients/java): create JsonMapper and make ZeebeObjectMapper implement in"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MjM2ODAw", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#pullrequestreview-524236800", "createdAt": "2020-11-05T13:02:25Z", "commit": {"oid": "8886278e66482c32bfa6a3e36bd0b2ca2b4eb0ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMzowMjoyNVrOHuCP0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMzowMjoyNVrOHuCP0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAzMzM2Mw==", "bodyText": "@npepinpe Hi! I don't sure about this. I can't figure out how to change this in a truly backward compatible way :(", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#discussion_r518033363", "createdAt": "2020-11-05T13:02:25Z", "author": {"login": "aivinog1"}, "path": "clients/java/ignored-changes.xml", "diffHunk": "@@ -33,4 +33,99 @@\n     <method>java.lang.String getGatewayAddress()</method>\n     <differenceType>7012</differenceType>\n   </difference>\n+  <difference>\n+    <className>io/zeebe/client/ZeebeClientBuilder</className>\n+    <method>io.zeebe.client.ZeebeClientBuilder withJsonMapper(io.zeebe.client.api.JsonMapper)</method>\n+    <differenceType>7012</differenceType>\n+  </difference>\n+  <difference>\n+    <className>io/zeebe/client/ZeebeClientConfiguration</className>\n+    <method>io.zeebe.client.api.JsonMapper getJsonMapper()</method>\n+    <differenceType>7012</differenceType>\n+  </difference>\n+  <difference>\n+    <className>io/zeebe/client/impl/command/CommandWithVariables</className>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8886278e66482c32bfa6a3e36bd0b2ca2b4eb0ed"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0NzczNjEy", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#pullrequestreview-564773612", "createdAt": "2021-01-09T10:22:20Z", "commit": {"oid": "8886278e66482c32bfa6a3e36bd0b2ca2b4eb0ed"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOVQxMDoyMjoyMFrOIQrDZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOVQxMDo1MDoyNFrOIQr_4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDM1MzUwOA==", "bodyText": "As this is a public interface which users are meant to implement, it's important to fully document it.", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#discussion_r554353508", "createdAt": "2021-01-09T10:22:20Z", "author": {"login": "npepinpe"}, "path": "clients/java/src/main/java/io/zeebe/client/api/JsonMapper.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright \u00a9 2017 camunda services GmbH (info@camunda.com)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.zeebe.client.api;\n+\n+import java.io.InputStream;\n+import java.util.Map;\n+\n+public interface JsonMapper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8886278e66482c32bfa6a3e36bd0b2ca2b4eb0ed"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDM2ODk5Mw==", "bodyText": "Is this used?", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#discussion_r554368993", "createdAt": "2021-01-09T10:50:24Z", "author": {"login": "npepinpe"}, "path": "clients/java/src/main/java/io/zeebe/client/impl/ZeebeClientBuilderImpl.java", "diffHunk": "@@ -59,6 +61,8 @@\n   private String certificatePath;\n   private CredentialsProvider credentialsProvider;\n   private Duration keepAlive = Duration.ofSeconds(45);\n+  private ObjectMapper zeebeObjectMapper = new ObjectMapper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8886278e66482c32bfa6a3e36bd0b2ca2b4eb0ed"}, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8886278e66482c32bfa6a3e36bd0b2ca2b4eb0ed", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/8886278e66482c32bfa6a3e36bd0b2ca2b4eb0ed", "committedDate": "2020-11-05T12:59:53Z", "message": "feat(clients/java): create JsonMapper and make ZeebeObjectMapper implement in"}, "afterCommit": {"oid": "2abd02ebe0b7c81f39fd29caab0986390fff13fa", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/2abd02ebe0b7c81f39fd29caab0986390fff13fa", "committedDate": "2021-01-11T09:49:51Z", "message": "feat(clients/java): code review: add more JavaDocs and remove unused property"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1NDc4NDQ3", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#pullrequestreview-565478447", "createdAt": "2021-01-11T15:43:35Z", "commit": {"oid": "2abd02ebe0b7c81f39fd29caab0986390fff13fa"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNTo0MzozNlrOIRa6WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNzowNjowOVrOITuT8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEzNzYyNQ==", "bodyText": "As a user, this doesn't tell me much about the interface. What objects are transformed to JSON? When are they transformed? Why would I want to implement this (ideally with examples - everybody loves examples \ud83d\ude42)? What is the default implementation (I know you link to ZeebeObjectMapper, but it's not apparent to a user why)?", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#discussion_r555137625", "createdAt": "2021-01-11T15:43:36Z", "author": {"login": "npepinpe"}, "path": "clients/java/src/main/java/io/zeebe/client/api/JsonMapper.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright \u00a9 2017 camunda services GmbH (info@camunda.com)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.zeebe.client.api;\n+\n+import java.io.InputStream;\n+import java.util.Map;\n+\n+/**\n+ * This interface is using to customize the way how objects will be transformed in JSON format.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2abd02ebe0b7c81f39fd29caab0986390fff13fa"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE0MDA2Ng==", "bodyText": "Another point: our ZeebeObjectMapper implementation always throws InternalClientException on error. We could also document the interface methods (i.e. @throws InternalClientException on serialization/deserialization error), even without adding the checked exception. That way implementations are more easily swappable.", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#discussion_r555140066", "createdAt": "2021-01-11T15:46:51Z", "author": {"login": "npepinpe"}, "path": "clients/java/src/main/java/io/zeebe/client/api/JsonMapper.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright \u00a9 2017 camunda services GmbH (info@camunda.com)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.zeebe.client.api;\n+\n+import java.io.InputStream;\n+import java.util.Map;\n+\n+/**\n+ * This interface is using to customize the way how objects will be transformed in JSON format.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEzNzYyNQ=="}, "originalCommit": {"oid": "2abd02ebe0b7c81f39fd29caab0986390fff13fa"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU0OTAzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Transform a JSON string to the typed object.\n          \n          \n            \n               * Deserializes a JSON string into an equivalent POJO of type {@code T}.\n          \n      \n    \n    \n  \n\nI think this is more indicative of the intent, i.e. deserialization.", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#discussion_r557549034", "createdAt": "2021-01-14T17:00:49Z", "author": {"login": "npepinpe"}, "path": "clients/java/src/main/java/io/zeebe/client/api/JsonMapper.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright \u00a9 2017 camunda services GmbH (info@camunda.com)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.zeebe.client.api;\n+\n+import java.io.InputStream;\n+import java.util.Map;\n+\n+/**\n+ * This interface is using to customize the way how objects will be transformed in JSON format.\n+ *\n+ * @see io.zeebe.client.impl.ZeebeObjectMapper\n+ */\n+public interface JsonMapper {\n+\n+  /**\n+   * Transform a JSON string to the typed object.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2abd02ebe0b7c81f39fd29caab0986390fff13fa"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU0OTEyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param typeClass a class of the type to serialize\n          \n          \n            \n               * @param typeClass the Java type to deserialize into", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#discussion_r557549129", "createdAt": "2021-01-14T17:00:57Z", "author": {"login": "npepinpe"}, "path": "clients/java/src/main/java/io/zeebe/client/api/JsonMapper.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright \u00a9 2017 camunda services GmbH (info@camunda.com)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.zeebe.client.api;\n+\n+import java.io.InputStream;\n+import java.util.Map;\n+\n+/**\n+ * This interface is using to customize the way how objects will be transformed in JSON format.\n+ *\n+ * @see io.zeebe.client.impl.ZeebeObjectMapper\n+ */\n+public interface JsonMapper {\n+\n+  /**\n+   * Transform a JSON string to the typed object.\n+   *\n+   * @param json a JSON string\n+   * @param typeClass a class of the type to serialize", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2abd02ebe0b7c81f39fd29caab0986390fff13fa"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU1MjI0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param json a JSON string\n          \n          \n            \n               * @param json the JSON string to deserialize", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#discussion_r557552244", "createdAt": "2021-01-14T17:05:36Z", "author": {"login": "npepinpe"}, "path": "clients/java/src/main/java/io/zeebe/client/api/JsonMapper.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright \u00a9 2017 camunda services GmbH (info@camunda.com)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.zeebe.client.api;\n+\n+import java.io.InputStream;\n+import java.util.Map;\n+\n+/**\n+ * This interface is using to customize the way how objects will be transformed in JSON format.\n+ *\n+ * @see io.zeebe.client.impl.ZeebeObjectMapper\n+ */\n+public interface JsonMapper {\n+\n+  /**\n+   * Transform a JSON string to the typed object.\n+   *\n+   * @param json a JSON string", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2abd02ebe0b7c81f39fd29caab0986390fff13fa"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU1MjM4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param <T> a type of the returned object\n          \n          \n            \n               * @param <T> the type of the returned object", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#discussion_r557552388", "createdAt": "2021-01-14T17:05:50Z", "author": {"login": "npepinpe"}, "path": "clients/java/src/main/java/io/zeebe/client/api/JsonMapper.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright \u00a9 2017 camunda services GmbH (info@camunda.com)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.zeebe.client.api;\n+\n+import java.io.InputStream;\n+import java.util.Map;\n+\n+/**\n+ * This interface is using to customize the way how objects will be transformed in JSON format.\n+ *\n+ * @see io.zeebe.client.impl.ZeebeObjectMapper\n+ */\n+public interface JsonMapper {\n+\n+  /**\n+   * Transform a JSON string to the typed object.\n+   *\n+   * @param json a JSON string\n+   * @param typeClass a class of the type to serialize\n+   * @param <T> a type of the returned object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2abd02ebe0b7c81f39fd29caab0986390fff13fa"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU1MjYyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @return a typed object from a JSON string\n          \n          \n            \n               * @return the POJO deserialized from the given JSON string", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#discussion_r557552625", "createdAt": "2021-01-14T17:06:09Z", "author": {"login": "npepinpe"}, "path": "clients/java/src/main/java/io/zeebe/client/api/JsonMapper.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright \u00a9 2017 camunda services GmbH (info@camunda.com)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.zeebe.client.api;\n+\n+import java.io.InputStream;\n+import java.util.Map;\n+\n+/**\n+ * This interface is using to customize the way how objects will be transformed in JSON format.\n+ *\n+ * @see io.zeebe.client.impl.ZeebeObjectMapper\n+ */\n+public interface JsonMapper {\n+\n+  /**\n+   * Transform a JSON string to the typed object.\n+   *\n+   * @param json a JSON string\n+   * @param typeClass a class of the type to serialize\n+   * @param <T> a type of the returned object\n+   * @return a typed object from a JSON string", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2abd02ebe0b7c81f39fd29caab0986390fff13fa"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2abd02ebe0b7c81f39fd29caab0986390fff13fa", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/2abd02ebe0b7c81f39fd29caab0986390fff13fa", "committedDate": "2021-01-11T09:49:51Z", "message": "feat(clients/java): code review: add more JavaDocs and remove unused property"}, "afterCommit": {"oid": "03b46323704fdd6829389d5ae24ee81e775be4d3", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/03b46323704fdd6829389d5ae24ee81e775be4d3", "committedDate": "2021-01-28T08:14:19Z", "message": "feat(clients/java): code review: improve JavaDocs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc4MzI4NjU3", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#pullrequestreview-578328657", "createdAt": "2021-01-28T13:26:23Z", "commit": {"oid": "03b46323704fdd6829389d5ae24ee81e775be4d3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d588fcec17611fa9890625c86781291997f925c", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/3d588fcec17611fa9890625c86781291997f925c", "committedDate": "2021-01-29T10:13:35Z", "message": "feat(clients/java): add capability to modify JSON serialization/deserialization"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32c0aa6195ce8970b9889f3249f81da57a9c2d7e", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/32c0aa6195ce8970b9889f3249f81da57a9c2d7e", "committedDate": "2021-01-28T13:57:14Z", "message": "feat(clients/java): add new methods to the ignored-changes.xml"}, "afterCommit": {"oid": "3d588fcec17611fa9890625c86781291997f925c", "author": {"user": {"login": "aivinog1", "name": "Alexey Vinogradov"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/3d588fcec17611fa9890625c86781291997f925c", "committedDate": "2021-01-29T10:13:35Z", "message": "feat(clients/java): add capability to modify JSON serialization/deserialization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5MTUwMzg5", "url": "https://github.com/camunda-cloud/zeebe/pull/5742#pullrequestreview-579150389", "createdAt": "2021-01-29T11:00:12Z", "commit": {"oid": "3d588fcec17611fa9890625c86781291997f925c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2335, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}