{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NDMyNTkz", "number": 5445, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToxNjo1NVrOEo-7dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToyMjoyOFrOEo_B-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDA5NTI3OnYy", "diffSide": "RIGHT", "path": "broker/src/test/java/io/zeebe/broker/engine/RecordVersionTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToxNjo1NlrOHaYu8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToxNjo1NlrOHaYu8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzMDI1Nw==", "bodyText": "I wrote this test in the broker because some records are written from broker code (e.g. deployments, user commands, message subscription records, etc.).", "url": "https://github.com/camunda-cloud/zeebe/pull/5445#discussion_r497430257", "createdAt": "2020-09-30T11:16:56Z", "author": {"login": "saig0"}, "path": "broker/src/test/java/io/zeebe/broker/engine/RecordVersionTest.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.engine;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import io.zeebe.broker.test.EmbeddedBrokerRule;\n+import io.zeebe.model.bpmn.Bpmn;\n+import io.zeebe.model.bpmn.BpmnModelInstance;\n+import io.zeebe.protocol.record.Record;\n+import io.zeebe.protocol.record.ValueType;\n+import io.zeebe.protocol.record.intent.DeploymentIntent;\n+import io.zeebe.protocol.record.intent.WorkflowInstanceCreationIntent;\n+import io.zeebe.test.broker.protocol.commandapi.CommandApiRule;\n+import io.zeebe.test.util.BrokerClassRuleHelper;\n+import io.zeebe.test.util.record.RecordingExporter;\n+import io.zeebe.util.VersionUtil;\n+import java.io.ByteArrayOutputStream;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.ClassRule;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+\n+public final class RecordVersionTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb98f5040b45dd8c1032d8dd639afaa6c16c56af"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDA5ODI2OnYy", "diffSide": "LEFT", "path": "engine/src/main/java/io/zeebe/engine/processing/streamprocessor/writers/TypedCommandWriterImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToxNzo1N1rOHaYw2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToxNzo1N1rOHaYw2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzMDc0Ng==", "bodyText": "The protocol version is always set then calling metadata.reset().", "url": "https://github.com/camunda-cloud/zeebe/pull/5445#discussion_r497430746", "createdAt": "2020-09-30T11:17:57Z", "author": {"login": "saig0"}, "path": "engine/src/main/java/io/zeebe/engine/processing/streamprocessor/writers/TypedCommandWriterImpl.java", "diffHunk": "@@ -31,7 +30,6 @@\n   protected long sourceRecordPosition = -1;\n \n   public TypedCommandWriterImpl(final LogStreamBatchWriter batchWriter) {\n-    metadata.protocolVersion(Protocol.PROTOCOL_VERSION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb98f5040b45dd8c1032d8dd639afaa6c16c56af"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDEwMzc3OnYy", "diffSide": "RIGHT", "path": "protocol-impl/src/main/java/io/zeebe/protocol/impl/record/RecordMetadata.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToxOTo1MVrOHaY0SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToxOTo1MVrOHaY0SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzMTYyNA==", "bodyText": "If it reads a record from a previous version then decoder.brokerVersion() returns null.", "url": "https://github.com/camunda-cloud/zeebe/pull/5445#discussion_r497431624", "createdAt": "2020-09-30T11:19:51Z", "author": {"login": "saig0"}, "path": "protocol-impl/src/main/java/io/zeebe/protocol/impl/record/RecordMetadata.java", "diffHunk": "@@ -64,6 +73,16 @@ public void wrap(final DirectBuffer buffer, int offset, final int length) {\n     intent = Intent.fromProtocolValue(valueType, decoder.intent());\n     rejectionType = decoder.rejectionType();\n \n+    brokerVersion =\n+        Optional.ofNullable(decoder.brokerVersion())\n+            .map(\n+                versionDecoder ->\n+                    new VersionInfo(\n+                        versionDecoder.majorVersion(),\n+                        versionDecoder.minorVersion(),\n+                        versionDecoder.patchVersion()))\n+            .orElse(VersionInfo.UNKNOWN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb98f5040b45dd8c1032d8dd639afaa6c16c56af"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDEwODIyOnYy", "diffSide": "RIGHT", "path": "protocol-impl/src/main/java/io/zeebe/protocol/impl/record/RecordMetadata.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToyMToxMFrOHaY26A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToyMToxMFrOHaY26A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzMjI5Ng==", "bodyText": "By default, it set the current version. So, we don't need to set the version explicitly when using the log stream writer.", "url": "https://github.com/camunda-cloud/zeebe/pull/5445#discussion_r497432296", "createdAt": "2020-09-30T11:21:10Z", "author": {"login": "saig0"}, "path": "protocol-impl/src/main/java/io/zeebe/protocol/impl/record/RecordMetadata.java", "diffHunk": "@@ -202,6 +236,7 @@ public RecordMetadata reset() {\n     intent = null;\n     rejectionType = RejectionType.NULL_VAL;\n     rejectionReason.wrap(0, 0);\n+    brokerVersion = CURRENT_BROKER_VERSION;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb98f5040b45dd8c1032d8dd639afaa6c16c56af"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDExMTk0OnYy", "diffSide": "RIGHT", "path": "protocol/src/main/resources/protocol.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToyMjoyOFrOHaY5PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToyMjoyOFrOHaY5PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzMjg5Mw==", "bodyText": "The main change of this PR. Adding a new field for the broker version. Following https://github.com/real-logic/simple-binary-encoding/wiki/Message-Versioning.", "url": "https://github.com/camunda-cloud/zeebe/pull/5445#discussion_r497432893", "createdAt": "2020-09-30T11:22:28Z", "author": {"login": "saig0"}, "path": "protocol/src/main/resources/protocol.xml", "diffHunk": "@@ -97,6 +104,7 @@\n     <field name=\"intent\" id=\"6\" type=\"uint8\"/>\n     <!-- populated when RecordType is COMMAND_REJECTION -->\n     <field name=\"rejectionType\" id=\"7\" type=\"RejectionType\"/>\n+    <field name=\"brokerVersion\" id=\"9\" type=\"Version\" sinceVersion=\"2\" presence=\"optional\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb98f5040b45dd8c1032d8dd639afaa6c16c56af"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 281, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}