{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MjU2NzA0", "number": 3896, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNDoxODo1MlrODjF92Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNDoxODo1MlrODjF92Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTI0NTA1OnYy", "diffSide": "RIGHT", "path": "exporters/elasticsearch-exporter/src/test/java/io/zeebe/exporter/ElasticsearchClientTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNDoxODo1MlrOFutO4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNDoxODo1MlrOFutO4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUxOTkwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static final long RECORD_KEY = 1234L;\n          \n          \n            \n              private static final long RECORD_KEY = 1234L;", "url": "https://github.com/camunda-cloud/zeebe/pull/3896#discussion_r384519905", "createdAt": "2020-02-26T14:18:52Z", "author": {"login": "npepinpe"}, "path": "exporters/elasticsearch-exporter/src/test/java/io/zeebe/exporter/ElasticsearchClientTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.exporter;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import io.zeebe.protocol.record.Record;\n+import io.zeebe.protocol.record.ValueType;\n+import io.zeebe.protocol.record.value.VariableRecordValue;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.ArgumentMatchers;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ElasticsearchClientTest {\n+\n+  public static final long RECORD_KEY = 1234L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd10b133e40f9313fc89b983b1020140b9b39e68"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4987, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}