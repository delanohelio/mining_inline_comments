{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2ODY3NTY3", "number": 4925, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzo1ODowOVrOEM6EIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzo1ODowOVrOEM6EIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTY5Njk3OnYy", "diffSide": "RIGHT", "path": "atomix/cluster/src/main/java/io/atomix/raft/impl/RaftContext.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzo1ODowOVrOGvSaeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDozMjo1OFrOGvT8Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNzk0Ng==", "bodyText": "Now when I think about it more, it is not necessary to schedule a task for this here. setLastApplied is called from the same thread context. So we can immediately execute it and no need to schedule it as a separate task.", "url": "https://github.com/camunda-cloud/zeebe/pull/4925#discussion_r452237946", "createdAt": "2020-07-09T13:58:09Z", "author": {"login": "deepthidevaki"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/impl/RaftContext.java", "diffHunk": "@@ -371,7 +371,7 @@ public long setCommitIndex(final long commitIndex) {\n   public void setLastApplied(final long lastApplied, final long lastAppliedTerm) {\n     this.lastApplied = Math.max(this.lastApplied, lastApplied);\n     this.lastAppliedTerm = Math.max(this.lastAppliedTerm, lastAppliedTerm);\n-    if (state == State.ACTIVE) {\n+    if (state == State.ACTIVE && this.lastApplied >= firstCommitIndex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79d3a97bf6d968c269098212bd291f60dd6fc55e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI0MzUzNw==", "bodyText": "I can change it, if you want. My only caution is that this is a public method. And yes, currently it is only called from one place, but I wouldn't want to guarantee that for the future. Or maybe we can guarantee it, because it is such a narrow function.\nPlease advise whether I should change it or keep it as it is.", "url": "https://github.com/camunda-cloud/zeebe/pull/4925#discussion_r452243537", "createdAt": "2020-07-09T14:05:55Z", "author": {"login": "pihme"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/impl/RaftContext.java", "diffHunk": "@@ -371,7 +371,7 @@ public long setCommitIndex(final long commitIndex) {\n   public void setLastApplied(final long lastApplied, final long lastAppliedTerm) {\n     this.lastApplied = Math.max(this.lastApplied, lastApplied);\n     this.lastAppliedTerm = Math.max(this.lastAppliedTerm, lastAppliedTerm);\n-    if (state == State.ACTIVE) {\n+    if (state == State.ACTIVE && this.lastApplied >= firstCommitIndex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNzk0Ng=="}, "originalCommit": {"oid": "79d3a97bf6d968c269098212bd291f60dd6fc55e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI0NzU3Ng==", "bodyText": "That's a valid argument. Then to make it safe may be:\nif (threadContext.isCurrentContext()) {\n  // execute\n} else {\n// schedule\n}", "url": "https://github.com/camunda-cloud/zeebe/pull/4925#discussion_r452247576", "createdAt": "2020-07-09T14:11:40Z", "author": {"login": "deepthidevaki"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/impl/RaftContext.java", "diffHunk": "@@ -371,7 +371,7 @@ public long setCommitIndex(final long commitIndex) {\n   public void setLastApplied(final long lastApplied, final long lastAppliedTerm) {\n     this.lastApplied = Math.max(this.lastApplied, lastApplied);\n     this.lastAppliedTerm = Math.max(this.lastAppliedTerm, lastAppliedTerm);\n-    if (state == State.ACTIVE) {\n+    if (state == State.ACTIVE && this.lastApplied >= firstCommitIndex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNzk0Ng=="}, "originalCommit": {"oid": "79d3a97bf6d968c269098212bd291f60dd6fc55e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI0ODYwNA==", "bodyText": "I am ok with current way also.", "url": "https://github.com/camunda-cloud/zeebe/pull/4925#discussion_r452248604", "createdAt": "2020-07-09T14:13:06Z", "author": {"login": "deepthidevaki"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/impl/RaftContext.java", "diffHunk": "@@ -371,7 +371,7 @@ public long setCommitIndex(final long commitIndex) {\n   public void setLastApplied(final long lastApplied, final long lastAppliedTerm) {\n     this.lastApplied = Math.max(this.lastApplied, lastApplied);\n     this.lastAppliedTerm = Math.max(this.lastAppliedTerm, lastAppliedTerm);\n-    if (state == State.ACTIVE) {\n+    if (state == State.ACTIVE && this.lastApplied >= firstCommitIndex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNzk0Ng=="}, "originalCommit": {"oid": "79d3a97bf6d968c269098212bd291f60dd6fc55e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI2MzAxMQ==", "bodyText": "In that case, I would leave it as it is.\nIn the past I have been burned by code like\nif (threadContext.isCurrentContext()) {\n  // execute\n} else {\n// schedule\n}\n\nMostly, because it is hard to reason about code that sometimes gets executed synchronously and immediately, and sometimes gets executed asynchronously and at a deferred point in time.\nI do like the idea, though. Maybe we can guarantee which thread we are on in the future.", "url": "https://github.com/camunda-cloud/zeebe/pull/4925#discussion_r452263011", "createdAt": "2020-07-09T14:32:58Z", "author": {"login": "pihme"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/impl/RaftContext.java", "diffHunk": "@@ -371,7 +371,7 @@ public long setCommitIndex(final long commitIndex) {\n   public void setLastApplied(final long lastApplied, final long lastAppliedTerm) {\n     this.lastApplied = Math.max(this.lastApplied, lastApplied);\n     this.lastAppliedTerm = Math.max(this.lastAppliedTerm, lastAppliedTerm);\n-    if (state == State.ACTIVE) {\n+    if (state == State.ACTIVE && this.lastApplied >= firstCommitIndex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNzk0Ng=="}, "originalCommit": {"oid": "79d3a97bf6d968c269098212bd291f60dd6fc55e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 435, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}