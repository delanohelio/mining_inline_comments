{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNzMzNzQz", "number": 3638, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwODoyODoxOFrODXcdYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToxMjozNlrODXdE2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTEwMTE0OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwODoyODoxOFrOFcvjfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToyMjozMlrOFcwt_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY4MzU4MA==", "bodyText": "Would that make it so now we actually get the logs properly?", "url": "https://github.com/camunda-cloud/zeebe/pull/3638#discussion_r365683580", "createdAt": "2020-01-13T08:28:18Z", "author": {"login": "npepinpe"}, "path": "Jenkinsfile", "diffHunk": "@@ -74,6 +74,13 @@ pipeline {\n                     sh '.ci/scripts/distribution/test-go.sh'\n                 }\n             }\n+\n+            post {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1cf5a07098fb924621a9ac45465ca3216d23376"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcwMjY1Mw==", "bodyText": "What you mean by properly? This makes so the results of the go tests are posted as soon as they end instead of when all tests end. This makes it easier and faster to catch problems in the integration tests. Since before we weren't always building the zbctl binary, it happened frequently that it was outdated and some minor thing broke the integration tests. Now, not only we catch them more easily locally (although it's slower to run the IT tests) but if something fails on the CI we see it quicker as well. However, there is still a bug in the output that makes the '+' and '-' signs disappear from diffs, if that's what you meant", "url": "https://github.com/camunda-cloud/zeebe/pull/3638#discussion_r365702653", "createdAt": "2020-01-13T09:22:32Z", "author": {"login": "MiguelPires"}, "path": "Jenkinsfile", "diffHunk": "@@ -74,6 +74,13 @@ pipeline {\n                     sh '.ci/scripts/distribution/test-go.sh'\n                 }\n             }\n+\n+            post {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY4MzU4MA=="}, "originalCommit": {"oid": "f1cf5a07098fb924621a9ac45465ca3216d23376"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTE4MzU1OnYy", "diffSide": "RIGHT", "path": "clients/go/pkg/commands/activateJobs_command.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOTowNDo0MFrOFcwUHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOTo0MzozMFrOFcxRnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY5NjAyOQ==", "bodyText": "Just a small thing, wouldn't it be clearer to have a type here instead of a raw function signature for the retry predicate?", "url": "https://github.com/camunda-cloud/zeebe/pull/3638#discussion_r365696029", "createdAt": "2020-01-13T09:04:40Z", "author": {"login": "npepinpe"}, "path": "clients/go/pkg/commands/activateJobs_command.go", "diffHunk": "@@ -116,16 +107,14 @@ func (cmd *ActivateJobsCommand) Send() ([]entities.Job, error) {\n \treturn activatedJobs, nil\n }\n \n-func NewActivateJobsCommand(gateway pb.GatewayClient, requestTimeout time.Duration, retryPredicate func(context.Context, error) bool) ActivateJobsCommandStep1 {\n+func NewActivateJobsCommand(gateway pb.GatewayClient, retryPredicate func(context.Context, error) bool) ActivateJobsCommandStep1 {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1cf5a07098fb924621a9ac45465ca3216d23376"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxMTc3Mw==", "bodyText": "Yes! I think we discussed it when the retry logic was introduced but I'm not sure what the argument was. Maybe it was because like this it's clearer what you have to pass to it, rather than if it's just a type retryPredicate. But I agree it should be refactored, I can do it in this issue since you mention it", "url": "https://github.com/camunda-cloud/zeebe/pull/3638#discussion_r365711773", "createdAt": "2020-01-13T09:43:30Z", "author": {"login": "MiguelPires"}, "path": "clients/go/pkg/commands/activateJobs_command.go", "diffHunk": "@@ -116,16 +107,14 @@ func (cmd *ActivateJobsCommand) Send() ([]entities.Job, error) {\n \treturn activatedJobs, nil\n }\n \n-func NewActivateJobsCommand(gateway pb.GatewayClient, requestTimeout time.Duration, retryPredicate func(context.Context, error) bool) ActivateJobsCommandStep1 {\n+func NewActivateJobsCommand(gateway pb.GatewayClient, retryPredicate func(context.Context, error) bool) ActivateJobsCommandStep1 {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY5NjAyOQ=="}, "originalCommit": {"oid": "f1cf5a07098fb924621a9ac45465ca3216d23376"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTIwMjE2OnYy", "diffSide": "RIGHT", "path": "clients/go/pkg/commands/createInstance_command_test.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToxMjozNlrOFcwfMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOTo1MjozOVrOFcxh0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY5ODg2Ng==", "bodyText": "Is longPollMillis also coming from activateJobs_command_test.go? In this case, shouldn't we use utils.DefaultTestTimeout instead of 5*time.Second when creating the context here as well?", "url": "https://github.com/camunda-cloud/zeebe/pull/3638#discussion_r365698866", "createdAt": "2020-01-13T09:12:36Z", "author": {"login": "npepinpe"}, "path": "clients/go/pkg/commands/createInstance_command_test.go", "diffHunk": "@@ -372,7 +373,7 @@ func TestCreateWorkflowInstanceWithResultCommand(t *testing.T) {\n \t\tRequest: &pb.CreateWorkflowInstanceRequest{\n \t\t\tWorkflowKey: 123,\n \t\t},\n-\t\tRequestTimeout: utils.DefaultTestTimeoutInMs,\n+\t\tRequestTimeout: longPollMillis,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1cf5a07098fb924621a9ac45465ca3216d23376"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxNTkyMA==", "bodyText": "Yes, that's a mistake", "url": "https://github.com/camunda-cloud/zeebe/pull/3638#discussion_r365715920", "createdAt": "2020-01-13T09:52:39Z", "author": {"login": "MiguelPires"}, "path": "clients/go/pkg/commands/createInstance_command_test.go", "diffHunk": "@@ -372,7 +373,7 @@ func TestCreateWorkflowInstanceWithResultCommand(t *testing.T) {\n \t\tRequest: &pb.CreateWorkflowInstanceRequest{\n \t\t\tWorkflowKey: 123,\n \t\t},\n-\t\tRequestTimeout: utils.DefaultTestTimeoutInMs,\n+\t\tRequestTimeout: longPollMillis,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY5ODg2Ng=="}, "originalCommit": {"oid": "f1cf5a07098fb924621a9ac45465ca3216d23376"}, "originalPosition": 151}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 21, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}