{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MjY4NzU5", "number": 5758, "title": "Avoid deployment distribution on reprocessing", "bodyText": "Description\n\ndon't distribute the deployment always on reprocessing because it may be already reprocessed\ninstead, we wait until the reprocessing is done and distribute the pending deployments again (current behavior)\n\nRelated issues\ncloses #3124\nDefinition of Done\nNot all items need to be done depending on the issue and the pull request.\nCode changes:\n\n The changes are backwards compatibility with previous versions\n If it fixes a bug then PRs are created to backport the fix to the last two minor versions\n\nTesting:\n\n There are unit/integration tests that verify all acceptance criterias of the issue\n New tests are written to ensure backwards compatibility with further versions\n The behavior is tested manually\n The impact of the changes is verified by a benchmark\n\nDocumentation:\n\n The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\n New content is added to the release announcement", "createdAt": "2020-11-04T09:56:38Z", "url": "https://github.com/camunda-cloud/zeebe/pull/5758", "merged": true, "mergeCommit": {"oid": "d66a04cd950d683706738bc81c7353311287f55a"}, "closed": true, "closedAt": "2020-11-11T09:23:08Z", "author": {"login": "saig0"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZPVLZgFqTUyMzQ1MjA4Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbaCPPABqjM5ODI4MDEwNzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNDUyMDgz", "url": "https://github.com/camunda-cloud/zeebe/pull/5758#pullrequestreview-523452083", "createdAt": "2020-11-04T15:08:14Z", "commit": {"oid": "3006fdc97f8dc5d8908892a6365a34df5b0cadf5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTowODoxNFrOHtcXWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNToxNjo0NlrOHtcveQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQxMjY5OA==", "bodyText": "This is not really the reason right. The reason is that we will write concurrently/async a DISTRIBUTED on reprocessing which totally breaks the detection.", "url": "https://github.com/camunda-cloud/zeebe/pull/5758#discussion_r517412698", "createdAt": "2020-11-04T15:08:14Z", "author": {"login": "Zelldon"}, "path": "engine/src/main/java/io/zeebe/engine/processing/deployment/distribute/DeploymentDistributeProcessor.java", "diffHunk": "@@ -75,7 +75,13 @@ public void processRecord(\n     final DirectBuffer bufferView = new UnsafeBuffer();\n     bufferView.wrap(buffer, 0, deploymentEvent.getLength());\n \n-    distributeDeployment(key, position, bufferView, streamWriter);\n+    // don't distribute the deployment on reprocessing because it may be already distributed\n+    // instead, distribute the pending deployments after the reprocessing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3006fdc97f8dc5d8908892a6365a34df5b0cadf5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQxMjgxMQ==", "bodyText": "Maybe we add a link to the github issue", "url": "https://github.com/camunda-cloud/zeebe/pull/5758#discussion_r517412811", "createdAt": "2020-11-04T15:08:24Z", "author": {"login": "Zelldon"}, "path": "engine/src/main/java/io/zeebe/engine/processing/deployment/distribute/DeploymentDistributeProcessor.java", "diffHunk": "@@ -75,7 +75,13 @@ public void processRecord(\n     final DirectBuffer bufferView = new UnsafeBuffer();\n     bufferView.wrap(buffer, 0, deploymentEvent.getLength());\n \n-    distributeDeployment(key, position, bufferView, streamWriter);\n+    // don't distribute the deployment on reprocessing because it may be already distributed\n+    // instead, distribute the pending deployments after the reprocessing", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQxMjY5OA=="}, "originalCommit": {"oid": "3006fdc97f8dc5d8908892a6365a34df5b0cadf5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQxODg3Mw==", "bodyText": "Not sure whether this test makes still sense? But I thought maybe we can have a different test where we verify that we not call distribute on reprocessing. I have new logic where I can await reprocessing, which means we know whether before distribute was called. What do you think?", "url": "https://github.com/camunda-cloud/zeebe/pull/5758#discussion_r517418873", "createdAt": "2020-11-04T15:16:46Z", "author": {"login": "Zelldon"}, "path": "engine/src/test/java/io/zeebe/engine/processing/streamprocessor/ReprocessingIssueDetectionMultiplePartitionTest.java", "diffHunk": "@@ -83,8 +83,7 @@ public void setup() {\n   @Test\n   public void shouldIgnoreDeploymentDistribution() {\n     // given\n-    // force that a deployment DISTRIBUTED event is written on reprocessing which was not written on\n-    // the log stream before\n+    // the deployment can be distributed on reprocessing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3006fdc97f8dc5d8908892a6365a34df5b0cadf5"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3522eae525aef763d74b213a87260cbcef4496a7", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/3522eae525aef763d74b213a87260cbcef4496a7", "committedDate": "2020-11-05T05:08:32Z", "message": "chore(broker): adjust the comment"}, "afterCommit": {"oid": "9a31815d2695d882286d4662eb1377a1dfca83ec", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/9a31815d2695d882286d4662eb1377a1dfca83ec", "committedDate": "2020-11-10T13:42:24Z", "message": "chore(engine): adjust test case\n\n* verify that the deployment distributor is not invoked on reprocessing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MjIzMzc3", "url": "https://github.com/camunda-cloud/zeebe/pull/5758#pullrequestreview-527223377", "createdAt": "2020-11-10T13:54:59Z", "commit": {"oid": "9a31815d2695d882286d4662eb1377a1dfca83ec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzo1NDo1OVrOHwdnsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzo1NDo1OVrOHwdnsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU3ODk5Mg==", "bodyText": "We could reset the count after verification. What do you think?", "url": "https://github.com/camunda-cloud/zeebe/pull/5758#discussion_r520578992", "createdAt": "2020-11-10T13:54:59Z", "author": {"login": "Zelldon"}, "path": "engine/src/test/java/io/zeebe/engine/processing/deployment/DeploymentReprocessingTest.java", "diffHunk": "@@ -33,82 +30,57 @@\n import org.junit.Rule;\n import org.junit.Test;\n \n-public final class ReprocessingIssueDetectionMultiplePartitionTest {\n+public final class DeploymentReprocessingTest {\n \n-  private static final int PARTITION_COUNT = 2;\n+  private static final int PARTITION_COUNT = 1;\n+  private static final int DEPLOYMENT_DISTRIBUTION_ON_PROCESSING = 1;\n \n   @Rule\n   public final RecordingExporterTestWatcher recordingExporterTestWatcher =\n       new RecordingExporterTestWatcher();\n \n   private final DeploymentDistributorMock deploymentDistributorMock =\n-      new DeploymentDistributorMock();\n+      spy(new DeploymentDistributorMock());\n \n   @Rule\n   public final EngineRule engine =\n       EngineRule.multiplePartition(PARTITION_COUNT)\n           .withDeploymentDistributor(deploymentDistributorMock);\n \n-  private long workflowInstanceKey;\n-  private Record<JobRecordValue> jobCreated;\n-\n   @Before\n   public void setup() {\n-    // avoid that a deployment is distributed\n-    deploymentDistributorMock.pushDeploymentCallback = CompletableActorFuture::new;\n+    // complete the deployment distribution immediately to write the DISTRIBUTED event\n+    deploymentDistributorMock.pushDeploymentCallback = () -> CompletableActorFuture.completed(null);\n \n     engine\n         .deployment()\n-        .withXmlResource(\n-            Bpmn.createExecutableProcess(\"process\")\n-                .startEvent()\n-                .serviceTask(\"task\", t -> t.zeebeJobType(\"test\"))\n-                .done())\n+        .withXmlResource(Bpmn.createExecutableProcess(\"process\").startEvent().done())\n         .expectCreated()\n         .deploy();\n \n-    workflowInstanceKey = engine.workflowInstance().ofBpmnProcessId(\"process\").create();\n-    jobCreated = RecordingExporter.jobRecords(JobIntent.CREATED).getFirst();\n-\n-    assertThat(\n-            RecordingExporter.records()\n-                .limit(r -> r.getPosition() > jobCreated.getPosition())\n-                .withValueType(ValueType.DEPLOYMENT))\n-        .extracting(Record::getIntent)\n-        .doesNotContain(DeploymentIntent.DISTRIBUTED);\n+    RecordingExporter.deploymentRecords(DeploymentIntent.DISTRIBUTED).await();\n \n     engine.stop();\n+\n+    // the deployment is distributed once on processing\n+    verify(deploymentDistributorMock, times(DEPLOYMENT_DISTRIBUTION_ON_PROCESSING))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a31815d2695d882286d4662eb1377a1dfca83ec"}, "originalPosition": 90}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3OTY0NDk0", "url": "https://github.com/camunda-cloud/zeebe/pull/5758#pullrequestreview-527964494", "createdAt": "2020-11-11T08:37:20Z", "commit": {"oid": "1f24f78428f16da38849c1db068eeb59cc0e220e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bd56018b9666eadf9d0b16f3e0addc89261b157", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/2bd56018b9666eadf9d0b16f3e0addc89261b157", "committedDate": "2020-11-11T08:52:59Z", "message": "fix(broker): avoid deployment distribution on reprocessing\n\n* don't distribute the deployment on reprocessing because it may be already reprocessed\n* instead, we wait until the reprocessing is done and distribute the pending deployments again"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f24f78428f16da38849c1db068eeb59cc0e220e", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/1f24f78428f16da38849c1db068eeb59cc0e220e", "committedDate": "2020-11-11T04:48:19Z", "message": "chore(engine): apply review hint"}, "afterCommit": {"oid": "2bd56018b9666eadf9d0b16f3e0addc89261b157", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/2bd56018b9666eadf9d0b16f3e0addc89261b157", "committedDate": "2020-11-11T08:52:59Z", "message": "fix(broker): avoid deployment distribution on reprocessing\n\n* don't distribute the deployment on reprocessing because it may be already reprocessed\n* instead, we wait until the reprocessing is done and distribute the pending deployments again"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2338, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}