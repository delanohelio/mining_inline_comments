{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MDgwNzgy", "number": 3696, "title": "chore(qa): prevent false positive exceptions on ClusteringRule#after", "bodyText": "Description\n\nwaits until all brokers are shut down before deleting their data, otherwise exceptions are thrown (and we don't want to ignore exceptions)\nalso prevents a small memory leak where on restarting brokers, brokers are removed from the clustering rule, but kept in the closeable list, resulting in them not being garbage collected until the process exits (happens if you run your tests in a loop).\nminor formatting\n\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-01-17T10:47:13Z", "url": "https://github.com/camunda-cloud/zeebe/pull/3696", "merged": true, "mergeCommit": {"oid": "cea339b54a768bb6e224c12d2149c9254f739484"}, "closed": true, "closedAt": "2020-01-20T15:07:28Z", "author": {"login": "npepinpe"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7MgrggBqjI5NTc3MjQ0ODY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8MjHUABqjI5NjI5NDQxMDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d037edc01b74a923b0e81cf8c73c8c4aac41ddf3", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/d037edc01b74a923b0e81cf8c73c8c4aac41ddf3", "committedDate": "2020-01-17T10:44:17Z", "message": "chore(qa): prevent false positive exceptions on ClusteringRule#after"}, "afterCommit": {"oid": "339e308027fe023abe37c5f7f00c66ca328a3f33", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/339e308027fe023abe37c5f7f00c66ca328a3f33", "committedDate": "2020-01-17T10:50:54Z", "message": "chore(qa): prevent false positive exceptions on ClusteringRule#after"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTEwNDYy", "url": "https://github.com/camunda-cloud/zeebe/pull/3696#pullrequestreview-344510462", "createdAt": "2020-01-17T11:10:12Z", "commit": {"oid": "339e308027fe023abe37c5f7f00c66ca328a3f33"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToxMDoxMlrOFe15ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToxODoyNlrOFe2FSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4NDY1MA==", "bodyText": "Do you think 10 seconds is enough? Maybe we use the stepTimeout from the cfg?", "url": "https://github.com/camunda-cloud/zeebe/pull/3696#discussion_r367884650", "createdAt": "2020-01-17T11:10:12Z", "author": {"login": "Zelldon"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/ClusteringRule.java", "diffHunk": "@@ -208,16 +207,40 @@ protected void before() throws IOException {\n \n   @Override\n   protected void after() {\n+    final var latch = new CountDownLatch(brokers.size());\n+    brokers\n+        .values()\n+        .parallelStream()\n+        .forEach(\n+            broker -> {\n+              broker.close();\n+              latch.countDown();\n+            });\n \n-    brokers.values().parallelStream().forEach(Broker::close);\n+    // wait until the brokers are shutdown before deleting their data, otherwise exceptions will be\n+    // thrown and cause developers to waste time figuring out that they aren't production bugs\n+    try {\n+      latch.await(10, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "339e308027fe023abe37c5f7f00c66ca328a3f33"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4NDgxNw==", "bodyText": "Who did this before?", "url": "https://github.com/camunda-cloud/zeebe/pull/3696#discussion_r367884817", "createdAt": "2020-01-17T11:10:36Z", "author": {"login": "Zelldon"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/ClusteringRule.java", "diffHunk": "@@ -208,16 +207,40 @@ protected void before() throws IOException {\n \n   @Override\n   protected void after() {\n+    final var latch = new CountDownLatch(brokers.size());\n+    brokers\n+        .values()\n+        .parallelStream()\n+        .forEach(\n+            broker -> {\n+              broker.close();\n+              latch.countDown();\n+            });\n \n-    brokers.values().parallelStream().forEach(Broker::close);\n+    // wait until the brokers are shutdown before deleting their data, otherwise exceptions will be\n+    // thrown and cause developers to waste time figuring out that they aren't production bugs\n+    try {\n+      latch.await(10, TimeUnit.SECONDS);\n+    } catch (InterruptedException e) {\n+      Thread.currentThread().interrupt();\n+      LOG.warn(\"Interrupted while waiting for {} brokers to close\", brokers.size());\n+    }\n+\n+    for (final var base : brokerBases.entrySet()) {\n+      try {\n+        FileUtil.deleteFolder(base.getValue().getAbsolutePath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "339e308027fe023abe37c5f7f00c66ca328a3f33"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4NTQ3MQ==", "bodyText": "Ah I see it is done in the closeables. But why not anymore? Brokers should be closed now right?", "url": "https://github.com/camunda-cloud/zeebe/pull/3696#discussion_r367885471", "createdAt": "2020-01-17T11:12:24Z", "author": {"login": "Zelldon"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/ClusteringRule.java", "diffHunk": "@@ -208,16 +207,40 @@ protected void before() throws IOException {\n \n   @Override\n   protected void after() {\n+    final var latch = new CountDownLatch(brokers.size());\n+    brokers\n+        .values()\n+        .parallelStream()\n+        .forEach(\n+            broker -> {\n+              broker.close();\n+              latch.countDown();\n+            });\n \n-    brokers.values().parallelStream().forEach(Broker::close);\n+    // wait until the brokers are shutdown before deleting their data, otherwise exceptions will be\n+    // thrown and cause developers to waste time figuring out that they aren't production bugs\n+    try {\n+      latch.await(10, TimeUnit.SECONDS);\n+    } catch (InterruptedException e) {\n+      Thread.currentThread().interrupt();\n+      LOG.warn(\"Interrupted while waiting for {} brokers to close\", brokers.size());\n+    }\n+\n+    for (final var base : brokerBases.entrySet()) {\n+      try {\n+        FileUtil.deleteFolder(base.getValue().getAbsolutePath());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4NDgxNw=="}, "originalCommit": {"oid": "339e308027fe023abe37c5f7f00c66ca328a3f33"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4NTY4NQ==", "bodyText": "nice catch", "url": "https://github.com/camunda-cloud/zeebe/pull/3696#discussion_r367885685", "createdAt": "2020-01-17T11:13:02Z", "author": {"login": "Zelldon"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/ClusteringRule.java", "diffHunk": "@@ -511,6 +532,7 @@ public void stopBroker(final int nodeId) {\n           broker.getConfig().getNetwork().getCommandApi().getAddress();\n       final List<Integer> brokersLeadingPartitions = getBrokersLeadingPartitions(socketAddress);\n       broker.close();\n+      closeables.remove(broker);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "339e308027fe023abe37c5f7f00c66ca328a3f33"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4NjE1Nw==", "bodyText": "So close was also called twice? But this should be cleared after the test class?\nAh ok and if you run a test in a loop this piles up right", "url": "https://github.com/camunda-cloud/zeebe/pull/3696#discussion_r367886157", "createdAt": "2020-01-17T11:14:19Z", "author": {"login": "Zelldon"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/ClusteringRule.java", "diffHunk": "@@ -511,6 +532,7 @@ public void stopBroker(final int nodeId) {\n           broker.getConfig().getNetwork().getCommandApi().getAddress();\n       final List<Integer> brokersLeadingPartitions = getBrokersLeadingPartitions(socketAddress);\n       broker.close();\n+      closeables.remove(broker);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4NTY4NQ=="}, "originalCommit": {"oid": "339e308027fe023abe37c5f7f00c66ca328a3f33"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4NzQ1NQ==", "bodyText": "Where do you see that the brokers are added to the closeables? Haven't found this in the code?", "url": "https://github.com/camunda-cloud/zeebe/pull/3696#discussion_r367887455", "createdAt": "2020-01-17T11:17:48Z", "author": {"login": "Zelldon"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/ClusteringRule.java", "diffHunk": "@@ -511,6 +532,7 @@ public void stopBroker(final int nodeId) {\n           broker.getConfig().getNetwork().getCommandApi().getAddress();\n       final List<Integer> brokersLeadingPartitions = getBrokersLeadingPartitions(socketAddress);\n       broker.close();\n+      closeables.remove(broker);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4NTY4NQ=="}, "originalCommit": {"oid": "339e308027fe023abe37c5f7f00c66ca328a3f33"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4NzY4OQ==", "bodyText": "Ah the parallel stream directly returns after beeing called?", "url": "https://github.com/camunda-cloud/zeebe/pull/3696#discussion_r367887689", "createdAt": "2020-01-17T11:18:26Z", "author": {"login": "Zelldon"}, "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/ClusteringRule.java", "diffHunk": "@@ -208,16 +207,40 @@ protected void before() throws IOException {\n \n   @Override\n   protected void after() {\n+    final var latch = new CountDownLatch(brokers.size());\n+    brokers\n+        .values()\n+        .parallelStream()\n+        .forEach(\n+            broker -> {\n+              broker.close();\n+              latch.countDown();\n+            });\n \n-    brokers.values().parallelStream().forEach(Broker::close);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "339e308027fe023abe37c5f7f00c66ca328a3f33"}, "originalPosition": 50}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "339e308027fe023abe37c5f7f00c66ca328a3f33", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/339e308027fe023abe37c5f7f00c66ca328a3f33", "committedDate": "2020-01-17T10:50:54Z", "message": "chore(qa): prevent false positive exceptions on ClusteringRule#after"}, "afterCommit": {"oid": "cf0124c5f4b8002c6b3e4cf6856d949de7e1fc14", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/cf0124c5f4b8002c6b3e4cf6856d949de7e1fc14", "committedDate": "2020-01-17T12:55:03Z", "message": "chore(qa): close ClusteringRule in correct order"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NjMwNDg2", "url": "https://github.com/camunda-cloud/zeebe/pull/3696#pullrequestreview-344630486", "createdAt": "2020-01-17T14:53:51Z", "commit": {"oid": "cf0124c5f4b8002c6b3e4cf6856d949de7e1fc14"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MTIwOTAw", "url": "https://github.com/camunda-cloud/zeebe/pull/3696#pullrequestreview-345120900", "createdAt": "2020-01-20T07:41:59Z", "commit": {"oid": "d2310feb662b6d21f18f33a90e51a218bab61430"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d2310feb662b6d21f18f33a90e51a218bab61430", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/d2310feb662b6d21f18f33a90e51a218bab61430", "committedDate": "2020-01-20T07:37:51Z", "message": "chore(qa): use temporary folder for broker bases"}, "afterCommit": {"oid": "9d0c4b9afaa5194f24ad825477ad76ce3f78d57f", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/9d0c4b9afaa5194f24ad825477ad76ce3f78d57f", "committedDate": "2020-01-20T07:44:50Z", "message": "chore(qa): close ClusteringRule in correct order"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2350bfcd1dc27da214a29ec64d3c2da0d7b59b09", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/2350bfcd1dc27da214a29ec64d3c2da0d7b59b09", "committedDate": "2020-01-20T08:57:21Z", "message": "chore(qa): fix creation of rule with parameters"}, "afterCommit": {"oid": "081e21e5341e1855b54dbec64c3034356ba32cfc", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/081e21e5341e1855b54dbec64c3034356ba32cfc", "committedDate": "2020-01-20T09:03:46Z", "message": "chore(qa): fix creation of rule with parameters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cea339b54a768bb6e224c12d2149c9254f739484", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/cea339b54a768bb6e224c12d2149c9254f739484", "committedDate": "2020-01-20T13:27:28Z", "message": "chore(qa): close ClusteringRule in correct order"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "081e21e5341e1855b54dbec64c3034356ba32cfc", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/081e21e5341e1855b54dbec64c3034356ba32cfc", "committedDate": "2020-01-20T09:03:46Z", "message": "chore(qa): fix creation of rule with parameters"}, "afterCommit": {"oid": "cea339b54a768bb6e224c12d2149c9254f739484", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/cea339b54a768bb6e224c12d2149c9254f739484", "committedDate": "2020-01-20T13:27:28Z", "message": "chore(qa): close ClusteringRule in correct order"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3201, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}