{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3NTc5NTQw", "number": 5067, "title": "Avoid JVM crashes on closing the broker", "bodyText": "Description\nI assume that the JVM crashed because the broker was closed while installing a new partition.\nWhen the ZeebePartition is closed then it calls closePartition() that closes every resource - one after each other using a actor.onComple() chain. But this doesn't interrupt the install process of a partition.\n\nusing actor.close() to interrupt all running jobs (i.e. installing or closing the partition or a part of it)\nclosing in the partition in action.onClosing() that blocks the close future until its done\n\nBackport #5040 on 0.24\nRelated issues\ncloses #5066\nDefinition of Done\nNot all items need to be done depending on the issue and the pull request.\nCode changes:\n\n The changes are backwards compatibility with previous versions\n If it fixes a bug then PRs are created to backport the fix to the last two minor versions\n\nTesting:\n\n There are unit/integration tests that verify all acceptance criterias of the issue\n New tests are written to ensure backwards compatibility with further versions\n The behavior is tested manually\n The impact of the changes is verified by a benchmark\n\nDocumentation:\n\n The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\n New content is added to the release announcement", "createdAt": "2020-07-28T06:09:20Z", "url": "https://github.com/camunda-cloud/zeebe/pull/5067", "merged": true, "mergeCommit": {"oid": "13a53913a02e1e2bdb777febffee5d98d4ba5301"}, "closed": true, "closedAt": "2020-08-04T07:49:06Z", "author": {"login": "saig0"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4_9XIgH2gAyNDU3NTc5NTQwOmIwMDIyZTVkMmM2Nzc2ZGIxNDQ0Nzk2ZjEzNWNhOWU4ZjExOTEyYTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7hdhyABqjM2MTg5MTE1MDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b0022e5d2c6776db1444796f135ca9e8f11912a4", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/b0022e5d2c6776db1444796f135ca9e8f11912a4", "committedDate": "2020-07-27T11:16:53Z", "message": "chore(util): more logging when closing the actor scheduler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "853a3278cb8317669a405d333f9a1c8765f70e61", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/853a3278cb8317669a405d333f9a1c8765f70e61", "committedDate": "2020-07-27T11:20:01Z", "message": "chore(broker): more logging when closing a partition"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4883a1a480bce694e311fb1fbaf1a686a507b9e0", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/4883a1a480bce694e311fb1fbaf1a686a507b9e0", "committedDate": "2020-07-29T06:27:35Z", "message": "test(util): add tests to verify the actor behavior on closing"}, "afterCommit": {"oid": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/ba16a4ea779d9d27d87db8cc66a6346b055fde0d", "committedDate": "2020-07-29T11:10:37Z", "message": "test(util): add tests to verify the actor behavior on closing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NDMwNjQ4", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#pullrequestreview-457430648", "createdAt": "2020-07-29T11:27:46Z", "commit": {"oid": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMToyNzo0NlrOG40MKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToyOToyMVrOG6FRVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyODUyMQ==", "bodyText": "please don't \ud83d\ude48", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r462228521", "createdAt": "2020-07-29T11:27:46Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -123,9 +123,9 @@ public ZeebePartition(\n     this.typedRecordProcessorsFactory = typedRecordProcessorsFactory;\n     this.commandApiService = commandApiService;\n     this.partitionListeners = Collections.unmodifiableList(partitionListeners);\n-    this.partitionId = atomixRaftPartition.id().id();\n-    this.scheduler = actorScheduler;\n-    this.maxFragmentSize = (int) brokerCfg.getNetwork().getMaxMessageSizeInBytes();\n+    partitionId = atomixRaftPartition.id().id();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyOTM1Nw==", "bodyText": "Idk whether we ever discussed that but I normally tend to use the this keyword in the ctor. For consistency I would like to keep it. If we decided not to use it then we should remove it everywhere.", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r462229357", "createdAt": "2020-07-29T11:29:23Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -123,9 +123,9 @@ public ZeebePartition(\n     this.typedRecordProcessorsFactory = typedRecordProcessorsFactory;\n     this.commandApiService = commandApiService;\n     this.partitionListeners = Collections.unmodifiableList(partitionListeners);\n-    this.partitionId = atomixRaftPartition.id().id();\n-    this.scheduler = actorScheduler;\n-    this.maxFragmentSize = (int) brokerCfg.getNetwork().getMaxMessageSizeInBytes();\n+    partitionId = atomixRaftPartition.id().id();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyODUyMQ=="}, "originalCommit": {"oid": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0MTgzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                actor.runOnCompletion(\n          \n          \n            \n                    closePartition(),\n          \n          \n            \n                    (ok, failure) -> {\n          \n          \n            \n                      atomixRaftPartition.removeRoleChangeListener(this);\n          \n          \n            \n                      atomixRaftPartition.getServer().removeCommitListener(this);\n          \n          \n            \n            \n          \n          \n            \n                      criticalComponentsHealthMonitor.removeComponent(raftPartitionHealth.getName());\n          \n          \n            \n                      raftPartitionHealth.close();\n          \n          \n            \n                    });\n          \n          \n            \n                    closePartition().onComplete(\n          \n          \n            \n                    (ok, failure) -> {\n          \n          \n            \n                      atomixRaftPartition.removeRoleChangeListener(this);\n          \n          \n            \n                      atomixRaftPartition.getServer().removeCommitListener(this);\n          \n          \n            \n            \n          \n          \n            \n                      criticalComponentsHealthMonitor.removeComponent(raftPartitionHealth.getName());\n          \n          \n            \n                      raftPartitionHealth.close();\n          \n          \n            \n                    });", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r463541835", "createdAt": "2020-07-31T10:49:32Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -674,32 +643,16 @@ protected void onActorStarted() {\n   }\n \n   @Override\n-  protected void onActorClosed() {\n-    criticalComponentsHealthMonitor.removeComponent(raftPartitionHealth.getName());\n-    raftPartitionHealth.close();\n-  }\n-\n-  @Override\n-  public void close() {\n-    // this is called from outside so it is safe to call join\n-    final var closeFuture = new CompletableActorFuture<Void>();\n-    actor.call(\n-        () ->\n-            closePartition()\n-                .onComplete(\n-                    (v, t) -> {\n-                      atomixRaftPartition.removeRoleChangeListener(this);\n-                      atomixRaftPartition.getServer().removeCommitListener(this);\n-\n-                      if (t == null) {\n-                        closeFuture.complete(null);\n-                      } else {\n-                        closeFuture.completeExceptionally(t);\n-                      }\n-                    }));\n-    closeFuture.join();\n-\n-    super.close();\n+  protected void onActorClosing() {\n+    actor.runOnCompletion(\n+        closePartition(),\n+        (ok, failure) -> {\n+          atomixRaftPartition.removeRoleChangeListener(this);\n+          atomixRaftPartition.getServer().removeCommitListener(this);\n+\n+          criticalComponentsHealthMonitor.removeComponent(raftPartitionHealth.getName());\n+          raftPartitionHealth.close();\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d"}, "originalPosition": 246}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0MzEwOQ==", "bodyText": "I this the case? You mean because Partition#close and stepdown could close the partition?!", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r463543109", "createdAt": "2020-07-31T10:52:29Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -710,6 +663,57 @@ protected void handleFailure(final Exception failure) {\n     onInstallFailure();\n   }\n \n+  private void addClosingStep(final String name, final AsyncClosable closable) {\n+    closingSteps.add(new ClosingStep(name, closable));\n+  }\n+\n+  private CompletableActorFuture<Void> closePartition() {\n+    // this method may be called concurrently when the actor is closed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d"}, "originalPosition": 259}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0Mzc2NQ==", "bodyText": "We could prevent that right? We know when we are in the closing phase.", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r463543765", "createdAt": "2020-07-31T10:54:14Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -710,6 +663,57 @@ protected void handleFailure(final Exception failure) {\n     onInstallFailure();\n   }\n \n+  private void addClosingStep(final String name, final AsyncClosable closable) {\n+    closingSteps.add(new ClosingStep(name, closable));\n+  }\n+\n+  private CompletableActorFuture<Void> closePartition() {\n+    // this method may be called concurrently when the actor is closed", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0MzEwOQ=="}, "originalCommit": {"oid": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d"}, "originalPosition": 259}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0NjI1Mw==", "bodyText": "Ideally we should prevent that; in case of multiple role changes we do this due to waiting of the last transition. I think it makes sense to intorduce a closing flag which is toggled and nothing can be executed anymore, like transition. I think actor scheduler also supports something like that. That some jobs are only executed on starting right?", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r463546253", "createdAt": "2020-07-31T11:00:28Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -710,6 +663,57 @@ protected void handleFailure(final Exception failure) {\n     onInstallFailure();\n   }\n \n+  private void addClosingStep(final String name, final AsyncClosable closable) {\n+    closingSteps.add(new ClosingStep(name, closable));\n+  }\n+\n+  private CompletableActorFuture<Void> closePartition() {\n+    // this method may be called concurrently when the actor is closed\n+    final var closingStepsInReverseOrder = new ArrayList<>(closingSteps);\n+    Collections.reverse(closingStepsInReverseOrder);\n+\n+    final var closingPartitionFuture = new CompletableActorFuture<Void>();\n+    stepByStepClosing(closingPartitionFuture, closingStepsInReverseOrder);\n+\n+    return closingPartitionFuture;\n+  }\n+\n+  private void stepByStepClosing(\n+      final CompletableActorFuture<Void> closingFuture, final List<ClosingStep> actorsToClose) {\n+    if (actorsToClose.isEmpty()) {\n+      closingFuture.complete(null);\n+      return;\n+    }\n+\n+    final ClosingStep closingStep = actorsToClose.remove(0);\n+    LOG.debug(\"Closing Zeebe-Partition-{}: {}\", partitionId, closingStep.getName());\n+\n+    final var closeFuture = closingStep.getClosable().closeAsync();\n+    closeFuture.onComplete(\n+        (v, t) -> {\n+          if (t == null) {\n+            LOG.debug(\n+                \"Closing Zeebe-Partition-{}: {} closed successfully\",\n+                partitionId,\n+                closingStep.getName());\n+\n+            // remove the completed step from the list in case that the closing is interrupted", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d"}, "originalPosition": 288}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0Njg1Nw==", "bodyText": "This is not the blocking task runner right?", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r463546857", "createdAt": "2020-07-31T11:02:03Z", "author": {"login": "Zelldon"}, "path": "util/src/main/java/io/zeebe/util/sched/ActorExecutor.java", "diffHunk": "@@ -70,6 +71,7 @@ public void start() {\n   }\n \n   public CompletableFuture<Void> closeAsync() {\n+    Loggers.ACTOR_LOGGER.debug(\"Closing blocking task runner\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1NjY1NQ==", "bodyText": "So actually we remove the closables already before I thought this was part of the fix?", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r463556655", "createdAt": "2020-07-31T11:28:33Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -610,39 +601,17 @@ private StreamProcessor createStreamProcessor(final ZeebeDb zeebeDb) {\n     return CompletableActorFuture.completed(null);\n   }\n \n-  private void stepByStepClosing(\n-      final CompletableActorFuture<Void> closingFuture, final List<AsyncClosable> actorsToClose) {\n-    if (actorsToClose.isEmpty()) {\n-      closingFuture.complete(null);\n-      return;\n-    }\n-\n-    final AsyncClosable asyncClosable = actorsToClose.remove(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d"}, "originalPosition": 175}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1Njk1MQ==", "bodyText": "We remove now twice from two different lists ? \ud83d\ude05", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r463556951", "createdAt": "2020-07-31T11:29:21Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -710,6 +663,57 @@ protected void handleFailure(final Exception failure) {\n     onInstallFailure();\n   }\n \n+  private void addClosingStep(final String name, final AsyncClosable closable) {\n+    closingSteps.add(new ClosingStep(name, closable));\n+  }\n+\n+  private CompletableActorFuture<Void> closePartition() {\n+    // this method may be called concurrently when the actor is closed\n+    final var closingStepsInReverseOrder = new ArrayList<>(closingSteps);\n+    Collections.reverse(closingStepsInReverseOrder);\n+\n+    final var closingPartitionFuture = new CompletableActorFuture<Void>();\n+    stepByStepClosing(closingPartitionFuture, closingStepsInReverseOrder);\n+\n+    return closingPartitionFuture;\n+  }\n+\n+  private void stepByStepClosing(\n+      final CompletableActorFuture<Void> closingFuture, final List<ClosingStep> actorsToClose) {\n+    if (actorsToClose.isEmpty()) {\n+      closingFuture.complete(null);\n+      return;\n+    }\n+\n+    final ClosingStep closingStep = actorsToClose.remove(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d"}, "originalPosition": 276}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNTQ4MDcy", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#pullrequestreview-460548072", "createdAt": "2020-08-04T07:06:16Z", "commit": {"oid": "efaae650c5318974bf847bae9170af71dc353fae"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNzowNjoxNlrOG7Txhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNzowNjoxNlrOG7Txhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg0MzE0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // caution: this method may be called concurrently when the actor is closed\n          \n          \n            \n                // caution: this method may be called concurrently on role transition due to closing the actor", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r464843142", "createdAt": "2020-08-04T07:06:16Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -668,7 +668,10 @@ private void addClosingStep(final String name, final AsyncClosable closable) {\n   }\n \n   private CompletableActorFuture<Void> closePartition() {\n-    // this method may be called concurrently when the actor is closed\n+    // caution: this method may be called concurrently when the actor is closed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efaae650c5318974bf847bae9170af71dc353fae"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87e492c100e624de8db222f171fae52ee3c755d4", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/87e492c100e624de8db222f171fae52ee3c755d4", "committedDate": "2020-08-04T07:26:30Z", "message": "chore(broker): avoid concurrency in closing the partition\n\n* using actor.close() to interrupt all running jobs (i.e. installing or closing the partition or a part of it)\n* closing the partition in action.onClosing() that blocks the close future until its done"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "621f4501df37ad0747e0b8a4d5df52f0f5afbeea", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/621f4501df37ad0747e0b8a4d5df52f0f5afbeea", "committedDate": "2020-08-04T07:10:50Z", "message": "chore(engine): apply review suggestion\n\nCo-authored-by: Christopher Zell <zelldon91@googlemail.com>"}, "afterCommit": {"oid": "87e492c100e624de8db222f171fae52ee3c755d4", "author": {"user": {"login": "saig0", "name": "Philipp Ossler"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/87e492c100e624de8db222f171fae52ee3c755d4", "committedDate": "2020-08-04T07:26:30Z", "message": "chore(broker): avoid concurrency in closing the partition\n\n* using actor.close() to interrupt all running jobs (i.e. installing or closing the partition or a part of it)\n* closing the partition in action.onClosing() that blocks the close future until its done"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2616, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}