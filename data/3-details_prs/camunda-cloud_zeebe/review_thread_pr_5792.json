{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NjMwNTI3", "number": 5792, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDozMDowOVrOE3DaUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDozMDo1MFrOE3Davg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTYzMDI2OnYy", "diffSide": "RIGHT", "path": "util/src/main/java/io/zeebe/util/sched/ActorThread.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDozMDowOVrOHwLVFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOTozMzoxMlrOHwTtOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3OTMxNw==", "bodyText": "Shouldn't we use the existing ActorLogger?\nhttps://github.com/zeebe-io/zeebe/blob/develop/util/src/main/java/io/zeebe/util/Loggers.java#L16", "url": "https://github.com/camunda-cloud/zeebe/pull/5792#discussion_r520279317", "createdAt": "2020-11-10T04:30:09Z", "author": {"login": "saig0"}, "path": "util/src/main/java/io/zeebe/util/sched/ActorThread.java", "diffHunk": "@@ -32,13 +32,16 @@\n import org.agrona.UnsafeAccess;\n import org.agrona.concurrent.BackoffIdleStrategy;\n import org.agrona.concurrent.ManyToManyConcurrentArrayQueue;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.slf4j.MDC;\n import sun.misc.Unsafe;\n \n @SuppressWarnings(\"restriction\")\n public class ActorThread extends Thread implements Consumer<Runnable> {\n   static final Unsafe UNSAFE = UnsafeAccess.UNSAFE;\n   private static final long STATE_OFFSET;\n+  private static final Logger LOG = LoggerFactory.getLogger(ActorThread.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49246a4cee5476c71483e057cf7f75beb4558b20"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM0NjY1MQ==", "bodyText": "Yes; why I initially went with a per-class logger is because I think in the long run it makes sense for us to drop these broad loggers. If you want to get fine-grained trace logs, or debug, etc., if you want control over what you're seeing, having one logger used for a complete unit is counter productive as you may get too much logs. At the same time, having one logger per class is cheap, and you can still group things by packages... Additionally, by sticking with one logger per class, this also follows standard conventions.\nHowever for this PR we probably should remain consistent, and moving away from module-level loggers or some such should be something we do in a separate PR.", "url": "https://github.com/camunda-cloud/zeebe/pull/5792#discussion_r520346651", "createdAt": "2020-11-10T07:34:55Z", "author": {"login": "npepinpe"}, "path": "util/src/main/java/io/zeebe/util/sched/ActorThread.java", "diffHunk": "@@ -32,13 +32,16 @@\n import org.agrona.UnsafeAccess;\n import org.agrona.concurrent.BackoffIdleStrategy;\n import org.agrona.concurrent.ManyToManyConcurrentArrayQueue;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.slf4j.MDC;\n import sun.misc.Unsafe;\n \n @SuppressWarnings(\"restriction\")\n public class ActorThread extends Thread implements Consumer<Runnable> {\n   static final Unsafe UNSAFE = UnsafeAccess.UNSAFE;\n   private static final long STATE_OFFSET;\n+  private static final Logger LOG = LoggerFactory.getLogger(ActorThread.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3OTMxNw=="}, "originalCommit": {"oid": "49246a4cee5476c71483e057cf7f75beb4558b20"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxNjU3MA==", "bodyText": "I agree. Let's discuss/announce it in the team meeting first :)", "url": "https://github.com/camunda-cloud/zeebe/pull/5792#discussion_r520416570", "createdAt": "2020-11-10T09:33:12Z", "author": {"login": "saig0"}, "path": "util/src/main/java/io/zeebe/util/sched/ActorThread.java", "diffHunk": "@@ -32,13 +32,16 @@\n import org.agrona.UnsafeAccess;\n import org.agrona.concurrent.BackoffIdleStrategy;\n import org.agrona.concurrent.ManyToManyConcurrentArrayQueue;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.slf4j.MDC;\n import sun.misc.Unsafe;\n \n @SuppressWarnings(\"restriction\")\n public class ActorThread extends Thread implements Consumer<Runnable> {\n   static final Unsafe UNSAFE = UnsafeAccess.UNSAFE;\n   private static final long STATE_OFFSET;\n+  private static final Logger LOG = LoggerFactory.getLogger(ActorThread.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3OTMxNw=="}, "originalCommit": {"oid": "49246a4cee5476c71483e057cf7f75beb4558b20"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTYzMTM0OnYy", "diffSide": "RIGHT", "path": "dist/src/main/java/io/zeebe/broker/StandaloneBroker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDozMDo1MFrOHwLVtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNzozNzoyNlrOHwPgYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3OTQ3Nw==", "bodyText": "Shouldn't we use the existing SystemLogger? https://github.com/zeebe-io/zeebe/blob/develop/broker/src/main/java/io/zeebe/broker/Loggers.java#L16", "url": "https://github.com/camunda-cloud/zeebe/pull/5792#discussion_r520279477", "createdAt": "2020-11-10T04:30:50Z", "author": {"login": "saig0"}, "path": "dist/src/main/java/io/zeebe/broker/StandaloneBroker.java", "diffHunk": "@@ -28,6 +31,7 @@\n @SpringBootApplication(exclude = ElasticsearchRestClientAutoConfiguration.class)\n @ComponentScan({\"io.zeebe.broker\", \"io.zeebe.shared\"})\n public class StandaloneBroker implements CommandLineRunner {\n+  private static final Logger LOG = LoggerFactory.getLogger(StandaloneBroker.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49246a4cee5476c71483e057cf7f75beb4558b20"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM0Nzc0NA==", "bodyText": "Should we? It's unclear to me what is referred to here by the system, to be honest. I think this kind of fits with the point I was trying to make above, but again, outside of scope for this PR, so let's go with that for now.", "url": "https://github.com/camunda-cloud/zeebe/pull/5792#discussion_r520347744", "createdAt": "2020-11-10T07:37:26Z", "author": {"login": "npepinpe"}, "path": "dist/src/main/java/io/zeebe/broker/StandaloneBroker.java", "diffHunk": "@@ -28,6 +31,7 @@\n @SpringBootApplication(exclude = ElasticsearchRestClientAutoConfiguration.class)\n @ComponentScan({\"io.zeebe.broker\", \"io.zeebe.shared\"})\n public class StandaloneBroker implements CommandLineRunner {\n+  private static final Logger LOG = LoggerFactory.getLogger(StandaloneBroker.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3OTQ3Nw=="}, "originalCommit": {"oid": "49246a4cee5476c71483e057cf7f75beb4558b20"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 138, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}