{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMzY3OTA0", "number": 5713, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDo0Mjo0N1rOEywEag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDo1MzozNlrOEywURQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjUxODE4OnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/exporter/metrics/MetricsExporter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDo0Mjo0N1rOHpj-mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMTo1MTozMFrOHpmWLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM0MzEyOA==", "bodyText": "We count FNI completed not for the process itself. I guess that we want to do the same for FNI terminated.", "url": "https://github.com/camunda-cloud/zeebe/pull/5713#discussion_r513343128", "createdAt": "2020-10-28T10:42:47Z", "author": {"login": "saig0"}, "path": "broker/src/main/java/io/zeebe/broker/exporter/metrics/MetricsExporter.java", "diffHunk": "@@ -82,11 +82,16 @@ private void handleWorkflowInstanceRecord(\n     if (currentIntent == WorkflowInstanceIntent.ELEMENT_ACTIVATING\n         && isWorkflowInstanceRecord(record)) {\n       storeWorkflowInstanceCreation(record.getTimestamp(), recordKey);\n-    } else if (currentIntent == WorkflowInstanceIntent.ELEMENT_COMPLETED\n-        && isWorkflowInstanceRecord(record)) {\n-      final var creationTime = workflowInstanceKeyToCreationTimeMap.remove(recordKey);\n-      executionLatencyMetrics.observeWorkflowInstanceExecutionTime(\n-          partitionId, creationTime, record.getTimestamp());\n+    } else if (currentIntent == WorkflowInstanceIntent.ELEMENT_COMPLETED) {\n+      if (isWorkflowInstanceRecord(record)) {\n+        final var creationTime = workflowInstanceKeyToCreationTimeMap.remove(recordKey);\n+        executionLatencyMetrics.observeWorkflowInstanceExecutionTime(\n+            partitionId, creationTime, record.getTimestamp());\n+      } else {\n+        FNIMetrics.addflowNodeInstanceCompleted(partitionId);\n+      }\n+    } else if (currentIntent == WorkflowInstanceIntent.ELEMENT_TERMINATED) {\n+      FNIMetrics.addflowNodeInstanceTerminated(partitionId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "307589c50fc08a6e9305992881174ad3fd945f74"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM4MTkzNA==", "bodyText": "Makes sense \ud83d\udc4d", "url": "https://github.com/camunda-cloud/zeebe/pull/5713#discussion_r513381934", "createdAt": "2020-10-28T11:51:30Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/exporter/metrics/MetricsExporter.java", "diffHunk": "@@ -82,11 +82,16 @@ private void handleWorkflowInstanceRecord(\n     if (currentIntent == WorkflowInstanceIntent.ELEMENT_ACTIVATING\n         && isWorkflowInstanceRecord(record)) {\n       storeWorkflowInstanceCreation(record.getTimestamp(), recordKey);\n-    } else if (currentIntent == WorkflowInstanceIntent.ELEMENT_COMPLETED\n-        && isWorkflowInstanceRecord(record)) {\n-      final var creationTime = workflowInstanceKeyToCreationTimeMap.remove(recordKey);\n-      executionLatencyMetrics.observeWorkflowInstanceExecutionTime(\n-          partitionId, creationTime, record.getTimestamp());\n+    } else if (currentIntent == WorkflowInstanceIntent.ELEMENT_COMPLETED) {\n+      if (isWorkflowInstanceRecord(record)) {\n+        final var creationTime = workflowInstanceKeyToCreationTimeMap.remove(recordKey);\n+        executionLatencyMetrics.observeWorkflowInstanceExecutionTime(\n+            partitionId, creationTime, record.getTimestamp());\n+      } else {\n+        FNIMetrics.addflowNodeInstanceCompleted(partitionId);\n+      }\n+    } else if (currentIntent == WorkflowInstanceIntent.ELEMENT_TERMINATED) {\n+      FNIMetrics.addflowNodeInstanceTerminated(partitionId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM0MzEyOA=="}, "originalCommit": {"oid": "307589c50fc08a6e9305992881174ad3fd945f74"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjU1ODc3OnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/exporter/metrics/FNIMetrics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMDo1MzozNlrOHpkXyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMTo1MToxMlrOHpmVkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM0OTU3OA==", "bodyText": "Is there a difference between two counters and add a label for the type (completed|terminated)?\nLooking at the dashboard, I think it would make sense to merge the two views together into one.", "url": "https://github.com/camunda-cloud/zeebe/pull/5713#discussion_r513349578", "createdAt": "2020-10-28T10:53:36Z", "author": {"login": "saig0"}, "path": "broker/src/main/java/io/zeebe/broker/exporter/metrics/FNIMetrics.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.exporter.metrics;\n+\n+import io.prometheus.client.Counter;\n+\n+public class FNIMetrics {\n+\n+  private static final Counter FLOW_NODE_INSTANCE_COMPLETED =\n+      Counter.build()\n+          .namespace(\"zeebe\")\n+          .name(\"flow_node_instance_completed\")\n+          .help(\"Number of flow node instances, which have been completed.\")\n+          .labelNames(\"partition\")\n+          .register();\n+\n+  private static final Counter FLOW_NODE_INSTANCE_TERMINATED =\n+      Counter.build()\n+          .namespace(\"zeebe\")\n+          .name(\"flow_node_instance_terminated\")\n+          .help(\"Number of flow node instances, which have been terminated.\")\n+          .labelNames(\"partition\")\n+          .register();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "307589c50fc08a6e9305992881174ad3fd945f74"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM4MTc3OQ==", "bodyText": "I think it makes sense to change that to labels. https://www.innoq.com/en/blog/prometheus-counters/", "url": "https://github.com/camunda-cloud/zeebe/pull/5713#discussion_r513381779", "createdAt": "2020-10-28T11:51:12Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/exporter/metrics/FNIMetrics.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.exporter.metrics;\n+\n+import io.prometheus.client.Counter;\n+\n+public class FNIMetrics {\n+\n+  private static final Counter FLOW_NODE_INSTANCE_COMPLETED =\n+      Counter.build()\n+          .namespace(\"zeebe\")\n+          .name(\"flow_node_instance_completed\")\n+          .help(\"Number of flow node instances, which have been completed.\")\n+          .labelNames(\"partition\")\n+          .register();\n+\n+  private static final Counter FLOW_NODE_INSTANCE_TERMINATED =\n+      Counter.build()\n+          .namespace(\"zeebe\")\n+          .name(\"flow_node_instance_terminated\")\n+          .help(\"Number of flow node instances, which have been terminated.\")\n+          .labelNames(\"partition\")\n+          .register();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM0OTU3OA=="}, "originalCommit": {"oid": "307589c50fc08a6e9305992881174ad3fd945f74"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 105, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}