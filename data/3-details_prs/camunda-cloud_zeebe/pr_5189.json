{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MzA2MDc2", "number": 5189, "title": "Replicate snapshots faster", "bodyText": "Description\nFileBasedSnapshotChunkReader constructor read all files to calculate checksum. When we create a new instance of the reader for each install request, it affects the overall snapshot replication duration. The performance impact is visible when the snapshot contains more than 1000 files. So instead of creating a new reader each time, we create the reader once and iterate over the chunks to build each install request.\nRelated issues\ncloses #5135\nDefinition of Done\nNot all items need to be done depending on the issue and the pull request.\nCode changes:\n\n The changes are backwards compatibility with previous versions\n If it fixes a bug then PRs are created to backport the fix to the last two minor versions\n\nTesting:\n\n There are unit/integration tests that verify all acceptance criterias of the issue\n New tests are written to ensure backwards compatibility with further versions\n The behavior is tested manually\n The impact of the changes is verified by a benchmark\n\nDocumentation:\n\n The documentation is updated (e.g. BPMN reference, configuration, examples, get-started guides, etc.)\n New content is added to the release announcement", "createdAt": "2020-08-18T08:49:45Z", "url": "https://github.com/camunda-cloud/zeebe/pull/5189", "merged": true, "mergeCommit": {"oid": "9e2bfce3d8c2965209ba1ca48e6662767919ff72"}, "closed": true, "closedAt": "2020-08-19T15:05:08Z", "author": {"login": "deepthidevaki"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAIVakAFqTQ2OTUzNTMxNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAbp9PABqjM2NzA3ODc5MDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NTM1MzE1", "url": "https://github.com/camunda-cloud/zeebe/pull/5189#pullrequestreview-469535315", "createdAt": "2020-08-18T14:51:44Z", "commit": {"oid": "9c93a76953b34a88415eddff53a723fb8ab5e1a5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNDo1MTo0NFrOHCYVTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNDo1OToyN1rOHCYtHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI1Nzg2OQ==", "bodyText": "What happens when we failed to open the reader and return here empty? No install request is send. Is this an issue?", "url": "https://github.com/camunda-cloud/zeebe/pull/5189#discussion_r472257869", "createdAt": "2020-08-18T14:51:44Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/roles/LeaderAppender.java", "diffHunk": "@@ -363,6 +342,28 @@ public void close() {\n                 new RaftException.ProtocolException(\"Failed to reach consensus\")));\n   }\n \n+  private void tryToReplicateSnapshot(final RaftMemberContext member) {\n+    final var optSnapshot = raft.getPersistedSnapshotStore().getLatestSnapshot();\n+\n+    if (optSnapshot.isPresent()\n+        && member.getSnapshotIndex() < optSnapshot.get().getIndex()\n+        && optSnapshot.get().getIndex() >= member.getLogReader().getCurrentIndex()) {\n+      if (!member.canInstall()) {\n+        return;\n+      }\n+\n+      final var persistedSnapshot = optSnapshot.get();\n+      log.debug(\n+          \"Replicating snapshot {} to {}\",\n+          persistedSnapshot.getIndex(),\n+          member.getMember().memberId());\n+      buildInstallRequest(member, persistedSnapshot)\n+          .ifPresent(installRequest -> sendInstallRequest(member, installRequest));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c93a76953b34a88415eddff53a723fb8ab5e1a5"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI1ODU4Nw==", "bodyText": "Could be flaky, since ordering is not guaranteed right?", "url": "https://github.com/camunda-cloud/zeebe/pull/5189#discussion_r472258587", "createdAt": "2020-08-18T14:52:39Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/test/java/io/atomix/raft/RaftFailOverTest.java", "diffHunk": "@@ -170,6 +170,28 @@ public void shouldReplicateSnapshotOnJoin() throws Exception {\n     assertThat(snapshot.getTerm()).isEqualTo(snapshot.getTerm());\n   }\n \n+  @Test\n+  public void shouldReplicateSnapshotWithManyFilesOnJoin() throws Exception {\n+    // given\n+    final var follower = raftRule.shutdownFollower();\n+    raftRule.appendEntries(20);\n+    final long snapshotIndex = 10L;\n+    raftRule.doSnapshot(snapshotIndex, 10);\n+    final var leaderSnapshot = raftRule.getSnapshotFromLeader();\n+\n+    // when\n+    raftRule.joinCluster(follower);\n+\n+    // then\n+    assertThat(raftRule.allNodesHaveSnapshotWithIndex(snapshotIndex)).isTrue();\n+    final var snapshot = raftRule.getSnapshotOnNode(follower);\n+\n+    assertThat(snapshot.getIndex()).isEqualTo(leaderSnapshot.getIndex()).isEqualTo(snapshotIndex);\n+    assertThat(snapshot.getTerm()).isEqualTo(snapshot.getTerm());\n+    assertThat(snapshot.getPath().toFile().list())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c93a76953b34a88415eddff53a723fb8ab5e1a5"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI2Mzk2NA==", "bodyText": "First I thought hm this Test should also worked before right? So what is the matter of this test, the I tried it without your fix and it toooook soo long, wow didn't expected that :D\nThanks for fixing that, awesome.", "url": "https://github.com/camunda-cloud/zeebe/pull/5189#discussion_r472263964", "createdAt": "2020-08-18T14:59:27Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/test/java/io/atomix/raft/RaftFailOverTest.java", "diffHunk": "@@ -170,6 +170,28 @@ public void shouldReplicateSnapshotOnJoin() throws Exception {\n     assertThat(snapshot.getTerm()).isEqualTo(snapshot.getTerm());\n   }\n \n+  @Test\n+  public void shouldReplicateSnapshotWithManyFilesOnJoin() throws Exception {\n+    // given\n+    final var follower = raftRule.shutdownFollower();\n+    raftRule.appendEntries(20);\n+    final long snapshotIndex = 10L;\n+    raftRule.doSnapshot(snapshotIndex, 10);\n+    final var leaderSnapshot = raftRule.getSnapshotFromLeader();\n+\n+    // when\n+    raftRule.joinCluster(follower);\n+\n+    // then\n+    assertThat(raftRule.allNodesHaveSnapshotWithIndex(snapshotIndex)).isTrue();\n+    final var snapshot = raftRule.getSnapshotOnNode(follower);\n+\n+    assertThat(snapshot.getIndex()).isEqualTo(leaderSnapshot.getIndex()).isEqualTo(snapshotIndex);\n+    assertThat(snapshot.getTerm()).isEqualTo(snapshot.getTerm());\n+    assertThat(snapshot.getPath().toFile().list())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI1ODU4Nw=="}, "originalCommit": {"oid": "9c93a76953b34a88415eddff53a723fb8ab5e1a5"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMjU0OTA3", "url": "https://github.com/camunda-cloud/zeebe/pull/5189#pullrequestreview-470254907", "createdAt": "2020-08-19T08:52:21Z", "commit": {"oid": "249b1066563bd9be0d0cb817e503e41eadd5a2b3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6811e1ecdfb0d8c0c0a75738c8a1278a8e9d9dd7", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/6811e1ecdfb0d8c0c0a75738c8a1278a8e9d9dd7", "committedDate": "2020-08-19T13:29:12Z", "message": "fix(atomix): donot build snapshot reader for each install request\n\nFileBasedSnapshotChunkReader read all files in constructor to calculate checksum. When we create a new instance of the reader for each install request, it affects the overall snapshot replication duration."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b3c0f7608d53d6043b9de5960d11dadff6b8724", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/1b3c0f7608d53d6043b9de5960d11dadff6b8724", "committedDate": "2020-08-19T13:30:11Z", "message": "chore(atomix): use request's currentTerm instead of snapshot's term to reset hearbeat"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "249b1066563bd9be0d0cb817e503e41eadd5a2b3", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/249b1066563bd9be0d0cb817e503e41eadd5a2b3", "committedDate": "2020-08-19T07:31:53Z", "message": "chore(atomix): fix test"}, "afterCommit": {"oid": "1b3c0f7608d53d6043b9de5960d11dadff6b8724", "author": {"user": {"login": "deepthidevaki", "name": "Deepthi Devaki Akkoorath"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/1b3c0f7608d53d6043b9de5960d11dadff6b8724", "committedDate": "2020-08-19T13:30:11Z", "message": "chore(atomix): use request's currentTerm instead of snapshot's term to reset hearbeat"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2550, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}