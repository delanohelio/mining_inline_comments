{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NjA2Mjc3", "number": 4551, "title": "chore(exporters/elasticsearch-exporter): remove high level rest client", "bodyText": "Description\nThis PR removes Elasticsearch's high level REST client and replaces it with the low level REST client, primarily to remove many heavy dependencies (such as embedding the Elasticsearch server itself) from the project. Out of scope was refactoring the exporter in general, though it could benefit from it. The scope here was strictly replacing the clients, which means most requests are simply maps, with a few DTOs to more easily handle responses.\nRelated issues\ncloses #1343\nPull Request Checklist\n\n All commit messages match our commit message guidelines\n The submitting code follows our code style\n If submitting code, please run mvn clean install -DskipTests locally before committing", "createdAt": "2020-05-18T16:19:05Z", "url": "https://github.com/camunda-cloud/zeebe/pull/4551", "merged": true, "mergeCommit": {"oid": "010edaa5be6d8f752fbd2097bdf5794f8bc30cb5"}, "closed": true, "closedAt": "2020-05-19T15:39:48Z", "author": {"login": "npepinpe"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABciz35NgFqTQxNDM2NjY1OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABci2FOIgFqTQxNDU1Nzk0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MzY2NjU5", "url": "https://github.com/camunda-cloud/zeebe/pull/4551#pullrequestreview-414366659", "createdAt": "2020-05-19T11:51:26Z", "commit": {"oid": "f3a0ea52e5f00e85bd245ee850a3ba6bda5102ab"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTo1MToyNlrOGXcu8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMjo0Mjo1OFrOGXej5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI0MTIwMA==", "bodyText": "This new line seems scary. It's likely not platform independent. Why do we need to add the record on a new line behind the serialised command? Perhaps we can find a way to do without it, otherwise I would suggest System.lineSeparator(). See: https://docs.oracle.com/javase/8/docs/api/java/lang/System.html#lineSeparator--", "url": "https://github.com/camunda-cloud/zeebe/pull/4551#discussion_r427241200", "createdAt": "2020-05-19T11:51:26Z", "author": {"login": "korthout"}, "path": "exporters/elasticsearch-exporter/src/main/java/io/zeebe/exporter/ElasticsearchClient.java", "diffHunk": "@@ -103,51 +102,54 @@ private void checkVariableRecordValue(final Record<VariableRecordValue> record)\n     }\n   }\n \n-  public void bulk(final IndexRequest indexRequest) {\n-    bulkRequest.add(indexRequest);\n+  public void bulk(final Map<String, Object> command, final Record<?> record) {\n+    final String serializedCommand;\n+\n+    try {\n+      serializedCommand = MAPPER.writeValueAsString(command);\n+    } catch (final IOException e) {\n+      throw new ElasticsearchExporterException(\n+          \"Failed to serialize bulk request command to JSON\", e);\n+    }\n+\n+    bulkRequest.add(serializedCommand + \"\\n\" + record.toJson());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3a0ea52e5f00e85bd245ee850a3ba6bda5102ab"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI1MDE4NQ==", "bodyText": "Similar issue concerning platform independent newlines", "url": "https://github.com/camunda-cloud/zeebe/pull/4551#discussion_r427250185", "createdAt": "2020-05-19T12:07:40Z", "author": {"login": "korthout"}, "path": "exporters/elasticsearch-exporter/src/main/java/io/zeebe/exporter/ElasticsearchClient.java", "diffHunk": "@@ -103,51 +102,54 @@ private void checkVariableRecordValue(final Record<VariableRecordValue> record)\n     }\n   }\n \n-  public void bulk(final IndexRequest indexRequest) {\n-    bulkRequest.add(indexRequest);\n+  public void bulk(final Map<String, Object> command, final Record<?> record) {\n+    final String serializedCommand;\n+\n+    try {\n+      serializedCommand = MAPPER.writeValueAsString(command);\n+    } catch (final IOException e) {\n+      throw new ElasticsearchExporterException(\n+          \"Failed to serialize bulk request command to JSON\", e);\n+    }\n+\n+    bulkRequest.add(serializedCommand + \"\\n\" + record.toJson());\n   }\n \n   /** @return true if all bulk records where flushed successfully */\n   public boolean flush() {\n     boolean success = true;\n-    final int bulkSize = bulkRequest.numberOfActions();\n+    final int bulkSize = bulkRequest.size();\n     if (bulkSize > 0) {\n       try {\n         metrics.recordBulkSize(bulkSize);\n-        final BulkResponse responses = exportBulk();\n-        success = checkBulkResponses(responses);\n+        success = exportBulk();\n       } catch (final IOException e) {\n         throw new ElasticsearchExporterException(\"Failed to flush bulk\", e);\n       }\n \n       if (success) {\n         // all records where flushed, create new bulk request, otherwise retry next time\n-        bulkRequest = new BulkRequest();\n+        bulkRequest = new ArrayList<>();\n       }\n     }\n \n     return success;\n   }\n \n-  private BulkResponse exportBulk() throws IOException {\n+  private boolean exportBulk() throws IOException {\n     try (final Histogram.Timer timer = metrics.measureFlushDuration()) {\n-      return client.bulk(bulkRequest, RequestOptions.DEFAULT);\n-    }\n-  }\n+      final var request = new Request(\"POST\", \"/_bulk\");\n+      request.setJsonEntity(String.join(\"\\n\", bulkRequest) + \"\\n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3a0ea52e5f00e85bd245ee850a3ba6bda5102ab"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI1MzEyNA==", "bodyText": "Perhaps it cannot occur here, but on line 110 you catch the potentially thrown IOException. It feels like the same thing might happen here.", "url": "https://github.com/camunda-cloud/zeebe/pull/4551#discussion_r427253124", "createdAt": "2020-05-19T12:12:50Z", "author": {"login": "korthout"}, "path": "exporters/elasticsearch-exporter/src/main/java/io/zeebe/exporter/ElasticsearchClient.java", "diffHunk": "@@ -179,37 +181,42 @@ public boolean putIndexTemplate(\n     template.put(\"index_patterns\", Collections.singletonList(templateName + INDEX_DELIMITER + \"*\"));\n \n     // update alias in template in case it was changed in configuration\n-    template.put(\"aliases\", Collections.singletonMap(aliasName, Collections.EMPTY_MAP));\n-\n-    final PutIndexTemplateRequest request =\n-        new PutIndexTemplateRequest(templateName).source(template);\n+    template.put(\"aliases\", Collections.singletonMap(aliasName, Collections.emptyMap()));\n \n-    return putIndexTemplate(request);\n+    return putIndexTemplate(templateName, template);\n   }\n \n   /** @return true if request was acknowledged */\n-  private boolean putIndexTemplate(final PutIndexTemplateRequest putIndexTemplateRequest) {\n+  private boolean putIndexTemplate(final String templateName, final Object body) {\n     try {\n-      return client\n-          .indices()\n-          .putTemplate(putIndexTemplateRequest, RequestOptions.DEFAULT)\n-          .isAcknowledged();\n+      final var request = new Request(\"PUT\", \"/_template/\" + templateName);\n+      request.addParameter(\"include_type_name\", \"true\");\n+      request.setJsonEntity(MAPPER.writeValueAsString(body));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3a0ea52e5f00e85bd245ee850a3ba6bda5102ab"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI1NDY0MA==", "bodyText": "Oh wait, I'm mistaken, the catch for this exception occurs already on line 205. Nevermind", "url": "https://github.com/camunda-cloud/zeebe/pull/4551#discussion_r427254640", "createdAt": "2020-05-19T12:15:28Z", "author": {"login": "korthout"}, "path": "exporters/elasticsearch-exporter/src/main/java/io/zeebe/exporter/ElasticsearchClient.java", "diffHunk": "@@ -179,37 +181,42 @@ public boolean putIndexTemplate(\n     template.put(\"index_patterns\", Collections.singletonList(templateName + INDEX_DELIMITER + \"*\"));\n \n     // update alias in template in case it was changed in configuration\n-    template.put(\"aliases\", Collections.singletonMap(aliasName, Collections.EMPTY_MAP));\n-\n-    final PutIndexTemplateRequest request =\n-        new PutIndexTemplateRequest(templateName).source(template);\n+    template.put(\"aliases\", Collections.singletonMap(aliasName, Collections.emptyMap()));\n \n-    return putIndexTemplate(request);\n+    return putIndexTemplate(templateName, template);\n   }\n \n   /** @return true if request was acknowledged */\n-  private boolean putIndexTemplate(final PutIndexTemplateRequest putIndexTemplateRequest) {\n+  private boolean putIndexTemplate(final String templateName, final Object body) {\n     try {\n-      return client\n-          .indices()\n-          .putTemplate(putIndexTemplateRequest, RequestOptions.DEFAULT)\n-          .isAcknowledged();\n+      final var request = new Request(\"PUT\", \"/_template/\" + templateName);\n+      request.addParameter(\"include_type_name\", \"true\");\n+      request.setJsonEntity(MAPPER.writeValueAsString(body));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI1MzEyNA=="}, "originalCommit": {"oid": "f3a0ea52e5f00e85bd245ee850a3ba6bda5102ab"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI1NDk5Nw==", "bodyText": "I'm wondering whether this should be warn log or an ElasticsearchExporterException.", "url": "https://github.com/camunda-cloud/zeebe/pull/4551#discussion_r427254997", "createdAt": "2020-05-19T12:16:05Z", "author": {"login": "korthout"}, "path": "exporters/elasticsearch-exporter/src/main/java/io/zeebe/exporter/ElasticsearchClient.java", "diffHunk": "@@ -179,37 +181,42 @@ public boolean putIndexTemplate(\n     template.put(\"index_patterns\", Collections.singletonList(templateName + INDEX_DELIMITER + \"*\"));\n \n     // update alias in template in case it was changed in configuration\n-    template.put(\"aliases\", Collections.singletonMap(aliasName, Collections.EMPTY_MAP));\n-\n-    final PutIndexTemplateRequest request =\n-        new PutIndexTemplateRequest(templateName).source(template);\n+    template.put(\"aliases\", Collections.singletonMap(aliasName, Collections.emptyMap()));\n \n-    return putIndexTemplate(request);\n+    return putIndexTemplate(templateName, template);\n   }\n \n   /** @return true if request was acknowledged */\n-  private boolean putIndexTemplate(final PutIndexTemplateRequest putIndexTemplateRequest) {\n+  private boolean putIndexTemplate(final String templateName, final Object body) {\n     try {\n-      return client\n-          .indices()\n-          .putTemplate(putIndexTemplateRequest, RequestOptions.DEFAULT)\n-          .isAcknowledged();\n+      final var request = new Request(\"PUT\", \"/_template/\" + templateName);\n+      request.addParameter(\"include_type_name\", \"true\");\n+      request.setJsonEntity(MAPPER.writeValueAsString(body));\n+\n+      final var response = client.performRequest(request);\n+      final var statusLine = response.getStatusLine();\n+      final var status = statusLine.getStatusCode();\n+      if (status >= 400) {\n+        log.warn(\"Failed to put index template {}\", statusLine.getReasonPhrase());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3a0ea52e5f00e85bd245ee850a3ba6bda5102ab"}, "originalPosition": 195}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI3MTE0MA==", "bodyText": "Even though this is just a test class, we should set a good example and use password.toCharArray() here instead of password (as a String), to set a good example of how to deal with passwords in Java code. The array should also be cleared from memory after using.", "url": "https://github.com/camunda-cloud/zeebe/pull/4551#discussion_r427271140", "createdAt": "2020-05-19T12:42:58Z", "author": {"login": "korthout"}, "path": "exporters/elasticsearch-exporter/src/test/java/io/zeebe/exporter/util/ElasticsearchContainer.java", "diffHunk": "@@ -152,27 +148,22 @@ protected void configure() {\n   }\n \n   private void setupUser() {\n-    final User user = new User(username, Collections.singleton(\"zeebe-exporter\"));\n+    final var request = new Request(\"POST\", \"/_xpack/security/user/\" + username);\n+    final var body = Map.of(\"roles\", Collections.singleton(\"zeebe-exporter\"), \"password\", password);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3a0ea52e5f00e85bd245ee850a3ba6bda5102ab"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTM5ODY0", "url": "https://github.com/camunda-cloud/zeebe/pull/4551#pullrequestreview-414539864", "createdAt": "2020-05-19T15:01:48Z", "commit": {"oid": "b504db11512664fe586f2c8ab06559abab984954"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6740ce3e01a3cfafbf581018a7ee051723318345", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/6740ce3e01a3cfafbf581018a7ee051723318345", "committedDate": "2020-05-19T15:19:24Z", "message": "chore(exporters/elasticsearch-exporter): remove high level rest client\n\n- replaces the high level rest client by the low level rest client\n- removes several elastic search dependencies"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "71040f1213714c1f16f79f6ec06012f70f102838", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/71040f1213714c1f16f79f6ec06012f70f102838", "committedDate": "2020-05-19T15:17:46Z", "message": "chore(exporters/elasticsearch-exporter): correct handling of put index template response"}, "afterCommit": {"oid": "6740ce3e01a3cfafbf581018a7ee051723318345", "author": {"user": {"login": "npepinpe", "name": "Nicolas Pepin-Perreault"}}, "url": "https://github.com/camunda-cloud/zeebe/commit/6740ce3e01a3cfafbf581018a7ee051723318345", "committedDate": "2020-05-19T15:19:24Z", "message": "chore(exporters/elasticsearch-exporter): remove high level rest client\n\n- replaces the high level rest client by the low level rest client\n- removes several elastic search dependencies"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTU3OTQ0", "url": "https://github.com/camunda-cloud/zeebe/pull/4551#pullrequestreview-414557944", "createdAt": "2020-05-19T15:20:05Z", "commit": {"oid": "71040f1213714c1f16f79f6ec06012f70f102838"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2830, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}