{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NzA5ODI0", "number": 6011, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzoxNzoxNFrOFFbxQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzoxNzoxNFrOFFbxQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjQyMTc3OnYy", "diffSide": "RIGHT", "path": "gateway/src/test/java/io/zeebe/gateway/topology/TopologyUpdateTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzoxNzoxNFrOIF8R9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjozMTowNlrOIGIigQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwMTQyOA==", "bodyText": "Topology does not have partition health in this version. You can remove this test.", "url": "https://github.com/camunda-cloud/zeebe/pull/6011#discussion_r543101428", "createdAt": "2020-12-15T07:17:14Z", "author": {"login": "deepthidevaki"}, "path": "gateway/src/test/java/io/zeebe/gateway/topology/TopologyUpdateTest.java", "diffHunk": "@@ -174,6 +177,52 @@ public void shouldUpdateTopologyOnBrokerRemoveAndDirectlyRejoin() {\n     assertThat(topologyManager.getTopology().getLeaderForPartition(1)).isEqualTo(leaderId);\n   }\n \n+  @Test\n+  public void shouldUpdateTopologyOnPartitionHealth() {\n+    final int brokerId = 0;\n+    final int partition = 0;\n+    final BrokerInfo broker = createBroker(brokerId);\n+    broker.setPartitionHealthy(partition);\n+    topologyManager.event(createMemberAddedEvent(broker));\n+    waitUntil(() -> topologyManager.getTopology() != null);\n+    assertThat(topologyManager.getTopology().isPartitionHealthy(brokerId, partition)).isTrue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c526bf632639f29985c6a9c6fae47c96348745ff"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE4MDIyNw==", "bodyText": "I'm surprised the cherry pick included this test as well, I don't think I had added it as part of the original PR? \ud83e\udd14", "url": "https://github.com/camunda-cloud/zeebe/pull/6011#discussion_r543180227", "createdAt": "2020-12-15T09:26:22Z", "author": {"login": "npepinpe"}, "path": "gateway/src/test/java/io/zeebe/gateway/topology/TopologyUpdateTest.java", "diffHunk": "@@ -174,6 +177,52 @@ public void shouldUpdateTopologyOnBrokerRemoveAndDirectlyRejoin() {\n     assertThat(topologyManager.getTopology().getLeaderForPartition(1)).isEqualTo(leaderId);\n   }\n \n+  @Test\n+  public void shouldUpdateTopologyOnPartitionHealth() {\n+    final int brokerId = 0;\n+    final int partition = 0;\n+    final BrokerInfo broker = createBroker(brokerId);\n+    broker.setPartitionHealthy(partition);\n+    topologyManager.event(createMemberAddedEvent(broker));\n+    waitUntil(() -> topologyManager.getTopology() != null);\n+    assertThat(topologyManager.getTopology().isPartitionHealthy(brokerId, partition)).isTrue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwMTQyOA=="}, "originalCommit": {"oid": "c526bf632639f29985c6a9c6fae47c96348745ff"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMwMjI3Mw==", "bodyText": "I have also seen that behavior before. This https://stackoverflow.com/a/19001323 explains it. I did not expect this semantics of cherry-pick.", "url": "https://github.com/camunda-cloud/zeebe/pull/6011#discussion_r543302273", "createdAt": "2020-12-15T12:31:06Z", "author": {"login": "deepthidevaki"}, "path": "gateway/src/test/java/io/zeebe/gateway/topology/TopologyUpdateTest.java", "diffHunk": "@@ -174,6 +177,52 @@ public void shouldUpdateTopologyOnBrokerRemoveAndDirectlyRejoin() {\n     assertThat(topologyManager.getTopology().getLeaderForPartition(1)).isEqualTo(leaderId);\n   }\n \n+  @Test\n+  public void shouldUpdateTopologyOnPartitionHealth() {\n+    final int brokerId = 0;\n+    final int partition = 0;\n+    final BrokerInfo broker = createBroker(brokerId);\n+    broker.setPartitionHealthy(partition);\n+    topologyManager.event(createMemberAddedEvent(broker));\n+    waitUntil(() -> topologyManager.getTopology() != null);\n+    assertThat(topologyManager.getTopology().isPartitionHealthy(brokerId, partition)).isTrue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwMTQyOA=="}, "originalCommit": {"oid": "c526bf632639f29985c6a9c6fae47c96348745ff"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 41, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}