{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNTU0OTUx", "number": 5556, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjozNDoxOVrOEsB1zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjo0NToxOFrOEsCE9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjAyOTU4OnYy", "diffSide": "RIGHT", "path": "atomix/cluster/src/main/java/io/atomix/raft/cluster/impl/RaftMemberContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjozNDoxOVrOHfHyXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzoxMzozMlrOHfJJNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5NTQ4NQ==", "bodyText": "Nit: maybe we can call appending instead inFlightAppendCount? Just from the name, I kind of expected it to be a boolean flag \ud83d\ude05 I know it was already like this, but if we're already changing this code... \ud83d\udc40", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502395485", "createdAt": "2020-10-09T12:34:19Z", "author": {"login": "npepinpe"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/cluster/impl/RaftMemberContext.java", "diffHunk": "@@ -96,8 +100,9 @@ public void resetState(final RaftLog log) {\n   public boolean canAppend() {\n     return appending == 0\n         || (appendSucceeded\n-            && appending < MAX_APPENDS\n-            && System.currentTimeMillis() - (timeStats.getMean() / MAX_APPENDS) >= appendTime);\n+            && appending < maxAppendsPerMember", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQxNzcxNg==", "bodyText": "\ud83d\ude06 yeah I can change that as well. I just replaced the occurrences tbh", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502417716", "createdAt": "2020-10-09T13:13:32Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/cluster/impl/RaftMemberContext.java", "diffHunk": "@@ -96,8 +100,9 @@ public void resetState(final RaftLog log) {\n   public boolean canAppend() {\n     return appending == 0\n         || (appendSucceeded\n-            && appending < MAX_APPENDS\n-            && System.currentTimeMillis() - (timeStats.getMean() / MAX_APPENDS) >= appendTime);\n+            && appending < maxAppendsPerMember", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5NTQ4NQ=="}, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjA1Mjg1OnYy", "diffSide": "RIGHT", "path": "atomix/cluster/src/main/java/io/atomix/raft/cluster/impl/RaftMemberContext.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjo0MDo1N1rOHfIAFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzoyODo0M1rOHfJuGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5ODk5Nw==", "bodyText": "Random question, I know this has nothing to do with your PR, but...I found this kind of hard to read. So we can append if the last append succeeded, the current append count is less than max appends, and the time since the last append is greater than or equal to the mean of the 8 observed last append latencies divided by the max number of appends? Did I read that right?", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502398997", "createdAt": "2020-10-09T12:40:57Z", "author": {"login": "npepinpe"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/cluster/impl/RaftMemberContext.java", "diffHunk": "@@ -96,8 +100,9 @@ public void resetState(final RaftLog log) {\n   public boolean canAppend() {\n     return appending == 0\n         || (appendSucceeded\n-            && appending < MAX_APPENDS\n-            && System.currentTimeMillis() - (timeStats.getMean() / MAX_APPENDS) >= appendTime);\n+            && appending < maxAppendsPerMember\n+            && System.currentTimeMillis() - (timeStats.getMean() / maxAppendsPerMember)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQxOTk5OQ==", "bodyText": "Could be I not really get the last part tbh", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502419999", "createdAt": "2020-10-09T13:17:11Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/cluster/impl/RaftMemberContext.java", "diffHunk": "@@ -96,8 +100,9 @@ public void resetState(final RaftLog log) {\n   public boolean canAppend() {\n     return appending == 0\n         || (appendSucceeded\n-            && appending < MAX_APPENDS\n-            && System.currentTimeMillis() - (timeStats.getMean() / MAX_APPENDS) >= appendTime);\n+            && appending < maxAppendsPerMember\n+            && System.currentTimeMillis() - (timeStats.getMean() / maxAppendsPerMember)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5ODk5Nw=="}, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQyNDY1MA==", "bodyText": "So yes it seems it calculates the latencies by hand and tries to only send a new append when we are over the avg latency - weird", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502424650", "createdAt": "2020-10-09T13:24:53Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/cluster/impl/RaftMemberContext.java", "diffHunk": "@@ -96,8 +100,9 @@ public void resetState(final RaftLog log) {\n   public boolean canAppend() {\n     return appending == 0\n         || (appendSucceeded\n-            && appending < MAX_APPENDS\n-            && System.currentTimeMillis() - (timeStats.getMean() / MAX_APPENDS) >= appendTime);\n+            && appending < maxAppendsPerMember\n+            && System.currentTimeMillis() - (timeStats.getMean() / maxAppendsPerMember)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5ODk5Nw=="}, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQyNDc3NQ==", "bodyText": "wasnt aware of that", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502424775", "createdAt": "2020-10-09T13:25:05Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/cluster/impl/RaftMemberContext.java", "diffHunk": "@@ -96,8 +100,9 @@ public void resetState(final RaftLog log) {\n   public boolean canAppend() {\n     return appending == 0\n         || (appendSucceeded\n-            && appending < MAX_APPENDS\n-            && System.currentTimeMillis() - (timeStats.getMean() / MAX_APPENDS) >= appendTime);\n+            && appending < maxAppendsPerMember\n+            && System.currentTimeMillis() - (timeStats.getMean() / maxAppendsPerMember)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5ODk5Nw=="}, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQyNTE3Mw==", "bodyText": "Could we just send more append and the follower could also just ack the last one? then we know it also received the previous?", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502425173", "createdAt": "2020-10-09T13:25:39Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/cluster/impl/RaftMemberContext.java", "diffHunk": "@@ -96,8 +100,9 @@ public void resetState(final RaftLog log) {\n   public boolean canAppend() {\n     return appending == 0\n         || (appendSucceeded\n-            && appending < MAX_APPENDS\n-            && System.currentTimeMillis() - (timeStats.getMean() / MAX_APPENDS) >= appendTime);\n+            && appending < maxAppendsPerMember\n+            && System.currentTimeMillis() - (timeStats.getMean() / maxAppendsPerMember)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5ODk5Nw=="}, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQyNTk3Mw==", "bodyText": "So it sort of tries to do flow control by not sending appends faster than what the other node has managed to acknowledge, I guess. Wouldn't this potentially calculate though a high average? Let's say the follower has a slow spike, if we only send based on the rolling average, would that really go lower over time? Probably not to the optimal value", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502425973", "createdAt": "2020-10-09T13:26:53Z", "author": {"login": "npepinpe"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/cluster/impl/RaftMemberContext.java", "diffHunk": "@@ -96,8 +100,9 @@ public void resetState(final RaftLog log) {\n   public boolean canAppend() {\n     return appending == 0\n         || (appendSucceeded\n-            && appending < MAX_APPENDS\n-            && System.currentTimeMillis() - (timeStats.getMean() / MAX_APPENDS) >= appendTime);\n+            && appending < maxAppendsPerMember\n+            && System.currentTimeMillis() - (timeStats.getMean() / maxAppendsPerMember)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5ODk5Nw=="}, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQyNjQ4MA==", "bodyText": "Yes, I think in the long run we want to do an async pipeline where the follower also acknowledges the last write it flushed (with async flush, not sync) anyway.", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502426480", "createdAt": "2020-10-09T13:27:38Z", "author": {"login": "npepinpe"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/cluster/impl/RaftMemberContext.java", "diffHunk": "@@ -96,8 +100,9 @@ public void resetState(final RaftLog log) {\n   public boolean canAppend() {\n     return appending == 0\n         || (appendSucceeded\n-            && appending < MAX_APPENDS\n-            && System.currentTimeMillis() - (timeStats.getMean() / MAX_APPENDS) >= appendTime);\n+            && appending < maxAppendsPerMember\n+            && System.currentTimeMillis() - (timeStats.getMean() / maxAppendsPerMember)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5ODk5Nw=="}, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQyNzE2MQ==", "bodyText": "It only evaluates the last 8 values calcs the mean of that and then divides that by 2 to get the avg ? Hm Idk we probably need to experiment on this thing or just remove it ^^", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502427161", "createdAt": "2020-10-09T13:28:43Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/cluster/impl/RaftMemberContext.java", "diffHunk": "@@ -96,8 +100,9 @@ public void resetState(final RaftLog log) {\n   public boolean canAppend() {\n     return appending == 0\n         || (appendSucceeded\n-            && appending < MAX_APPENDS\n-            && System.currentTimeMillis() - (timeStats.getMean() / MAX_APPENDS) >= appendTime);\n+            && appending < maxAppendsPerMember\n+            && System.currentTimeMillis() - (timeStats.getMean() / maxAppendsPerMember)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5ODk5Nw=="}, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjA2MzU4OnYy", "diffSide": "RIGHT", "path": "atomix/cluster/src/main/java/io/atomix/raft/partition/RaftPartitionGroupConfig.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjo0Mzo1OFrOHfIGgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzo0MTowMFrOHfKL9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQwMDY0Mw==", "bodyText": "iirc, these will get serialized by kryo right? just to be safe, this should be fine from now on with the new compatible serializer, but did we test this? i guess it only breaks rolling upgrade, which is broken now anyway though \ud83e\udd14", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502400643", "createdAt": "2020-10-09T12:43:58Z", "author": {"login": "npepinpe"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/partition/RaftPartitionGroupConfig.java", "diffHunk": "@@ -37,6 +37,8 @@\n   private Duration electionTimeout = DEFAULT_ELECTION_TIMEOUT;\n   private Duration heartbeatInterval = DEFAULT_HEARTBEAT_INTERVAL;\n   private RaftStorageConfig storageConfig = new RaftStorageConfig();\n+  private int maxAppendsPerFollower = 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQxNDQ3Ng==", "bodyText": "Tbh I always worry to touch the config and this is so stupid \ud83d\ude05 I can't tell what happens currently", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502414476", "createdAt": "2020-10-09T13:08:10Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/partition/RaftPartitionGroupConfig.java", "diffHunk": "@@ -37,6 +37,8 @@\n   private Duration electionTimeout = DEFAULT_ELECTION_TIMEOUT;\n   private Duration heartbeatInterval = DEFAULT_HEARTBEAT_INTERVAL;\n   private RaftStorageConfig storageConfig = new RaftStorageConfig();\n+  private int maxAppendsPerFollower = 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQwMDY0Mw=="}, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQzNDEzOA==", "bodyText": "@npepinpe do I need to do something here?", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502434138", "createdAt": "2020-10-09T13:39:58Z", "author": {"login": "Zelldon"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/partition/RaftPartitionGroupConfig.java", "diffHunk": "@@ -37,6 +37,8 @@\n   private Duration electionTimeout = DEFAULT_ELECTION_TIMEOUT;\n   private Duration heartbeatInterval = DEFAULT_HEARTBEAT_INTERVAL;\n   private RaftStorageConfig storageConfig = new RaftStorageConfig();\n+  private int maxAppendsPerFollower = 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQwMDY0Mw=="}, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQzNDgwNA==", "bodyText": "No it was just a question - I think it would be fine with the PR Miguel will merge with the new version serializer, where you can add new fields. @MiguelPires ?", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502434804", "createdAt": "2020-10-09T13:41:00Z", "author": {"login": "npepinpe"}, "path": "atomix/cluster/src/main/java/io/atomix/raft/partition/RaftPartitionGroupConfig.java", "diffHunk": "@@ -37,6 +37,8 @@\n   private Duration electionTimeout = DEFAULT_ELECTION_TIMEOUT;\n   private Duration heartbeatInterval = DEFAULT_HEARTBEAT_INTERVAL;\n   private RaftStorageConfig storageConfig = new RaftStorageConfig();\n+  private int maxAppendsPerFollower = 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQwMDY0Mw=="}, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjA2NjgzOnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/system/SystemContext.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjo0NDo1NFrOHfIIgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzo0Mzo1M1rOHfKTBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQwMTE1Mg==", "bodyText": "I guess we can write the real value instead of Integer.MAX_VALUE :)", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502401152", "createdAt": "2020-10-09T12:44:54Z", "author": {"login": "npepinpe"}, "path": "broker/src/main/java/io/zeebe/broker/system/SystemContext.java", "diffHunk": "@@ -34,6 +34,9 @@\n       \"Snapshot period %s needs to be larger then or equals to one minute.\";\n   private static final String MMAP_REPLICATION_ERROR_MSG =\n       \"Using memory mapped storage level is currently unsafe with replication enabled; if you wish to use replication, set useMmap flag to false (e.g. ZEEBE_BROKER_DATA_USEMMAP=false)\";\n+  private static final String MAX_BATCH_SIZE_ERROR_MSG =\n+      \"Expected to have an append batch size maximum which is non negative and smaller then Integer.MAX_VALUE, but was '%s'.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQxNjMwNQ==", "bodyText": "hm yeah \ud83e\udd37", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502416305", "createdAt": "2020-10-09T13:11:07Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/SystemContext.java", "diffHunk": "@@ -34,6 +34,9 @@\n       \"Snapshot period %s needs to be larger then or equals to one minute.\";\n   private static final String MMAP_REPLICATION_ERROR_MSG =\n       \"Using memory mapped storage level is currently unsafe with replication enabled; if you wish to use replication, set useMmap flag to false (e.g. ZEEBE_BROKER_DATA_USEMMAP=false)\";\n+  private static final String MAX_BATCH_SIZE_ERROR_MSG =\n+      \"Expected to have an append batch size maximum which is non negative and smaller then Integer.MAX_VALUE, but was '%s'.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQwMTE1Mg=="}, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQzNTkwMA==", "bodyText": "Actually I did this because I think it is more readable then 2147483647 and everyone knows what int max is \ud83d\ude05 But I can change it", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502435900", "createdAt": "2020-10-09T13:42:45Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/SystemContext.java", "diffHunk": "@@ -34,6 +34,9 @@\n       \"Snapshot period %s needs to be larger then or equals to one minute.\";\n   private static final String MMAP_REPLICATION_ERROR_MSG =\n       \"Using memory mapped storage level is currently unsafe with replication enabled; if you wish to use replication, set useMmap flag to false (e.g. ZEEBE_BROKER_DATA_USEMMAP=false)\";\n+  private static final String MAX_BATCH_SIZE_ERROR_MSG =\n+      \"Expected to have an append batch size maximum which is non negative and smaller then Integer.MAX_VALUE, but was '%s'.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQwMTE1Mg=="}, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQzNjYxNA==", "bodyText": "I would add the value, since I'm not sure everyone knows what Integer.MAX_VALUE is (is it signed? unsigned? is it int32? int64? maybe they're not java devs \ud83e\udd37\u200d\u2642\ufe0f).", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502436614", "createdAt": "2020-10-09T13:43:53Z", "author": {"login": "npepinpe"}, "path": "broker/src/main/java/io/zeebe/broker/system/SystemContext.java", "diffHunk": "@@ -34,6 +34,9 @@\n       \"Snapshot period %s needs to be larger then or equals to one minute.\";\n   private static final String MMAP_REPLICATION_ERROR_MSG =\n       \"Using memory mapped storage level is currently unsafe with replication enabled; if you wish to use replication, set useMmap flag to false (e.g. ZEEBE_BROKER_DATA_USEMMAP=false)\";\n+  private static final String MAX_BATCH_SIZE_ERROR_MSG =\n+      \"Expected to have an append batch size maximum which is non negative and smaller then Integer.MAX_VALUE, but was '%s'.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQwMTE1Mg=="}, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjA2ODM4OnYy", "diffSide": "RIGHT", "path": "broker/src/main/java/io/zeebe/broker/system/SystemContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjo0NToxOFrOHfIJbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMzowOTo0OVrOHfJAlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQwMTM5MA==", "bodyText": "Any reason we validate just the batch size and not the max appends?", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502401390", "createdAt": "2020-10-09T12:45:18Z", "author": {"login": "npepinpe"}, "path": "broker/src/main/java/io/zeebe/broker/system/SystemContext.java", "diffHunk": "@@ -76,6 +79,12 @@ private void validateConfiguration() {\n       throw new IllegalArgumentException(String.format(NODE_ID_ERROR_MSG, nodeId, clusterSize));\n     }\n \n+    final var maxAppendBatchSize = cluster.getMaxAppendBatchSize();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQxNTUwOA==", "bodyText": "Actually I thought about it as well and just did it because it is the DataSize type where I need to have a smaller value then int max. Whether it is negative will be validated in the Atomix Building", "url": "https://github.com/camunda-cloud/zeebe/pull/5556#discussion_r502415508", "createdAt": "2020-10-09T13:09:49Z", "author": {"login": "Zelldon"}, "path": "broker/src/main/java/io/zeebe/broker/system/SystemContext.java", "diffHunk": "@@ -76,6 +79,12 @@ private void validateConfiguration() {\n       throw new IllegalArgumentException(String.format(NODE_ID_ERROR_MSG, nodeId, clusterSize));\n     }\n \n+    final var maxAppendBatchSize = cluster.getMaxAppendBatchSize();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQwMTM5MA=="}, "originalCommit": {"oid": "0504669f2f17311e6e446b6052b9f3e83b8f6d7c"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 196, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}