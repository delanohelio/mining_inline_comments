{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0OTY2MjI4", "number": 5336, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOTo0ODo0MlrOEjgz8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjo0ODo1OFrOEkZABg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjczMjAyOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/io/zeebe/engine/state/DefaultZeebeDbFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOTo0ODo0MlrOHR53TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOTo0ODo0MlrOHR53TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUzNTg4NA==", "bodyText": "I had to replace this global constant with a method to allow different ways of constructing the factory (for different tests). It is now replaced by a Singleton pattern", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r488535884", "createdAt": "2020-09-15T09:48:42Z", "author": {"login": "korthout"}, "path": "engine/src/main/java/io/zeebe/engine/state/DefaultZeebeDbFactory.java", "diffHunk": "@@ -11,34 +11,68 @@\n import io.zeebe.db.ZeebeDbFactory;\n import io.zeebe.db.impl.rocksdb.ZeebeRocksDBMetricExporter;\n import io.zeebe.db.impl.rocksdb.ZeebeRocksDbFactory;\n+import java.util.Properties;\n import java.util.function.BiFunction;\n \n public final class DefaultZeebeDbFactory {\n \n+  public static final BiFunction<String, ZeebeDb<ZbColumnFamilies>, ZeebeRocksDBMetricExporter>\n+      DEFAULT_DB_METRIC_EXPORTER_FACTORY =\n+          (partitionId, database) ->\n+              new ZeebeRocksDBMetricExporter<>(partitionId, database, ZbColumnFamilies.class);\n+  private static ZeebeDbFactory<ZbColumnFamilies> instance;\n+\n   /**\n-   * The default zeebe database factory, which is used in most of the places except for the\n+   * Returns the default zeebe database factory, which is used in most of the places except for the\n    * exporters.\n+   *\n+   * @return the created zeebe database factory\n    */\n-  public static final ZeebeDbFactory<ZbColumnFamilies> DEFAULT_DB_FACTORY =\n-      defaultFactory(ZbColumnFamilies.class);\n+  public static ZeebeDbFactory<ZbColumnFamilies> defaultFactory() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjczNDI4OnYy", "diffSide": "RIGHT", "path": "zb-db/src/main/java/io/zeebe/db/impl/rocksdb/ZeebeRocksDbFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOTo0OToyMlrOHR54vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOTo0OToyMlrOHR54vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUzNjI1NA==", "bodyText": "Here you'll find the main change to apply the column family options config.", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r488536254", "createdAt": "2020-09-15T09:49:22Z", "author": {"login": "korthout"}, "path": "zb-db/src/main/java/io/zeebe/db/impl/rocksdb/ZeebeRocksDbFactory.java", "diffHunk": "@@ -98,9 +111,28 @@ private ZeebeRocksDbFactory(final Class<ColumnFamilyType> columnFamilyTypeClass)\n     return columnFamilyDescriptors;\n   }\n \n-  private static ColumnFamilyOptions createColumnFamilyOptions() {\n-    // Options which are used on all column families\n-    return new ColumnFamilyOptions()\n-        .setCompactionPriority(CompactionPriority.OldestSmallestSeqFirst);\n+  /** @return Options which are used on all column families */\n+  public ColumnFamilyOptions createColumnFamilyOptions() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDg0NDg1OnYy", "diffSide": "RIGHT", "path": "dist/src/main/config/broker.standalone.yaml.template", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNjoyMjoxNlrOHSh0Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTo0NDoyN1rOHSo8UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE5MDQ5NA==", "bodyText": "Please add a link to possible configuration options and an example.", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489190494", "createdAt": "2020-09-16T06:22:16Z", "author": {"login": "deepthidevaki"}, "path": "dist/src/main/config/broker.standalone.yaml.template", "diffHunk": "@@ -200,6 +200,12 @@\n       # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DISKUSAGEMONITORINGINTERVAL\n       # diskUsageMonitoringInterval = 1s\n \n+      # database:\n+        # Specify custom column family options overwriting Zeebe's own defaults.\n+        # WARNING: This setting requires in-depth knowledge of Zeebe's embedded database.\n+        # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwNzIxNg==", "bodyText": "If the environment variable does not work as expected, we should remove them and document it here.", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489307216", "createdAt": "2020-09-16T09:44:27Z", "author": {"login": "deepthidevaki"}, "path": "dist/src/main/config/broker.standalone.yaml.template", "diffHunk": "@@ -200,6 +200,12 @@\n       # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DISKUSAGEMONITORINGINTERVAL\n       # diskUsageMonitoringInterval = 1s\n \n+      # database:\n+        # Specify custom column family options overwriting Zeebe's own defaults.\n+        # WARNING: This setting requires in-depth knowledge of Zeebe's embedded database.\n+        # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE5MDQ5NA=="}, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDkwMDQwOnYy", "diffSide": "RIGHT", "path": "dist/src/main/config/application.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNjo0MjozNFrOHSiVUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNjo0MjozNFrOHSiVUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE5ODkyOA==", "bodyText": "I wouldn't add it here because it is an advanced option. It is in the configuration templates. So that would be enough.", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489198928", "createdAt": "2020-09-16T06:42:34Z", "author": {"login": "deepthidevaki"}, "path": "dist/src/main/config/application.yaml", "diffHunk": "@@ -59,6 +59,12 @@ zeebe:\n       # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_SNAPSHOTPERIOD.\n       snapshotPeriod: 15m\n \n+      database:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDkxODY2OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/io/zeebe/engine/state/DefaultZeebeDbFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNjo0ODo1M1rOHSigsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzoxNDoyMlrOHSwOyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwMTg0Mw==", "bodyText": "Does Singleton pattern fits here? What if defaultFactory was called twice with different parameters?", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489201843", "createdAt": "2020-09-16T06:48:53Z", "author": {"login": "deepthidevaki"}, "path": "engine/src/main/java/io/zeebe/engine/state/DefaultZeebeDbFactory.java", "diffHunk": "@@ -11,34 +11,68 @@\n import io.zeebe.db.ZeebeDbFactory;\n import io.zeebe.db.impl.rocksdb.ZeebeRocksDBMetricExporter;\n import io.zeebe.db.impl.rocksdb.ZeebeRocksDbFactory;\n+import java.util.Properties;\n import java.util.function.BiFunction;\n \n public final class DefaultZeebeDbFactory {\n \n+  public static final BiFunction<String, ZeebeDb<ZbColumnFamilies>, ZeebeRocksDBMetricExporter>\n+      DEFAULT_DB_METRIC_EXPORTER_FACTORY =\n+          (partitionId, database) ->\n+              new ZeebeRocksDBMetricExporter<>(partitionId, database, ZbColumnFamilies.class);\n+  private static ZeebeDbFactory<ZbColumnFamilies> instance;\n+\n   /**\n-   * The default zeebe database factory, which is used in most of the places except for the\n+   * Returns the default zeebe database factory, which is used in most of the places except for the\n    * exporters.\n+   *\n+   * @return the created zeebe database factory\n    */\n-  public static final ZeebeDbFactory<ZbColumnFamilies> DEFAULT_DB_FACTORY =\n-      defaultFactory(ZbColumnFamilies.class);\n+  public static ZeebeDbFactory<ZbColumnFamilies> defaultFactory() {\n+    return defaultFactory(new Properties());\n+  }\n \n-  public static final BiFunction<String, ZeebeDb<ZbColumnFamilies>, ZeebeRocksDBMetricExporter>\n-      DEFAULT_DB_METRIC_EXPORTER_FACTORY =\n-          (partitionId, database) -> {\n-            return new ZeebeRocksDBMetricExporter<>(partitionId, database, ZbColumnFamilies.class);\n-          };\n+  /**\n+   * Returns the default zeebe database factory, which is used in most of the places except for the\n+   * exporters.\n+   *\n+   * @param userProvidedColumnFamilyOptions additional column family options\n+   * @return the created zeebe database factory\n+   */\n+  public static synchronized ZeebeDbFactory<ZbColumnFamilies> defaultFactory(\n+      final Properties userProvidedColumnFamilyOptions) {\n+    if (instance == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQyNjYzMw==", "bodyText": "You're right. I thought about it a bit before. The idea I had then was to make sure we wouldn't construct multiple factories, similar to the global constant. This might've made sense in case tests re-used the same factory, but I don't think any do. The method is not called twice, but when it is it shouldn't be a big deal. I'll just allow creating a new factory for every call.", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489426633", "createdAt": "2020-09-16T13:14:22Z", "author": {"login": "korthout"}, "path": "engine/src/main/java/io/zeebe/engine/state/DefaultZeebeDbFactory.java", "diffHunk": "@@ -11,34 +11,68 @@\n import io.zeebe.db.ZeebeDbFactory;\n import io.zeebe.db.impl.rocksdb.ZeebeRocksDBMetricExporter;\n import io.zeebe.db.impl.rocksdb.ZeebeRocksDbFactory;\n+import java.util.Properties;\n import java.util.function.BiFunction;\n \n public final class DefaultZeebeDbFactory {\n \n+  public static final BiFunction<String, ZeebeDb<ZbColumnFamilies>, ZeebeRocksDBMetricExporter>\n+      DEFAULT_DB_METRIC_EXPORTER_FACTORY =\n+          (partitionId, database) ->\n+              new ZeebeRocksDBMetricExporter<>(partitionId, database, ZbColumnFamilies.class);\n+  private static ZeebeDbFactory<ZbColumnFamilies> instance;\n+\n   /**\n-   * The default zeebe database factory, which is used in most of the places except for the\n+   * Returns the default zeebe database factory, which is used in most of the places except for the\n    * exporters.\n+   *\n+   * @return the created zeebe database factory\n    */\n-  public static final ZeebeDbFactory<ZbColumnFamilies> DEFAULT_DB_FACTORY =\n-      defaultFactory(ZbColumnFamilies.class);\n+  public static ZeebeDbFactory<ZbColumnFamilies> defaultFactory() {\n+    return defaultFactory(new Properties());\n+  }\n \n-  public static final BiFunction<String, ZeebeDb<ZbColumnFamilies>, ZeebeRocksDBMetricExporter>\n-      DEFAULT_DB_METRIC_EXPORTER_FACTORY =\n-          (partitionId, database) -> {\n-            return new ZeebeRocksDBMetricExporter<>(partitionId, database, ZbColumnFamilies.class);\n-          };\n+  /**\n+   * Returns the default zeebe database factory, which is used in most of the places except for the\n+   * exporters.\n+   *\n+   * @param userProvidedColumnFamilyOptions additional column family options\n+   * @return the created zeebe database factory\n+   */\n+  public static synchronized ZeebeDbFactory<ZbColumnFamilies> defaultFactory(\n+      final Properties userProvidedColumnFamilyOptions) {\n+    if (instance == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwMTg0Mw=="}, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTAzMzc5OnYy", "diffSide": "RIGHT", "path": "zb-db/src/test/java/io/zeebe/db/impl/rocksdb/ZeebeRocksDbFactoryTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzoyNDozNVrOHSjmBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzoyNDozNVrOHSjmBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIxOTU4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void columnFamilyOptionsCanBeOverwritten() {\n          \n          \n            \n              public void shouldOverwriteDefaultColumnFamilyOptions() {", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489219589", "createdAt": "2020-09-16T07:24:35Z", "author": {"login": "deepthidevaki"}, "path": "zb-db/src/test/java/io/zeebe/db/impl/rocksdb/ZeebeRocksDbFactoryTest.java", "diffHunk": "@@ -58,4 +62,32 @@ public void shouldCreateTwoNewDbs() throws Exception {\n     firstDb.close();\n     secondDb.close();\n   }\n+\n+  @Test\n+  public void columnFamilyOptionsCanBeOverwritten() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTEzNzAzOnYy", "diffSide": "RIGHT", "path": "dist/src/main/config/broker.yaml.template", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzo1MjoxNlrOHSkk-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzo1MjoxNlrOHSkk-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIzNTcwNA==", "bodyText": "Same as above. Please add a link to possible configuration options and an example.", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489235704", "createdAt": "2020-09-16T07:52:16Z", "author": {"login": "deepthidevaki"}, "path": "dist/src/main/config/broker.yaml.template", "diffHunk": "@@ -160,6 +160,12 @@\n       # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DISKUSAGEMONITORINGINTERVAL\n       # diskUsageMonitoringInterval = 1s\n \n+      # database:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTE0NTQyOnYy", "diffSide": "RIGHT", "path": "broker/src/test/java/io/zeebe/broker/system/configuration/DatabaseCfgTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzo1NDozM1rOHSkqSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzo1NDozM1rOHSkqSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIzNzA2NA==", "bodyText": "May be assert other entries also.", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489237064", "createdAt": "2020-09-16T07:54:33Z", "author": {"login": "deepthidevaki"}, "path": "broker/src/test/java/io/zeebe/broker/system/configuration/DatabaseCfgTest.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.configuration;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.junit.Test;\n+\n+public final class DatabaseCfgTest {\n+\n+  public final Map<String, String> environment = new HashMap<>();\n+\n+  @Test\n+  public void shouldSetColumnFamilyOptionsConfig() {\n+    // when\n+    final BrokerCfg cfg = TestConfigReader.readConfig(\"database-cfg\", environment);\n+    final var zeebeDb = cfg.getData().getDatabase();\n+\n+    // then\n+    assertThat(zeebeDb.getColumnFamilyOptions()).containsEntry(\"foo_foo\", \"bar\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4834935cd91b16530631b68d4ed6e13a7262b9b"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTg0MDU1OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/io/zeebe/engine/state/DefaultZeebeDbFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjoxMzo0N1rOHTS3NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjoxMzo0N1rOHTS3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk5NDAzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static synchronized ZeebeDbFactory<ZbColumnFamilies> defaultFactory(\n          \n          \n            \n              public static ZeebeDbFactory<ZbColumnFamilies> defaultFactory(", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r489994036", "createdAt": "2020-09-17T06:13:47Z", "author": {"login": "deepthidevaki"}, "path": "engine/src/main/java/io/zeebe/engine/state/DefaultZeebeDbFactory.java", "diffHunk": "@@ -11,34 +11,64 @@\n import io.zeebe.db.ZeebeDbFactory;\n import io.zeebe.db.impl.rocksdb.ZeebeRocksDBMetricExporter;\n import io.zeebe.db.impl.rocksdb.ZeebeRocksDbFactory;\n+import java.util.Properties;\n import java.util.function.BiFunction;\n \n public final class DefaultZeebeDbFactory {\n \n+  public static final BiFunction<String, ZeebeDb<ZbColumnFamilies>, ZeebeRocksDBMetricExporter>\n+      DEFAULT_DB_METRIC_EXPORTER_FACTORY =\n+          (partitionId, database) ->\n+              new ZeebeRocksDBMetricExporter<>(partitionId, database, ZbColumnFamilies.class);\n+\n   /**\n-   * The default zeebe database factory, which is used in most of the places except for the\n+   * Returns the default zeebe database factory, which is used in most of the places except for the\n    * exporters.\n+   *\n+   * @return the created zeebe database factory\n    */\n-  public static final ZeebeDbFactory<ZbColumnFamilies> DEFAULT_DB_FACTORY =\n-      defaultFactory(ZbColumnFamilies.class);\n+  public static ZeebeDbFactory<ZbColumnFamilies> defaultFactory() {\n+    return defaultFactory(new Properties());\n+  }\n \n-  public static final BiFunction<String, ZeebeDb<ZbColumnFamilies>, ZeebeRocksDBMetricExporter>\n-      DEFAULT_DB_METRIC_EXPORTER_FACTORY =\n-          (partitionId, database) -> {\n-            return new ZeebeRocksDBMetricExporter<>(partitionId, database, ZbColumnFamilies.class);\n-          };\n+  /**\n+   * Returns the default zeebe database factory, which is used in most of the places except for the\n+   * exporters.\n+   *\n+   * @param userProvidedColumnFamilyOptions additional column family options\n+   * @return the created zeebe database factory\n+   */\n+  public static synchronized ZeebeDbFactory<ZbColumnFamilies> defaultFactory(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beda16d3be821d74391ecbd1caee86c12f1c7716"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTkzNzk4OnYy", "diffSide": "RIGHT", "path": "dist/src/main/config/broker.yaml.template", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjo0ODo1OFrOHTTxOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOToyMjo1MVrOHTZTsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwODg5MA==", "bodyText": "Setting the environment variable does not follow the normal pattern here,  right? That is ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS_WRITE_BUFFER_SIZE does not work here. So should we just say that don't use environment variable? Otherwise we should document how to use env variable - eg:- ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS=\"write_buffer_size=4\" .  I would prefer just saying please don't use env variable. Wdyt?", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r490008890", "createdAt": "2020-09-17T06:48:58Z", "author": {"login": "deepthidevaki"}, "path": "dist/src/main/config/broker.yaml.template", "diffHunk": "@@ -160,6 +160,18 @@\n       # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DISKUSAGEMONITORINGINTERVAL\n       # diskUsageMonitoringInterval = 1s\n \n+      # database:\n+        # Specify custom column family options overwriting Zeebe's own defaults.\n+        # WARNING: This setting requires in-depth knowledge of Zeebe's embedded database!\n+        # The expected property key names and values are derived from RocksDB's C implementation,\n+        # and are not limited to the provided examples below. Please look in RocksDB's SCM repo\n+        # for the files: `cf_options.h` and `options_helper.cc`. This setting can also be overridden\n+        # using the environment variable ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS.\n+        # However, it does not seem possible to provide multiple column family options that way.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beda16d3be821d74391ecbd1caee86c12f1c7716"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA0NTk4OA==", "bodyText": "I've done some further testing and found that:\nexport ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS_COMPACTION_PRI=\"kOldestLargestSeqFirst\"\nexport ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS_WRITE_BUFFER_SIZE=8388608\n\nresults in:\n    \"database\" : {\n      \"columnFamilyOptions\" : {\n        \"compaction.pri\" : \"kOldestLargestSeqFirst\",\n        \"write.buffer.size\" : \"8388608\"\n      }\n    },\n\nSo the key's have dots instead of underscores in their name.\nWe could consider implementing a character replacement for the . (dot) char to _ (underscore) in the getColumnFamilyOptions() method of the DatabaseCfg class. That would make it possible to define the options through env vars, although specifically setting ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS=\"x=y\" also allows to set 1 option (but not more). If that seems to much complexity we can just comment not to use env vars.\nWhat do you think?", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r490045988", "createdAt": "2020-09-17T07:58:00Z", "author": {"login": "korthout"}, "path": "dist/src/main/config/broker.yaml.template", "diffHunk": "@@ -160,6 +160,18 @@\n       # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DISKUSAGEMONITORINGINTERVAL\n       # diskUsageMonitoringInterval = 1s\n \n+      # database:\n+        # Specify custom column family options overwriting Zeebe's own defaults.\n+        # WARNING: This setting requires in-depth knowledge of Zeebe's embedded database!\n+        # The expected property key names and values are derived from RocksDB's C implementation,\n+        # and are not limited to the provided examples below. Please look in RocksDB's SCM repo\n+        # for the files: `cf_options.h` and `options_helper.cc`. This setting can also be overridden\n+        # using the environment variable ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS.\n+        # However, it does not seem possible to provide multiple column family options that way.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwODg5MA=="}, "originalCommit": {"oid": "beda16d3be821d74391ecbd1caee86c12f1c7716"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA4OTcxOQ==", "bodyText": "That's a good idea. But I wouldn't insist on doing it. If we want we can do it in a separate PR. I suggest that you create an issue for it, and we can discuss it during triage.", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r490089719", "createdAt": "2020-09-17T09:07:07Z", "author": {"login": "deepthidevaki"}, "path": "dist/src/main/config/broker.yaml.template", "diffHunk": "@@ -160,6 +160,18 @@\n       # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DISKUSAGEMONITORINGINTERVAL\n       # diskUsageMonitoringInterval = 1s\n \n+      # database:\n+        # Specify custom column family options overwriting Zeebe's own defaults.\n+        # WARNING: This setting requires in-depth knowledge of Zeebe's embedded database!\n+        # The expected property key names and values are derived from RocksDB's C implementation,\n+        # and are not limited to the provided examples below. Please look in RocksDB's SCM repo\n+        # for the files: `cf_options.h` and `options_helper.cc`. This setting can also be overridden\n+        # using the environment variable ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS.\n+        # However, it does not seem possible to provide multiple column family options that way.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwODg5MA=="}, "originalCommit": {"oid": "beda16d3be821d74391ecbd1caee86c12f1c7716"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA5NTQ4MA==", "bodyText": "In that case, I'll add a comment now to not use env vars and create an issue to discuss a fix.", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r490095480", "createdAt": "2020-09-17T09:16:03Z", "author": {"login": "korthout"}, "path": "dist/src/main/config/broker.yaml.template", "diffHunk": "@@ -160,6 +160,18 @@\n       # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DISKUSAGEMONITORINGINTERVAL\n       # diskUsageMonitoringInterval = 1s\n \n+      # database:\n+        # Specify custom column family options overwriting Zeebe's own defaults.\n+        # WARNING: This setting requires in-depth knowledge of Zeebe's embedded database!\n+        # The expected property key names and values are derived from RocksDB's C implementation,\n+        # and are not limited to the provided examples below. Please look in RocksDB's SCM repo\n+        # for the files: `cf_options.h` and `options_helper.cc`. This setting can also be overridden\n+        # using the environment variable ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS.\n+        # However, it does not seem possible to provide multiple column family options that way.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwODg5MA=="}, "originalCommit": {"oid": "beda16d3be821d74391ecbd1caee86c12f1c7716"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA5OTYzNQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/camunda-cloud/zeebe/pull/5336#discussion_r490099635", "createdAt": "2020-09-17T09:22:51Z", "author": {"login": "deepthidevaki"}, "path": "dist/src/main/config/broker.yaml.template", "diffHunk": "@@ -160,6 +160,18 @@\n       # This setting can also be overridden using the environment variable ZEEBE_BROKER_DATA_DISKUSAGEMONITORINGINTERVAL\n       # diskUsageMonitoringInterval = 1s\n \n+      # database:\n+        # Specify custom column family options overwriting Zeebe's own defaults.\n+        # WARNING: This setting requires in-depth knowledge of Zeebe's embedded database!\n+        # The expected property key names and values are derived from RocksDB's C implementation,\n+        # and are not limited to the provided examples below. Please look in RocksDB's SCM repo\n+        # for the files: `cf_options.h` and `options_helper.cc`. This setting can also be overridden\n+        # using the environment variable ZEEBE_BROKER_DATA_DATABASE_COLUMNFAMILYOPTIONS.\n+        # However, it does not seem possible to provide multiple column family options that way.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwODg5MA=="}, "originalCommit": {"oid": "beda16d3be821d74391ecbd1caee86c12f1c7716"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 243, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}