{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MTAyNzY5", "number": 873, "title": "KOGITO-652: Context for editors", "bodyText": "Add a new parameter to the editor setContent method and make sure it is generated correctly.\nAlso create a wrapper object for the context. Editors can now access the context by injecting  EditorContextProvider.\nPart of an ensemble:\nkiegroup/kogito-tooling#47\nkiegroup/kie-wb-common#3099", "createdAt": "2020-01-03T19:50:25Z", "url": "https://github.com/kiegroup/appformer/pull/873", "merged": true, "mergeCommit": {"oid": "777566ec51ba37dff2bb09419dc4354d83c14425"}, "closed": true, "closedAt": "2020-01-17T18:43:48Z", "author": {"login": "jesuino"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3qcyMgFqTMzODQ5MjQwOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb5-Q_UgFqTM0MTkzNDkzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4NDkyNDA4", "url": "https://github.com/kiegroup/appformer/pull/873#pullrequestreview-338492408", "createdAt": "2020-01-06T07:02:12Z", "commit": {"oid": "a0c1efac7bc331fe59984f3ac05da7960cda9158"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwNzowMjoxMlrOFaWpbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwNzowNzowMlrOFaWs2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE3ODM1MQ==", "bodyText": "Maybe you could mention what those parameters should represent - path to the content & value of the content as string. Just a nitpick to make the message more helpful.", "url": "https://github.com/kiegroup/appformer/pull/873#discussion_r363178351", "createdAt": "2020-01-06T07:02:12Z", "author": {"login": "domhanak"}, "path": "uberfire-workbench/uberfire-workbench-processors-tests/src/test/java/org/uberfire/annotations/processors/WorkbenchClientEditorProcessorTest.java", "diffHunk": "@@ -85,7 +85,7 @@ public void testMissingSetContent() throws FileNotFoundException {\n                                  Kind.ERROR,\n                                  Diagnostic.NOPOS,\n                                  Diagnostic.NOPOS,\n-                                 \"org.uberfire.annotations.processors.WorkbenchClientEditorTest4Activity: The WorkbenchClientEditor must provide a @SetContent annotated method that has a java.lang.String as parameter.\");\n+                                 \"org.uberfire.annotations.processors.WorkbenchClientEditorTest4Activity: The WorkbenchClientEditor must provide a @SetContent annotated method that has two java.lang.String as parameters.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0c1efac7bc331fe59984f3ac05da7960cda9158"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE3OTIyNQ==", "bodyText": "does it matter if the path is relative or absolute? does it make sense to state it here or when I use it I will simply know? :)", "url": "https://github.com/kiegroup/appformer/pull/873#discussion_r363179225", "createdAt": "2020-01-06T07:07:02Z", "author": {"login": "domhanak"}, "path": "uberfire-workbench/uberfire-workbench-client/src/main/java/org/uberfire/client/mvp/WorkbenchClientEditorActivity.java", "diffHunk": "@@ -26,11 +26,15 @@\n public interface WorkbenchClientEditorActivity extends WorkbenchActivity {\n \n     /**\n-     * Set the editor content\n+     *  \n+     *  Set the editor content\n+     *  \n+     * @param path\n+     * Content Path ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0c1efac7bc331fe59984f3ac05da7960cda9158"}, "originalPosition": 9}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0c1efac7bc331fe59984f3ac05da7960cda9158", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/a0c1efac7bc331fe59984f3ac05da7960cda9158", "committedDate": "2020-01-02T20:48:28Z", "message": "KOGITO-652: Context for editors"}, "afterCommit": {"oid": "2ecba40294b5e20b72a0a6f816496b79e81100f4", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/2ecba40294b5e20b72a0a6f816496b79e81100f4", "committedDate": "2020-01-06T13:55:17Z", "message": "Improving error message and setContent comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dabac0276a07a9e0fd1636db7bb9966460ab0dc", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/7dabac0276a07a9e0fd1636db7bb9966460ab0dc", "committedDate": "2020-01-07T15:50:01Z", "message": "KOGITO-652: Context for editors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92b291c23806487a0e57b5022c12b9b920ac8bed", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/92b291c23806487a0e57b5022c12b9b920ac8bed", "committedDate": "2020-01-07T15:50:01Z", "message": "Improving error message and setContent comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "27ec2474869b0f8d9c37c87a45ffaf95b5d29bab", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/27ec2474869b0f8d9c37c87a45ffaf95b5d29bab", "committedDate": "2020-01-07T15:47:46Z", "message": "Adding isKogito functionality"}, "afterCommit": {"oid": "fe1d7b9ecca5080a56a0028c0e7652c321bae21f", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/fe1d7b9ecca5080a56a0028c0e7652c321bae21f", "committedDate": "2020-01-08T01:39:34Z", "message": "Adding isKogito functionality"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5ODAyMjk4", "url": "https://github.com/kiegroup/appformer/pull/873#pullrequestreview-339802298", "createdAt": "2020-01-08T11:25:58Z", "commit": {"oid": "fe1d7b9ecca5080a56a0028c0e7652c321bae21f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMToyNTo1OFrOFbUEHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMToyNTo1OFrOFbUEHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4NDYwNg==", "bodyText": "@jesuino\nHi. I think this should be removed/avoided.\nIf \"WindowRef.isGwtEditorBeansAvailable()\" mean you have the gwtEditorBeans variable, this one may be not instantiated for a lot of different reasons - i.e. some error in code implementation/compilation, that are not related to the environment itself.", "url": "https://github.com/kiegroup/appformer/pull/873#discussion_r364184606", "createdAt": "2020-01-08T11:25:58Z", "author": {"login": "gitgabrio"}, "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/context/impl/EditorContextProviderImpl.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.bridge.client.context.impl;\n+\n+import java.util.Optional;\n+import java.util.function.Function;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.appformer.kogito.bridge.client.context.EditorContextProvider;\n+import org.appformer.kogito.bridge.client.context.interop.EditorContextWrapper;\n+import org.appformer.kogito.bridge.client.interop.WindowRef;\n+\n+@ApplicationScoped\n+public class EditorContextProviderImpl implements EditorContextProvider {\n+\n+    @Override\n+    public Optional<String> getChannel() {\n+        return nullSafe(EditorContextWrapper::getChannel);\n+    }\n+\n+    @Override\n+    public boolean isKogito() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe1d7b9ecca5080a56a0028c0e7652c321bae21f"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe1d7b9ecca5080a56a0028c0e7652c321bae21f", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/fe1d7b9ecca5080a56a0028c0e7652c321bae21f", "committedDate": "2020-01-08T01:39:34Z", "message": "Adding isKogito functionality"}, "afterCommit": {"oid": "92b291c23806487a0e57b5022c12b9b920ac8bed", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/92b291c23806487a0e57b5022c12b9b920ac8bed", "committedDate": "2020-01-07T15:50:01Z", "message": "Improving error message and setContent comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5ODQwNjE3", "url": "https://github.com/kiegroup/appformer/pull/873#pullrequestreview-339840617", "createdAt": "2020-01-08T12:47:48Z", "commit": {"oid": "92b291c23806487a0e57b5022c12b9b920ac8bed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMjo0Nzo0OFrOFbV1TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMjo0Nzo0OFrOFbV1TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxMzU4MQ==", "bodyText": "I think it is more readable as\n public Optional<String> getChannel() {\n      return Optional.ofNullable(EditorContextWrapper.get()).map(EditorContextWrapper::getChannel);\n }", "url": "https://github.com/kiegroup/appformer/pull/873#discussion_r364213581", "createdAt": "2020-01-08T12:47:48Z", "author": {"login": "danielezonca"}, "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/context/EditorContextProvider.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.bridge.client.context;\n+\n+import java.util.Optional;\n+import java.util.function.Function;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.appformer.kogito.bridge.client.context.interop.EditorContextWrapper;\n+\n+/**\n+ * \n+ * CDI Bean to provide access to EditorContext properties\n+ *\n+ */\n+@ApplicationScoped\n+public class EditorContextProvider {\n+\n+    /**\n+     * The channel where the editor is running\n+     * @return\n+     */\n+    public Optional<String> getChannel() {\n+        return nullSafe(wrapper -> wrapper.getChannel());\n+    }\n+\n+    private Optional<String> nullSafe(Function<EditorContextWrapper, String> action) {\n+        EditorContextWrapper wrapper = EditorContextWrapper.get();\n+        if (wrapper != null) {\n+            return Optional.of(action.apply(wrapper));\n+        }\n+        return Optional.empty();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92b291c23806487a0e57b5022c12b9b920ac8bed"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6760d6b37ac09966d52feb72b92998a944c5652", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/c6760d6b37ac09966d52feb72b92998a944c5652", "committedDate": "2020-01-08T18:19:57Z", "message": "Refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMzc0MDc1", "url": "https://github.com/kiegroup/appformer/pull/873#pullrequestreview-340374075", "createdAt": "2020-01-09T09:08:41Z", "commit": {"oid": "c6760d6b37ac09966d52feb72b92998a944c5652"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNDUyNTcy", "url": "https://github.com/kiegroup/appformer/pull/873#pullrequestreview-340452572", "createdAt": "2020-01-09T11:22:56Z", "commit": {"oid": "c6760d6b37ac09966d52feb72b92998a944c5652"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMToyMjo1N1rOFbyvQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMToyMjo1N1rOFbyvQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4NzE2OA==", "bodyText": "KogitoChannel is an enum. Not sure an empty optional can be returned as we state in javadoc.", "url": "https://github.com/kiegroup/appformer/pull/873#discussion_r364687168", "createdAt": "2020-01-09T11:22:57Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/context/EditorContextProvider.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.bridge.client.context;\n+\n+/**\n+ * \n+ * Provide access to EditorContext properties\n+ *\n+ */\n+public interface EditorContextProvider {\n+\n+    /**\n+     * Access the channel where the editor is running (e.g. ONLINE, GITHUB or VSCODE).\n+     * \n+     * @return\n+     * The channel where the editor is running or an empty optional if no channel is available.\n+     */\n+    KogitoChannel getChannel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6760d6b37ac09966d52feb72b92998a944c5652"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b047e9ed7494ed3e17d0b602ebdc377f6b958d0", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/3b047e9ed7494ed3e17d0b602ebdc377f6b958d0", "committedDate": "2020-01-09T13:41:50Z", "message": "Fixing comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNjkzODc5", "url": "https://github.com/kiegroup/appformer/pull/873#pullrequestreview-340693879", "createdAt": "2020-01-09T17:33:05Z", "commit": {"oid": "3b047e9ed7494ed3e17d0b602ebdc377f6b958d0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNjk0Mjg4", "url": "https://github.com/kiegroup/appformer/pull/873#pullrequestreview-340694288", "createdAt": "2020-01-09T17:33:46Z", "commit": {"oid": "3b047e9ed7494ed3e17d0b602ebdc377f6b958d0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNzg5MTk2", "url": "https://github.com/kiegroup/appformer/pull/873#pullrequestreview-340789196", "createdAt": "2020-01-09T20:18:24Z", "commit": {"oid": "3b047e9ed7494ed3e17d0b602ebdc377f6b958d0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjc1NTI4", "url": "https://github.com/kiegroup/appformer/pull/873#pullrequestreview-341675528", "createdAt": "2020-01-13T07:58:57Z", "commit": {"oid": "3b047e9ed7494ed3e17d0b602ebdc377f6b958d0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxOTE2MzI3", "url": "https://github.com/kiegroup/appformer/pull/873#pullrequestreview-341916327", "createdAt": "2020-01-13T15:16:21Z", "commit": {"oid": "3b047e9ed7494ed3e17d0b602ebdc377f6b958d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNToxNjoyMVrOFc6Owg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNToxNjoyMVrOFc6Owg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg1ODQ5OA==", "bodyText": "Please cover also ONLINE, VSCODE, DEFAULT", "url": "https://github.com/kiegroup/appformer/pull/873#discussion_r365858498", "createdAt": "2020-01-13T15:16:21Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-bridge/src/test/java/org/appformer/kogito/bridge/client/context/KogitoChannelTest.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.bridge.client.context;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class KogitoChannelTest {\n+\n+    @Test\n+    public void withNameTest() {\n+        assertEquals(KogitoChannel.GITHUB, KogitoChannel.withName(\"GitHub\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b047e9ed7494ed3e17d0b602ebdc377f6b958d0"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxOTM0OTM4", "url": "https://github.com/kiegroup/appformer/pull/873#pullrequestreview-341934938", "createdAt": "2020-01-13T15:41:17Z", "commit": {"oid": "3b047e9ed7494ed3e17d0b602ebdc377f6b958d0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2157, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}