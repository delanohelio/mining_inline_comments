{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4Nzc0NTU5", "number": 985, "title": "AF-2529: Allow users to embed dashboards", "bodyText": "This PR contains feature AF-2529 and a fix for AF-2527.\nAF-2529:\nWith this feature you should be able to access dashboards directly using\n{dashbuilder_runtime_host}/?standalone=true&perspective={pageId}\nWhere pageId is the id of the page you want to access. This will allow users to embedded dashboads in HTML pages.\nAF-2527:\nQuick fix to allow imports without datasets (no exported datasets) or no navigation (cases where the navigation isn't created at all) to import their dashboards. The only required component is page.\nGeneral fixes:\nCheck style fixes a few more javadocs.", "createdAt": "2020-06-05T21:28:33Z", "url": "https://github.com/kiegroup/appformer/pull/985", "merged": true, "mergeCommit": {"oid": "aaddf09c5c241f7f9d34ba0fe007ea640a97e2a0"}, "closed": true, "closedAt": "2020-06-25T17:07:22Z", "author": {"login": "jesuino"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcptwywABqjM0MjcyMTczNjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuHliUAFqTQzNTkyNjU0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb616f226ca6c5f0ae7736eb429a5b9d6078a5ed", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/cb616f226ca6c5f0ae7736eb429a5b9d6078a5ed", "committedDate": "2020-06-05T21:24:04Z", "message": "AF-2529: Allow users to embed dashboards"}, "afterCommit": {"oid": "848a078387b0dfbdc693e58a5833ddd5010d516d", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/848a078387b0dfbdc693e58a5833ddd5010d516d", "committedDate": "2020-06-09T23:35:38Z", "message": "AF-2529: Allow users to embed dashboards"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjQ5NTM3", "url": "https://github.com/kiegroup/appformer/pull/985#pullrequestreview-432649537", "createdAt": "2020-06-17T18:06:56Z", "commit": {"oid": "848a078387b0dfbdc693e58a5833ddd5010d516d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODowNjo1N1rOGlROkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDowNDoxMVrOGlVbhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczMjc1NA==", "bodyText": "Suggested change", "url": "https://github.com/kiegroup/appformer/pull/985#discussion_r441732754", "createdAt": "2020-06-17T18:06:57Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/backend/services/impl/ImportValidationServiceImpl.java", "diffHunk": "@@ -35,32 +35,36 @@\n @ApplicationScoped\n public class ImportValidationServiceImpl implements ImportValidationService {\n \n+    /**\n+     * Checks if the given file URL is valid for a Runtime Model.\n+     */\n     @Override\n-    public boolean validate(String file) {\n-        boolean hasDataset = false;\n+    public boolean validate(final String file) {\n+        boolean hasDatasetDir = false;\n         boolean hasPage = false;\n         boolean hasNavigation = false;\n-        try (ZipInputStream zis = new ZipInputStream(new FileInputStream(file))) {\n+        try (final ZipInputStream zis = new ZipInputStream(new FileInputStream(file))) {\n             ZipEntry entry;\n             while ((entry = zis.getNextEntry()) != null) {\n \n-                hasDataset = hasDataset || entryStartsWith(entry, DATASET_PREFIX);\n+                hasDatasetDir = hasDatasetDir || entryStartsWith(entry, DATASET_PREFIX);\n                 hasPage = hasPage || entryStartsWith(entry, PERSPECTIVE_PREFIX);\n                 hasNavigation = hasNavigation || entryStartsWith(entry, NAVIGATION_PREFIX);\n \n-                if (hasDataset && hasPage && hasNavigation) {\n+                if (hasNavigation && hasDatasetDir && hasPage) {\n                     return true;\n                 }\n             }\n         } catch (Exception e) {\n             throw new IllegalArgumentException(\"Error validating file: \" + file, e);\n         }\n-\n+        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "848a078387b0dfbdc693e58a5833ddd5010d516d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczNjYwNw==", "bodyText": "NAVIGATION_FILE == \"dashbuilder/navigation/navigation/navtree.json\".\nIs it correct with two navigation? Just double-checking.", "url": "https://github.com/kiegroup/appformer/pull/985#discussion_r441736607", "createdAt": "2020-06-17T18:13:47Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/shared/model/ImportDefinitions.java", "diffHunk": "@@ -22,13 +22,15 @@\n  */\n public class ImportDefinitions {\n \n-    public static final String DATASET_PREFIX = \"dashbuilder/datasets/definitions/\";\n-    public static final String NAVIGATION_PREFIX = \"dashbuilder/navigation/navigation/\";\n-    public static final String PERSPECTIVE_PREFIX = \"dashbuilder/navigation/navigation/\";\n-\n+    public static final String DATASET_PREFIX = \"dashbuilder/datasets\";\n+    public static final String DATASET_DEF_PREFIX = DATASET_PREFIX + \"/definitions\";\n+    public static final String DATASET_SUFFIX = \".dset\";\n+    \n+    public static final String PERSPECTIVE_PREFIX = \"dashbuilder/perspectives\";\n     public static final String PERSPECTIVE_SUFFIX = \"perspective_layout\";\n \n-    public static final String NAVIGATION_FILE = NAVIGATION_PREFIX + \"navtree.json\";\n+    public static final String NAVIGATION_PREFIX = \"dashbuilder/navigation\";\n+    public static final String NAVIGATION_FILE = NAVIGATION_PREFIX + \"/navigation/navtree.json\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "848a078387b0dfbdc693e58a5833ddd5010d516d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwMTYwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }, (ErrorCallback<Exception>) (Exception message, Throwable throwable) -> {\n          \n          \n            \n                    }, (message, throwable) -> {", "url": "https://github.com/kiegroup/appformer/pull/985#discussion_r441801607", "createdAt": "2020-06-17T20:04:11Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/ClientRuntimeModelLoader.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.dashbuilder.client;\n+\n+import java.util.Optional;\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import com.google.gwt.user.client.Command;\n+import com.google.gwt.user.client.Window;\n+import org.dashbuilder.client.perspective.RuntimePerspectiveGenerator;\n+import org.dashbuilder.shared.model.RuntimeModel;\n+import org.dashbuilder.shared.service.RuntimeModelService;\n+import org.jboss.errai.common.client.api.Caller;\n+import org.jboss.errai.common.client.api.ErrorCallback;\n+\n+@ApplicationScoped\n+public class ClientRuntimeModelLoader {\n+\n+    public static final String IMPORT_ID_PARAM = \"import\";\n+\n+    @Inject\n+    private Caller<RuntimeModelService> importModelServiceCaller;\n+\n+    RuntimeModel modelCache = null;\n+\n+    @Inject\n+    RuntimePerspectiveGenerator perspectiveEditorGenerator;\n+\n+    public void loadModel(Consumer<RuntimeModel> modelLoaded,\n+                          Command emptyModel,\n+                          BiConsumer<Exception, Throwable> error) {\n+        String importID = Window.Location.getParameter(IMPORT_ID_PARAM);\n+        loadModel(importID, modelLoaded, emptyModel, error);\n+\n+    }\n+\n+    public void loadModel(String modelId,\n+                          Consumer<RuntimeModel> modelLoaded,\n+                          Command emptyModel,\n+                          BiConsumer<Exception, Throwable> error) {\n+        if (modelCache != null) {\n+            modelLoaded.accept(modelCache);\n+            return;\n+        }\n+\n+        importModelServiceCaller.call((Optional<RuntimeModel> runtimeModelOp) -> {\n+            if (runtimeModelOp.isPresent()) {\n+                RuntimeModel runtimeModel = runtimeModelOp.get();\n+                runtimeModel.getLayoutTemplates().forEach(perspectiveEditorGenerator::generatePerspective);\n+                modelCache = runtimeModel;\n+                modelLoaded.accept(runtimeModel);\n+            } else {\n+                emptyModel.execute();\n+            }\n+        }, (ErrorCallback<Exception>) (Exception message, Throwable throwable) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "848a078387b0dfbdc693e58a5833ddd5010d516d"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11bda25d2a52618842374b2823478ae99ac81027", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/11bda25d2a52618842374b2823478ae99ac81027", "committedDate": "2020-06-18T17:04:04Z", "message": "AF-2560: Update Widlfly version in showcases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd9241ac59acc498ee39409b9c8460cb5e7022c1", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/dd9241ac59acc498ee39409b9c8460cb5e7022c1", "committedDate": "2020-06-18T17:33:46Z", "message": "AF-2529: Allow users to embed dashboards"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b85b67b5a5e36c57e5e6012bf664291a9b97fe91", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/b85b67b5a5e36c57e5e6012bf664291a9b97fe91", "committedDate": "2020-06-18T18:26:55Z", "message": "Improvements"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "848a078387b0dfbdc693e58a5833ddd5010d516d", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/848a078387b0dfbdc693e58a5833ddd5010d516d", "committedDate": "2020-06-09T23:35:38Z", "message": "AF-2529: Allow users to embed dashboards"}, "afterCommit": {"oid": "b85b67b5a5e36c57e5e6012bf664291a9b97fe91", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/b85b67b5a5e36c57e5e6012bf664291a9b97fe91", "committedDate": "2020-06-18T18:26:55Z", "message": "Improvements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNTQzNzI2", "url": "https://github.com/kiegroup/appformer/pull/985#pullrequestreview-433543726", "createdAt": "2020-06-18T18:30:39Z", "commit": {"oid": "b85b67b5a5e36c57e5e6012bf664291a9b97fe91"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e998c3d75dbfe89194c178a591334c0939af6e35", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/e998c3d75dbfe89194c178a591334c0939af6e35", "committedDate": "2020-06-19T22:42:35Z", "message": "tests for RuntimeClientModelService + 404 page for standalone mode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1OTI2NTQy", "url": "https://github.com/kiegroup/appformer/pull/985#pullrequestreview-435926542", "createdAt": "2020-06-23T15:56:56Z", "commit": {"oid": "e998c3d75dbfe89194c178a591334c0939af6e35"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2124, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}