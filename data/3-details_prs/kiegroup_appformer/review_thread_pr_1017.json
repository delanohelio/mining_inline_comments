{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMzk4NDcx", "number": 1017, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzoyMzowNlrOEU_z_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzoyMzowNlrOEU_z_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDUyNDc4OnYy", "diffSide": "RIGHT", "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/i18n/I18nApiInteropWrapper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzoyMzowN1rOG7gKhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzoyMzowN1rOG7gKhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA0NjE1MA==", "bodyText": "Rename to i18n.", "url": "https://github.com/kiegroup/appformer/pull/1017#discussion_r465046150", "createdAt": "2020-08-04T13:23:07Z", "author": {"login": "tiagobento"}, "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/i18n/I18nApiInteropWrapper.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.bridge.client.i18n;\n+\n+import elemental2.promise.Promise;\n+import jsinterop.annotations.JsMethod;\n+import jsinterop.annotations.JsProperty;\n+import jsinterop.annotations.JsType;\n+\n+@JsType(isNative = true, namespace = \"window\", name = \"envelope\")\n+public class I18nApiInteropWrapper {\n+\n+    @JsMethod\n+    public native void onLocaleChange(LocaleChangeCallback callback);\n+\n+    @JsMethod\n+    public native Promise<String> getLocale();\n+\n+    @JsProperty(name = \"i18nService\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c46844753cdbdf2d39456e0fdf0e6047d4a0f1f"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2664, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}