{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NTc3MDMx", "number": 885, "title": "RHDM-1016: [DMN Designer] Scroll Bars are not updated when keyboard is used for navigation", "bodyText": "Part of an ensemble:\nkiegroup/kie-wb-common#3135\n#885\nThis may affect others editors, so I created a new constructor and called it in DMN editor only.", "createdAt": "2020-01-31T13:16:21Z", "url": "https://github.com/kiegroup/appformer/pull/885", "merged": true, "mergeCommit": {"oid": "887ebb4e351ca3599ad5c0dda69e563ff78755f7"}, "closed": true, "closedAt": "2020-02-26T19:14:21Z", "author": {"login": "danielzhe"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_vyinAFqTM1MTUwMjQxMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGSIRKgH2gAyMzY5NTc3MDMxOjJlMWNmMGIzNDcwYWI1ZGQ3NGVlMzg1NTM4NjJkZWJiNGVhODU4ZGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNTAyNDEw", "url": "https://github.com/kiegroup/appformer/pull/885#pullrequestreview-351502410", "createdAt": "2020-01-31T13:26:54Z", "commit": {"oid": "7cbb85e254ebeb64f36ade25cda8d71572366137"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMzoyNjo1NVrOFkLRFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMzoyNjo1NVrOFkLRFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ3NzY1Mw==", "bodyText": "You can probably make this the interface GridLienzoScrollable instead of GridLienzoPanel?", "url": "https://github.com/kiegroup/appformer/pull/885#discussion_r373477653", "createdAt": "2020-01-31T13:26:55Z", "author": {"login": "manstis"}, "path": "uberfire-extensions/uberfire-wires/uberfire-wires-core/uberfire-wires-core-grids/src/main/java/org/uberfire/ext/wires/core/grids/client/widget/grid/impl/KeyboardOperationMove.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.uberfire.ext.wires.core.grids.client.widget.grid.impl;\n+\n+import java.util.Optional;\n+\n+import org.uberfire.ext.wires.core.grids.client.widget.grid.GridWidget;\n+import org.uberfire.ext.wires.core.grids.client.widget.grid.selections.SelectionExtension;\n+import org.uberfire.ext.wires.core.grids.client.widget.layer.GridLayer;\n+import org.uberfire.ext.wires.core.grids.client.widget.layer.impl.GridLienzoPanel;\n+\n+public abstract class KeyboardOperationMove extends BaseKeyboardOperation {\n+\n+    private final Optional<GridLienzoPanel> panel;\n+\n+    KeyboardOperationMove(final GridLayer gridLayer,\n+                          final GridLienzoPanel panel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cbb85e254ebeb64f36ade25cda8d71572366137"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNTY0NTY3", "url": "https://github.com/kiegroup/appformer/pull/885#pullrequestreview-352564567", "createdAt": "2020-02-03T21:10:26Z", "commit": {"oid": "2e9405833a2792dc10ae99cee7fd824dfd8e8040"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyOTI1NzM4", "url": "https://github.com/kiegroup/appformer/pull/885#pullrequestreview-352925738", "createdAt": "2020-02-04T12:07:34Z", "commit": {"oid": "2e9405833a2792dc10ae99cee7fd824dfd8e8040"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjowNzozNVrOFlRv3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjowNzozNVrOFlRv3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYzMjQxNQ==", "bodyText": "@danielzhe Just curious, why is this indirection required?", "url": "https://github.com/kiegroup/appformer/pull/885#discussion_r374632415", "createdAt": "2020-02-04T12:07:35Z", "author": {"login": "yesamer"}, "path": "uberfire-extensions/uberfire-wires/uberfire-wires-core/uberfire-wires-core-grids/src/main/java/org/uberfire/ext/wires/core/grids/client/widget/grid/impl/KeyboardOperationMove.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.uberfire.ext.wires.core.grids.client.widget.grid.impl;\n+\n+import java.util.Optional;\n+\n+import org.uberfire.ext.wires.core.grids.client.widget.grid.GridWidget;\n+import org.uberfire.ext.wires.core.grids.client.widget.grid.selections.SelectionExtension;\n+import org.uberfire.ext.wires.core.grids.client.widget.layer.GridLayer;\n+import org.uberfire.ext.wires.core.grids.client.widget.scrollbars.GridLienzoScrollable;\n+\n+public abstract class KeyboardOperationMove extends BaseKeyboardOperation {\n+\n+    private final Optional<GridLienzoScrollable> panel;\n+\n+    KeyboardOperationMove(final GridLayer gridLayer,\n+                          final GridLienzoScrollable panel) {\n+        super(gridLayer);\n+        this.panel = Optional.of(panel);\n+    }\n+\n+    @Override\n+    public boolean perform(final GridWidget gridWidget,\n+                           final boolean isShiftKeyDown,\n+                           final boolean isControlKeyDown) {\n+        final boolean redraw = gridWidget.adjustSelection(getSelectionExtension(),\n+                                                          isShiftKeyDown);\n+        baseScrollSelectedCellIntoView(gridWidget);\n+        panel.ifPresent(p -> p.refreshScrollPosition());\n+        return redraw;\n+    }\n+\n+    void baseScrollSelectedCellIntoView(final GridWidget gridWidget) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9405833a2792dc10ae99cee7fd824dfd8e8040"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyOTM0MDk1", "url": "https://github.com/kiegroup/appformer/pull/885#pullrequestreview-352934095", "createdAt": "2020-02-04T12:22:31Z", "commit": {"oid": "2e9405833a2792dc10ae99cee7fd824dfd8e8040"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjoyMjozMVrOFlSJVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjoyMjozMVrOFlSJVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYzODkzMw==", "bodyText": "@danielzhe Which is the scope of this new method? I don't see this SelectionExtension used previously.Thanks!", "url": "https://github.com/kiegroup/appformer/pull/885#discussion_r374638933", "createdAt": "2020-02-04T12:22:31Z", "author": {"login": "yesamer"}, "path": "uberfire-extensions/uberfire-wires/uberfire-wires-core/uberfire-wires-core-grids/src/main/java/org/uberfire/ext/wires/core/grids/client/widget/grid/impl/KeyboardOperationMove.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.uberfire.ext.wires.core.grids.client.widget.grid.impl;\n+\n+import java.util.Optional;\n+\n+import org.uberfire.ext.wires.core.grids.client.widget.grid.GridWidget;\n+import org.uberfire.ext.wires.core.grids.client.widget.grid.selections.SelectionExtension;\n+import org.uberfire.ext.wires.core.grids.client.widget.layer.GridLayer;\n+import org.uberfire.ext.wires.core.grids.client.widget.scrollbars.GridLienzoScrollable;\n+\n+public abstract class KeyboardOperationMove extends BaseKeyboardOperation {\n+\n+    private final Optional<GridLienzoScrollable> panel;\n+\n+    KeyboardOperationMove(final GridLayer gridLayer,\n+                          final GridLienzoScrollable panel) {\n+        super(gridLayer);\n+        this.panel = Optional.of(panel);\n+    }\n+\n+    @Override\n+    public boolean perform(final GridWidget gridWidget,\n+                           final boolean isShiftKeyDown,\n+                           final boolean isControlKeyDown) {\n+        final boolean redraw = gridWidget.adjustSelection(getSelectionExtension(),\n+                                                          isShiftKeyDown);\n+        baseScrollSelectedCellIntoView(gridWidget);\n+        panel.ifPresent(p -> p.refreshScrollPosition());\n+        return redraw;\n+    }\n+\n+    void baseScrollSelectedCellIntoView(final GridWidget gridWidget) {\n+        scrollSelectedCellIntoView(gridWidget);\n+    }\n+\n+    abstract SelectionExtension getSelectionExtension();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9405833a2792dc10ae99cee7fd824dfd8e8040"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNzIzMDkw", "url": "https://github.com/kiegroup/appformer/pull/885#pullrequestreview-353723090", "createdAt": "2020-02-05T13:43:50Z", "commit": {"oid": "2e9405833a2792dc10ae99cee7fd824dfd8e8040"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NTI3MjM2", "url": "https://github.com/kiegroup/appformer/pull/885#pullrequestreview-356527236", "createdAt": "2020-02-11T09:57:00Z", "commit": {"oid": "2e9405833a2792dc10ae99cee7fd824dfd8e8040"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOTo1NzowMVrOFoC2Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOTo1NzowMVrOFoC2Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUzNDAyMg==", "bodyText": "I think also KeyboardOperationSelectTopLeftCell and KeyboardOperationSelectBottomRightCell should extend this, what do you think?", "url": "https://github.com/kiegroup/appformer/pull/885#discussion_r377534022", "createdAt": "2020-02-11T09:57:01Z", "author": {"login": "jomarko"}, "path": "uberfire-extensions/uberfire-wires/uberfire-wires-core/uberfire-wires-core-grids/src/main/java/org/uberfire/ext/wires/core/grids/client/widget/grid/impl/KeyboardOperationMove.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.uberfire.ext.wires.core.grids.client.widget.grid.impl;\n+\n+import java.util.Optional;\n+\n+import org.uberfire.ext.wires.core.grids.client.widget.grid.GridWidget;\n+import org.uberfire.ext.wires.core.grids.client.widget.grid.selections.SelectionExtension;\n+import org.uberfire.ext.wires.core.grids.client.widget.layer.GridLayer;\n+import org.uberfire.ext.wires.core.grids.client.widget.scrollbars.GridLienzoScrollable;\n+\n+public abstract class KeyboardOperationMove extends BaseKeyboardOperation {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9405833a2792dc10ae99cee7fd824dfd8e8040"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjI1Njgz", "url": "https://github.com/kiegroup/appformer/pull/885#pullrequestreview-357225683", "createdAt": "2020-02-12T07:05:08Z", "commit": {"oid": "2e9405833a2792dc10ae99cee7fd824dfd8e8040"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowNTowOFrOFojmJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowNTowOFrOFojmJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDU2NA==", "bodyText": "We need ofNullable. I am running FDB to demonstrate we need it. It will cause GuidedDecisionTableModellerPresenterTest to fail.", "url": "https://github.com/kiegroup/appformer/pull/885#discussion_r378070564", "createdAt": "2020-02-12T07:05:08Z", "author": {"login": "jomarko"}, "path": "uberfire-extensions/uberfire-wires/uberfire-wires-core/uberfire-wires-core-grids/src/main/java/org/uberfire/ext/wires/core/grids/client/widget/grid/impl/KeyboardOperationMove.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.uberfire.ext.wires.core.grids.client.widget.grid.impl;\n+\n+import java.util.Optional;\n+\n+import org.uberfire.ext.wires.core.grids.client.widget.grid.GridWidget;\n+import org.uberfire.ext.wires.core.grids.client.widget.grid.selections.SelectionExtension;\n+import org.uberfire.ext.wires.core.grids.client.widget.layer.GridLayer;\n+import org.uberfire.ext.wires.core.grids.client.widget.scrollbars.GridLienzoScrollable;\n+\n+public abstract class KeyboardOperationMove extends BaseKeyboardOperation {\n+\n+    private final Optional<GridLienzoScrollable> panel;\n+\n+    KeyboardOperationMove(final GridLayer gridLayer,\n+                          final GridLienzoScrollable panel) {\n+        super(gridLayer);\n+        this.panel = Optional.of(panel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9405833a2792dc10ae99cee7fd824dfd8e8040"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b28c2f5d54ab2fd2d71088e785606165dae6a8e", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/appformer/commit/7b28c2f5d54ab2fd2d71088e785606165dae6a8e", "committedDate": "2020-02-12T14:01:03Z", "message": "RHDM-1016: [DMN Designer] Scroll Bars are not updated when keyboard is used for navigation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07e6a9700b72728dd88140dc285749e85e072f05", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/appformer/commit/07e6a9700b72728dd88140dc285749e85e072f05", "committedDate": "2020-02-12T14:01:04Z", "message": "code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82b8009a65340f8bff7693ab881c6e444bf83f97", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/appformer/commit/82b8009a65340f8bff7693ab881c6e444bf83f97", "committedDate": "2020-02-12T15:00:21Z", "message": "review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e9405833a2792dc10ae99cee7fd824dfd8e8040", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/appformer/commit/2e9405833a2792dc10ae99cee7fd824dfd8e8040", "committedDate": "2020-02-03T17:45:09Z", "message": "code review"}, "afterCommit": {"oid": "82b8009a65340f8bff7693ab881c6e444bf83f97", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/appformer/commit/82b8009a65340f8bff7693ab881c6e444bf83f97", "committedDate": "2020-02-12T15:00:21Z", "message": "review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4Nzc0NTg3", "url": "https://github.com/kiegroup/appformer/pull/885#pullrequestreview-358774587", "createdAt": "2020-02-14T08:23:59Z", "commit": {"oid": "82b8009a65340f8bff7693ab881c6e444bf83f97"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e1cf0b3470ab5dd74ee38553862debb4ea858db", "author": {"user": {"login": "danielzhe", "name": "Daniel J dos Santos"}}, "url": "https://github.com/kiegroup/appformer/commit/2e1cf0b3470ab5dd74ee38553862debb4ea858db", "committedDate": "2020-02-20T21:36:57Z", "message": "SonarCloud smells"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2180, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}