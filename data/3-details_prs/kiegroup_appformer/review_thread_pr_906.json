{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwODMxOTIw", "number": 906, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwODo1MTowMFrODkj2-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDowODo1OFrODkli1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjYyODQwOnYy", "diffSide": "RIGHT", "path": "uberfire-api/src/main/java/org/uberfire/lifecycle/GetPreview.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwODo1MTowMFrOFw80OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwODo1MTowMFrOFw80OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3MjM3Ng==", "bodyText": "typo, Used ?", "url": "https://github.com/kiegroup/appformer/pull/906#discussion_r386872376", "createdAt": "2020-03-03T08:51:00Z", "author": {"login": "jomarko"}, "path": "uberfire-api/src/main/java/org/uberfire/lifecycle/GetPreview.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.uberfire.lifecycle;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Inherited;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Use in method that returns a {@code @WorkbenchClientEditor} content preview.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdb88d6921ca4dc344a69272004a80e293cfaae1"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjkwNDU0OnYy", "diffSide": "RIGHT", "path": "uberfire-workbench/uberfire-workbench-processors-tests/src/test/resources/org/uberfire/annotations/processors/WorkbenchClientEditorTest7.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMDowODo1OFrOFw_fQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTo0NjoxM1rOFx7NPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkxNjE2Mw==", "bodyText": "Shouldn't be Promise<String>?", "url": "https://github.com/kiegroup/appformer/pull/906#discussion_r386916163", "createdAt": "2020-03-03T10:08:58Z", "author": {"login": "jomarko"}, "path": "uberfire-workbench/uberfire-workbench-processors-tests/src/test/resources/org/uberfire/annotations/processors/WorkbenchClientEditorTest7.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.uberfire.annotations.processors;\n+\n+import org.uberfire.client.annotations.WorkbenchClientEditor;\n+import org.uberfire.client.annotations.WorkbenchPartTitle;\n+import org.uberfire.lifecycle.GetContent;\n+import org.uberfire.lifecycle.SetContent;\n+import org.uberfire.lifecycle.GetPreview;\n+\n+import com.google.gwt.user.client.ui.Widget;\n+\n+import elemental2.promise.Promise;\n+\n+@WorkbenchClientEditor(identifier = \"editor\")\n+public class WorkbenchClientEditorTest7 extends Widget {\n+    \n+    \n+    @WorkbenchPartTitle\n+    public String title() {\n+        return \"title\";\n+    }\n+    \n+    @SetContent\n+    public void setContent(String path, String content) {\n+        \n+    }\n+    \n+    @GetContent\n+    public Promise getContent() {\n+        return null;\n+    }\n+    \n+    @GetPreview\n+    public Promise getPreview() {\n+        return null;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdb88d6921ca4dc344a69272004a80e293cfaae1"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg5NDU5MQ==", "bodyText": "I followed the existing method to avoid issues (getContent). This is a expected generated code and the base template does not use generics.", "url": "https://github.com/kiegroup/appformer/pull/906#discussion_r387894591", "createdAt": "2020-03-04T19:46:13Z", "author": {"login": "jesuino"}, "path": "uberfire-workbench/uberfire-workbench-processors-tests/src/test/resources/org/uberfire/annotations/processors/WorkbenchClientEditorTest7.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.uberfire.annotations.processors;\n+\n+import org.uberfire.client.annotations.WorkbenchClientEditor;\n+import org.uberfire.client.annotations.WorkbenchPartTitle;\n+import org.uberfire.lifecycle.GetContent;\n+import org.uberfire.lifecycle.SetContent;\n+import org.uberfire.lifecycle.GetPreview;\n+\n+import com.google.gwt.user.client.ui.Widget;\n+\n+import elemental2.promise.Promise;\n+\n+@WorkbenchClientEditor(identifier = \"editor\")\n+public class WorkbenchClientEditorTest7 extends Widget {\n+    \n+    \n+    @WorkbenchPartTitle\n+    public String title() {\n+        return \"title\";\n+    }\n+    \n+    @SetContent\n+    public void setContent(String path, String content) {\n+        \n+    }\n+    \n+    @GetContent\n+    public Promise getContent() {\n+        return null;\n+    }\n+    \n+    @GetPreview\n+    public Promise getPreview() {\n+        return null;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkxNjE2Mw=="}, "originalCommit": {"oid": "cdb88d6921ca4dc344a69272004a80e293cfaae1"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2740, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}