{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4Mjc4NTcw", "number": 1080, "title": "AF-2700: Create Heatmap internal component", "bodyText": "AF-2700: Create Heatmap internal component\nThis PR introduces two new provided components:\n\nProcess Heatmap: A component that renders a heatmap based on a specific process\nProcesses Heatmaps: A component capable of rendering multiple processes heatmaps\n\nThere were also some other small changes and improvements:\n\nProvided components can have their own category in Content Manager;\nLogo now moves to Core category and the \"Components\" category is removed;\nExtended Mimetypes in Component servlet so it can set the correct mime type for JS and CSS files;\nA bug during column selection was fixed: now it is possible to clear all columns and re-add one by one - previously this was not working if a grouping was not selected;\nA new API to help in components development was introduced;\n\nWith the addition of categories for provided components we then moved the heatmap components to Heatmaps category.\nRunning Heatmap components\nThe new components were implemented using React/TS and live inside dashbuilder-js project. During the maven build the components artifacts are placed in a JAR which is later retrieved by components servlet.\nIt is possible to run specific component following the steps below:\n\nHave npm/yarn installed;\nGo into appformer/dashbuilder/dashbuilder-shared/dashbuilder-js\nRun yarn run init && yarn run build:fast\nThen go into some of the components and run yarn run start. Existing components are in packages directory:\n\n\nprocesses-heatmaps-component\nprocess-heatmap-component\nlogo-component\nheatmap-component\n\nheatmap-component is not exported- in BC/DB you will see only log, and the two processes heatmaps components\n\nThen you should see the component rendered in localhost:9001\nIn the component static directory you will find a manifest.dev.json file. This file contains mocked parameters, functions and dataset that will be used to render the component - modify this file and webpack will reload the component with your changes;\nThe component dev also allow us to send INIT and DATASET messages using the buttons at the bottom of the page:\n\n\nUsage\nComponents works with a dataset, so you must connect to Kie Server to retrieve actual information. I will put the steps here, but later you can import a sample dashboard that I will also include\nProcess Heatmap\nIn BC go to Pages, create a new page, find the Heatmaps category and drag the heatmap component to the page. FIrst thing you should see is a warning saying that some mandatory properties were not provided:\n\nTo solve this you go to Component Editor and set all the required properties. After doing this you should be able to see the process diagram:\n\nNotice we have no heats - that's because we didn't provide heat values for the process nodes. In fact, component would show an error message, however, the default dataset (countries and population) match the criteria for a valid dataset - but usually users will see a message like this:\n\nTo add data create a new remote dataset using the following SQL query:\nselect\n   pil.externalId,\n   pil.processId,\n    nid,\n    nodetype,\n    nodename,\n    count(nid) as total_hits,\n    avg(execution_time) as averageExecutionTime,\n    min(execution_time) as minExecutionTime,\n    max(execution_time) as maxExecutionTime\nfrom(\n        select\n                max(log_date) as lastLog,\n                processinstanceid as piid,  \n                nodeinstanceid as niid, \n                nodeid as nid, \n                nodetype,\n                nodename, \n                DATEDIFF(SECOND, min(log_date), max(log_date)) as execution_time     \n        from \n                NodeInstanceLog \n        group by\n              processinstanceid, \n               nodeinstanceid      \n       order by lastLog\n)\ninner join\n     ProcessInstanceLog pil on pil.processInstanceId = piid\ngroup by \n     pil.externalId,\n     nid\n\nThis big query contains node for all processes and multiple information about the node. In the heatmap component you must select nid column and some of the numeric columns, which are: total_hits, averageExecutionTime minExecutionTime and maxExecutionTime. Remember also to create some sample process instances or nothing will be displayed.\n\nProcesses Heatmaps\nThis component can show multiple processes heatmaps. It only requires the server template and the dataset must provide all containers and processes information:\n\nUsers can hide the status that shows at the bottom of the component - but the process selector will always be visible, at least it can be collapsed:\n\nDashbuilder Runtime\nOnce your components are ready you can export the ZIP that makes sue of it and run on Dashbuilder Runtime. The provided component won't be inside the ZIP because it is packaged on server side, making the ZIP small.\nSample Dashboards\nThe dataset and the pages I used in this PR are attached. You can import it in your installation and then go to the page test and change the configuration according to your installation or open the ZIP and modify the dataset directly, here are the steps:\n\n\nImport the attached ZIP; heatmap_basic_demo.zip\n\n\nGo to Datasets and edit the dataset NODES INFORMATION to set the correct server template. Notice that due a known issue with Remote Dataset in BC - when you edit you may see an error when testing the server. If you see it, modify the server template in Configuration tab, save the dataset and reopen it.\n\n\nNow go to test page and edit the two heatmaps I placed in the page to match your installation configuration (server template, process id and container id);\n\n\nEverything should work after this.\nTests\nI was not able to test the components directly due this bug in heatmapjs - the API we use to build the heatmap: pa7/heatmap.js#331\nIn summay I had to use an actual canvas in server side (node implementation) to mount the component and ensure the correct heatmap was generated, but unfortunately I was not able to do that due the bug mentioned above.\nIf you have any suggestion for testing please let me know in the review.", "createdAt": "2020-11-26T21:57:08Z", "url": "https://github.com/kiegroup/appformer/pull/1080", "merged": true, "mergeCommit": {"oid": "774d14ed2d2a149d4fa5769e4cef51d0d84f4a13"}, "closed": true, "closedAt": "2020-12-11T20:44:33Z", "author": {"login": "jesuino"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgsvSSgBqjQwNDcxMzc4Mjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlOLo4gFqTU1MDU2NDgyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad238289b7dee28c14405da577d44f8c9158bb0c", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/ad238289b7dee28c14405da577d44f8c9158bb0c", "committedDate": "2020-11-26T21:53:58Z", "message": "AF-2700: Create Heatmap internal component"}, "afterCommit": {"oid": "5069c6537d6c142b35324b49d0fa19bedefd6854", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/5069c6537d6c142b35324b49d0fa19bedefd6854", "committedDate": "2020-11-27T19:30:01Z", "message": "AF-2700: Create Heatmap internal component"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5069c6537d6c142b35324b49d0fa19bedefd6854", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/5069c6537d6c142b35324b49d0fa19bedefd6854", "committedDate": "2020-11-27T19:30:01Z", "message": "AF-2700: Create Heatmap internal component"}, "afterCommit": {"oid": "d2883a5ccf38d2a10ca39dc282f3f9c1285d8a9a", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/d2883a5ccf38d2a10ca39dc282f3f9c1285d8a9a", "committedDate": "2020-11-27T22:52:03Z", "message": "AF-2700: Create Heatmap internal component"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d2883a5ccf38d2a10ca39dc282f3f9c1285d8a9a", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/d2883a5ccf38d2a10ca39dc282f3f9c1285d8a9a", "committedDate": "2020-11-27T22:52:03Z", "message": "AF-2700: Create Heatmap internal component"}, "afterCommit": {"oid": "85590509080dfb1818689d58a7180f953bf27a5e", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/85590509080dfb1818689d58a7180f953bf27a5e", "committedDate": "2020-12-01T21:47:33Z", "message": "AF-2700: Create Heatmap internal component"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "85590509080dfb1818689d58a7180f953bf27a5e", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/85590509080dfb1818689d58a7180f953bf27a5e", "committedDate": "2020-12-01T21:47:33Z", "message": "AF-2700: Create Heatmap internal component"}, "afterCommit": {"oid": "f2e372258969774cf4209452b1a74259202af9cd", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/f2e372258969774cf4209452b1a74259202af9cd", "committedDate": "2020-12-01T21:48:40Z", "message": "AF-2700: Create Heatmap internal component"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2e372258969774cf4209452b1a74259202af9cd", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/f2e372258969774cf4209452b1a74259202af9cd", "committedDate": "2020-12-01T21:48:40Z", "message": "AF-2700: Create Heatmap internal component"}, "afterCommit": {"oid": "79921f4e8dce92ace1f73addc43e781bde7da73b", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/79921f4e8dce92ace1f73addc43e781bde7da73b", "committedDate": "2020-12-03T19:06:17Z", "message": "AF-2700: Create Heatmap internal component"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79921f4e8dce92ace1f73addc43e781bde7da73b", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/79921f4e8dce92ace1f73addc43e781bde7da73b", "committedDate": "2020-12-03T19:06:17Z", "message": "AF-2700: Create Heatmap internal component"}, "afterCommit": {"oid": "92cc3d7ed3aecdb1c7eb88454223911b93526944", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/92cc3d7ed3aecdb1c7eb88454223911b93526944", "committedDate": "2020-12-03T19:13:51Z", "message": "AF-2700: Create Heatmap internal component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0c91855653bc4db82e0a64284a1e01df8d69ff0", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/c0c91855653bc4db82e0a64284a1e01df8d69ff0", "committedDate": "2020-12-03T22:53:57Z", "message": "AF-2700: Create Heatmap internal component"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "92cc3d7ed3aecdb1c7eb88454223911b93526944", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/92cc3d7ed3aecdb1c7eb88454223911b93526944", "committedDate": "2020-12-03T19:13:51Z", "message": "AF-2700: Create Heatmap internal component"}, "afterCommit": {"oid": "c0c91855653bc4db82e0a64284a1e01df8d69ff0", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/c0c91855653bc4db82e0a64284a1e01df8d69ff0", "committedDate": "2020-12-03T22:53:57Z", "message": "AF-2700: Create Heatmap internal component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/8cab46510c60eb5e4df4eea107d24d1d5f46ae17", "committedDate": "2020-12-04T22:27:31Z", "message": "Only used external components are exported"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MTA0ODQy", "url": "https://github.com/kiegroup/appformer/pull/1080#pullrequestreview-546104842", "createdAt": "2020-12-07T12:33:23Z", "commit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "state": "COMMENTED", "comments": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjozMzoyM1rOIAkoJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxODo0NTo1M1rOIA1K3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MTAxMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ComponentsGroupProducer {\n          \n          \n            \n            public class ComponentGroupProducer {", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537471013", "createdAt": "2020-12-07T12:33:23Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ComponentsGroupProducer.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.editor.external;\n+\n+import java.util.List;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.inject.Inject;\n+\n+import org.dashbuilder.client.editor.resources.i18n.Constants;\n+import org.dashbuilder.external.model.ExternalComponent;\n+import org.dashbuilder.external.service.ComponentService;\n+import org.jboss.errai.common.client.api.Caller;\n+import org.jboss.errai.ioc.client.container.SyncBeanManager;\n+import org.uberfire.ext.layout.editor.client.api.LayoutDragComponentGroup;\n+import org.uberfire.ext.layout.editor.client.api.LayoutDragComponentPalette;\n+import org.uberfire.ext.layout.editor.client.widgets.LayoutComponentPaletteGroupProvider;\n+import org.uberfire.ext.plugin.client.perspective.editor.events.PerspectiveEditorFocusEvent;\n+\n+@ApplicationScoped\n+public class ComponentsGroupProducer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MTIxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \n          \n      \n    \n    \n  \n\nPlease remove these extra spaces.", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537471218", "createdAt": "2020-12-07T12:33:46Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-backend/dashbuilder-services/src/test/java/org/dashbuilder/transfer/DataTransferServicesTest.java", "diffHunk": "@@ -301,8 +304,8 @@ public void testDoExportWithoutNavigation() throws Exception {\n     \n     @Test\n     public void testDoExportWithComponents() throws Exception {\n-        when(externalComponentLoader.loadExternal()).thenReturn(asList(component(\"c1\")));\n-\n+        when(layoutComponentsHelper.findComponentsInTemplates((any()))).thenReturn(asList(\"c1\"));\n+        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MTc0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class LayoutComponentsHelper {\n          \n          \n            \n            public class LayoutComponentHelper {", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537471740", "createdAt": "2020-12-07T12:34:42Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-backend/dashbuilder-services/src/main/java/org/dashbuilder/transfer/LayoutComponentsHelper.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.transfer;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import org.dashbuilder.external.model.ExternalComponent;\n+import org.uberfire.ext.layout.editor.api.PerspectiveServices;\n+import org.uberfire.ext.layout.editor.api.editor.LayoutComponent;\n+import org.uberfire.ext.layout.editor.api.editor.LayoutRow;\n+import org.uberfire.ext.layout.editor.api.editor.LayoutTemplate;\n+\n+@ApplicationScoped\n+public class LayoutComponentsHelper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ5MzAzOA==", "bodyText": "Please update this URL.\nAlso, I don't see this information in the other package.json files.", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537493038", "createdAt": "2020-12-07T13:08:40Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/heatmap-base/package.json", "diffHunk": "@@ -0,0 +1,38 @@\n+{\n+  \"name\": \"@dashbuilder-js/heatmap-base\",\n+  \"version\": \"0.1.0\",\n+  \"description\": \"\",\n+  \"license\": \"Apache-2.0\",\n+  \"main\": \"./dist/index.js\",\n+  \"types\": \"./dist/index.d.ts\",\n+  \"files\": [\n+    \"dist\"\n+  ],\n+  \"repository\": {\n+    \"type\": \"git\",\n+    \"url\": \"https://github.com/kiegroup/kogito-tooling.git\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1MzMzMQ==", "bodyText": "Can we have a boolean property like isProvided for ExternalComponent?\nThen componentService can return all components in a single remote call.\nThen you can filter them by isProvided to decide where to add them.\nSee, the point here is to do only one remote call instead of two.", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537653331", "createdAt": "2020-12-07T16:40:38Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ComponentsGroupProducer.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.editor.external;\n+\n+import java.util.List;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.inject.Inject;\n+\n+import org.dashbuilder.client.editor.resources.i18n.Constants;\n+import org.dashbuilder.external.model.ExternalComponent;\n+import org.dashbuilder.external.service.ComponentService;\n+import org.jboss.errai.common.client.api.Caller;\n+import org.jboss.errai.ioc.client.container.SyncBeanManager;\n+import org.uberfire.ext.layout.editor.client.api.LayoutDragComponentGroup;\n+import org.uberfire.ext.layout.editor.client.api.LayoutDragComponentPalette;\n+import org.uberfire.ext.layout.editor.client.widgets.LayoutComponentPaletteGroupProvider;\n+import org.uberfire.ext.plugin.client.perspective.editor.events.PerspectiveEditorFocusEvent;\n+\n+@ApplicationScoped\n+public class ComponentsGroupProducer {\n+\n+    private static final Constants i18n = Constants.INSTANCE;\n+\n+    private SyncBeanManager beanManager;\n+    private LayoutDragComponentPalette layoutDragComponentPalette;\n+    private Caller<ComponentService> componentService;\n+\n+    @Inject\n+    public ComponentsGroupProducer(Caller<ComponentService> externalComponentService,\n+                                   SyncBeanManager beanManager,\n+                                   LayoutDragComponentPalette layoutDragComponentPalette) {\n+        this.componentService = externalComponentService;\n+        this.beanManager = beanManager;\n+        this.layoutDragComponentPalette = layoutDragComponentPalette;\n+    }\n+\n+    public void onEditorFocus(@Observes PerspectiveEditorFocusEvent event) {\n+        loadComponents();\n+    }\n+\n+    public void loadComponents() {\n+\n+        componentService.call((List<ExternalComponent> components) -> addExternalComponents(components))\n+                        .listExternalComponents();\n+\n+        componentService.call((List<ExternalComponent> components) -> addInternalComponents(components))\n+                        .listProvidedComponents();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1NjkwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void addInternalComponents(List<ExternalComponent> components) {\n          \n          \n            \n                public void addProvidedComponents(List<ExternalComponent> components) {", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537656907", "createdAt": "2020-12-07T16:45:13Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ComponentsGroupProducer.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.editor.external;\n+\n+import java.util.List;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.inject.Inject;\n+\n+import org.dashbuilder.client.editor.resources.i18n.Constants;\n+import org.dashbuilder.external.model.ExternalComponent;\n+import org.dashbuilder.external.service.ComponentService;\n+import org.jboss.errai.common.client.api.Caller;\n+import org.jboss.errai.ioc.client.container.SyncBeanManager;\n+import org.uberfire.ext.layout.editor.client.api.LayoutDragComponentGroup;\n+import org.uberfire.ext.layout.editor.client.api.LayoutDragComponentPalette;\n+import org.uberfire.ext.layout.editor.client.widgets.LayoutComponentPaletteGroupProvider;\n+import org.uberfire.ext.plugin.client.perspective.editor.events.PerspectiveEditorFocusEvent;\n+\n+@ApplicationScoped\n+public class ComponentsGroupProducer {\n+\n+    private static final Constants i18n = Constants.INSTANCE;\n+\n+    private SyncBeanManager beanManager;\n+    private LayoutDragComponentPalette layoutDragComponentPalette;\n+    private Caller<ComponentService> componentService;\n+\n+    @Inject\n+    public ComponentsGroupProducer(Caller<ComponentService> externalComponentService,\n+                                   SyncBeanManager beanManager,\n+                                   LayoutDragComponentPalette layoutDragComponentPalette) {\n+        this.componentService = externalComponentService;\n+        this.beanManager = beanManager;\n+        this.layoutDragComponentPalette = layoutDragComponentPalette;\n+    }\n+\n+    public void onEditorFocus(@Observes PerspectiveEditorFocusEvent event) {\n+        loadComponents();\n+    }\n+\n+    public void loadComponents() {\n+\n+        componentService.call((List<ExternalComponent> components) -> addExternalComponents(components))\n+                        .listExternalComponents();\n+\n+        componentService.call((List<ExternalComponent> components) -> addInternalComponents(components))\n+                        .listProvidedComponents();\n+    }\n+\n+    public void addExternalComponents(List<ExternalComponent> components) {\n+        String groupId = i18n.externalComponentsGroupName();\n+        if (!components.isEmpty()) {\n+            checkGroup(groupId);\n+        }\n+        components.forEach(comp -> {\n+            layoutDragComponentPalette.addDraggableComponent(groupId,\n+                                                             comp.getId(),\n+                                                             produceDragComponent(comp));\n+        });\n+\n+    }\n+\n+    public void addInternalComponents(List<ExternalComponent> components) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY2Mjc5NQ==", "bodyText": "Why is this test file \"disabled\"?", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537662795", "createdAt": "2020-12-07T16:52:40Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/heatmap-base/src/__tests__/svgHeatmap.test.disabled", "diffHunk": "@@ -0,0 +1,45 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY3MTQ0MA==", "bodyText": "Is there a specific reason for using the alias Bus?", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537671440", "createdAt": "2020-12-07T17:03:40Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/component-api/src/controller/index.ts", "diffHunk": "@@ -13,4 +13,6 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-export * from \"./ComponentController\";\n\\ No newline at end of file\n+export * from \"./ComponentController\";\n+export * from \"./api\";\n+export * as Bus from \"./ComponentBus\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY3Mjk1OQ==", "bodyText": "Keep in mind that this.componentId would be undefined if withComponentId is not called.", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537672959", "createdAt": "2020-12-07T17:05:45Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/component-api/src/controller/BrowserComponentBus.ts", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { ComponentMessage, MessageProperty } from \"../message\";\n+import { ComponentBus } from \"./ComponentBus\";\n+\n+export class BrowserComponentBus implements ComponentBus {\n+  private componentId: string;\n+\n+  private listener: (message: ComponentMessage) => void;\n+\n+  private readonly messageListener = (e: MessageEvent) => {\n+    this.listener(e.data as ComponentMessage);\n+  };\n+\n+  public start() {\n+    window.addEventListener(\"message\", this.messageListener, false);\n+  }\n+\n+  public send(message: ComponentMessage): void {\n+    console.debug(\"[BrowserComponentBus] Sending Message\");\n+    console.debug(message);\n+    message.properties.set(MessageProperty.COMPONENT_ID, this.componentId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY3OTQwOQ==", "bodyText": "Since you're importing all from heatmap (line 20), you could remove this line and use heatmap.Heatmap where applicable (line 74 only if I'm not mistaken).", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537679409", "createdAt": "2020-12-07T17:14:22Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/heatmap-base/src/SVGHeatmap.tsx", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import { Heatmap } from \"heatmap.js\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY4MDgyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import * as heatmap from \"heatmap.js\";\n          \n          \n            \n            import * as heatmap from \"heatmap\";", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537680828", "createdAt": "2020-12-07T17:16:12Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/heatmap-base/src/SVGHeatmap.tsx", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import { Heatmap } from \"heatmap.js\";\n+import * as React from \"react\";\n+import { useEffect, createRef, useState } from \"react\";\n+import * as heatmap from \"heatmap.js\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY4NjYwNA==", "bodyText": "Not that I'm saying to do this in this PR, but I think this could be a good opportunity to use our i18n package. :)\nAlso applicable to other places.", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537686604", "createdAt": "2020-12-07T17:23:50Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/heatmap-component/src/SVGHeatmapComponent.tsx", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import * as React from \"react\";\n+import { useEffect, useState } from \"react\";\n+\n+import { SVGHeatmap, SVGNodeValue } from \"@dashbuilder-js/heatmap-base\";\n+import { DataSet } from \"@dashbuilder-js/component-api\";\n+import { ComponentController } from \"@dashbuilder-js/component-api/dist/controller/ComponentController\";\n+\n+const SVG_CONTENT_PARAM = \"svgContent\";\n+const SVG_URL_PARAM = \"svgUrl\";\n+\n+const NOT_ENOUGH_COLUMNS_MSG = \"Heatmap expects 2 columns: Node ID (TEXT or Label) and value (NUMBER)\";\n+const INVALID_COLUMNS_TYPE_MSG = \"Wrong columns type. First column should be TEXT or LABEL and second column NUMBER.\";\n+const MISSING_PARAM_MSG = \"You must provide either a SVG URL or the SVG Content.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY5OTQzNg==", "bodyText": "Can we use ColumnType here instead of \"TEXT\", \"LABEL\", and \"NUMBER\"?", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537699436", "createdAt": "2020-12-07T17:41:57Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/heatmap-component/src/SVGHeatmapComponent.tsx", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import * as React from \"react\";\n+import { useEffect, useState } from \"react\";\n+\n+import { SVGHeatmap, SVGNodeValue } from \"@dashbuilder-js/heatmap-base\";\n+import { DataSet } from \"@dashbuilder-js/component-api\";\n+import { ComponentController } from \"@dashbuilder-js/component-api/dist/controller/ComponentController\";\n+\n+const SVG_CONTENT_PARAM = \"svgContent\";\n+const SVG_URL_PARAM = \"svgUrl\";\n+\n+const NOT_ENOUGH_COLUMNS_MSG = \"Heatmap expects 2 columns: Node ID (TEXT or Label) and value (NUMBER)\";\n+const INVALID_COLUMNS_TYPE_MSG = \"Wrong columns type. First column should be TEXT or LABEL and second column NUMBER.\";\n+const MISSING_PARAM_MSG = \"You must provide either a SVG URL or the SVG Content.\";\n+\n+const notEmpty = (param?: string) => param !== undefined && param.trim() !== \"\";\n+\n+const validateDataSet = (ds: DataSet): string | undefined => {\n+  if (ds.columns.length < 2) {\n+    return NOT_ENOUGH_COLUMNS_MSG;\n+  }\n+  if ((ds.columns[0].type !== \"TEXT\" && ds.columns[0].type !== \"LABEL\") || ds.columns[1].type !== \"NUMBER\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcxNTc3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              const [ repaint, setRepaint ] = useState(false);\n          \n          \n            \n              const [repaint, setRepaint] = useState(false);", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537715775", "createdAt": "2020-12-07T18:05:06Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/heatmap-base/src/SVGHeatmap.tsx", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import { Heatmap } from \"heatmap.js\";\n+import * as React from \"react\";\n+import { useEffect, createRef, useState } from \"react\";\n+import * as heatmap from \"heatmap.js\";\n+\n+export interface SVGNodeValue {\n+  nodeId: string;\n+  value: number;\n+}\n+\n+interface NodeInfo {\n+  x: number;\n+  y: number;\n+  size: number;\n+}\n+\n+interface HeatData {\n+  x: number;\n+  y: number;\n+  value: number;\n+  radius?: number;\n+}\n+\n+const reduce = (data: HeatData[], reducer: (v1: number, v2: number) => number) =>\n+  data.length > 0 ? data.map(d => d.value).reduce((d1, d2) => reducer(d1, d2)) : 0;\n+\n+function createHeatmap(parent: HTMLElement, heatData: HeatData[]) {\n+  return heatmap\n+    .create({\n+      container: parent\n+    })\n+    .setData({\n+      max: reduce(heatData, Math.max),\n+      min: reduce(heatData, Math.min),\n+      data: heatData\n+    });\n+}\n+\n+const getNodeInfo = (el: HTMLElement): NodeInfo => {\n+  const bounds = el.getBoundingClientRect();\n+  const radius = Math.sqrt((bounds.width * bounds.height) / 4);\n+  return {\n+    x: (bounds.left + bounds.right) / 2,\n+    y: (bounds.top + bounds.bottom) / 2,\n+    size: radius\n+  };\n+};\n+\n+export interface SVGHeatmapProps {\n+  svgNodesValues: SVGNodeValue[];\n+  svgContent: string;\n+  width?: string;\n+  height?: string;\n+}\n+\n+export function SVGHeatmap(props: SVGHeatmapProps) {\n+  const parentRef = createRef<HTMLDivElement>();\n+  const [svgHeatmap, setSvgHeatmap] = useState<Heatmap<any, any, any>>();\n+  const [ repaint, setRepaint ] = useState(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc0MjA0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              const onClickTitled = useCallback((e: any) => {\n          \n          \n            \n              const onTitleClicked = useCallback((e: any) => {", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537742045", "createdAt": "2020-12-07T18:45:53Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/processes-heatmaps-component/src/ProcessSelector.tsx", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import * as React from \"react\";\n+import { useEffect, useCallback, useState, createRef } from \"react\";\n+\n+export interface KieServerContainer {\n+  id: string;\n+  processes: string[];\n+}\n+\n+interface SelectedValue {\n+  container: KieServerContainer;\n+  process: string;\n+}\n+\n+export interface ProcessSelectorProps {\n+  containers: KieServerContainer[];\n+  onContainerProcessSelected: (container: string, process: string) => void;\n+  selectedContainer?: string;\n+  selectedProcess?: string;\n+}\n+\n+export function ProcessSelector(props: ProcessSelectorProps) {\n+  const containerSelectRef = createRef<HTMLSelectElement>();\n+  const titleRef = createRef<HTMLDivElement>();\n+  const bodyRef = createRef<HTMLDivElement>();\n+  const processSelectRef = createRef<HTMLSelectElement>();\n+  const [selectedValue, setSelectedValue] = useState<SelectedValue>();\n+\n+  const onClickTitled = useCallback((e: any) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NTU2NzAx", "url": "https://github.com/kiegroup/appformer/pull/1080#pullrequestreview-546556701", "createdAt": "2020-12-07T21:36:43Z", "commit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "state": "COMMENTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMTozNjo0M1rOIA7zEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMTo1OTo0OFrOIA8p1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg1MDY0Mw==", "bodyText": "A file called \"controller\" exporting something labeled as \"ComponentAPI\" doesn't smell good. I don't know the context of that, but do you think we can improve it?", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537850643", "createdAt": "2020-12-07T21:36:43Z", "author": {"login": "tiagobento"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/component-api/src/__tests__/api.test.ts", "diffHunk": "@@ -13,9 +13,8 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n-import * as ComponentAPI from \"../controller/api\";\n-import * as Bus from \"../controller/ComponentBus\";\n+import { Bus } from \"../controller\";\n+import * as ComponentAPI from \"../controller\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg1MTA1MA==", "bodyText": "Can we have \"componentId\" be a constructor parameter? That would remove this issue.", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537851050", "createdAt": "2020-12-07T21:37:25Z", "author": {"login": "tiagobento"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/component-api/src/controller/BrowserComponentBus.ts", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { ComponentMessage, MessageProperty } from \"../message\";\n+import { ComponentBus } from \"./ComponentBus\";\n+\n+export class BrowserComponentBus implements ComponentBus {\n+  private componentId: string;\n+\n+  private listener: (message: ComponentMessage) => void;\n+\n+  private readonly messageListener = (e: MessageEvent) => {\n+    this.listener(e.data as ComponentMessage);\n+  };\n+\n+  public start() {\n+    window.addEventListener(\"message\", this.messageListener, false);\n+  }\n+\n+  public send(message: ComponentMessage): void {\n+    console.debug(\"[BrowserComponentBus] Sending Message\");\n+    console.debug(message);\n+    message.properties.set(MessageProperty.COMPONENT_ID, this.componentId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY3Mjk1OQ=="}, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg1MTQ3Ng==", "bodyText": "Nice change.", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537851476", "createdAt": "2020-12-07T21:38:06Z", "author": {"login": "tiagobento"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/component-api/src/controller/DashbuilderComponentDispatcher.ts", "diffHunk": "@@ -56,8 +54,8 @@ export class DashbuilderComponentDispatcher implements InternalComponentDispatch\n   }\n \n   public init(): void {\n-    Bus.INSTANCE.setListener(this.messageDispatcher);\n-    Bus.INSTANCE.start();\n+    this.bus.setListener(this.messageDispatcher);\n+    this.bus.start();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg1MzExNA==", "bodyText": "This should be an effect. You want to remove this event listener when this component is unmounted, right? So you have to wrap that into an useEffect and have it be registered on the returning function.", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537853114", "createdAt": "2020-12-07T21:40:52Z", "author": {"login": "tiagobento"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/heatmap-base/src/SVGHeatmap.tsx", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import { Heatmap } from \"heatmap.js\";\n+import * as React from \"react\";\n+import { useEffect, createRef, useState } from \"react\";\n+import * as heatmap from \"heatmap.js\";\n+\n+export interface SVGNodeValue {\n+  nodeId: string;\n+  value: number;\n+}\n+\n+interface NodeInfo {\n+  x: number;\n+  y: number;\n+  size: number;\n+}\n+\n+interface HeatData {\n+  x: number;\n+  y: number;\n+  value: number;\n+  radius?: number;\n+}\n+\n+const reduce = (data: HeatData[], reducer: (v1: number, v2: number) => number) =>\n+  data.length > 0 ? data.map(d => d.value).reduce((d1, d2) => reducer(d1, d2)) : 0;\n+\n+function createHeatmap(parent: HTMLElement, heatData: HeatData[]) {\n+  return heatmap\n+    .create({\n+      container: parent\n+    })\n+    .setData({\n+      max: reduce(heatData, Math.max),\n+      min: reduce(heatData, Math.min),\n+      data: heatData\n+    });\n+}\n+\n+const getNodeInfo = (el: HTMLElement): NodeInfo => {\n+  const bounds = el.getBoundingClientRect();\n+  const radius = Math.sqrt((bounds.width * bounds.height) / 4);\n+  return {\n+    x: (bounds.left + bounds.right) / 2,\n+    y: (bounds.top + bounds.bottom) / 2,\n+    size: radius\n+  };\n+};\n+\n+export interface SVGHeatmapProps {\n+  svgNodesValues: SVGNodeValue[];\n+  svgContent: string;\n+  width?: string;\n+  height?: string;\n+}\n+\n+export function SVGHeatmap(props: SVGHeatmapProps) {\n+  const parentRef = createRef<HTMLDivElement>();\n+  const [svgHeatmap, setSvgHeatmap] = useState<Heatmap<any, any, any>>();\n+  const [ repaint, setRepaint ] = useState(false);\n+\n+  useEffect(() => {\n+    if (props.svgContent) {\n+      const heatMapContainer = parentRef.current!;\n+      heatMapContainer.innerHTML = props.svgContent;\n+      const svg = heatMapContainer.querySelector(\"svg\")!;\n+      svg.style.width = \"100%\";\n+      svg.style.height = \"auto\";\n+      setSvgHeatmap(createHeatmap(heatMapContainer, []));\n+    }\n+  }, [props.svgContent]);\n+\n+  useEffect(() => {\n+    if (svgHeatmap && props.svgNodesValues && props.svgNodesValues.length > 0) {\n+      const values = props.svgNodesValues\n+        .filter(n => document.getElementById(n.nodeId))\n+        .map(nodeValue => {\n+          const node = document.getElementById(nodeValue.nodeId);\n+          const nodeInfo = getNodeInfo(node!);\n+          return {\n+            x: Math.ceil(nodeInfo.x),\n+            y: Math.ceil(nodeInfo.y),\n+            radius: nodeInfo.size,\n+            value: nodeValue.value\n+          };\n+        });\n+\n+      if (values.length > 0) {\n+        svgHeatmap.setData({\n+          min: values.map(d => d.value).reduce((d1, d2) => Math.min(d1, d2)),\n+          max: values.map(d => d.value).reduce((d1, d2) => Math.max(d1, d2)),\n+          data: values\n+        });\n+      }\n+      svgHeatmap.repaint();\n+    }\n+  }, [svgHeatmap, props.svgNodesValues, repaint]);\n+\n+  window.onresize = (e: any) => setRepaint(previous => !previous);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg1NDc5Mg==", "bodyText": "This is nit-picking, but on kogito-tooling we avoid having acronyms all-caps. We would name this file SvgHeatmap.", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537854792", "createdAt": "2020-12-07T21:43:49Z", "author": {"login": "tiagobento"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/heatmap-base/src/index.tsx", "diffHunk": "@@ -0,0 +1,17 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+export * from \"./SVGHeatmap\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg1NDkyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  const heatMapContainer = parentRef.current!;\n          \n          \n            \n                  const heatmapContainer = parentRef.current!;\n          \n      \n    \n    \n  \n\n\ud83d\ude4a", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537854929", "createdAt": "2020-12-07T21:44:05Z", "author": {"login": "tiagobento"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/heatmap-base/src/SVGHeatmap.tsx", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import { Heatmap } from \"heatmap.js\";\n+import * as React from \"react\";\n+import { useEffect, createRef, useState } from \"react\";\n+import * as heatmap from \"heatmap.js\";\n+\n+export interface SVGNodeValue {\n+  nodeId: string;\n+  value: number;\n+}\n+\n+interface NodeInfo {\n+  x: number;\n+  y: number;\n+  size: number;\n+}\n+\n+interface HeatData {\n+  x: number;\n+  y: number;\n+  value: number;\n+  radius?: number;\n+}\n+\n+const reduce = (data: HeatData[], reducer: (v1: number, v2: number) => number) =>\n+  data.length > 0 ? data.map(d => d.value).reduce((d1, d2) => reducer(d1, d2)) : 0;\n+\n+function createHeatmap(parent: HTMLElement, heatData: HeatData[]) {\n+  return heatmap\n+    .create({\n+      container: parent\n+    })\n+    .setData({\n+      max: reduce(heatData, Math.max),\n+      min: reduce(heatData, Math.min),\n+      data: heatData\n+    });\n+}\n+\n+const getNodeInfo = (el: HTMLElement): NodeInfo => {\n+  const bounds = el.getBoundingClientRect();\n+  const radius = Math.sqrt((bounds.width * bounds.height) / 4);\n+  return {\n+    x: (bounds.left + bounds.right) / 2,\n+    y: (bounds.top + bounds.bottom) / 2,\n+    size: radius\n+  };\n+};\n+\n+export interface SVGHeatmapProps {\n+  svgNodesValues: SVGNodeValue[];\n+  svgContent: string;\n+  width?: string;\n+  height?: string;\n+}\n+\n+export function SVGHeatmap(props: SVGHeatmapProps) {\n+  const parentRef = createRef<HTMLDivElement>();\n+  const [svgHeatmap, setSvgHeatmap] = useState<Heatmap<any, any, any>>();\n+  const [ repaint, setRepaint ] = useState(false);\n+\n+  useEffect(() => {\n+    if (props.svgContent) {\n+      const heatMapContainer = parentRef.current!;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg1Njc1NQ==", "bodyText": "As you know, I'm not the biggest fan of static stuff. This has the potential of making our lives much harder in the future. If you could remove the static calls to \"ComponentAPI\", this would be awesome. Since the other one is related to the development environment, I don't think it's that urgent, but it would be great if you could refactor the two \\o/", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537856755", "createdAt": "2020-12-07T21:47:09Z", "author": {"login": "tiagobento"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/heatmap-component/src/index.tsx", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import * as React from \"react\";\n+import * as ReactDOM from \"react-dom\";\n+\n+import * as ComponentDev from \"@dashbuilder-js/component-dev\";\n+import * as ComponentAPI from \"@dashbuilder-js/component-api\";\n+import { SVGHeatmapComponent } from \"./SVGHeatmapComponent\";\n+\n+ReactDOM.render(\n+  <SVGHeatmapComponent controller={ComponentAPI.getComponentController()} />,\n+  document.getElementById(\"app\")!\n+);\n+\n+if (ComponentDev) {\n+  ComponentDev.start();\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg1NzMyMQ==", "bodyText": "Shouldn't this be import { ComponentController } from \"@dashbuilder-js/component-api\"; ?", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537857321", "createdAt": "2020-12-07T21:48:01Z", "author": {"login": "tiagobento"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/logo-component/src/LogoComponent.tsx", "diffHunk": "@@ -15,32 +15,29 @@\n  */\n \n import * as React from \"react\";\n-import { useEffect, useState } from \"react\";\n+import { useState } from \"react\";\n import { Logo, LogoProps } from \"./Logo\";\n-import * as ComponentAPI from \"@dashbuilder-js/component-api\";\n+import { ComponentController } from \"@dashbuilder-js/component-api/dist/controller/ComponentController\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2MDQ3MQ==", "bodyText": "This is a side effect, should be wrapped in a useEffect call.", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537860471", "createdAt": "2020-12-07T21:53:25Z", "author": {"login": "tiagobento"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/logo-component/src/LogoComponent.tsx", "diffHunk": "@@ -15,32 +15,29 @@\n  */\n \n import * as React from \"react\";\n-import { useEffect, useState } from \"react\";\n+import { useState } from \"react\";\n import { Logo, LogoProps } from \"./Logo\";\n-import * as ComponentAPI from \"@dashbuilder-js/component-api\";\n+import { ComponentController } from \"@dashbuilder-js/component-api/dist/controller/ComponentController\";\n const DEFAULT_SRC = \"./images/dashbuilder-logo.png\";\n const SRC_PROP = \"src\";\n const WIDTH_PROP = \"width\";\n const HEIGHT_PROP = \"height\";\n \n-export function App() {\n+interface Props {\n+  controller: ComponentController;\n+}\n+export function LogoComponent(props: Props) {\n   const [logoProps, setLogoProps] = useState<LogoProps>({\n     src: DEFAULT_SRC\n   });\n \n-  const handleInit = (componentProps: Map<string, any>) => {\n+  props.controller.setOnInit(componentProps => {\n     setLogoProps({\n       src: (componentProps.get(SRC_PROP) as string) || DEFAULT_SRC,\n       width: componentProps.get(WIDTH_PROP) as string,\n       height: componentProps.get(HEIGHT_PROP) as string\n     });\n-  };\n+  });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2Mjg0MA==", "bodyText": "I think moving that to the \"else\" part makes for better code, since you're essentially removing mutabilityl :)", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537862840", "createdAt": "2020-12-07T21:56:42Z", "author": {"login": "tiagobento"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/logo-component/webpack.config.js", "diffHunk": "@@ -20,18 +20,23 @@ const { merge } = require(\"webpack-merge\");\n const common = require(\"../../webpack.common.config\");\n \n module.exports = async (env, argv) => {\n+  let entryPoint = \"./src/index.tsx\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NDY2Mw==", "bodyText": "Effect.", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r537864663", "createdAt": "2020-12-07T21:59:48Z", "author": {"login": "tiagobento"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/process-heatmap-component/src/ProcessHeatmapComponent.tsx", "diffHunk": "@@ -0,0 +1,170 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import * as React from \"react\";\n+import { useEffect, useState, useCallback } from \"react\";\n+import { ColumnType, DataSet, FunctionCallRequest } from \"@dashbuilder-js/component-api\";\n+import { ComponentController } from \"@dashbuilder-js/component-api/dist/controller/ComponentController\";\n+import { SVGNodeValue, SVGHeatmap } from \"@dashbuilder-js/heatmap-base\";\n+\n+const NOT_ENOUGH_COLUMNS_MSG = \"Process Heatmap expects 2 columns: Node Id(LABEL or TEXT),Value (NUMBER).\";\n+const FIRST_COLUMN_INVALID_MSG = \"Wrong type for first column, it should be either LABEL or TEXT.\";\n+const SECOND_COLUMN_INVALID_MSG = \"Wrong type for second column, it should be NUMBER.\";\n+\n+enum Params {\n+  SERVER_TEMPLATE = \"serverTemplate\",\n+  CONTAINER_ID = \"containerId\",\n+  PROCESS_ID = \"processId\"\n+}\n+\n+enum AppStateType {\n+  ERROR = \"Error\",\n+  INIT = \"Initializing\",\n+  LOADING_SVG = \"Loading SVG\",\n+  LOADED_SVG = \"Loaded SVG\",\n+  FINISHED = \"Finished loading\"\n+}\n+\n+interface AppState {\n+  state: AppStateType;\n+  processesNodesValues: SVGNodeValue[];\n+  svgRequest?: FunctionCallRequest;\n+  processSVG?: string;\n+  configurationIssue: string;\n+  message?: string;\n+}\n+\n+const isEmpty = (param?: string) => param === undefined || param.trim() === \"\";\n+\n+const validateParams = (params: Map<string, any>): string | undefined => {\n+  if (isEmpty(params.get(Params.SERVER_TEMPLATE))) {\n+    return \"Server template is required.\";\n+  }\n+  if (isEmpty(params.get(Params.CONTAINER_ID))) {\n+    return \"Container ID is required.\";\n+  }\n+  if (isEmpty(params.get(Params.PROCESS_ID))) {\n+    return \"Process ID is required.\";\n+  }\n+};\n+\n+const validateDataSet = (ds: DataSet): string | undefined => {\n+  if (ds.columns.length < 2) {\n+    return NOT_ENOUGH_COLUMNS_MSG;\n+  }\n+  if (ds.columns[0].type !== ColumnType.LABEL && ds.columns[0].type !== ColumnType.TEXT) {\n+    return FIRST_COLUMN_INVALID_MSG;\n+  }\n+  if (ds.columns[1].type !== ColumnType.NUMBER) {\n+    return SECOND_COLUMN_INVALID_MSG;\n+  }\n+};\n+\n+interface Props {\n+  controller: ComponentController;\n+}\n+\n+export function ProcessHeatmapComponent(props: Props) {\n+  const [appState, setAppState] = useState<AppState>({\n+    state: AppStateType.INIT,\n+    processesNodesValues: [],\n+    configurationIssue: \"\"\n+  });\n+\n+  props.controller.setOnInit((params: Map<string, string>) => {\n+    const validationMessage = validateParams(params);\n+    if (validationMessage) {\n+      setAppState(previousAppState => ({\n+        ...previousAppState,\n+        state: AppStateType.ERROR,\n+        message: validationMessage,\n+        configurationIssue: validationMessage\n+      }));\n+    } else {\n+      setAppState(previousAppState => ({\n+        ...previousAppState,\n+        state: AppStateType.LOADING_SVG,\n+        svgRequest: {\n+          functionName: \"ProcessSVGFunction\",\n+          parameters: params\n+        },\n+        configurationIssue: \"\"\n+      }));\n+    }\n+  });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 107}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de1683e62498d0ea561bdbc798f5c888aeea3a4d", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/de1683e62498d0ea561bdbc798f5c888aeea3a4d", "committedDate": "2020-12-08T19:55:17Z", "message": "Review changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea974ce46f11013b4d8950e8c56b1b1454d61a66", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/ea974ce46f11013b4d8950e8c56b1b1454d61a66", "committedDate": "2020-12-08T20:07:27Z", "message": "Adding test for listAllComponents"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MTE5OTY4", "url": "https://github.com/kiegroup/appformer/pull/1080#pullrequestreview-548119968", "createdAt": "2020-12-09T12:11:29Z", "commit": {"oid": "ea974ce46f11013b4d8950e8c56b1b1454d61a66"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4Mzc4ODI5", "url": "https://github.com/kiegroup/appformer/pull/1080#pullrequestreview-548378829", "createdAt": "2020-12-09T16:41:04Z", "commit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjo0MTowNFrOICeV1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjo0MTowNFrOICeV1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2NTE3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              let entryPoint = \"./src/index.tsx\";\n          \n          \n            \n              let entryPoint;", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r539465172", "createdAt": "2020-12-09T16:41:04Z", "author": {"login": "tiagobento"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/logo-component/webpack.config.js", "diffHunk": "@@ -20,18 +20,23 @@ const { merge } = require(\"webpack-merge\");\n const common = require(\"../../webpack.common.config\");\n \n module.exports = async (env, argv) => {\n+  let entryPoint = \"./src/index.tsx\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4Mzc5MzEx", "url": "https://github.com/kiegroup/appformer/pull/1080#pullrequestreview-548379311", "createdAt": "2020-12-09T16:41:32Z", "commit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjo0MTozMlrOICeXgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjo0MTozMlrOICeXgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2NTYwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              if (process.env.WEBPACK_DEV_SERVER) {\n          \n          \n            \n                entryPoint = \"./src/index-dev.tsx\";\n          \n          \n            \n                copyResources.push({ from: \"./static/manifest.dev.json\", to: \"./manifest.dev.json\" });\n          \n          \n            \n              }\n          \n          \n            \n              if (process.env.WEBPACK_DEV_SERVER) {\n          \n          \n            \n                entryPoint = \"./src/index-dev.tsx\";\n          \n          \n            \n                copyResources.push({ from: \"./static/manifest.dev.json\", to: \"./manifest.dev.json\" });\n          \n          \n            \n              } else {\n          \n          \n            \n                 entryPoint = \"./src/index.tsx\";\n          \n          \n            \n              }", "url": "https://github.com/kiegroup/appformer/pull/1080#discussion_r539465600", "createdAt": "2020-12-09T16:41:32Z", "author": {"login": "tiagobento"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/logo-component/webpack.config.js", "diffHunk": "@@ -20,18 +20,23 @@ const { merge } = require(\"webpack-merge\");\n const common = require(\"../../webpack.common.config\");\n \n module.exports = async (env, argv) => {\n+  let entryPoint = \"./src/index.tsx\";\n+  const copyResources = [\n+    { from: \"./static/images\", to: \"./images\" },\n+    { from: \"./static/index.html\", to: \"./index.html\" },\n+    { from: \"./static/manifest.json\", to: \"./manifest.json\" }\n+  ];\n+\n+  if (process.env.WEBPACK_DEV_SERVER) {\n+    entryPoint = \"./src/index-dev.tsx\";\n+    copyResources.push({ from: \"./static/manifest.dev.json\", to: \"./manifest.dev.json\" });\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cab46510c60eb5e4df4eea107d24d1d5f46ae17"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "070a9aa3220249234066899d60a9442740660579", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/070a9aa3220249234066899d60a9442740660579", "committedDate": "2020-12-09T17:30:59Z", "message": "Removing static functions and using a class for component Api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MTQwOTg1", "url": "https://github.com/kiegroup/appformer/pull/1080#pullrequestreview-549140985", "createdAt": "2020-12-10T12:20:38Z", "commit": {"oid": "070a9aa3220249234066899d60a9442740660579"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcbc832e6d178e5fe0f97ccdbb0102e3ff138f4c", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/bcbc832e6d178e5fe0f97ccdbb0102e3ff138f4c", "committedDate": "2020-12-10T14:03:03Z", "message": "improving process selector"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e23b58540391ac86e2468c0616d4286dc870599", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/5e23b58540391ac86e2468c0616d4286dc870599", "committedDate": "2020-12-10T16:39:55Z", "message": "Making process selector expanded again"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NDM4NzIx", "url": "https://github.com/kiegroup/appformer/pull/1080#pullrequestreview-549438721", "createdAt": "2020-12-10T17:32:03Z", "commit": {"oid": "5e23b58540391ac86e2468c0616d4286dc870599"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "014ca570caff2894f61d9f069a16a378f0d54b8f", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/014ca570caff2894f61d9f069a16a378f0d54b8f", "committedDate": "2020-12-11T12:49:35Z", "message": "increasing version and removing sample logo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNTY0ODI4", "url": "https://github.com/kiegroup/appformer/pull/1080#pullrequestreview-550564828", "createdAt": "2020-12-11T20:43:49Z", "commit": {"oid": "014ca570caff2894f61d9f069a16a378f0d54b8f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2029, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}