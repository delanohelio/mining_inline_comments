{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NDA1MTQ3", "number": 1025, "title": "KOGITO-2895 & KOGITO-2896: Enabling PMML support on DMN Designer", "bodyText": "@karreiro @jomarko Can you please review and test it?\nScope of these PRs are to fully enable the PMML usage inside the DMN Editor.\nThe marshaller used to process the *.pmml is the one available on JS side, in kogito-tooling repo. For this reason, a js-bridge with retrieves the marshalled data was implemented.\n\nPlease note, currently only 2 kind of models are enabled: ScoreCardModel and RegressionModel. To enable all models, we need to merge this PR: kiegroup/kogito-tooling#236\nRelated PRs\nkie-wb-common: kiegroup/kie-wb-common#3388\nappformer: #1025\nkiegroup/kogito-tooling#248\nSpecial credit to @karreiro and @manstis :)\nhttps://issues.redhat.com/browse/KOGITO-2895\nhttps://issues.redhat.com/browse/KOGITO-2896\nhttps://issues.redhat.com/browse/BAPL-1689", "createdAt": "2020-08-10T10:08:37Z", "url": "https://github.com/kiegroup/appformer/pull/1025", "merged": true, "mergeCommit": {"oid": "44cccb46cb9feb5aea4169b05efa30096a95bfe3"}, "closed": true, "closedAt": "2020-09-04T16:29:04Z", "author": {"login": "yesamer"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7TX_igH2gAyNDY1NDA1MTQ3OmJmYTE1ZTY3OGQ0MjkyNzgwZDZjODRmNzZiNWUxOWVjNGZiNjA2NTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFlcnaAFqTQ4MjY2MzkwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bfa15e678d4292780d6c84f76b5e19ec4fb60650", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/bfa15e678d4292780d6c84f76b5e19ec4fb60650", "committedDate": "2020-08-03T15:02:01Z", "message": "KOGITO-2895: PMMLMarshaller bridge added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbc709992a97e810db5d0c1d0b88a2c429d2fe95", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/fbc709992a97e810db5d0c1d0b88a2c429d2fe95", "committedDate": "2020-08-07T09:34:29Z", "message": "KOGITO-2895: PMMLMarshaller bridge added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9af51398a82d3b2e6544a5142e5601fc21cce4e4", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/9af51398a82d3b2e6544a5142e5601fc21cce4e4", "committedDate": "2020-08-07T09:34:33Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06dc201b9cacc4712e60479b6e40be9e78eb6d23", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/06dc201b9cacc4712e60479b6e40be9e78eb6d23", "committedDate": "2020-08-07T15:14:28Z", "message": "KOGITO-2895: PMMLMarshaller bridge added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f77f1c729afaade8976c65824ec64287a6430816", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/f77f1c729afaade8976c65824ec64287a6430816", "committedDate": "2020-08-07T15:16:29Z", "message": "KOGITO-2895: PMMLMarshaller bridge added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dddbca2378d84ab8d08ca59c29650360bf1cd4fc", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/dddbca2378d84ab8d08ca59c29650360bf1cd4fc", "committedDate": "2020-08-10T06:58:01Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c14b2baf0ce684a8b266ae4707e074636496a0fb", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/c14b2baf0ce684a8b266ae4707e074636496a0fb", "committedDate": "2020-08-10T08:40:58Z", "message": "KOGITO-2895: Minor Changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f39ac8fb5cbde5c6b78091f9b1ab38a703dfc08", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/9f39ac8fb5cbde5c6b78091f9b1ab38a703dfc08", "committedDate": "2020-08-10T08:44:15Z", "message": "KOGITO-2895: Minor Changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3b3d92662d48421218e2a34850d6c5609dd5c1d", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/f3b3d92662d48421218e2a34850d6c5609dd5c1d", "committedDate": "2020-08-10T09:34:34Z", "message": "KOGITO-2895: Minor Changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6133622bb6cd6b7b9c300996d977f0c0287b1b25", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/6133622bb6cd6b7b9c300996d977f0c0287b1b25", "committedDate": "2020-08-10T10:06:25Z", "message": "KOGITO-2895: Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c1b7252ec433ac1a3a5ba765f6ff321893f422f", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/5c1b7252ec433ac1a3a5ba765f6ff321893f422f", "committedDate": "2020-08-10T14:02:39Z", "message": "KOGITO-2895: Minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85ca5a61f957b9ff819674314c7668f143dd94d0", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/85ca5a61f957b9ff819674314c7668f143dd94d0", "committedDate": "2020-08-10T14:26:18Z", "message": "KOGITO-2895: Minor changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NTI5NDI5", "url": "https://github.com/kiegroup/appformer/pull/1025#pullrequestreview-465529429", "createdAt": "2020-08-12T01:19:17Z", "commit": {"oid": "85ca5a61f957b9ff819674314c7668f143dd94d0"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMToxOToxN1rOG_OgSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMToyMzoyMlrOG_OkmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk1MTExMg==", "bodyText": "We're missing the copyright here :-)", "url": "https://github.com/kiegroup/appformer/pull/1025#discussion_r468951112", "createdAt": "2020-08-12T01:19:17Z", "author": {"login": "karreiro"}, "path": "appformer-kogito-bridge/src/test/java/org/appformer/kogito/bridge/client/pmmleditor/marshaller/PMMLEditorMarshallerServiceTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package org.appformer.kogito.bridge.client.pmmleditor.marshaller;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85ca5a61f957b9ff819674314c7668f143dd94d0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk1MTEzNQ==", "bodyText": "We're missing the copyright here :-)", "url": "https://github.com/kiegroup/appformer/pull/1025#discussion_r468951135", "createdAt": "2020-08-12T01:19:22Z", "author": {"login": "karreiro"}, "path": "appformer-kogito-bridge/src/test/java/org/appformer/kogito/bridge/client/pmmleditor/marshaller/PMMLEditorMarshallerServiceProducerTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.appformer.kogito.bridge.client.pmmleditor.marshaller;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85ca5a61f957b9ff819674314c7668f143dd94d0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk1MjIxNg==", "bodyText": "I believe this file is missing our auto-format.", "url": "https://github.com/kiegroup/appformer/pull/1025#discussion_r468952216", "createdAt": "2020-08-12T01:23:22Z", "author": {"login": "karreiro"}, "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/pmmleditor/marshaller/model/JSIUtils.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.appformer.kogito.bridge.client.pmmleditor.marshaller.model;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import jsinterop.base.Js;\n+import jsinterop.base.JsArrayLike;\n+\n+public class JSIUtils {\n+\n+    private JSIUtils() {\n+        // Utils class\n+    }\n+\n+    /**\n+     * Helper method to create a new, empty <code>JsArrayLike</code>\n+     * @return\n+     */\n+    public static native <D> JsArrayLike<D> getNativeArray() /*-{\n+        return [];\n+    }-*/;\n+\n+    /**\n+     * Returns a <code>JsArrayLike</code> where each element represents the <b>unwrapped</b> object (i.e. object.value) of the original one.\n+     * It the original <code>JsArrayLike</code> is <code>null</code>, returns a new, empty one\n+     * @param original\n+     * @param <D>\n+     * @return\n+     */\n+    public static native <D> JsArrayLike<D> getUnwrappedElementsArray(final JsArrayLike<D> original) /*-{\n+        var toReturn = [];\n+        if(original != null) {\n+            toReturn = original.map(function (arrayItem) {\n+                var retrieved = arrayItem.value\n+                var toSet = retrieved == null ? arrayItem : retrieved\n+                return toSet;\n+            });\n+        }\n+        return toReturn;\n+    }-*/;\n+\n+    public static<D> List<D> toList(final JsArrayLike<D> jsArrayLike) {\n+        final List<D> toReturn = new ArrayList<>();\n+        if (Objects.nonNull(jsArrayLike)) {\n+            for (int i = 0; (i<jsArrayLike.getLength()); i ++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85ca5a61f957b9ff819674314c7668f143dd94d0"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff41df4c6940e15205630de19758c2d59206033f", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/ff41df4c6940e15205630de19758c2d59206033f", "committedDate": "2020-08-12T06:41:31Z", "message": "KOGITO-2895: Changes required during CR"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MzQ5OTky", "url": "https://github.com/kiegroup/appformer/pull/1025#pullrequestreview-466349992", "createdAt": "2020-08-12T23:49:15Z", "commit": {"oid": "ff41df4c6940e15205630de19758c2d59206033f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2NDUyMTQ2", "url": "https://github.com/kiegroup/appformer/pull/1025#pullrequestreview-466452146", "createdAt": "2020-08-13T05:25:09Z", "commit": {"oid": "ff41df4c6940e15205630de19758c2d59206033f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNToyNTowOVrOG_8c_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNToyNzowNlrOG_8fMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTcwMzkzNQ==", "bodyText": "This is already in org.kie.workbench.common.dmn.webapp.kogito.marshaller.mapper.JsUtils", "url": "https://github.com/kiegroup/appformer/pull/1025#discussion_r469703935", "createdAt": "2020-08-13T05:25:09Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/pmmleditor/marshaller/model/JSIUtils.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.appformer.kogito.bridge.client.pmmleditor.marshaller.model;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import jsinterop.base.Js;\n+import jsinterop.base.JsArrayLike;\n+\n+public class JSIUtils {\n+\n+    private JSIUtils() {\n+        // Utils class\n+    }\n+\n+    /**\n+     * Helper method to create a new, empty <code>JsArrayLike</code>\n+     * @return\n+     */\n+    public static native <D> JsArrayLike<D> getNativeArray() /*-{\n+        return [];\n+    }-*/;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff41df4c6940e15205630de19758c2d59206033f"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTcwNDIxNA==", "bodyText": "This is already in org.kie.workbench.common.dmn.webapp.kogito.marshaller.mapper.JsUtils", "url": "https://github.com/kiegroup/appformer/pull/1025#discussion_r469704214", "createdAt": "2020-08-13T05:26:02Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/pmmleditor/marshaller/model/JSIUtils.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.appformer.kogito.bridge.client.pmmleditor.marshaller.model;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import jsinterop.base.Js;\n+import jsinterop.base.JsArrayLike;\n+\n+public class JSIUtils {\n+\n+    private JSIUtils() {\n+        // Utils class\n+    }\n+\n+    /**\n+     * Helper method to create a new, empty <code>JsArrayLike</code>\n+     * @return\n+     */\n+    public static native <D> JsArrayLike<D> getNativeArray() /*-{\n+        return [];\n+    }-*/;\n+\n+    /**\n+     * Returns a <code>JsArrayLike</code> where each element represents the <b>unwrapped</b> object (i.e. object.value) of the original one.\n+     * It the original <code>JsArrayLike</code> is <code>null</code>, returns a new, empty one\n+     * @param original\n+     * @param <D>\n+     * @return\n+     */\n+    public static native <D> JsArrayLike<D> getUnwrappedElementsArray(final JsArrayLike<D> original) /*-{\n+        var toReturn = [];\n+        if (original != null) {\n+            toReturn = original.map(function (arrayItem) {\n+                var retrieved = arrayItem.value\n+                var toSet = retrieved == null ? arrayItem : retrieved\n+                return toSet;\n+            });\n+        }\n+        return toReturn;\n+    }-*/;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff41df4c6940e15205630de19758c2d59206033f"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTcwNDQ5Nw==", "bodyText": "This is already in org.kie.workbench.common.dmn.webapp.kogito.marshaller.mapper.JsUtils", "url": "https://github.com/kiegroup/appformer/pull/1025#discussion_r469704497", "createdAt": "2020-08-13T05:27:06Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/pmmleditor/marshaller/model/JSIUtils.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.appformer.kogito.bridge.client.pmmleditor.marshaller.model;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import jsinterop.base.Js;\n+import jsinterop.base.JsArrayLike;\n+\n+public class JSIUtils {\n+\n+    private JSIUtils() {\n+        // Utils class\n+    }\n+\n+    /**\n+     * Helper method to create a new, empty <code>JsArrayLike</code>\n+     * @return\n+     */\n+    public static native <D> JsArrayLike<D> getNativeArray() /*-{\n+        return [];\n+    }-*/;\n+\n+    /**\n+     * Returns a <code>JsArrayLike</code> where each element represents the <b>unwrapped</b> object (i.e. object.value) of the original one.\n+     * It the original <code>JsArrayLike</code> is <code>null</code>, returns a new, empty one\n+     * @param original\n+     * @param <D>\n+     * @return\n+     */\n+    public static native <D> JsArrayLike<D> getUnwrappedElementsArray(final JsArrayLike<D> original) /*-{\n+        var toReturn = [];\n+        if (original != null) {\n+            toReturn = original.map(function (arrayItem) {\n+                var retrieved = arrayItem.value\n+                var toSet = retrieved == null ? arrayItem : retrieved\n+                return toSet;\n+            });\n+        }\n+        return toReturn;\n+    }-*/;\n+\n+    public static<D> List<D> toList(final JsArrayLike<D> jsArrayLike) {\n+        final List<D> toReturn = new ArrayList<>();\n+        if (Objects.nonNull(jsArrayLike)) {\n+            for (int i = 0; (i < jsArrayLike.getLength()); i++) {\n+                final D toAdd = Js.uncheckedCast(jsArrayLike.getAt(i));\n+                toReturn.add(toAdd);\n+            }\n+        }\n+        return toReturn;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff41df4c6940e15205630de19758c2d59206033f"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58148fef890f949b9737420c9213de097772a910", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/58148fef890f949b9737420c9213de097772a910", "committedDate": "2020-08-13T07:31:42Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91b3b05b10bf0be5311511cda15972baa04f90e1", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/91b3b05b10bf0be5311511cda15972baa04f90e1", "committedDate": "2020-08-31T08:10:18Z", "message": "Merge remote-tracking branch 'origin/master' into KOGITO-2895"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26ac2734b6cd15522f350c5e56788a2ffb859d3e", "author": {"user": {"login": "yesamer", "name": "Yeser Amer"}}, "url": "https://github.com/kiegroup/appformer/commit/26ac2734b6cd15522f350c5e56788a2ffb859d3e", "committedDate": "2020-09-03T13:53:40Z", "message": "KOGITO-2895: Minor changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNjYzOTA1", "url": "https://github.com/kiegroup/appformer/pull/1025#pullrequestreview-482663905", "createdAt": "2020-09-04T13:44:36Z", "commit": {"oid": "26ac2734b6cd15522f350c5e56788a2ffb859d3e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1960, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}