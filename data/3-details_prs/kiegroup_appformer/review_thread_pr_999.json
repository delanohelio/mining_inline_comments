{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MDgyMzQ5", "number": 999, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMTozOToyNVrOENPmJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMTozOToyNVrOENPmJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMzIyNDY4OnYy", "diffSide": "RIGHT", "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/backend/services/impl/ImportValidationServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMTozOToyNVrOGv0KNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMjo1NDowMlrOGv2M1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc5MDgzOA==", "bodyText": "Please remove the unwanted empty lines", "url": "https://github.com/kiegroup/appformer/pull/999#discussion_r452790838", "createdAt": "2020-07-10T11:39:25Z", "author": {"login": "sthundat"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/backend/services/impl/ImportValidationServiceImpl.java", "diffHunk": "@@ -35,32 +35,36 @@\n @ApplicationScoped\n public class ImportValidationServiceImpl implements ImportValidationService {\n \n+    /**\n+     * Checks if the given file URL is valid for a Runtime Model.\n+     */\n     @Override\n-    public boolean validate(String file) {\n-        boolean hasDataset = false;\n+    public boolean validate(final String file) {\n+        boolean hasDatasetDir = false;\n         boolean hasPage = false;\n         boolean hasNavigation = false;\n-        try (ZipInputStream zis = new ZipInputStream(new FileInputStream(file))) {\n+        try (final ZipInputStream zis = new ZipInputStream(new FileInputStream(file))) {\n             ZipEntry entry;\n             while ((entry = zis.getNextEntry()) != null) {\n \n-                hasDataset = hasDataset || entryStartsWith(entry, DATASET_PREFIX);\n+                hasDatasetDir = hasDatasetDir || entryStartsWith(entry, DATASET_PREFIX);\n                 hasPage = hasPage || entryStartsWith(entry, PERSPECTIVE_PREFIX);\n                 hasNavigation = hasNavigation || entryStartsWith(entry, NAVIGATION_PREFIX);\n \n-                if (hasDataset && hasPage && hasNavigation) {\n+                if (hasNavigation && hasDatasetDir && hasPage) {\n                     return true;\n                 }\n             }\n         } catch (Exception e) {\n             throw new IllegalArgumentException(\"Error validating file: \" + file, e);\n         }\n-\n+        \n         return false;\n     }\n \n     private boolean entryStartsWith(ZipEntry entry, String path) {\n         return entry.getName().startsWith(path);\n     }\n \n+    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "280f29fa53ee7a1029df54aa0813f21901aa4955"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyNDI3OQ==", "bodyText": "done, thanks Savitha", "url": "https://github.com/kiegroup/appformer/pull/999#discussion_r452824279", "createdAt": "2020-07-10T12:54:02Z", "author": {"login": "jesuino"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/backend/services/impl/ImportValidationServiceImpl.java", "diffHunk": "@@ -35,32 +35,36 @@\n @ApplicationScoped\n public class ImportValidationServiceImpl implements ImportValidationService {\n \n+    /**\n+     * Checks if the given file URL is valid for a Runtime Model.\n+     */\n     @Override\n-    public boolean validate(String file) {\n-        boolean hasDataset = false;\n+    public boolean validate(final String file) {\n+        boolean hasDatasetDir = false;\n         boolean hasPage = false;\n         boolean hasNavigation = false;\n-        try (ZipInputStream zis = new ZipInputStream(new FileInputStream(file))) {\n+        try (final ZipInputStream zis = new ZipInputStream(new FileInputStream(file))) {\n             ZipEntry entry;\n             while ((entry = zis.getNextEntry()) != null) {\n \n-                hasDataset = hasDataset || entryStartsWith(entry, DATASET_PREFIX);\n+                hasDatasetDir = hasDatasetDir || entryStartsWith(entry, DATASET_PREFIX);\n                 hasPage = hasPage || entryStartsWith(entry, PERSPECTIVE_PREFIX);\n                 hasNavigation = hasNavigation || entryStartsWith(entry, NAVIGATION_PREFIX);\n \n-                if (hasDataset && hasPage && hasNavigation) {\n+                if (hasNavigation && hasDatasetDir && hasPage) {\n                     return true;\n                 }\n             }\n         } catch (Exception e) {\n             throw new IllegalArgumentException(\"Error validating file: \" + file, e);\n         }\n-\n+        \n         return false;\n     }\n \n     private boolean entryStartsWith(ZipEntry entry, String path) {\n         return entry.getName().startsWith(path);\n     }\n \n+    ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc5MDgzOA=="}, "originalCommit": {"oid": "280f29fa53ee7a1029df54aa0813f21901aa4955"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2840, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}