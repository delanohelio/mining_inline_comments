{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0Mzc0Mzcz", "number": 894, "title": "KOGITO-879 KOGITO-880 KOGITO-881: State Control API (undo/redo)", "bodyText": "KOGITO-879: Define State Control API\nKOGITO-880: Create JSInterop layer for StateControl API\nKOGITO-881: Integrate State Control API in Stunner to handle Undo & Redo\n@jesuino @tiagobento @ederign could you please take a look?\nThis is part of an ensemble, please merge with:\nkiegroup/droolsjbpm-build-bootstrap#1195\nkiegroup/kogito-tooling#66\n#894\nkiegroup/kie-wb-common#3156\nkiegroup/jbpm-wb#1414\nkiegroup/drools-wb#1310\nkiegroup/kie-wb-distributions#1013", "createdAt": "2020-02-12T15:33:17Z", "url": "https://github.com/kiegroup/appformer/pull/894", "merged": true, "mergeCommit": {"oid": "91132f8564a98121d2774928af9e44254d11d4aa"}, "closed": true, "closedAt": "2020-02-28T16:54:49Z", "author": {"login": "pefernan"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDxfXoAFqTM1NzkxODg5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIrcflgBqjMwODA5MzgxNDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3OTE4ODk4", "url": "https://github.com/kiegroup/appformer/pull/894#pullrequestreview-357918898", "createdAt": "2020-02-13T02:27:28Z", "commit": {"oid": "be79229a2be755a7a7fb31064dd83b680801e277"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NjQzNTY3", "url": "https://github.com/kiegroup/appformer/pull/894#pullrequestreview-359643567", "createdAt": "2020-02-17T10:47:10Z", "commit": {"oid": "f8cfc7c2fe795fc50736e4ba61d40318fa10a36f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMDo0NzoxMFrOFqgCkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMDo1MzowM1rOFqgOFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEwOTQ1Nw==", "bodyText": "Is this javadoc complete?", "url": "https://github.com/kiegroup/appformer/pull/894#discussion_r380109457", "createdAt": "2020-02-17T10:47:10Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/stateControl/registry/RegistryChangeListener.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.bridge.client.stateControl.registry;\n+\n+/**\n+ * This functional interface represents the code that will be executed everytime there's a change on a {@link CommandRegistry}\n+ */\n+@FunctionalInterface\n+public interface RegistryChangeListener {\n+\n+    /**\n+     * Method that will be executed every time theres a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8cfc7c2fe795fc50736e4ba61d40318fa10a36f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEwOTY3MQ==", "bodyText": "formatting", "url": "https://github.com/kiegroup/appformer/pull/894#discussion_r380109671", "createdAt": "2020-02-17T10:47:39Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/stateControl/KogitoStateControlInitializer.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.bridge.client.stateControl;\n+\n+import org.appformer.kogito.bridge.client.interop.WindowRef;\n+import org.appformer.kogito.bridge.client.stateControl.interop.StateControl;\n+import org.appformer.kogito.bridge.client.stateControl.interop.StateControlCommand;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import java.util.function.Supplier;\n+\n+@ApplicationScoped\n+public class KogitoStateControlInitializer {\n+\n+    private final Supplier<Boolean> envelopeEnabledSupplier;\n+    private final Supplier<StateControl> stateControlSupplier;\n+\n+    public KogitoStateControlInitializer() {\n+        this(WindowRef::isEnvelopeAvailable,\n+                () -> WindowRef.getEnvelope().getStateControl());\n+    }\n+\n+    KogitoStateControlInitializer(final Supplier<Boolean> envelopeEnabledSupplier,\n+                                  final Supplier<StateControl> stateControlSupplier) {\n+        this.envelopeEnabledSupplier = envelopeEnabledSupplier;\n+        this.stateControlSupplier = stateControlSupplier;\n+    }\n+\n+    public boolean isKogitoEnabled() {\n+        return envelopeEnabledSupplier.get();\n+    }\n+\n+    StateControl getStateControl() {\n+        return stateControlSupplier.get();\n+    }\n+\n+    public void setUndoCommand(StateControlCommand command) {\n+        if(isKogitoEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8cfc7c2fe795fc50736e4ba61d40318fa10a36f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEwOTcyMw==", "bodyText": "formatting", "url": "https://github.com/kiegroup/appformer/pull/894#discussion_r380109723", "createdAt": "2020-02-17T10:47:46Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/stateControl/KogitoStateControlInitializer.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.bridge.client.stateControl;\n+\n+import org.appformer.kogito.bridge.client.interop.WindowRef;\n+import org.appformer.kogito.bridge.client.stateControl.interop.StateControl;\n+import org.appformer.kogito.bridge.client.stateControl.interop.StateControlCommand;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import java.util.function.Supplier;\n+\n+@ApplicationScoped\n+public class KogitoStateControlInitializer {\n+\n+    private final Supplier<Boolean> envelopeEnabledSupplier;\n+    private final Supplier<StateControl> stateControlSupplier;\n+\n+    public KogitoStateControlInitializer() {\n+        this(WindowRef::isEnvelopeAvailable,\n+                () -> WindowRef.getEnvelope().getStateControl());\n+    }\n+\n+    KogitoStateControlInitializer(final Supplier<Boolean> envelopeEnabledSupplier,\n+                                  final Supplier<StateControl> stateControlSupplier) {\n+        this.envelopeEnabledSupplier = envelopeEnabledSupplier;\n+        this.stateControlSupplier = stateControlSupplier;\n+    }\n+\n+    public boolean isKogitoEnabled() {\n+        return envelopeEnabledSupplier.get();\n+    }\n+\n+    StateControl getStateControl() {\n+        return stateControlSupplier.get();\n+    }\n+\n+    public void setUndoCommand(StateControlCommand command) {\n+        if(isKogitoEnabled()) {\n+            getStateControl().setUndoCommand(command);\n+        }\n+    }\n+\n+    public void setRedoCommand(StateControlCommand command) {\n+        if(isKogitoEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8cfc7c2fe795fc50736e4ba61d40318fa10a36f"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDExMDI3MQ==", "bodyText": "Reading the javadoc and implementation, we do not check if value is a positive number.", "url": "https://github.com/kiegroup/appformer/pull/894#discussion_r380110271", "createdAt": "2020-02-17T10:48:49Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/stateControl/registry/CommandRegistry.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.bridge.client.stateControl.registry;\n+\n+import java.util.List;\n+\n+/**\n+ * Represents a registry of commands to be used on the StateControl engine.\n+ * @param <C> anything that can be considered a Command\n+ */\n+public interface CommandRegistry<C> {\n+\n+    /**\n+     * Registers a command into the registry\n+     * @param command A command to register\n+     */\n+    void register(final C command);\n+\n+    /**\n+     * Peeks the last added command. Doesn't remove it.\n+     * @return The last added Command\n+     */\n+    C peek();\n+\n+    /**\n+     * Pops the last added command and removes it.\n+     * @return The last added Command\n+     */\n+    C pop();\n+\n+    /**\n+     * Sets the max number of commands that can be stored on the registry.\n+     * @param size A positive integer\n+     */\n+    void setMaxSize(final int size);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8cfc7c2fe795fc50736e4ba61d40318fa10a36f"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDExMjQwNA==", "bodyText": "I think is more standard have single test per tested method", "url": "https://github.com/kiegroup/appformer/pull/894#discussion_r380112404", "createdAt": "2020-02-17T10:53:03Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-bridge/src/test/java/org/appformer/kogito/bridge/client/stateControl/registry/impl/KogitoCommandRegistryTest.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.bridge.client.stateControl.registry.impl;\n+\n+import org.appformer.kogito.bridge.client.stateControl.registry.interop.KogitoJSCommandRegistry;\n+import org.assertj.core.api.Assertions;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+import static org.mockito.Matchers.*;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class KogitoCommandRegistryTest {\n+\n+    private boolean envelopeEnabled = true;\n+\n+    @Mock\n+    private KogitoJSCommandRegistry<Object> kogitoJSCommandRegistry;\n+\n+    private KogitoCommandRegistry<Object> commandRegistry;\n+\n+    @Test\n+    public void testBuildOutsideEnvelope() {\n+        this.envelopeEnabled = false;\n+\n+        Assertions.assertThatThrownBy(() -> new KogitoCommandRegistry<>(() -> envelopeEnabled, () -> kogitoJSCommandRegistry))\n+                .isInstanceOf(RuntimeException.class)\n+                .hasMessage(\"Envelope isn't present, we shouldn't be here!\");\n+    }\n+\n+    @Test\n+    public void testMethods() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8cfc7c2fe795fc50736e4ba61d40318fa10a36f"}, "originalPosition": 50}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f8cfc7c2fe795fc50736e4ba61d40318fa10a36f", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/f8cfc7c2fe795fc50736e4ba61d40318fa10a36f", "committedDate": "2020-02-13T13:52:55Z", "message": "- code review changes."}, "afterCommit": {"oid": "3aef4e8451d59b60e5ad10ba7f9ee3f51ec97955", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/3aef4e8451d59b60e5ad10ba7f9ee3f51ec97955", "committedDate": "2020-02-18T10:17:27Z", "message": "- code review changes."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3aef4e8451d59b60e5ad10ba7f9ee3f51ec97955", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/3aef4e8451d59b60e5ad10ba7f9ee3f51ec97955", "committedDate": "2020-02-18T10:17:27Z", "message": "- code review changes."}, "afterCommit": {"oid": "495c4b5294b1aa4a5ee62e9641f46a3faffbe979", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/495c4b5294b1aa4a5ee62e9641f46a3faffbe979", "committedDate": "2020-02-18T17:11:31Z", "message": "- Code improvements."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "495c4b5294b1aa4a5ee62e9641f46a3faffbe979", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/495c4b5294b1aa4a5ee62e9641f46a3faffbe979", "committedDate": "2020-02-18T17:11:31Z", "message": "- Code improvements."}, "afterCommit": {"oid": "da46b65bd43948a8fab3d888b49e2b0c05ee0d12", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/da46b65bd43948a8fab3d888b49e2b0c05ee0d12", "committedDate": "2020-02-21T18:09:07Z", "message": "- Code improvements."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNDY5MTcz", "url": "https://github.com/kiegroup/appformer/pull/894#pullrequestreview-363469173", "createdAt": "2020-02-24T15:21:41Z", "commit": {"oid": "da46b65bd43948a8fab3d888b49e2b0c05ee0d12"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNToyMTo0MlrOFtkfaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTozOToyOVrOFtlM7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMyODEwNQ==", "bodyText": "Missing README", "url": "https://github.com/kiegroup/appformer/pull/894#discussion_r383328105", "createdAt": "2020-02-24T15:21:42Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-api/pom.xml", "diffHunk": "@@ -0,0 +1,40 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>uberfire-parent</artifactId>\n+    <groupId>org.uberfire</groupId>\n+    <version>7.34.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>appformer-kogito-api</artifactId>\n+  <name>AppFormer Kogito API</name>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da46b65bd43948a8fab3d888b49e2b0c05ee0d12"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMyOTg3MA==", "bodyText": "Do we need this? Can't DefaultCommandRegistryImpl implement directly CommandRegistry?", "url": "https://github.com/kiegroup/appformer/pull/894#discussion_r383329870", "createdAt": "2020-02-24T15:24:32Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-api/src/main/java/org/appformer/kogito/api/stateControl/registry/DefaultCommandRegistry.java", "diffHunk": "@@ -0,0 +1,21 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.api.stateControl.registry;\n+\n+public interface DefaultCommandRegistry<C> extends CommandRegistry<C> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da46b65bd43948a8fab3d888b49e2b0c05ee0d12"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMzMDgyMw==", "bodyText": "Maybe we could rename to CommandRegistryChangeListener WDYT?", "url": "https://github.com/kiegroup/appformer/pull/894#discussion_r383330823", "createdAt": "2020-02-24T15:26:03Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-api/src/main/java/org/appformer/kogito/api/stateControl/registry/RegistryChangeListener.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.api.stateControl.registry;\n+\n+/**\n+ * This functional interface represents the code that will be executed every time there's a change on a {@link CommandRegistry}\n+ */\n+@FunctionalInterface\n+public interface RegistryChangeListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da46b65bd43948a8fab3d888b49e2b0c05ee0d12"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMzMTQ0MQ==", "bodyText": "just for consistency we could use final RegistryChangeListener registryChangeListener", "url": "https://github.com/kiegroup/appformer/pull/894#discussion_r383331441", "createdAt": "2020-02-24T15:26:58Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-api/src/main/java/org/appformer/kogito/api/stateControl/registry/impl/DefaultCommandRegistryImpl.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.api.stateControl.registry.impl;\n+\n+import java.util.ArrayDeque;\n+import java.util.ArrayList;\n+import java.util.Deque;\n+import java.util.List;\n+\n+import org.appformer.kogito.api.stateControl.registry.DefaultCommandRegistry;\n+import org.appformer.kogito.api.stateControl.registry.RegistryChangeListener;\n+\n+/**\n+ * The default generic implementation for the CommandRegistry type.\n+ * It's implemented for achieving an in-memory and lightweight registry approach, don't do an overuse of it.\n+ * Note: The Stack class behavior when using the iterator is not the expected one, so used\n+ * ArrayDeque instead of an Stack to provide right iteration order.\n+ */\n+public class DefaultCommandRegistryImpl<C> implements DefaultCommandRegistry<C> {\n+\n+    private final Deque<C> commands = new ArrayDeque<>();\n+    private int maxStackSize = 200;\n+    private RegistryChangeListener registryChangeListener;\n+\n+    @Override\n+    public void setMaxSize(final int size) {\n+        if (size < 0) {\n+            throw new IllegalArgumentException(\"The registry size should be a positive number\");\n+        }\n+        this.maxStackSize = size;\n+    }\n+\n+    @Override\n+    public void register(final C command) {\n+        addIntoStack(command);\n+        notifyRegistryChange();\n+    }\n+\n+    @Override\n+    public void clear() {\n+        commands.clear();\n+        notifyRegistryChange();\n+    }\n+\n+    @Override\n+    public List<C> getCommandHistory() {\n+        return new ArrayList<>(commands);\n+    }\n+\n+    @Override\n+    public void setRegistryChangeListener(RegistryChangeListener registryChangeListener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da46b65bd43948a8fab3d888b49e2b0c05ee0d12"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMzNDU2Mw==", "bodyText": "reading the code, assuimng your explanation, this module should be named appformer-state-control-api?", "url": "https://github.com/kiegroup/appformer/pull/894#discussion_r383334563", "createdAt": "2020-02-24T15:31:37Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-api/pom.xml", "diffHunk": "@@ -0,0 +1,40 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>uberfire-parent</artifactId>\n+    <groupId>org.uberfire</groupId>\n+    <version>7.34.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>appformer-kogito-api</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da46b65bd43948a8fab3d888b49e2b0c05ee0d12"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMzOTc1OQ==", "bodyText": "Could you please explain why appformer-kogito-bridge module needs to have this KogitoCommandRegistry registry implementation? KogitoCommandRegistry seems same as DefaultCommandRegistryImpl from appformer-kogito-api. I expected in appformer-kogito-bridge just KogitoJSCommandRegistry.", "url": "https://github.com/kiegroup/appformer/pull/894#discussion_r383339759", "createdAt": "2020-02-24T15:39:29Z", "author": {"login": "jomarko"}, "path": "appformer-kogito-bridge/src/main/java/org/appformer/kogito/bridge/client/stateControl/registry/impl/KogitoCommandRegistry.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.kogito.bridge.client.stateControl.registry.impl;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Supplier;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.appformer.kogito.api.stateControl.registry.CommandRegistry;\n+import org.appformer.kogito.api.stateControl.registry.RegistryChangeListener;\n+import org.appformer.kogito.bridge.client.interop.WindowRef;\n+import org.appformer.kogito.bridge.client.stateControl.interop.StateControl;\n+import org.appformer.kogito.bridge.client.stateControl.registry.interop.KogitoJSCommandRegistry;\n+\n+public class KogitoCommandRegistry<C> implements CommandRegistry<C> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da46b65bd43948a8fab3d888b49e2b0c05ee0d12"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MTI0NTQ0", "url": "https://github.com/kiegroup/appformer/pull/894#pullrequestreview-364124544", "createdAt": "2020-02-25T13:06:57Z", "commit": {"oid": "49286708d3c8eb1b16ae8a6559ce16b4e376205f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MTQyNTAx", "url": "https://github.com/kiegroup/appformer/pull/894#pullrequestreview-364142501", "createdAt": "2020-02-25T13:34:49Z", "commit": {"oid": "49286708d3c8eb1b16ae8a6559ce16b4e376205f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMzozNDo0OVrOFuGNIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMzozNDo0OVrOFuGNIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4MDQ4Mw==", "bodyText": "@pefernan I like all of your refactoring; thank-you..... other than the name of this new module.\nIt has nothing to do with kogito itself and is indeed, just a module with zero/minimal dependencies on other things to prevent the kogito specific implementation module dragging in unnecessary libraries. Can you come up with a better name that does not mention kogito!?!? (appformer-client-api is super-nice BUT obviously cannot be used as it has a ton of other dependencies you don't want in kogito). appformer-collaboration-api is reasonable - but limits its future use. appformer/uberfire-services/uberfire-services-client is available!", "url": "https://github.com/kiegroup/appformer/pull/894#discussion_r383880483", "createdAt": "2020-02-25T13:34:49Z", "author": {"login": "manstis"}, "path": "appformer-kogito-api/pom.xml", "diffHunk": "@@ -0,0 +1,40 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>uberfire-parent</artifactId>\n+    <groupId>org.uberfire</groupId>\n+    <version>7.34.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>appformer-kogito-api</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMzNDU2Mw=="}, "originalCommit": {"oid": "da46b65bd43948a8fab3d888b49e2b0c05ee0d12"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDA3MzEw", "url": "https://github.com/kiegroup/appformer/pull/894#pullrequestreview-364407310", "createdAt": "2020-02-25T19:58:10Z", "commit": {"oid": "1f334b9415e3788c75517006b04c0c3a58a95c12"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDc5MTIy", "url": "https://github.com/kiegroup/appformer/pull/894#pullrequestreview-364479122", "createdAt": "2020-02-25T21:57:25Z", "commit": {"oid": "1f334b9415e3788c75517006b04c0c3a58a95c12"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMTo1NzoyNVrOFuWuUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMTo1NzoyNVrOFuWuUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1MTEyMA==", "bodyText": "in fact this interface describes a generic Registry... I mean, even being called CommandRegistry, the C parameter is a generic type, which does not extends from any other types as well.\nSo just as a suggestion, as we're moving this to the fundation codebase, we can renane it just as Registry<O>, it can contain commands, or whatever, also we could remove the term \"command\" from the methods below.\nAnyway just as a proposal, but I see no reason why it describes a registry of commands, nothing actually is realted to the Command API...", "url": "https://github.com/kiegroup/appformer/pull/894#discussion_r384151120", "createdAt": "2020-02-25T21:57:25Z", "author": {"login": "romartin"}, "path": "appformer-client-api/src/main/java/org/appformer/client/stateControl/registry/CommandRegistry.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.client.stateControl.registry;\n+\n+import java.util.List;\n+\n+/**\n+ * Represents a registry of commands to be used on the StateControl engine.\n+ *\n+ * @param <C> anything that can be considered a Command\n+ */\n+public interface CommandRegistry<C> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f334b9415e3788c75517006b04c0c3a58a95c12"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bab334aa4e78e4afd31bc2771b15f263ae8226a", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/8bab334aa4e78e4afd31bc2771b15f263ae8226a", "committedDate": "2020-02-27T16:05:03Z", "message": "KOGITO-879: Define State Control API\nKOGITO-880: Create JSInterop layer for StateControl API\nKOGITO-881: Integrate State Control API in Stunner to handle Undo & Redo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14c3bd65adf379e17fdf4d565172554f69b452d1", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/14c3bd65adf379e17fdf4d565172554f69b452d1", "committedDate": "2020-02-27T16:05:03Z", "message": "- code review changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "077b8bd70d69e49f9bffc9f4a4d987d28e1afe04", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/077b8bd70d69e49f9bffc9f4a4d987d28e1afe04", "committedDate": "2020-02-27T16:05:03Z", "message": "- Code improvements."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4665d76e4fe41dc7ff06224bac1f2a954d17f661", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/4665d76e4fe41dc7ff06224bac1f2a954d17f661", "committedDate": "2020-02-27T16:05:03Z", "message": "- Code improvements."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "964007d3d8f5294f9cd1a461b2fba742456ec29a", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/964007d3d8f5294f9cd1a461b2fba742456ec29a", "committedDate": "2020-02-27T16:05:03Z", "message": "- Adding README.md, code suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6ddf8d98787bc87d4d4892af727ddea78f1c3a2", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/a6ddf8d98787bc87d4d4892af727ddea78f1c3a2", "committedDate": "2020-02-27T16:05:03Z", "message": "- Module renaming"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f334b9415e3788c75517006b04c0c3a58a95c12", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/1f334b9415e3788c75517006b04c0c3a58a95c12", "committedDate": "2020-02-25T15:39:16Z", "message": "- Module renaming"}, "afterCommit": {"oid": "7c493d41887b4d7693194b47c37cb7e18e948662", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/7c493d41887b4d7693194b47c37cb7e18e948662", "committedDate": "2020-02-27T16:05:03Z", "message": "- Class renames"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDI4NTcy", "url": "https://github.com/kiegroup/appformer/pull/894#pullrequestreview-366028572", "createdAt": "2020-02-27T21:57:20Z", "commit": {"oid": "7c493d41887b4d7693194b47c37cb7e18e948662"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTo1NzoyMVrOFvipXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTo1NzoyMVrOFvipXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5NTAzNg==", "bodyText": "just minor thing - wrong word \"command\", it does not apply anymore... :)", "url": "https://github.com/kiegroup/appformer/pull/894#discussion_r385395036", "createdAt": "2020-02-27T21:57:21Z", "author": {"login": "romartin"}, "path": "appformer-client-api/src/main/java/org/appformer/client/stateControl/registry/Registry.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.appformer.client.stateControl.registry;\n+\n+import java.util.List;\n+\n+/**\n+ * Represents a basic items registry.\n+ *\n+ * @param <C> anything that can be registered.\n+ */\n+public interface Registry<C> {\n+\n+    /**\n+     * Registers an item into the registry\n+     *\n+     * @param item An item to register\n+     */\n+    void register(final C item);\n+\n+    /**\n+     * Peeks the last added item. Doesn't remove it.\n+     *\n+     * @return The last added item\n+     */\n+    C peek();\n+\n+    /**\n+     * Pops the last added item and removes it.\n+     *\n+     * @return The last added item\n+     */\n+    C pop();\n+\n+    /**\n+     * Sets the max number of items that can be stored on the registry.\n+     *\n+     * @param size A positive integer\n+     */\n+    void setMaxSize(final int size);\n+\n+    /**\n+     * Clears the registry\n+     */\n+    void clear();\n+\n+    /**\n+     * Determines if the registry is empty or not\n+     *\n+     * @return true if empty, false if not.\n+     */\n+    boolean isEmpty();\n+\n+    /**\n+     * Returns a {@link List} containing all the items in the registry\n+     *\n+     * @return A {@link List} of commands", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c493d41887b4d7693194b47c37cb7e18e948662"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDI4NjIw", "url": "https://github.com/kiegroup/appformer/pull/894#pullrequestreview-366028620", "createdAt": "2020-02-27T21:57:26Z", "commit": {"oid": "7c493d41887b4d7693194b47c37cb7e18e948662"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c493d41887b4d7693194b47c37cb7e18e948662", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/7c493d41887b4d7693194b47c37cb7e18e948662", "committedDate": "2020-02-27T16:05:03Z", "message": "- Class renames"}, "afterCommit": {"oid": "5302ffe981ac8b280f96eaa9dbb203ba2bb1ab30", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/5302ffe981ac8b280f96eaa9dbb203ba2bb1ab30", "committedDate": "2020-02-28T08:11:04Z", "message": "- Class renames"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1591f5737b044d6ac6a7b0bf34fc7028b75cba1d", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/1591f5737b044d6ac6a7b0bf34fc7028b75cba1d", "committedDate": "2020-02-28T08:14:16Z", "message": "- Class renames"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5302ffe981ac8b280f96eaa9dbb203ba2bb1ab30", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/5302ffe981ac8b280f96eaa9dbb203ba2bb1ab30", "committedDate": "2020-02-28T08:11:04Z", "message": "- Class renames"}, "afterCommit": {"oid": "1591f5737b044d6ac6a7b0bf34fc7028b75cba1d", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/appformer/commit/1591f5737b044d6ac6a7b0bf34fc7028b75cba1d", "committedDate": "2020-02-28T08:14:16Z", "message": "- Class renames"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2196, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}