{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNTA1MDg5", "number": 986, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDo0NDo1M1rOEEVCuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDo0NDo1M1rOEEVCuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyOTc0NTIxOnYy", "diffSide": "RIGHT", "path": "uberfire-extensions/uberfire-wires/uberfire-wires-core/uberfire-wires-core-grids/src/main/java/org/uberfire/ext/wires/core/grids/client/util/ColumnIndexUtilities.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDo0NDo1M1rOGh4XzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzowMzowM1rOGunBtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE3OTc4OA==", "bodyText": "I am curious when this should occur?\nHow is it possible for candidateHeaderColumnIndex to exceed the number of columns?", "url": "https://github.com/kiegroup/appformer/pull/986#discussion_r438179788", "createdAt": "2020-06-10T14:44:53Z", "author": {"login": "manstis"}, "path": "uberfire-extensions/uberfire-wires/uberfire-wires-core/uberfire-wires-core-grids/src/main/java/org/uberfire/ext/wires/core/grids/client/util/ColumnIndexUtilities.java", "diffHunk": "@@ -81,6 +81,9 @@ public static int getHeaderBlockEndColumnIndex(final List<GridColumn<?>> allColu\n         if (candidateHeaderColumnIndex == allColumns.size() - 1) {\n             return candidateHeaderColumnIndex;\n         }\n+        if (candidateHeaderColumnIndex >= allColumns.size()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c6368762dff5dc614723268934b9234c3eb2abf"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU0Nzc4Nw==", "bodyText": "Yes, could you please explain a little bit. Just we are sure we do not cause index out of bounds exception somewhere else.", "url": "https://github.com/kiegroup/appformer/pull/986#discussion_r438547787", "createdAt": "2020-06-11T05:18:46Z", "author": {"login": "jomarko"}, "path": "uberfire-extensions/uberfire-wires/uberfire-wires-core/uberfire-wires-core-grids/src/main/java/org/uberfire/ext/wires/core/grids/client/util/ColumnIndexUtilities.java", "diffHunk": "@@ -81,6 +81,9 @@ public static int getHeaderBlockEndColumnIndex(final List<GridColumn<?>> allColu\n         if (candidateHeaderColumnIndex == allColumns.size() - 1) {\n             return candidateHeaderColumnIndex;\n         }\n+        if (candidateHeaderColumnIndex >= allColumns.size()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE3OTc4OA=="}, "originalCommit": {"oid": "5c6368762dff5dc614723268934b9234c3eb2abf"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI3NTU2MA==", "bodyText": "When you double-click the last cell in a header and the first cell is hidden (scrolled).\nThis didn't happened before because the last header cell was not \"clickable\" when we had the \"Description\" column.", "url": "https://github.com/kiegroup/appformer/pull/986#discussion_r450275560", "createdAt": "2020-07-06T14:50:02Z", "author": {"login": "danielzhe"}, "path": "uberfire-extensions/uberfire-wires/uberfire-wires-core/uberfire-wires-core-grids/src/main/java/org/uberfire/ext/wires/core/grids/client/util/ColumnIndexUtilities.java", "diffHunk": "@@ -81,6 +81,9 @@ public static int getHeaderBlockEndColumnIndex(final List<GridColumn<?>> allColu\n         if (candidateHeaderColumnIndex == allColumns.size() - 1) {\n             return candidateHeaderColumnIndex;\n         }\n+        if (candidateHeaderColumnIndex >= allColumns.size()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE3OTc4OA=="}, "originalCommit": {"oid": "5c6368762dff5dc614723268934b9234c3eb2abf"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4NzAwNw==", "bodyText": "So the issue is that the headerColumnIndex is wrong?\nWhere is the getHeaderBlockEndColumnIndex(..) method called from? How was the parameter value derived?", "url": "https://github.com/kiegroup/appformer/pull/986#discussion_r450687007", "createdAt": "2020-07-07T08:14:07Z", "author": {"login": "manstis"}, "path": "uberfire-extensions/uberfire-wires/uberfire-wires-core/uberfire-wires-core-grids/src/main/java/org/uberfire/ext/wires/core/grids/client/util/ColumnIndexUtilities.java", "diffHunk": "@@ -81,6 +81,9 @@ public static int getHeaderBlockEndColumnIndex(final List<GridColumn<?>> allColu\n         if (candidateHeaderColumnIndex == allColumns.size() - 1) {\n             return candidateHeaderColumnIndex;\n         }\n+        if (candidateHeaderColumnIndex >= allColumns.size()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE3OTc4OA=="}, "originalCommit": {"oid": "5c6368762dff5dc614723268934b9234c3eb2abf"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE1MjI4NA==", "bodyText": "Is called here: \n  \n    \n      appformer/uberfire-extensions/uberfire-wires/uberfire-wires-core/uberfire-wires-core-grids/src/main/java/org/uberfire/ext/wires/core/grids/client/util/CellContextUtilities.java\n    \n    \n         Line 98\n      in\n      331f358\n    \n    \n    \n    \n\n        \n          \n           final int blockEndColumnIndex = ColumnIndexUtilities.getHeaderBlockEndColumnIndex(gridColumns, \n        \n    \n  \n\n\nIn my opinion this fix is correct, because ColumnIndexUtilities already \"fixes\" the candidateHeaderColumnIndex to a valid value in other situations.", "url": "https://github.com/kiegroup/appformer/pull/986#discussion_r451152284", "createdAt": "2020-07-07T21:24:49Z", "author": {"login": "danielzhe"}, "path": "uberfire-extensions/uberfire-wires/uberfire-wires-core/uberfire-wires-core-grids/src/main/java/org/uberfire/ext/wires/core/grids/client/util/ColumnIndexUtilities.java", "diffHunk": "@@ -81,6 +81,9 @@ public static int getHeaderBlockEndColumnIndex(final List<GridColumn<?>> allColu\n         if (candidateHeaderColumnIndex == allColumns.size() - 1) {\n             return candidateHeaderColumnIndex;\n         }\n+        if (candidateHeaderColumnIndex >= allColumns.size()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE3OTc4OA=="}, "originalCommit": {"oid": "5c6368762dff5dc614723268934b9234c3eb2abf"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUxMTIyOQ==", "bodyText": "I'm not convinced it is the correct fix; however I was unable to debug in GWT (wozza, is it just me or has GWT development taken a performance turn for the worse recently!?!?!?) I still believe candidateHeaderColumnIndex should not exceed the number of columns in the grid. However this PR fixes the issue and therefore so as not to stand in the way of progress I'll approve....", "url": "https://github.com/kiegroup/appformer/pull/986#discussion_r451511229", "createdAt": "2020-07-08T12:37:27Z", "author": {"login": "manstis"}, "path": "uberfire-extensions/uberfire-wires/uberfire-wires-core/uberfire-wires-core-grids/src/main/java/org/uberfire/ext/wires/core/grids/client/util/ColumnIndexUtilities.java", "diffHunk": "@@ -81,6 +81,9 @@ public static int getHeaderBlockEndColumnIndex(final List<GridColumn<?>> allColu\n         if (candidateHeaderColumnIndex == allColumns.size() - 1) {\n             return candidateHeaderColumnIndex;\n         }\n+        if (candidateHeaderColumnIndex >= allColumns.size()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE3OTc4OA=="}, "originalCommit": {"oid": "5c6368762dff5dc614723268934b9234c3eb2abf"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUyNTA2MQ==", "bodyText": "For me the performance is the same. :D\nI still think the fix is the correct, because if you trace back the candidateHeaderColumnIndex comes from ci.getUiColumnIndex(). I think the uiColumnIndex() is right and the logic is good since ColumnIndexUtilities.getHeaderBlockEndColumnIndex() in my understands have the job of get the logical end block column index for that specific UI column.", "url": "https://github.com/kiegroup/appformer/pull/986#discussion_r451525061", "createdAt": "2020-07-08T13:00:02Z", "author": {"login": "danielzhe"}, "path": "uberfire-extensions/uberfire-wires/uberfire-wires-core/uberfire-wires-core-grids/src/main/java/org/uberfire/ext/wires/core/grids/client/util/ColumnIndexUtilities.java", "diffHunk": "@@ -81,6 +81,9 @@ public static int getHeaderBlockEndColumnIndex(final List<GridColumn<?>> allColu\n         if (candidateHeaderColumnIndex == allColumns.size() - 1) {\n             return candidateHeaderColumnIndex;\n         }\n+        if (candidateHeaderColumnIndex >= allColumns.size()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE3OTc4OA=="}, "originalCommit": {"oid": "5c6368762dff5dc614723268934b9234c3eb2abf"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUyNzA5NQ==", "bodyText": "Sure, but ci.getUiColumnIndex() should NEVER be greater than the gridModel.getColumns().size() - 1 otherwise something has gone wrong somewhere else...", "url": "https://github.com/kiegroup/appformer/pull/986#discussion_r451527095", "createdAt": "2020-07-08T13:03:03Z", "author": {"login": "manstis"}, "path": "uberfire-extensions/uberfire-wires/uberfire-wires-core/uberfire-wires-core-grids/src/main/java/org/uberfire/ext/wires/core/grids/client/util/ColumnIndexUtilities.java", "diffHunk": "@@ -81,6 +81,9 @@ public static int getHeaderBlockEndColumnIndex(final List<GridColumn<?>> allColu\n         if (candidateHeaderColumnIndex == allColumns.size() - 1) {\n             return candidateHeaderColumnIndex;\n         }\n+        if (candidateHeaderColumnIndex >= allColumns.size()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE3OTc4OA=="}, "originalCommit": {"oid": "5c6368762dff5dc614723268934b9234c3eb2abf"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2817, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}