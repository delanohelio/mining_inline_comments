{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNTY5NDIz", "number": 1055, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjo1MTozNVrOEp4bsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjo1Njo0N1rOEp4iHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzUxNjY3OnYy", "diffSide": "RIGHT", "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/perspective/generator/RuntimePerspectiveGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjo1MTozNVrOHb0q3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjo1MTozNVrOHb0q3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkzNjU0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/kiegroup/appformer/pull/1055#discussion_r498936540", "createdAt": "2020-10-02T16:51:35Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/perspective/generator/RuntimePerspectiveGenerator.java", "diffHunk": "@@ -50,10 +52,17 @@\n     private LayoutGenerator layoutGenerator;\n \n     public PerspectiveEditorActivity generatePerspective(LayoutTemplate layoutTemplate) {\n-        PerspectiveEditorScreenActivity screen = createNewScreen(layoutTemplate);\n-        return createNewPerspective(layoutTemplate, screen);\n+        if (isANewPerspective(layoutTemplate)) {\n+            PerspectiveEditorScreenActivity screen = createNewScreen(layoutTemplate);\n+            return createNewPerspective(layoutTemplate,\n+                                 screen);\n+        } else {\n+            PerspectiveEditorScreenActivity screen = updateScreen(layoutTemplate);\n+            return updatePerspective(layoutTemplate,\n+                              screen);\n+        }\n     }\n-\n+    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea45475968ab52800f64bfe8494b39e261333230"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzUyOTQ0OnYy", "diffSide": "RIGHT", "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/perspective/generator/RuntimePerspectiveGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjo1NTozOVrOHb0yog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjo1NTozOVrOHb0yog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkzODUzMA==", "bodyText": "Please indent this piece of code.", "url": "https://github.com/kiegroup/appformer/pull/1055#discussion_r498938530", "createdAt": "2020-10-02T16:55:39Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/perspective/generator/RuntimePerspectiveGenerator.java", "diffHunk": "@@ -95,5 +104,28 @@ private PerspectiveEditorActivity createNewPerspective(LayoutTemplate perspectiv\n         activityBeansCache.addNewPerspectiveActivity(beanManager.lookupBeans(perspectiveName).iterator().next());\n         return activity;\n     }\n+    \n+    private PerspectiveEditorScreenActivity updateScreen(LayoutTemplate layoutTemplate) {\n+        final String perspectiveScreenId = PerspectiveEditorScreenActivity.buildScreenId(layoutTemplate.getName());\n+        final SyncBeanDef<Activity> activity = activityBeansCache.getActivity(perspectiveScreenId);\n+        final PerspectiveEditorScreenActivity screenActivity = (PerspectiveEditorScreenActivity) activity.getInstance();\n+        screenActivity.setLayoutTemplate(layoutTemplate);\n+        return screenActivity;\n+    }\n+    \n+    private PerspectiveEditorActivity updatePerspective(LayoutTemplate layoutTemplate,\n+                                                        PerspectiveEditorScreenActivity screen) {\n+                             final SyncBeanDef<Activity> activity = activityBeansCache.getActivity(layoutTemplate.getName());\n+                             final PerspectiveEditorActivity perspectiveEditorActivity = (PerspectiveEditorActivity) activity.getInstance();\n+                             perspectiveEditorActivity.update(layoutTemplate,\n+                                                              screen);\n+                             return perspectiveEditorActivity;\n+                         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea45475968ab52800f64bfe8494b39e261333230"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzUzMzExOnYy", "diffSide": "RIGHT", "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/perspective/generator/RuntimePerspectiveGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjo1Njo0N1rOHb004g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjo1Njo0N1rOHb004g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkzOTEwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final IOCBeanDef<Activity> activity = activityBeansCache.getActivity(layoutTemplate.getName());\n          \n          \n            \n                    return activity == null;\n          \n          \n            \n                    return activityBeansCache.getActivity(layoutTemplate.getName()) == null;", "url": "https://github.com/kiegroup/appformer/pull/1055#discussion_r498939106", "createdAt": "2020-10-02T16:56:47Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/perspective/generator/RuntimePerspectiveGenerator.java", "diffHunk": "@@ -95,5 +104,28 @@ private PerspectiveEditorActivity createNewPerspective(LayoutTemplate perspectiv\n         activityBeansCache.addNewPerspectiveActivity(beanManager.lookupBeans(perspectiveName).iterator().next());\n         return activity;\n     }\n+    \n+    private PerspectiveEditorScreenActivity updateScreen(LayoutTemplate layoutTemplate) {\n+        final String perspectiveScreenId = PerspectiveEditorScreenActivity.buildScreenId(layoutTemplate.getName());\n+        final SyncBeanDef<Activity> activity = activityBeansCache.getActivity(perspectiveScreenId);\n+        final PerspectiveEditorScreenActivity screenActivity = (PerspectiveEditorScreenActivity) activity.getInstance();\n+        screenActivity.setLayoutTemplate(layoutTemplate);\n+        return screenActivity;\n+    }\n+    \n+    private PerspectiveEditorActivity updatePerspective(LayoutTemplate layoutTemplate,\n+                                                        PerspectiveEditorScreenActivity screen) {\n+                             final SyncBeanDef<Activity> activity = activityBeansCache.getActivity(layoutTemplate.getName());\n+                             final PerspectiveEditorActivity perspectiveEditorActivity = (PerspectiveEditorActivity) activity.getInstance();\n+                             perspectiveEditorActivity.update(layoutTemplate,\n+                                                              screen);\n+                             return perspectiveEditorActivity;\n+                         }\n+    \n+    \n+    private boolean isANewPerspective(LayoutTemplate layoutTemplate) {\n+        final IOCBeanDef<Activity> activity = activityBeansCache.getActivity(layoutTemplate.getName());\n+        return activity == null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea45475968ab52800f64bfe8494b39e261333230"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2696, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}