{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MjQ3MDA1", "number": 1076, "title": "AF-2689: Implement internal components structure", "bodyText": "JIRA:\nAF-2689\nPart of an ensemble. Merge with:\nkiegroup/droolsjbpm-build-bootstrap#1522\nInternal Components Structure\nIn this PR we introduce the capability of providing internal components. Internal components are built using the same external API, but it is served from inside Dashbuilder/Business Central, from server side in a JAR!\nThe goal is provide something that we will and maintain in future releases, like heatmap. For now we only provide a small component called \"logo\", which allow users to place images on a page.\nCheck the internal component in action:\n\nFor more information please check the JIRA associated with this PR.\nThanks!", "createdAt": "2020-11-05T18:08:00Z", "url": "https://github.com/kiegroup/appformer/pull/1076", "merged": true, "mergeCommit": {"oid": "c4564586aade9c806ae5b5d22dbef812bcd12455"}, "closed": true, "closedAt": "2020-11-26T20:14:23Z", "author": {"login": "jesuino"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZnCd2ABqjM5NjM5MDkzMzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdf8N_CAFqTUzODM3OTM5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f936beb6a0d080e4cd1be7f1dbbd58f294cc32d1", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/f936beb6a0d080e4cd1be7f1dbbd58f294cc32d1", "committedDate": "2020-11-05T18:03:21Z", "message": "AF-2689: Implement internal components structure"}, "afterCommit": {"oid": "db618158a76ccfd29f3fef92859bc9350766436f", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/db618158a76ccfd29f3fef92859bc9350766436f", "committedDate": "2020-11-05T18:54:06Z", "message": "AF-2689: Implement internal components structure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db618158a76ccfd29f3fef92859bc9350766436f", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/db618158a76ccfd29f3fef92859bc9350766436f", "committedDate": "2020-11-05T18:54:06Z", "message": "AF-2689: Implement internal components structure"}, "afterCommit": {"oid": "eb215aa01c9e9012830524eb569858effc9070bd", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/eb215aa01c9e9012830524eb569858effc9070bd", "committedDate": "2020-11-05T19:31:06Z", "message": "AF-2689: Implement internal components structure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb215aa01c9e9012830524eb569858effc9070bd", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/eb215aa01c9e9012830524eb569858effc9070bd", "committedDate": "2020-11-05T19:31:06Z", "message": "AF-2689: Implement internal components structure"}, "afterCommit": {"oid": "97e8b05024a06fa8e3b6113248f320171eb11d20", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/97e8b05024a06fa8e3b6113248f320171eb11d20", "committedDate": "2020-11-09T22:38:55Z", "message": "AF-2699: Create Dashbuilder Components Javascript API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97e8b05024a06fa8e3b6113248f320171eb11d20", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/97e8b05024a06fa8e3b6113248f320171eb11d20", "committedDate": "2020-11-09T22:38:55Z", "message": "AF-2699: Create Dashbuilder Components Javascript API"}, "afterCommit": {"oid": "551cc68cf4d3692d9526c8cc8d405476fcbca00e", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/551cc68cf4d3692d9526c8cc8d405476fcbca00e", "committedDate": "2020-11-12T12:37:17Z", "message": "Updating version"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a8637e715b7c24d420898392caaab5f9145b502", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/0a8637e715b7c24d420898392caaab5f9145b502", "committedDate": "2020-11-13T14:46:25Z", "message": "Adding locktt"}, "afterCommit": {"oid": "cc7c4d0dc38bbe28d71ce7fe0336f38d2136e690", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/cc7c4d0dc38bbe28d71ce7fe0336f38d2136e690", "committedDate": "2020-11-16T16:27:16Z", "message": "Adding locktt"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc7c4d0dc38bbe28d71ce7fe0336f38d2136e690", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/cc7c4d0dc38bbe28d71ce7fe0336f38d2136e690", "committedDate": "2020-11-16T16:27:16Z", "message": "Adding locktt"}, "afterCommit": {"oid": "39fc22c91b15c7de66a367101e203dfc33def25e", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/39fc22c91b15c7de66a367101e203dfc33def25e", "committedDate": "2020-11-16T16:28:02Z", "message": "Adding locktt"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "39fc22c91b15c7de66a367101e203dfc33def25e", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/39fc22c91b15c7de66a367101e203dfc33def25e", "committedDate": "2020-11-16T16:28:02Z", "message": "Adding locktt"}, "afterCommit": {"oid": "d93d911e05a1a19be4ff3d50ce88c8b568105166", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/d93d911e05a1a19be4ff3d50ce88c8b568105166", "committedDate": "2020-11-18T22:20:02Z", "message": "Adding Lerna install"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "584cc5d62b153e6aa01250e6288ca492a86bfc66", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/584cc5d62b153e6aa01250e6288ca492a86bfc66", "committedDate": "2020-11-19T00:49:41Z", "message": "Removing lerna"}, "afterCommit": {"oid": "b6b78c9285804fb5830f167d13f1b8d215d73d8a", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/b6b78c9285804fb5830f167d13f1b8d215d73d8a", "committedDate": "2020-11-19T13:28:53Z", "message": "Removing lerna"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MTQ5NzY4", "url": "https://github.com/kiegroup/appformer/pull/1076#pullrequestreview-529149768", "createdAt": "2020-11-12T14:38:27Z", "commit": {"oid": "551cc68cf4d3692d9526c8cc8d405476fcbca00e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNDozODoxOFrOH2hpkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNjowNzo0NlrOH2mBhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkzNjQ2NA==", "bodyText": "This is a bit confusing, calling loadInternal() returns List<ExternalComponent>, this might be confusing for people looking at this code in future (not only this, maybe more general issue, that we're in the ExternalComponentLoaderImpl class and we are dealing with both external and internal components). WDYT?", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r526936464", "createdAt": "2020-11-19T14:38:18Z", "author": {"login": "barboras7"}, "path": "dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentLoaderImpl.java", "diffHunk": "@@ -68,22 +76,29 @@ public void init() {\n     }\n \n     @Override\n-    public List<ExternalComponent> load() {\n-        if (!isExternalComponentEnabled) {\n-            return Collections.emptyList();\n-        }\n+    public List<ExternalComponent> loadInternal() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6b78c9285804fb5830f167d13f1b8d215d73d8a"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk1Mjk5MQ==", "bodyText": "Just a typo here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Path shouldNotBeAcessible = Files.createTempFile(\"should_not_be_acessible\", \"\");\n          \n          \n            \n                    Path shouldNotBeAccessible = Files.createTempFile(\"should_not_be_accessible\", \"\");", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r526952991", "createdAt": "2020-11-19T14:58:51Z", "author": {"login": "barboras7"}, "path": "dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/test/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImplTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.external.impl;\n+\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.apache.commons.io.IOUtils;\n+import org.dashbuilder.components.internal.InternalComponentsInfo;\n+import org.dashbuilder.external.service.ExternalComponentLoader;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class ExternalComponentAssetProviderImplTest {\n+\n+    @Mock\n+    ExternalComponentLoader externalComponentLoader;\n+\n+    @InjectMocks\n+    ExternalComponentAssetProviderImpl externalComponentAssetProviderImpl;\n+\n+    private Path componentsDir;\n+\n+    @Before\n+    public void prepare() throws IOException {\n+        componentsDir = Files.createTempDirectory(\"components\");\n+        when(externalComponentLoader.getExternalComponentsDir()).thenReturn(componentsDir.toString());\n+        \n+        when(externalComponentLoader.getInternalComponentsPath()).thenReturn(InternalComponentsInfo.get().getInternalComponentsRootPath());\n+    }\n+\n+    @After\n+    public void after() {\n+        FileUtils.deleteQuietly(componentsDir.toFile());\n+    }\n+\n+    @Test\n+    public void testExternalComponentAsset() throws Exception {\n+        String componentFileContent = \"abc\";\n+        String componentId = \"c1\";\n+        String componentFileName = \"testFile\";\n+        String assetPath = createComponentFile(componentId, componentFileName, componentFileContent);\n+\n+        when(externalComponentLoader.isExternalComponentsEnabled()).thenReturn(true);\n+        String assetFileLoadedContent = IOUtils.toString(externalComponentAssetProviderImpl.openAsset(assetPath), StandardCharsets.UTF_8);\n+\n+        assertEquals(componentFileContent, assetFileLoadedContent);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testExternalComponentAssetWithExternalComponentsDisabled() throws Exception {\n+        String componentFileContent = \"abc\";\n+        String componentId = \"c1\";\n+        String componentFileName = \"testFile\";\n+\n+        String assetPath = createComponentFile(componentId, componentFileName, componentFileContent);\n+\n+        when(externalComponentLoader.isExternalComponentsEnabled()).thenReturn(false);\n+        externalComponentAssetProviderImpl.openAsset(assetPath);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testAvoidTraversalPath() throws Exception {\n+        String componentFileContent = \"abc\";\n+        String componentId = \"c1\";\n+        String componentFileName = \"testFile\";\n+\n+        createComponentFile(componentId, componentFileName, componentFileContent);\n+        Path shouldNotBeAcessible = Files.createTempFile(\"should_not_be_acessible\", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6b78c9285804fb5830f167d13f1b8d215d73d8a"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAwODEzMg==", "bodyText": "extra line", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r527008132", "createdAt": "2020-11-19T16:07:46Z", "author": {"login": "barboras7"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/component-api/src/function/FunctionResultType.ts", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6b78c9285804fb5830f167d13f1b8d215d73d8a"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8bffc9d1c0708f29d5827949f2ff99f03ed6f68", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/a8bffc9d1c0708f29d5827949f2ff99f03ed6f68", "committedDate": "2020-11-23T15:40:23Z", "message": "AF-2689: Implement internal components structure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8122cb93bef93bebc15760633a8a29f768e8fca", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/e8122cb93bef93bebc15760633a8a29f768e8fca", "committedDate": "2020-11-23T15:40:23Z", "message": "AF-2699: Create Dashbuilder Components Javascript API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0823fe8021db2d95af6d110caca16ae0f07a960", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/c0823fe8021db2d95af6d110caca16ae0f07a960", "committedDate": "2020-11-23T15:40:23Z", "message": "Updating version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85894c0ad521e0c4142c6bac2a13c7d0333cfaa6", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/85894c0ad521e0c4142c6bac2a13c7d0333cfaa6", "committedDate": "2020-11-23T15:40:23Z", "message": "Adding locktt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa7e7951c508b9f677ed8548ac25d038fd83e9ce", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/fa7e7951c508b9f677ed8548ac25d038fd83e9ce", "committedDate": "2020-11-23T15:40:23Z", "message": "Adding Lerna install"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60d0992ed5cdde50b26bf4aa7b28995afc51176c", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/60d0992ed5cdde50b26bf4aa7b28995afc51176c", "committedDate": "2020-11-23T15:40:23Z", "message": "Removing lerna"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e46da17b87dcecd8999daf6818cd1a85aa43722", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/5e46da17b87dcecd8999daf6818cd1a85aa43722", "committedDate": "2020-11-23T15:40:23Z", "message": "Removing unwanted dependencies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a7fe9ae55977127b1e12d7044372de908dbbc3e", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/8a7fe9ae55977127b1e12d7044372de908dbbc3e", "committedDate": "2020-11-23T15:40:23Z", "message": "Correcting yarn.lock to use public repo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f567b0ba04a87617677ad200f0280545a57ec7b9", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/f567b0ba04a87617677ad200f0280545a57ec7b9", "committedDate": "2020-11-23T15:40:23Z", "message": "improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/8075a92ba36838f30b0ef503489483a561a14895", "committedDate": "2020-11-23T15:40:23Z", "message": "Components Renaming and improvements"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86dc46b56f675926786db58cf88237b0e22c99b7", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/86dc46b56f675926786db58cf88237b0e22c99b7", "committedDate": "2020-11-19T21:12:06Z", "message": "improvements"}, "afterCommit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/8075a92ba36838f30b0ef503489483a561a14895", "committedDate": "2020-11-23T15:40:23Z", "message": "Components Renaming and improvements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NjA2OTYx", "url": "https://github.com/kiegroup/appformer/pull/1076#pullrequestreview-536606961", "createdAt": "2020-11-23T15:53:49Z", "commit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNTo1Mzo0OVrOH4TwBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzozNjozMVrOH5BInQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgwNTg5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public interface ExternalComponentService {\n          \n          \n            \n            public interface ComponentService {\n          \n      \n    \n    \n  \n\nA renaming suggestion since this interface now includes operations for both internal and external components.", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r528805894", "createdAt": "2020-11-23T15:53:49Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-services-api/src/main/java/org/dashbuilder/external/service/ExternalComponentService.java", "diffHunk": "@@ -25,8 +25,10 @@\n @Remote\n public interface ExternalComponentService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUwMTcyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ComponentsLoaderImpl implements ComponentsLoader {\n          \n          \n            \n            public class ComponentLoaderImpl implements ComponentLoader {\n          \n      \n    \n    \n  \n\nI'd name them like this, but this is just my personal opinion. :)", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529501726", "createdAt": "2020-11-24T12:17:22Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ComponentsLoaderImpl.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.external.impl;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import com.google.gson.Gson;\n+import org.dashbuilder.components.internal.ProvidedComponentsInfo;\n+import org.dashbuilder.external.model.ExternalComponent;\n+import org.dashbuilder.external.service.ComponentsLoader;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@ApplicationScoped\n+public class ComponentsLoaderImpl implements ComponentsLoader {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUwNzk4NQ==", "bodyText": "Semantically, it's kind of confusing a method called listInternalComponents returning a list of ExternalComponent.", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529507985", "createdAt": "2020-11-24T12:28:27Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentServiceImpl.java", "diffHunk": "@@ -32,18 +33,24 @@\n public class ExternalComponentServiceImpl implements ExternalComponentService {\n \n     @Inject\n-    ExternalComponentLoader loader;\n+    ComponentsLoader loader;\n \n     @Override\n-    public List<ExternalComponent> listComponents() {\n-        return loader.load();\n+    public List<ExternalComponent> listExternalComponents() {\n+        return loader.loadExternal();\n+    }\n+\n+    @Override\n+    public List<ExternalComponent> listInternalComponents() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUwOTI2MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public abstract class ComponentsGroupProvider implements PerspectiveEditorComponentGroupProvider {\n          \n          \n            \n            public abstract class ComponentGroupProvider implements PerspectiveEditorComponentGroupProvider {\n          \n      \n    \n    \n  \n\nI'd name it like this, but this is just my personal opinion. :)", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529509261", "createdAt": "2020-11-24T12:30:36Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ComponentsGroupProvider.java", "diffHunk": "@@ -19,43 +19,18 @@\n import java.util.Collections;\n import java.util.List;\n \n-import javax.enterprise.context.ApplicationScoped;\n-import javax.inject.Inject;\n-\n-import org.dashbuilder.client.editor.resources.i18n.Constants;\n import org.dashbuilder.external.model.ExternalComponent;\n-import org.dashbuilder.external.service.ExternalComponentService;\n-import org.jboss.errai.common.client.api.Caller;\n-import org.jboss.errai.ioc.client.api.AfterInitialization;\n-import org.jboss.errai.ioc.client.api.EntryPoint;\n import org.jboss.errai.ioc.client.container.SyncBeanManager;\n import org.uberfire.ext.layout.editor.client.api.LayoutDragComponentGroup;\n import org.uberfire.ext.plugin.client.perspective.editor.api.PerspectiveEditorComponentGroupProvider;\n \n-@EntryPoint\n-@ApplicationScoped\n-public class ExternalComponentGroupProvider implements PerspectiveEditorComponentGroupProvider {\n+public abstract class ComponentsGroupProvider implements PerspectiveEditorComponentGroupProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUwOTQ4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ExternalComponentsGroupProvider extends ComponentsGroupProvider {\n          \n          \n            \n            public class ExternalComponentGroupProvider extends ComponentsGroupProvider {\n          \n      \n    \n    \n  \n\nI'd name it like this, but this is just my personal opinion. :)", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529509489", "createdAt": "2020-11-24T12:31:00Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/ExternalComponentsGroupProvider.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.editor.external;\n+\n+import java.util.List;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import org.dashbuilder.client.editor.resources.i18n.Constants;\n+import org.dashbuilder.external.model.ExternalComponent;\n+import org.dashbuilder.external.service.ExternalComponentService;\n+import org.jboss.errai.common.client.api.Caller;\n+import org.jboss.errai.ioc.client.api.AfterInitialization;\n+import org.jboss.errai.ioc.client.api.EntryPoint;\n+import org.jboss.errai.ioc.client.container.SyncBeanManager;\n+\n+@EntryPoint\n+@ApplicationScoped\n+public class ExternalComponentsGroupProvider extends ComponentsGroupProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUwOTc4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class InternalComponentsGroupProvider extends ComponentsGroupProvider {\n          \n          \n            \n            public class InternalComponentGroupProvider extends ComponentsGroupProvider {\n          \n      \n    \n    \n  \n\nI'd name it like this, but this is just my personal opinion. :)", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529509786", "createdAt": "2020-11-24T12:31:31Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-editor/src/main/java/org/dashbuilder/client/editor/external/InternalComponentsGroupProvider.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.editor.external;\n+\n+import java.util.List;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import org.dashbuilder.client.editor.resources.i18n.Constants;\n+import org.dashbuilder.external.model.ExternalComponent;\n+import org.dashbuilder.external.service.ExternalComponentService;\n+import org.jboss.errai.common.client.api.Caller;\n+import org.jboss.errai.ioc.client.api.AfterInitialization;\n+import org.jboss.errai.ioc.client.api.EntryPoint;\n+import org.jboss.errai.ioc.client.container.SyncBeanManager;\n+\n+@EntryPoint\n+@ApplicationScoped\n+public class InternalComponentsGroupProvider extends ComponentsGroupProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUxNjE3OQ==", "bodyText": "Please add the copyright header to this file.", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529516179", "createdAt": "2020-11-24T12:43:06Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/pom.xml", "diffHunk": "@@ -0,0 +1,132 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUyMDA5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ProvidedComponentsInfo {\n          \n          \n            \n            public class ProvidedComponentInfo {\n          \n      \n    \n    \n  \n\nI'd name it like this, but this is just my personal opinion. :)", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529520092", "createdAt": "2020-11-24T12:49:44Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/src/main/java/org/dashbuilder/components/internal/ProvidedComponentsInfo.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.components.internal;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Properties;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Access internal component information and expose during runtime.\n+ *\n+ */\n+public class ProvidedComponentsInfo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUyMzE4MA==", "bodyText": "This if block can be moved to the first line of the method since there is no need to resolve the paths if isExternalComponentsEnabled==false.", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529523180", "createdAt": "2020-11-24T12:54:48Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImpl.java", "diffHunk": "@@ -21,27 +21,70 @@\n import java.io.InputStream;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n+import java.util.Optional;\n \n import javax.enterprise.context.ApplicationScoped;\n import javax.inject.Inject;\n \n+import org.apache.commons.io.FilenameUtils;\n import org.dashbuilder.external.service.ExternalComponentAssetProvider;\n-import org.dashbuilder.external.service.ExternalComponentLoader;\n+import org.dashbuilder.external.service.ComponentsLoader;\n \n+/**\n+ * Looks for components assets.\n+ *\n+ */\n @ApplicationScoped\n public class ExternalComponentAssetProviderImpl implements ExternalComponentAssetProvider {\n \n     @Inject\n-    ExternalComponentLoader componentsLoader;\n+    ComponentsLoader componentsLoader;\n \n     @Override\n     public InputStream openAsset(String componentAssetPath) {\n+        if (componentAssetPath != null) {\n+            String normalizedAssetPath = FilenameUtils.normalizeNoEndSeparator(componentAssetPath);\n+            if (normalizedAssetPath != null) {\n+                return getInternalComponentAsset(normalizedAssetPath).orElseGet(() -> getExternalComponentAsset(normalizedAssetPath));\n+            }\n+        }\n+        throw new IllegalArgumentException(\"Invalid Asset Path.\");\n+    }\n+\n+    private Optional<InputStream> getInternalComponentAsset(String componentAssetPath) {\n+        String internalComponentsBaseDir = componentsLoader.getProvidedComponentsPath();\n+        String fullPath = \"/\" + internalComponentsBaseDir + \"/\" + componentAssetPath;\n+        return Optional.ofNullable(this.getClass().getResourceAsStream(fullPath));\n+    }\n+\n+    private InputStream getExternalComponentAsset(String componentAssetPath) {\n+        Path baseDir = Paths.get(componentsLoader.getExternalComponentsDir());\n+        Path assetPath = baseDir.resolve(componentAssetPath);\n+\n+        if (!componentsLoader.isExternalComponentsEnabled()) {\n+            throw new IllegalArgumentException(\"External Components are not enabled\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzMDQ2Mw==", "bodyText": "Nice!", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529530463", "createdAt": "2020-11-24T13:06:47Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/ExternalComponentAssetProviderImpl.java", "diffHunk": "@@ -21,27 +21,70 @@\n import java.io.InputStream;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n+import java.util.Optional;\n \n import javax.enterprise.context.ApplicationScoped;\n import javax.inject.Inject;\n \n+import org.apache.commons.io.FilenameUtils;\n import org.dashbuilder.external.service.ExternalComponentAssetProvider;\n-import org.dashbuilder.external.service.ExternalComponentLoader;\n+import org.dashbuilder.external.service.ComponentsLoader;\n \n+/**\n+ * Looks for components assets.\n+ *\n+ */\n @ApplicationScoped\n public class ExternalComponentAssetProviderImpl implements ExternalComponentAssetProvider {\n \n     @Inject\n-    ExternalComponentLoader componentsLoader;\n+    ComponentsLoader componentsLoader;\n \n     @Override\n     public InputStream openAsset(String componentAssetPath) {\n+        if (componentAssetPath != null) {\n+            String normalizedAssetPath = FilenameUtils.normalizeNoEndSeparator(componentAssetPath);\n+            if (normalizedAssetPath != null) {\n+                return getInternalComponentAsset(normalizedAssetPath).orElseGet(() -> getExternalComponentAsset(normalizedAssetPath));\n+            }\n+        }\n+        throw new IllegalArgumentException(\"Invalid Asset Path.\");\n+    }\n+\n+    private Optional<InputStream> getInternalComponentAsset(String componentAssetPath) {\n+        String internalComponentsBaseDir = componentsLoader.getProvidedComponentsPath();\n+        String fullPath = \"/\" + internalComponentsBaseDir + \"/\" + componentAssetPath;\n+        return Optional.ofNullable(this.getClass().getResourceAsStream(fullPath));\n+    }\n+\n+    private InputStream getExternalComponentAsset(String componentAssetPath) {\n+        Path baseDir = Paths.get(componentsLoader.getExternalComponentsDir());\n+        Path assetPath = baseDir.resolve(componentAssetPath);\n+\n+        if (!componentsLoader.isExternalComponentsEnabled()) {\n+            throw new IllegalArgumentException(\"External Components are not enabled\");\n+        }\n+\n+        if (isFileInComponentsDir(baseDir, assetPath)) {\n+            return loadExternalComponentFile(assetPath);\n+        } else {\n+            throw new IllegalArgumentException(\"Not a component file.\");\n+\n+        }\n+    }\n+\n+    private InputStream loadExternalComponentFile(Path assetPath) {\n         try {\n-            Path path = Paths.get(componentsLoader.getExternalComponentsDir(), componentAssetPath);\n-            return new FileInputStream(path.toFile());\n+            return new FileInputStream(assetPath.toFile());\n         } catch (FileNotFoundException e) {\n-            throw new RuntimeException(e);\n+            throw new IllegalArgumentException(\"Error opening component file: \" + e.getMessage(), e);\n         }\n     }\n \n+    // Used to prevent path traversal attacks.\n+    // Reference https://portswigger.net/web-security/file-path-traversal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzMTgwNA==", "bodyText": "Do we need this file?", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529531804", "createdAt": "2020-11-24T13:08:55Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/logo-component/src/__tests__/default.test.js", "diffHunk": "@@ -0,0 +1,3 @@\n+test(\"default\", () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU0NTA0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Calls a function and returns a Promise that will be fullfilled when the response is received from DB.\n          \n          \n            \n               * Calls a function and returns a Promise that will be fulfilled when the response is received from DB.\n          \n      \n    \n    \n  \n\nThere's a typo here.", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529545043", "createdAt": "2020-11-24T13:29:48Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/component-api/src/controller/ComponentController.ts", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import { DataSet, FilterRequest } from \"../dataset\";\n+import { FunctionCallRequest } from \"../function\";\n+\n+/*\n+ * Controls component lifecycle and allows component communicate with Dashbuilder\n+ */\n+export interface ComponentController {\n+  /*\n+   * Set on init callback\n+   */\n+  setOnInit(onInit: (params: Map<string, any>) => void): void;\n+\n+  /*\n+   * Sets the method to be called when dashbuilder sends a dataset update after a filter or when using pooling.\n+   * Params is optional and is basically the same params sent after onInit\n+   */\n+  setOnDataSet(onDataSet: (dataSet: DataSet, params?: Map<string, any>) => void): void;\n+\n+  /*\n+   * Components must send ready their finish their setup (unless it is sent automatically by the controller implementation)\n+   */\n+  ready(): void;\n+\n+  /*\n+   * Components can call this if the dataset or any other configuration is wrong. The message can detail what is wrong.\n+   */\n+  requireConfigurationFix(message: string): void;\n+\n+  /*\n+   * Components must call this after the configuration is fixed by users.\n+   */\n+  configurationOk(): void;\n+\n+  /*\n+   * Used to send a filter request to Dashbuilder\n+   */\n+  filter(filterRequest: FilterRequest): void;\n+\n+  /*\n+   * Calls a function and returns a Promise that will be fullfilled when the response is received from DB.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU0OTQ2OQ==", "bodyText": "Please fix the indentation.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             export * from \"./ColumnType\";\n          \n          \n            \n            export * from \"./ColumnType\";", "url": "https://github.com/kiegroup/appformer/pull/1076#discussion_r529549469", "createdAt": "2020-11-24T13:36:31Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-shared/dashbuilder-js/packages/component-api/src/dataset/index.ts", "diffHunk": "@@ -0,0 +1,20 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+export * from \"./ColumnSettings\";\n+ export * from \"./ColumnType\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8075a92ba36838f30b0ef503489483a561a14895"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1ccf8946f2f8f3e43afd5cce8ea00a9769cd301", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/a1ccf8946f2f8f3e43afd5cce8ea00a9769cd301", "committedDate": "2020-11-24T15:47:08Z", "message": "Renaming and fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3Njc3NTM3", "url": "https://github.com/kiegroup/appformer/pull/1076#pullrequestreview-537677537", "createdAt": "2020-11-24T16:12:50Z", "commit": {"oid": "a1ccf8946f2f8f3e43afd5cce8ea00a9769cd301"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91ec28bf85a600f046a1dc4167f7074754bbe3f7", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/91ec28bf85a600f046a1dc4167f7074754bbe3f7", "committedDate": "2020-11-24T18:05:47Z", "message": "Fixing tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4Mzc5Mzk5", "url": "https://github.com/kiegroup/appformer/pull/1076#pullrequestreview-538379399", "createdAt": "2020-11-25T10:58:28Z", "commit": {"oid": "91ec28bf85a600f046a1dc4167f7074754bbe3f7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2022, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}