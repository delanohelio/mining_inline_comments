{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMzc3ODc2", "number": 1067, "title": "AF-2637: Implement SVG backend Service for Kie Server", "bodyText": "AF-2637\nPart of an ensemble, merge with:\nkiegroup/jbpm-wb#1467\n\nThis PR:\n\nExtends components functions (AF-2636) to backend;\nAdd a function to retrieve a process SVG.\n\nThe way it was implemented was using a proxy mechanism. The class BackendFunctionLoaderService is responsible to look for backend functions, then the class BackendFunctionLoader calls the service to list the registered functions and register it on client side and also proxy calls to backend funcions.\nAlong with this we created ProcessSVGFunction, it uses Kie Server API to retrieve a process SVG. Notice it requires two parameters: containerId, process Id. It is also possible to define a serverTemplateId, where user can set a server template to look for the Kie server to retrieve the SVG. If a server template is not used then the function uses the first one available or a default server template, configured using system property dashbuilder.kieserver.defaultServerTemplate.\nSince the way to access Kie Server in DB is different of how it is done in BC, we implemented a specific function for BC. It has the same name and support the same parameters, so we should be fine when exporting dashboards that uses this function from BC to DB.\nkiegroup/jbpm-wb#1467\nTo test the changes use the component I created called process_svg. Just copy the following folder into your components directory. In BC you create a new page and drag the component, make sure you have Kie Server containers running and a process with SVG (the sample evaluation has SVG) then you create a container, drag the component, set the values corresponding values and it should work, see an example:\n\nIf you just import the evaluation example and deploy, then these values in component config should be okay:\nContainer: evaluation_1.0.0-SNAPSHOT\nProcess: evaluation\nServer template: sample-server\n\nProcess SVG component:\nhttps://github.com/jesuino/dashbuilder-components/tree/master/process_svg", "createdAt": "2020-10-27T00:03:35Z", "url": "https://github.com/kiegroup/appformer/pull/1067", "merged": true, "mergeCommit": {"oid": "f2e1d07710d5f00b44682fa3737fbd054155ffb5"}, "closed": true, "closedAt": "2020-11-03T14:02:28Z", "author": {"login": "jesuino"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWdLYjgH2gAyNTEwMzc3ODc2OjNjNDE0MDQ1NTU4ZTQzNTA5ZDhjMjkyMmQ1NjZiOTkwMDJkNGY5NDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdY5qRrgFqTUyMjUyMjgzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3c414045558e43509d8c2922d566b99002d4f941", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/3c414045558e43509d8c2922d566b99002d4f941", "committedDate": "2020-10-26T23:43:15Z", "message": "AF-2637: Implement SVG backend Service for Kie Server"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "574f9f22ffd3c356e5a66a6f68ab8ce0ccf4e834", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/574f9f22ffd3c356e5a66a6f68ab8ce0ccf4e834", "committedDate": "2020-10-27T13:35:43Z", "message": "Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da8f0780fe426fca14dc460d7d37a99bfe979c33", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/da8f0780fe426fca14dc460d7d37a99bfe979c33", "committedDate": "2020-10-27T13:44:28Z", "message": "Checking optional before getting value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b3f2d0a93e8ec16f5fed674e2d4c7ada6a619b7", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/9b3f2d0a93e8ec16f5fed674e2d4c7ada6a619b7", "committedDate": "2020-10-27T14:57:28Z", "message": "fixing method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NzY4MzA2", "url": "https://github.com/kiegroup/appformer/pull/1067#pullrequestreview-517768306", "createdAt": "2020-10-27T14:29:28Z", "commit": {"oid": "da8f0780fe426fca14dc460d7d37a99bfe979c33"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNDoyOToyOVrOHo_N1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNDozNzo1MFrOHo_pfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc0MDgyMA==", "bodyText": "Can we use generics instead of Object?", "url": "https://github.com/kiegroup/appformer/pull/1067#discussion_r512740820", "createdAt": "2020-10-27T14:29:29Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-backend/dashbuilder-external-backend/src/main/java/org/dashbuilder/external/impl/BackendComponentFunction.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.external.impl;\n+\n+import java.util.Map;\n+\n+public interface BackendComponentFunction {\n+\n+    default String getName() {\n+        return this.getClass().getSimpleName();\n+    }\n+\n+    Object exec(Map<String, Object> params);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da8f0780fe426fca14dc460d7d37a99bfe979c33"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc0NTkxOA==", "bodyText": "Do we need a client.close() here?", "url": "https://github.com/kiegroup/appformer/pull/1067#discussion_r512745918", "createdAt": "2020-10-27T14:35:22Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-backend/dashbuilder-kie-server-backend/src/main/java/org/dashbuilder/kieserver/backend/rest/KieServerQueryClient.java", "diffHunk": "@@ -94,6 +99,23 @@ public void unregisterQuery(KieServerConnectionInfo connectionInfo, String dataS\n         client.close();\n     }\n \n+    public String processSVG(KieServerConnectionInfo connectionInfo, String containerId, String processId) {\n+        Client client = ClientBuilder.newClient();\n+        Optional<String> location = connectionInfo.getLocation();\n+        if (location.isPresent()) {\n+            WebTarget target = client.target(location.get())\n+                                     .path(PROCESS_SVG_URI)\n+                                     .resolveTemplate(CONTAINER_ID_PARAM, containerId)\n+                                     .resolveTemplate(PROCESS_ID_PARAM, processId);\n+            addAuth(connectionInfo, target);\n+            String svg = target.request().get(String.class);\n+            client.close();\n+            return svg;\n+        }\n+        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da8f0780fe426fca14dc460d7d37a99bfe979c33"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc0NjYwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String UNKNOW_BACKEND_ERROR = \"Unknow backend error.\";\n          \n          \n            \n                private static final String UNKNOWN_BACKEND_ERROR = \"Unknown backend error.\";", "url": "https://github.com/kiegroup/appformer/pull/1067#discussion_r512746608", "createdAt": "2020-10-27T14:36:16Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-client/src/main/java/org/dashbuilder/displayer/client/component/function/BackendFunctionLoader.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.displayer.client.component.function;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Consumer;\n+\n+import javax.annotation.PostConstruct;\n+import javax.inject.Inject;\n+\n+import org.dashbuilder.displayer.external.ExternalComponentFunction;\n+import org.dashbuilder.external.service.BackendComponentFunctionService;\n+import org.jboss.errai.common.client.api.Caller;\n+import org.jboss.errai.ioc.client.api.EntryPoint;\n+\n+/**\n+ * Generated wrapped client functions to proxy the call using BackendFunctionLoaderService.\n+ *\n+ */\n+@EntryPoint\n+public class BackendFunctionLoader {\n+\n+    private static final String UNKNOW_BACKEND_ERROR = \"Unknow backend error.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da8f0780fe426fca14dc460d7d37a99bfe979c33"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc0NzkwMw==", "bodyText": "Is it necessary?", "url": "https://github.com/kiegroup/appformer/pull/1067#discussion_r512747903", "createdAt": "2020-10-27T14:37:50Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-client/dashbuilder-displayer-client/src/test/java/org/dashbuilder/displayer/client/component/function/ComponentFunctionLocatorTest.java", "diffHunk": "@@ -18,6 +18,7 @@\n import java.util.Collections;\n import java.util.Optional;\n \n+import org.dashbuilder.displayer.external.ExternalComponentFunction;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da8f0780fe426fca14dc460d7d37a99bfe979c33"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a74dccf13c50f2c0a09078924b7c40f8f7c23d1d", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/a74dccf13c50f2c0a09078924b7c40f8f7c23d1d", "committedDate": "2020-10-27T17:39:37Z", "message": "Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "730810504c3f23ebd1df76c590efee9401afdd9e", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/730810504c3f23ebd1df76c590efee9401afdd9e", "committedDate": "2020-10-27T18:33:02Z", "message": "fixing typo"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9344ab0068ee714e1973f43973a21a738cd065ed", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/9344ab0068ee714e1973f43973a21a738cd065ed", "committedDate": "2020-10-27T18:28:54Z", "message": "fixing typo"}, "afterCommit": {"oid": "730810504c3f23ebd1df76c590efee9401afdd9e", "author": {"user": {"login": "jesuino", "name": "William Ant\u00f4nio Siqueira"}}, "url": "https://github.com/kiegroup/appformer/commit/730810504c3f23ebd1df76c590efee9401afdd9e", "committedDate": "2020-10-27T18:33:02Z", "message": "fixing typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MDIzOTI0", "url": "https://github.com/kiegroup/appformer/pull/1067#pullrequestreview-518023924", "createdAt": "2020-10-27T18:34:23Z", "commit": {"oid": "730810504c3f23ebd1df76c590efee9401afdd9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNDY3ODcw", "url": "https://github.com/kiegroup/appformer/pull/1067#pullrequestreview-522467870", "createdAt": "2020-11-03T12:57:03Z", "commit": {"oid": "730810504c3f23ebd1df76c590efee9401afdd9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNTIyODM1", "url": "https://github.com/kiegroup/appformer/pull/1067#pullrequestreview-522522835", "createdAt": "2020-11-03T14:02:11Z", "commit": {"oid": "730810504c3f23ebd1df76c590efee9401afdd9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2013, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}