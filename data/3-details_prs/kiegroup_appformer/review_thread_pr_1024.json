{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NzU0ODg1", "number": 1024, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxODozODo0NVrOEWUPng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxOTowMDozNlrOEWUo6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODM1ODA2OnYy", "diffSide": "RIGHT", "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/resources/i18n/AppConstants.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxODozODo0NVrOG9kEwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxODozODo0NVrOG9kEwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIwNzM2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String DisconnectedFromServer();\n          \n          \n            \n            \n          \n          \n            \n                String CouldNotConnectToServer();\n          \n          \n            \n            \n          \n          \n            \n                String SessionTimeout();\n          \n          \n            \n            \n          \n          \n            \n                String InvalidBusResponseProbablySessionTimeout();\n          \n          \n            \n                String disconnectedFromServer();\n          \n          \n            \n            \n          \n          \n            \n                String couldNotConnectToServer();\n          \n          \n            \n            \n          \n          \n            \n                String sessionTimeout();\n          \n          \n            \n            \n          \n          \n            \n                String invalidBusResponseProbablySessionTimeout();", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r467207360", "createdAt": "2020-08-07T18:38:45Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/resources/i18n/AppConstants.java", "diffHunk": "@@ -54,5 +54,13 @@\n     String dashboardAlreadyImport(String newModelId, String exitingModel);\n \n     String importSuccess(String fileName);\n-    \n+\n+    String DisconnectedFromServer();\n+\n+    String CouldNotConnectToServer();\n+\n+    String SessionTimeout();\n+\n+    String InvalidBusResponseProbablySessionTimeout();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f9f694da43efa00c4f076bcef87d5d30c944908"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODM5ODc0OnYy", "diffSide": "RIGHT", "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxODo1Mjo0MlrOG9kdJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNToxODo1M1rOG-TJQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxMzYwNA==", "bodyText": "Please take into account that t could be null.", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r467213604", "createdAt": "2020-08-07T18:52:42Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.error;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.enterprise.context.Dependent;\n+import javax.inject.Inject;\n+\n+import com.google.gwt.user.client.Window;\n+import org.dashbuilder.client.resources.i18n.AppConstants;\n+import org.jboss.errai.bus.client.api.InvalidBusContentException;\n+import org.uberfire.ext.widgets.common.client.common.BusyIndicatorView;\n+import org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup;\n+import org.uberfire.ext.widgets.common.client.resources.i18n.CommonConstants;\n+\n+import static org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup.newYesNoCancelPopup;\n+import static org.uberfire.ext.widgets.common.client.common.popups.errors.ErrorPopup.showMessage;\n+\n+@Dependent\n+public class DefaultRuntimeErrorCallback {\n+\n+    @Inject\n+    BusyIndicatorView loading;\n+\n+    AppConstants i18n = AppConstants.INSTANCE;\n+\n+    private boolean errorPopUpLock = false;\n+\n+    public void error(final Throwable throwable) {\n+        if (errorPopUpLock) {\n+            return;\n+        }\n+        loading.hideBusyIndicator();\n+        errorPopUpLock = true;\n+        if (isServerOfflineException(throwable)) {\n+            yesNoPopup(i18n.DisconnectedFromServer(), i18n.CouldNotConnectToServer());\n+        } else if (isInvalidBusContentException(throwable)) {\n+            yesNoPopup(i18n.SessionTimeout(), i18n.InvalidBusResponseProbablySessionTimeout());\n+        } else {\n+            showMessage(CommonConstants.INSTANCE.ExceptionGeneric0(extractMessageRecursively(throwable)),\n+                        this::unlock,\n+                        this::unlock);\n+        }\n+\n+    }\n+\n+    private void yesNoPopup(String title, String content) {\n+        final YesNoCancelPopup result = newYesNoCancelPopup(title, content, Window.Location::reload, this::unlock, this::unlock);\n+        result.clearScrollHeight();\n+        result.show();\n+    }\n+\n+    private String extractMessageRecursively(final Throwable t) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f9f694da43efa00c4f076bcef87d5d30c944908"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3ODU2MA==", "bodyText": "Thanks, I added a null check", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r467978560", "createdAt": "2020-08-10T15:18:53Z", "author": {"login": "jesuino"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.error;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.enterprise.context.Dependent;\n+import javax.inject.Inject;\n+\n+import com.google.gwt.user.client.Window;\n+import org.dashbuilder.client.resources.i18n.AppConstants;\n+import org.jboss.errai.bus.client.api.InvalidBusContentException;\n+import org.uberfire.ext.widgets.common.client.common.BusyIndicatorView;\n+import org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup;\n+import org.uberfire.ext.widgets.common.client.resources.i18n.CommonConstants;\n+\n+import static org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup.newYesNoCancelPopup;\n+import static org.uberfire.ext.widgets.common.client.common.popups.errors.ErrorPopup.showMessage;\n+\n+@Dependent\n+public class DefaultRuntimeErrorCallback {\n+\n+    @Inject\n+    BusyIndicatorView loading;\n+\n+    AppConstants i18n = AppConstants.INSTANCE;\n+\n+    private boolean errorPopUpLock = false;\n+\n+    public void error(final Throwable throwable) {\n+        if (errorPopUpLock) {\n+            return;\n+        }\n+        loading.hideBusyIndicator();\n+        errorPopUpLock = true;\n+        if (isServerOfflineException(throwable)) {\n+            yesNoPopup(i18n.DisconnectedFromServer(), i18n.CouldNotConnectToServer());\n+        } else if (isInvalidBusContentException(throwable)) {\n+            yesNoPopup(i18n.SessionTimeout(), i18n.InvalidBusResponseProbablySessionTimeout());\n+        } else {\n+            showMessage(CommonConstants.INSTANCE.ExceptionGeneric0(extractMessageRecursively(throwable)),\n+                        this::unlock,\n+                        this::unlock);\n+        }\n+\n+    }\n+\n+    private void yesNoPopup(String title, String content) {\n+        final YesNoCancelPopup result = newYesNoCancelPopup(title, content, Window.Location::reload, this::unlock, this::unlock);\n+        result.clearScrollHeight();\n+        result.show();\n+    }\n+\n+    private String extractMessageRecursively(final Throwable t) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxMzYwNA=="}, "originalCommit": {"oid": "8f9f694da43efa00c4f076bcef87d5d30c944908"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODQyMjgyOnYy", "diffSide": "RIGHT", "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxOTowMDozNlrOG9krzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNTo1MToyNlrOG-U3DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNzM1OA==", "bodyText": "Consider reusing only one instance of YesNoCancelPopup instead of creating a new one every time.\nThe only things that change would be title and content.\nPerhaps you could use the YesNoCancelPopup#isVisible method instead of errorPopUpLock.\nJust a suggestion.", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r467217358", "createdAt": "2020-08-07T19:00:36Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.error;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.enterprise.context.Dependent;\n+import javax.inject.Inject;\n+\n+import com.google.gwt.user.client.Window;\n+import org.dashbuilder.client.resources.i18n.AppConstants;\n+import org.jboss.errai.bus.client.api.InvalidBusContentException;\n+import org.uberfire.ext.widgets.common.client.common.BusyIndicatorView;\n+import org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup;\n+import org.uberfire.ext.widgets.common.client.resources.i18n.CommonConstants;\n+\n+import static org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup.newYesNoCancelPopup;\n+import static org.uberfire.ext.widgets.common.client.common.popups.errors.ErrorPopup.showMessage;\n+\n+@Dependent\n+public class DefaultRuntimeErrorCallback {\n+\n+    @Inject\n+    BusyIndicatorView loading;\n+\n+    AppConstants i18n = AppConstants.INSTANCE;\n+\n+    private boolean errorPopUpLock = false;\n+\n+    public void error(final Throwable throwable) {\n+        if (errorPopUpLock) {\n+            return;\n+        }\n+        loading.hideBusyIndicator();\n+        errorPopUpLock = true;\n+        if (isServerOfflineException(throwable)) {\n+            yesNoPopup(i18n.DisconnectedFromServer(), i18n.CouldNotConnectToServer());\n+        } else if (isInvalidBusContentException(throwable)) {\n+            yesNoPopup(i18n.SessionTimeout(), i18n.InvalidBusResponseProbablySessionTimeout());\n+        } else {\n+            showMessage(CommonConstants.INSTANCE.ExceptionGeneric0(extractMessageRecursively(throwable)),\n+                        this::unlock,\n+                        this::unlock);\n+        }\n+\n+    }\n+\n+    private void yesNoPopup(String title, String content) {\n+        final YesNoCancelPopup result = newYesNoCancelPopup(title, content, Window.Location::reload, this::unlock, this::unlock);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f9f694da43efa00c4f076bcef87d5d30c944908"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzMzYzNw==", "bodyText": "Hello @caponetto - thanks for great suggestion. The issue is that there's no way to change the popUp content after it is created, but I will change the popUp body widget and see it works.", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r467933637", "createdAt": "2020-08-10T14:14:53Z", "author": {"login": "jesuino"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.error;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.enterprise.context.Dependent;\n+import javax.inject.Inject;\n+\n+import com.google.gwt.user.client.Window;\n+import org.dashbuilder.client.resources.i18n.AppConstants;\n+import org.jboss.errai.bus.client.api.InvalidBusContentException;\n+import org.uberfire.ext.widgets.common.client.common.BusyIndicatorView;\n+import org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup;\n+import org.uberfire.ext.widgets.common.client.resources.i18n.CommonConstants;\n+\n+import static org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup.newYesNoCancelPopup;\n+import static org.uberfire.ext.widgets.common.client.common.popups.errors.ErrorPopup.showMessage;\n+\n+@Dependent\n+public class DefaultRuntimeErrorCallback {\n+\n+    @Inject\n+    BusyIndicatorView loading;\n+\n+    AppConstants i18n = AppConstants.INSTANCE;\n+\n+    private boolean errorPopUpLock = false;\n+\n+    public void error(final Throwable throwable) {\n+        if (errorPopUpLock) {\n+            return;\n+        }\n+        loading.hideBusyIndicator();\n+        errorPopUpLock = true;\n+        if (isServerOfflineException(throwable)) {\n+            yesNoPopup(i18n.DisconnectedFromServer(), i18n.CouldNotConnectToServer());\n+        } else if (isInvalidBusContentException(throwable)) {\n+            yesNoPopup(i18n.SessionTimeout(), i18n.InvalidBusResponseProbablySessionTimeout());\n+        } else {\n+            showMessage(CommonConstants.INSTANCE.ExceptionGeneric0(extractMessageRecursively(throwable)),\n+                        this::unlock,\n+                        this::unlock);\n+        }\n+\n+    }\n+\n+    private void yesNoPopup(String title, String content) {\n+        final YesNoCancelPopup result = newYesNoCancelPopup(title, content, Window.Location::reload, this::unlock, this::unlock);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNzM1OA=="}, "originalCommit": {"oid": "8f9f694da43efa00c4f076bcef87d5d30c944908"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzNzkxNQ==", "bodyText": "Oh, in this case, let's keep the way you did then.\nI saw a setTitle method and thought there could be a setContent as well, which is not the case.", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r467937915", "createdAt": "2020-08-10T14:21:23Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.error;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.enterprise.context.Dependent;\n+import javax.inject.Inject;\n+\n+import com.google.gwt.user.client.Window;\n+import org.dashbuilder.client.resources.i18n.AppConstants;\n+import org.jboss.errai.bus.client.api.InvalidBusContentException;\n+import org.uberfire.ext.widgets.common.client.common.BusyIndicatorView;\n+import org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup;\n+import org.uberfire.ext.widgets.common.client.resources.i18n.CommonConstants;\n+\n+import static org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup.newYesNoCancelPopup;\n+import static org.uberfire.ext.widgets.common.client.common.popups.errors.ErrorPopup.showMessage;\n+\n+@Dependent\n+public class DefaultRuntimeErrorCallback {\n+\n+    @Inject\n+    BusyIndicatorView loading;\n+\n+    AppConstants i18n = AppConstants.INSTANCE;\n+\n+    private boolean errorPopUpLock = false;\n+\n+    public void error(final Throwable throwable) {\n+        if (errorPopUpLock) {\n+            return;\n+        }\n+        loading.hideBusyIndicator();\n+        errorPopUpLock = true;\n+        if (isServerOfflineException(throwable)) {\n+            yesNoPopup(i18n.DisconnectedFromServer(), i18n.CouldNotConnectToServer());\n+        } else if (isInvalidBusContentException(throwable)) {\n+            yesNoPopup(i18n.SessionTimeout(), i18n.InvalidBusResponseProbablySessionTimeout());\n+        } else {\n+            showMessage(CommonConstants.INSTANCE.ExceptionGeneric0(extractMessageRecursively(throwable)),\n+                        this::unlock,\n+                        this::unlock);\n+        }\n+\n+    }\n+\n+    private void yesNoPopup(String title, String content) {\n+        final YesNoCancelPopup result = newYesNoCancelPopup(title, content, Window.Location::reload, this::unlock, this::unlock);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNzM1OA=="}, "originalCommit": {"oid": "8f9f694da43efa00c4f076bcef87d5d30c944908"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3MTg2Mw==", "bodyText": "I tried your suggestion, but I had to: keep the flag since isVisible was not working, then setting the Body widget didn't work, it messed the popup, so I will have to recreate it everytime :(", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r467971863", "createdAt": "2020-08-10T15:09:06Z", "author": {"login": "jesuino"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.error;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.enterprise.context.Dependent;\n+import javax.inject.Inject;\n+\n+import com.google.gwt.user.client.Window;\n+import org.dashbuilder.client.resources.i18n.AppConstants;\n+import org.jboss.errai.bus.client.api.InvalidBusContentException;\n+import org.uberfire.ext.widgets.common.client.common.BusyIndicatorView;\n+import org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup;\n+import org.uberfire.ext.widgets.common.client.resources.i18n.CommonConstants;\n+\n+import static org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup.newYesNoCancelPopup;\n+import static org.uberfire.ext.widgets.common.client.common.popups.errors.ErrorPopup.showMessage;\n+\n+@Dependent\n+public class DefaultRuntimeErrorCallback {\n+\n+    @Inject\n+    BusyIndicatorView loading;\n+\n+    AppConstants i18n = AppConstants.INSTANCE;\n+\n+    private boolean errorPopUpLock = false;\n+\n+    public void error(final Throwable throwable) {\n+        if (errorPopUpLock) {\n+            return;\n+        }\n+        loading.hideBusyIndicator();\n+        errorPopUpLock = true;\n+        if (isServerOfflineException(throwable)) {\n+            yesNoPopup(i18n.DisconnectedFromServer(), i18n.CouldNotConnectToServer());\n+        } else if (isInvalidBusContentException(throwable)) {\n+            yesNoPopup(i18n.SessionTimeout(), i18n.InvalidBusResponseProbablySessionTimeout());\n+        } else {\n+            showMessage(CommonConstants.INSTANCE.ExceptionGeneric0(extractMessageRecursively(throwable)),\n+                        this::unlock,\n+                        this::unlock);\n+        }\n+\n+    }\n+\n+    private void yesNoPopup(String title, String content) {\n+        final YesNoCancelPopup result = newYesNoCancelPopup(title, content, Window.Location::reload, this::unlock, this::unlock);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNzM1OA=="}, "originalCommit": {"oid": "8f9f694da43efa00c4f076bcef87d5d30c944908"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAwNjY2OA==", "bodyText": "Thanks for trying, @jesuino! We've learned something today :)", "url": "https://github.com/kiegroup/appformer/pull/1024#discussion_r468006668", "createdAt": "2020-08-10T15:51:26Z", "author": {"login": "caponetto"}, "path": "dashbuilder/dashbuilder-runtime/src/main/java/org/dashbuilder/client/error/DefaultRuntimeErrorCallback.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.dashbuilder.client.error;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.enterprise.context.Dependent;\n+import javax.inject.Inject;\n+\n+import com.google.gwt.user.client.Window;\n+import org.dashbuilder.client.resources.i18n.AppConstants;\n+import org.jboss.errai.bus.client.api.InvalidBusContentException;\n+import org.uberfire.ext.widgets.common.client.common.BusyIndicatorView;\n+import org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup;\n+import org.uberfire.ext.widgets.common.client.resources.i18n.CommonConstants;\n+\n+import static org.uberfire.ext.widgets.common.client.common.popups.YesNoCancelPopup.newYesNoCancelPopup;\n+import static org.uberfire.ext.widgets.common.client.common.popups.errors.ErrorPopup.showMessage;\n+\n+@Dependent\n+public class DefaultRuntimeErrorCallback {\n+\n+    @Inject\n+    BusyIndicatorView loading;\n+\n+    AppConstants i18n = AppConstants.INSTANCE;\n+\n+    private boolean errorPopUpLock = false;\n+\n+    public void error(final Throwable throwable) {\n+        if (errorPopUpLock) {\n+            return;\n+        }\n+        loading.hideBusyIndicator();\n+        errorPopUpLock = true;\n+        if (isServerOfflineException(throwable)) {\n+            yesNoPopup(i18n.DisconnectedFromServer(), i18n.CouldNotConnectToServer());\n+        } else if (isInvalidBusContentException(throwable)) {\n+            yesNoPopup(i18n.SessionTimeout(), i18n.InvalidBusResponseProbablySessionTimeout());\n+        } else {\n+            showMessage(CommonConstants.INSTANCE.ExceptionGeneric0(extractMessageRecursively(throwable)),\n+                        this::unlock,\n+                        this::unlock);\n+        }\n+\n+    }\n+\n+    private void yesNoPopup(String title, String content) {\n+        final YesNoCancelPopup result = newYesNoCancelPopup(title, content, Window.Location::reload, this::unlock, this::unlock);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNzM1OA=="}, "originalCommit": {"oid": "8f9f694da43efa00c4f076bcef87d5d30c944908"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2669, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}