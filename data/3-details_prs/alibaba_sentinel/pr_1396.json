{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMzQzNjAy", "number": 1396, "title": "support jax-rs", "bodyText": "Describe what this PR does / why we need it\nadd jax-rs adapter to support jax-rs\nDoes this pull request fix one issue?\nfix #1387\nDescribe how you did it\n\nadd sentinel-jax-rs-adapter module\nadd SentinelJaxRsClientFilter for jax-rs client\nadd SentinelJaxRsProviderFilter for jax-rs server\n\nDescribe how to verify it\nrun test of sentinel-jax-rs-adapter module\nSpecial notes for reviews", "createdAt": "2020-04-12T14:04:36Z", "url": "https://github.com/alibaba/Sentinel/pull/1396", "merged": true, "mergeCommit": {"oid": "cfea7ae338ac02e59f70ad85c00989d735ef0e41"}, "closed": true, "closedAt": "2020-04-23T12:06:37Z", "author": {"login": "seasidesky"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXFzOYgFqTM5MTkyOTkzNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcabrdQgFqTM5OTAyOTc0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxOTI5OTM3", "url": "https://github.com/alibaba/Sentinel/pull/1396#pullrequestreview-391929937", "createdAt": "2020-04-13T02:51:49Z", "commit": {"oid": "5feadd247227645f62f84c1d91800ab9b9dbe41a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca91234613e83c0617b249d1cc4cf2427a9307fa", "author": {"user": {"login": "seasidesky", "name": null}}, "url": "https://github.com/alibaba/Sentinel/commit/ca91234613e83c0617b249d1cc4cf2427a9307fa", "committedDate": "2020-04-13T14:29:07Z", "message": "support jax-rs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5258a46186ccd7f2c5eee906cd7c9fdcde8de16a", "author": {"user": {"login": "seasidesky", "name": null}}, "url": "https://github.com/alibaba/Sentinel/commit/5258a46186ccd7f2c5eee906cd7c9fdcde8de16a", "committedDate": "2020-04-13T14:15:29Z", "message": "update to 1.8.0-SNAPSHOT"}, "afterCommit": {"oid": "ca91234613e83c0617b249d1cc4cf2427a9307fa", "author": {"user": {"login": "seasidesky", "name": null}}, "url": "https://github.com/alibaba/Sentinel/commit/ca91234613e83c0617b249d1cc4cf2427a9307fa", "committedDate": "2020-04-13T14:29:07Z", "message": "support jax-rs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMDQzMjE2", "url": "https://github.com/alibaba/Sentinel/pull/1396#pullrequestreview-393043216", "createdAt": "2020-04-14T15:28:35Z", "commit": {"oid": "ca91234613e83c0617b249d1cc4cf2427a9307fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToyODozNVrOGFUT_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToyODozNVrOGFUT_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIyODg2MQ==", "bodyText": "Will the response filter method still be executed when unexpected error occurs? We need to guarantee the Entry exited finally.", "url": "https://github.com/alibaba/Sentinel/pull/1396#discussion_r408228861", "createdAt": "2020-04-14T15:28:35Z", "author": {"login": "sczyh30"}, "path": "sentinel-adapter/sentinel-jax-rs-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/jaxrs/SentinelJaxRsClientFilter.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright 1999-2020 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.alibaba.csp.sentinel.adapter.jaxrs;\n+\n+import com.alibaba.csp.sentinel.Entry;\n+import com.alibaba.csp.sentinel.EntryType;\n+import com.alibaba.csp.sentinel.ResourceTypeConstants;\n+import com.alibaba.csp.sentinel.SphU;\n+import com.alibaba.csp.sentinel.adapter.jaxrs.config.SentinelJaxRsConfig;\n+import com.alibaba.csp.sentinel.context.ContextUtil;\n+import com.alibaba.csp.sentinel.slots.block.BlockException;\n+import com.alibaba.csp.sentinel.util.StringUtil;\n+\n+import javax.ws.rs.client.ClientRequestContext;\n+import javax.ws.rs.client.ClientRequestFilter;\n+import javax.ws.rs.client.ClientResponseContext;\n+import javax.ws.rs.client.ClientResponseFilter;\n+import javax.ws.rs.container.ResourceInfo;\n+import javax.ws.rs.core.Context;\n+import java.io.IOException;\n+\n+/**\n+ * @author sea\n+ */\n+public class SentinelJaxRsClientFilter implements ClientRequestFilter, ClientResponseFilter {\n+\n+    private static final String SENTINEL_JAX_RS_CLIENT_ENTRY_PROPERTY = \"sentinel_jax_rs_client_entry_property\";\n+\n+    @Context\n+    private ResourceInfo resourceInfo;\n+\n+\n+    @Override\n+    public void filter(ClientRequestContext requestContext) throws IOException {\n+        try {\n+            String resourceName = getResourceName(requestContext);\n+\n+            if (StringUtil.isNotEmpty(resourceName)) {\n+                Entry entry = SphU.entry(resourceName, ResourceTypeConstants.COMMON_WEB, EntryType.OUT);\n+\n+                requestContext.setProperty(SENTINEL_JAX_RS_CLIENT_ENTRY_PROPERTY, entry);\n+            }\n+        } catch (BlockException e) {\n+            try {\n+                requestContext.abortWith(SentinelJaxRsConfig.getJaxRsFallback().fallbackResponse(requestContext.getUri().toString(), e));\n+            } finally {\n+                ContextUtil.exit();\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void filter(ClientRequestContext requestContext, ClientResponseContext responseContext) throws IOException {\n+        Entry entry = (Entry) requestContext.getProperty(SENTINEL_JAX_RS_CLIENT_ENTRY_PROPERTY);\n+        if (entry != null) {\n+            entry.exit();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca91234613e83c0617b249d1cc4cf2427a9307fa"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df47ad67f3da92b5126e4d6ee32e8c8bdb61849f", "author": {"user": {"login": "seasidesky", "name": null}}, "url": "https://github.com/alibaba/Sentinel/commit/df47ad67f3da92b5126e4d6ee32e8c8bdb61849f", "committedDate": "2020-04-15T16:50:48Z", "message": "add default exception mapper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MjQ4MDEx", "url": "https://github.com/alibaba/Sentinel/pull/1396#pullrequestreview-394248011", "createdAt": "2020-04-16T01:55:07Z", "commit": {"oid": "df47ad67f3da92b5126e4d6ee32e8c8bdb61849f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMTo1NTowN1rOGGRtWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMTo1NTowN1rOGGRtWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIzNDc3Nw==", "bodyText": "For client side we don't need to exit the context here.", "url": "https://github.com/alibaba/Sentinel/pull/1396#discussion_r409234777", "createdAt": "2020-04-16T01:55:07Z", "author": {"login": "sczyh30"}, "path": "sentinel-adapter/sentinel-jax-rs-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/jaxrs/SentinelJaxRsClientFilter.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright 1999-2020 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.alibaba.csp.sentinel.adapter.jaxrs;\n+\n+import com.alibaba.csp.sentinel.Entry;\n+import com.alibaba.csp.sentinel.EntryType;\n+import com.alibaba.csp.sentinel.ResourceTypeConstants;\n+import com.alibaba.csp.sentinel.SphU;\n+import com.alibaba.csp.sentinel.adapter.jaxrs.config.SentinelJaxRsConfig;\n+import com.alibaba.csp.sentinel.context.ContextUtil;\n+import com.alibaba.csp.sentinel.slots.block.BlockException;\n+import com.alibaba.csp.sentinel.util.StringUtil;\n+\n+import javax.ws.rs.client.ClientRequestContext;\n+import javax.ws.rs.client.ClientRequestFilter;\n+import javax.ws.rs.client.ClientResponseContext;\n+import javax.ws.rs.client.ClientResponseFilter;\n+import javax.ws.rs.container.ResourceInfo;\n+import javax.ws.rs.core.Context;\n+import java.io.IOException;\n+\n+/**\n+ * @author sea\n+ */\n+public class SentinelJaxRsClientFilter implements ClientRequestFilter, ClientResponseFilter {\n+\n+    private static final String SENTINEL_JAX_RS_CLIENT_ENTRY_PROPERTY = \"sentinel_jax_rs_client_entry_property\";\n+\n+    @Context\n+    private ResourceInfo resourceInfo;\n+\n+\n+    @Override\n+    public void filter(ClientRequestContext requestContext) throws IOException {\n+        try {\n+            String resourceName = getResourceName(requestContext);\n+\n+            if (StringUtil.isNotEmpty(resourceName)) {\n+                Entry entry = SphU.entry(resourceName, ResourceTypeConstants.COMMON_WEB, EntryType.OUT);\n+\n+                requestContext.setProperty(SENTINEL_JAX_RS_CLIENT_ENTRY_PROPERTY, entry);\n+            }\n+        } catch (BlockException e) {\n+            try {\n+                requestContext.abortWith(SentinelJaxRsConfig.getJaxRsFallback().fallbackResponse(requestContext.getUri().toString(), e));\n+            } finally {\n+                ContextUtil.exit();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47ad67f3da92b5126e4d6ee32e8c8bdb61849f"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb86c3968ef2415ae6c72f5cbe6e584142767d73", "author": {"user": {"login": "seasidesky", "name": null}}, "url": "https://github.com/alibaba/Sentinel/commit/eb86c3968ef2415ae6c72f5cbe6e584142767d73", "committedDate": "2020-04-18T04:27:42Z", "message": "handle jax rs client exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c00ce6ceead385013598a298227e9688e0b038e7", "author": {"user": {"login": "seasidesky", "name": null}}, "url": "https://github.com/alibaba/Sentinel/commit/c00ce6ceead385013598a298227e9688e0b038e7", "committedDate": "2020-04-18T04:54:45Z", "message": "fix document-lint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5MDI5NzQ3", "url": "https://github.com/alibaba/Sentinel/pull/1396#pullrequestreview-399029747", "createdAt": "2020-04-23T12:03:01Z", "commit": {"oid": "c00ce6ceead385013598a298227e9688e0b038e7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3909, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}