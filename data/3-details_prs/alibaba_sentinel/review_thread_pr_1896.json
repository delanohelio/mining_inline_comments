{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MTAxNjI4", "number": 1896, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNTo1NDoyOVrOFE0IVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjo0Mjo0NlrOFFbEqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTkyNzI3OnYy", "diffSide": "RIGHT", "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/config/TransportConfig.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNTo1NDoyOVrOIFA9OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzoyMDo0NlrOIFC4FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEyOTQ2NQ==", "bodyText": "Please fix up the indents.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542129465", "createdAt": "2020-12-14T05:54:29Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/config/TransportConfig.java", "diffHunk": "@@ -92,11 +95,17 @@ public static Long getHeartbeatIntervalMs() {\n                 continue;\n             }\n             ipPortStr = ipPortStr.trim();\n-            if (ipPortStr.startsWith(\"http://\")) {\n-                ipPortStr = ipPortStr.substring(7);\n-            }\n-            int index = ipPortStr.indexOf(\":\");\n-            int port = 80;\n+\t\t\tint port = 80;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE0MTMxNg==", "bodyText": "It's strange, it looks good in my IDE. Let me check.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542141316", "createdAt": "2020-12-14T06:29:48Z", "author": {"login": "polarbear567"}, "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/config/TransportConfig.java", "diffHunk": "@@ -92,11 +95,17 @@ public static Long getHeartbeatIntervalMs() {\n                 continue;\n             }\n             ipPortStr = ipPortStr.trim();\n-            if (ipPortStr.startsWith(\"http://\")) {\n-                ipPortStr = ipPortStr.substring(7);\n-            }\n-            int index = ipPortStr.indexOf(\":\");\n-            int port = 80;\n+\t\t\tint port = 80;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEyOTQ2NQ=="}, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE0NDIzMA==", "bodyText": "It's strange, it looks good in my IDE. Let me check.\n\nYes, it depends on your editor's preference settings.\nMaybe you have the setting using TAB instead of SPACE and setting the width of the TAB to 4 spaces' width.\nSentinel and some other projects use the style of plain spaces with an indent of 4 spaces.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542144230", "createdAt": "2020-12-14T06:37:43Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/config/TransportConfig.java", "diffHunk": "@@ -92,11 +95,17 @@ public static Long getHeartbeatIntervalMs() {\n                 continue;\n             }\n             ipPortStr = ipPortStr.trim();\n-            if (ipPortStr.startsWith(\"http://\")) {\n-                ipPortStr = ipPortStr.substring(7);\n-            }\n-            int index = ipPortStr.indexOf(\":\");\n-            int port = 80;\n+\t\t\tint port = 80;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEyOTQ2NQ=="}, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2MDkxNg==", "bodyText": "It's strange, it looks good in my IDE. Let me check.\n\nYes, it depends on your editor's preference settings.\nMaybe you have the setting using TAB instead of SPACE and setting the width of the TAB to 4 spaces' width.\nSentinel and some other projects use the style of plain spaces with an indent of 4 spaces.\n\nGreat!", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542160916", "createdAt": "2020-12-14T07:20:46Z", "author": {"login": "polarbear567"}, "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/config/TransportConfig.java", "diffHunk": "@@ -92,11 +95,17 @@ public static Long getHeartbeatIntervalMs() {\n                 continue;\n             }\n             ipPortStr = ipPortStr.trim();\n-            if (ipPortStr.startsWith(\"http://\")) {\n-                ipPortStr = ipPortStr.substring(7);\n-            }\n-            int index = ipPortStr.indexOf(\":\");\n-            int port = 80;\n+\t\t\tint port = 80;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEyOTQ2NQ=="}, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTkzODQxOnYy", "diffSide": "RIGHT", "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/config/TransportConfig.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNTo1OToyMVrOIFBDYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODo0ODowOVrOIFFr2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMTA0MA==", "bodyText": "I suggest using an enum type to make it easy to compare.\nAnd the protocol should not be a global state but be a kind of state in the addr-port pairs.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542131040", "createdAt": "2020-12-14T05:59:21Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/config/TransportConfig.java", "diffHunk": "@@ -40,6 +41,8 @@\n \n     private static int runtimePort = -1;\n \n+\tprivate static String protocol = \"http\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2MDg5MA==", "bodyText": "I suggest using an enum type to make it easy to compare.\nAnd the protocol should not be a global state but be a kind of state in the addr-port pairs.\n\nIn fact, I've thought about creating a new class similar to Tuple2, but it can have three elements. Do you mean it's still stored in Tuple2 in the form of Tuple2.of(protocol + host, port)?", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542160890", "createdAt": "2020-12-14T07:20:43Z", "author": {"login": "polarbear567"}, "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/config/TransportConfig.java", "diffHunk": "@@ -40,6 +41,8 @@\n \n     private static int runtimePort = -1;\n \n+\tprivate static String protocol = \"http\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMTA0MA=="}, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3NTk0Mg==", "bodyText": "I suggest using an enum type to make it easy to compare.\nAnd the protocol should not be a global state but be a kind of state in the addr-port pairs.\n\nIn fact, I've thought about creating a new class similar to Tuple2, but it can have three elements. Do you mean it's still stored in Tuple2 in the form of Tuple2.of(protocol + host, port)?\n\nElements grow a new type like Endpoint can be introduced so that the Tuple can be replaced. A Tuple3 type maybe looks more complicated now.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542175942", "createdAt": "2020-12-14T07:53:32Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/config/TransportConfig.java", "diffHunk": "@@ -40,6 +41,8 @@\n \n     private static int runtimePort = -1;\n \n+\tprivate static String protocol = \"http\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMTA0MA=="}, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE5NTcxNA==", "bodyText": "I suggest using an enum type to make it easy to compare.\nAnd the protocol should not be a global state but be a kind of state in the addr-port pairs.\n\nIn fact, I've thought about creating a new class similar to Tuple2, but it can have three elements. Do you mean it's still stored in Tuple2 in the form of Tuple2.of(protocol + host, port)?\n\nElements grow a new type like Endpoint can be introduced so that the Tuple can be replaced. A Tuple3 type maybe looks more complicated now.\n\nAs far as I know, Java can't implement tuples of different lengths in a class unless it's identified by length in a class. I don't know if it's right. If you agree, I'll implement a simple tuple3 as a temporary solution.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542195714", "createdAt": "2020-12-14T08:30:02Z", "author": {"login": "polarbear567"}, "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/config/TransportConfig.java", "diffHunk": "@@ -40,6 +41,8 @@\n \n     private static int runtimePort = -1;\n \n+\tprivate static String protocol = \"http\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMTA0MA=="}, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwMTQxNw==", "bodyText": "I suggest using an enum type to make it easy to compare.\nAnd the protocol should not be a global state but be a kind of state in the addr-port pairs.\n\nIn fact, I've thought about creating a new class similar to Tuple2, but it can have three elements. Do you mean it's still stored in Tuple2 in the form of Tuple2.of(protocol + host, port)?\n\nElements grow a new type like Endpoint can be introduced so that the Tuple can be replaced. A Tuple3 type maybe looks more complicated now.\n\nAs far as I know, Java can't implement tuples of different lengths in a class unless it's identified by length in a class. I don't know if it's right. If you agree, I'll implement a simple tuple3 as a temporary solution.\n\nTo be clear, I would show it by examples to make sure we are on the same road:\nThe old approach\nTuple2<addr, port>   -> fixed to HTTP protocol\n1st approach to improve it\nTuple3<protocol, addr, port> -> A new type Tuple3 is introduced.\n2nd approach\nEndpoint -> A new type Endpoint is introduced as the details below:\npublic class Endpoint {\n    private PROTOCOL protocol;\n    private String address;\n    private int port;\n    // getters and setters\n}", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542201417", "createdAt": "2020-12-14T08:39:31Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/config/TransportConfig.java", "diffHunk": "@@ -40,6 +41,8 @@\n \n     private static int runtimePort = -1;\n \n+\tprivate static String protocol = \"http\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMTA0MA=="}, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwNDcwMA==", "bodyText": "I suggest using an enum type to make it easy to compare.\nAnd the protocol should not be a global state but be a kind of state in the addr-port pairs.\n\nIn fact, I've thought about creating a new class similar to Tuple2, but it can have three elements. Do you mean it's still stored in Tuple2 in the form of Tuple2.of(protocol + host, port)?\n\nElements grow a new type like Endpoint can be introduced so that the Tuple can be replaced. A Tuple3 type maybe looks more complicated now.\n\nAs far as I know, Java can't implement tuples of different lengths in a class unless it's identified by length in a class. I don't know if it's right. If you agree, I'll implement a simple tuple3 as a temporary solution.\n\nTo be clear, I would show it by examples to make sure we are on the same road:\nThe old approach:\nTuple2<addr, port> -> fixed to HTTP protocol\n1st approach to improve it:\nTuple3<protocol, addr, port> -> A new type Tuple3 is introduced.\n2nd approach:\nEndpoint -> A new type Endpoint is introduced as the details below:\npublic class Endpoint {\n    private PROTOCOL protocol;\n    private String address;\n    private int port;\n    // getters and setters\n}\n\nI prefer the second approach.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542204700", "createdAt": "2020-12-14T08:44:43Z", "author": {"login": "polarbear567"}, "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/config/TransportConfig.java", "diffHunk": "@@ -40,6 +41,8 @@\n \n     private static int runtimePort = -1;\n \n+\tprivate static String protocol = \"http\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMTA0MA=="}, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwNjkzNw==", "bodyText": "I prefer the second approach.\n\nYes, I think we have reached the same point now. And another suggestion on the design of arguments of different implementations is based on the decision here.\nAnd I totally agree with you here.\ud83d\ude00", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542206937", "createdAt": "2020-12-14T08:48:09Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/config/TransportConfig.java", "diffHunk": "@@ -40,6 +41,8 @@\n \n     private static int runtimePort = -1;\n \n+\tprivate static String protocol = \"http\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMTA0MA=="}, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTk0MTA4OnYy", "diffSide": "RIGHT", "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/config/TransportConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjowMDoxOVrOIFBEyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjowMDoxOVrOIFBEyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMTQwMw==", "bodyText": "Here an \"ELSE\" should be introduced as a different condition branch.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542131403", "createdAt": "2020-12-14T06:00:19Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/config/TransportConfig.java", "diffHunk": "@@ -92,11 +95,17 @@ public static Long getHeartbeatIntervalMs() {\n                 continue;\n             }\n             ipPortStr = ipPortStr.trim();\n-            if (ipPortStr.startsWith(\"http://\")) {\n-                ipPortStr = ipPortStr.substring(7);\n-            }\n-            int index = ipPortStr.indexOf(\":\");\n-            int port = 80;\n+\t\t\tint port = 80;\n+\t\t\tif (ipPortStr.startsWith(\"http://\")) {\n+\t\t\t\tipPortStr = ipPortStr.substring(7);\n+\t\t\t\tport = 80;\n+\t\t\t}\n+\t\t\tif (ipPortStr.startsWith(\"https://\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTk0NTU2OnYy", "diffSide": "LEFT", "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/SimpleHttpHeartbeatSender.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjowMjowN1rOIFBHMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODo1OToxNFrOIFGIBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMjAxNw==", "bodyText": "If a new type was introduced it's highly recommended to pass it into query implementations directly.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542132017", "createdAt": "2020-12-14T06:02:07Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/SimpleHttpHeartbeatSender.java", "diffHunk": "@@ -69,7 +70,7 @@ public boolean sendHeartbeat() throws Exception {\n         }\n \n         InetSocketAddress addr = new InetSocketAddress(addrInfo.r1, addrInfo.r2);\n-        SimpleHttpRequest request = new SimpleHttpRequest(addr, TransportConfig.getHeartbeatApiPath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2NDM2OQ==", "bodyText": "If a new type was introduced it's highly recommended to pass it into query implementations directly.\n\nI'm sorry, I didn't get your point here. Could you give me a hint?", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542164369", "createdAt": "2020-12-14T07:28:46Z", "author": {"login": "polarbear567"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/SimpleHttpHeartbeatSender.java", "diffHunk": "@@ -69,7 +70,7 @@ public boolean sendHeartbeat() throws Exception {\n         }\n \n         InetSocketAddress addr = new InetSocketAddress(addrInfo.r1, addrInfo.r2);\n-        SimpleHttpRequest request = new SimpleHttpRequest(addr, TransportConfig.getHeartbeatApiPath());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMjAxNw=="}, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3NjgxNg==", "bodyText": "If a new type was introduced it's highly recommended to pass it into query implementations directly.\n\nI'm sorry, I didn't get your point here. Could you give me a hint?\n\nIt's related to the previous design (Tuple3/class Endpoint{}). If a new class was introduced there's no need to split it into three separated arguments I think.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542176816", "createdAt": "2020-12-14T07:55:17Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/SimpleHttpHeartbeatSender.java", "diffHunk": "@@ -69,7 +70,7 @@ public boolean sendHeartbeat() throws Exception {\n         }\n \n         InetSocketAddress addr = new InetSocketAddress(addrInfo.r1, addrInfo.r2);\n-        SimpleHttpRequest request = new SimpleHttpRequest(addr, TransportConfig.getHeartbeatApiPath());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMjAxNw=="}, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwNjAwMg==", "bodyText": "If a new type was introduced it's highly recommended to pass it into query implementations directly.\n\nI'm sorry, I didn't get your point here. Could you give me a hint?\n\nIt's related to the previous design (Tuple3/class Endpoint{}). If a new class was introduced there's no need to split it into three separated arguments I think.\n\nAfter using Endpoint, I will modify it here and directly pass in Endpoint in the constructor of SimpleHttpRequest to replace protocol and socketAddress", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542206002", "createdAt": "2020-12-14T08:46:44Z", "author": {"login": "polarbear567"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/SimpleHttpHeartbeatSender.java", "diffHunk": "@@ -69,7 +70,7 @@ public boolean sendHeartbeat() throws Exception {\n         }\n \n         InetSocketAddress addr = new InetSocketAddress(addrInfo.r1, addrInfo.r2);\n-        SimpleHttpRequest request = new SimpleHttpRequest(addr, TransportConfig.getHeartbeatApiPath());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMjAxNw=="}, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIxNDE1MA==", "bodyText": "After using Endpoint, I will modify it here and directly pass in Endpoint in the constructor of SimpleHttpRequest to replace protocol and socketAddress\n\nYes, that's it.\nMeanwhile, it won't be a backward compatible change and we don't have the perfect one exactly.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542214150", "createdAt": "2020-12-14T08:59:14Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/SimpleHttpHeartbeatSender.java", "diffHunk": "@@ -69,7 +70,7 @@ public boolean sendHeartbeat() throws Exception {\n         }\n \n         InetSocketAddress addr = new InetSocketAddress(addrInfo.r1, addrInfo.r2);\n-        SimpleHttpRequest request = new SimpleHttpRequest(addr, TransportConfig.getHeartbeatApiPath());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMjAxNw=="}, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTk1ODIwOnYy", "diffSide": "RIGHT", "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/client/SimpleHttpClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjowNzoxMlrOIFBNxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzoyNzo0N1rOIFDD8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMzcwMg==", "bodyText": "Maybe it doesn't make any sense here?", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542133702", "createdAt": "2020-12-14T06:07:12Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/client/SimpleHttpClient.java", "diffHunk": "@@ -77,57 +90,73 @@ public SimpleHttpResponse post(SimpleHttpRequest request) throws IOException {\n         if (request == null) {\n             return null;\n         }\n-        return request(request.getSocketAddress(),\n+        return request(request.getProtocol(), request.getSocketAddress(),\n             RequestMethod.POST, request.getRequestPath(),\n             request.getParams(), request.getCharset(),\n             request.getSoTimeout());\n     }\n \n+\tprivate SimpleHttpResponse request(String protocol, InetSocketAddress socketAddress,\n+\t\t\t\t\t\t\t\t\t   RequestMethod type, String requestPath,\n+\t\t\t\t\t\t\t\t\t   Map<String, String> paramsMap, Charset charset, int soTimeout)\n+\t\t\tthrows IOException {\n+\t\tSocket socket = null;\n+\t\tBufferedWriter writer;\n+\t\ttry {\n+\t\t\tif (StringUtil.equals(protocol, \"http\")) {\n+\t\t\t\tsocket = new Socket();\n+\t\t\t} else if (StringUtil.equals(protocol, \"https\")){\n+\t\t\t\tsslSocketFactory = getSSLSocketFactory();\n+\t\t\t\tif (sslSocketFactory != null) {\n+\t\t\t\t\tsocket = sslSocketFactory.createSocket();\n+\t\t\t\t} else {\n+\t\t\t\t\tsocket = new Socket();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2Mzk1Mg==", "bodyText": "Maybe it doesn't make any sense here?\n\nYes, actually, it doesn't work here. It's just used to prevent NPE, but it won't happen in theory. I'll delete it.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542163952", "createdAt": "2020-12-14T07:27:47Z", "author": {"login": "polarbear567"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/client/SimpleHttpClient.java", "diffHunk": "@@ -77,57 +90,73 @@ public SimpleHttpResponse post(SimpleHttpRequest request) throws IOException {\n         if (request == null) {\n             return null;\n         }\n-        return request(request.getSocketAddress(),\n+        return request(request.getProtocol(), request.getSocketAddress(),\n             RequestMethod.POST, request.getRequestPath(),\n             request.getParams(), request.getCharset(),\n             request.getSoTimeout());\n     }\n \n+\tprivate SimpleHttpResponse request(String protocol, InetSocketAddress socketAddress,\n+\t\t\t\t\t\t\t\t\t   RequestMethod type, String requestPath,\n+\t\t\t\t\t\t\t\t\t   Map<String, String> paramsMap, Charset charset, int soTimeout)\n+\t\t\tthrows IOException {\n+\t\tSocket socket = null;\n+\t\tBufferedWriter writer;\n+\t\ttry {\n+\t\t\tif (StringUtil.equals(protocol, \"http\")) {\n+\t\t\t\tsocket = new Socket();\n+\t\t\t} else if (StringUtil.equals(protocol, \"https\")){\n+\t\t\t\tsslSocketFactory = getSSLSocketFactory();\n+\t\t\t\tif (sslSocketFactory != null) {\n+\t\t\t\t\tsocket = sslSocketFactory.createSocket();\n+\t\t\t\t} else {\n+\t\t\t\t\tsocket = new Socket();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzMzcwMg=="}, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTk2NDU1OnYy", "diffSide": "RIGHT", "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/client/SimpleHttpClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjoxMDowMlrOIFBRPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjoxMDowMlrOIFBRPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzNDU4OA==", "bodyText": "The All-In-One approach makes the class a little ambiguous.\nSuggest abstracting the socket creation into different implementations outside.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542134588", "createdAt": "2020-12-14T06:10:02Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/client/SimpleHttpClient.java", "diffHunk": "@@ -184,6 +213,50 @@ private String encodeRequestParams(Map<String, String> paramsMap, Charset charse\n         }\n     }\n \n+\tprivate X509TrustManager getX509TrustManager() {\n+\t\tif (x509TrustManager == null) {\n+\t\t\tx509TrustManager = new X509TrustManager() {\n+\t\t\t\tpublic boolean isServerTrusted(X509Certificate[] certs) {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\n+\t\t\t\tpublic boolean isClientTrusted(X509Certificate[] certs) {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\n+\t\t\t\t@Override\n+\t\t\t\tpublic void checkServerTrusted(X509Certificate[] certs, String authType)\n+\t\t\t\t\t\tthrows CertificateException {\n+\t\t\t\t}\n+\n+\t\t\t\t@Override\n+\t\t\t\tpublic void checkClientTrusted(X509Certificate[] certs, String authType)\n+\t\t\t\t\t\tthrows CertificateException {\n+\t\t\t\t}\n+\n+\t\t\t\t@Override\n+\t\t\t\tpublic X509Certificate[] getAcceptedIssuers() {\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n+\t\t\t};\n+\t\t}\n+\t\treturn x509TrustManager;\n+\t}\n+\n+\tprivate SSLSocketFactory getSSLSocketFactory() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce2b0bbafeb6360970887d29b4e162f21af1f5f0"}, "originalPosition": 184}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODI4MDA1OnYy", "diffSide": "RIGHT", "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/util/function/Endpoint.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNToyNjowMVrOIFV2fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwMjoyMDozMlrOIF1wgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ3MTgwNA==", "bodyText": "\ud83d\ude05Is it better to put them in transport-common instead of the core package?\nOr are there other pieces of code outside the transport module depending on them?", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542471804", "createdAt": "2020-12-14T15:26:01Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/util/function/Endpoint.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.alibaba.csp.sentinel.util.function;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f64d511e8f204a11c3388d6cce8fa873a8d22d40"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ3NDY0MA==", "bodyText": "And please function makes little sense here. I believe you really can figure out a good naming\ud83d\udcaa", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542474640", "createdAt": "2020-12-14T15:29:23Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/util/function/Endpoint.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.alibaba.csp.sentinel.util.function;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ3MTgwNA=="}, "originalCommit": {"oid": "f64d511e8f204a11c3388d6cce8fa873a8d22d40"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk5NDU2Mw==", "bodyText": "It's my mistake, I'll move them to com.alibaba.csp.sentinel.transport.endpoint.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542994563", "createdAt": "2020-12-15T02:20:32Z", "author": {"login": "polarbear567"}, "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/util/function/Endpoint.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.alibaba.csp.sentinel.util.function;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ3MTgwNA=="}, "originalCommit": {"oid": "f64d511e8f204a11c3388d6cce8fa873a8d22d40"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODMxMDcxOnYy", "diffSide": "RIGHT", "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/util/function/Endpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNTozMTozMFrOIFWIMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNTozMTozMFrOIFWIMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ3NjMzNg==", "bodyText": "It's strange to put such a piece of code here but I won't consist on it. It looks like no harm.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542476336", "createdAt": "2020-12-14T15:31:30Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/util/function/Endpoint.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.alibaba.csp.sentinel.util.function;\n+\n+import java.net.InetSocketAddress;\n+\n+/**\n+ * @author Leo Li\n+ */\n+public class Endpoint {\n+    private Protocol protocol;\n+\n+    private String host;\n+\n+    private int port;\n+\n+    public Endpoint(Protocol protocol, String host, int port) {\n+        this.protocol = protocol;\n+        this.host = host;\n+        this.port = port;\n+    }\n+\n+    public Protocol getProtocol() {\n+        return protocol;\n+    }\n+\n+    public void setProtocol(Protocol protocol) {\n+        this.protocol = protocol;\n+    }\n+\n+    public String getHost() {\n+        return host;\n+    }\n+\n+    public void setHost(String host) {\n+        this.host = host;\n+    }\n+\n+    public int getPort() {\n+        return port;\n+    }\n+\n+    public void setPort(int port) {\n+        this.port = port;\n+    }\n+\n+    public InetSocketAddress getInetSocketAddress() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f64d511e8f204a11c3388d6cce8fa873a8d22d40"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODM3MTE0OnYy", "diffSide": "RIGHT", "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/client/SocketFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNTo0MjoyMFrOIFWrag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNTo0MjoyMFrOIFWrag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ4NTM1NA==", "bodyText": "There is a small tweak here.\nIt would be better to make sslSocketFactory initialized only if necessary.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542485354", "createdAt": "2020-12-14T15:42:20Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/client/SocketFactory.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.alibaba.csp.sentinel.transport.heartbeat.client;\n+\n+import java.io.IOException;\n+import java.net.Socket;\n+import java.security.cert.CertificateException;\n+import java.security.cert.X509Certificate;\n+\n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.SSLSocketFactory;\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.X509TrustManager;\n+\n+import com.alibaba.csp.sentinel.log.RecordLog;\n+import com.alibaba.csp.sentinel.util.function.Protocol;\n+\n+/**\n+ * @author Leo Li\n+ */\n+public class SocketFactory {\n+    private static X509TrustManager x509TrustManager;\n+    private static SSLContext sslContext;\n+    private static SSLSocketFactory sslSocketFactory;\n+\n+    static {\n+        try {\n+            x509TrustManager = new X509TrustManager() {\n+                public boolean isServerTrusted(X509Certificate[] certs) {\n+                    return true;\n+                }\n+\n+                public boolean isClientTrusted(X509Certificate[] certs) {\n+                    return true;\n+                }\n+\n+                @Override\n+                public void checkServerTrusted(X509Certificate[] certs, String authType)\n+                        throws CertificateException {\n+                }\n+\n+                @Override\n+                public void checkClientTrusted(X509Certificate[] certs, String authType)\n+                        throws CertificateException {\n+                }\n+\n+                @Override\n+                public X509Certificate[] getAcceptedIssuers() {\n+                    return null;\n+                }\n+            };\n+\n+            sslContext = SSLContext.getInstance(\"TLS\");\n+            sslContext.init(null, new TrustManager[] { x509TrustManager }, null);\n+            sslSocketFactory = sslContext.getSocketFactory();\n+        } catch (Exception e) {\n+            RecordLog.error(\"get ssl socket factory error\", e);\n+        }\n+    }\n+\n+    public static Socket getSocket(Protocol protocol) throws IOException {\n+        return protocol == Protocol.HTTP ? new Socket() : sslSocketFactory.createSocket();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f64d511e8f204a11c3388d6cce8fa873a8d22d40"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODM5MDQ1OnYy", "diffSide": "RIGHT", "path": "sentinel-transport/sentinel-transport-netty-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/HttpHeartbeatSender.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNTo0NTo1NVrOIFW2yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNTo0NTo1NVrOIFW2yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ4ODI2NA==", "bodyText": "Maybe HTTPS support is not implemented in netty-http module.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r542488264", "createdAt": "2020-12-14T15:45:55Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-netty-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/HttpHeartbeatSender.java", "diffHunk": "@@ -59,14 +59,14 @@\n \n     public HttpHeartbeatSender() {\n         this.client = HttpClients.createDefault();\n-        List<Tuple2<String, Integer>> dashboardList = TransportConfig.getConsoleServerList();\n+        List<Endpoint> dashboardList = TransportConfig.getConsoleServerList();\n         if (dashboardList == null || dashboardList.isEmpty()) {\n             RecordLog.info(\"[NettyHttpHeartbeatSender] No dashboard server available\");\n             consoleHost = null;\n             consolePort = -1;\n         } else {\n-            consoleHost = dashboardList.get(0).r1;\n-            consolePort = dashboardList.get(0).r2;\n+            consoleHost = dashboardList.get(0).getHost();\n+            consolePort = dashboardList.get(0).getPort();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f64d511e8f204a11c3388d6cce8fa873a8d22d40"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjIyNDc4OnYy", "diffSide": "RIGHT", "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/client/SocketFactory.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoxNDowM1rOIF6nhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzozNzo0NFrOIF87Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3NDE4MA==", "bodyText": "What's the difference between the wrapped form and Class.varible form?", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r543074180", "createdAt": "2020-12-15T06:14:03Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/client/SocketFactory.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package com.alibaba.csp.sentinel.transport.heartbeat.client;\n+\n+import java.io.IOException;\n+import java.net.Socket;\n+\n+import javax.net.ssl.SSLSocketFactory;\n+\n+import com.alibaba.csp.sentinel.transport.endpoint.Protocol;\n+import com.alibaba.csp.sentinel.transport.ssl.SslFactory;\n+\n+/**\n+ * @author Leo Li\n+ */\n+public class SocketFactory {\n+\n+    private static class SSLSocketFactoryInstance {\n+        private static final SSLSocketFactory SSL_SOCKET_FACTORY = SslFactory.getSslConnectionSocketFactory().getSocketFactory();\n+    }\n+\n+    public static Socket getSocket(Protocol protocol) throws IOException {\n+        return protocol == Protocol.HTTP ? new Socket() : getSslSocketFactory().createSocket();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fb45d4802d5e7bbe27e2164ded88f4bccb544ac"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3NTMyOQ==", "bodyText": "I just wrote a small piece testing code and didn't find any different.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r543075329", "createdAt": "2020-12-15T06:16:59Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/client/SocketFactory.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package com.alibaba.csp.sentinel.transport.heartbeat.client;\n+\n+import java.io.IOException;\n+import java.net.Socket;\n+\n+import javax.net.ssl.SSLSocketFactory;\n+\n+import com.alibaba.csp.sentinel.transport.endpoint.Protocol;\n+import com.alibaba.csp.sentinel.transport.ssl.SslFactory;\n+\n+/**\n+ * @author Leo Li\n+ */\n+public class SocketFactory {\n+\n+    private static class SSLSocketFactoryInstance {\n+        private static final SSLSocketFactory SSL_SOCKET_FACTORY = SslFactory.getSslConnectionSocketFactory().getSocketFactory();\n+    }\n+\n+    public static Socket getSocket(Protocol protocol) throws IOException {\n+        return protocol == Protocol.HTTP ? new Socket() : getSslSocketFactory().createSocket();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3NDE4MA=="}, "originalCommit": {"oid": "3fb45d4802d5e7bbe27e2164ded88f4bccb544ac"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5OTU0Nw==", "bodyText": "What's the difference between the wrapped form and Class.varible form?\n\nThis delays init, and threads are safe. Originally written directly in the static block of the class, now it is changed to the inner class.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r543099547", "createdAt": "2020-12-15T07:13:09Z", "author": {"login": "polarbear567"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/client/SocketFactory.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package com.alibaba.csp.sentinel.transport.heartbeat.client;\n+\n+import java.io.IOException;\n+import java.net.Socket;\n+\n+import javax.net.ssl.SSLSocketFactory;\n+\n+import com.alibaba.csp.sentinel.transport.endpoint.Protocol;\n+import com.alibaba.csp.sentinel.transport.ssl.SslFactory;\n+\n+/**\n+ * @author Leo Li\n+ */\n+public class SocketFactory {\n+\n+    private static class SSLSocketFactoryInstance {\n+        private static final SSLSocketFactory SSL_SOCKET_FACTORY = SslFactory.getSslConnectionSocketFactory().getSocketFactory();\n+    }\n+\n+    public static Socket getSocket(Protocol protocol) throws IOException {\n+        return protocol == Protocol.HTTP ? new Socket() : getSslSocketFactory().createSocket();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3NDE4MA=="}, "originalCommit": {"oid": "3fb45d4802d5e7bbe27e2164ded88f4bccb544ac"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwMzgzNg==", "bodyText": "This delays init, and threads are safe. Originally written directly in the static block of the class, now it is changed to the inner class.\n\nYeah, I know. I'm just curious whether it's different to use SSLSocketFactoryInstance.SSL_SOCKET_FACTORY simply instead of getSslSocketFactory()?\nMy testing code is for these two approaches.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r543103836", "createdAt": "2020-12-15T07:21:46Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/client/SocketFactory.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package com.alibaba.csp.sentinel.transport.heartbeat.client;\n+\n+import java.io.IOException;\n+import java.net.Socket;\n+\n+import javax.net.ssl.SSLSocketFactory;\n+\n+import com.alibaba.csp.sentinel.transport.endpoint.Protocol;\n+import com.alibaba.csp.sentinel.transport.ssl.SslFactory;\n+\n+/**\n+ * @author Leo Li\n+ */\n+public class SocketFactory {\n+\n+    private static class SSLSocketFactoryInstance {\n+        private static final SSLSocketFactory SSL_SOCKET_FACTORY = SslFactory.getSslConnectionSocketFactory().getSocketFactory();\n+    }\n+\n+    public static Socket getSocket(Protocol protocol) throws IOException {\n+        return protocol == Protocol.HTTP ? new Socket() : getSslSocketFactory().createSocket();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3NDE4MA=="}, "originalCommit": {"oid": "3fb45d4802d5e7bbe27e2164ded88f4bccb544ac"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMjAxNA==", "bodyText": "This delays init, and threads are safe. Originally written directly in the static block of the class, now it is changed to the inner class.\n\nYeah, I know. I'm just curious whether it's different to use SSLSocketFactoryInstance.SSL_SOCKET_FACTORY simply instead of getSslSocketFactory()?\nMy testing code is for these two approaches.\n\nOh, it doesn't make any difference, it's a \"copy\" issue\ud83d\ude04", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r543112014", "createdAt": "2020-12-15T07:37:44Z", "author": {"login": "polarbear567"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/client/SocketFactory.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package com.alibaba.csp.sentinel.transport.heartbeat.client;\n+\n+import java.io.IOException;\n+import java.net.Socket;\n+\n+import javax.net.ssl.SSLSocketFactory;\n+\n+import com.alibaba.csp.sentinel.transport.endpoint.Protocol;\n+import com.alibaba.csp.sentinel.transport.ssl.SslFactory;\n+\n+/**\n+ * @author Leo Li\n+ */\n+public class SocketFactory {\n+\n+    private static class SSLSocketFactoryInstance {\n+        private static final SSLSocketFactory SSL_SOCKET_FACTORY = SslFactory.getSslConnectionSocketFactory().getSocketFactory();\n+    }\n+\n+    public static Socket getSocket(Protocol protocol) throws IOException {\n+        return protocol == Protocol.HTTP ? new Socket() : getSslSocketFactory().createSocket();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3NDE4MA=="}, "originalCommit": {"oid": "3fb45d4802d5e7bbe27e2164ded88f4bccb544ac"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjI0ODc1OnYy", "diffSide": "RIGHT", "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/endpoint/Protocol.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyMjoyOVrOIF60dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyMjoyOVrOIF60dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3NzQ5Mw==", "bodyText": "\ud83e\udd12Do you forget to remove the useless main?", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r543077493", "createdAt": "2020-12-15T06:22:29Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-common/src/main/java/com/alibaba/csp/sentinel/transport/endpoint/Protocol.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.alibaba.csp.sentinel.transport.endpoint;\n+\n+/**\n+ * @author Leo Li\n+ */\n+public enum Protocol {\n+    HTTP(\"http\"),\n+    HTTPS(\"https\");\n+\n+    private String protocol;\n+\n+    Protocol(String protocol) {\n+        this.protocol = protocol;\n+    }\n+\n+    public String getProtocol() {\n+        return protocol;\n+    }\n+\n+    public static void main(String[] args) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fb45d4802d5e7bbe27e2164ded88f4bccb544ac"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjMwNzYwOnYy", "diffSide": "RIGHT", "path": "sentinel-transport/sentinel-transport-netty-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/client/HttpClientsFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjo0Mjo0NlrOIF7Ucw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjo0Mjo0NlrOIF7Ucw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4NTY4Mw==", "bodyText": "Hi @sczyh30\nIs bypass certificate verifying acceptable?\nI don't insist on it.", "url": "https://github.com/alibaba/Sentinel/pull/1896#discussion_r543085683", "createdAt": "2020-12-15T06:42:46Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-netty-http/src/main/java/com/alibaba/csp/sentinel/transport/heartbeat/client/HttpClientsFactory.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.alibaba.csp.sentinel.transport.heartbeat.client;\n+\n+import com.alibaba.csp.sentinel.transport.endpoint.Protocol;\n+import com.alibaba.csp.sentinel.transport.ssl.SslFactory;\n+import org.apache.http.conn.ssl.NoopHostnameVerifier;\n+import org.apache.http.conn.ssl.SSLConnectionSocketFactory;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClients;\n+\n+/**\n+ * @author Leo Li\n+ */\n+public class HttpClientsFactory {\n+\n+    private static class SslConnectionSocketFactoryInstance {\n+        private static final SSLConnectionSocketFactory SSL_CONNECTION_SOCKET_FACTORY = new SSLConnectionSocketFactory(SslFactory.getSslConnectionSocketFactory(), NoopHostnameVerifier.INSTANCE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad8d0af86693d2779f0a5b43c92a10b58d1daff3"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4133, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}