{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1ODIzNDgw", "number": 1514, "title": "add test for  FlowResponseDataDecoder", "bodyText": "Signed-off-by: yunfeiyanggzq yunfeiyang@buaa.edu.cn\nSpecial notes for reviews\nI am an asoc participant. I will be mainly responsible for the cluster flow control. I will supplement the missing unit tests while reading the relative code.", "createdAt": "2020-06-01T08:14:26Z", "url": "https://github.com/alibaba/Sentinel/pull/1514", "merged": true, "mergeCommit": {"oid": "a1e3715db11d5e1f5b255717355412d037094884"}, "closed": true, "closedAt": "2020-06-11T07:38:33Z", "author": {"login": "yunfeiyanggzq"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcm7wDAgH2gAyNDI1ODIzNDgwOjdiZjNiN2QzODM4OGQwYjY0ZGQ1Y2UxNzI5ZjIyNDYxNTU4ZjdkZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqJ6H6AFqTQyODY5NTM3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7bf3b7d38388d0b64dd5ce1729f22461558f7dea", "author": {"user": {"login": "yunfeiyanggzq", "name": "ZhiQiang Gu"}}, "url": "https://github.com/alibaba/Sentinel/commit/7bf3b7d38388d0b64dd5ce1729f22461558f7dea", "committedDate": "2020-06-01T08:12:05Z", "message": "test1\n\nSigned-off-by: yunfeiyanggzq <yunfeiyang@buaa.edu.cn>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NjYzOTI5", "url": "https://github.com/alibaba/Sentinel/pull/1514#pullrequestreview-428663929", "createdAt": "2020-06-11T07:37:57Z", "commit": {"oid": "7bf3b7d38388d0b64dd5ce1729f22461558f7dea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Njk1Mzc1", "url": "https://github.com/alibaba/Sentinel/pull/1514#pullrequestreview-428695375", "createdAt": "2020-06-11T08:23:31Z", "commit": {"oid": "7bf3b7d38388d0b64dd5ce1729f22461558f7dea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODoyMzozMlrOGiTZ3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODoyMzozMlrOGiTZ3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyMjY4Nw==", "bodyText": "assertEquals(Object expected, Object actual). Firsr param is expected, second is actual.", "url": "https://github.com/alibaba/Sentinel/pull/1514#discussion_r438622687", "createdAt": "2020-06-11T08:23:32Z", "author": {"login": "wavesZh"}, "path": "sentinel-cluster/sentinel-cluster-client-default/src/test/java/com/alibaba/csp/sentinel/cluster/client/codec/data/FlowResponseDataDecoderTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.alibaba.csp.sentinel.cluster.client.codec.data;\n+\n+import com.alibaba.csp.sentinel.cluster.response.data.FlowTokenResponseData;\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.Unpooled;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class FlowResponseDataDecoderTest {\n+    @Test\n+    public void testDecode() {\n+        ByteBuf buf = Unpooled.buffer();\n+        FlowResponseDataDecoder decoder = new FlowResponseDataDecoder();\n+        FlowTokenResponseData data = new FlowTokenResponseData();\n+        data.setRemainingCount(12);\n+        data.setWaitInMs(13);\n+        buf.writeInt(12);\n+        buf.writeInt(13);\n+        Assert.assertEquals(decoder.decode(buf), data);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bf3b7d38388d0b64dd5ce1729f22461558f7dea"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3953, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}