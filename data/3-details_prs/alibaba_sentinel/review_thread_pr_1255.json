{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyOTc4NjA1", "number": 1255, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMToxMjo0NlrODnbH2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMToxMjo0NlrODnbH2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNjY1NDM0OnYy", "diffSide": "RIGHT", "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/command/http/HttpEventTask.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMToxMjo0NlrOF1aXlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMTo0Mjo0NVrOF11EsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU1MDg3MQ==", "bodyText": "The content length here is wrong when the message contains non-ASCII characters (e.g. Chinese characters). Maybe we should use message.getBytes().length instead?", "url": "https://github.com/alibaba/Sentinel/pull/1255#discussion_r391550871", "createdAt": "2020-03-12T11:12:46Z", "author": {"login": "sczyh30"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/command/http/HttpEventTask.java", "diffHunk": "@@ -190,56 +303,31 @@ private void closeResource(Closeable closeable) {\n         }\n     }\n \n-    private void handleResponse(CommandResponse response, /*@NonNull*/ final PrintWriter printWriter,\n-        /*@NonNull*/ final OutputStream rawOutputStream) throws Exception {\n+    private <T> void handleResponse(CommandResponse<T> response, final PrintWriter printWriter) throws Exception {\n         if (response.isSuccess()) {\n             if (response.getResult() == null) {\n-                writeOkStatusLine(printWriter);\n+                writeResponse(printWriter, StatusCode.OK, null);\n                 return;\n             }\n-            // Write 200 OK status line.\n-            writeOkStatusLine(printWriter);\n             // Here we directly use `toString` to encode the result to plain text.\n             byte[] buffer = response.getResult().toString().getBytes(SentinelConfig.charset());\n-            rawOutputStream.write(buffer);\n-            rawOutputStream.flush();\n+            writeResponse(printWriter, StatusCode.OK, new String(buffer));\n         } else {\n             String msg = SERVER_ERROR_MESSAGE;\n             if (response.getException() != null) {\n                 msg = response.getException().getMessage();\n             }\n-            badRequest(printWriter, msg);\n+            writeResponse(printWriter, StatusCode.BAD_REQUEST, msg);\n         }\n     }\n-\n-    /**\n-     * Write `400 Bad Request` HTTP response status line and message body, then flush.\n-     */\n-    private void badRequest(/*@NonNull*/ final PrintWriter out, String message) {\n-        out.print(\"HTTP/1.1 400 Bad Request\\r\\n\"\n-            + \"Connection: close\\r\\n\\r\\n\");\n-        out.print(message);\n-        out.flush();\n-        writtenHead = true;\n-    }\n-\n-    /**\n-     * Write `500 Internal Server Error` HTTP response status line and message body, then flush.\n-     */\n-    private void internalError(/*@NonNull*/ final PrintWriter out, String message) {\n-        out.print(\"HTTP/1.1 500 Internal Server Error\\r\\n\"\n-            + \"Connection: close\\r\\n\\r\\n\");\n-        out.print(message);\n-        out.flush();\n-        writtenHead = true;\n-    }\n-\n-    /**\n-     * Write `200 OK` HTTP response status line and flush.\n-     */\n-    private void writeOkStatusLine(/*@NonNull*/ final PrintWriter out) {\n-        out.print(\"HTTP/1.1 200 OK\\r\\n\"\n-            + \"Connection: close\\r\\n\\r\\n\");\n+    \n+    private void writeResponse(PrintWriter out, StatusCode statusCode, String message) {\n+        out.print(\"HTTP/1.0 \" + statusCode.toString() + \"\\r\\n\"\n+                + \"Content-Length: \" + (message == null ? 0 : message.length()) + \"\\r\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d44078e6b82714e9d15ed7dd4c541f9b50b9cc28"}, "originalPosition": 410}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4ODQwMQ==", "bodyText": "Oh you are right i forget to correct here.", "url": "https://github.com/alibaba/Sentinel/pull/1255#discussion_r391988401", "createdAt": "2020-03-13T01:42:45Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-transport/sentinel-transport-simple-http/src/main/java/com/alibaba/csp/sentinel/transport/command/http/HttpEventTask.java", "diffHunk": "@@ -190,56 +303,31 @@ private void closeResource(Closeable closeable) {\n         }\n     }\n \n-    private void handleResponse(CommandResponse response, /*@NonNull*/ final PrintWriter printWriter,\n-        /*@NonNull*/ final OutputStream rawOutputStream) throws Exception {\n+    private <T> void handleResponse(CommandResponse<T> response, final PrintWriter printWriter) throws Exception {\n         if (response.isSuccess()) {\n             if (response.getResult() == null) {\n-                writeOkStatusLine(printWriter);\n+                writeResponse(printWriter, StatusCode.OK, null);\n                 return;\n             }\n-            // Write 200 OK status line.\n-            writeOkStatusLine(printWriter);\n             // Here we directly use `toString` to encode the result to plain text.\n             byte[] buffer = response.getResult().toString().getBytes(SentinelConfig.charset());\n-            rawOutputStream.write(buffer);\n-            rawOutputStream.flush();\n+            writeResponse(printWriter, StatusCode.OK, new String(buffer));\n         } else {\n             String msg = SERVER_ERROR_MESSAGE;\n             if (response.getException() != null) {\n                 msg = response.getException().getMessage();\n             }\n-            badRequest(printWriter, msg);\n+            writeResponse(printWriter, StatusCode.BAD_REQUEST, msg);\n         }\n     }\n-\n-    /**\n-     * Write `400 Bad Request` HTTP response status line and message body, then flush.\n-     */\n-    private void badRequest(/*@NonNull*/ final PrintWriter out, String message) {\n-        out.print(\"HTTP/1.1 400 Bad Request\\r\\n\"\n-            + \"Connection: close\\r\\n\\r\\n\");\n-        out.print(message);\n-        out.flush();\n-        writtenHead = true;\n-    }\n-\n-    /**\n-     * Write `500 Internal Server Error` HTTP response status line and message body, then flush.\n-     */\n-    private void internalError(/*@NonNull*/ final PrintWriter out, String message) {\n-        out.print(\"HTTP/1.1 500 Internal Server Error\\r\\n\"\n-            + \"Connection: close\\r\\n\\r\\n\");\n-        out.print(message);\n-        out.flush();\n-        writtenHead = true;\n-    }\n-\n-    /**\n-     * Write `200 OK` HTTP response status line and flush.\n-     */\n-    private void writeOkStatusLine(/*@NonNull*/ final PrintWriter out) {\n-        out.print(\"HTTP/1.1 200 OK\\r\\n\"\n-            + \"Connection: close\\r\\n\\r\\n\");\n+    \n+    private void writeResponse(PrintWriter out, StatusCode statusCode, String message) {\n+        out.print(\"HTTP/1.0 \" + statusCode.toString() + \"\\r\\n\"\n+                + \"Content-Length: \" + (message == null ? 0 : message.length()) + \"\\r\\n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU1MDg3MQ=="}, "originalCommit": {"oid": "d44078e6b82714e9d15ed7dd4c541f9b50b9cc28"}, "originalPosition": 410}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4221, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}