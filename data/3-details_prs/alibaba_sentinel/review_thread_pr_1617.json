{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxMDA0NTk0", "number": 1617, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTozNTowOVrOES3ujw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMzoyOToyN1rOEYUphQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjIyODYzOnYy", "diffSide": "RIGHT", "path": "sentinel-adapter/sentinel-apache-dubbo-adapter/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTozNTowOVrOG4SiPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwODozNzo0OVrOG5ZkOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY3NzExOA==", "bodyText": "originParse seems a typo, adding Since 1.8.0 can help user who use old verison.\nMaybe the document can refer to #1572", "url": "https://github.com/alibaba/Sentinel/pull/1617#discussion_r461677118", "createdAt": "2020-07-28T15:35:09Z", "author": {"login": "cdfive"}, "path": "sentinel-adapter/sentinel-apache-dubbo-adapter/README.md", "diffHunk": "@@ -65,4 +65,10 @@ flow control, degrade or system load protection. You can implement your own `Dub\n and then register to `DubboFallbackRegistry`. If no fallback is configured, Sentinel will wrap the `BlockException`\n then directly throw it out.\n \n-Besides, we can also leverage [Dubbo mock mechanism](http://dubbo.apache.org/en-us/docs/user/demos/local-mock.html) to provide fallback implementation of degraded Dubbo services.\n\\ No newline at end of file\n+Besides, we can also leverage [Dubbo mock mechanism](http://dubbo.apache.org/en-us/docs/user/demos/local-mock.html) to provide fallback implementation of degraded Dubbo services.\n+\n+## Global dubbo provider origin parse\n+\n+Sentinel Dubbo Adapter supports global origin parse for provider.\n+You can implement your own `DubboOriginParser` interface\n+and then register to `DubboAdapterGlobalConfig`. If no originParse is configured, Sentinel will user dubbo url property application.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95b755fb65bbbacffae7b82fa523f9d5aca34798"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg0MDg5MQ==", "bodyText": "Ok, this piece is really my incomplete consideration, thank you for correcting, and it has been fixed", "url": "https://github.com/alibaba/Sentinel/pull/1617#discussion_r462840891", "createdAt": "2020-07-30T08:37:49Z", "author": {"login": "JiangZian"}, "path": "sentinel-adapter/sentinel-apache-dubbo-adapter/README.md", "diffHunk": "@@ -65,4 +65,10 @@ flow control, degrade or system load protection. You can implement your own `Dub\n and then register to `DubboFallbackRegistry`. If no fallback is configured, Sentinel will wrap the `BlockException`\n then directly throw it out.\n \n-Besides, we can also leverage [Dubbo mock mechanism](http://dubbo.apache.org/en-us/docs/user/demos/local-mock.html) to provide fallback implementation of degraded Dubbo services.\n\\ No newline at end of file\n+Besides, we can also leverage [Dubbo mock mechanism](http://dubbo.apache.org/en-us/docs/user/demos/local-mock.html) to provide fallback implementation of degraded Dubbo services.\n+\n+## Global dubbo provider origin parse\n+\n+Sentinel Dubbo Adapter supports global origin parse for provider.\n+You can implement your own `DubboOriginParser` interface\n+and then register to `DubboAdapterGlobalConfig`. If no originParse is configured, Sentinel will user dubbo url property application.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY3NzExOA=="}, "originalCommit": {"oid": "95b755fb65bbbacffae7b82fa523f9d5aca34798"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjI0MTMyOnYy", "diffSide": "RIGHT", "path": "sentinel-adapter/sentinel-apache-dubbo-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/dubbo/DubboUtils.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTozODoxMlrOG4SqbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDozNjowN1rOG-69PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY3OTIxMw==", "bodyText": "getMethodResourceName has prefix configuration function, interfaceResouceName may also need this, and getInterfaceResourceName can be added.Also refer to PR of dubbo-adaptor of 2.6.", "url": "https://github.com/alibaba/Sentinel/pull/1617#discussion_r461679213", "createdAt": "2020-07-28T15:38:12Z", "author": {"login": "cdfive"}, "path": "sentinel-adapter/sentinel-apache-dubbo-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/dubbo/DubboUtils.java", "diffHunk": "@@ -57,20 +57,20 @@ public static String getResourceName(Invoker<?> invoker, Invocation invocation,\n         return buf.toString();\n     }\n \n-    public static String getResourceName(Invoker<?> invoker, Invocation invocation, String prefix) {\n+    public static String getMethodResourceName(Invoker<?> invoker, Invocation invocation, String prefix) {\n         if (StringUtil.isNotBlank(prefix)) {\n             return new StringBuilder(64)\n                     .append(prefix)\n-                    .append(getResourceName(invoker, invocation, DubboConfig.getDubboInterfaceGroupAndVersionEnabled()))\n+                    .append(getMethodResourceName(invoker, invocation, DubboAdapterGlobalConfig.getDubboInterfaceGroupAndVersionEnabled()))\n                     .toString();\n         } else {\n-            return getResourceName(invoker, invocation, DubboConfig.getDubboInterfaceGroupAndVersionEnabled());\n+            return getMethodResourceName(invoker, invocation, DubboAdapterGlobalConfig.getDubboInterfaceGroupAndVersionEnabled());\n         }\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95b755fb65bbbacffae7b82fa523f9d5aca34798"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg0MDc4Ng==", "bodyText": "Ok, this piece is really my incomplete consideration, thank you for correcting, and it has been fixed", "url": "https://github.com/alibaba/Sentinel/pull/1617#discussion_r462840786", "createdAt": "2020-07-30T08:37:40Z", "author": {"login": "JiangZian"}, "path": "sentinel-adapter/sentinel-apache-dubbo-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/dubbo/DubboUtils.java", "diffHunk": "@@ -57,20 +57,20 @@ public static String getResourceName(Invoker<?> invoker, Invocation invocation,\n         return buf.toString();\n     }\n \n-    public static String getResourceName(Invoker<?> invoker, Invocation invocation, String prefix) {\n+    public static String getMethodResourceName(Invoker<?> invoker, Invocation invocation, String prefix) {\n         if (StringUtil.isNotBlank(prefix)) {\n             return new StringBuilder(64)\n                     .append(prefix)\n-                    .append(getResourceName(invoker, invocation, DubboConfig.getDubboInterfaceGroupAndVersionEnabled()))\n+                    .append(getMethodResourceName(invoker, invocation, DubboAdapterGlobalConfig.getDubboInterfaceGroupAndVersionEnabled()))\n                     .toString();\n         } else {\n-            return getResourceName(invoker, invocation, DubboConfig.getDubboInterfaceGroupAndVersionEnabled());\n+            return getMethodResourceName(invoker, invocation, DubboAdapterGlobalConfig.getDubboInterfaceGroupAndVersionEnabled());\n         }\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY3OTIxMw=="}, "originalCommit": {"oid": "95b755fb65bbbacffae7b82fa523f9d5aca34798"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYzMDg0NQ==", "bodyText": "So modest, very nice work! \ud83d\udc4d", "url": "https://github.com/alibaba/Sentinel/pull/1617#discussion_r468630845", "createdAt": "2020-08-11T14:36:07Z", "author": {"login": "cdfive"}, "path": "sentinel-adapter/sentinel-apache-dubbo-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/dubbo/DubboUtils.java", "diffHunk": "@@ -57,20 +57,20 @@ public static String getResourceName(Invoker<?> invoker, Invocation invocation,\n         return buf.toString();\n     }\n \n-    public static String getResourceName(Invoker<?> invoker, Invocation invocation, String prefix) {\n+    public static String getMethodResourceName(Invoker<?> invoker, Invocation invocation, String prefix) {\n         if (StringUtil.isNotBlank(prefix)) {\n             return new StringBuilder(64)\n                     .append(prefix)\n-                    .append(getResourceName(invoker, invocation, DubboConfig.getDubboInterfaceGroupAndVersionEnabled()))\n+                    .append(getMethodResourceName(invoker, invocation, DubboAdapterGlobalConfig.getDubboInterfaceGroupAndVersionEnabled()))\n                     .toString();\n         } else {\n-            return getResourceName(invoker, invocation, DubboConfig.getDubboInterfaceGroupAndVersionEnabled());\n+            return getMethodResourceName(invoker, invocation, DubboAdapterGlobalConfig.getDubboInterfaceGroupAndVersionEnabled());\n         }\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY3OTIxMw=="}, "originalCommit": {"oid": "95b755fb65bbbacffae7b82fa523f9d5aca34798"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyODAxNTAyOnYy", "diffSide": "RIGHT", "path": "sentinel-adapter/sentinel-apache-dubbo-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/dubbo/origin/DubboOriginParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoyNToxOVrOG-6euA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMTozNDozMVrOG_OvdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYyMzAzMg==", "bodyText": "A unused import.", "url": "https://github.com/alibaba/Sentinel/pull/1617#discussion_r468623032", "createdAt": "2020-08-11T14:25:19Z", "author": {"login": "cdfive"}, "path": "sentinel-adapter/sentinel-apache-dubbo-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/dubbo/origin/DubboOriginParser.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 1999-2020 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.alibaba.csp.sentinel.adapter.dubbo.origin;\n+\n+import com.alibaba.csp.sentinel.context.Context;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce8cd6e43d79eb3744f1a49dd90b1893dbd85a25"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk1NDk5Nw==", "bodyText": "Thank you for your correcting. I have fixed this problem after you pointed it out", "url": "https://github.com/alibaba/Sentinel/pull/1617#discussion_r468954997", "createdAt": "2020-08-12T01:34:31Z", "author": {"login": "JiangZian"}, "path": "sentinel-adapter/sentinel-apache-dubbo-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/dubbo/origin/DubboOriginParser.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 1999-2020 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.alibaba.csp.sentinel.adapter.dubbo.origin;\n+\n+import com.alibaba.csp.sentinel.context.Context;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYyMzAzMg=="}, "originalCommit": {"oid": "ce8cd6e43d79eb3744f1a49dd90b1893dbd85a25"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTM5NTg5OnYy", "diffSide": "RIGHT", "path": "sentinel-adapter/sentinel-apache-dubbo-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/dubbo/fallback/DubboFallbackRegistry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMzoyOToyN1rOHAmT4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwMjoxMjo1NFrOHBXqng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM4OTcyOQ==", "bodyText": "If redirect registry related logic to DubboAdapterGlobalConfig:\n\nThese static internal variables should be removed.\nThis legacy registry should be marked as deprecated and add more comments.", "url": "https://github.com/alibaba/Sentinel/pull/1617#discussion_r470389729", "createdAt": "2020-08-14T03:29:27Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-adapter/sentinel-apache-dubbo-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/dubbo/fallback/DubboFallbackRegistry.java", "diffHunk": "@@ -33,21 +34,21 @@\n     private static volatile DubboFallback providerFallback = new DefaultDubboFallback();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82355873033fafe2c8403c8025b347ea8895ea37"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5ODM2Ng==", "bodyText": "Thinks, I have deleted this static internal variables", "url": "https://github.com/alibaba/Sentinel/pull/1617#discussion_r471198366", "createdAt": "2020-08-17T02:12:54Z", "author": {"login": "JiangZian"}, "path": "sentinel-adapter/sentinel-apache-dubbo-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/dubbo/fallback/DubboFallbackRegistry.java", "diffHunk": "@@ -33,21 +34,21 @@\n     private static volatile DubboFallback providerFallback = new DefaultDubboFallback();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM4OTcyOQ=="}, "originalCommit": {"oid": "82355873033fafe2c8403c8025b347ea8895ea37"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4212, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}