{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NDM4MTcw", "number": 1265, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMToyMjoxMVrODZCppA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMTo1OToxMVrODZCv1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTg0NDIwOnYy", "diffSide": "RIGHT", "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/LogTarget.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMToyMjoxMVrOFfOaBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwMToxODowNFrOFfRwfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NjIxNA==", "bodyText": "Because types in LogType share the same interface is it necessary enabling users specify the same implementation and merging all the logs?\nSomething like LogType[] value() and new type ALL in LogType.", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368286214", "createdAt": "2020-01-19T11:22:11Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/LogTarget.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.alibaba.csp.sentinel.log;\n+\n+import java.lang.annotation.*;\n+\n+/**\n+ * @author xue8\n+ */\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.TYPE)\n+@Documented\n+public @interface LogTarget {\n+    LogType value() default LogType.RECORD_LOG;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7124a6178738ade54615754e8afb338cc3d28bc4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NzUwMQ==", "bodyText": "And maybe we should add a new property something like order to specify the priority because of we may implement several extensions for general logger like log4j/log4j2, logback, slf4j, commons-logging, etc.", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368287501", "createdAt": "2020-01-19T11:43:45Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/LogTarget.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.alibaba.csp.sentinel.log;\n+\n+import java.lang.annotation.*;\n+\n+/**\n+ * @author xue8\n+ */\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.TYPE)\n+@Documented\n+public @interface LogTarget {\n+    LogType value() default LogType.RECORD_LOG;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NjIxNA=="}, "originalCommit": {"oid": "7124a6178738ade54615754e8afb338cc3d28bc4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NDQ1MA==", "bodyText": "Ok, i will do it as soon as possible.", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368294450", "createdAt": "2020-01-19T13:34:17Z", "author": {"login": "xue8"}, "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/LogTarget.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.alibaba.csp.sentinel.log;\n+\n+import java.lang.annotation.*;\n+\n+/**\n+ * @author xue8\n+ */\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.TYPE)\n+@Documented\n+public @interface LogTarget {\n+    LogType value() default LogType.RECORD_LOG;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NjIxNA=="}, "originalCommit": {"oid": "7124a6178738ade54615754e8afb338cc3d28bc4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMwNjY1NQ==", "bodyText": "Because types in LogType share the same interface is it necessary enabling users specify the same implementation and merging all the logs?\nSomething like LogType[] value() and new type ALL in LogType.\n\nBecause the log and logger are one-to-one, if all the logs use the same implementation, they will be using the same logger, then it is impossible to configure the logger configuration different in XML.", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368306655", "createdAt": "2020-01-19T16:39:31Z", "author": {"login": "xue8"}, "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/LogTarget.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.alibaba.csp.sentinel.log;\n+\n+import java.lang.annotation.*;\n+\n+/**\n+ * @author xue8\n+ */\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.TYPE)\n+@Documented\n+public @interface LogTarget {\n+    LogType value() default LogType.RECORD_LOG;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NjIxNA=="}, "originalCommit": {"oid": "7124a6178738ade54615754e8afb338cc3d28bc4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0MTExNw==", "bodyText": "Because types in LogType share the same interface is it necessary enabling users specify the same implementation and merging all the logs?\nSomething like LogType[] value() and new type ALL in LogType.\n\nBecause the log and logger are one-to-one, if all the logs use the same implementation, they will be using the same logger, then it is impossible to configure the logger configuration different in XML.\n\nOkay i know. So they are stateful. That's fine.", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368341117", "createdAt": "2020-01-20T01:18:04Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/LogTarget.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.alibaba.csp.sentinel.log;\n+\n+import java.lang.annotation.*;\n+\n+/**\n+ * @author xue8\n+ */\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.TYPE)\n+@Documented\n+public @interface LogTarget {\n+    LogType value() default LogType.RECORD_LOG;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NjIxNA=="}, "originalCommit": {"oid": "7124a6178738ade54615754e8afb338cc3d28bc4"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTg0NDYxOnYy", "diffSide": "RIGHT", "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/Logger.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMToyMzoxMVrOFfOaPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNToyNjo1OVrOFfh2hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NjI3MA==", "bodyText": "Is it necessary for us adding more levels like error, debug?", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368286270", "createdAt": "2020-01-19T11:23:11Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/Logger.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.alibaba.csp.sentinel.log;\n+\n+/**\n+ * Provide logger SPI interface\n+ * @author xue8\n+ */\n+public interface Logger {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7124a6178738ade54615754e8afb338cc3d28bc4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYwNDgwNQ==", "bodyText": "@sczyh30 How to resolve the compatibility between different loggers?\nOne proposal is that we can clarify to use one and adapt it in actually implementations.", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368604805", "createdAt": "2020-01-20T15:26:59Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/Logger.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.alibaba.csp.sentinel.log;\n+\n+/**\n+ * Provide logger SPI interface\n+ * @author xue8\n+ */\n+public interface Logger {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NjI3MA=="}, "originalCommit": {"oid": "7124a6178738ade54615754e8afb338cc3d28bc4"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTg0OTkyOnYy", "diffSide": "RIGHT", "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/Logger.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMTozNDozOVrOFfOc8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMTozNDozOVrOFfOc8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4Njk2MQ==", "bodyText": "And don't forget to add license to new files.", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368286961", "createdAt": "2020-01-19T11:34:39Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/Logger.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.alibaba.csp.sentinel.log;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7124a6178738ade54615754e8afb338cc3d28bc4"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTg1MTMxOnYy", "diffSide": "RIGHT", "path": "sentinel-demo/sentinel-demo-log-logback/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMTozNzo0M1rOFfOdnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMTozNzo0M1rOFfOdnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NzEzNQ==", "bodyText": "I think it's better placing this kind of module into sentinel-log folder instead of treating it just as a demo.\nHow do you think about, @sczyh30", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368287135", "createdAt": "2020-01-19T11:37:43Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-demo/sentinel-demo-log-logback/pom.xml", "diffHunk": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7124a6178738ade54615754e8afb338cc3d28bc4"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTg1MjY0OnYy", "diffSide": "RIGHT", "path": "sentinel-demo/sentinel-demo-log-logback/src/main/java/com/alibaba/csp/sentinel/demo/log/logback/CommandCenterLogLoggerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMTo0MDo1MlrOFfOeVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMTo0MDo1MlrOFfOeVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NzMxOQ==", "bodyText": "May be the modifier should be clear as private and same as another implementation.", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368287319", "createdAt": "2020-01-19T11:40:52Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-demo/sentinel-demo-log-logback/src/main/java/com/alibaba/csp/sentinel/demo/log/logback/CommandCenterLogLoggerImpl.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.alibaba.csp.sentinel.demo.log.logback;\n+\n+import com.alibaba.csp.sentinel.log.LogTarget;\n+import com.alibaba.csp.sentinel.log.LogType;\n+import com.alibaba.csp.sentinel.log.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@LogTarget(value = LogType.COMMAND_CENTER_LOG)\n+public class CommandCenterLogLoggerImpl implements Logger {\n+    org.slf4j.Logger logger = LoggerFactory.getLogger(\"commandCenterLogLogger\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7124a6178738ade54615754e8afb338cc3d28bc4"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTg1NDQ4OnYy", "diffSide": "RIGHT", "path": "sentinel-demo/sentinel-demo-log-logback/src/test/java/com/alibaba/csp/sentinel/demo/log/logback/CommandCenterLogTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMTo0NToxMFrOFfOfSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMTo0NToxMFrOFfOfSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4NzU2MQ==", "bodyText": "Shall we add some assertion in this unit test?", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368287561", "createdAt": "2020-01-19T11:45:10Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-demo/sentinel-demo-log-logback/src/test/java/com/alibaba/csp/sentinel/demo/log/logback/CommandCenterLogTest.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.alibaba.csp.sentinel.demo.log.logback;\n+\n+import com.alibaba.csp.sentinel.log.CommandCenterLog;\n+import org.junit.Test;\n+\n+/**\n+ * @author xue8\n+ */\n+public class CommandCenterLogTest {\n+    @Test\n+    public void testLogException() {\n+        Exception e = new Exception(\"ex\");\n+        CommandCenterLog.info(\"Error\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7124a6178738ade54615754e8afb338cc3d28bc4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTg1ODUwOnYy", "diffSide": "RIGHT", "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/RecordLogLogging.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMTo1NTo0MFrOFfOhcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMTo1NTo0MFrOFfOhcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4ODExNA==", "bodyText": "Because we will not use it statically any more the handler can be non-static.", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368288114", "createdAt": "2020-01-19T11:55:40Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/RecordLogLogging.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.alibaba.csp.sentinel.log;\n+\n+import java.util.logging.Handler;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+/**\n+ * Default logger implementation.\n+ * @author xue8\n+ */\n+public class RecordLogLogging extends LogBase implements com.alibaba.csp.sentinel.log.Logger {\n+    private static final Logger heliumRecordLog = Logger.getLogger(\"cspSentinelRecordLog\");\n+    private static final String FILE_NAME = \"sentinel-record.log\";\n+    private static Handler logHandler = null;\n+\n+    static {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7124a6178738ade54615754e8afb338cc3d28bc4"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTg2MDA2OnYy", "diffSide": "RIGHT", "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/Logger.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMTo1OToxMVrOFfOiTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMTo1OToxMVrOFfOiTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI4ODMzMw==", "bodyText": "Because there maybe different implementation for placeholder in different logging system we'd better to clarify what kind of placeholder we use.\nFor example {}.", "url": "https://github.com/alibaba/Sentinel/pull/1265#discussion_r368288333", "createdAt": "2020-01-19T11:59:11Z", "author": {"login": "jasonjoo2010"}, "path": "sentinel-core/src/main/java/com/alibaba/csp/sentinel/log/Logger.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.alibaba.csp.sentinel.log;\n+\n+/**\n+ * Provide logger SPI interface\n+ * @author xue8\n+ */\n+public interface Logger {\n+    void info(String detail, Object... params);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7124a6178738ade54615754e8afb338cc3d28bc4"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4227, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}