{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMjc1NTE0", "number": 1307, "title": "Add Sentinel SOFARPC adapter module", "bodyText": "Describe what this PR does / why we need it\nAdd Sentinel adapter to support SOFARPC.\nDoes this pull request fix one issue?\nFixes #1189\nDescribe how you did it\nLearn from SOFARPC official document and also refer to Dubbo adapter.\n\n\nAdd a adapter module sentinel-sofa-rpc-adapter, add custom filterSentinelSofaRpcProviderFilter and SentinelSofaRpcConsumerFilter to add sentinel\nsupport.\n\n\nAdd a demo module sentinel-sofa-rpc-demo to verify it.\n\n\nDescribe how to verify it\nRun test case and demo.\nSpecial notes for reviews\n\n\nThe resourceName of service method does a small improvement, interfaceName:methodSignaturechanged tointerfaceName#methodSignature, since it's convenient for locate the class by copying it into IDEA with double click shift.\n\n\nNow it only support sync invoke,  I'm learning and will try it later.", "createdAt": "2020-02-26T13:49:04Z", "url": "https://github.com/alibaba/Sentinel/pull/1307", "merged": true, "mergeCommit": {"oid": "18acb1d154d0412fc34a2db541ffa6bbfd1eff6c"}, "closed": true, "closedAt": "2020-03-02T10:13:55Z", "author": {"login": "cdfive"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIF5XyAH2gAyMzgwMjc1NTE0OjIyODA0MjIwYzFlODM0NzFmZTk1NDliY2JmZGIxOTU5YmU1ZTJjZmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJq7yXgFqTM2NzA4MTgwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "22804220c1e83471fe9549bcbfdb1959be5e2cfb", "author": {"user": {"login": "cdfive", "name": null}}, "url": "https://github.com/alibaba/Sentinel/commit/22804220c1e83471fe9549bcbfdb1959be5e2cfb", "committedDate": "2020-02-26T12:29:40Z", "message": "Add Sentinel SOFARPC adapter module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2374947fe4257436500c9ff7e857165e03750590", "author": {"user": {"login": "cdfive", "name": null}}, "url": "https://github.com/alibaba/Sentinel/commit/2374947fe4257436500c9ff7e857165e03750590", "committedDate": "2020-02-26T14:11:54Z", "message": "Fix test case CI failed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2Mzc1ODk2", "url": "https://github.com/alibaba/Sentinel/pull/1307#pullrequestreview-366375896", "createdAt": "2020-02-28T12:54:07Z", "commit": {"oid": "2374947fe4257436500c9ff7e857165e03750590"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjo1NDowN1rOFv0AwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjo1NDowN1rOFv0AwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY3OTU1Mg==", "bodyText": "According to the comments of SofaResponse, the appResponse may indicate the biz exception and the errorMsg indicates the framework exception. Should we handle the latter case?", "url": "https://github.com/alibaba/Sentinel/pull/1307#discussion_r385679552", "createdAt": "2020-02-28T12:54:07Z", "author": {"login": "sczyh30"}, "path": "sentinel-adapter/sentinel-sofa-rpc-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/sofa/rpc/SentinelSofaRpcProviderFilter.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.alibaba.csp.sentinel.adapter.sofa.rpc;\n+\n+import com.alibaba.csp.sentinel.*;\n+import com.alibaba.csp.sentinel.adapter.sofa.rpc.fallback.SofaRpcFallbackRegistry;\n+import com.alibaba.csp.sentinel.context.ContextUtil;\n+import com.alibaba.csp.sentinel.slots.block.BlockException;\n+import com.alipay.sofa.rpc.common.RpcConstants;\n+import com.alipay.sofa.rpc.core.exception.SofaRpcException;\n+import com.alipay.sofa.rpc.core.request.SofaRequest;\n+import com.alipay.sofa.rpc.core.response.SofaResponse;\n+import com.alipay.sofa.rpc.ext.Extension;\n+import com.alipay.sofa.rpc.filter.AutoActive;\n+import com.alipay.sofa.rpc.filter.FilterInvoker;\n+\n+import static com.alibaba.csp.sentinel.adapter.sofa.rpc.SofaRpcUtils.getApplicationName;\n+import static com.alibaba.csp.sentinel.adapter.sofa.rpc.SofaRpcUtils.getInterfaceResourceName;\n+import static com.alibaba.csp.sentinel.adapter.sofa.rpc.SofaRpcUtils.getMethodResourceName;\n+import static com.alibaba.csp.sentinel.adapter.sofa.rpc.SofaRpcUtils.getMethodArguments;\n+\n+/**\n+ * SOFARPC service provider filter for Sentinel, auto activated by default.\n+ *\n+ * If you want to disable the provider filter, you can configure:\n+ * <pre>ProviderConfig.setParameter(\"sofa.rpc.sentinel.enabled\", \"false\");</pre>\n+ *\n+ * or add setting in rpc-config.json file:\n+ * <pre>\n+ * {\n+ *   \"sofa.rpc.sentinel.enabled\": false\n+ * }\n+ * </pre>\n+ *\n+ * @author cdfive\n+ */\n+@Extension(value = \"providerSentinel\", order = -1000)\n+@AutoActive(providerSide = true)\n+public class SentinelSofaRpcProviderFilter extends AbstractSofaRpcFilter {\n+\n+    @Override\n+    public SofaResponse invoke(FilterInvoker invoker, SofaRequest request) throws SofaRpcException {\n+        // Now only support sync invoke.\n+        if (request.getInvokeType() != null && !RpcConstants.INVOKER_TYPE_SYNC.equals(request.getInvokeType())) {\n+            return invoker.invoke(request);\n+        }\n+\n+        String applicationName = getApplicationName(request);\n+        String interfaceResourceName = getInterfaceResourceName(request);\n+        String methodResourceName = getMethodResourceName(request);\n+\n+        Entry interfaceEntry = null;\n+        Entry methodEntry = null;\n+        try {\n+            ContextUtil.enter(methodResourceName, applicationName);\n+\n+            interfaceEntry = SphU.entry(interfaceResourceName, ResourceTypeConstants.COMMON_RPC, EntryType.IN);\n+            methodEntry = SphU.entry(methodResourceName, ResourceTypeConstants.COMMON_RPC, EntryType.IN, getMethodArguments(request));\n+\n+            SofaResponse response = invoker.invoke(request);\n+\n+            Object appResponse = response.getAppResponse();\n+            if (appResponse instanceof Throwable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2374947fe4257436500c9ff7e857165e03750590"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4622772d5dcdcf16376355eef0951814f5e2e3d2", "author": {"user": {"login": "cdfive", "name": null}}, "url": "https://github.com/alibaba/Sentinel/commit/4622772d5dcdcf16376355eef0951814f5e2e3d2", "committedDate": "2020-02-29T04:06:52Z", "message": "Handle framework error,upgrade sofa-rpc version in demo,fix comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODUxMzc2", "url": "https://github.com/alibaba/Sentinel/pull/1307#pullrequestreview-366851376", "createdAt": "2020-03-01T11:05:48Z", "commit": {"oid": "4622772d5dcdcf16376355eef0951814f5e2e3d2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQxMTowNTo0OFrOFwNk2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQxMTowNzoxMFrOFwNlNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA5ODM5NA==", "bodyText": "Test messages? :)", "url": "https://github.com/alibaba/Sentinel/pull/1307#discussion_r386098394", "createdAt": "2020-03-01T11:05:48Z", "author": {"login": "sczyh30"}, "path": "sentinel-adapter/sentinel-sofa-rpc-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/sofa/rpc/SentinelSofaRpcProviderFilter.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.alibaba.csp.sentinel.adapter.sofa.rpc;\n+\n+import com.alibaba.csp.sentinel.*;\n+import com.alibaba.csp.sentinel.adapter.sofa.rpc.fallback.SofaRpcFallbackRegistry;\n+import com.alibaba.csp.sentinel.context.ContextUtil;\n+import com.alibaba.csp.sentinel.slots.block.BlockException;\n+import com.alipay.sofa.rpc.common.RpcConstants;\n+import com.alipay.sofa.rpc.core.exception.RpcErrorType;\n+import com.alipay.sofa.rpc.core.exception.SofaRpcException;\n+import com.alipay.sofa.rpc.core.request.SofaRequest;\n+import com.alipay.sofa.rpc.core.response.SofaResponse;\n+import com.alipay.sofa.rpc.ext.Extension;\n+import com.alipay.sofa.rpc.filter.AutoActive;\n+import com.alipay.sofa.rpc.filter.FilterInvoker;\n+\n+import static com.alibaba.csp.sentinel.adapter.sofa.rpc.SofaRpcUtils.getApplicationName;\n+import static com.alibaba.csp.sentinel.adapter.sofa.rpc.SofaRpcUtils.getInterfaceResourceName;\n+import static com.alibaba.csp.sentinel.adapter.sofa.rpc.SofaRpcUtils.getMethodResourceName;\n+import static com.alibaba.csp.sentinel.adapter.sofa.rpc.SofaRpcUtils.getMethodArguments;\n+\n+/**\n+ * SOFARPC service provider filter for Sentinel, auto activated by default.\n+ *\n+ * If you want to disable the provider filter, you can configure:\n+ * <pre>ProviderConfig.setParameter(\"sofa.rpc.sentinel.enabled\", \"false\");</pre>\n+ *\n+ * or add setting in rpc-config.json file:\n+ * <pre>\n+ * {\n+ *   \"sofa.rpc.sentinel.enabled\": false\n+ * }\n+ * </pre>\n+ *\n+ * @author cdfive\n+ */\n+@Extension(value = \"providerSentinel\", order = -1000)\n+@AutoActive(providerSide = true)\n+public class SentinelSofaRpcProviderFilter extends AbstractSofaRpcFilter {\n+\n+    @Override\n+    public SofaResponse invoke(FilterInvoker invoker, SofaRequest request) throws SofaRpcException {\n+        // Now only support sync invoke.\n+        if (request.getInvokeType() != null && !RpcConstants.INVOKER_TYPE_SYNC.equals(request.getInvokeType())) {\n+            return invoker.invoke(request);\n+        }\n+\n+        String applicationName = getApplicationName(request);\n+        String interfaceResourceName = getInterfaceResourceName(request);\n+        String methodResourceName = getMethodResourceName(request);\n+\n+        Entry interfaceEntry = null;\n+        Entry methodEntry = null;\n+        try {\n+            ContextUtil.enter(methodResourceName, applicationName);\n+\n+            interfaceEntry = SphU.entry(interfaceResourceName, ResourceTypeConstants.COMMON_RPC, EntryType.IN);\n+            methodEntry = SphU.entry(methodResourceName, ResourceTypeConstants.COMMON_RPC, EntryType.IN, getMethodArguments(request));\n+\n+            SofaResponse response = invoker.invoke(request);\n+\n+            response.setErrorMsg(\"test error msg\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4622772d5dcdcf16376355eef0951814f5e2e3d2"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA5ODQ4NA==", "bodyText": "Maybe this code snippet can be extracted into AbstractSofaRpcFilter?", "url": "https://github.com/alibaba/Sentinel/pull/1307#discussion_r386098484", "createdAt": "2020-03-01T11:07:10Z", "author": {"login": "sczyh30"}, "path": "sentinel-adapter/sentinel-sofa-rpc-adapter/src/main/java/com/alibaba/csp/sentinel/adapter/sofa/rpc/SentinelSofaRpcProviderFilter.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.alibaba.csp.sentinel.adapter.sofa.rpc;\n+\n+import com.alibaba.csp.sentinel.*;\n+import com.alibaba.csp.sentinel.adapter.sofa.rpc.fallback.SofaRpcFallbackRegistry;\n+import com.alibaba.csp.sentinel.context.ContextUtil;\n+import com.alibaba.csp.sentinel.slots.block.BlockException;\n+import com.alipay.sofa.rpc.common.RpcConstants;\n+import com.alipay.sofa.rpc.core.exception.RpcErrorType;\n+import com.alipay.sofa.rpc.core.exception.SofaRpcException;\n+import com.alipay.sofa.rpc.core.request.SofaRequest;\n+import com.alipay.sofa.rpc.core.response.SofaResponse;\n+import com.alipay.sofa.rpc.ext.Extension;\n+import com.alipay.sofa.rpc.filter.AutoActive;\n+import com.alipay.sofa.rpc.filter.FilterInvoker;\n+\n+import static com.alibaba.csp.sentinel.adapter.sofa.rpc.SofaRpcUtils.getApplicationName;\n+import static com.alibaba.csp.sentinel.adapter.sofa.rpc.SofaRpcUtils.getInterfaceResourceName;\n+import static com.alibaba.csp.sentinel.adapter.sofa.rpc.SofaRpcUtils.getMethodResourceName;\n+import static com.alibaba.csp.sentinel.adapter.sofa.rpc.SofaRpcUtils.getMethodArguments;\n+\n+/**\n+ * SOFARPC service provider filter for Sentinel, auto activated by default.\n+ *\n+ * If you want to disable the provider filter, you can configure:\n+ * <pre>ProviderConfig.setParameter(\"sofa.rpc.sentinel.enabled\", \"false\");</pre>\n+ *\n+ * or add setting in rpc-config.json file:\n+ * <pre>\n+ * {\n+ *   \"sofa.rpc.sentinel.enabled\": false\n+ * }\n+ * </pre>\n+ *\n+ * @author cdfive\n+ */\n+@Extension(value = \"providerSentinel\", order = -1000)\n+@AutoActive(providerSide = true)\n+public class SentinelSofaRpcProviderFilter extends AbstractSofaRpcFilter {\n+\n+    @Override\n+    public SofaResponse invoke(FilterInvoker invoker, SofaRequest request) throws SofaRpcException {\n+        // Now only support sync invoke.\n+        if (request.getInvokeType() != null && !RpcConstants.INVOKER_TYPE_SYNC.equals(request.getInvokeType())) {\n+            return invoker.invoke(request);\n+        }\n+\n+        String applicationName = getApplicationName(request);\n+        String interfaceResourceName = getInterfaceResourceName(request);\n+        String methodResourceName = getMethodResourceName(request);\n+\n+        Entry interfaceEntry = null;\n+        Entry methodEntry = null;\n+        try {\n+            ContextUtil.enter(methodResourceName, applicationName);\n+\n+            interfaceEntry = SphU.entry(interfaceResourceName, ResourceTypeConstants.COMMON_RPC, EntryType.IN);\n+            methodEntry = SphU.entry(methodResourceName, ResourceTypeConstants.COMMON_RPC, EntryType.IN, getMethodArguments(request));\n+\n+            SofaResponse response = invoker.invoke(request);\n+\n+            response.setErrorMsg(\"test error msg\");\n+\n+            if (response.isError()) {\n+                SofaRpcException rpcException = new SofaRpcException(RpcErrorType.SERVER_FILTER, response.getErrorMsg());\n+                Tracer.traceEntry(rpcException, interfaceEntry);\n+                Tracer.traceEntry(rpcException, methodEntry);\n+            } else {\n+                Object appResponse = response.getAppResponse();\n+                if (appResponse instanceof Throwable) {\n+                    Tracer.traceEntry((Throwable) appResponse, interfaceEntry);\n+                    Tracer.traceEntry((Throwable) appResponse, methodEntry);\n+                }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4622772d5dcdcf16376355eef0951814f5e2e3d2"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cf675f8d0f067b7ea88455062c22cf44786201a", "author": {"user": {"login": "cdfive", "name": null}}, "url": "https://github.com/alibaba/Sentinel/commit/0cf675f8d0f067b7ea88455062c22cf44786201a", "committedDate": "2020-03-01T12:23:24Z", "message": "Improve test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4745c02b7dbcb231cfaa5b0dfb04acb0ba52d2f", "author": {"user": {"login": "cdfive", "name": null}}, "url": "https://github.com/alibaba/Sentinel/commit/f4745c02b7dbcb231cfaa5b0dfb04acb0ba52d2f", "committedDate": "2020-03-01T12:53:56Z", "message": "Refactor trace response and other exception logic into abtract class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MDgxODA1", "url": "https://github.com/alibaba/Sentinel/pull/1307#pullrequestreview-367081805", "createdAt": "2020-03-02T10:12:43Z", "commit": {"oid": "f4745c02b7dbcb231cfaa5b0dfb04acb0ba52d2f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4032, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}