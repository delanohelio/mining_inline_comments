{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5Nzk2MTM5", "number": 673, "title": "Fix for issues 661, 662, 664 and 686", "bodyText": "", "createdAt": "2020-07-15T23:29:06Z", "url": "https://github.com/vmware/singleton/pull/673", "merged": true, "mergeCommit": {"oid": "5fa4b3f7b502be51275d6284c44ac241e0a7f661"}, "closed": true, "closedAt": "2020-07-31T03:35:00Z", "author": {"login": "jessiejuachon"}, "timelineItems": {"totalCount": 159, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgtQ7ygH2gAyNDQ5Nzk2MTM5OjA2YjYwYmJlZWFkNTQzODk0NGEzMDFhYzEwNTA3NjEwNjU0ZjVkNzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6Lu9KAFqTQ1ODg5NjU1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "06b60bbeead5438944a301ac10507610654f5d71", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/06b60bbeead5438944a301ac10507610654f5d71", "committedDate": "2020-05-12T23:55:53Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51b4dfa4d673a96f003757fe2b2692576bdfd92c", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/51b4dfa4d673a96f003757fe2b2692576bdfd92c", "committedDate": "2020-05-13T00:09:46Z", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "778a7a1ef4cdc9251c8e1db2501e1fe8f9440223", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/778a7a1ef4cdc9251c8e1db2501e1fe8f9440223", "committedDate": "2020-05-13T02:35:06Z", "message": "Commenting out a test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "077f19b3a3ecf74662b7df27a2062d376b64d9a7", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/077f19b3a3ecf74662b7df27a2062d376b64d9a7", "committedDate": "2020-05-13T02:49:13Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9424346a07fa645376b7711cdd936573804b3192", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/9424346a07fa645376b7711cdd936573804b3192", "committedDate": "2020-05-13T18:23:03Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c25a676dd876b503b1b7738ab22edf262e836458", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/c25a676dd876b503b1b7738ab22edf262e836458", "committedDate": "2020-05-13T18:57:59Z", "message": "Error logging when fetch failed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db641b9ea0816671a56600c1651632a5f62b7cef", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/db641b9ea0816671a56600c1651632a5f62b7cef", "committedDate": "2020-05-13T23:31:12Z", "message": "bug fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cd06d60a04a85e57a1fe4f5aeb9d8537d2e2ed7", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/5cd06d60a04a85e57a1fe4f5aeb9d8537d2e2ed7", "committedDate": "2020-05-14T18:53:40Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6915f11ed80e515e7d24777a8c1f21cb4eb02e24", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/6915f11ed80e515e7d24777a8c1f21cb4eb02e24", "committedDate": "2020-05-15T02:53:42Z", "message": "Updating sample application"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a64be3f7aae480fcf13d943b8e703c4deb58ffac", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/a64be3f7aae480fcf13d943b8e703c4deb58ffac", "committedDate": "2020-05-17T18:54:06Z", "message": "Merge branch 'g11n-java-client' into g11n-java-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71281946f39629abfa181ab13536b4510c087184", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/71281946f39629abfa181ab13536b4510c087184", "committedDate": "2020-05-19T03:05:45Z", "message": "fixing failing smoke test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4a388c17543e5197481497cdbc38c92da291ae6", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/c4a388c17543e5197481497cdbc38c92da291ae6", "committedDate": "2020-05-19T03:06:24Z", "message": "Merge branch 'g11n-java-client' of https://github.com/jessiejuachon/singleton into g11n-java-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ecea939edab6ca083db4fafaddd9b721632dad8", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/5ecea939edab6ca083db4fafaddd9b721632dad8", "committedDate": "2020-05-19T04:20:20Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c5b0a12142b092519391c128f31f69d1fdc5c7c", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/4c5b0a12142b092519391c128f31f69d1fdc5c7c", "committedDate": "2020-05-19T05:05:43Z", "message": "fixing code scan"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "067d19d4bbd130bd36fd43d9c686fe8e1f22ef33", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/067d19d4bbd130bd36fd43d9c686fe8e1f22ef33", "committedDate": "2020-05-19T05:31:41Z", "message": "Fixing code scan"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "711ce808a4225af2d0e0330711b46442841c9af4", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/711ce808a4225af2d0e0330711b46442841c9af4", "committedDate": "2020-05-19T22:32:44Z", "message": "Adding prodMode configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7dabdba91d395294a9c4ee497cde547b1c1b5a4", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/b7dabdba91d395294a9c4ee497cde547b1c1b5a4", "committedDate": "2020-05-19T22:36:01Z", "message": "Merge branch 'g11n-java-client' into g11n-java-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8543ecc66657e97b222be404632503193a37b91", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/d8543ecc66657e97b222be404632503193a37b91", "committedDate": "2020-05-20T23:27:19Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8094f40d6ea7c7e196d310238080f228a050e36", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/e8094f40d6ea7c7e196d310238080f228a050e36", "committedDate": "2020-05-21T04:26:40Z", "message": "Setting default prodMode to true"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a5ef77f77349a48b15851181fc41146b2128878", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/9a5ef77f77349a48b15851181fc41146b2128878", "committedDate": "2020-06-17T01:14:24Z", "message": "Removing prodMode configuration and logic. Throwing exception if source key not found. Returning default locale message if locale not supported."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5011c382379eef35d44c9c6c7f2b2ac9be18f10c", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/5011c382379eef35d44c9c6c7f2b2ac9be18f10c", "committedDate": "2020-06-17T02:45:16Z", "message": "Updating javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33432b1673cbc2956cd91f2e5a9186e1d0c8bc58", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/33432b1673cbc2956cd91f2e5a9186e1d0c8bc58", "committedDate": "2020-06-17T06:38:14Z", "message": "Fixing bug: Fallback shall apply to both TranslationMessage.getMessage and TranslationMessage.getMessages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9d3cae952a2a5d2957b6c9b008dc4dd0ea53ba4", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/c9d3cae952a2a5d2957b6c9b008dc4dd0ea53ba4", "committedDate": "2020-06-17T06:51:06Z", "message": "Adding test for Translateion.getMessages, locale not supported"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adb40eca02003a216df29187d4688206dfed5268", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/adb40eca02003a216df29187d4688206dfed5268", "committedDate": "2020-06-17T07:02:50Z", "message": "code comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ab5c59fb1c97e8b2a826f669b4ca096f34632ca", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/7ab5c59fb1c97e8b2a826f669b4ca096f34632ca", "committedDate": "2020-06-19T08:28:28Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c100893aa6e53535cf703ecfd6bef8f03f12009", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/3c100893aa6e53535cf703ecfd6bef8f03f12009", "committedDate": "2020-06-19T09:48:51Z", "message": "Fix issue: https://github.com/vmware/singleton/issues/622"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76105b7fc941321e7522e429b330b02aab6fb4f9", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/76105b7fc941321e7522e429b330b02aab6fb4f9", "committedDate": "2020-06-29T20:05:15Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49c564894f62214104a7d62aa6fe65a33f6c450e", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/49c564894f62214104a7d62aa6fe65a33f6c450e", "committedDate": "2020-06-29T20:20:06Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d543e99fa6589c8dff25446f23b381e14bdc293e", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/d543e99fa6589c8dff25446f23b381e14bdc293e", "committedDate": "2020-06-29T20:26:41Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ecf958b199a67032fcc42cec63f5cff8813732f", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/3ecf958b199a67032fcc42cec63f5cff8813732f", "committedDate": "2020-06-29T20:28:09Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6a07a1ce6589b8768f30097bee0c90761cfffc2", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/e6a07a1ce6589b8768f30097bee0c90761cfffc2", "committedDate": "2020-06-29T20:30:38Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89ff0889154a93f9069124033acc18e5f1179e48", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/89ff0889154a93f9069124033acc18e5f1179e48", "committedDate": "2020-06-29T20:31:46Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1356abf4b930f054da32a7722f9e4d0d3ff1cb1", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/f1356abf4b930f054da32a7722f9e4d0d3ff1cb1", "committedDate": "2020-06-29T20:32:47Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c63bc2d3318e40775f0d10e888226f73a8055180", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/c63bc2d3318e40775f0d10e888226f73a8055180", "committedDate": "2020-07-15T23:19:28Z", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "beab1483a10b248c243fe2c3c6dc63107d8204f2", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/beab1483a10b248c243fe2c3c6dc63107d8204f2", "committedDate": "2020-07-15T23:26:39Z", "message": "Fix for https://github.com/vmware/singleton/issues/661"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NDcwMDE2", "url": "https://github.com/vmware/singleton/pull/673#pullrequestreview-449470016", "createdAt": "2020-07-16T02:45:29Z", "commit": {"oid": "beab1483a10b248c243fe2c3c6dc63107d8204f2"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMjo0NToyOVrOGyYGbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMjo1NDozNVrOGyYPSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ3Njg0NQ==", "bodyText": "Don't need to pass msgSourceQueueIter because the invoked methods can get it from config.", "url": "https://github.com/vmware/singleton/pull/673#discussion_r455476845", "createdAt": "2020-07-16T02:45:29Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ProductService.java", "diffHunk": "@@ -44,23 +51,39 @@ public JSONArray getSupportedLocalesFromRemoteVIP() {\n \n     public List<Map> getAllComponentTranslation() {\n         List<Map> list = new ArrayList<Map>();\n-        Object[] locales = {};\n-        Object[] components = {};\n-        if (VIPCfg.getInstance().getMessageOrigin() == DataSourceEnum.VIP) {\n-            locales = this.getSupportedLocalesFromRemoteVIP().toArray();\n-            components = this.getComponentsFromRemoteVIP()\n-                    .toArray();\n-        }\n-        for (Object locale : locales) {\n-            for (Object component : components) {\n-                dto.setComponent(((String) component).trim());\n-                dto.setLocale(LocaleUtility.fmtToMappedLocale((String) locale).toString().trim());\n-                Map<String, String> retMap = new ComponentService(dto).getMessages().getCachedData();\n-                if (retMap != null) {\n-                    list.add(retMap);\n+        Map<String, String> locales = this.getLanguages(VIPCfg.getInstance().getMsgOriginsQueue().iterator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beab1483a10b248c243fe2c3c6dc63107d8204f2"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ3NzEyNg==", "bodyText": "If the map is empty, still need to get from the next iter in the queue.", "url": "https://github.com/vmware/singleton/pull/673#discussion_r455477126", "createdAt": "2020-07-16T02:46:38Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ProductService.java", "diffHunk": "@@ -44,23 +51,39 @@ public JSONArray getSupportedLocalesFromRemoteVIP() {\n \n     public List<Map> getAllComponentTranslation() {\n         List<Map> list = new ArrayList<Map>();\n-        Object[] locales = {};\n-        Object[] components = {};\n-        if (VIPCfg.getInstance().getMessageOrigin() == DataSourceEnum.VIP) {\n-            locales = this.getSupportedLocalesFromRemoteVIP().toArray();\n-            components = this.getComponentsFromRemoteVIP()\n-                    .toArray();\n-        }\n-        for (Object locale : locales) {\n-            for (Object component : components) {\n-                dto.setComponent(((String) component).trim());\n-                dto.setLocale(LocaleUtility.fmtToMappedLocale((String) locale).toString().trim());\n-                Map<String, String> retMap = new ComponentService(dto).getMessages().getCachedData();\n-                if (retMap != null) {\n-                    list.add(retMap);\n+        Map<String, String> locales = this.getLanguages(VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n+        List<String> components = this.getComponents(VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n+        if (locales != null) {\n+            for (String languageTag : locales.keySet()) {\n+                for (Object component : components) {\n+                    dto.setComponent(((String) component).trim());\n+                    dto.setLocale(LocaleUtility.fmtToMappedLocale(Locale.forLanguageTag(languageTag)).toString().trim());\n+                    Map<String, String> retMap = new ComponentService(dto).getMessages().getCachedData();\n+                    if (retMap != null) {\n+                        list.add(retMap);\n+                    }\n                 }\n             }\n         }\n         return list;\n     }\n+\n+    private Map<String, String> getLanguages(Iterator<DataSourceEnum> msgSourceQueueIter) {\n+        if (!msgSourceQueueIter.hasNext())\n+            return null;\n+\n+        DataSourceEnum dataSource = msgSourceQueueIter.next();\n+        LocaleOpt opt = dataSource.createLocaleOpt();\n+        return opt.getLanguages(LocaleUtility.getDefaultLocale().toLanguageTag());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beab1483a10b248c243fe2c3c6dc63107d8204f2"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ3NzI0MA==", "bodyText": "If the return value is empty, still need to get from the next iter in the queue.", "url": "https://github.com/vmware/singleton/pull/673#discussion_r455477240", "createdAt": "2020-07-16T02:47:00Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ProductService.java", "diffHunk": "@@ -44,23 +51,39 @@ public JSONArray getSupportedLocalesFromRemoteVIP() {\n \n     public List<Map> getAllComponentTranslation() {\n         List<Map> list = new ArrayList<Map>();\n-        Object[] locales = {};\n-        Object[] components = {};\n-        if (VIPCfg.getInstance().getMessageOrigin() == DataSourceEnum.VIP) {\n-            locales = this.getSupportedLocalesFromRemoteVIP().toArray();\n-            components = this.getComponentsFromRemoteVIP()\n-                    .toArray();\n-        }\n-        for (Object locale : locales) {\n-            for (Object component : components) {\n-                dto.setComponent(((String) component).trim());\n-                dto.setLocale(LocaleUtility.fmtToMappedLocale((String) locale).toString().trim());\n-                Map<String, String> retMap = new ComponentService(dto).getMessages().getCachedData();\n-                if (retMap != null) {\n-                    list.add(retMap);\n+        Map<String, String> locales = this.getLanguages(VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n+        List<String> components = this.getComponents(VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n+        if (locales != null) {\n+            for (String languageTag : locales.keySet()) {\n+                for (Object component : components) {\n+                    dto.setComponent(((String) component).trim());\n+                    dto.setLocale(LocaleUtility.fmtToMappedLocale(Locale.forLanguageTag(languageTag)).toString().trim());\n+                    Map<String, String> retMap = new ComponentService(dto).getMessages().getCachedData();\n+                    if (retMap != null) {\n+                        list.add(retMap);\n+                    }\n                 }\n             }\n         }\n         return list;\n     }\n+\n+    private Map<String, String> getLanguages(Iterator<DataSourceEnum> msgSourceQueueIter) {\n+        if (!msgSourceQueueIter.hasNext())\n+            return null;\n+\n+        DataSourceEnum dataSource = msgSourceQueueIter.next();\n+        LocaleOpt opt = dataSource.createLocaleOpt();\n+        return opt.getLanguages(LocaleUtility.getDefaultLocale().toLanguageTag());\n+    }\n+\n+    private List<String> getComponents (Iterator<DataSourceEnum> msgSourceQueueIter) {\n+        if (!msgSourceQueueIter.hasNext())\n+            return null;\n+\n+        DataSourceEnum dataSource = msgSourceQueueIter.next();\n+        ComponentOpt opt = dataSource.createComponentOpt(dto);\n+        return opt.getComponents();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beab1483a10b248c243fe2c3c6dc63107d8204f2"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ3OTExNQ==", "bodyText": "It seems all the folder under the root are added rather the components belong to the product and version. Please check.", "url": "https://github.com/vmware/singleton/pull/673#discussion_r455479115", "createdAt": "2020-07-16T02:54:35Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalComponentOpt.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.vmware.vipclient.i18n.messages.api.opt.local;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.nio.file.*;\n+import java.util.Collections;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.messages.api.opt.ComponentOpt;\n+import com.vmware.vipclient.i18n.messages.dto.BaseDTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class LocalComponentOpt implements ComponentOpt {\n+    private Logger logger = LoggerFactory.getLogger(LocalComponentOpt.class);\n+    private BaseDTO dto;\n+    public LocalComponentOpt(BaseDTO dto) {\n+        this.dto = dto;\n+    }\n+\n+    @Override\n+    public List<String> getComponents() {\n+        List<String> components = new LinkedList<String>();\n+        try {\n+\n+            Path path = Paths.get(VIPCfg.getInstance().getOfflineResourcesBaseUrl());\n+\n+            URI uri = Thread.currentThread().getContextClassLoader().\n+                    getResource(path.toString()).toURI();\n+\n+            if (uri.getScheme().equals(\"jar\")) {\n+                try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n+                    path = fileSystem.getPath(path.toString());\n+                    getComponents(path, components);\n+                }\n+            } else {\n+                path = Paths.get(uri);\n+                getComponents(path, components);\n+            }\n+\n+        } catch (Exception e) {\n+            logger.debug(e.getMessage());\n+        }\n+        return components;\n+    }\n+\n+    private void getComponents(Path path, List<String> components) throws IOException {\n+        try (Stream<Path> listOfFiles = Files.walk(path).filter(p -> !Files.isRegularFile(p))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beab1483a10b248c243fe2c3c6dc63107d8204f2"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cd77135f8bf23ee5c002cb61b62c5233f7e8700", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/2cd77135f8bf23ee5c002cb61b62c5233f7e8700", "committedDate": "2020-07-16T16:53:06Z", "message": "adding license header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e13b694a1a12048760e0a8dd3980ddb585c71a9a", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/e13b694a1a12048760e0a8dd3980ddb585c71a9a", "committedDate": "2020-07-16T22:43:40Z", "message": "changes after code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzU5MzU3", "url": "https://github.com/vmware/singleton/pull/673#pullrequestreview-451359357", "createdAt": "2020-07-20T07:30:34Z", "commit": {"oid": "e13b694a1a12048760e0a8dd3980ddb585c71a9a"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzozMDozNVrOGz9Elw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzozMDozNVrOGz9Elw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzMTE1OQ==", "bodyText": "What's the reason for setting these properties again?", "url": "https://github.com/vmware/singleton/pull/673#discussion_r457131159", "createdAt": "2020-07-20T07:30:35Z", "author": {"login": "huihuiw01"}, "path": "src/test/java/com/vmware/vip/i18n/TranslationMessageTest.java", "diffHunk": "@@ -261,6 +256,23 @@ public void testGetAllComponentTranslation() {\n         Assert.assertTrue(list.size() > 0);\n     }\n \n+    @Test\n+    public void testGetAllComponentTranslationMixedMode() {\n+        String offlineResourcesBaseUrlOrig = vipCfg.getOfflineResourcesBaseUrl();\n+        vipCfg.setOfflineResourcesBaseUrl(\"offlineBundles/\");\n+        List<DataSourceEnum> msgOriginsQueueOrig = vipCfg.getMsgOriginsQueue();\n+        vipCfg.setMsgOriginsQueue(new LinkedList<DataSourceEnum>(Arrays.asList(DataSourceEnum.VIP, DataSourceEnum.Bundle)));\n+        String vipServerOrig = vipCfg.getVipServer();\n+        vipCfg.setVipServer(\"http://1.1.1.1:80\");\n+\n+        List<Map> list = new ProductService(dto).getAllComponentTranslation();\n+        Assert.assertTrue(list.size() > 0);\n+\n+        vipCfg.setOfflineResourcesBaseUrl(offlineResourcesBaseUrlOrig);\n+        vipCfg.setMsgOriginsQueue(msgOriginsQueueOrig);\n+        vipCfg.setVipServer(vipServerOrig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13b694a1a12048760e0a8dd3980ddb585c71a9a"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMzA5NDQ4", "url": "https://github.com/vmware/singleton/pull/673#pullrequestreview-450309448", "createdAt": "2020-07-17T00:59:47Z", "commit": {"oid": "e13b694a1a12048760e0a8dd3980ddb585c71a9a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMTo0ODo1NFrOGzCmaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNDoyNzoyMlrOGzVKaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE3MzE2MA==", "bodyText": "Internally, client use English.\nLike in CLDR, all the characters are English.\nSo don't need to provide locale as a parameter. Just get English locale names  from bundles.", "url": "https://github.com/vmware/singleton/pull/673#discussion_r456173160", "createdAt": "2020-07-17T01:48:54Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ProductService.java", "diffHunk": "@@ -44,23 +56,63 @@ public JSONArray getSupportedLocalesFromRemoteVIP() {\n \n     public List<Map> getAllComponentTranslation() {\n         List<Map> list = new ArrayList<Map>();\n-        Object[] locales = {};\n-        Object[] components = {};\n-        if (VIPCfg.getInstance().getMessageOrigin() == DataSourceEnum.VIP) {\n-            locales = this.getSupportedLocalesFromRemoteVIP().toArray();\n-            components = this.getComponentsFromRemoteVIP()\n-                    .toArray();\n-        }\n-        for (Object locale : locales) {\n-            for (Object component : components) {\n-                dto.setComponent(((String) component).trim());\n-                dto.setLocale(LocaleUtility.fmtToMappedLocale((String) locale).toString().trim());\n-                Map<String, String> retMap = new ComponentService(dto).getMessages().getCachedData();\n-                if (retMap != null) {\n-                    list.add(retMap);\n+        Map<String, String> locales = this.getLanguages(VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n+        List<String> components = this.getComponents(VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n+        if (locales != null) {\n+            for (String languageTag : locales.keySet()) {\n+                for (Object component : components) {\n+                    dto.setComponent(((String) component).trim());\n+                    dto.setLocale(LocaleUtility.fmtToMappedLocale(Locale.forLanguageTag(languageTag)).toString().trim());\n+                    dto.setProductID(VIPCfg.getInstance().getProductName());\n+                    dto.setVersion(VIPCfg.getInstance().getVersion());\n+                    Map<String, String> retMap = new ComponentService(dto).getMessages().getCachedData();\n+                    if (retMap != null) {\n+                        list.add(retMap);\n+                    }\n                 }\n             }\n         }\n         return list;\n     }\n+\n+    private Map<String, String> getLanguages(Iterator<DataSourceEnum> msgSourceQueueIter) {\n+        if (!msgSourceQueueIter.hasNext())\n+            return null;\n+\n+        DataSourceEnum dataSource = msgSourceQueueIter.next();\n+        LocaleOpt opt = dataSource.createLocaleOpt();\n+        Map<String, String> languages =  opt.getLanguages(LocaleUtility.getDefaultLocale().toLanguageTag());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13b694a1a12048760e0a8dd3980ddb585c71a9a"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE4NjQwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     try (Stream<Path> listOfFiles = Files.walk(path).filter(\n          \n          \n            \n                             p -> !Files.isRegularFile(p) && !p.equals(path))) {\n          \n          \n            \n                         listOfFiles.map(dir -> dir.getFileName().toString()).forEach(s->components.add(s));\n          \n          \n            \n                    try (Stream<Path> listOfFiles = Files.list(path).filter(p -> !p.toFile().isFile())) {\n          \n          \n            \n                        listOfFiles.forEach(s -> components.add(s.getFileName().toString()));\n          \n          \n            \n                    }", "url": "https://github.com/vmware/singleton/pull/673#discussion_r456186408", "createdAt": "2020-07-17T02:40:08Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalComponentOpt.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2019 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.i18n.messages.api.opt.local;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.nio.file.*;\n+import java.util.Collections;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.messages.api.opt.ComponentOpt;\n+import com.vmware.vipclient.i18n.messages.dto.BaseDTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class LocalComponentOpt implements ComponentOpt {\n+    private Logger logger = LoggerFactory.getLogger(LocalComponentOpt.class);\n+    private BaseDTO dto;\n+    public LocalComponentOpt(BaseDTO dto) {\n+        this.dto = dto;\n+    }\n+\n+    @Override\n+    public List<String> getComponents() {\n+        List<String> components = new LinkedList<String>();\n+        try {\n+\n+            Path path = Paths.get(VIPCfg.getInstance().getOfflineResourcesBaseUrl());\n+\n+            URI uri = Thread.currentThread().getContextClassLoader().\n+                    getResource(path.toString()).toURI();\n+\n+            if (uri.getScheme().equals(\"jar\")) {\n+                try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n+                    path = fileSystem.getPath(path.toString());\n+                    getComponents(path, components);\n+                }\n+            } else {\n+                path = Paths.get(uri);\n+                getComponents(path, components);\n+            }\n+\n+        } catch (Exception e) {\n+            logger.debug(e.getMessage());\n+        }\n+        return components;\n+    }\n+\n+    private void getComponents(Path path, List<String> components) throws IOException {\n+         try (Stream<Path> listOfFiles = Files.walk(path).filter(\n+                 p -> !Files.isRegularFile(p) && !p.equals(path))) {\n+             listOfFiles.map(dir -> dir.getFileName().toString()).forEach(s->components.add(s));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13b694a1a12048760e0a8dd3980ddb585c71a9a"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM3NzY3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!msgSourceQueueIter.hasNext())\n          \n          \n            \n                        return null;\n          \n          \n            \n            \n          \n          \n            \n                    DataSourceEnum dataSource = msgSourceQueueIter.next();\n          \n          \n            \n                    LocaleOpt opt = dataSource.createLocaleOpt();\n          \n          \n            \n                    Map<String, String> languages =  opt.getLanguages(LocaleUtility.getDefaultLocale().toLanguageTag());\n          \n          \n            \n                    // If failed to get languages from the data source\n          \n          \n            \n                    if (languages == null) {\n          \n          \n            \n                        // Try the next dataSource in the queue\n          \n          \n            \n                        if (msgSourceQueueIter.hasNext()) {\n          \n          \n            \n                            languages = getLanguages(msgSourceQueueIter);\n          \n          \n            \n                            // If no more data source in queue, log the error. This means that neither online nor offline fetch succeeded.\n          \n          \n            \n                        } else {\n          \n          \n            \n                            logger.error(FormatUtils.format(ConstantsMsg.GET_LANGUAGES_FAILED, dataSource.toString()));\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                    return languages;\n          \n          \n            \n                    if (!msgSourceQueueIter.hasNext()) {\n          \n          \n            \n                        return null;\n          \n          \n            \n                    }\n          \n          \n            \n                    \n          \n          \n            \n                    DataSourceEnum dataSource = msgSourceQueueIter.next();\n          \n          \n            \n                    LocaleOpt opt = dataSource.createLocaleOpt();\n          \n          \n            \n                    Map<String, String> languages =  opt.getLanguages(LocaleUtility.getDefaultLocale().toLanguageTag());\n          \n          \n            \n                    // If failed to get languages from the data source\n          \n          \n            \n                    if (languages == null) {                \n          \n          \n            \n                    logger.error(FormatUtils.format(ConstantsMsg.GET_LANGUAGES_FAILED, dataSource.toString()));\n          \n          \n            \n                languages = getLanguages(msgSourceQueueIter);\n          \n          \n            \n                    }\n          \n          \n            \n                    \n          \n          \n            \n                        return languages;", "url": "https://github.com/vmware/singleton/pull/673#discussion_r456377677", "createdAt": "2020-07-17T11:11:40Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ProductService.java", "diffHunk": "@@ -44,23 +56,63 @@ public JSONArray getSupportedLocalesFromRemoteVIP() {\n \n     public List<Map> getAllComponentTranslation() {\n         List<Map> list = new ArrayList<Map>();\n-        Object[] locales = {};\n-        Object[] components = {};\n-        if (VIPCfg.getInstance().getMessageOrigin() == DataSourceEnum.VIP) {\n-            locales = this.getSupportedLocalesFromRemoteVIP().toArray();\n-            components = this.getComponentsFromRemoteVIP()\n-                    .toArray();\n-        }\n-        for (Object locale : locales) {\n-            for (Object component : components) {\n-                dto.setComponent(((String) component).trim());\n-                dto.setLocale(LocaleUtility.fmtToMappedLocale((String) locale).toString().trim());\n-                Map<String, String> retMap = new ComponentService(dto).getMessages().getCachedData();\n-                if (retMap != null) {\n-                    list.add(retMap);\n+        Map<String, String> locales = this.getLanguages(VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n+        List<String> components = this.getComponents(VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n+        if (locales != null) {\n+            for (String languageTag : locales.keySet()) {\n+                for (Object component : components) {\n+                    dto.setComponent(((String) component).trim());\n+                    dto.setLocale(LocaleUtility.fmtToMappedLocale(Locale.forLanguageTag(languageTag)).toString().trim());\n+                    dto.setProductID(VIPCfg.getInstance().getProductName());\n+                    dto.setVersion(VIPCfg.getInstance().getVersion());\n+                    Map<String, String> retMap = new ComponentService(dto).getMessages().getCachedData();\n+                    if (retMap != null) {\n+                        list.add(retMap);\n+                    }\n                 }\n             }\n         }\n         return list;\n     }\n+\n+    private Map<String, String> getLanguages(Iterator<DataSourceEnum> msgSourceQueueIter) {\n+        if (!msgSourceQueueIter.hasNext())\n+            return null;\n+\n+        DataSourceEnum dataSource = msgSourceQueueIter.next();\n+        LocaleOpt opt = dataSource.createLocaleOpt();\n+        Map<String, String> languages =  opt.getLanguages(LocaleUtility.getDefaultLocale().toLanguageTag());\n+        // If failed to get languages from the data source\n+        if (languages == null) {\n+            // Try the next dataSource in the queue\n+            if (msgSourceQueueIter.hasNext()) {\n+                languages = getLanguages(msgSourceQueueIter);\n+                // If no more data source in queue, log the error. This means that neither online nor offline fetch succeeded.\n+            } else {\n+                logger.error(FormatUtils.format(ConstantsMsg.GET_LANGUAGES_FAILED, dataSource.toString()));\n+            }\n+        }\n+        return languages;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13b694a1a12048760e0a8dd3980ddb585c71a9a"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ3NzI4OQ==", "bodyText": "Now client supports multiple configurations, VIPCfg.getInstance() gets only one product. It isn't correct.", "url": "https://github.com/vmware/singleton/pull/673#discussion_r456477289", "createdAt": "2020-07-17T14:27:22Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ProductService.java", "diffHunk": "@@ -44,23 +56,63 @@ public JSONArray getSupportedLocalesFromRemoteVIP() {\n \n     public List<Map> getAllComponentTranslation() {\n         List<Map> list = new ArrayList<Map>();\n-        Object[] locales = {};\n-        Object[] components = {};\n-        if (VIPCfg.getInstance().getMessageOrigin() == DataSourceEnum.VIP) {\n-            locales = this.getSupportedLocalesFromRemoteVIP().toArray();\n-            components = this.getComponentsFromRemoteVIP()\n-                    .toArray();\n-        }\n-        for (Object locale : locales) {\n-            for (Object component : components) {\n-                dto.setComponent(((String) component).trim());\n-                dto.setLocale(LocaleUtility.fmtToMappedLocale((String) locale).toString().trim());\n-                Map<String, String> retMap = new ComponentService(dto).getMessages().getCachedData();\n-                if (retMap != null) {\n-                    list.add(retMap);\n+        Map<String, String> locales = this.getLanguages(VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n+        List<String> components = this.getComponents(VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n+        if (locales != null) {\n+            for (String languageTag : locales.keySet()) {\n+                for (Object component : components) {\n+                    dto.setComponent(((String) component).trim());\n+                    dto.setLocale(LocaleUtility.fmtToMappedLocale(Locale.forLanguageTag(languageTag)).toString().trim());\n+                    dto.setProductID(VIPCfg.getInstance().getProductName());\n+                    dto.setVersion(VIPCfg.getInstance().getVersion());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13b694a1a12048760e0a8dd3980ddb585c71a9a"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNDQ0MjI4", "url": "https://github.com/vmware/singleton/pull/673#pullrequestreview-451444228", "createdAt": "2020-07-20T09:30:17Z", "commit": {"oid": "e13b694a1a12048760e0a8dd3980ddb585c71a9a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwOTozMDoxN1rOG0CdMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwOTozMDoxN1rOG0CdMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIxOTM3OA==", "bodyText": "Need to add an interface to get supported locales. supported locales have nothing to do with displayLanguage. They are from names of bundle files.", "url": "https://github.com/vmware/singleton/pull/673#discussion_r457219378", "createdAt": "2020-07-20T09:30:17Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/base/DataSourceEnum.java", "diffHunk": "@@ -34,7 +43,13 @@ public MessageOpt createMessageOpt(MessagesDTO dto) {\n \t\tpublic LocaleOpt createLocaleOpt() {\n \t\t\treturn new RemoteLocaleOpt();\n \t\t}\n+\n+        @Override\n+        public ComponentOpt createComponentOpt(BaseDTO dto) {\n+            return new RemoteComponentOpt(dto);\n+        }\n     };\n     public abstract MessageOpt createMessageOpt(MessagesDTO dto);\n     public abstract LocaleOpt createLocaleOpt();\n+    public abstract ComponentOpt createComponentOpt(BaseDTO dto);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13b694a1a12048760e0a8dd3980ddb585c71a9a"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1f70b37b1a34a89d9550dd1fc270d2c63d9ad79", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/f1f70b37b1a34a89d9550dd1fc270d2c63d9ad79", "committedDate": "2020-07-20T16:49:34Z", "message": "Update src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalComponentOpt.java\n\nCo-authored-by: Xiaochao Li <48587632+Xiaochao8@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe535dc2d54452de5ff4b9278eee82c517d296eb", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/fe535dc2d54452de5ff4b9278eee82c517d296eb", "committedDate": "2020-07-20T16:57:53Z", "message": "Update src/main/java/com/vmware/vipclient/i18n/messages/service/ProductService.java\n\nCo-authored-by: Xiaochao Li <48587632+Xiaochao8@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d22b9ff0cee55c40c0e264da3e8d57b959aedf3", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/0d22b9ff0cee55c40c0e264da3e8d57b959aedf3", "committedDate": "2020-07-20T17:04:33Z", "message": "changes after code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48707824a91ca35fd409f77bc866da11257100dc", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/48707824a91ca35fd409f77bc866da11257100dc", "committedDate": "2020-07-20T20:26:01Z", "message": "changes after code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f451436e3ba3b202fff3c53eab23f9bb82b57eeb", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/f451436e3ba3b202fff3c53eab23f9bb82b57eeb", "committedDate": "2020-07-22T22:39:34Z", "message": "fix for issues: 664, 662, 686"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89d7b0d9e8e8f90037bf46d09ef705ad7cb9389c", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/89d7b0d9e8e8f90037bf46d09ef705ad7cb9389c", "committedDate": "2020-07-23T21:22:32Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec6e6932a4b8770af6030f604dcc32f2b1a619c3", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/ec6e6932a4b8770af6030f604dcc32f2b1a619c3", "committedDate": "2020-07-24T01:12:24Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65f1d08c41daa07b08508b98274d86b49f3dc766", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/65f1d08c41daa07b08508b98274d86b49f3dc766", "committedDate": "2020-07-24T01:16:46Z", "message": "Adding LocaleDTO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60fb3b3e00b77c5f4147709e93fa798f7c0f8961", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/60fb3b3e00b77c5f4147709e93fa798f7c0f8961", "committedDate": "2020-07-24T19:51:46Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/a698f202047d29cd793d87cd5718b4cb691ed2ec", "committedDate": "2020-07-24T19:55:27Z", "message": "code clean up"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MzgwMjk1", "url": "https://github.com/vmware/singleton/pull/673#pullrequestreview-456380295", "createdAt": "2020-07-28T07:43:34Z", "commit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzo0MzozNFrOG4Aj8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzo1NTo1OFrOG4A_7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM4MjY0MA==", "bodyText": "As an interface, users don't need to know msgSourceQueueIter.", "url": "https://github.com/vmware/singleton/pull/673#discussion_r461382640", "createdAt": "2020-07-28T07:43:34Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ProductService.java", "diffHunk": "@@ -42,25 +55,56 @@ public JSONArray getSupportedLocalesFromRemoteVIP() {\n         return dao.getSupportedLocalesFromRemoteVIP();\n     }\n \n+    /**\n+     * Retrieves translated messages of all components of a product in the requested locale (See the dto object).\n+     *\n+     * @return translated messages of all components of a product locale specified in the dto object\n+     */\n     public List<Map> getAllComponentTranslation() {\n         List<Map> list = new ArrayList<Map>();\n-        Object[] locales = {};\n-        Object[] components = {};\n-        if (VIPCfg.getInstance().getMessageOrigin() == DataSourceEnum.VIP) {\n-            locales = this.getSupportedLocalesFromRemoteVIP().toArray();\n-            components = this.getComponentsFromRemoteVIP()\n-                    .toArray();\n-        }\n-        for (Object locale : locales) {\n-            for (Object component : components) {\n-                dto.setComponent(((String) component).trim());\n-                dto.setLocale(LocaleUtility.fmtToMappedLocale((String) locale).toString().trim());\n-                Map<String, String> retMap = new ComponentService(dto).getMessages().getCachedData();\n-                if (retMap != null) {\n-                    list.add(retMap);\n+        LocaleDTO localeDTO = new LocaleDTO(dto.getProductID(), dto.getVersion());\n+        Map<String, String> locales = new LocaleService(localeDTO).getSupportedLanguages();\n+        List<String> components = this.getComponents(VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n+        if (locales != null) {\n+            for (String languageTag : locales.keySet()) {\n+                for (Object component : components) {\n+                    MessagesDTO msgDTO = new MessagesDTO(((String) component).trim(), LocaleUtility.fmtToMappedLocale(Locale.forLanguageTag(languageTag)).toString().trim(),\n+                            dto.getProductID(), dto.getVersion());\n+                    Iterator<Locale> fallbackLocalesIter = LocaleUtility.getFallbackLocales().iterator();\n+                    Map<String, String> retMap = new ComponentService(msgDTO).getMessages(fallbackLocalesIter).getCachedData();\n+                    if (retMap != null) {\n+                        list.add(retMap);\n+                    }\n                 }\n             }\n         }\n         return list;\n     }\n+\n+    /**\n+     * Retrieves the list of components of a product. It recursively applies data source fallback mechanism in case of failure.\n+     *\n+     * @param msgSourceQueueIter Iterator of DataSourceEnum sources\n+     * @return list of components of the product specified in the dto object\n+     */\n+    public List<String> getComponents (Iterator<DataSourceEnum> msgSourceQueueIter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM4MzQ4Mg==", "bodyText": "This interface should belong to productService. Does a locale support any languages?", "url": "https://github.com/vmware/singleton/pull/673#discussion_r461383482", "createdAt": "2020-07-28T07:45:02Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/LocaleService.java", "diffHunk": "@@ -4,28 +4,115 @@\n  */\n package com.vmware.vipclient.i18n.messages.service;\n \n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.ListIterator;\n-import java.util.Map;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import java.util.*;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.FutureTask;\n \n import com.vmware.vipclient.i18n.VIPCfg;\n import com.vmware.vipclient.i18n.base.DataSourceEnum;\n import com.vmware.vipclient.i18n.base.cache.Cache;\n import com.vmware.vipclient.i18n.base.cache.FormatCacheItem;\n+import com.vmware.vipclient.i18n.common.ConstantsMsg;\n import com.vmware.vipclient.i18n.messages.api.opt.server.RemoteLocaleOpt;\n+import com.vmware.vipclient.i18n.messages.dto.LocaleDTO;\n+import com.vmware.vipclient.i18n.util.FormatUtils;\n import com.vmware.vipclient.i18n.util.JSONUtils;\n+import com.vmware.vipclient.i18n.util.LocaleUtility;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class LocaleService {\n-\n-    Logger                      logger        = LoggerFactory.getLogger(LocaleService.class.getName());\n+    Logger logger = LoggerFactory.getLogger(LocaleService.class.getName());\n     private static final String REGION_PREFIX = \"region_\";\n     public static final String DISPN_PREFIX  = \"dispn_\";\n+    private LocaleDTO dto;\n \n     public LocaleService() {\n+\n+    }\n+    public LocaleService(LocaleDTO dto) {\n+        this.dto = dto;\n+    }\n+\n+    public Map<String, String> getSupportedLanguages() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM4NTA1NQ==", "bodyText": "This interface should belong to productService. Does a locale support any languages?", "url": "https://github.com/vmware/singleton/pull/673#discussion_r461385055", "createdAt": "2020-07-28T07:47:50Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/LocaleService.java", "diffHunk": "@@ -4,28 +4,115 @@\n  */\n package com.vmware.vipclient.i18n.messages.service;\n \n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.ListIterator;\n-import java.util.Map;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import java.util.*;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.FutureTask;\n \n import com.vmware.vipclient.i18n.VIPCfg;\n import com.vmware.vipclient.i18n.base.DataSourceEnum;\n import com.vmware.vipclient.i18n.base.cache.Cache;\n import com.vmware.vipclient.i18n.base.cache.FormatCacheItem;\n+import com.vmware.vipclient.i18n.common.ConstantsMsg;\n import com.vmware.vipclient.i18n.messages.api.opt.server.RemoteLocaleOpt;\n+import com.vmware.vipclient.i18n.messages.dto.LocaleDTO;\n+import com.vmware.vipclient.i18n.util.FormatUtils;\n import com.vmware.vipclient.i18n.util.JSONUtils;\n+import com.vmware.vipclient.i18n.util.LocaleUtility;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class LocaleService {\n-\n-    Logger                      logger        = LoggerFactory.getLogger(LocaleService.class.getName());\n+    Logger logger = LoggerFactory.getLogger(LocaleService.class.getName());\n     private static final String REGION_PREFIX = \"region_\";\n     public static final String DISPN_PREFIX  = \"dispn_\";\n+    private LocaleDTO dto;\n \n     public LocaleService() {\n+\n+    }\n+    public LocaleService(LocaleDTO dto) {\n+        this.dto = dto;\n+    }\n+\n+    public Map<String, String> getSupportedLanguages() {\n+        return getSupportedLanguages(null, LocaleUtility.getFallbackLocales().iterator());\n+    }\n+\n+    public Map<String, String> getSupportedLanguages(Iterator<Locale> fallbackLocalesIter) {\n+        return getSupportedLanguages(null, fallbackLocalesIter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM4NTMwNA==", "bodyText": "This interface should belong to productService. Does a locale support any languages?\nAlso, fallbackLoclesIter should be remove from parameters.\nUsers don't need to know fallbackLoclesIter, please handle it in the method.", "url": "https://github.com/vmware/singleton/pull/673#discussion_r461385304", "createdAt": "2020-07-28T07:48:18Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/LocaleService.java", "diffHunk": "@@ -4,28 +4,115 @@\n  */\n package com.vmware.vipclient.i18n.messages.service;\n \n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.ListIterator;\n-import java.util.Map;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import java.util.*;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.FutureTask;\n \n import com.vmware.vipclient.i18n.VIPCfg;\n import com.vmware.vipclient.i18n.base.DataSourceEnum;\n import com.vmware.vipclient.i18n.base.cache.Cache;\n import com.vmware.vipclient.i18n.base.cache.FormatCacheItem;\n+import com.vmware.vipclient.i18n.common.ConstantsMsg;\n import com.vmware.vipclient.i18n.messages.api.opt.server.RemoteLocaleOpt;\n+import com.vmware.vipclient.i18n.messages.dto.LocaleDTO;\n+import com.vmware.vipclient.i18n.util.FormatUtils;\n import com.vmware.vipclient.i18n.util.JSONUtils;\n+import com.vmware.vipclient.i18n.util.LocaleUtility;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class LocaleService {\n-\n-    Logger                      logger        = LoggerFactory.getLogger(LocaleService.class.getName());\n+    Logger logger = LoggerFactory.getLogger(LocaleService.class.getName());\n     private static final String REGION_PREFIX = \"region_\";\n     public static final String DISPN_PREFIX  = \"dispn_\";\n+    private LocaleDTO dto;\n \n     public LocaleService() {\n+\n+    }\n+    public LocaleService(LocaleDTO dto) {\n+        this.dto = dto;\n+    }\n+\n+    public Map<String, String> getSupportedLanguages() {\n+        return getSupportedLanguages(null, LocaleUtility.getFallbackLocales().iterator());\n+    }\n+\n+    public Map<String, String> getSupportedLanguages(Iterator<Locale> fallbackLocalesIter) {\n+        return getSupportedLanguages(null, fallbackLocalesIter);\n+    }\n+\n+    public Map<String, String> getSupportedLanguages(String displayLanguageTag, Iterator<Locale> fallbackLocalesIter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM4OTgwNw==", "bodyText": "LocaleDTO should have a locale name as its attribute.\nShouldn't have product name and version. They are about translation.\nLocale related data include pattern data, locale data, doesn't include translation.", "url": "https://github.com/vmware/singleton/pull/673#discussion_r461389807", "createdAt": "2020-07-28T07:55:58Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/dto/LocaleDTO.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Copyright 2019 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.i18n.messages.dto;\n+\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class LocaleDTO extends BaseDTO {\n+    Logger logger = LoggerFactory.getLogger(LocaleDTO.class);\n+\n+    public LocaleDTO() {\n+        super.setProductID(VIPCfg.getInstance().getProductName());\n+        super.setVersion(VIPCfg.getInstance().getVersion());\n+    }\n+    public LocaleDTO(String productName, String version) {\n+        this.setProductID(productName);\n+        this.setVersion(version);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2NDQxMjY0", "url": "https://github.com/vmware/singleton/pull/673#pullrequestreview-456441264", "createdAt": "2020-07-28T09:04:01Z", "commit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2NDc5MTE0", "url": "https://github.com/vmware/singleton/pull/673#pullrequestreview-456479114", "createdAt": "2020-07-28T09:52:57Z", "commit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOTo1Mjo1N1rOG4FWww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo1NDo1N1rOG4HTaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ2MTE4Nw==", "bodyText": "I see you write new method to get componet list, this method isn't exposed to user, why not remove it?", "url": "https://github.com/vmware/singleton/pull/673#discussion_r461461187", "createdAt": "2020-07-28T09:52:57Z", "author": {"login": "huihuiw01"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ProductService.java", "diffHunk": "@@ -4,27 +4,36 @@\n  */\n package com.vmware.vipclient.i18n.messages.service;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Map;\n-\n-import org.json.simple.JSONArray;\n+import java.util.*;\n \n import com.vmware.vipclient.i18n.VIPCfg;\n import com.vmware.vipclient.i18n.base.DataSourceEnum;\n+import com.vmware.vipclient.i18n.common.ConstantsMsg;\n+import com.vmware.vipclient.i18n.messages.api.opt.ComponentOpt;\n import com.vmware.vipclient.i18n.messages.api.opt.server.ProductBasedOpt;\n import com.vmware.vipclient.i18n.messages.dto.BaseDTO;\n+import com.vmware.vipclient.i18n.messages.dto.LocaleDTO;\n import com.vmware.vipclient.i18n.messages.dto.MessagesDTO;\n+import com.vmware.vipclient.i18n.util.FormatUtils;\n import com.vmware.vipclient.i18n.util.LocaleUtility;\n+import org.json.simple.JSONArray;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ProductService {\n-    private MessagesDTO dto = null;\n+    private BaseDTO dto = null;\n+    Logger logger = LoggerFactory.getLogger(ProductService.class);\n \n-    public ProductService(MessagesDTO dto) {\n+    public ProductService(BaseDTO dto) {\n         this.dto = dto;\n     }\n \n-    // get supported components defined in vip service\n+    /**\n+     * get supported components defined in vip service\n+     * @return JSONArray\n+     * @deprecated Replaced by {@link #getComponents(Iterator<>)}\n+     */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ2MjA5OA==", "bodyText": "This method isn't exposed to user, why not remove it?", "url": "https://github.com/vmware/singleton/pull/673#discussion_r461462098", "createdAt": "2020-07-28T09:54:34Z", "author": {"login": "huihuiw01"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ProductService.java", "diffHunk": "@@ -33,7 +42,11 @@ public JSONArray getComponentsFromRemoteVIP() {\n         return dao.getComponentsFromRemoteVIP();\n     }\n \n-    // get supported locales defined in vip service\n+    /**\n+     * get supported locales defined in vip service\n+     * @deprecated Replaced by {@link com.vmware.vipclient.i18n.messages.service.LocaleService#getSupportedLanguages(Iterator<>)}\n+     */\n+    @Deprecated\n     public JSONArray getSupportedLocalesFromRemoteVIP() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ3MDcxMQ==", "bodyText": "Refer to the comments xiaochao added to my PR, the fallback logic should move to a new method, thus one method is for getting exact translation(without fallback),  another is for getting translation with fallback.", "url": "https://github.com/vmware/singleton/pull/673#discussion_r461470711", "createdAt": "2020-07-28T10:10:15Z", "author": {"login": "huihuiw01"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -43,57 +43,65 @@ private void fetchMessages(final MessageCacheItem cacheItem, Iterator<DataSource\n     \t\treturn;\n     \t\n     \tlong timestampOld = cacheItem.getTimestamp();\n-    \tDataSourceEnum dataSource = (DataSourceEnum) msgSourceQueueIter.next();\n+    \tDataSourceEnum dataSource = msgSourceQueueIter.next();\n     \tdataSource.createMessageOpt(dto).getComponentMessages(cacheItem);\n-    \tlong timestampNew = cacheItem.getTimestamp();\n+    \tlong timestamp = cacheItem.getTimestamp();\n+    \tif (timestampOld == timestamp) {\n+    \t\tlogger.debug(FormatUtils.format(ConstantsMsg.GET_MESSAGES_FAILED, dto.getComponent(), dto.getLocale(), dataSource.toString()));\n+    \t}\n     \t\n-    \t// If failed to get messages from the data source\n-    \tif (timestampNew == timestampOld) {\n+    \t// Skip this block if timestamp is not 0 (which means cacheItem is in the cache) regardless if cacheItem is expired or not.\n+    \t// Otherwise, try the next dataSource in the queue.\n+    \tif (timestamp == 0) {\n     \t\t// Try the next dataSource in the queue\n     \t\tif (msgSourceQueueIter.hasNext()) {\n     \t\t\tfetchMessages(cacheItem, msgSourceQueueIter);\n     \t\t// If no more data source in queue, log the error. This means that neither online nor offline fetch succeeded.\n     \t\t} else {\n-    \t\t\tlogger.error(FormatUtils.format(ConstantsMsg.GET_MESSAGES_FAILED, dto.getComponent(), dto.getLocale(), dataSource.toString()));\n+    \t\t\tlogger.debug(FormatUtils.format(ConstantsMsg.GET_MESSAGES_FAILED_ALL, dto.getComponent(), dto.getLocale()));\n     \t\t}\n     \t}\n     }\n     \n     /**\n      * Get messages from cache\n      */\n-    public MessageCacheItem getMessages() {\n+    public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n-    \tMap<String, String> cacheOfComponent = null;\n     \tMessageCacheItem cacheItem = null;\n     \tif (cacheService.isContainComponent()) { // Item is in cache\n     \t\tcacheItem = cacheService.getCacheOfComponent();\n-    \t\tcacheOfComponent = cacheItem.getCachedData();\n     \t\tif (cacheItem.isExpired()) { // cacheItem has expired\n     \t\t\t// Update the cache in a separate thread\n-    \t\t\tpopulateCacheTask(cacheItem); \t\t\n+    \t\t\tpopulateCacheTask(cacheItem);\n     \t\t}\n     \t} else { // Item is not in cache\n     \t\t// Create a new cacheItem object to be stored in cache\n-    \t\tcacheItem = new MessageCacheItem();  \n+    \t\tcacheItem = new MessageCacheItem();\n     \t\tfetchMessages(cacheItem, VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n-    \t\tcacheOfComponent = cacheItem.getCachedData();\n+    \t\tlong timestamp = cacheItem.getTimestamp();\n     \t\t\n-    \t\tif (cacheOfComponent != null && !cacheOfComponent.isEmpty()) {\n-    \t\t\tcacheService.addCacheOfComponent(cacheItem);\n-    \t\t}\n-    \t} \n+    \t\tif(!dto.getLocale().equals(ConstantsKeys.SOURCE)) {\n+    \t\t\t// If failed to fetch message, use MessageCacheItem of the next fallback locale.\n+    \t\t\tif (timestamp == 0 && fallbackLocalesIter.hasNext()) {\n+    \t\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), fallbackLocalesIter.next().toLanguageTag(), dto.getProductID(), dto.getVersion());\n+    \t\t\t\tcacheItem = new ComponentService(fallbackLocaleDTO).getMessages(fallbackLocalesIter);\n+    \t\t\t}\n+\t\t\t\tif (!cacheItem.getCachedData().isEmpty()) {\n+\t\t\t\t\tcacheService.addCacheOfComponent(cacheItem);\n+\t\t\t\t}\n+\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ4NzUzOQ==", "bodyText": "I see you re-implement getComponents in new classes RemoteComponentOpt and LocalComponentOpt, why not re-implement in this class directly, since this method is not exposed to user, you can change it freely; and in Singleton service side, componentlist API is put under product.\nIn my PR\uff0cI put it this method in ProductOpt, so we need reach agreement about this, or there will be duplicate/conflict code.", "url": "https://github.com/vmware/singleton/pull/673#discussion_r461487539", "createdAt": "2020-07-28T10:43:47Z", "author": {"login": "huihuiw01"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/server/ProductBasedOpt.java", "diffHunk": "@@ -6,29 +6,30 @@\n \n import java.util.Map;\n \n-import org.json.simple.JSONArray;\n-\n import com.vmware.vipclient.i18n.VIPCfg;\n import com.vmware.vipclient.i18n.messages.api.opt.BaseOpt;\n import com.vmware.vipclient.i18n.messages.api.opt.Opt;\n import com.vmware.vipclient.i18n.messages.api.url.URLUtils;\n import com.vmware.vipclient.i18n.messages.api.url.V2URL;\n import com.vmware.vipclient.i18n.messages.dto.BaseDTO;\n import com.vmware.vipclient.i18n.util.ConstantsKeys;\n+import org.json.simple.JSONArray;\n \n+@Deprecated\n public class ProductBasedOpt extends BaseOpt implements Opt {\n     private BaseDTO dto = null;\n \n     public ProductBasedOpt(BaseDTO dto) {\n         this.dto = dto;\n     }\n \n-    /*\n+    /**\n      * get supported components from vip(non-Javadoc)\n      * \n      * @see com.vmware.vipclient.i18n.messages.dao.IComponentDao#getComponents()\n+     * @Deprecated Replaced by {@link com.vmware.vipclient.i18n.messages.api.opt.server.RemoteComponentOpt#getComponents()}\n      */\n-    public JSONArray getComponentsFromRemoteVIP() {\n+    @Deprecated public JSONArray getComponentsFromRemoteVIP() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ5MzA5OQ==", "bodyText": "on Singleton service side, componentlist API is put under product, so is it better rename the class name as 'ProductOpt'?", "url": "https://github.com/vmware/singleton/pull/673#discussion_r461493099", "createdAt": "2020-07-28T10:54:57Z", "author": {"login": "huihuiw01"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/ComponentOpt.java", "diffHunk": "@@ -0,0 +1,11 @@\n+/*\n+ * Copyright 2019 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.i18n.messages.api.opt;\n+\n+import java.util.List;\n+\n+public interface ComponentOpt {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MTQxOTY5", "url": "https://github.com/vmware/singleton/pull/673#pullrequestreview-457141969", "createdAt": "2020-07-29T01:53:30Z", "commit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MTg3Njg3", "url": "https://github.com/vmware/singleton/pull/673#pullrequestreview-457187687", "createdAt": "2020-07-29T04:35:07Z", "commit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDozNTowN1rOG4oONg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNToxMDowMVrOG4oybA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAzMjQzOA==", "bodyText": "Please don't fallback locale. Don't change the behavior of an existing interface", "url": "https://github.com/vmware/singleton/pull/673#discussion_r462032438", "createdAt": "2020-07-29T04:35:07Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/base/instances/TranslationMessage.java", "diffHunk": "@@ -303,7 +275,8 @@ public boolean postString(final Locale locale, final String component,\n             dto.setVersion(this.cfg.getVersion());\n         }\n         ComponentService cs = new ComponentService(dto);\n-        return cs.getMessages().getCachedData();\n+        Iterator<Locale> fallbackLocalesIter = LocaleUtility.getFallbackLocales().iterator();\n+        return cs.getMessages(fallbackLocalesIter).getCachedData();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAzODkwOQ==", "bodyText": "Move this into the below if block because it's only used there.", "url": "https://github.com/vmware/singleton/pull/673#discussion_r462038909", "createdAt": "2020-07-29T04:59:40Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -43,57 +43,65 @@ private void fetchMessages(final MessageCacheItem cacheItem, Iterator<DataSource\n     \t\treturn;\n     \t\n     \tlong timestampOld = cacheItem.getTimestamp();\n-    \tDataSourceEnum dataSource = (DataSourceEnum) msgSourceQueueIter.next();\n+    \tDataSourceEnum dataSource = msgSourceQueueIter.next();\n     \tdataSource.createMessageOpt(dto).getComponentMessages(cacheItem);\n-    \tlong timestampNew = cacheItem.getTimestamp();\n+    \tlong timestamp = cacheItem.getTimestamp();\n+    \tif (timestampOld == timestamp) {\n+    \t\tlogger.debug(FormatUtils.format(ConstantsMsg.GET_MESSAGES_FAILED, dto.getComponent(), dto.getLocale(), dataSource.toString()));\n+    \t}\n     \t\n-    \t// If failed to get messages from the data source\n-    \tif (timestampNew == timestampOld) {\n+    \t// Skip this block if timestamp is not 0 (which means cacheItem is in the cache) regardless if cacheItem is expired or not.\n+    \t// Otherwise, try the next dataSource in the queue.\n+    \tif (timestamp == 0) {\n     \t\t// Try the next dataSource in the queue\n     \t\tif (msgSourceQueueIter.hasNext()) {\n     \t\t\tfetchMessages(cacheItem, msgSourceQueueIter);\n     \t\t// If no more data source in queue, log the error. This means that neither online nor offline fetch succeeded.\n     \t\t} else {\n-    \t\t\tlogger.error(FormatUtils.format(ConstantsMsg.GET_MESSAGES_FAILED, dto.getComponent(), dto.getLocale(), dataSource.toString()));\n+    \t\t\tlogger.debug(FormatUtils.format(ConstantsMsg.GET_MESSAGES_FAILED_ALL, dto.getComponent(), dto.getLocale()));\n     \t\t}\n     \t}\n     }\n     \n     /**\n      * Get messages from cache\n      */\n-    public MessageCacheItem getMessages() {\n+    public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n-    \tMap<String, String> cacheOfComponent = null;\n     \tMessageCacheItem cacheItem = null;\n     \tif (cacheService.isContainComponent()) { // Item is in cache\n     \t\tcacheItem = cacheService.getCacheOfComponent();\n-    \t\tcacheOfComponent = cacheItem.getCachedData();\n     \t\tif (cacheItem.isExpired()) { // cacheItem has expired\n     \t\t\t// Update the cache in a separate thread\n-    \t\t\tpopulateCacheTask(cacheItem); \t\t\n+    \t\t\tpopulateCacheTask(cacheItem);\n     \t\t}\n     \t} else { // Item is not in cache\n     \t\t// Create a new cacheItem object to be stored in cache\n-    \t\tcacheItem = new MessageCacheItem();  \n+    \t\tcacheItem = new MessageCacheItem();\n     \t\tfetchMessages(cacheItem, VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n-    \t\tcacheOfComponent = cacheItem.getCachedData();\n+    \t\tlong timestamp = cacheItem.getTimestamp();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAzOTM4NA==", "bodyText": "If cacheItem.getCachedData().isEmpty() is false, should it return directly?", "url": "https://github.com/vmware/singleton/pull/673#discussion_r462039384", "createdAt": "2020-07-29T05:01:22Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -43,57 +43,65 @@ private void fetchMessages(final MessageCacheItem cacheItem, Iterator<DataSource\n     \t\treturn;\n     \t\n     \tlong timestampOld = cacheItem.getTimestamp();\n-    \tDataSourceEnum dataSource = (DataSourceEnum) msgSourceQueueIter.next();\n+    \tDataSourceEnum dataSource = msgSourceQueueIter.next();\n     \tdataSource.createMessageOpt(dto).getComponentMessages(cacheItem);\n-    \tlong timestampNew = cacheItem.getTimestamp();\n+    \tlong timestamp = cacheItem.getTimestamp();\n+    \tif (timestampOld == timestamp) {\n+    \t\tlogger.debug(FormatUtils.format(ConstantsMsg.GET_MESSAGES_FAILED, dto.getComponent(), dto.getLocale(), dataSource.toString()));\n+    \t}\n     \t\n-    \t// If failed to get messages from the data source\n-    \tif (timestampNew == timestampOld) {\n+    \t// Skip this block if timestamp is not 0 (which means cacheItem is in the cache) regardless if cacheItem is expired or not.\n+    \t// Otherwise, try the next dataSource in the queue.\n+    \tif (timestamp == 0) {\n     \t\t// Try the next dataSource in the queue\n     \t\tif (msgSourceQueueIter.hasNext()) {\n     \t\t\tfetchMessages(cacheItem, msgSourceQueueIter);\n     \t\t// If no more data source in queue, log the error. This means that neither online nor offline fetch succeeded.\n     \t\t} else {\n-    \t\t\tlogger.error(FormatUtils.format(ConstantsMsg.GET_MESSAGES_FAILED, dto.getComponent(), dto.getLocale(), dataSource.toString()));\n+    \t\t\tlogger.debug(FormatUtils.format(ConstantsMsg.GET_MESSAGES_FAILED_ALL, dto.getComponent(), dto.getLocale()));\n     \t\t}\n     \t}\n     }\n     \n     /**\n      * Get messages from cache\n      */\n-    public MessageCacheItem getMessages() {\n+    public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n-    \tMap<String, String> cacheOfComponent = null;\n     \tMessageCacheItem cacheItem = null;\n     \tif (cacheService.isContainComponent()) { // Item is in cache\n     \t\tcacheItem = cacheService.getCacheOfComponent();\n-    \t\tcacheOfComponent = cacheItem.getCachedData();\n     \t\tif (cacheItem.isExpired()) { // cacheItem has expired\n     \t\t\t// Update the cache in a separate thread\n-    \t\t\tpopulateCacheTask(cacheItem); \t\t\n+    \t\t\tpopulateCacheTask(cacheItem);\n     \t\t}\n     \t} else { // Item is not in cache\n     \t\t// Create a new cacheItem object to be stored in cache\n-    \t\tcacheItem = new MessageCacheItem();  \n+    \t\tcacheItem = new MessageCacheItem();\n     \t\tfetchMessages(cacheItem, VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n-    \t\tcacheOfComponent = cacheItem.getCachedData();\n+    \t\tlong timestamp = cacheItem.getTimestamp();\n     \t\t\n-    \t\tif (cacheOfComponent != null && !cacheOfComponent.isEmpty()) {\n-    \t\t\tcacheService.addCacheOfComponent(cacheItem);\n-    \t\t}\n-    \t} \n+    \t\tif(!dto.getLocale().equals(ConstantsKeys.SOURCE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA0MDM3Nw==", "bodyText": "It's unnecessary to do local fallback here because the locales used here are supported no doubt.", "url": "https://github.com/vmware/singleton/pull/673#discussion_r462040377", "createdAt": "2020-07-29T05:05:09Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ProductService.java", "diffHunk": "@@ -42,25 +55,56 @@ public JSONArray getSupportedLocalesFromRemoteVIP() {\n         return dao.getSupportedLocalesFromRemoteVIP();\n     }\n \n+    /**\n+     * Retrieves translated messages of all components of a product in the requested locale (See the dto object).\n+     *\n+     * @return translated messages of all components of a product locale specified in the dto object\n+     */\n     public List<Map> getAllComponentTranslation() {\n         List<Map> list = new ArrayList<Map>();\n-        Object[] locales = {};\n-        Object[] components = {};\n-        if (VIPCfg.getInstance().getMessageOrigin() == DataSourceEnum.VIP) {\n-            locales = this.getSupportedLocalesFromRemoteVIP().toArray();\n-            components = this.getComponentsFromRemoteVIP()\n-                    .toArray();\n-        }\n-        for (Object locale : locales) {\n-            for (Object component : components) {\n-                dto.setComponent(((String) component).trim());\n-                dto.setLocale(LocaleUtility.fmtToMappedLocale((String) locale).toString().trim());\n-                Map<String, String> retMap = new ComponentService(dto).getMessages().getCachedData();\n-                if (retMap != null) {\n-                    list.add(retMap);\n+        LocaleDTO localeDTO = new LocaleDTO(dto.getProductID(), dto.getVersion());\n+        Map<String, String> locales = new LocaleService(localeDTO).getSupportedLanguages();\n+        List<String> components = this.getComponents(VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n+        if (locales != null) {\n+            for (String languageTag : locales.keySet()) {\n+                for (Object component : components) {\n+                    MessagesDTO msgDTO = new MessagesDTO(((String) component).trim(), LocaleUtility.fmtToMappedLocale(Locale.forLanguageTag(languageTag)).toString().trim(),\n+                            dto.getProductID(), dto.getVersion());\n+                    Iterator<Locale> fallbackLocalesIter = LocaleUtility.getFallbackLocales().iterator();\n+                    Map<String, String> retMap = new ComponentService(msgDTO).getMessages(fallbackLocalesIter).getCachedData();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA0MTcwOA==", "bodyText": "Please don't do locale fallback in this method because this will change behavior of existing interface.", "url": "https://github.com/vmware/singleton/pull/673#discussion_r462041708", "createdAt": "2020-07-29T05:10:01Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/StringService.java", "diffHunk": "@@ -33,27 +33,10 @@\n     @SuppressWarnings(\"unchecked\")\n     @Deprecated\n     public String getString(MessagesDTO dto) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a698f202047d29cd793d87cd5718b4cb691ed2ec"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eede3b59f72dcf1733a243545f9b3ed189f0911e", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/eede3b59f72dcf1733a243545f9b3ed189f0911e", "committedDate": "2020-07-31T02:33:48Z", "message": "changes after code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4ODgzNTY0", "url": "https://github.com/vmware/singleton/pull/673#pullrequestreview-458883564", "createdAt": "2020-07-31T02:39:26Z", "commit": {"oid": "eede3b59f72dcf1733a243545f9b3ed189f0911e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4ODk2NTU3", "url": "https://github.com/vmware/singleton/pull/673#pullrequestreview-458896557", "createdAt": "2020-07-31T03:33:56Z", "commit": {"oid": "eede3b59f72dcf1733a243545f9b3ed189f0911e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4c12147f958c5014b8e47959cf216a9db1d380d", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/f4c12147f958c5014b8e47959cf216a9db1d380d", "committedDate": "2020-03-11T00:00:20Z", "message": "Loading configuration from the JSON configuration file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a4d95ef79fc9f4d3a4d2fab03633ab88bcea1e1", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/1a4d95ef79fc9f4d3a4d2fab03633ab88bcea1e1", "committedDate": "2020-03-11T00:54:17Z", "message": "Removing code that is not yet ready to be used from the sample application"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e72b73b497563607e5031d5afa322caffd03fca", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/5e72b73b497563607e5031d5afa322caffd03fca", "committedDate": "2020-03-11T22:01:24Z", "message": "fixing failing code scan\nhttps://sonarcloud.io/project/issues?id=jessiejuachon-java-client-g11n-java-client&issues=AXDG68NFL24bPpi-pS5s&open=AXDG68NFL24bPpi-pS5s\nhttps://sonarcloud.io/project/issues?id=jessiejuachon-java-client-g11n-java-client&issues=AXDG68IGL24bPpi-pS2r&open=AXDG68IGL24bPpi-pS2r\n\nSigned-off-by: Jessie <jessiejuachon@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73d85ca7fca1290a93558fd937afd18dc27e92d6", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/73d85ca7fca1290a93558fd937afd18dc27e92d6", "committedDate": "2020-03-12T07:58:55Z", "message": "Adding a cache properties map to hold cache details such as etag and cache control"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a381070ef1e057fda0b08ca5d65323482273a86", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/2a381070ef1e057fda0b08ca5d65323482273a86", "committedDate": "2020-03-12T08:09:09Z", "message": "Removing white space\n\nSigned-off-by: Jessie <jessiejuachon@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7f5d4f4f741152c0d908c1cd91df60ac1ccc63a", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/c7f5d4f4f741152c0d908c1cd91df60ac1ccc63a", "committedDate": "2020-03-12T09:09:08Z", "message": "Fixing failing unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "056891a79856058bf9af28c44110f588e61eeefc", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/056891a79856058bf9af28c44110f588e61eeefc", "committedDate": "2020-03-12T22:59:17Z", "message": "Parse headers, response code, response message from an HTTP response and return them upstream."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2ba98bd3fbf4ac69a74b1237b5e4db2f92c71cf", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/a2ba98bd3fbf4ac69a74b1237b5e4db2f92c71cf", "committedDate": "2020-03-17T19:30:18Z", "message": "Storing response headers in Map of cache properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17978bd621bc7ee7de27205534568fee986b1d0b", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/17978bd621bc7ee7de27205534568fee986b1d0b", "committedDate": "2020-03-17T22:50:12Z", "message": "Fixing failing unit test due to NullPointerException when doing Map.putAll(null)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c691708a3b9b0a891622a7a96d3d979ff3cb807", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/6c691708a3b9b0a891622a7a96d3d979ff3cb807", "committedDate": "2020-03-17T23:41:27Z", "message": "Changes after code review."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41a8aa1c4afd56cc1042939892a22dbca64adc1d", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/41a8aa1c4afd56cc1042939892a22dbca64adc1d", "committedDate": "2020-03-18T22:09:37Z", "message": "Removing exception handling for now"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd2455d5e68187dd4061b9c71ccd2799480d3d85", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/dd2455d5e68187dd4061b9c71ccd2799480d3d85", "committedDate": "2020-03-19T16:43:36Z", "message": "Deprecating VIPCfg.initialize; cleaning up code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e26d372496ced19785a48b187e3bcdb1c1442ba1", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/e26d372496ced19785a48b187e3bcdb1c1442ba1", "committedDate": "2020-03-20T15:45:46Z", "message": "Storing the http response code in the cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01ab69ee53d5f6f534effc7632ec4324cbe7f4ca", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/01ab69ee53d5f6f534effc7632ec4324cbe7f4ca", "committedDate": "2020-03-25T20:11:07Z", "message": "Using cached etag as if-none-match request header value in the request in order to get a 304 NOT MODIFIED http response"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "750c9d2e6ce8f0ee81c505e8d2e61dfc23871258", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/750c9d2e6ce8f0ee81c505e8d2e61dfc23871258", "committedDate": "2020-03-26T04:04:49Z", "message": "Handling 404 response from Singleton service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "529e5cc756460c5314a09a015caad7f4d26482d9", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/529e5cc756460c5314a09a015caad7f4d26482d9", "committedDate": "2020-03-26T23:38:04Z", "message": "Using HTTP repsonse's Cache-Control max-age and timestamp to dertermine if component locale's cache has expired"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b40fcf9dc23a01cc336b67e7eddea16d85be9817", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/b40fcf9dc23a01cc336b67e7eddea16d85be9817", "committedDate": "2020-03-26T23:49:56Z", "message": "Moving constants to URLUtils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa123f9a1bee0d349ab6c36384288c99e865fb99", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/fa123f9a1bee0d349ab6c36384288c99e865fb99", "committedDate": "2020-03-27T00:07:11Z", "message": "Fixing failing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30b2054bc21a61ecdcecbb74f5a97b7af714682f", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/30b2054bc21a61ecdcecbb74f5a97b7af714682f", "committedDate": "2020-03-27T02:47:23Z", "message": "Fixing failing code scan"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c6978715a6e3856cb9a4e9610ca55ac6bcb1085", "author": {"user": {"login": "Xiaochao8", "name": "Xiaochao Li"}}, "url": "https://github.com/vmware/singleton/commit/0c6978715a6e3856cb9a4e9610ca55ac6bcb1085", "committedDate": "2020-03-27T06:47:07Z", "message": "Merge branch 'g11n-java-client' into g11n-java-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffc0a7468bb258fcc9f498f9a5a51de8f273265d", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/ffc0a7468bb258fcc9f498f9a5a51de8f273265d", "committedDate": "2020-03-30T00:29:34Z", "message": "Cleaning up import in ComponentService,java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8450e444632e849f020704d65106fed11417b0a", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/d8450e444632e849f020704d65106fed11417b0a", "committedDate": "2020-03-30T03:03:20Z", "message": "Cleaning up code - caching/expiry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7f76412d6a2aa6f263c2390cb7ec471d5d2d5e9", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/d7f76412d6a2aa6f263c2390cb7ec471d5d2d5e9", "committedDate": "2020-03-30T03:04:44Z", "message": "Merge branch 'g11n-java-client' of https://github.com/jessiejuachon/singleton into g11n-java-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dcd827a1d49e9639f0a8249f8225f9b9db5e3a9", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/0dcd827a1d49e9639f0a8249f8225f9b9db5e3a9", "committedDate": "2020-03-31T02:51:56Z", "message": "Adding tests for new caching workflow; enabling old caching workflow using cacheExpiredTime config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d06adb3ac3d456f897882ee1af237d29c7f03967", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/d06adb3ac3d456f897882ee1af237d29c7f03967", "committedDate": "2020-03-31T03:16:31Z", "message": "Fixing a failing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48c855873e5585f19152290738e4dbf6f0180b06", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/48c855873e5585f19152290738e4dbf6f0180b06", "committedDate": "2020-03-31T05:37:28Z", "message": "Adding mock server response"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e45bedd128d76023c8089f9194069ea0bf30f6a", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/4e45bedd128d76023c8089f9194069ea0bf30f6a", "committedDate": "2020-03-31T18:55:50Z", "message": "Removing unused file sampleconfig.json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a40dc87413ed76788fc60332b91741137d5e829", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/6a40dc87413ed76788fc60332b91741137d5e829", "committedDate": "2020-03-31T21:46:03Z", "message": "Changes from code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c3c12d4549eac93be3481db3309dea80c6a9e6c", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/4c3c12d4549eac93be3481db3309dea80c6a9e6c", "committedDate": "2020-03-31T23:34:51Z", "message": "Value of VIPCfg.cacheExpiredTime is -1 when value is not set in config file. This means max age from server will be used. Setting VIPCfg.cacheExpiredTime to 0 disables caching."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e0d9392a1b6988cc2e3347d07a1bab7696b82c2", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/7e0d9392a1b6988cc2e3347d07a1bab7696b82c2", "committedDate": "2020-04-02T17:10:51Z", "message": "Changing a LinkedHashMap to a HashMap because insertion order does not need to be maintained."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baef0d06f0facd4fe2383185dc1b7979bba186a7", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/baef0d06f0facd4fe2383185dc1b7979bba186a7", "committedDate": "2020-04-03T05:54:04Z", "message": "Adding CacheItem object to contain map of data and a another map for any other cache properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02a96e9a7dbec8e912f29439334792d7b51069d6", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/02a96e9a7dbec8e912f29439334792d7b51069d6", "committedDate": "2020-04-03T05:59:48Z", "message": "Fixing failing unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78d88f796cb3bd3f015bb1d589717fe6897abc05", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/78d88f796cb3bd3f015bb1d589717fe6897abc05", "committedDate": "2020-04-03T06:14:21Z", "message": "Fixing code scan issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "655c223992bf244c4136a52c636119c9edf605fe", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/655c223992bf244c4136a52c636119c9edf605fe", "committedDate": "2020-04-03T08:36:12Z", "message": "Code cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8746915f5015f497b6956e8f8b743806330cc51c", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/8746915f5015f497b6956e8f8b743806330cc51c", "committedDate": "2020-04-05T17:28:09Z", "message": "Lazily instantiating cacheProps; code clean up and comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "897a03cb27437a33e56cf9d6729bf4c205f1d7ec", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/897a03cb27437a33e56cf9d6729bf4c205f1d7ec", "committedDate": "2020-04-07T03:26:44Z", "message": "Changes after code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a4e18358f37c29502cfdeb60c44b94e63653601", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/3a4e18358f37c29502cfdeb60c44b94e63653601", "committedDate": "2020-04-07T03:36:56Z", "message": "Adding header to CacheItem.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b08feb44ef346d12b3b2bdf6492aae0c6a4aa561", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/b08feb44ef346d12b3b2bdf6492aae0c6a4aa561", "committedDate": "2020-04-07T03:49:29Z", "message": "Fixing code san issue. Synchronize on a final field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f57e243ed1f450349392e990b4502dd74543f91", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/8f57e243ed1f450349392e990b4502dd74543f91", "committedDate": "2020-04-07T04:07:44Z", "message": "Fixing code scan bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72c8799ffbbb23dc61115375cbee52573e792ec9", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/72c8799ffbbb23dc61115375cbee52573e792ec9", "committedDate": "2020-04-07T17:15:34Z", "message": "Changes after code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92edfc88a64c21470fc06c37b65503a6d9042f90", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/92edfc88a64c21470fc06c37b65503a6d9042f90", "committedDate": "2020-04-07T19:15:13Z", "message": "Updating CasheService.isContainComponent to return false if cache key is stored but has a null value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2042554b861d0b97b04a8d29c3a051106e24d8f0", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/2042554b861d0b97b04a8d29c3a051106e24d8f0", "committedDate": "2020-04-08T04:57:56Z", "message": "HttpRequester if-none-match header and other customized headers are added to each specific request locally."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae707fface7ade445bc391f9f0e4125734eeddb1", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/ae707fface7ade445bc391f9f0e4125734eeddb1", "committedDate": "2020-04-08T17:09:39Z", "message": "Code clean up; keep old caching expiration logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82818d5909f1b1e2117f7599993ea50777bd982a", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/82818d5909f1b1e2117f7599993ea50777bd982a", "committedDate": "2020-04-08T21:12:57Z", "message": "Fixing code scan bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31d4ff67cd82cc1c80ddcf31ab6f1f1de32bc8bf", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/31d4ff67cd82cc1c80ddcf31ab6f1f1de32bc8bf", "committedDate": "2020-04-08T21:50:07Z", "message": "Merge branch 'g11n-java-client' into g11n-java-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9f83d7ffe36718af5c54a43acfeabe2d1ab2dca", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/c9f83d7ffe36718af5c54a43acfeabe2d1ab2dca", "committedDate": "2020-04-09T00:13:02Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78dcc1cc7de1700d332c4901ec3f09e546befd26", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/78dcc1cc7de1700d332c4901ec3f09e546befd26", "committedDate": "2020-04-09T07:14:14Z", "message": "Removing response code and response msg from cache; Passing cacheItem object to be updated down the line."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9281c640b3b78d987e1fd865b01f16e4edbfd768", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/9281c640b3b78d987e1fd865b01f16e4edbfd768", "committedDate": "2020-04-10T04:03:05Z", "message": "Changes after code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26577625b3eb13f1f9367f313dd94d47c9113749", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/26577625b3eb13f1f9367f313dd94d47c9113749", "committedDate": "2020-04-10T04:08:23Z", "message": "Adding header to CacheItem.java file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e80f09d4838f9de33bf9dce100744f4832630a0", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/9e80f09d4838f9de33bf9dce100744f4832630a0", "committedDate": "2020-04-10T04:35:16Z", "message": "Fixing failing unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68467f34882da413ed852f2ed4b1394e88bf64b1", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/68467f34882da413ed852f2ed4b1394e88bf64b1", "committedDate": "2020-04-10T23:14:41Z", "message": "Changes after code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d67c72ee939034deb58b99d4fdf0fcc38857c006", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/d67c72ee939034deb58b99d4fdf0fcc38857c006", "committedDate": "2020-04-10T23:28:38Z", "message": "Fixing code scan bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85919738596847c3cd42fd2397226fb498cf6e28", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/85919738596847c3cd42fd2397226fb498cf6e28", "committedDate": "2020-04-13T21:22:27Z", "message": "Not storing anything in cache if response is neither 200 nor 304"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22a5b29a9b5a9c676fac79ae412b1d7ffc5b35de", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/22a5b29a9b5a9c676fac79ae412b1d7ffc5b35de", "committedDate": "2020-04-15T00:36:42Z", "message": "Loading messages from specified offline resource bundles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce2488b8af539a1456959b97e482435b11d5aeff", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/ce2488b8af539a1456959b97e482435b11d5aeff", "committedDate": "2020-04-15T00:43:12Z", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "109296301af054a8def120b98fd7e877acdb465f", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/109296301af054a8def120b98fd7e877acdb465f", "committedDate": "2020-04-15T00:48:03Z", "message": "Adding header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35d1d971e6bdaf2097dca029ee3ff15c4f72ac4c", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/35d1d971e6bdaf2097dca029ee3ff15c4f72ac4c", "committedDate": "2020-04-15T01:14:11Z", "message": "Fixing failing unie test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ada17f19d4e56d283ae65886b08e0d6a71031ba7", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/ada17f19d4e56d283ae65886b08e0d6a71031ba7", "committedDate": "2020-04-16T17:06:32Z", "message": "Code changes after review; code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc60eeffd82dc8e8214207524bda4864edd05add", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/fc60eeffd82dc8e8214207524bda4864edd05add", "committedDate": "2020-04-17T16:14:41Z", "message": "Using java.nio.file.Paths"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e70449176a975fa30985714d2c9f03795c72d6b", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/3e70449176a975fa30985714d2c9f03795c72d6b", "committedDate": "2020-04-17T17:07:36Z", "message": "Offline mode as fallback when service fetch fails"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "609d8e4a2515e6f3211898259d630f5b6b8a4ee9", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/609d8e4a2515e6f3211898259d630f5b6b8a4ee9", "committedDate": "2020-04-17T17:56:53Z", "message": "Resetting VIPCfg and I18nFactory instances for each test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd19b1cd5d9b0b42df97388980ea6aac1d0cafd5", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/dd19b1cd5d9b0b42df97388980ea6aac1d0cafd5", "committedDate": "2020-04-17T17:59:27Z", "message": "Resetting VIPCfg and I18nFactory after test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7389f8b4d4c2e5c406de7147efcaf36b6ee453bd", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/7389f8b4d4c2e5c406de7147efcaf36b6ee453bd", "committedDate": "2020-04-17T22:31:30Z", "message": "Fixing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b92e4480ca25d122c7f98dc389d7e4884a59a25", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/5b92e4480ca25d122c7f98dc389d7e4884a59a25", "committedDate": "2020-04-20T17:42:50Z", "message": "Limit to wiremock test logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfb41b5042e733f21f5cda4428faab6e0a95e19a", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/dfb41b5042e733f21f5cda4428faab6e0a95e19a", "committedDate": "2020-04-20T21:47:47Z", "message": "Decreasing unit test log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21a7105c4fdc5d88d8db80340b3b00d947622cc7", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/21a7105c4fdc5d88d8db80340b3b00d947622cc7", "committedDate": "2020-04-21T00:43:23Z", "message": "this test is timing out and trying to connect 70+ times"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84343d506461aea4976a86fa25e7bb1b06703150", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/84343d506461aea4976a86fa25e7bb1b06703150", "committedDate": "2020-04-21T00:56:15Z", "message": "Adding comments to code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be8e443e6de5070baf91c76e1f4001188e8be0d5", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/be8e443e6de5070baf91c76e1f4001188e8be0d5", "committedDate": "2020-04-21T18:26:20Z", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b805d3672e0b286648b612dd48d3fabe73f92fd4", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/b805d3672e0b286648b612dd48d3fabe73f92fd4", "committedDate": "2020-04-21T19:14:03Z", "message": "Adding timestamp to cache fromn local bundle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17bc16cd019c4d40ad82df7590869f82a76b0a96", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/17bc16cd019c4d40ad82df7590869f82a76b0a96", "committedDate": "2020-04-23T04:26:42Z", "message": "Deprecating methods in TranslationMessage; adding new method getMessage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15da01004363a3441944149c106b79908ba4cde6", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/15da01004363a3441944149c106b79908ba4cde6", "committedDate": "2020-04-24T08:58:03Z", "message": "Added tests for TranslationMessage.getMessage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "631de868cb3b40899ace35017268bdb65b236091", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/631de868cb3b40899ace35017268bdb65b236091", "committedDate": "2020-04-24T09:15:35Z", "message": "Fixing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffd9adb09499997921630426e9a8327bf615ee50", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/ffd9adb09499997921630426e9a8327bf615ee50", "committedDate": "2020-04-24T09:28:59Z", "message": "Fixing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c00f7ae3cacc0e17ab59a776b02c3be04a106252", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/c00f7ae3cacc0e17ab59a776b02c3be04a106252", "committedDate": "2020-04-24T20:29:27Z", "message": "Fixing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0504c49a179166868cbae84874647925d88c2a3", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/d0504c49a179166868cbae84874647925d88c2a3", "committedDate": "2020-04-24T22:28:00Z", "message": "Removing comment field because source collection is not supported anymore; cleaning up tests; adding comments for javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79b18d0035a35a23fb26fe76cae4868e848a11b8", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/79b18d0035a35a23fb26fe76cae4868e848a11b8", "committedDate": "2020-04-24T22:44:30Z", "message": "Code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec9f5db8cd6110c5b714bc098d54680308c63d9a", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/ec9f5db8cd6110c5b714bc098d54680308c63d9a", "committedDate": "2020-04-24T22:58:26Z", "message": "Changes from code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e8bd3600fba20e5e17378b1e67e37216d8e6b06", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/2e8bd3600fba20e5e17378b1e67e37216d8e6b06", "committedDate": "2020-04-24T23:25:19Z", "message": "Code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e44a8c46fd2856ca97cf71158cb9804880e3e17", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/4e44a8c46fd2856ca97cf71158cb9804880e3e17", "committedDate": "2020-04-26T22:36:42Z", "message": "Optional SourceOpt in initialization\n\nSigned-off-by: Jessie <jessiejuachon@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de5c4ee9c7db7d3f53a979e15fdcae60a28958d4", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/de5c4ee9c7db7d3f53a979e15fdcae60a28958d4", "committedDate": "2020-04-27T00:58:16Z", "message": "Fixing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "406cb2a268cd5e18eee310577137c8f364bc8309", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/406cb2a268cd5e18eee310577137c8f364bc8309", "committedDate": "2020-04-28T03:14:02Z", "message": "Adding comments to code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c80696ab2f0bdfcc80ba268705ed147aed423b07", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/c80696ab2f0bdfcc80ba268705ed147aed423b07", "committedDate": "2020-04-28T04:33:36Z", "message": "Adding comment for javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79d111e4404a4f171dcdfb001228afcbad996753", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/79d111e4404a4f171dcdfb001228afcbad996753", "committedDate": "2020-04-28T21:54:07Z", "message": "Cleaning up code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24d8d5d7ee9e667c88187761c5332d3c9485cf26", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/24d8d5d7ee9e667c88187761c5332d3c9485cf26", "committedDate": "2020-04-28T22:02:21Z", "message": "Code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23e62b6f0b3f0e3e4d5973c6f00b4746256fe8dd", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/23e62b6f0b3f0e3e4d5973c6f00b4746256fe8dd", "committedDate": "2020-04-28T23:28:49Z", "message": "Fixing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "369643f588359e1ceb430768ab473566c503da3c", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/369643f588359e1ceb430768ab473566c503da3c", "committedDate": "2020-04-29T03:17:37Z", "message": "Removing source message fallback from this PR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e67e25c4dee919192f1fb0aedd9fcc9d34a6e06", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/4e67e25c4dee919192f1fb0aedd9fcc9d34a6e06", "committedDate": "2020-04-29T04:09:00Z", "message": "Merge branch 'g11n-java-client' into g11n-java-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "636b5b4cf56f121cf871e07911dcb4d763a16c64", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/636b5b4cf56f121cf871e07911dcb4d763a16c64", "committedDate": "2020-05-05T01:10:59Z", "message": "Default locale in config file instead of hardcoded; get supported locales for offline mode; fixing some bugs in getting supported locales"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71a87e52447b0fede8230e7f8f7e5c65ce034546", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/71a87e52447b0fede8230e7f8f7e5c65ce034546", "committedDate": "2020-05-05T01:20:57Z", "message": "Merge branch 'g11n-java-client' into g11n-java-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9a90e3e2190e8dec158f1e62e4bc2f3ccc1b21e", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/b9a90e3e2190e8dec158f1e62e4bc2f3ccc1b21e", "committedDate": "2020-05-05T01:25:06Z", "message": "Fixing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "060666d54ddfa7156433209ad06c959b4af649da", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/060666d54ddfa7156433209ad06c959b4af649da", "committedDate": "2020-05-05T01:56:26Z", "message": "Fixing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52e3695951a48d21de82180c140beead3924cf75", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/52e3695951a48d21de82180c140beead3924cf75", "committedDate": "2020-05-05T03:04:12Z", "message": "Default locale to Locale.ENGLISH if not set in config file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2858ebcb7441b8da09f70489b8f8e8e3a79c8cc9", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/2858ebcb7441b8da09f70489b8f8e8e3a79c8cc9", "committedDate": "2020-05-06T21:58:32Z", "message": "Changed after code review: code clean up, bug fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbe3047d43e1170f7cef6e69e51cc7d2ae7ff48e", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/bbe3047d43e1170f7cef6e69e51cc7d2ae7ff48e", "committedDate": "2020-05-08T02:49:19Z", "message": "Update src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n\nCo-authored-by: Xiaochao Li <48587632+Xiaochao8@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa56388fa66f56bce4c746ff4c662591246908f4", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/fa56388fa66f56bce4c746ff4c662591246908f4", "committedDate": "2020-05-08T02:50:00Z", "message": "Update src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalLocaleOpt.java\n\nCo-authored-by: Xiaochao Li <48587632+Xiaochao8@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08cd96d71656e546810805466962d82b4ab623ab", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/08cd96d71656e546810805466962d82b4ab623ab", "committedDate": "2020-05-08T07:42:06Z", "message": "code clean up, error logging, bug fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e89ff56539cbf52e2819b70b28138356a0a6dd11", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/e89ff56539cbf52e2819b70b28138356a0a6dd11", "committedDate": "2020-05-08T07:48:46Z", "message": "Merge branch 'g11n-java-client' of https://github.com/vmware/singleton into g11n-java-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "119aebde51e1777a164c914bbd7d132d41ece371", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/119aebde51e1777a164c914bbd7d132d41ece371", "committedDate": "2020-05-08T07:52:57Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8a937d79fb0a7b48b85ca5ac8623aa459d9c8a2", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/e8a937d79fb0a7b48b85ca5ac8623aa459d9c8a2", "committedDate": "2020-05-11T21:00:45Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d95cd1379ac1e8cd3d30f8c085cbfc0a68d8ab2", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/9d95cd1379ac1e8cd3d30f8c085cbfc0a68d8ab2", "committedDate": "2020-05-12T23:35:30Z", "message": "Using messages_source.json for source locale messages."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4241, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}