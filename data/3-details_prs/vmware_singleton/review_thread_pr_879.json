{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMzIyMzE5", "number": 879, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNzowNTo1MVrOE65xpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNDo1NTowNlrOE8EaGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTk5NDYxOnYy", "diffSide": "RIGHT", "path": "g11n-ws/tools/tool-cldr-extractor/src/main/java/com/vmware/i18n/utils/CLDRUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNzowNTo1MVrOH2PTWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwODo0Nzo0MlrOH2SaAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYzNTg2Nw==", "bodyText": "recommend the method name firstDayExtract to getFirstDayExtract", "url": "https://github.com/vmware/singleton/pull/879#discussion_r526635867", "createdAt": "2020-11-19T07:05:51Z", "author": {"login": "tigershi"}, "path": "g11n-ws/tools/tool-cldr-extractor/src/main/java/com/vmware/i18n/utils/CLDRUtils.java", "diffHunk": "@@ -563,6 +572,43 @@ public static String readZip(String fileName, String zipPath) {\n         return erasMap;\n     }\n \n+    /**\n+     * Get the first day of one Country, the implementation is according to https://www.unicode.org/reports/tr35/tr35-49/tr35-dates.html#Week_Data\n+     *\n+     * @param localeStr\n+     * @param firstDayData\n+     * @return\n+     */\n+    private static Integer firstDayExtract(String localeStr, Map<String, String> firstDayData){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ece854420fd1fc210a4b7779edf037f2e2a4b28"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY4NjcyMg==", "bodyText": "Just for keep code style consistent with previous code, but it really doesn't conform the naming convention, so rename it to 'extractFirstDay'.", "url": "https://github.com/vmware/singleton/pull/879#discussion_r526686722", "createdAt": "2020-11-19T08:47:42Z", "author": {"login": "huihuiw01"}, "path": "g11n-ws/tools/tool-cldr-extractor/src/main/java/com/vmware/i18n/utils/CLDRUtils.java", "diffHunk": "@@ -563,6 +572,43 @@ public static String readZip(String fileName, String zipPath) {\n         return erasMap;\n     }\n \n+    /**\n+     * Get the first day of one Country, the implementation is according to https://www.unicode.org/reports/tr35/tr35-49/tr35-dates.html#Week_Data\n+     *\n+     * @param localeStr\n+     * @param firstDayData\n+     * @return\n+     */\n+    private static Integer firstDayExtract(String localeStr, Map<String, String> firstDayData){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYzNTg2Nw=="}, "originalCommit": {"oid": "6ece854420fd1fc210a4b7779edf037f2e2a4b28"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTk5Njc3OnYy", "diffSide": "RIGHT", "path": "g11n-ws/tools/tool-cldr-extractor/src/main/java/com/vmware/i18n/utils/CLDRUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNzowNjo0MlrOH2PUqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwODo0NzoxMlrOH2SY3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYzNjIwMQ==", "bodyText": "recommend the method name weekendRangeExtract to getWeekendRangeExtract", "url": "https://github.com/vmware/singleton/pull/879#discussion_r526636201", "createdAt": "2020-11-19T07:06:42Z", "author": {"login": "tigershi"}, "path": "g11n-ws/tools/tool-cldr-extractor/src/main/java/com/vmware/i18n/utils/CLDRUtils.java", "diffHunk": "@@ -563,6 +572,43 @@ public static String readZip(String fileName, String zipPath) {\n         return erasMap;\n     }\n \n+    /**\n+     * Get the first day of one Country, the implementation is according to https://www.unicode.org/reports/tr35/tr35-49/tr35-dates.html#Week_Data\n+     *\n+     * @param localeStr\n+     * @param firstDayData\n+     * @return\n+     */\n+    private static Integer firstDayExtract(String localeStr, Map<String, String> firstDayData){\n+        String firstDay = firstDayData.get(Constants.TERRITORY_001);\n+        String territory = LocaleDataUtils.getInstance().getTerritory(localeStr);\n+        if(territory != null && firstDayData.get(territory) != null)\n+            firstDay = firstDayData.get(territory);\n+        return DayEnum.getIndexByDay(firstDay);\n+    }\n+\n+    /**\n+     * Get the weekend range of one Country, the implementation is according to https://www.unicode.org/reports/tr35/tr35-49/tr35-dates.html#Week_Data\n+     *\n+     * @param localeStr\n+     * @param supplementalWeekData\n+     * @return\n+     */\n+    private static List<Integer> weekendRangeExtract(String localeStr, Map<String, Object> supplementalWeekData){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ece854420fd1fc210a4b7779edf037f2e2a4b28"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY4NjQyOQ==", "bodyText": "Just for keep code style consistent with previous code, but it really doesn't conform the naming convention, so rename it to 'extractWeekendRange'.", "url": "https://github.com/vmware/singleton/pull/879#discussion_r526686429", "createdAt": "2020-11-19T08:47:12Z", "author": {"login": "huihuiw01"}, "path": "g11n-ws/tools/tool-cldr-extractor/src/main/java/com/vmware/i18n/utils/CLDRUtils.java", "diffHunk": "@@ -563,6 +572,43 @@ public static String readZip(String fileName, String zipPath) {\n         return erasMap;\n     }\n \n+    /**\n+     * Get the first day of one Country, the implementation is according to https://www.unicode.org/reports/tr35/tr35-49/tr35-dates.html#Week_Data\n+     *\n+     * @param localeStr\n+     * @param firstDayData\n+     * @return\n+     */\n+    private static Integer firstDayExtract(String localeStr, Map<String, String> firstDayData){\n+        String firstDay = firstDayData.get(Constants.TERRITORY_001);\n+        String territory = LocaleDataUtils.getInstance().getTerritory(localeStr);\n+        if(territory != null && firstDayData.get(territory) != null)\n+            firstDay = firstDayData.get(territory);\n+        return DayEnum.getIndexByDay(firstDay);\n+    }\n+\n+    /**\n+     * Get the weekend range of one Country, the implementation is according to https://www.unicode.org/reports/tr35/tr35-49/tr35-dates.html#Week_Data\n+     *\n+     * @param localeStr\n+     * @param supplementalWeekData\n+     * @return\n+     */\n+    private static List<Integer> weekendRangeExtract(String localeStr, Map<String, Object> supplementalWeekData){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYzNjIwMQ=="}, "originalCommit": {"oid": "6ece854420fd1fc210a4b7779edf037f2e2a4b28"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMjA3MzUyOnYy", "diffSide": "RIGHT", "path": "g11n-ws/tools/tool-cldr-extractor/src/main/java/com/vmware/i18n/utils/LocaleDataUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNzozNDoyNlrOH2QBRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMTowNjoyNFrOH2X44Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY0NzYyMg==", "bodyText": "I remember there is an existing method to get the default region of a locale. Could you check?", "url": "https://github.com/vmware/singleton/pull/879#discussion_r526647622", "createdAt": "2020-11-19T07:34:26Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/tools/tool-cldr-extractor/src/main/java/com/vmware/i18n/utils/LocaleDataUtils.java", "diffHunk": "@@ -159,6 +159,38 @@ public String getDefaultRegionCode(String inputLocale, Map<String, String> regio\n \t\treturn defaultRegionMap;\n \t}\n \n+\t/**\n+\t * Get territory of a locale\n+\t *\n+\t * @param localeStr\n+\t * @return\n+\t */\n+\tpublic String getTerritory(String localeStr){\n+\t\tLocale locale = Locale.forLanguageTag(localeStr);\n+\t\tString territory = locale.getCountry();\n+\t\tif(territory == null || territory.isEmpty())//this is for supplement default region for locales like en, zh-Hans..\n+\t\t\tterritory = getLanguageDefaultRegionMappings().get(localeStr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ece854420fd1fc210a4b7779edf037f2e2a4b28"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc3NjU0NQ==", "bodyText": "Confirmed with @chaoq0318, there is no such method.", "url": "https://github.com/vmware/singleton/pull/879#discussion_r526776545", "createdAt": "2020-11-19T11:06:24Z", "author": {"login": "huihuiw01"}, "path": "g11n-ws/tools/tool-cldr-extractor/src/main/java/com/vmware/i18n/utils/LocaleDataUtils.java", "diffHunk": "@@ -159,6 +159,38 @@ public String getDefaultRegionCode(String inputLocale, Map<String, String> regio\n \t\treturn defaultRegionMap;\n \t}\n \n+\t/**\n+\t * Get territory of a locale\n+\t *\n+\t * @param localeStr\n+\t * @return\n+\t */\n+\tpublic String getTerritory(String localeStr){\n+\t\tLocale locale = Locale.forLanguageTag(localeStr);\n+\t\tString territory = locale.getCountry();\n+\t\tif(territory == null || territory.isEmpty())//this is for supplement default region for locales like en, zh-Hans..\n+\t\t\tterritory = getLanguageDefaultRegionMappings().get(localeStr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY0NzYyMg=="}, "originalCommit": {"oid": "6ece854420fd1fc210a4b7779edf037f2e2a4b28"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNzM2MTM3OnYy", "diffSide": "RIGHT", "path": "g11n-ws/tools/tool-cldr-extractor/src/main/java/com/vmware/i18n/utils/LocaleDataUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNzoyMzoyM1rOH3DPBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzoyNDoxMFrOH4u_5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ4NjcyNg==", "bodyText": "How about this?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tterritory = getLanguageDefaultRegionMappings().get(localeStr);\n          \n          \n            \n            \t\t\tterritory = JSONUtils.getMapFromJson(PatternUtil.getRegionFromLib(localeStr)).get(ConstantsKeys.DEFAULT_REGION_CODE);", "url": "https://github.com/vmware/singleton/pull/879#discussion_r527486726", "createdAt": "2020-11-20T07:23:23Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/tools/tool-cldr-extractor/src/main/java/com/vmware/i18n/utils/LocaleDataUtils.java", "diffHunk": "@@ -159,6 +159,38 @@ public String getDefaultRegionCode(String inputLocale, Map<String, String> regio\n \t\treturn defaultRegionMap;\n \t}\n \n+\t/**\n+\t * Get territory of a locale\n+\t *\n+\t * @param localeStr\n+\t * @return\n+\t */\n+\tpublic String getTerritory(String localeStr){\n+\t\tLocale locale = Locale.forLanguageTag(localeStr);\n+\t\tString territory = locale.getCountry();\n+\t\tif(territory == null || territory.isEmpty())//this is for supplement default region for locales like en, zh-Hans..\n+\t\t\tterritory = getLanguageDefaultRegionMappings().get(localeStr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "827921de00b07e1baf3fde0ca9e961a4f9a84231"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI1MjMyNg==", "bodyText": "As I confirmed with @chaoq0318 and we synced yesterday, this method is not appropriate due to it use the extracted data and is used for calling by L2 API, so not appropriate to be used in the extracting process.\nI find another method which can be used here, and change code accordingly.", "url": "https://github.com/vmware/singleton/pull/879#discussion_r529252326", "createdAt": "2020-11-24T07:24:10Z", "author": {"login": "huihuiw01"}, "path": "g11n-ws/tools/tool-cldr-extractor/src/main/java/com/vmware/i18n/utils/LocaleDataUtils.java", "diffHunk": "@@ -159,6 +159,38 @@ public String getDefaultRegionCode(String inputLocale, Map<String, String> regio\n \t\treturn defaultRegionMap;\n \t}\n \n+\t/**\n+\t * Get territory of a locale\n+\t *\n+\t * @param localeStr\n+\t * @return\n+\t */\n+\tpublic String getTerritory(String localeStr){\n+\t\tLocale locale = Locale.forLanguageTag(localeStr);\n+\t\tString territory = locale.getCountry();\n+\t\tif(territory == null || territory.isEmpty())//this is for supplement default region for locales like en, zh-Hans..\n+\t\t\tterritory = getLanguageDefaultRegionMappings().get(localeStr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ4NjcyNg=="}, "originalCommit": {"oid": "827921de00b07e1baf3fde0ca9e961a4f9a84231"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDIyMjMzOnYy", "diffSide": "RIGHT", "path": "g11n-ws/tools/tool-cldr-extractor/src/main/java/com/vmware/i18n/utils/CLDRUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNDo1NTowNlrOH3_Wuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzozMDozOVrOH4vMKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ3MTczOQ==", "bodyText": "Why add weekend range. How does this relate to the first day of week?", "url": "https://github.com/vmware/singleton/pull/879#discussion_r528471739", "createdAt": "2020-11-23T04:55:06Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/tools/tool-cldr-extractor/src/main/java/com/vmware/i18n/utils/CLDRUtils.java", "diffHunk": "@@ -184,8 +193,8 @@ public static String readZip(String fileName, String zipPath) {\n         dateMap.put(Constants.MONTH_FORMAT, monthsFormatMap);\n         dateMap.put(Constants.MONTHS_STANDALONE, monthsStandaloneMap);\n         dateMap.put(Constants.ERAS, erasMap);\n-        dateMap.put(Constants.FIRST_DAY_OF_WEEK, 0);\n-        dateMap.put(Constants.WEEKEND_RANGE, Arrays.asList(6, 0));\n+        dateMap.put(Constants.FIRST_DAY_OF_WEEK, firstDayOfWeek);\n+        dateMap.put(Constants.WEEKEND_RANGE, weekendRange);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "827921de00b07e1baf3fde0ca9e961a4f9a84231"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI1NTQ2Nw==", "bodyText": "As weekend range has the same bug, and need similar code change, so I fix them together.\nI have asked @nannany00 include weekend range problem in the issue #819, and change PR title accordingly.", "url": "https://github.com/vmware/singleton/pull/879#discussion_r529255467", "createdAt": "2020-11-24T07:30:39Z", "author": {"login": "huihuiw01"}, "path": "g11n-ws/tools/tool-cldr-extractor/src/main/java/com/vmware/i18n/utils/CLDRUtils.java", "diffHunk": "@@ -184,8 +193,8 @@ public static String readZip(String fileName, String zipPath) {\n         dateMap.put(Constants.MONTH_FORMAT, monthsFormatMap);\n         dateMap.put(Constants.MONTHS_STANDALONE, monthsStandaloneMap);\n         dateMap.put(Constants.ERAS, erasMap);\n-        dateMap.put(Constants.FIRST_DAY_OF_WEEK, 0);\n-        dateMap.put(Constants.WEEKEND_RANGE, Arrays.asList(6, 0));\n+        dateMap.put(Constants.FIRST_DAY_OF_WEEK, firstDayOfWeek);\n+        dateMap.put(Constants.WEEKEND_RANGE, weekendRange);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ3MTczOQ=="}, "originalCommit": {"oid": "827921de00b07e1baf3fde0ca9e961a4f9a84231"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4393, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}