{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5OTc1NDk1", "number": 388, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwOToyODo0NVrODmNi4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjoxNDo0N1rODmhfTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzk0NDAxOnYy", "diffSide": "RIGHT", "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwOToyODo0NVrOFzf3xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMToyODoyMFrOFz-mVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU0Mzg3Nw==", "bodyText": "availableVersions is null if exception happen here, so this line is extra and please remove it.", "url": "https://github.com/vmware/singleton/pull/388#discussion_r389543877", "createdAt": "2020-03-09T09:28:45Z", "author": {"login": "linr211"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "diffHunk": "@@ -52,12 +52,20 @@\n \t   public APIResponseDTO getTransPattern(TranslationWithPatternDTO data) throws Exception {\n \t      logger.info(\"begin getTransPattern\");\n \t      if (validate(data)) {\n+\t    \t  List<String> availableVersions = null;\n+\t          try {\n+\t        \t  availableVersions = productService.getSupportVersionList(data.getProductName());\n+\t          }catch(L3APIException e) {\n+\t        \t  availableVersions = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87878b19b7ced0343599bbc8267e0b35703c4d1b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA0NzMxOQ==", "bodyText": "done", "url": "https://github.com/vmware/singleton/pull/388#discussion_r390047319", "createdAt": "2020-03-10T01:28:20Z", "author": {"login": "tigershi"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "diffHunk": "@@ -52,12 +52,20 @@\n \t   public APIResponseDTO getTransPattern(TranslationWithPatternDTO data) throws Exception {\n \t      logger.info(\"begin getTransPattern\");\n \t      if (validate(data)) {\n+\t    \t  List<String> availableVersions = null;\n+\t          try {\n+\t        \t  availableVersions = productService.getSupportVersionList(data.getProductName());\n+\t          }catch(L3APIException e) {\n+\t        \t  availableVersions = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU0Mzg3Nw=="}, "originalCommit": {"oid": "87878b19b7ced0343599bbc8267e0b35703c4d1b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzIxMTYxOnYy", "diffSide": "RIGHT", "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationProductAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjoxNDo0NFrOFz_S0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNDo0NzoxOVrOF0BakQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA1ODcwNg==", "bodyText": "Please use handleVersionFallbackResponse", "url": "https://github.com/vmware/singleton/pull/388#discussion_r390058706", "createdAt": "2020-03-10T02:14:44Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationProductAction.java", "diffHunk": "@@ -211,14 +212,17 @@ public APIResponseDTO getPartialComTrans(String productName,\n               throw new L3APIException(ConstantsMsg.TRANS_IS_NOT_FOUND);\n           }else if(ja.size() == (reqLocaleSize*reqComponentSite)) {\n               resulttranslationDTO.setBundles(ja);\n-              return  super.handleResponse(APIResponseStatus.OK, resulttranslationDTO);\n+              return super.handleVersionFallbackResponse(oldVersion, version, resulttranslationDTO);\n           }else {\n               for(JSONObject jsonNullObj:jsonNullList) {\n                   ja.add(jsonNullObj);\n               }\n                resulttranslationDTO.setBundles(ja);\n-              return  super.handleResponse(APIResponseStatus.MULTTRANSLATION_PART_CONTENT, resulttranslationDTO);\n-              \n+          \t if(oldVersion.equals(version)) {\n+    \t\t\t return handleResponse(APIResponseStatus.MULTTRANSLATION_PART_CONTENT, resulttranslationDTO);\n+    \t\t }else {\n+    \t\t\t return handleResponse(APIResponseStatus.VERSION_FALLBACK_TRANSLATION, resulttranslationDTO);\n+    \t\t }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "573891fd0b8ef10639610e77a98975082f9b3502"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA5MzQ1Nw==", "bodyText": "this method return APIResponseStatus.MULTTRANSLATION_PART_CONTENT , not APIResponseStatus.OK. so can't use handleVersionFallbackResponse", "url": "https://github.com/vmware/singleton/pull/388#discussion_r390093457", "createdAt": "2020-03-10T04:47:19Z", "author": {"login": "tigershi"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationProductAction.java", "diffHunk": "@@ -211,14 +212,17 @@ public APIResponseDTO getPartialComTrans(String productName,\n               throw new L3APIException(ConstantsMsg.TRANS_IS_NOT_FOUND);\n           }else if(ja.size() == (reqLocaleSize*reqComponentSite)) {\n               resulttranslationDTO.setBundles(ja);\n-              return  super.handleResponse(APIResponseStatus.OK, resulttranslationDTO);\n+              return super.handleVersionFallbackResponse(oldVersion, version, resulttranslationDTO);\n           }else {\n               for(JSONObject jsonNullObj:jsonNullList) {\n                   ja.add(jsonNullObj);\n               }\n                resulttranslationDTO.setBundles(ja);\n-              return  super.handleResponse(APIResponseStatus.MULTTRANSLATION_PART_CONTENT, resulttranslationDTO);\n-              \n+          \t if(oldVersion.equals(version)) {\n+    \t\t\t return handleResponse(APIResponseStatus.MULTTRANSLATION_PART_CONTENT, resulttranslationDTO);\n+    \t\t }else {\n+    \t\t\t return handleResponse(APIResponseStatus.VERSION_FALLBACK_TRANSLATION, resulttranslationDTO);\n+    \t\t }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA1ODcwNg=="}, "originalCommit": {"oid": "573891fd0b8ef10639610e77a98975082f9b3502"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzIxMTY3OnYy", "diffSide": "RIGHT", "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/BaseAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjoxNDo0N1rOFz_S3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNDo1NToxMVrOF0BgpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA1ODcxNg==", "bodyText": "How about changing name to handleTranslationResponse?", "url": "https://github.com/vmware/singleton/pull/388#discussion_r390058716", "createdAt": "2020-03-10T02:14:47Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/BaseAction.java", "diffHunk": "@@ -8,13 +8,44 @@\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n \n import com.vmware.vip.common.i18n.dto.response.APIResponseDTO;\n+import com.vmware.vip.common.i18n.status.APIResponseStatus;\n import com.vmware.vip.common.i18n.status.Response;\n+import com.vmware.vip.core.messages.service.product.IProductService;\n+import com.vmware.vip.i18n.api.base.utils.VersionMatcher;\n \n public class BaseAction {\n \tprivate static Logger logger = LoggerFactory.getLogger(BaseAction.class);\n \n+\t@Autowired\n+\tprotected IProductService baseProductService;\n+\t\n+\t/**\n+\t *The method use to get the available version string by matching support versions. \n+     *if not matching return the request version string\n+\t */\n+\tprotected String getAvailableVersion(String productName, String version) {\n+        try {\n+          return VersionMatcher.getMatchedVersion(version, baseProductService.getSupportVersionList(productName));\n+        }catch(Exception e) {\n+          return version;\n+        }\n+    }\n+   \n+\t/**\n+\t * This method use to handle and package the version fallback response content \n+\t * \n+\t */\n+\tprotected APIResponseDTO handleVersionFallbackResponse(String oldVersion, String newVersion, Object data) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "573891fd0b8ef10639610e77a98975082f9b3502"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA5NTAxMg==", "bodyText": "the handleVersionFallbackResponse method not only use translation response but also use the get support language API and get component API, So the name changes to handleTranslationResponse is inappropriate.", "url": "https://github.com/vmware/singleton/pull/388#discussion_r390095012", "createdAt": "2020-03-10T04:55:11Z", "author": {"login": "tigershi"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/BaseAction.java", "diffHunk": "@@ -8,13 +8,44 @@\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n \n import com.vmware.vip.common.i18n.dto.response.APIResponseDTO;\n+import com.vmware.vip.common.i18n.status.APIResponseStatus;\n import com.vmware.vip.common.i18n.status.Response;\n+import com.vmware.vip.core.messages.service.product.IProductService;\n+import com.vmware.vip.i18n.api.base.utils.VersionMatcher;\n \n public class BaseAction {\n \tprivate static Logger logger = LoggerFactory.getLogger(BaseAction.class);\n \n+\t@Autowired\n+\tprotected IProductService baseProductService;\n+\t\n+\t/**\n+\t *The method use to get the available version string by matching support versions. \n+     *if not matching return the request version string\n+\t */\n+\tprotected String getAvailableVersion(String productName, String version) {\n+        try {\n+          return VersionMatcher.getMatchedVersion(version, baseProductService.getSupportVersionList(productName));\n+        }catch(Exception e) {\n+          return version;\n+        }\n+    }\n+   \n+\t/**\n+\t * This method use to handle and package the version fallback response content \n+\t * \n+\t */\n+\tprotected APIResponseDTO handleVersionFallbackResponse(String oldVersion, String newVersion, Object data) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA1ODcxNg=="}, "originalCommit": {"oid": "573891fd0b8ef10639610e77a98975082f9b3502"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4627, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}