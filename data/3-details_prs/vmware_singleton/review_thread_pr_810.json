{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NjUwMjQ4", "number": 810, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODo1ODo1N1rOEvNuKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDoxNjo0N1rOEvPnsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQzMzM3OnYy", "diffSide": "RIGHT", "path": "g11n-ws/vip-manager-i18n/src/main/resources/application-bundle.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODo1ODo1N1rOHkEfAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo0OTo0OVrOHk0DxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4NDI1OA==", "bodyText": "Why comment out this line?\n(Same issues  exist in other properties files.)", "url": "https://github.com/vmware/singleton/pull/810#discussion_r507584258", "createdAt": "2020-10-19T08:58:57Z", "author": {"login": "linr211"}, "path": "g11n-ws/vip-manager-i18n/src/main/resources/application-bundle.properties", "diffHunk": "@@ -87,3 +87,5 @@ management.endpoints.web.base-path=/actuator\n config.gzip.enable = on\n #Set Minimum size to trigger gzip.\n config.gzip.minsize = 2048\n+#request IDs print in log\n+#config.client.requestIds=a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e00fa7ba438b0779317cd87aafc8df7cb170e72"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE2NjcxOQ==", "bodyText": "because requestIds defined by customer, default is closed", "url": "https://github.com/vmware/singleton/pull/810#discussion_r508166719", "createdAt": "2020-10-20T02:13:33Z", "author": {"login": "tigershi"}, "path": "g11n-ws/vip-manager-i18n/src/main/resources/application-bundle.properties", "diffHunk": "@@ -87,3 +87,5 @@ management.endpoints.web.base-path=/actuator\n config.gzip.enable = on\n #Set Minimum size to trigger gzip.\n config.gzip.minsize = 2048\n+#request IDs print in log\n+#config.client.requestIds=a", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4NDI1OA=="}, "originalCommit": {"oid": "8e00fa7ba438b0779317cd87aafc8df7cb170e72"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2MzcxNg==", "bodyText": "When the setting will be exposed? we can't define a setting and no place to expose it.", "url": "https://github.com/vmware/singleton/pull/810#discussion_r508363716", "createdAt": "2020-10-20T09:49:49Z", "author": {"login": "linr211"}, "path": "g11n-ws/vip-manager-i18n/src/main/resources/application-bundle.properties", "diffHunk": "@@ -87,3 +87,5 @@ management.endpoints.web.base-path=/actuator\n config.gzip.enable = on\n #Set Minimum size to trigger gzip.\n config.gzip.minsize = 2048\n+#request IDs print in log\n+#config.client.requestIds=a", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4NDI1OA=="}, "originalCommit": {"oid": "8e00fa7ba438b0779317cd87aafc8df7cb170e72"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ0ODY2OnYy", "diffSide": "RIGHT", "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowMjozMFrOHkEoKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowMjozMFrOHkEoKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4NjYwMQ==", "bodyText": "add description to this method.", "url": "https://github.com/vmware/singleton/pull/810#discussion_r507586601", "createdAt": "2020-10-19T09:02:30Z", "author": {"login": "linr211"}, "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "diffHunk": "@@ -108,5 +123,20 @@ public void afterCompletion(HttpServletRequest request,\n \t\t\tthrows Exception {\n \t\t // Do nothing because of not need to afterCompletion business\n \t}\n+\t\n+\t\n+\tprivate String getRequestId(HttpServletRequest request, List<String> headerNames) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e00fa7ba438b0779317cd87aafc8df7cb170e72"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ2MDU0OnYy", "diffSide": "RIGHT", "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowNTozM1rOHkEvmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowNTozM1rOHkEvmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4ODUwNg==", "bodyText": "miss space before and after '+'", "url": "https://github.com/vmware/singleton/pull/810#discussion_r507588506", "createdAt": "2020-10-19T09:05:33Z", "author": {"login": "linr211"}, "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "diffHunk": "@@ -55,8 +69,9 @@ public APIValidationInterceptor(Map<String, Object> allowedListMap) {\n \tpublic boolean preHandle(HttpServletRequest request,\n \t\t\tHttpServletResponse response, Object handler) throws Exception {\n \t\tLOGGER.debug(request.getSession().getId());\n-\t\tString logOfUrl = \"The request url is: \" + request.getRequestURL();\n-\t\tString logOfQueryStr = \"The request query string is: \" + request.getQueryString();\n+\t\tString SingletonRequestID = getRequestId(request, this.clientRequestIds);\n+\t\tString logOfUrl = SingletonRequestID+\"The request url is: \" + request.getRequestURL();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e00fa7ba438b0779317cd87aafc8df7cb170e72"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ2NTMzOnYy", "diffSide": "RIGHT", "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowNjo0MVrOHkEypA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowNjo0MVrOHkEypA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4OTI4NA==", "bodyText": "miss space before and after '+'", "url": "https://github.com/vmware/singleton/pull/810#discussion_r507589284", "createdAt": "2020-10-19T09:06:41Z", "author": {"login": "linr211"}, "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "diffHunk": "@@ -81,7 +96,7 @@ public boolean preHandle(HttpServletRequest request,\n \t\t\t\treturn false;\n \t\t\t}\n \t\t}\n-\t\tString startHandle = \"[thread-\" + Thread.currentThread().getId() + \"] Start to handle request...\";\n+\t\tString startHandle = SingletonRequestID+\"[thread-\" + Thread.currentThread().getId() + \"] Start to handle request...\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e00fa7ba438b0779317cd87aafc8df7cb170e72"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTcwNTEyOnYy", "diffSide": "RIGHT", "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDowNjowMFrOHkHEdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDowNjowMFrOHkHEdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYyNjYxMg==", "bodyText": "Local variable and method parameter names should comply with a naming convention (squid:S00117)\nCODE_SMELLCode smellMINORMinor\nShared naming conventions allow teams to collaborate effectively. This rule raises an issue when a local variable or function parameter name does not match the provided regular expression.\nWith the default regular expression ^[a-z][a-zA-Z0-9]*$:", "url": "https://github.com/vmware/singleton/pull/810#discussion_r507626612", "createdAt": "2020-10-19T10:06:00Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "diffHunk": "@@ -55,8 +69,9 @@ public APIValidationInterceptor(Map<String, Object> allowedListMap) {\n \tpublic boolean preHandle(HttpServletRequest request,\n \t\t\tHttpServletResponse response, Object handler) throws Exception {\n \t\tLOGGER.debug(request.getSession().getId());\n-\t\tString logOfUrl = \"The request url is: \" + request.getRequestURL();\n-\t\tString logOfQueryStr = \"The request query string is: \" + request.getQueryString();\n+\t\tString SingletonRequestID = getRequestId(request, this.clientRequestIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e00fa7ba438b0779317cd87aafc8df7cb170e72"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTcxNDcxOnYy", "diffSide": "RIGHT", "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDowODo1MFrOHkHKgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjoyOTo0M1rOHksfBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYyODE2Mw==", "bodyText": "Are you sure there are multiple headers used to trace?", "url": "https://github.com/vmware/singleton/pull/810#discussion_r507628163", "createdAt": "2020-10-19T10:08:50Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "diffHunk": "@@ -35,9 +40,18 @@\n \tprivate static Logger LOGGER = LoggerFactory.getLogger(APIValidationInterceptor.class);\n \n \tprivate Map<String, Object> allowedListMap;\n-\tpublic APIValidationInterceptor(Map<String, Object> allowedListMap) {\n+\tprivate String clientRequestIdsStr;\n+\tprivate List<String> clientRequestIds;\n+\tpublic APIValidationInterceptor(Map<String, Object> allowedListMap, String clientReqIdsStr) {\n \t\tsuper();\n \t\tthis.allowedListMap = allowedListMap;\n+\t\tthis.clientRequestIdsStr = clientReqIdsStr;\n+\t\ttry {\n+\t\t\tthis.clientRequestIds = Arrays.asList(this.clientRequestIdsStr.split(ConstantsChar.COMMA));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e00fa7ba438b0779317cd87aafc8df7cb170e72"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIzOTYyMw==", "bodyText": "in Saas environment, need to support multiple headers", "url": "https://github.com/vmware/singleton/pull/810#discussion_r508239623", "createdAt": "2020-10-20T06:29:43Z", "author": {"login": "tigershi"}, "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "diffHunk": "@@ -35,9 +40,18 @@\n \tprivate static Logger LOGGER = LoggerFactory.getLogger(APIValidationInterceptor.class);\n \n \tprivate Map<String, Object> allowedListMap;\n-\tpublic APIValidationInterceptor(Map<String, Object> allowedListMap) {\n+\tprivate String clientRequestIdsStr;\n+\tprivate List<String> clientRequestIds;\n+\tpublic APIValidationInterceptor(Map<String, Object> allowedListMap, String clientReqIdsStr) {\n \t\tsuper();\n \t\tthis.allowedListMap = allowedListMap;\n+\t\tthis.clientRequestIdsStr = clientReqIdsStr;\n+\t\ttry {\n+\t\t\tthis.clientRequestIds = Arrays.asList(this.clientRequestIdsStr.split(ConstantsChar.COMMA));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYyODE2Mw=="}, "originalCommit": {"oid": "8e00fa7ba438b0779317cd87aafc8df7cb170e72"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTczNTE3OnYy", "diffSide": "RIGHT", "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDoxNDoxOFrOHkHW6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjo0MDo0MlrOHksyow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYzMTMzOA==", "bodyText": "If config.client.requestIds is empty, then don't need to call this method in order to improve performance.", "url": "https://github.com/vmware/singleton/pull/810#discussion_r507631338", "createdAt": "2020-10-19T10:14:18Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "diffHunk": "@@ -55,8 +69,9 @@ public APIValidationInterceptor(Map<String, Object> allowedListMap) {\n \tpublic boolean preHandle(HttpServletRequest request,\n \t\t\tHttpServletResponse response, Object handler) throws Exception {\n \t\tLOGGER.debug(request.getSession().getId());\n-\t\tString logOfUrl = \"The request url is: \" + request.getRequestURL();\n-\t\tString logOfQueryStr = \"The request query string is: \" + request.getQueryString();\n+\t\tString SingletonRequestID = getRequestId(request, this.clientRequestIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e00fa7ba438b0779317cd87aafc8df7cb170e72"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI0NDY0Mw==", "bodyText": "Yes, you are right. I have done the business in start of the getRequetId method", "url": "https://github.com/vmware/singleton/pull/810#discussion_r508244643", "createdAt": "2020-10-20T06:40:42Z", "author": {"login": "tigershi"}, "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "diffHunk": "@@ -55,8 +69,9 @@ public APIValidationInterceptor(Map<String, Object> allowedListMap) {\n \tpublic boolean preHandle(HttpServletRequest request,\n \t\t\tHttpServletResponse response, Object handler) throws Exception {\n \t\tLOGGER.debug(request.getSession().getId());\n-\t\tString logOfUrl = \"The request url is: \" + request.getRequestURL();\n-\t\tString logOfQueryStr = \"The request query string is: \" + request.getQueryString();\n+\t\tString SingletonRequestID = getRequestId(request, this.clientRequestIds);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYzMTMzOA=="}, "originalCommit": {"oid": "8e00fa7ba438b0779317cd87aafc8df7cb170e72"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTc0NDQ4OnYy", "diffSide": "RIGHT", "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDoxNjo0N1rOHkHcuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDoxNjo0N1rOHkHcuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYzMjgyNQ==", "bodyText": "Suggest to merge these 2 logs into 1. Add thread id and request id to this log, and remove thread id from line 99.", "url": "https://github.com/vmware/singleton/pull/810#discussion_r507632825", "createdAt": "2020-10-19T10:16:47Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/vip-manager-i18n/src/main/java/com/vmware/vip/core/Interceptor/APIValidationInterceptor.java", "diffHunk": "@@ -55,8 +69,9 @@ public APIValidationInterceptor(Map<String, Object> allowedListMap) {\n \tpublic boolean preHandle(HttpServletRequest request,\n \t\t\tHttpServletResponse response, Object handler) throws Exception {\n \t\tLOGGER.debug(request.getSession().getId());\n-\t\tString logOfUrl = \"The request url is: \" + request.getRequestURL();\n-\t\tString logOfQueryStr = \"The request query string is: \" + request.getQueryString();\n+\t\tString SingletonRequestID = getRequestId(request, this.clientRequestIds);\n+\t\tString logOfUrl = SingletonRequestID+\"The request url is: \" + request.getRequestURL();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e00fa7ba438b0779317cd87aafc8df7cb170e72"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4339, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}