{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4OTcwMjA0", "number": 869, "title": "Bug 868 [BUG] The offlineResourceBaseURL inside a shared lib is not being read if either main app is is run from IDE or executable jar has nested jars like in spring boot", "bodyText": "", "createdAt": "2020-11-11T06:04:40Z", "url": "https://github.com/vmware/singleton/pull/869", "merged": true, "mergeCommit": {"oid": "1a00f78bab730c698b9497304773f1de0e0cf665"}, "closed": true, "closedAt": "2020-12-04T16:34:12Z", "author": {"login": "jessiejuachon"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbXmgcAH2gAyNTE4OTcwMjA0OmU1M2UxYzE0OWE4YjJiMDNlZmNjOGY5NDU5YWM0MDlkYTRiMGU4M2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdi4MKrAFqTU0NDk4MDI5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e53e1c149a8b2b03efcc8f9459ac409da4b0e83a", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/e53e1c149a8b2b03efcc8f9459ac409da4b0e83a", "committedDate": "2020-11-11T06:03:04Z", "message": "Bug 868 The offlineResourceBaseURL inside a shared lib is not being read."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MTY1MzY4", "url": "https://github.com/vmware/singleton/pull/869#pullrequestreview-529165368", "createdAt": "2020-11-12T14:53:27Z", "commit": {"oid": "e53e1c149a8b2b03efcc8f9459ac409da4b0e83a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNDo1MzoyOFrOHx-fFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToyMTozNVrOHx_zqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE2NjAzOA==", "bodyText": "Since the offline bundle's root path can be configed freely in config file, so the path of shared lib and that of main application maybe different, then we can't use 'VIPCfg.getInstance().getOfflineResourcesBaseUrl()' here due to it only represents main application's bundle path, or when this code is called by shared lib, the path will be null.\nBesides, we also need to consider when the shared lib's bundle path is the same with that of main application's, how to differentiate them.", "url": "https://github.com/vmware/singleton/pull/869#discussion_r522166038", "createdAt": "2020-11-12T14:53:28Z", "author": {"login": "huihuiw01"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalMessagesOpt.java", "diffHunk": "@@ -48,19 +49,19 @@ public void getComponentMessages(MessageCacheItem cacheItem) {\n \t\ttry {\n \t\t\tString filePath = FormatUtils.format(OFFLINE_RESOURCE_PATH, dto.getComponent(), bestMatch.toLanguageTag());\n \t\t\tPath path = Paths.get(VIPCfg.getInstance().getOfflineResourcesBaseUrl(), filePath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e53e1c149a8b2b03efcc8f9459ac409da4b0e83a"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE3ODgyMQ==", "bodyText": "Here should only get the supported locales of main application, right? Because supported locales should oriented on main application.\nIf yes, when the bundle's root path of shared lib and that of main application's is the same and their supported locales are different, these code will merge shared lib's supported locale and main application's, which lead to when 'getAllComponentTranslation' method in ProductService is executed, there will be some wrong locale&component combinations.", "url": "https://github.com/vmware/singleton/pull/869#discussion_r522178821", "createdAt": "2020-11-12T15:09:54Z", "author": {"login": "huihuiw01"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalProductOpt.java", "diffHunk": "@@ -33,22 +34,20 @@ public LocalProductOpt(BaseDTO dto) {\n     }\n \n     public void getSupportedLocales(MessageCacheItem cacheItem) {\n-        List<String> supportedLocales = new ArrayList<String>();\n+        List<String> supportedLocales = new ArrayList<>();\n         try {\n-\n             Path path = Paths.get(VIPCfg.getInstance().getOfflineResourcesBaseUrl());\n-\n-            URI uri = Thread.currentThread().getContextClassLoader().\n-                    getResource(path.toString()).toURI();\n-\n-            if (uri.getScheme().equals(\"jar\")) {\n-                try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n-                    path = fileSystem.getPath(path.toString());\n+            List<URI> uris = FileUtil.findUris(path);\n+            for (URI uri : uris) {\n+                if (uri.getScheme().equals(\"jar\")) {\n+                    try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n+                        path = fileSystem.getPath(Paths.get(uri).toString());\n+                        getSupportedLocales(path, supportedLocales);\n+                    }\n+                } else {\n+                    path = Paths.get(uri);\n                     getSupportedLocales(path, supportedLocales);\n                 }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e53e1c149a8b2b03efcc8f9459ac409da4b0e83a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE4NzY5MQ==", "bodyText": "Here should get the merged result of shared lib's component list and main application's so that all of them can be cached at main application start up, right?\nBut when the bundle's root path of shared lib and that of main application's is different, you can only get main application's component list.", "url": "https://github.com/vmware/singleton/pull/869#discussion_r522187691", "createdAt": "2020-11-12T15:21:35Z", "author": {"login": "huihuiw01"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalProductOpt.java", "diffHunk": "@@ -64,20 +63,18 @@ public void getSupportedLocales(MessageCacheItem cacheItem) {\n     public List<String> getComponents() {\n         List<String> components = new ArrayList<String>();\n         try {\n-\n             Path path = Paths.get(VIPCfg.getInstance().getOfflineResourcesBaseUrl());\n-\n-            URI uri = Thread.currentThread().getContextClassLoader().\n-                    getResource(path.toString()).toURI();\n-\n-            if (uri.getScheme().equals(\"jar\")) {\n-                try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n-                    path = fileSystem.getPath(path.toString());\n+            List<URI> uris = FileUtil.findUris(path);\n+            for (URI uri : uris) {\n+                if (uri.getScheme().equals(\"jar\")) {\n+                    try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n+                        path = fileSystem.getPath(Paths.get(uri).toString());\n+                        getComponents(path, components);\n+                    }\n+                } else {\n+                    path = Paths.get(uri);\n                     getComponents(path, components);\n                 }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e53e1c149a8b2b03efcc8f9459ac409da4b0e83a"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MjczMDMw", "url": "https://github.com/vmware/singleton/pull/869#pullrequestreview-535273030", "createdAt": "2020-11-20T09:44:54Z", "commit": {"oid": "e53e1c149a8b2b03efcc8f9459ac409da4b0e83a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98ac1e6c2d8d674f1d1fcae40fdd88b00c514cd0", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/98ac1e6c2d8d674f1d1fcae40fdd88b00c514cd0", "committedDate": "2020-11-23T04:44:37Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4d32fa9036629ad40cc79699c44d4b5a95a0809", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/c4d32fa9036629ad40cc79699c44d4b5a95a0809", "committedDate": "2020-11-23T04:55:48Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e486164a8376b193498e1c6ea0c72da3a2b37a24", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/e486164a8376b193498e1c6ea0c72da3a2b37a24", "committedDate": "2020-11-23T04:57:32Z", "message": "code clean up"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNzc4NzE2", "url": "https://github.com/vmware/singleton/pull/869#pullrequestreview-541778716", "createdAt": "2020-12-01T10:53:24Z", "commit": {"oid": "e486164a8376b193498e1c6ea0c72da3a2b37a24"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDo1MzoyNFrOH8nG3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDo1NjowM1rOH8nNYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxNzM0Mw==", "bodyText": "Both if block and else block call 'getSupportedLocales(path, supportedLocales);' , so it's better extract this line out of if-else block.", "url": "https://github.com/vmware/singleton/pull/869#discussion_r533317343", "createdAt": "2020-12-01T10:53:24Z", "author": {"login": "huihuiw01"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalProductOpt.java", "diffHunk": "@@ -33,22 +34,20 @@ public LocalProductOpt(BaseDTO dto) {\n     }\n \n     public void getSupportedLocales(MessageCacheItem cacheItem) {\n-        List<String> supportedLocales = new ArrayList<String>();\n+        List<String> supportedLocales = new ArrayList<>();\n         try {\n-\n             Path path = Paths.get(VIPCfg.getInstance().getOfflineResourcesBaseUrl());\n-\n-            URI uri = Thread.currentThread().getContextClassLoader().\n-                    getResource(path.toString()).toURI();\n-\n-            if (uri.getScheme().equals(\"jar\")) {\n-                try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n-                    path = fileSystem.getPath(path.toString());\n+            List<URI> uris = FileUtil.findUris(path);\n+            for (URI uri : uris) {\n+                if (uri.getScheme().equals(\"jar\")) {\n+                    try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n+                        path = fileSystem.getPath(Paths.get(uri).toString());\n+                        getSupportedLocales(path, supportedLocales);\n+                    }\n+                } else {\n+                    path = Paths.get(uri);\n                     getSupportedLocales(path, supportedLocales);\n                 }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e486164a8376b193498e1c6ea0c72da3a2b37a24"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxOTAxMQ==", "bodyText": "Both if block and else block call 'getComponents(path, components);' , so it's better extract this line out of if-else block.", "url": "https://github.com/vmware/singleton/pull/869#discussion_r533319011", "createdAt": "2020-12-01T10:56:03Z", "author": {"login": "huihuiw01"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalProductOpt.java", "diffHunk": "@@ -64,20 +63,18 @@ public void getSupportedLocales(MessageCacheItem cacheItem) {\n     public List<String> getComponents() {\n         List<String> components = new ArrayList<String>();\n         try {\n-\n             Path path = Paths.get(VIPCfg.getInstance().getOfflineResourcesBaseUrl());\n-\n-            URI uri = Thread.currentThread().getContextClassLoader().\n-                    getResource(path.toString()).toURI();\n-\n-            if (uri.getScheme().equals(\"jar\")) {\n-                try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n-                    path = fileSystem.getPath(path.toString());\n+            List<URI> uris = FileUtil.findUris(path);\n+            for (URI uri : uris) {\n+                if (uri.getScheme().equals(\"jar\")) {\n+                    try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n+                        path = fileSystem.getPath(Paths.get(uri).toString());\n+                        getComponents(path, components);\n+                    }\n+                } else {\n+                    path = Paths.get(uri);\n                     getComponents(path, components);\n                 }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e486164a8376b193498e1c6ea0c72da3a2b37a24"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMzk2MTM1", "url": "https://github.com/vmware/singleton/pull/869#pullrequestreview-543396135", "createdAt": "2020-12-03T02:33:48Z", "commit": {"oid": "e486164a8376b193498e1c6ea0c72da3a2b37a24"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNjQ4NjUz", "url": "https://github.com/vmware/singleton/pull/869#pullrequestreview-542648653", "createdAt": "2020-12-02T09:33:57Z", "commit": {"oid": "e486164a8376b193498e1c6ea0c72da3a2b37a24"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTozMzo1N1rOH9SCeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMjo1Nzo0OVrOH93Qhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAyMDcyOA==", "bodyText": "How about this?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static List<URI> findUris(Path path) {\n          \n          \n            \n                public static List<URI> getAllResources(Path path) {", "url": "https://github.com/vmware/singleton/pull/869#discussion_r534020728", "createdAt": "2020-12-02T09:33:57Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/util/FileUtil.java", "diffHunk": "@@ -88,4 +87,17 @@ public static JSONObject readLocalJsonFile(String filePath) {\n         return jsonObj;\n     }\n \n+    public static List<URI> findUris(Path path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e486164a8376b193498e1c6ea0c72da3a2b37a24"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAzNTI4NA==", "bodyText": "How about this?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            URL url = urls.nextElement();\n          \n          \n            \n                            uris.add(url.toURI());\n          \n          \n            \n                            uris.add(urls.nextElement().toURI());", "url": "https://github.com/vmware/singleton/pull/869#discussion_r534035284", "createdAt": "2020-12-02T09:54:47Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/util/FileUtil.java", "diffHunk": "@@ -88,4 +87,17 @@ public static JSONObject readLocalJsonFile(String filePath) {\n         return jsonObj;\n     }\n \n+    public static List<URI> findUris(Path path) {\n+        List<URI> uris = new LinkedList<>();\n+        try {\n+            Enumeration<URL> urls = Thread.currentThread().getContextClassLoader().getResources(path.toString());\n+            while(urls.hasMoreElements()) {\n+                URL url = urls.nextElement();\n+                uris.add(url.toURI());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e486164a8376b193498e1c6ea0c72da3a2b37a24"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDYyOTg1MQ==", "bodyText": "I agree, the correct solution should be getting supported locales by product and version, not get them from all product-versions.", "url": "https://github.com/vmware/singleton/pull/869#discussion_r534629851", "createdAt": "2020-12-03T02:55:54Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalProductOpt.java", "diffHunk": "@@ -33,22 +34,20 @@ public LocalProductOpt(BaseDTO dto) {\n     }\n \n     public void getSupportedLocales(MessageCacheItem cacheItem) {\n-        List<String> supportedLocales = new ArrayList<String>();\n+        List<String> supportedLocales = new ArrayList<>();\n         try {\n-\n             Path path = Paths.get(VIPCfg.getInstance().getOfflineResourcesBaseUrl());\n-\n-            URI uri = Thread.currentThread().getContextClassLoader().\n-                    getResource(path.toString()).toURI();\n-\n-            if (uri.getScheme().equals(\"jar\")) {\n-                try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n-                    path = fileSystem.getPath(path.toString());\n+            List<URI> uris = FileUtil.findUris(path);\n+            for (URI uri : uris) {\n+                if (uri.getScheme().equals(\"jar\")) {\n+                    try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n+                        path = fileSystem.getPath(Paths.get(uri).toString());\n+                        getSupportedLocales(path, supportedLocales);\n+                    }\n+                } else {\n+                    path = Paths.get(uri);\n                     getSupportedLocales(path, supportedLocales);\n                 }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE3ODgyMQ=="}, "originalCommit": {"oid": "e53e1c149a8b2b03efcc8f9459ac409da4b0e83a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDYzMDUzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n          \n          \n            \n                                    path = fileSystem.getPath(Paths.get(uri).toString());\n          \n          \n            \n                                    getSupportedLocales(path, supportedLocales);\n          \n          \n            \n                                }\n          \n          \n            \n                            } else {\n          \n          \n            \n                                path = Paths.get(uri);\n          \n          \n            \n                                getSupportedLocales(path, supportedLocales);\n          \n          \n            \n                            }\n          \n          \n            \n                                try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n          \n          \n            \n                                    path = fileSystem.getPath(Paths.get(uri).toString());\n          \n          \n            \n                                }\n          \n          \n            \n                            } else {\n          \n          \n            \n                                path = Paths.get(uri);\n          \n          \n            \n                            }\n          \n          \n            \n                            getSupportedLocales(path, supportedLocales);", "url": "https://github.com/vmware/singleton/pull/869#discussion_r534630535", "createdAt": "2020-12-03T02:57:49Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/api/opt/local/LocalProductOpt.java", "diffHunk": "@@ -33,22 +34,20 @@ public LocalProductOpt(BaseDTO dto) {\n     }\n \n     public void getSupportedLocales(MessageCacheItem cacheItem) {\n-        List<String> supportedLocales = new ArrayList<String>();\n+        List<String> supportedLocales = new ArrayList<>();\n         try {\n-\n             Path path = Paths.get(VIPCfg.getInstance().getOfflineResourcesBaseUrl());\n-\n-            URI uri = Thread.currentThread().getContextClassLoader().\n-                    getResource(path.toString()).toURI();\n-\n-            if (uri.getScheme().equals(\"jar\")) {\n-                try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n-                    path = fileSystem.getPath(path.toString());\n+            List<URI> uris = FileUtil.findUris(path);\n+            for (URI uri : uris) {\n+                if (uri.getScheme().equals(\"jar\")) {\n+                    try (FileSystem fileSystem = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap())) {\n+                        path = fileSystem.getPath(Paths.get(uri).toString());\n+                        getSupportedLocales(path, supportedLocales);\n+                    }\n+                } else {\n+                    path = Paths.get(uri);\n                     getSupportedLocales(path, supportedLocales);\n                 }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e486164a8376b193498e1c6ea0c72da3a2b37a24"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "232cd859f385de8cb62742e2a66129607602e796", "author": {"user": {"login": "jessiejuachon", "name": "JESSIELY JUACHON"}}, "url": "https://github.com/vmware/singleton/commit/232cd859f385de8cb62742e2a66129607602e796", "committedDate": "2020-12-04T04:54:43Z", "message": "code clean up"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0ODAxNDEw", "url": "https://github.com/vmware/singleton/pull/869#pullrequestreview-544801410", "createdAt": "2020-12-04T09:44:28Z", "commit": {"oid": "232cd859f385de8cb62742e2a66129607602e796"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0OTcxNTI5", "url": "https://github.com/vmware/singleton/pull/869#pullrequestreview-544971529", "createdAt": "2020-12-04T13:47:32Z", "commit": {"oid": "232cd859f385de8cb62742e2a66129607602e796"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0OTgwMjkz", "url": "https://github.com/vmware/singleton/pull/869#pullrequestreview-544980293", "createdAt": "2020-12-04T13:58:38Z", "commit": {"oid": "232cd859f385de8cb62742e2a66129607602e796"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4141, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}