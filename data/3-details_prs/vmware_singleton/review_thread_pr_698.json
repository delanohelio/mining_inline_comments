{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMDgwMzEx", "number": 698, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjozODoxMFrOEVR1Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMjozMTozN1rOEVpNsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzQ3NjgyOnYy", "diffSide": "RIGHT", "path": "content/en/docs/overview/singleton-sdk/python-client-introduction.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjozODoxMFrOG78LHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoxOTo1NVrOG7_SVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwNTA1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Get the trnalsation message of a component and a key.\n          \n          \n            \n            * Get the translation messages of a component and a key.", "url": "https://github.com/vmware/singleton/pull/698#discussion_r465505055", "createdAt": "2020-08-05T06:38:10Z", "author": {"login": "Xiaochao8"}, "path": "content/en/docs/overview/singleton-sdk/python-client-introduction.md", "diffHunk": "@@ -1,8 +1,202 @@\n ---\n title: \"Python Client Introduction\"\n-date: 2019-09-24T20:08:51+08:00\n+date: 2020-07-30T20:07:51+08:00\n draft: false\n-weight: 60\n+weight: 10\n ---\n \n-Coming soon\n\\ No newline at end of file\n+\n+# Introduction\n+Several python files are provided as the python client to support accessing to Singleton service, making Singleton users to handle its globalization easily.\n+\n+\n+# Features in Python Client\n+\n+- Getting configuration content.\n+- Getting the translation.\n+- Getting messages of a locale.\n+\n+\n+# Prerequisites\n+\n+Python 2.x\n+\n+Python 3.x\n+\n+It's better to install [PyYAML](https://pypi.org/project/PyYAML/) module of python.\n+\n+\n+# How to get the client code\n+```\n+git clone -b g11n-python-client https://github.com/vmware/singleton.git\n+```\n+The client code is [sgtn_client.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_client.py), [sgtn_properties.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_properties.py) and [sgtn_util.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_util.py).\n+It needs a configuration file, like the [sample configuration file](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sample/sample_online_offline.yml).\n+\n+\n+# APIs Available\n+* [Factory Class](#Factory-Class)\n+   * [I18n](#I18n)\n+* [Interface For Release](#Interface-For-Release)\n+   * [Release](#Release)\n+* [Interface For Configuration](#Interface-For-Configuration)\n+   * [Config](#Config)\n+* [Interface For Translation](#Interface-For-Translation)\n+   * [Translation](#Translation)\n+\n+## Factory Class\n+### I18n\n+\n+* It's the factory class that creates and initializes the configuration object and the release object.\n+\n+```python\n+class I18n():\n+    def add_config_file(cls, config_file)\n+    def add_config(cls, base_path, config_data)\n+    def set_current_locale(cls, locale)\n+    def get_current_locale(cls)\n+    def get_release(cls, product, version)\n+```\n+\n+### I18n / add_config_file\n+\n+* Load a configuration json or yaml file and initialize a correspondent release object.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| config_file | string | Configuration file |\n+\n+### I18n / add_config\n+\n+* Load a configuration json or yaml text with a base directory and initialize a correspondent release object.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| base_path | string | Base directory |\n+| config_data | string | Configuration text in json or yaml |\n+\n+### I18n / set_current_locale\n+\n+* Set locale of current thread.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| locale | string | Locale name |\n+\n+### I18n / get_current_locale\n+\n+* Get locale of current thread.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| string | Locale name |\n+\n+### I18n / get_release\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| product | string | Product name |\n+| version | string | Version |\n+\n+* Get release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Release](#Release) | Release object |\n+\n+\n+## Interface For Release\n+### Release\n+```python\n+class Release:\n+    def get_config(self)\n+    def get_translation(self)\n+```\n+\n+### Release / get_config\n+\n+* Get the configuration object owned by the release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Config](#Config) | The configuration object |\n+\n+### Release / get_translation\n+\n+* Get the translation object owned by the release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Translation](#Translation) | The translation object |\n+\n+\n+## Interface For Configuration\n+### Config\n+```python\n+class Config:\n+    def get_config_data(self)\n+    def get_info(self)\n+```\n+### Config / get_config_data\n+\n+* Get configuration data.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| object | Configuration data |\n+\n+### Config / get_info\n+\n+* Get brief information of configuration.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| object | Brief information data |\n+\n+\n+## Interface For Translation\n+### Translation\n+```python\n+class Translation:\n+    def get_string(self, component, key, **kwargs)\n+    def get_locale_strings(self, locale)\n+    def get_locale_supported(self, locale)\n+```\n+\n+### Translation / get_string\n+\n+* Get the trnalsation message of a component and a key.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e38c914c8733a2c49e5500947dadb0d07996dba"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUyOTA4OQ==", "bodyText": "Only one string is returned.", "url": "https://github.com/vmware/singleton/pull/698#discussion_r465529089", "createdAt": "2020-08-05T07:30:15Z", "author": {"login": "jin-jasper"}, "path": "content/en/docs/overview/singleton-sdk/python-client-introduction.md", "diffHunk": "@@ -1,8 +1,202 @@\n ---\n title: \"Python Client Introduction\"\n-date: 2019-09-24T20:08:51+08:00\n+date: 2020-07-30T20:07:51+08:00\n draft: false\n-weight: 60\n+weight: 10\n ---\n \n-Coming soon\n\\ No newline at end of file\n+\n+# Introduction\n+Several python files are provided as the python client to support accessing to Singleton service, making Singleton users to handle its globalization easily.\n+\n+\n+# Features in Python Client\n+\n+- Getting configuration content.\n+- Getting the translation.\n+- Getting messages of a locale.\n+\n+\n+# Prerequisites\n+\n+Python 2.x\n+\n+Python 3.x\n+\n+It's better to install [PyYAML](https://pypi.org/project/PyYAML/) module of python.\n+\n+\n+# How to get the client code\n+```\n+git clone -b g11n-python-client https://github.com/vmware/singleton.git\n+```\n+The client code is [sgtn_client.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_client.py), [sgtn_properties.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_properties.py) and [sgtn_util.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_util.py).\n+It needs a configuration file, like the [sample configuration file](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sample/sample_online_offline.yml).\n+\n+\n+# APIs Available\n+* [Factory Class](#Factory-Class)\n+   * [I18n](#I18n)\n+* [Interface For Release](#Interface-For-Release)\n+   * [Release](#Release)\n+* [Interface For Configuration](#Interface-For-Configuration)\n+   * [Config](#Config)\n+* [Interface For Translation](#Interface-For-Translation)\n+   * [Translation](#Translation)\n+\n+## Factory Class\n+### I18n\n+\n+* It's the factory class that creates and initializes the configuration object and the release object.\n+\n+```python\n+class I18n():\n+    def add_config_file(cls, config_file)\n+    def add_config(cls, base_path, config_data)\n+    def set_current_locale(cls, locale)\n+    def get_current_locale(cls)\n+    def get_release(cls, product, version)\n+```\n+\n+### I18n / add_config_file\n+\n+* Load a configuration json or yaml file and initialize a correspondent release object.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| config_file | string | Configuration file |\n+\n+### I18n / add_config\n+\n+* Load a configuration json or yaml text with a base directory and initialize a correspondent release object.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| base_path | string | Base directory |\n+| config_data | string | Configuration text in json or yaml |\n+\n+### I18n / set_current_locale\n+\n+* Set locale of current thread.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| locale | string | Locale name |\n+\n+### I18n / get_current_locale\n+\n+* Get locale of current thread.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| string | Locale name |\n+\n+### I18n / get_release\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| product | string | Product name |\n+| version | string | Version |\n+\n+* Get release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Release](#Release) | Release object |\n+\n+\n+## Interface For Release\n+### Release\n+```python\n+class Release:\n+    def get_config(self)\n+    def get_translation(self)\n+```\n+\n+### Release / get_config\n+\n+* Get the configuration object owned by the release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Config](#Config) | The configuration object |\n+\n+### Release / get_translation\n+\n+* Get the translation object owned by the release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Translation](#Translation) | The translation object |\n+\n+\n+## Interface For Configuration\n+### Config\n+```python\n+class Config:\n+    def get_config_data(self)\n+    def get_info(self)\n+```\n+### Config / get_config_data\n+\n+* Get configuration data.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| object | Configuration data |\n+\n+### Config / get_info\n+\n+* Get brief information of configuration.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| object | Brief information data |\n+\n+\n+## Interface For Translation\n+### Translation\n+```python\n+class Translation:\n+    def get_string(self, component, key, **kwargs)\n+    def get_locale_strings(self, locale)\n+    def get_locale_supported(self, locale)\n+```\n+\n+### Translation / get_string\n+\n+* Get the trnalsation message of a component and a key.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwNTA1NQ=="}, "originalCommit": {"oid": "5e38c914c8733a2c49e5500947dadb0d07996dba"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU1NjA1NQ==", "bodyText": "It has a typo", "url": "https://github.com/vmware/singleton/pull/698#discussion_r465556055", "createdAt": "2020-08-05T08:19:55Z", "author": {"login": "Xiaochao8"}, "path": "content/en/docs/overview/singleton-sdk/python-client-introduction.md", "diffHunk": "@@ -1,8 +1,202 @@\n ---\n title: \"Python Client Introduction\"\n-date: 2019-09-24T20:08:51+08:00\n+date: 2020-07-30T20:07:51+08:00\n draft: false\n-weight: 60\n+weight: 10\n ---\n \n-Coming soon\n\\ No newline at end of file\n+\n+# Introduction\n+Several python files are provided as the python client to support accessing to Singleton service, making Singleton users to handle its globalization easily.\n+\n+\n+# Features in Python Client\n+\n+- Getting configuration content.\n+- Getting the translation.\n+- Getting messages of a locale.\n+\n+\n+# Prerequisites\n+\n+Python 2.x\n+\n+Python 3.x\n+\n+It's better to install [PyYAML](https://pypi.org/project/PyYAML/) module of python.\n+\n+\n+# How to get the client code\n+```\n+git clone -b g11n-python-client https://github.com/vmware/singleton.git\n+```\n+The client code is [sgtn_client.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_client.py), [sgtn_properties.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_properties.py) and [sgtn_util.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_util.py).\n+It needs a configuration file, like the [sample configuration file](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sample/sample_online_offline.yml).\n+\n+\n+# APIs Available\n+* [Factory Class](#Factory-Class)\n+   * [I18n](#I18n)\n+* [Interface For Release](#Interface-For-Release)\n+   * [Release](#Release)\n+* [Interface For Configuration](#Interface-For-Configuration)\n+   * [Config](#Config)\n+* [Interface For Translation](#Interface-For-Translation)\n+   * [Translation](#Translation)\n+\n+## Factory Class\n+### I18n\n+\n+* It's the factory class that creates and initializes the configuration object and the release object.\n+\n+```python\n+class I18n():\n+    def add_config_file(cls, config_file)\n+    def add_config(cls, base_path, config_data)\n+    def set_current_locale(cls, locale)\n+    def get_current_locale(cls)\n+    def get_release(cls, product, version)\n+```\n+\n+### I18n / add_config_file\n+\n+* Load a configuration json or yaml file and initialize a correspondent release object.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| config_file | string | Configuration file |\n+\n+### I18n / add_config\n+\n+* Load a configuration json or yaml text with a base directory and initialize a correspondent release object.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| base_path | string | Base directory |\n+| config_data | string | Configuration text in json or yaml |\n+\n+### I18n / set_current_locale\n+\n+* Set locale of current thread.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| locale | string | Locale name |\n+\n+### I18n / get_current_locale\n+\n+* Get locale of current thread.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| string | Locale name |\n+\n+### I18n / get_release\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| product | string | Product name |\n+| version | string | Version |\n+\n+* Get release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Release](#Release) | Release object |\n+\n+\n+## Interface For Release\n+### Release\n+```python\n+class Release:\n+    def get_config(self)\n+    def get_translation(self)\n+```\n+\n+### Release / get_config\n+\n+* Get the configuration object owned by the release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Config](#Config) | The configuration object |\n+\n+### Release / get_translation\n+\n+* Get the translation object owned by the release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Translation](#Translation) | The translation object |\n+\n+\n+## Interface For Configuration\n+### Config\n+```python\n+class Config:\n+    def get_config_data(self)\n+    def get_info(self)\n+```\n+### Config / get_config_data\n+\n+* Get configuration data.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| object | Configuration data |\n+\n+### Config / get_info\n+\n+* Get brief information of configuration.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| object | Brief information data |\n+\n+\n+## Interface For Translation\n+### Translation\n+```python\n+class Translation:\n+    def get_string(self, component, key, **kwargs)\n+    def get_locale_strings(self, locale)\n+    def get_locale_supported(self, locale)\n+```\n+\n+### Translation / get_string\n+\n+* Get the trnalsation message of a component and a key.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwNTA1NQ=="}, "originalCommit": {"oid": "5e38c914c8733a2c49e5500947dadb0d07996dba"}, "originalPosition": 172}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzQ3ODMwOnYy", "diffSide": "RIGHT", "path": "content/en/docs/overview/singleton-sdk/python-client-introduction.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjozODozOVrOG78L8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNzozNzowNlrOG792YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwNTI2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                def get_string(self, component, key, **kwargs)\n          \n          \n            \n                def get_string(self, component, key, **args)", "url": "https://github.com/vmware/singleton/pull/698#discussion_r465505266", "createdAt": "2020-08-05T06:38:39Z", "author": {"login": "Xiaochao8"}, "path": "content/en/docs/overview/singleton-sdk/python-client-introduction.md", "diffHunk": "@@ -1,8 +1,202 @@\n ---\n title: \"Python Client Introduction\"\n-date: 2019-09-24T20:08:51+08:00\n+date: 2020-07-30T20:07:51+08:00\n draft: false\n-weight: 60\n+weight: 10\n ---\n \n-Coming soon\n\\ No newline at end of file\n+\n+# Introduction\n+Several python files are provided as the python client to support accessing to Singleton service, making Singleton users to handle its globalization easily.\n+\n+\n+# Features in Python Client\n+\n+- Getting configuration content.\n+- Getting the translation.\n+- Getting messages of a locale.\n+\n+\n+# Prerequisites\n+\n+Python 2.x\n+\n+Python 3.x\n+\n+It's better to install [PyYAML](https://pypi.org/project/PyYAML/) module of python.\n+\n+\n+# How to get the client code\n+```\n+git clone -b g11n-python-client https://github.com/vmware/singleton.git\n+```\n+The client code is [sgtn_client.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_client.py), [sgtn_properties.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_properties.py) and [sgtn_util.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_util.py).\n+It needs a configuration file, like the [sample configuration file](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sample/sample_online_offline.yml).\n+\n+\n+# APIs Available\n+* [Factory Class](#Factory-Class)\n+   * [I18n](#I18n)\n+* [Interface For Release](#Interface-For-Release)\n+   * [Release](#Release)\n+* [Interface For Configuration](#Interface-For-Configuration)\n+   * [Config](#Config)\n+* [Interface For Translation](#Interface-For-Translation)\n+   * [Translation](#Translation)\n+\n+## Factory Class\n+### I18n\n+\n+* It's the factory class that creates and initializes the configuration object and the release object.\n+\n+```python\n+class I18n():\n+    def add_config_file(cls, config_file)\n+    def add_config(cls, base_path, config_data)\n+    def set_current_locale(cls, locale)\n+    def get_current_locale(cls)\n+    def get_release(cls, product, version)\n+```\n+\n+### I18n / add_config_file\n+\n+* Load a configuration json or yaml file and initialize a correspondent release object.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| config_file | string | Configuration file |\n+\n+### I18n / add_config\n+\n+* Load a configuration json or yaml text with a base directory and initialize a correspondent release object.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| base_path | string | Base directory |\n+| config_data | string | Configuration text in json or yaml |\n+\n+### I18n / set_current_locale\n+\n+* Set locale of current thread.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| locale | string | Locale name |\n+\n+### I18n / get_current_locale\n+\n+* Get locale of current thread.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| string | Locale name |\n+\n+### I18n / get_release\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| product | string | Product name |\n+| version | string | Version |\n+\n+* Get release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Release](#Release) | Release object |\n+\n+\n+## Interface For Release\n+### Release\n+```python\n+class Release:\n+    def get_config(self)\n+    def get_translation(self)\n+```\n+\n+### Release / get_config\n+\n+* Get the configuration object owned by the release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Config](#Config) | The configuration object |\n+\n+### Release / get_translation\n+\n+* Get the translation object owned by the release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Translation](#Translation) | The translation object |\n+\n+\n+## Interface For Configuration\n+### Config\n+```python\n+class Config:\n+    def get_config_data(self)\n+    def get_info(self)\n+```\n+### Config / get_config_data\n+\n+* Get configuration data.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| object | Configuration data |\n+\n+### Config / get_info\n+\n+* Get brief information of configuration.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| object | Brief information data |\n+\n+\n+## Interface For Translation\n+### Translation\n+```python\n+class Translation:\n+    def get_string(self, component, key, **kwargs)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e38c914c8733a2c49e5500947dadb0d07996dba"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUzMjUxMw==", "bodyText": "kwargs is a python style name that has fixed meaning.", "url": "https://github.com/vmware/singleton/pull/698#discussion_r465532513", "createdAt": "2020-08-05T07:37:06Z", "author": {"login": "jin-jasper"}, "path": "content/en/docs/overview/singleton-sdk/python-client-introduction.md", "diffHunk": "@@ -1,8 +1,202 @@\n ---\n title: \"Python Client Introduction\"\n-date: 2019-09-24T20:08:51+08:00\n+date: 2020-07-30T20:07:51+08:00\n draft: false\n-weight: 60\n+weight: 10\n ---\n \n-Coming soon\n\\ No newline at end of file\n+\n+# Introduction\n+Several python files are provided as the python client to support accessing to Singleton service, making Singleton users to handle its globalization easily.\n+\n+\n+# Features in Python Client\n+\n+- Getting configuration content.\n+- Getting the translation.\n+- Getting messages of a locale.\n+\n+\n+# Prerequisites\n+\n+Python 2.x\n+\n+Python 3.x\n+\n+It's better to install [PyYAML](https://pypi.org/project/PyYAML/) module of python.\n+\n+\n+# How to get the client code\n+```\n+git clone -b g11n-python-client https://github.com/vmware/singleton.git\n+```\n+The client code is [sgtn_client.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_client.py), [sgtn_properties.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_properties.py) and [sgtn_util.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_util.py).\n+It needs a configuration file, like the [sample configuration file](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sample/sample_online_offline.yml).\n+\n+\n+# APIs Available\n+* [Factory Class](#Factory-Class)\n+   * [I18n](#I18n)\n+* [Interface For Release](#Interface-For-Release)\n+   * [Release](#Release)\n+* [Interface For Configuration](#Interface-For-Configuration)\n+   * [Config](#Config)\n+* [Interface For Translation](#Interface-For-Translation)\n+   * [Translation](#Translation)\n+\n+## Factory Class\n+### I18n\n+\n+* It's the factory class that creates and initializes the configuration object and the release object.\n+\n+```python\n+class I18n():\n+    def add_config_file(cls, config_file)\n+    def add_config(cls, base_path, config_data)\n+    def set_current_locale(cls, locale)\n+    def get_current_locale(cls)\n+    def get_release(cls, product, version)\n+```\n+\n+### I18n / add_config_file\n+\n+* Load a configuration json or yaml file and initialize a correspondent release object.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| config_file | string | Configuration file |\n+\n+### I18n / add_config\n+\n+* Load a configuration json or yaml text with a base directory and initialize a correspondent release object.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| base_path | string | Base directory |\n+| config_data | string | Configuration text in json or yaml |\n+\n+### I18n / set_current_locale\n+\n+* Set locale of current thread.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| locale | string | Locale name |\n+\n+### I18n / get_current_locale\n+\n+* Get locale of current thread.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| string | Locale name |\n+\n+### I18n / get_release\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| product | string | Product name |\n+| version | string | Version |\n+\n+* Get release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Release](#Release) | Release object |\n+\n+\n+## Interface For Release\n+### Release\n+```python\n+class Release:\n+    def get_config(self)\n+    def get_translation(self)\n+```\n+\n+### Release / get_config\n+\n+* Get the configuration object owned by the release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Config](#Config) | The configuration object |\n+\n+### Release / get_translation\n+\n+* Get the translation object owned by the release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Translation](#Translation) | The translation object |\n+\n+\n+## Interface For Configuration\n+### Config\n+```python\n+class Config:\n+    def get_config_data(self)\n+    def get_info(self)\n+```\n+### Config / get_config_data\n+\n+* Get configuration data.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| object | Configuration data |\n+\n+### Config / get_info\n+\n+* Get brief information of configuration.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| object | Brief information data |\n+\n+\n+## Interface For Translation\n+### Translation\n+```python\n+class Translation:\n+    def get_string(self, component, key, **kwargs)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwNTI2Ng=="}, "originalCommit": {"oid": "5e38c914c8733a2c49e5500947dadb0d07996dba"}, "originalPosition": 165}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzQ4MzAyOnYy", "diffSide": "RIGHT", "path": "content/en/docs/overview/singleton-sdk/python-client-introduction.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjo0MDoyNFrOG78OvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjo0MDoyNFrOG78OvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwNTk4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Several python files are provided as the python client to support accessing to Singleton service, making Singleton users to handle its globalization easily.\n          \n          \n            \n            Several python files are provided as the python client to support accessing Singleton service, making Singleton users to handle its globalization easily.", "url": "https://github.com/vmware/singleton/pull/698#discussion_r465505981", "createdAt": "2020-08-05T06:40:24Z", "author": {"login": "Xiaochao8"}, "path": "content/en/docs/overview/singleton-sdk/python-client-introduction.md", "diffHunk": "@@ -1,8 +1,202 @@\n ---\n title: \"Python Client Introduction\"\n-date: 2019-09-24T20:08:51+08:00\n+date: 2020-07-30T20:07:51+08:00\n draft: false\n-weight: 60\n+weight: 10\n ---\n \n-Coming soon\n\\ No newline at end of file\n+\n+# Introduction\n+Several python files are provided as the python client to support accessing to Singleton service, making Singleton users to handle its globalization easily.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e38c914c8733a2c49e5500947dadb0d07996dba"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzQ4NjI1OnYy", "diffSide": "RIGHT", "path": "content/en/docs/overview/singleton-sdk/python-client-introduction.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjo0MToyMlrOG78QmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODowNzo1NlrOG7-4Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwNjQ1Ng==", "bodyText": "TYPO: correspondent", "url": "https://github.com/vmware/singleton/pull/698#discussion_r465506456", "createdAt": "2020-08-05T06:41:22Z", "author": {"login": "Xiaochao8"}, "path": "content/en/docs/overview/singleton-sdk/python-client-introduction.md", "diffHunk": "@@ -1,8 +1,202 @@\n ---\n title: \"Python Client Introduction\"\n-date: 2019-09-24T20:08:51+08:00\n+date: 2020-07-30T20:07:51+08:00\n draft: false\n-weight: 60\n+weight: 10\n ---\n \n-Coming soon\n\\ No newline at end of file\n+\n+# Introduction\n+Several python files are provided as the python client to support accessing to Singleton service, making Singleton users to handle its globalization easily.\n+\n+\n+# Features in Python Client\n+\n+- Getting configuration content.\n+- Getting the translation.\n+- Getting messages of a locale.\n+\n+\n+# Prerequisites\n+\n+Python 2.x\n+\n+Python 3.x\n+\n+It's better to install [PyYAML](https://pypi.org/project/PyYAML/) module of python.\n+\n+\n+# How to get the client code\n+```\n+git clone -b g11n-python-client https://github.com/vmware/singleton.git\n+```\n+The client code is [sgtn_client.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_client.py), [sgtn_properties.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_properties.py) and [sgtn_util.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_util.py).\n+It needs a configuration file, like the [sample configuration file](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sample/sample_online_offline.yml).\n+\n+\n+# APIs Available\n+* [Factory Class](#Factory-Class)\n+   * [I18n](#I18n)\n+* [Interface For Release](#Interface-For-Release)\n+   * [Release](#Release)\n+* [Interface For Configuration](#Interface-For-Configuration)\n+   * [Config](#Config)\n+* [Interface For Translation](#Interface-For-Translation)\n+   * [Translation](#Translation)\n+\n+## Factory Class\n+### I18n\n+\n+* It's the factory class that creates and initializes the configuration object and the release object.\n+\n+```python\n+class I18n():\n+    def add_config_file(cls, config_file)\n+    def add_config(cls, base_path, config_data)\n+    def set_current_locale(cls, locale)\n+    def get_current_locale(cls)\n+    def get_release(cls, product, version)\n+```\n+\n+### I18n / add_config_file\n+\n+* Load a configuration json or yaml file and initialize a correspondent release object.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e38c914c8733a2c49e5500947dadb0d07996dba"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0OTM5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Load a configuration json or yaml file and initialize a correspondent release object.\n          \n          \n            \n            * Load a configuration json or yaml file and initialize a corresponding release object.", "url": "https://github.com/vmware/singleton/pull/698#discussion_r465549395", "createdAt": "2020-08-05T08:07:56Z", "author": {"login": "jin-jasper"}, "path": "content/en/docs/overview/singleton-sdk/python-client-introduction.md", "diffHunk": "@@ -1,8 +1,202 @@\n ---\n title: \"Python Client Introduction\"\n-date: 2019-09-24T20:08:51+08:00\n+date: 2020-07-30T20:07:51+08:00\n draft: false\n-weight: 60\n+weight: 10\n ---\n \n-Coming soon\n\\ No newline at end of file\n+\n+# Introduction\n+Several python files are provided as the python client to support accessing to Singleton service, making Singleton users to handle its globalization easily.\n+\n+\n+# Features in Python Client\n+\n+- Getting configuration content.\n+- Getting the translation.\n+- Getting messages of a locale.\n+\n+\n+# Prerequisites\n+\n+Python 2.x\n+\n+Python 3.x\n+\n+It's better to install [PyYAML](https://pypi.org/project/PyYAML/) module of python.\n+\n+\n+# How to get the client code\n+```\n+git clone -b g11n-python-client https://github.com/vmware/singleton.git\n+```\n+The client code is [sgtn_client.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_client.py), [sgtn_properties.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_properties.py) and [sgtn_util.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_util.py).\n+It needs a configuration file, like the [sample configuration file](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sample/sample_online_offline.yml).\n+\n+\n+# APIs Available\n+* [Factory Class](#Factory-Class)\n+   * [I18n](#I18n)\n+* [Interface For Release](#Interface-For-Release)\n+   * [Release](#Release)\n+* [Interface For Configuration](#Interface-For-Configuration)\n+   * [Config](#Config)\n+* [Interface For Translation](#Interface-For-Translation)\n+   * [Translation](#Translation)\n+\n+## Factory Class\n+### I18n\n+\n+* It's the factory class that creates and initializes the configuration object and the release object.\n+\n+```python\n+class I18n():\n+    def add_config_file(cls, config_file)\n+    def add_config(cls, base_path, config_data)\n+    def set_current_locale(cls, locale)\n+    def get_current_locale(cls)\n+    def get_release(cls, product, version)\n+```\n+\n+### I18n / add_config_file\n+\n+* Load a configuration json or yaml file and initialize a correspondent release object.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwNjQ1Ng=="}, "originalCommit": {"oid": "5e38c914c8733a2c49e5500947dadb0d07996dba"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTMwODAzOnYy", "diffSide": "RIGHT", "path": "content/en/docs/overview/singleton-sdk/python-client-introduction.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMjozMTozN1rOG8hETg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMjozMTozN1rOG8hETg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEwOTUxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Get the trnalsation message of a component and a key.\n          \n          \n            \n            * Get the translation message of a component and a key.", "url": "https://github.com/vmware/singleton/pull/698#discussion_r466109518", "createdAt": "2020-08-06T02:31:37Z", "author": {"login": "jin-jasper"}, "path": "content/en/docs/overview/singleton-sdk/python-client-introduction.md", "diffHunk": "@@ -1,8 +1,202 @@\n ---\n title: \"Python Client Introduction\"\n-date: 2019-09-24T20:08:51+08:00\n+date: 2020-07-30T20:07:51+08:00\n draft: false\n-weight: 60\n+weight: 10\n ---\n \n-Coming soon\n\\ No newline at end of file\n+\n+# Introduction\n+Several python files are provided as the python client to support accessing Singleton service, making Singleton users to handle its globalization easily.\n+\n+\n+# Features in Python Client\n+\n+- Getting configuration content.\n+- Getting the translation.\n+- Getting messages of a locale.\n+\n+\n+# Prerequisites\n+\n+Python 2.x\n+\n+Python 3.x\n+\n+It's better to install [PyYAML](https://pypi.org/project/PyYAML/) module of python.\n+\n+\n+# How to get the client code\n+```\n+git clone -b g11n-python-client https://github.com/vmware/singleton.git\n+```\n+The client code is [sgtn_client.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_client.py), [sgtn_properties.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_properties.py) and [sgtn_util.py](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sgtn_util.py).\n+It needs a configuration file, like the [sample configuration file](https://github.com/vmware/singleton/blob/g11n-python-client/sgtn4python/sample/sample_online_offline.yml).\n+\n+\n+# APIs Available\n+* [Factory Class](#Factory-Class)\n+   * [I18n](#I18n)\n+* [Interface For Release](#Interface-For-Release)\n+   * [Release](#Release)\n+* [Interface For Configuration](#Interface-For-Configuration)\n+   * [Config](#Config)\n+* [Interface For Translation](#Interface-For-Translation)\n+   * [Translation](#Translation)\n+\n+## Factory Class\n+### I18n\n+\n+* It's the factory class that creates and initializes the configuration object and the release object.\n+\n+```python\n+class I18n():\n+    def add_config_file(cls, config_file)\n+    def add_config(cls, base_path, config_data)\n+    def set_current_locale(cls, locale)\n+    def get_current_locale(cls)\n+    def get_release(cls, product, version)\n+```\n+\n+### I18n / add_config_file\n+\n+* Load a configuration json or yaml file and initialize a corresponding release object.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| config_file | string | Configuration file |\n+\n+### I18n / add_config\n+\n+* Load a configuration json or yaml text with a base directory and initialize a correspondent release object.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| base_path | string | Base directory |\n+| config_data | string | Configuration text in json or yaml |\n+\n+### I18n / set_current_locale\n+\n+* Set locale of current thread.\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| locale | string | Locale name |\n+\n+### I18n / get_current_locale\n+\n+* Get locale of current thread.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| string | Locale name |\n+\n+### I18n / get_release\n+\n+| Parameter | Type | Description |\n+| ------ | ------ | ------ |\n+| product | string | Product name |\n+| version | string | Version |\n+\n+* Get release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Release](#Release) | Release object |\n+\n+\n+## Interface For Release\n+### Release\n+```python\n+class Release:\n+    def get_config(self)\n+    def get_translation(self)\n+```\n+\n+### Release / get_config\n+\n+* Get the configuration object owned by the release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Config](#Config) | The configuration object |\n+\n+### Release / get_translation\n+\n+* Get the translation object owned by the release object.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| [Translation](#Translation) | The translation object |\n+\n+\n+## Interface For Configuration\n+### Config\n+```python\n+class Config:\n+    def get_config_data(self)\n+    def get_info(self)\n+```\n+### Config / get_config_data\n+\n+* Get configuration data.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| object | Configuration data |\n+\n+### Config / get_info\n+\n+* Get brief information of configuration.\n+\n+| Return | Description |\n+| ------ | ------ |\n+| object | Brief information data |\n+\n+\n+## Interface For Translation\n+### Translation\n+```python\n+class Translation:\n+    def get_string(self, component, key, **kwargs)\n+    def get_locale_strings(self, locale)\n+    def get_locale_supported(self, locale)\n+```\n+\n+### Translation / get_string\n+\n+* Get the trnalsation message of a component and a key.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3927e619a98f89b224ba15a10a03559ff4523313"}, "originalPosition": 172}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4498, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}