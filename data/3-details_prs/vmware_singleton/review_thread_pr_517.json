{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NDU5MzM3", "number": 517, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDozMDoyOVrOD0RsoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNjoxNzozOFrOD1HHpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTQyNDk3OnYy", "diffSide": "RIGHT", "path": "autotest/client/go/goclienttest/testdata/Config/configDefaultLocaleEmpty.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDozMDoyOVrOGJI6vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNToxNTozMFrOGKW8UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzNjQ3Ng==", "bodyText": "Change all the occurrences of 'JSCoreSDKTest' to 'GoClientTest'?", "url": "https://github.com/vmware/singleton/pull/517#discussion_r412236476", "createdAt": "2020-04-21T14:30:29Z", "author": {"login": "Xiaochao8"}, "path": "autotest/client/go/goclienttest/testdata/Config/configDefaultLocaleEmpty.yaml", "diffHunk": "@@ -0,0 +1,14 @@\n+singletonServer: https://localhost:8090\n+\n+enableCache: true\n+initializeCache: true\n+#unit: second\n+cacheExpiredTime: 500\n+\n+\n+defaultLocale: \"\"\n+\n+localBundles: \"\"\n+\n+productName: JSCoreSDKTest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cbda873aabf0becc878fd825baf45b9fd6fe9b4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxNDgzMw==", "bodyText": "Has corrected it in new commit", "url": "https://github.com/vmware/singleton/pull/517#discussion_r413514833", "createdAt": "2020-04-23T05:15:30Z", "author": {"login": "lyiyu66"}, "path": "autotest/client/go/goclienttest/testdata/Config/configDefaultLocaleEmpty.yaml", "diffHunk": "@@ -0,0 +1,14 @@\n+singletonServer: https://localhost:8090\n+\n+enableCache: true\n+initializeCache: true\n+#unit: second\n+cacheExpiredTime: 500\n+\n+\n+defaultLocale: \"\"\n+\n+localBundles: \"\"\n+\n+productName: JSCoreSDKTest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzNjQ3Ng=="}, "originalCommit": {"oid": "0cbda873aabf0becc878fd825baf45b9fd6fe9b4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTQzNjYwOnYy", "diffSide": "RIGHT", "path": "autotest/client/go/goclienttest/testdata/localBundles/GoClientTest/1.0.0/contact/messages_de.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDozMjoyNlrOGJJBbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNToxNTo1MlrOGKW8xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzODE5MA==", "bodyText": "Change all the occurrences of 'VIP' to 'Singleton'?", "url": "https://github.com/vmware/singleton/pull/517#discussion_r412238190", "createdAt": "2020-04-21T14:32:26Z", "author": {"login": "Xiaochao8"}, "path": "autotest/client/go/goclienttest/testdata/localBundles/GoClientTest/1.0.0/contact/messages_de.json", "diffHunk": "@@ -0,0 +1,12 @@\n+{\n+    \"component\":\"contact\",\n+    \"messages\":{\n+      \"contact.marketing\": \"Marketing:\",\n+      \"contact.applicationname\": \"VIP-Sample-Web-Anwendung\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cbda873aabf0becc878fd825baf45b9fd6fe9b4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxNDk0OQ==", "bodyText": "Has corrected it in new commit", "url": "https://github.com/vmware/singleton/pull/517#discussion_r413514949", "createdAt": "2020-04-23T05:15:52Z", "author": {"login": "lyiyu66"}, "path": "autotest/client/go/goclienttest/testdata/localBundles/GoClientTest/1.0.0/contact/messages_de.json", "diffHunk": "@@ -0,0 +1,12 @@\n+{\n+    \"component\":\"contact\",\n+    \"messages\":{\n+      \"contact.marketing\": \"Marketing:\",\n+      \"contact.applicationname\": \"VIP-Sample-Web-Anwendung\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzODE5MA=="}, "originalCommit": {"oid": "0cbda873aabf0becc878fd825baf45b9fd6fe9b4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTQ0Nzk1OnYy", "diffSide": "RIGHT", "path": "autotest/client/go/goclienttest/testdata/localBundles/GoClientTest2/1.0/c2/messages_en.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDozNDozMVrOGJJIKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNToxNjoxOFrOGKW9jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzOTkxMg==", "bodyText": "Remove all the occurrences of 'Angular', or change to other words?", "url": "https://github.com/vmware/singleton/pull/517#discussion_r412239912", "createdAt": "2020-04-21T14:34:31Z", "author": {"login": "Xiaochao8"}, "path": "autotest/client/go/goclienttest/testdata/localBundles/GoClientTest2/1.0/c2/messages_en.json", "diffHunk": "@@ -0,0 +1,9 @@\n+{\n+  \"component\" : \"c2\",\n+  \"messages\" : {\n+    \"demo.plural.users\" : \"{0, plural,one {Singleton Angular client has a user.} other {Singleton Angular client has # users.}}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cbda873aabf0becc878fd825baf45b9fd6fe9b4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxNTE0OA==", "bodyText": "Has corrected it in new commit", "url": "https://github.com/vmware/singleton/pull/517#discussion_r413515148", "createdAt": "2020-04-23T05:16:18Z", "author": {"login": "lyiyu66"}, "path": "autotest/client/go/goclienttest/testdata/localBundles/GoClientTest2/1.0/c2/messages_en.json", "diffHunk": "@@ -0,0 +1,9 @@\n+{\n+  \"component\" : \"c2\",\n+  \"messages\" : {\n+    \"demo.plural.users\" : \"{0, plural,one {Singleton Angular client has a user.} other {Singleton Angular client has # users.}}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzOTkxMg=="}, "originalCommit": {"oid": "0cbda873aabf0becc878fd825baf45b9fd6fe9b4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTQ4NTA3OnYy", "diffSide": "RIGHT", "path": "autotest/client/go/goclienttest/LocalBundlesOnly/confignull.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDo0MToxMFrOGJJeqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNToxNjoyNFrOGKW9tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI0NTY3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            name: NoExistingProduct\n          \n          \n            \n            name:  NonExistentProduct\n          \n      \n    \n    \n  \n\nChange all the occurrences?", "url": "https://github.com/vmware/singleton/pull/517#discussion_r412245674", "createdAt": "2020-04-21T14:41:10Z", "author": {"login": "Xiaochao8"}, "path": "autotest/client/go/goclienttest/LocalBundlesOnly/confignull.yaml", "diffHunk": "@@ -0,0 +1,15 @@\n+singletonServer: \"\"\n+\n+enableCache: false\n+initializeCache: false\n+#unit: second\n+cacheExpiredTime: 1\n+\n+\n+defaultLocale: zh-Hans\n+\n+localBundles: \"../testdata/localBundles/GoClientTest/\"\n+\n+\n+name: NoExistingProduct", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cbda873aabf0becc878fd825baf45b9fd6fe9b4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxNTE4OA==", "bodyText": "Has corrected it in new commit", "url": "https://github.com/vmware/singleton/pull/517#discussion_r413515188", "createdAt": "2020-04-23T05:16:24Z", "author": {"login": "lyiyu66"}, "path": "autotest/client/go/goclienttest/LocalBundlesOnly/confignull.yaml", "diffHunk": "@@ -0,0 +1,15 @@\n+singletonServer: \"\"\n+\n+enableCache: false\n+initializeCache: false\n+#unit: second\n+cacheExpiredTime: 1\n+\n+\n+defaultLocale: zh-Hans\n+\n+localBundles: \"../testdata/localBundles/GoClientTest/\"\n+\n+\n+name: NoExistingProduct", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI0NTY3NA=="}, "originalCommit": {"oid": "0cbda873aabf0becc878fd825baf45b9fd6fe9b4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTU1NDIyOnYy", "diffSide": "RIGHT", "path": "autotest/client/go/goclienttest/LocalBundlesOnly/getComponentTranslation_test.go", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDo1MzoxNlrOGJKIIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNToxNjozM1rOGKW94w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI1NjI5MQ==", "bodyText": "Change all the occurrences of 'localebundle' to 'localbundle'?", "url": "https://github.com/vmware/singleton/pull/517#discussion_r412256291", "createdAt": "2020-04-21T14:53:16Z", "author": {"login": "Xiaochao8"}, "path": "autotest/client/go/goclienttest/LocalBundlesOnly/getComponentTranslation_test.go", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+\n+package LocalBundlesOnly\n+\n+import (\n+\t\"fmt\"\n+\t\"testing\"\n+\n+\t. \"github.com/smartystreets/goconvey/convey\"\n+\n+\tsgtn \"github.com/vmware/singleton\"\n+)\n+\n+func TestGetComponentTranslation(t *testing.T) {\n+\n+\tcfPath := \"config.yaml\"\n+\tcfg, _ := sgtn.NewConfig(cfPath)\n+\tinst, _ := sgtn.NewInst(*cfg)\n+\tfmt.Print(inst)\n+\ttranslation := inst.GetTranslation()\n+\n+\tConvey(\"component-localbundles-requestlocale: Get request locale's translation from localbundles\", t, func() {\n+\n+\t\tConvey(\"component-localbundle-requestlocale: request locale(fr) is in localebundle, return request locale translation from localbundles(P0)\", func() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cbda873aabf0becc878fd825baf45b9fd6fe9b4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxNTIzNQ==", "bodyText": "Has corrected it in new commit", "url": "https://github.com/vmware/singleton/pull/517#discussion_r413515235", "createdAt": "2020-04-23T05:16:33Z", "author": {"login": "lyiyu66"}, "path": "autotest/client/go/goclienttest/LocalBundlesOnly/getComponentTranslation_test.go", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+\n+package LocalBundlesOnly\n+\n+import (\n+\t\"fmt\"\n+\t\"testing\"\n+\n+\t. \"github.com/smartystreets/goconvey/convey\"\n+\n+\tsgtn \"github.com/vmware/singleton\"\n+)\n+\n+func TestGetComponentTranslation(t *testing.T) {\n+\n+\tcfPath := \"config.yaml\"\n+\tcfg, _ := sgtn.NewConfig(cfPath)\n+\tinst, _ := sgtn.NewInst(*cfg)\n+\tfmt.Print(inst)\n+\ttranslation := inst.GetTranslation()\n+\n+\tConvey(\"component-localbundles-requestlocale: Get request locale's translation from localbundles\", t, func() {\n+\n+\t\tConvey(\"component-localbundle-requestlocale: request locale(fr) is in localebundle, return request locale translation from localbundles(P0)\", func() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI1NjI5MQ=="}, "originalCommit": {"oid": "0cbda873aabf0becc878fd825baf45b9fd6fe9b4"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MDE3NzY1OnYy", "diffSide": "RIGHT", "path": "autotest/client/go/goclienttest/LocalBundlesOnly/getStringTranslation_test.go", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNjoxNzozOFrOGKYYJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNjoxNzozOFrOGKYYJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUzODM0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\ttran2, _ := translation.GetStringMessage(\"fr\", \"contact\", \"non-existing.key\")\n          \n          \n            \n            \t\t\ttran2, _ := translation.GetStringMessage(\"fr\", \"contact\", \"non-existent.key\")\n          \n      \n    \n    \n  \n\nChange all the occurences of it?", "url": "https://github.com/vmware/singleton/pull/517#discussion_r413538343", "createdAt": "2020-04-23T06:17:38Z", "author": {"login": "Xiaochao8"}, "path": "autotest/client/go/goclienttest/LocalBundlesOnly/getStringTranslation_test.go", "diffHunk": "@@ -0,0 +1,101 @@\n+package LocalBundlesOnly\n+\n+import (\n+\t\"fmt\"\n+\t\"testing\"\n+\n+\t. \"github.com/smartystreets/goconvey/convey\"\n+\n+\tsgtn \"github.com/vmware/singleton\"\n+)\n+\n+func TestGetStringTranslation(t *testing.T) {\n+\n+\tcfPath := \"config.yaml\"\n+\n+\tcfg, _ := sgtn.NewConfig(cfPath)\n+\tinst, _ := sgtn.NewInst(*cfg)\n+\tfmt.Print(inst)\n+\ttranslation := inst.GetTranslation()\n+\n+\tConvey(\"localbundles-requestlocale: Get request locale's translation from localbundle\", t, func() {\n+\n+\t\t// cfPath := \"config.yaml\"\n+\n+\t\t// cfg, _ := sgtn.NewConfig(cfPath)\n+\t\t// inst, _ := sgtn.NewInst(*cfg)\n+\t\t// fmt.Print(inst)\n+\t\t// translation := inst.GetTranslation()\n+\n+\t\tConvey(\"localbundles-requestlocale: Get common strings successfully from localbundle(P0)\", func() {\n+\n+\t\t\ttran1, _ := translation.GetStringMessage(\"zh-Hans\", Defaultcom, commonkey)\n+\t\t\t// fmt.Print(tran1)\n+\n+\t\t\tSo(tran1, ShouldEqual, dlcncommonvalue)\n+\t\t\t// So(cfg, ShouldNotBeNil)\n+\t\t})\n+\n+\t\tConvey(\"localbundles-requestlocale: Get placehodler strings successfully from localbundle(P0)\", func() {\n+\n+\t\t\ttran2, _ := translation.GetStringMessage(\"fr\", Defaultcom, holderkey, \"a\", \"b\")\n+\n+\t\t\tSo(tran2, ShouldEqual, \"L'op\u00e9rateur 'a' n'est pas pris en charge pour la propri\u00e9t\u00e9 'b'.\")\n+\t\t})\n+\n+\t\tConvey(\"localbundles-requestlocale: Get long and html tag strings successfully from localbundle(P0)\", func() {\n+\n+\t\t\ttran2, _ := translation.GetStringMessage(\"fr\", Defaultcom, htmlkey)\n+\t\t\t// should add check if send out http request as the previous case has cached fr component translation\n+\n+\t\t\tSo(tran2, ShouldEqual, frhtmlvalue)\n+\t\t})\n+\n+\t\tConvey(\"localbundles-requestlocale: request a component(contact) is in localbundle but key isn't in localbundles, return key(P1)\", func() {\n+\n+\t\t\ttran2, _ := translation.GetStringMessage(\"fr\", \"contact\", \"non-existing.key\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07945be7e7aaf27cc2dee6c631b72e1c891b163a"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4580, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}