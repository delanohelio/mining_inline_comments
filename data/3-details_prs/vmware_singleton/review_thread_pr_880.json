{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MDM5MDYx", "number": 880, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMTo0NTowOFrOE7VApw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMjoxMzo0OVrOE7VYhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjQ1NjcxOnYy", "diffSide": "RIGHT", "path": "autotest/cldrpattern/excelutility.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMTo0NTowOFrOH26VyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo1NzoyMFrOH-E-kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0MTAwMA==", "bodyText": "that may have out of range exception when excel column count has changed. Please add 'try catch' block and print friendly waring message to show excel file loading failure.", "url": "https://github.com/vmware/singleton/pull/880#discussion_r527341000", "createdAt": "2020-11-20T01:45:08Z", "author": {"login": "surite"}, "path": "autotest/cldrpattern/excelutility.py", "diffHunk": "@@ -0,0 +1,37 @@\n+from openpyxl import load_workbook\n+\n+def excelutil():\n+    workbook = load_workbook(filename='ExternalPatternLibTestCases.xlsx')\n+    sheet = workbook.active\n+\n+    datas = []\n+\n+    for row in sheet.iter_rows(min_row=2, values_only=True):\n+        # data = TestData(casename=row[0],\n+        #                 path=row[1],\n+        #                 filename=row[2],\n+        #                 key=row[3],\n+        #                 expected=row[4])\n+        data = {\"caseid\": row[0],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "010be746fc9e604496262554ac0c99ec846fd6e5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg1NTMxMw==", "bodyText": "Please see the latest version.", "url": "https://github.com/vmware/singleton/pull/880#discussion_r534855313", "createdAt": "2020-12-03T07:57:20Z", "author": {"login": "lyiyu66"}, "path": "autotest/cldrpattern/excelutility.py", "diffHunk": "@@ -0,0 +1,37 @@\n+from openpyxl import load_workbook\n+\n+def excelutil():\n+    workbook = load_workbook(filename='ExternalPatternLibTestCases.xlsx')\n+    sheet = workbook.active\n+\n+    datas = []\n+\n+    for row in sheet.iter_rows(min_row=2, values_only=True):\n+        # data = TestData(casename=row[0],\n+        #                 path=row[1],\n+        #                 filename=row[2],\n+        #                 key=row[3],\n+        #                 expected=row[4])\n+        data = {\"caseid\": row[0],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0MTAwMA=="}, "originalCommit": {"oid": "010be746fc9e604496262554ac0c99ec846fd6e5"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjQ2NjQyOnYy", "diffSide": "RIGHT", "path": "autotest/cldrpattern/excelutility.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMTo0OToyMVrOH26bNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo1OToxMlrOH-FLKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0MjM4OQ==", "bodyText": "it is better to extract file name into a properties file or at least a constant.", "url": "https://github.com/vmware/singleton/pull/880#discussion_r527342389", "createdAt": "2020-11-20T01:49:21Z", "author": {"login": "surite"}, "path": "autotest/cldrpattern/excelutility.py", "diffHunk": "@@ -0,0 +1,37 @@\n+from openpyxl import load_workbook\n+\n+def excelutil():\n+    workbook = load_workbook(filename='ExternalPatternLibTestCases.xlsx')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "010be746fc9e604496262554ac0c99ec846fd6e5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg1ODUzOA==", "bodyText": "Adding a constant.py for storing some global settings. Please see the latest verison.", "url": "https://github.com/vmware/singleton/pull/880#discussion_r534858538", "createdAt": "2020-12-03T07:59:12Z", "author": {"login": "lyiyu66"}, "path": "autotest/cldrpattern/excelutility.py", "diffHunk": "@@ -0,0 +1,37 @@\n+from openpyxl import load_workbook\n+\n+def excelutil():\n+    workbook = load_workbook(filename='ExternalPatternLibTestCases.xlsx')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0MjM4OQ=="}, "originalCommit": {"oid": "010be746fc9e604496262554ac0c99ec846fd6e5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjQ2OTI1OnYy", "diffSide": "RIGHT", "path": "autotest/cldrpattern/test.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMTo1MDoyMFrOH26crQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMTo1MDoyNlrOH8U9TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0Mjc2NQ==", "bodyText": "is the  version static and no changing in future?", "url": "https://github.com/vmware/singleton/pull/880#discussion_r527342765", "createdAt": "2020-11-20T01:50:20Z", "author": {"login": "surite"}, "path": "autotest/cldrpattern/test.py", "diffHunk": "@@ -0,0 +1,90 @@\n+import os,json,HTMLTestRunner,unittest\n+from excelutility import excelutil\n+from ddt import ddt,data\n+from datetime import datetime\n+\n+# Set testdata directory:\n+# rootdir = 'D:\\\\PycharmProjects\\\\SmokeTesting\\\\singleton-i18n-patterns-core-0.5.1' #The path of cldr data storage\n+# test_dir = 'D:\\\\PycharmProjects\\\\SmokeTesting' #The directory of generated test report\n+rootdir = './singleton-i18n-patterns-core-0.5.1' #The path of cldr data storage", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "010be746fc9e604496262554ac0c99ec846fd6e5"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAxOTk4MQ==", "bodyText": "Strictly speaking, there is no version in external pattern lib branch. The rootdir will be updated once the branch and code structure is done.", "url": "https://github.com/vmware/singleton/pull/880#discussion_r533019981", "createdAt": "2020-12-01T01:50:26Z", "author": {"login": "lyiyu66"}, "path": "autotest/cldrpattern/test.py", "diffHunk": "@@ -0,0 +1,90 @@\n+import os,json,HTMLTestRunner,unittest\n+from excelutility import excelutil\n+from ddt import ddt,data\n+from datetime import datetime\n+\n+# Set testdata directory:\n+# rootdir = 'D:\\\\PycharmProjects\\\\SmokeTesting\\\\singleton-i18n-patterns-core-0.5.1' #The path of cldr data storage\n+# test_dir = 'D:\\\\PycharmProjects\\\\SmokeTesting' #The directory of generated test report\n+rootdir = './singleton-i18n-patterns-core-0.5.1' #The path of cldr data storage", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0Mjc2NQ=="}, "originalCommit": {"oid": "010be746fc9e604496262554ac0c99ec846fd6e5"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjUxNzgwOnYy", "diffSide": "RIGHT", "path": "autotest/cldrpattern/test.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMjoxMzo0OVrOH264SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwODowMTo1NFrOH-FcPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0OTgzMw==", "bodyText": "can you give a description about what these verification means? so people would know how you test it.", "url": "https://github.com/vmware/singleton/pull/880#discussion_r527349833", "createdAt": "2020-11-20T02:13:49Z", "author": {"login": "surite"}, "path": "autotest/cldrpattern/test.py", "diffHunk": "@@ -0,0 +1,90 @@\n+import os,json,HTMLTestRunner,unittest\n+from excelutility import excelutil\n+from ddt import ddt,data\n+from datetime import datetime\n+\n+# Set testdata directory:\n+# rootdir = 'D:\\\\PycharmProjects\\\\SmokeTesting\\\\singleton-i18n-patterns-core-0.5.1' #The path of cldr data storage\n+# test_dir = 'D:\\\\PycharmProjects\\\\SmokeTesting' #The directory of generated test report\n+rootdir = './singleton-i18n-patterns-core-0.5.1' #The path of cldr data storage\n+test_dir = './' #The directory of generated test report\n+\n+def curfoldercount(dir):\n+    return str(len(os.listdir(dir)))\n+\n+\n+def rootfoldercount(dir):\n+    L = []\n+    for paths in os.walk(dir):\n+        L.append(paths)\n+    # L includes the root, should -1 to get the folder count under it\n+    return str(len(L)-1)\n+\n+def rootfilecount(dir):\n+    L = []\n+    for paths, folders, files in os.walk(dir):\n+        L.extend(files)\n+    return str(len(L))\n+\n+def readjson(dir, filename, key):\n+    with open(dir+filename, 'r', encoding='utf-8') as f:\n+        temp = json.load(f)\n+        keylist = key.split('.')\n+        for i in keylist:\n+            temp = temp[i]\n+    return str(temp)\n+\n+\n+\n+@ddt\n+class Test(unittest.TestCase):\n+\n+    @data(*excelutil())\n+    def test(self, case):\n+\n+        if (case['casename'] == 'Check the number of folders in cldr folder'):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "010be746fc9e604496262554ac0c99ec846fd6e5"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg2MjkxMA==", "bodyText": "Adding case category to identify the case purpose, please see the latest version.", "url": "https://github.com/vmware/singleton/pull/880#discussion_r534862910", "createdAt": "2020-12-03T08:01:54Z", "author": {"login": "lyiyu66"}, "path": "autotest/cldrpattern/test.py", "diffHunk": "@@ -0,0 +1,90 @@\n+import os,json,HTMLTestRunner,unittest\n+from excelutility import excelutil\n+from ddt import ddt,data\n+from datetime import datetime\n+\n+# Set testdata directory:\n+# rootdir = 'D:\\\\PycharmProjects\\\\SmokeTesting\\\\singleton-i18n-patterns-core-0.5.1' #The path of cldr data storage\n+# test_dir = 'D:\\\\PycharmProjects\\\\SmokeTesting' #The directory of generated test report\n+rootdir = './singleton-i18n-patterns-core-0.5.1' #The path of cldr data storage\n+test_dir = './' #The directory of generated test report\n+\n+def curfoldercount(dir):\n+    return str(len(os.listdir(dir)))\n+\n+\n+def rootfoldercount(dir):\n+    L = []\n+    for paths in os.walk(dir):\n+        L.append(paths)\n+    # L includes the root, should -1 to get the folder count under it\n+    return str(len(L)-1)\n+\n+def rootfilecount(dir):\n+    L = []\n+    for paths, folders, files in os.walk(dir):\n+        L.extend(files)\n+    return str(len(L))\n+\n+def readjson(dir, filename, key):\n+    with open(dir+filename, 'r', encoding='utf-8') as f:\n+        temp = json.load(f)\n+        keylist = key.split('.')\n+        for i in keylist:\n+            temp = temp[i]\n+    return str(temp)\n+\n+\n+\n+@ddt\n+class Test(unittest.TestCase):\n+\n+    @data(*excelutil())\n+    def test(self, case):\n+\n+        if (case['casename'] == 'Check the number of folders in cldr folder'):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM0OTgzMw=="}, "originalCommit": {"oid": "010be746fc9e604496262554ac0c99ec846fd6e5"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4396, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}