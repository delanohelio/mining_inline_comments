{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5ODgxODgz", "number": 360, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODoyNzowMFrODWd5yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNzoyMzozMlrODXwHGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODg1MTkyOnYy", "diffSide": "RIGHT", "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODoyNzowMFrOFbPhtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODo0Mzo1OVrOFbuXDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDExMDI2MA==", "bodyText": "It seems the format is messy. Could you format the code?", "url": "https://github.com/vmware/singleton/pull/360#discussion_r364110260", "createdAt": "2020-01-08T08:27:00Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "diffHunk": "@@ -56,6 +64,58 @@ public APIResponseDTO getTransPattern(TranslationWithPatternDTO data) throws Exc\n \t      }\n \t   }\n \n+\t   /**\n+        * According to  object get the pattern and translation or only get the\n+        * pattern when use GET method\n+        * \n+        */\n+\t    public APIResponseDTO getTransPattern(int combine, String productName, String version,\n+\t            String components, String language, String scope, String region, String pseudo,\n+\t            HttpServletRequest req) throws Exception{\n+\t        // TODO Auto-generated method stub\n+\t        TranslationWithPatternDTO data = new TranslationWithPatternDTO();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f855bd3ee19067744681ce75b9d0d93e54de43b2"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxNTQzNw==", "bodyText": "done", "url": "https://github.com/vmware/singleton/pull/360#discussion_r364615437", "createdAt": "2020-01-09T08:43:59Z", "author": {"login": "tigershi"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "diffHunk": "@@ -56,6 +64,58 @@ public APIResponseDTO getTransPattern(TranslationWithPatternDTO data) throws Exc\n \t      }\n \t   }\n \n+\t   /**\n+        * According to  object get the pattern and translation or only get the\n+        * pattern when use GET method\n+        * \n+        */\n+\t    public APIResponseDTO getTransPattern(int combine, String productName, String version,\n+\t            String components, String language, String scope, String region, String pseudo,\n+\t            HttpServletRequest req) throws Exception{\n+\t        // TODO Auto-generated method stub\n+\t        TranslationWithPatternDTO data = new TranslationWithPatternDTO();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDExMDI2MA=="}, "originalCommit": {"oid": "f855bd3ee19067744681ce75b9d0d93e54de43b2"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODg1MzMyOnYy", "diffSide": "RIGHT", "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODoyNzo0M1rOFbPimg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODo0NToxM1rOFbuZGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDExMDQ5MA==", "bodyText": "Is this method necessary? It seems this logic is too simple to be a method.", "url": "https://github.com/vmware/singleton/pull/360#discussion_r364110490", "createdAt": "2020-01-08T08:27:43Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "diffHunk": "@@ -56,6 +64,58 @@ public APIResponseDTO getTransPattern(TranslationWithPatternDTO data) throws Exc\n \t      }\n \t   }\n \n+\t   /**\n+        * According to  object get the pattern and translation or only get the\n+        * pattern when use GET method\n+        * \n+        */\n+\t    public APIResponseDTO getTransPattern(int combine, String productName, String version,\n+\t            String components, String language, String scope, String region, String pseudo,\n+\t            HttpServletRequest req) throws Exception{\n+\t        // TODO Auto-generated method stub\n+\t        TranslationWithPatternDTO data = new TranslationWithPatternDTO();\n+\t           data.setCombine(combine);\n+\t           data.setLanguage(language);\n+\t           data.setScope(scope);\n+\t           data.setProductName(productName);\n+\t           version = VersionMatcher.getMatchedVersion(version,  productService.getSupportVersionList(productName));\n+\t           data.setVersion(version);\n+\t           if(!StringUtils.isEmpty(components)) {\n+\t               data.setComponents(Arrays.asList(components.split(ConstantsChar.COMMA)));\n+\t           }\n+\t           data.setRegion(region);\n+\t           data.setPseudo(pseudo);\n+\t           if (validateCombineType(data)) {\n+\t               Map<String, Object> pattern = getPattern(data);\n+\t               List<ComponentMessagesDTO> compList = getTranslation(data);\n+\t               Map<String, Object> map = new HashMap<String, Object>();\n+\t               map.put(ConstantsKeys.PATTERN, pattern);\n+\t               map.put(ConstantsKeys.COMPONENTS, compList);\n+\t               return super.handleResponse(APIResponseStatus.OK, map);\n+\t            } else {\n+\t               return super.handleResponse(APIResponseStatus.INTERNAL_SERVER_ERROR,\n+\t                     ConstantsMsg.PARAM_NOT_VALIDATE);\n+\t            }\n+\t    }\n+       /**\n+        * This is use to validate the request data of get Translation with Pattern when mehod is GET\n+        * \n+        * \n+        */\n+       private boolean validateCombineType(TranslationWithPatternDTO data) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f855bd3ee19067744681ce75b9d0d93e54de43b2"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxNTk2Mg==", "bodyText": "it need to keep, because the code scan", "url": "https://github.com/vmware/singleton/pull/360#discussion_r364615962", "createdAt": "2020-01-09T08:45:13Z", "author": {"login": "tigershi"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "diffHunk": "@@ -56,6 +64,58 @@ public APIResponseDTO getTransPattern(TranslationWithPatternDTO data) throws Exc\n \t      }\n \t   }\n \n+\t   /**\n+        * According to  object get the pattern and translation or only get the\n+        * pattern when use GET method\n+        * \n+        */\n+\t    public APIResponseDTO getTransPattern(int combine, String productName, String version,\n+\t            String components, String language, String scope, String region, String pseudo,\n+\t            HttpServletRequest req) throws Exception{\n+\t        // TODO Auto-generated method stub\n+\t        TranslationWithPatternDTO data = new TranslationWithPatternDTO();\n+\t           data.setCombine(combine);\n+\t           data.setLanguage(language);\n+\t           data.setScope(scope);\n+\t           data.setProductName(productName);\n+\t           version = VersionMatcher.getMatchedVersion(version,  productService.getSupportVersionList(productName));\n+\t           data.setVersion(version);\n+\t           if(!StringUtils.isEmpty(components)) {\n+\t               data.setComponents(Arrays.asList(components.split(ConstantsChar.COMMA)));\n+\t           }\n+\t           data.setRegion(region);\n+\t           data.setPseudo(pseudo);\n+\t           if (validateCombineType(data)) {\n+\t               Map<String, Object> pattern = getPattern(data);\n+\t               List<ComponentMessagesDTO> compList = getTranslation(data);\n+\t               Map<String, Object> map = new HashMap<String, Object>();\n+\t               map.put(ConstantsKeys.PATTERN, pattern);\n+\t               map.put(ConstantsKeys.COMPONENTS, compList);\n+\t               return super.handleResponse(APIResponseStatus.OK, map);\n+\t            } else {\n+\t               return super.handleResponse(APIResponseStatus.INTERNAL_SERVER_ERROR,\n+\t                     ConstantsMsg.PARAM_NOT_VALIDATE);\n+\t            }\n+\t    }\n+       /**\n+        * This is use to validate the request data of get Translation with Pattern when mehod is GET\n+        * \n+        * \n+        */\n+       private boolean validateCombineType(TranslationWithPatternDTO data) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDExMDQ5MA=="}, "originalCommit": {"oid": "f855bd3ee19067744681ce75b9d0d93e54de43b2"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODg1NTI5OnYy", "diffSide": "RIGHT", "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODoyODoyMlrOFbPjqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODo0Mjo0OVrOFbuVMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDExMDc2Mw==", "bodyText": "req isn't used, right?", "url": "https://github.com/vmware/singleton/pull/360#discussion_r364110763", "createdAt": "2020-01-08T08:28:22Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "diffHunk": "@@ -56,6 +64,58 @@ public APIResponseDTO getTransPattern(TranslationWithPatternDTO data) throws Exc\n \t      }\n \t   }\n \n+\t   /**\n+        * According to  object get the pattern and translation or only get the\n+        * pattern when use GET method\n+        * \n+        */\n+\t    public APIResponseDTO getTransPattern(int combine, String productName, String version,\n+\t            String components, String language, String scope, String region, String pseudo,\n+\t            HttpServletRequest req) throws Exception{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f855bd3ee19067744681ce75b9d0d93e54de43b2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxNDk2MQ==", "bodyText": "done", "url": "https://github.com/vmware/singleton/pull/360#discussion_r364614961", "createdAt": "2020-01-09T08:42:49Z", "author": {"login": "tigershi"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "diffHunk": "@@ -56,6 +64,58 @@ public APIResponseDTO getTransPattern(TranslationWithPatternDTO data) throws Exc\n \t      }\n \t   }\n \n+\t   /**\n+        * According to  object get the pattern and translation or only get the\n+        * pattern when use GET method\n+        * \n+        */\n+\t    public APIResponseDTO getTransPattern(int combine, String productName, String version,\n+\t            String components, String language, String scope, String region, String pseudo,\n+\t            HttpServletRequest req) throws Exception{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDExMDc2Mw=="}, "originalCommit": {"oid": "f855bd3ee19067744681ce75b9d0d93e54de43b2"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODg1Nzc1OnYy", "diffSide": "RIGHT", "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODoyOTozN1rOFbPlLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODo0Nzo1NVrOFbudQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDExMTE1MQ==", "bodyText": "How about call getTransPattern(TranslationWithPatternDTO data) directly?", "url": "https://github.com/vmware/singleton/pull/360#discussion_r364111151", "createdAt": "2020-01-08T08:29:37Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "diffHunk": "@@ -56,6 +64,58 @@ public APIResponseDTO getTransPattern(TranslationWithPatternDTO data) throws Exc\n \t      }\n \t   }\n \n+\t   /**\n+        * According to  object get the pattern and translation or only get the\n+        * pattern when use GET method\n+        * \n+        */\n+\t    public APIResponseDTO getTransPattern(int combine, String productName, String version,\n+\t            String components, String language, String scope, String region, String pseudo,\n+\t            HttpServletRequest req) throws Exception{\n+\t        // TODO Auto-generated method stub\n+\t        TranslationWithPatternDTO data = new TranslationWithPatternDTO();\n+\t           data.setCombine(combine);\n+\t           data.setLanguage(language);\n+\t           data.setScope(scope);\n+\t           data.setProductName(productName);\n+\t           version = VersionMatcher.getMatchedVersion(version,  productService.getSupportVersionList(productName));\n+\t           data.setVersion(version);\n+\t           if(!StringUtils.isEmpty(components)) {\n+\t               data.setComponents(Arrays.asList(components.split(ConstantsChar.COMMA)));\n+\t           }\n+\t           data.setRegion(region);\n+\t           data.setPseudo(pseudo);\n+\t           if (validateCombineType(data)) {\n+\t               Map<String, Object> pattern = getPattern(data);\n+\t               List<ComponentMessagesDTO> compList = getTranslation(data);\n+\t               Map<String, Object> map = new HashMap<String, Object>();\n+\t               map.put(ConstantsKeys.PATTERN, pattern);\n+\t               map.put(ConstantsKeys.COMPONENTS, compList);\n+\t               return super.handleResponse(APIResponseStatus.OK, map);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f855bd3ee19067744681ce75b9d0d93e54de43b2"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxNzAyNQ==", "bodyText": "because the get API only support combine 1 or 2", "url": "https://github.com/vmware/singleton/pull/360#discussion_r364617025", "createdAt": "2020-01-09T08:47:55Z", "author": {"login": "tigershi"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "diffHunk": "@@ -56,6 +64,58 @@ public APIResponseDTO getTransPattern(TranslationWithPatternDTO data) throws Exc\n \t      }\n \t   }\n \n+\t   /**\n+        * According to  object get the pattern and translation or only get the\n+        * pattern when use GET method\n+        * \n+        */\n+\t    public APIResponseDTO getTransPattern(int combine, String productName, String version,\n+\t            String components, String language, String scope, String region, String pseudo,\n+\t            HttpServletRequest req) throws Exception{\n+\t        // TODO Auto-generated method stub\n+\t        TranslationWithPatternDTO data = new TranslationWithPatternDTO();\n+\t           data.setCombine(combine);\n+\t           data.setLanguage(language);\n+\t           data.setScope(scope);\n+\t           data.setProductName(productName);\n+\t           version = VersionMatcher.getMatchedVersion(version,  productService.getSupportVersionList(productName));\n+\t           data.setVersion(version);\n+\t           if(!StringUtils.isEmpty(components)) {\n+\t               data.setComponents(Arrays.asList(components.split(ConstantsChar.COMMA)));\n+\t           }\n+\t           data.setRegion(region);\n+\t           data.setPseudo(pseudo);\n+\t           if (validateCombineType(data)) {\n+\t               Map<String, Object> pattern = getPattern(data);\n+\t               List<ComponentMessagesDTO> compList = getTranslation(data);\n+\t               Map<String, Object> map = new HashMap<String, Object>();\n+\t               map.put(ConstantsKeys.PATTERN, pattern);\n+\t               map.put(ConstantsKeys.COMPONENTS, compList);\n+\t               return super.handleResponse(APIResponseStatus.OK, map);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDExMTE1MQ=="}, "originalCommit": {"oid": "f855bd3ee19067744681ce75b9d0d93e54de43b2"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODg1OTI4OnYy", "diffSide": "RIGHT", "path": "g11n-ws/modules/md-restful-api/src/main/java/com/vmware/vip/api/rest/APIParamValue.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODozMDoyMFrOFbPmQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODo0MToyM1rOFbuSuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDExMTQyNw==", "bodyText": "a -> an\neg. 1,2", "url": "https://github.com/vmware/singleton/pull/360#discussion_r364111427", "createdAt": "2020-01-08T08:30:20Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/modules/md-restful-api/src/main/java/com/vmware/vip/api/rest/APIParamValue.java", "diffHunk": "@@ -28,4 +28,5 @@\n \tpublic final static String DISPLAY_LANGUAGE   = \"the display language. e.g. 'en'\";\n \tpublic final static String LANGUAGE   = \"a string which represents language, e.g. en, en-US, pt, pt-BR, zh-Hans\";\n \tpublic final static String REGION   = \"a string which represents region, e.g. US, PT, CN\";\n+\tpublic final static String COMBINE = \"a integer which represents combine type number 1 or 2\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f855bd3ee19067744681ce75b9d0d93e54de43b2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxNDMzMQ==", "bodyText": "done", "url": "https://github.com/vmware/singleton/pull/360#discussion_r364614331", "createdAt": "2020-01-09T08:41:23Z", "author": {"login": "tigershi"}, "path": "g11n-ws/modules/md-restful-api/src/main/java/com/vmware/vip/api/rest/APIParamValue.java", "diffHunk": "@@ -28,4 +28,5 @@\n \tpublic final static String DISPLAY_LANGUAGE   = \"the display language. e.g. 'en'\";\n \tpublic final static String LANGUAGE   = \"a string which represents language, e.g. en, en-US, pt, pt-BR, zh-Hans\";\n \tpublic final static String REGION   = \"a string which represents region, e.g. US, PT, CN\";\n+\tpublic final static String COMBINE = \"a integer which represents combine type number 1 or 2\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDExMTQyNw=="}, "originalCommit": {"oid": "f855bd3ee19067744681ce75b9d0d93e54de43b2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjMyMDkxOnYy", "diffSide": "RIGHT", "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNzoyMzozMlrOFdOBuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNzoyMzozMlrOFdOBuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE4Mjg0Mw==", "bodyText": "Code optimization required", "url": "https://github.com/vmware/singleton/pull/360#discussion_r366182843", "createdAt": "2020-01-14T07:23:32Z", "author": {"login": "chaoq0318"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/base/TranslationWithPatternAction.java", "diffHunk": "@@ -56,6 +64,59 @@ public APIResponseDTO getTransPattern(TranslationWithPatternDTO data) throws Exc\n \t      }\n \t   }\n \n+    /**\n+     * According to object get the pattern and translation or only get the pattern when use GET\n+     * method\n+     * \n+     */\n+    public APIResponseDTO getTransPattern(int combine, String productName, String version,\n+            String components, String language, String scope, String region, String pseudo)\n+            throws Exception {\n+        // TODO Auto-generated method stub\n+        TranslationWithPatternDTO data = new TranslationWithPatternDTO();\n+        data.setCombine(combine);\n+        data.setLanguage(language);\n+        data.setScope(scope);\n+        data.setProductName(productName);\n+        version = VersionMatcher.getMatchedVersion(version,\n+                productService.getSupportVersionList(productName));\n+        data.setVersion(version);\n+        if (!StringUtils.isEmpty(components)) {\n+            data.setComponents(Arrays.asList(components.split(ConstantsChar.COMMA)));\n+        }\n+        data.setRegion(region);\n+        data.setPseudo(pseudo);\n+        if (validateCombineType(data)) {\n+            Map<String, Object> pattern = getPattern(data);\n+            List<ComponentMessagesDTO> compList = getTranslation(data);\n+            Map<String, Object> map = new HashMap<String, Object>();\n+            map.put(ConstantsKeys.PATTERN, pattern);\n+            map.put(ConstantsKeys.COMPONENTS, compList);\n+            return super.handleResponse(APIResponseStatus.OK, map);\n+        } else {\n+            return super.handleResponse(APIResponseStatus.INTERNAL_SERVER_ERROR,\n+                    ConstantsMsg.PARAM_NOT_VALIDATE);\n+        }\n+    }\n+       /**\n+        * This is use to validate the request data of get Translation with Pattern when mehod is GET\n+        * \n+        * \n+        */\n+       private boolean validateCombineType(TranslationWithPatternDTO data) {\n+           \n+           if (data.getCombine() == TransWithPatternDataScope.TRANSLATION_PATTERN_WITH_REGION\n+                 .getValue()) {\n+              return isPatternTransaltionWithRegion(data);\n+           } else if (data.getCombine() == TransWithPatternDataScope.TRANSLATION_PATTERN_NO_REGION\n+                 .getValue()) {\n+              return isPatternTranslationNoRegion(data);\n+           }else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5677756fb530c7e78c5a4af0e2ab06b953ace14d"}, "originalPosition": 83}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4617, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}