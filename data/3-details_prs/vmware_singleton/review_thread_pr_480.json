{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzOTk4NTI2", "number": 480, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODowNjozNFrODrh8NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODowNzo0M1rODrh9ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTcxNDQ1OnYy", "diffSide": "RIGHT", "path": "g11n-ws/modules/md-service-authen/src/main/java/com/vmware/vip/core/validation/ParameterValidation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODowNjozNVrOF77MDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTozNDoxNlrOF7-Siw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4MDA0Nw==", "bodyText": "Is this way more effcient?\nString region = pathVariables.get(APIParamName.REGION);\nif (region == null) {\nregion = request.getParameter(APIParamName.REGION);\n}", "url": "https://github.com/vmware/singleton/pull/480#discussion_r398380047", "createdAt": "2020-03-26T08:06:35Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/modules/md-service-authen/src/main/java/com/vmware/vip/core/validation/ParameterValidation.java", "diffHunk": "@@ -93,6 +98,85 @@ private void validateComponent(HttpServletRequest request)\n \t\t}\n \t}\n \n+\t@SuppressWarnings(\"unchecked\")\n+\tprivate void validateRegion(HttpServletRequest request)\n+\t\t\tthrows ValidationException {\n+\t\tMap<String, String> pathVariables = (Map<String, String>) request\n+\t\t\t\t.getAttribute(HandlerMapping.URI_TEMPLATE_VARIABLES_ATTRIBUTE);\n+\t\tString region = pathVariables.get(APIParamName.REGION) == null ? request\n+\t\t\t\t.getParameter(APIParamName.REGION) : pathVariables\n+\t\t\t\t.get(APIParamName.REGION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f6a420f17af2390abec6f08ec1775677b744b78"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzMDg1OQ==", "bodyText": "the same with your written", "url": "https://github.com/vmware/singleton/pull/480#discussion_r398430859", "createdAt": "2020-03-26T09:34:16Z", "author": {"login": "tigershi"}, "path": "g11n-ws/modules/md-service-authen/src/main/java/com/vmware/vip/core/validation/ParameterValidation.java", "diffHunk": "@@ -93,6 +98,85 @@ private void validateComponent(HttpServletRequest request)\n \t\t}\n \t}\n \n+\t@SuppressWarnings(\"unchecked\")\n+\tprivate void validateRegion(HttpServletRequest request)\n+\t\t\tthrows ValidationException {\n+\t\tMap<String, String> pathVariables = (Map<String, String>) request\n+\t\t\t\t.getAttribute(HandlerMapping.URI_TEMPLATE_VARIABLES_ATTRIBUTE);\n+\t\tString region = pathVariables.get(APIParamName.REGION) == null ? request\n+\t\t\t\t.getParameter(APIParamName.REGION) : pathVariables\n+\t\t\t\t.get(APIParamName.REGION);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4MDA0Nw=="}, "originalCommit": {"oid": "4f6a420f17af2390abec6f08ec1775677b744b78"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTcxNzcxOnYy", "diffSide": "RIGHT", "path": "g11n-ws/modules/md-service-authen/src/main/java/com/vmware/vip/core/validation/ParameterValidation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODowNzo0M1rOF77OJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODowNzo0M1rOF77OJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4MDU4Mg==", "bodyText": "Same as above.", "url": "https://github.com/vmware/singleton/pull/480#discussion_r398380582", "createdAt": "2020-03-26T08:07:43Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/modules/md-service-authen/src/main/java/com/vmware/vip/core/validation/ParameterValidation.java", "diffHunk": "@@ -93,6 +98,85 @@ private void validateComponent(HttpServletRequest request)\n \t\t}\n \t}\n \n+\t@SuppressWarnings(\"unchecked\")\n+\tprivate void validateRegion(HttpServletRequest request)\n+\t\t\tthrows ValidationException {\n+\t\tMap<String, String> pathVariables = (Map<String, String>) request\n+\t\t\t\t.getAttribute(HandlerMapping.URI_TEMPLATE_VARIABLES_ATTRIBUTE);\n+\t\tString region = pathVariables.get(APIParamName.REGION) == null ? request\n+\t\t\t\t.getParameter(APIParamName.REGION) : pathVariables\n+\t\t\t\t.get(APIParamName.REGION);\n+\t\tif (StringUtils.isEmpty(region)) {\n+\t\t\treturn;\n+\t\t}\n+\t\tif (!RegExpValidatorUtils.IsLetterAndNumberAndValidchar(region)) {\n+\t\t\tthrow new ValidationException(ValidationMsg.REGION_NOT_VALIDE);\n+\t\t}\n+\t}\n+\t\n+\t@SuppressWarnings(\"unchecked\")\n+\tprivate void validateScope(HttpServletRequest request)\n+\t\t\tthrows ValidationException {\n+\t\tMap<String, String> pathVariables = (Map<String, String>) request\n+\t\t\t\t.getAttribute(HandlerMapping.URI_TEMPLATE_VARIABLES_ATTRIBUTE);\n+\t\tString scope = pathVariables.get(APIParamName.SCOPE) == null ? request\n+\t\t\t\t.getParameter(APIParamName.SCOPE) : pathVariables\n+\t\t\t\t.get(APIParamName.SCOPE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f6a420f17af2390abec6f08ec1775677b744b78"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4561, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}