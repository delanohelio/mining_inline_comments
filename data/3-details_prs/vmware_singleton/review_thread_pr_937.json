{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NTA0MDYw", "number": 937, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQwMjo0MjowN1rOFOcHrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQwMjo0MjowN1rOFOcHrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNjg1MTAwOnYy", "diffSide": "RIGHT", "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/v2/about/AboutVersionAPI.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQwMjo0MjowN1rOITNEOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxMDozOTo0MVrOITe5RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzAwNzkyOQ==", "bodyText": "In this block, there must be this case: either productname or version is empty. How to get build version in this case?", "url": "https://github.com/vmware/singleton/pull/937#discussion_r557007929", "createdAt": "2021-01-14T02:42:07Z", "author": {"login": "Xiaochao8"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/v2/about/AboutVersionAPI.java", "diffHunk": "@@ -44,6 +45,11 @@\n     public APIResponseDTO getVersionInfo(\n             @ApiParam(name = APIParamName.PRODUCT_NAME, required = false, value = APIParamValue.PRODUCT_NAME) @RequestParam(required = false) String productName,\n             @ApiParam(name = APIParamName.VERSION, required = false, value = APIParamValue.VERSION) @RequestParam(required = false) String version) throws AboutAPIException {\n-        return super.handleResponse(APIResponseStatus.OK, versionService.getBuildVersion(productName, version));\n+        if(!StringUtils.isEmpty(productName) && !StringUtils.isEmpty(version)) {\n+            String availableVersion = super.getAvailableVersion(productName, version);\n+            return super.handleVersionFallbackResponse(version, availableVersion, versionService.getBuildVersion(productName, availableVersion));\n+        }else{\n+            return super.handleResponse(APIResponseStatus.OK, versionService.getBuildVersion(productName, version));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f03ea285ca3b582d9844bc4a91c42e923b930556"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzAyNjc0OA==", "bodyText": "Only return service version.", "url": "https://github.com/vmware/singleton/pull/937#discussion_r557026748", "createdAt": "2021-01-14T03:49:13Z", "author": {"login": "huihuiw01"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/v2/about/AboutVersionAPI.java", "diffHunk": "@@ -44,6 +45,11 @@\n     public APIResponseDTO getVersionInfo(\n             @ApiParam(name = APIParamName.PRODUCT_NAME, required = false, value = APIParamValue.PRODUCT_NAME) @RequestParam(required = false) String productName,\n             @ApiParam(name = APIParamName.VERSION, required = false, value = APIParamValue.VERSION) @RequestParam(required = false) String version) throws AboutAPIException {\n-        return super.handleResponse(APIResponseStatus.OK, versionService.getBuildVersion(productName, version));\n+        if(!StringUtils.isEmpty(productName) && !StringUtils.isEmpty(version)) {\n+            String availableVersion = super.getAvailableVersion(productName, version);\n+            return super.handleVersionFallbackResponse(version, availableVersion, versionService.getBuildVersion(productName, availableVersion));\n+        }else{\n+            return super.handleResponse(APIResponseStatus.OK, versionService.getBuildVersion(productName, version));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzAwNzkyOQ=="}, "originalCommit": {"oid": "f03ea285ca3b582d9844bc4a91c42e923b930556"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMwMDAzNg==", "bodyText": "After change it will return error message.", "url": "https://github.com/vmware/singleton/pull/937#discussion_r557300036", "createdAt": "2021-01-14T10:39:41Z", "author": {"login": "huihuiw01"}, "path": "g11n-ws/modules/md-restful-api-i18n/src/main/java/com/vmware/vip/i18n/api/v2/about/AboutVersionAPI.java", "diffHunk": "@@ -44,6 +45,11 @@\n     public APIResponseDTO getVersionInfo(\n             @ApiParam(name = APIParamName.PRODUCT_NAME, required = false, value = APIParamValue.PRODUCT_NAME) @RequestParam(required = false) String productName,\n             @ApiParam(name = APIParamName.VERSION, required = false, value = APIParamValue.VERSION) @RequestParam(required = false) String version) throws AboutAPIException {\n-        return super.handleResponse(APIResponseStatus.OK, versionService.getBuildVersion(productName, version));\n+        if(!StringUtils.isEmpty(productName) && !StringUtils.isEmpty(version)) {\n+            String availableVersion = super.getAvailableVersion(productName, version);\n+            return super.handleVersionFallbackResponse(version, availableVersion, versionService.getBuildVersion(productName, availableVersion));\n+        }else{\n+            return super.handleResponse(APIResponseStatus.OK, versionService.getBuildVersion(productName, version));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzAwNzkyOQ=="}, "originalCommit": {"oid": "f03ea285ca3b582d9844bc4a91c42e923b930556"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4429, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}