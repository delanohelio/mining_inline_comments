{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMjI1OTQ0", "number": 807, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMzoyMzozMVrOEn6RVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOTozMTowMFrOEodtyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjg0NjMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMzoyMzozMVrOHYtVVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTozNjo1NlrOHZztdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY3MDYxNQ==", "bodyText": "Seems recursive call is not good.", "url": "https://github.com/vmware/singleton/pull/807#discussion_r495670615", "createdAt": "2020-09-28T03:23:31Z", "author": {"login": "linr211"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -102,19 +102,21 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n     \tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n     \tif (cacheItem != null) { // Item is in cache\n-    \t\tif (cacheItem.getCachedData().isEmpty()) { // This means that the data to be used is from a fallback locale.\n-\t\t\t\t// If expired, try to first create and store cacheItem for the requested locale in a separate thread.\n-\t\t\t\tif (cacheItem.isExpired())\n-\t\t\t\t\tthis.createCacheItemTask(null); // Pass null so that locale fallback will not be applied.\n-\n-    \t\t\t// Use cached data of cacheItem.getLocale() --> fallback locale\n-\t\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), cacheItem.getLocale(), dto.getProductID(), dto.getVersion());\n-\t\t\t\tcacheItem = new ComponentService(fallbackLocaleDTO).getMessages(null);\n-\t\t\t} else if (cacheItem.isExpired()) {\n+    \t\tif (cacheItem.isExpired()) {\n     \t\t\t// Refresh the cacheItem in a separate thread\n     \t\t\trefreshCacheItemTask(cacheItem);\n     \t\t}\n-    \t} else { // Item is not in cache. Create and store cacheItem for the requested locale\n+    \t} else { // Item is not in cache.\n+\t\t\tProductService ps = new ProductService(dto);\n+\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n+\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n+\t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n+\t\t\t\t\treturn new ComponentService(matchedLocaleDTO).getMessages(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "943bb140cea5cebe4012aa7c2e7ec47e2d938405"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA0MDU5Mg==", "bodyText": "There is no recursive call in this line. Notice that getMessages is invoked on a separate instance of ComponentService. Could you be more specific as to what you mean by \"not good\"?", "url": "https://github.com/vmware/singleton/pull/807#discussion_r496040592", "createdAt": "2020-09-28T15:28:07Z", "author": {"login": "jessiejuachon"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -102,19 +102,21 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n     \tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n     \tif (cacheItem != null) { // Item is in cache\n-    \t\tif (cacheItem.getCachedData().isEmpty()) { // This means that the data to be used is from a fallback locale.\n-\t\t\t\t// If expired, try to first create and store cacheItem for the requested locale in a separate thread.\n-\t\t\t\tif (cacheItem.isExpired())\n-\t\t\t\t\tthis.createCacheItemTask(null); // Pass null so that locale fallback will not be applied.\n-\n-    \t\t\t// Use cached data of cacheItem.getLocale() --> fallback locale\n-\t\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), cacheItem.getLocale(), dto.getProductID(), dto.getVersion());\n-\t\t\t\tcacheItem = new ComponentService(fallbackLocaleDTO).getMessages(null);\n-\t\t\t} else if (cacheItem.isExpired()) {\n+    \t\tif (cacheItem.isExpired()) {\n     \t\t\t// Refresh the cacheItem in a separate thread\n     \t\t\trefreshCacheItemTask(cacheItem);\n     \t\t}\n-    \t} else { // Item is not in cache. Create and store cacheItem for the requested locale\n+    \t} else { // Item is not in cache.\n+\t\t\tProductService ps = new ProductService(dto);\n+\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n+\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n+\t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n+\t\t\t\t\treturn new ComponentService(matchedLocaleDTO).getMessages(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY3MDYxNQ=="}, "originalCommit": {"oid": "943bb140cea5cebe4012aa7c2e7ec47e2d938405"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA0NDgyNQ==", "bodyText": "Also, this logic (lines 110-117) is not new. I just moved it out of the createCacheItem method that is called in line 120 into here for code clean up.", "url": "https://github.com/vmware/singleton/pull/807#discussion_r496044825", "createdAt": "2020-09-28T15:34:00Z", "author": {"login": "jessiejuachon"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -102,19 +102,21 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n     \tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n     \tif (cacheItem != null) { // Item is in cache\n-    \t\tif (cacheItem.getCachedData().isEmpty()) { // This means that the data to be used is from a fallback locale.\n-\t\t\t\t// If expired, try to first create and store cacheItem for the requested locale in a separate thread.\n-\t\t\t\tif (cacheItem.isExpired())\n-\t\t\t\t\tthis.createCacheItemTask(null); // Pass null so that locale fallback will not be applied.\n-\n-    \t\t\t// Use cached data of cacheItem.getLocale() --> fallback locale\n-\t\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), cacheItem.getLocale(), dto.getProductID(), dto.getVersion());\n-\t\t\t\tcacheItem = new ComponentService(fallbackLocaleDTO).getMessages(null);\n-\t\t\t} else if (cacheItem.isExpired()) {\n+    \t\tif (cacheItem.isExpired()) {\n     \t\t\t// Refresh the cacheItem in a separate thread\n     \t\t\trefreshCacheItemTask(cacheItem);\n     \t\t}\n-    \t} else { // Item is not in cache. Create and store cacheItem for the requested locale\n+    \t} else { // Item is not in cache.\n+\t\t\tProductService ps = new ProductService(dto);\n+\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n+\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n+\t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n+\t\t\t\t\treturn new ComponentService(matchedLocaleDTO).getMessages(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY3MDYxNQ=="}, "originalCommit": {"oid": "943bb140cea5cebe4012aa7c2e7ec47e2d938405"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ1MDE2NA==", "bodyText": "I meant line 115. 'not good' means that it gets the messages twice: one for supported locale, another or not supported locale. The logic is duplicated, the locale should be handled before call getMessages.\nSecondly, when i read 'return new ComponentService(matchedLocaleDTO).getMessages(null);', i don't get what it means by passing a null value.", "url": "https://github.com/vmware/singleton/pull/807#discussion_r496450164", "createdAt": "2020-09-29T06:37:33Z", "author": {"login": "linr211"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -102,19 +102,21 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n     \tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n     \tif (cacheItem != null) { // Item is in cache\n-    \t\tif (cacheItem.getCachedData().isEmpty()) { // This means that the data to be used is from a fallback locale.\n-\t\t\t\t// If expired, try to first create and store cacheItem for the requested locale in a separate thread.\n-\t\t\t\tif (cacheItem.isExpired())\n-\t\t\t\t\tthis.createCacheItemTask(null); // Pass null so that locale fallback will not be applied.\n-\n-    \t\t\t// Use cached data of cacheItem.getLocale() --> fallback locale\n-\t\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), cacheItem.getLocale(), dto.getProductID(), dto.getVersion());\n-\t\t\t\tcacheItem = new ComponentService(fallbackLocaleDTO).getMessages(null);\n-\t\t\t} else if (cacheItem.isExpired()) {\n+    \t\tif (cacheItem.isExpired()) {\n     \t\t\t// Refresh the cacheItem in a separate thread\n     \t\t\trefreshCacheItemTask(cacheItem);\n     \t\t}\n-    \t} else { // Item is not in cache. Create and store cacheItem for the requested locale\n+    \t} else { // Item is not in cache.\n+\t\t\tProductService ps = new ProductService(dto);\n+\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n+\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n+\t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n+\t\t\t\t\treturn new ComponentService(matchedLocaleDTO).getMessages(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY3MDYxNQ=="}, "originalCommit": {"oid": "943bb140cea5cebe4012aa7c2e7ec47e2d938405"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgyMzY3MQ==", "bodyText": "Reminder: This code has been there before this PR. It was for a different issue (#781), so this comment is out of the scope of this PR. Please do not let it block this PR.\nThe intention of this line is exactly what you mentioned. It is not a duplicate. If requested locale is not found in cache, we want to get a matched locale, if any, instead of the actual requested locale. It is the same strategy for getting messages for a fallback locale: new ComponentService(fallbackLocaleDTO).getMessages().\nPart of the reason this looks messy is because the locale is currently part of the DTO. This is very old code that I did not want to change especially not in this PR as it is out of scope. In the future, I want to pass the locale to getMessages instead of having it in the DTO. If you do want to track this future improvement, please open another issue, because this PR is for code clean up only, not for changing any logic.\nSecondly, passing a null here is unnecessary. I have changed it to getMessages().", "url": "https://github.com/vmware/singleton/pull/807#discussion_r496823671", "createdAt": "2020-09-29T15:36:56Z", "author": {"login": "jessiejuachon"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -102,19 +102,21 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n     \tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n     \tif (cacheItem != null) { // Item is in cache\n-    \t\tif (cacheItem.getCachedData().isEmpty()) { // This means that the data to be used is from a fallback locale.\n-\t\t\t\t// If expired, try to first create and store cacheItem for the requested locale in a separate thread.\n-\t\t\t\tif (cacheItem.isExpired())\n-\t\t\t\t\tthis.createCacheItemTask(null); // Pass null so that locale fallback will not be applied.\n-\n-    \t\t\t// Use cached data of cacheItem.getLocale() --> fallback locale\n-\t\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), cacheItem.getLocale(), dto.getProductID(), dto.getVersion());\n-\t\t\t\tcacheItem = new ComponentService(fallbackLocaleDTO).getMessages(null);\n-\t\t\t} else if (cacheItem.isExpired()) {\n+    \t\tif (cacheItem.isExpired()) {\n     \t\t\t// Refresh the cacheItem in a separate thread\n     \t\t\trefreshCacheItemTask(cacheItem);\n     \t\t}\n-    \t} else { // Item is not in cache. Create and store cacheItem for the requested locale\n+    \t} else { // Item is not in cache.\n+\t\t\tProductService ps = new ProductService(dto);\n+\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n+\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n+\t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n+\t\t\t\t\treturn new ComponentService(matchedLocaleDTO).getMessages(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY3MDYxNQ=="}, "originalCommit": {"oid": "943bb140cea5cebe4012aa7c2e7ec47e2d938405"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODU3NjQ2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOToxMjo1N1rOHZjz9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTozODoyNVrOHZzz3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2MzE4OA==", "bodyText": "It's obscure to pass null to getMessages. Hard to understand.", "url": "https://github.com/vmware/singleton/pull/807#discussion_r496563188", "createdAt": "2020-09-29T09:12:57Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -102,19 +102,21 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n     \tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n     \tif (cacheItem != null) { // Item is in cache\n-    \t\tif (cacheItem.getCachedData().isEmpty()) { // This means that the data to be used is from a fallback locale.\n-\t\t\t\t// If expired, try to first create and store cacheItem for the requested locale in a separate thread.\n-\t\t\t\tif (cacheItem.isExpired())\n-\t\t\t\t\tthis.createCacheItemTask(null); // Pass null so that locale fallback will not be applied.\n-\n-    \t\t\t// Use cached data of cacheItem.getLocale() --> fallback locale\n-\t\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), cacheItem.getLocale(), dto.getProductID(), dto.getVersion());\n-\t\t\t\tcacheItem = new ComponentService(fallbackLocaleDTO).getMessages(null);\n-\t\t\t} else if (cacheItem.isExpired()) {\n+    \t\tif (cacheItem.isExpired()) {\n     \t\t\t// Refresh the cacheItem in a separate thread\n     \t\t\trefreshCacheItemTask(cacheItem);\n     \t\t}\n-    \t} else { // Item is not in cache. Create and store cacheItem for the requested locale\n+    \t} else { // Item is not in cache.\n+\t\t\tProductService ps = new ProductService(dto);\n+\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n+\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n+\t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n+\t\t\t\t\treturn new ComponentService(matchedLocaleDTO).getMessages(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "943bb140cea5cebe4012aa7c2e7ec47e2d938405"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgyNTMwOQ==", "bodyText": "First, this has been there since before this PR, so based on suggestions from retrospective, we should open another issue to address this specific concern. This PR is for code clean up of caching an empty datamap only.\nTo understand the behavior when passing null to getMessages, you can read the javadoc of getMessages:\n * @param fallbackLocalesIter The locale fallback queue to be used on failure. If null, there will be no fallback mechanism on failure so the message map will be empty.\n\nI have logged the issue with description here: #811", "url": "https://github.com/vmware/singleton/pull/807#discussion_r496825309", "createdAt": "2020-09-29T15:38:25Z", "author": {"login": "jessiejuachon"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -102,19 +102,21 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n     \tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n     \tif (cacheItem != null) { // Item is in cache\n-    \t\tif (cacheItem.getCachedData().isEmpty()) { // This means that the data to be used is from a fallback locale.\n-\t\t\t\t// If expired, try to first create and store cacheItem for the requested locale in a separate thread.\n-\t\t\t\tif (cacheItem.isExpired())\n-\t\t\t\t\tthis.createCacheItemTask(null); // Pass null so that locale fallback will not be applied.\n-\n-    \t\t\t// Use cached data of cacheItem.getLocale() --> fallback locale\n-\t\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), cacheItem.getLocale(), dto.getProductID(), dto.getVersion());\n-\t\t\t\tcacheItem = new ComponentService(fallbackLocaleDTO).getMessages(null);\n-\t\t\t} else if (cacheItem.isExpired()) {\n+    \t\tif (cacheItem.isExpired()) {\n     \t\t\t// Refresh the cacheItem in a separate thread\n     \t\t\trefreshCacheItemTask(cacheItem);\n     \t\t}\n-    \t} else { // Item is not in cache. Create and store cacheItem for the requested locale\n+    \t} else { // Item is not in cache.\n+\t\t\tProductService ps = new ProductService(dto);\n+\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n+\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n+\t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n+\t\t\t\t\treturn new ComponentService(matchedLocaleDTO).getMessages(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2MzE4OA=="}, "originalCommit": {"oid": "943bb140cea5cebe4012aa7c2e7ec47e2d938405"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODU4MzI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOToxNDozOVrOHZj4VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTo0ODozNVrOHZ0eLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2NDMwOA==", "bodyText": "Is it necessary to pass fallbackLocalesIter? I think createCacheItem shouldn't be affected by fallbackLocalesIter.", "url": "https://github.com/vmware/singleton/pull/807#discussion_r496564308", "createdAt": "2020-09-29T09:14:39Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -102,19 +102,21 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n     \tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n     \tif (cacheItem != null) { // Item is in cache\n-    \t\tif (cacheItem.getCachedData().isEmpty()) { // This means that the data to be used is from a fallback locale.\n-\t\t\t\t// If expired, try to first create and store cacheItem for the requested locale in a separate thread.\n-\t\t\t\tif (cacheItem.isExpired())\n-\t\t\t\t\tthis.createCacheItemTask(null); // Pass null so that locale fallback will not be applied.\n-\n-    \t\t\t// Use cached data of cacheItem.getLocale() --> fallback locale\n-\t\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), cacheItem.getLocale(), dto.getProductID(), dto.getVersion());\n-\t\t\t\tcacheItem = new ComponentService(fallbackLocaleDTO).getMessages(null);\n-\t\t\t} else if (cacheItem.isExpired()) {\n+    \t\tif (cacheItem.isExpired()) {\n     \t\t\t// Refresh the cacheItem in a separate thread\n     \t\t\trefreshCacheItemTask(cacheItem);\n     \t\t}\n-    \t} else { // Item is not in cache. Create and store cacheItem for the requested locale\n+    \t} else { // Item is not in cache.\n+\t\t\tProductService ps = new ProductService(dto);\n+\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n+\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n+\t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n+\t\t\t\t\treturn new ComponentService(matchedLocaleDTO).getMessages(null);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t//Create and store cacheItem for the requested locale\n \t\t\tcacheItem = createCacheItem(fallbackLocalesIter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "943bb140cea5cebe4012aa7c2e7ec47e2d938405"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgzNjE0MQ==", "bodyText": "You have already reviewed this code a long time ago though. Yes, it is necessary for now because I don't want to change any code logic in this PR. Please revisit this part in next PR.", "url": "https://github.com/vmware/singleton/pull/807#discussion_r496836141", "createdAt": "2020-09-29T15:48:35Z", "author": {"login": "jessiejuachon"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -102,19 +102,21 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n     \tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n     \tif (cacheItem != null) { // Item is in cache\n-    \t\tif (cacheItem.getCachedData().isEmpty()) { // This means that the data to be used is from a fallback locale.\n-\t\t\t\t// If expired, try to first create and store cacheItem for the requested locale in a separate thread.\n-\t\t\t\tif (cacheItem.isExpired())\n-\t\t\t\t\tthis.createCacheItemTask(null); // Pass null so that locale fallback will not be applied.\n-\n-    \t\t\t// Use cached data of cacheItem.getLocale() --> fallback locale\n-\t\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), cacheItem.getLocale(), dto.getProductID(), dto.getVersion());\n-\t\t\t\tcacheItem = new ComponentService(fallbackLocaleDTO).getMessages(null);\n-\t\t\t} else if (cacheItem.isExpired()) {\n+    \t\tif (cacheItem.isExpired()) {\n     \t\t\t// Refresh the cacheItem in a separate thread\n     \t\t\trefreshCacheItemTask(cacheItem);\n     \t\t}\n-    \t} else { // Item is not in cache. Create and store cacheItem for the requested locale\n+    \t} else { // Item is not in cache.\n+\t\t\tProductService ps = new ProductService(dto);\n+\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n+\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")\n+\t\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n+\t\t\t\t\treturn new ComponentService(matchedLocaleDTO).getMessages(null);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t//Create and store cacheItem for the requested locale\n \t\t\tcacheItem = createCacheItem(fallbackLocalesIter);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2NDMwOA=="}, "originalCommit": {"oid": "943bb140cea5cebe4012aa7c2e7ec47e2d938405"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODU5MTg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOToxNjo0NFrOHZj9jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMTowOTozNlrOHct5WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2NTY0Nw==", "bodyText": "Can't imagine getSupportedLocales is invoked three times in three code lines.", "url": "https://github.com/vmware/singleton/pull/807#discussion_r496565647", "createdAt": "2020-09-29T09:16:44Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -102,19 +102,21 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n     \tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n     \tif (cacheItem != null) { // Item is in cache\n-    \t\tif (cacheItem.getCachedData().isEmpty()) { // This means that the data to be used is from a fallback locale.\n-\t\t\t\t// If expired, try to first create and store cacheItem for the requested locale in a separate thread.\n-\t\t\t\tif (cacheItem.isExpired())\n-\t\t\t\t\tthis.createCacheItemTask(null); // Pass null so that locale fallback will not be applied.\n-\n-    \t\t\t// Use cached data of cacheItem.getLocale() --> fallback locale\n-\t\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), cacheItem.getLocale(), dto.getProductID(), dto.getVersion());\n-\t\t\t\tcacheItem = new ComponentService(fallbackLocaleDTO).getMessages(null);\n-\t\t\t} else if (cacheItem.isExpired()) {\n+    \t\tif (cacheItem.isExpired()) {\n     \t\t\t// Refresh the cacheItem in a separate thread\n     \t\t\trefreshCacheItemTask(cacheItem);\n     \t\t}\n-    \t} else { // Item is not in cache. Create and store cacheItem for the requested locale\n+    \t} else { // Item is not in cache.\n+\t\t\tProductService ps = new ProductService(dto);\n+\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n+\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "943bb140cea5cebe4012aa7c2e7ec47e2d938405"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgzNjU3NA==", "bodyText": "Where? It is only directly invoked in line 112. Do you mean ps.isSupportedLocale? Please clarify your comment (I don't understand what you can't imagine \ud83d\ude04  )\nNote that there is formatting logic in ps.isSupportedLocale. For \"cleaner\" code, I put it in a separate method instead of having to call LocaleUtility.fmtToMappedLocale (which developers may forget to do in the future):\nSet<Locale> supportedLocales = getSupportedLocales();\nsupportedLocales.contains(LocaleUtility.fmtToMappedLocale(...))\n\nLet me know if you have abetter suggestion.", "url": "https://github.com/vmware/singleton/pull/807#discussion_r496836574", "createdAt": "2020-09-29T15:48:58Z", "author": {"login": "jessiejuachon"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -102,19 +102,21 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n     \tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n     \tif (cacheItem != null) { // Item is in cache\n-    \t\tif (cacheItem.getCachedData().isEmpty()) { // This means that the data to be used is from a fallback locale.\n-\t\t\t\t// If expired, try to first create and store cacheItem for the requested locale in a separate thread.\n-\t\t\t\tif (cacheItem.isExpired())\n-\t\t\t\t\tthis.createCacheItemTask(null); // Pass null so that locale fallback will not be applied.\n-\n-    \t\t\t// Use cached data of cacheItem.getLocale() --> fallback locale\n-\t\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), cacheItem.getLocale(), dto.getProductID(), dto.getVersion());\n-\t\t\t\tcacheItem = new ComponentService(fallbackLocaleDTO).getMessages(null);\n-\t\t\t} else if (cacheItem.isExpired()) {\n+    \t\tif (cacheItem.isExpired()) {\n     \t\t\t// Refresh the cacheItem in a separate thread\n     \t\t\trefreshCacheItemTask(cacheItem);\n     \t\t}\n-    \t} else { // Item is not in cache. Create and store cacheItem for the requested locale\n+    \t} else { // Item is not in cache.\n+\t\t\tProductService ps = new ProductService(dto);\n+\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n+\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2NTY0Nw=="}, "originalCommit": {"oid": "943bb140cea5cebe4012aa7c2e7ec47e2d938405"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIzNTQxNQ==", "bodyText": "I think you can improve the LocaleUtility.pickupLocaleFromList to get enough information by only one call. Picking up once to get the supported locale or empty locale.", "url": "https://github.com/vmware/singleton/pull/807#discussion_r497235415", "createdAt": "2020-09-30T04:24:44Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -102,19 +102,21 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n     \tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n     \tif (cacheItem != null) { // Item is in cache\n-    \t\tif (cacheItem.getCachedData().isEmpty()) { // This means that the data to be used is from a fallback locale.\n-\t\t\t\t// If expired, try to first create and store cacheItem for the requested locale in a separate thread.\n-\t\t\t\tif (cacheItem.isExpired())\n-\t\t\t\t\tthis.createCacheItemTask(null); // Pass null so that locale fallback will not be applied.\n-\n-    \t\t\t// Use cached data of cacheItem.getLocale() --> fallback locale\n-\t\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), cacheItem.getLocale(), dto.getProductID(), dto.getVersion());\n-\t\t\t\tcacheItem = new ComponentService(fallbackLocaleDTO).getMessages(null);\n-\t\t\t} else if (cacheItem.isExpired()) {\n+    \t\tif (cacheItem.isExpired()) {\n     \t\t\t// Refresh the cacheItem in a separate thread\n     \t\t\trefreshCacheItemTask(cacheItem);\n     \t\t}\n-    \t} else { // Item is not in cache. Create and store cacheItem for the requested locale\n+    \t} else { // Item is not in cache.\n+\t\t\tProductService ps = new ProductService(dto);\n+\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n+\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2NTY0Nw=="}, "originalCommit": {"oid": "943bb140cea5cebe4012aa7c2e7ec47e2d938405"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3NDEzNw==", "bodyText": "Ahhh yes! I agree. I already have that lined up. However, as I said, this PR is only to clean up / remove any code related to adding an empty data set into the cache.\nSpeaking of, I am also removing \"locale\" property from MessageCacheItem, so more changes have been added to this PR. This is actually related to this code clean up because \"locale\" was added for the purposes of adding an empty data map into cache for non-supported locales (which we are not doing anymore).", "url": "https://github.com/vmware/singleton/pull/807#discussion_r499874137", "createdAt": "2020-10-05T21:09:36Z", "author": {"login": "jessiejuachon"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -102,19 +102,21 @@ public MessageCacheItem getMessages(Iterator<Locale> fallbackLocalesIter) {\n     \tCacheService cacheService = new CacheService(dto);\n     \tMessageCacheItem cacheItem = cacheService.getCacheOfComponent();\n     \tif (cacheItem != null) { // Item is in cache\n-    \t\tif (cacheItem.getCachedData().isEmpty()) { // This means that the data to be used is from a fallback locale.\n-\t\t\t\t// If expired, try to first create and store cacheItem for the requested locale in a separate thread.\n-\t\t\t\tif (cacheItem.isExpired())\n-\t\t\t\t\tthis.createCacheItemTask(null); // Pass null so that locale fallback will not be applied.\n-\n-    \t\t\t// Use cached data of cacheItem.getLocale() --> fallback locale\n-\t\t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), cacheItem.getLocale(), dto.getProductID(), dto.getVersion());\n-\t\t\t\tcacheItem = new ComponentService(fallbackLocaleDTO).getMessages(null);\n-\t\t\t} else if (cacheItem.isExpired()) {\n+    \t\tif (cacheItem.isExpired()) {\n     \t\t\t// Refresh the cacheItem in a separate thread\n     \t\t\trefreshCacheItemTask(cacheItem);\n     \t\t}\n-    \t} else { // Item is not in cache. Create and store cacheItem for the requested locale\n+    \t} else { // Item is not in cache.\n+\t\t\tProductService ps = new ProductService(dto);\n+\t\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) { // Requested locale is not supported\n+\t\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n+\t\t\t\tif (ps.isSupportedLocale(matchedLocale)) { // Requested locale matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2NTY0Nw=="}, "originalCommit": {"oid": "943bb140cea5cebe4012aa7c2e7ec47e2d938405"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODY1MzUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOTozMTowMFrOHZkjCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOTozMTowMFrOHZkjCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU3NTI0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tCallable<MessageCacheItem> callable = () -> {\n          \n          \n            \n            \t\tRunnable runnable = () -> {", "url": "https://github.com/vmware/singleton/pull/807#discussion_r496575240", "createdAt": "2020-09-29T09:31:00Z", "author": {"login": "Xiaochao8"}, "path": "src/main/java/com/vmware/vipclient/i18n/messages/service/ComponentService.java", "diffHunk": "@@ -131,69 +133,25 @@ private MessageCacheItem createCacheItem(Iterator<Locale> fallbackLocalesIter) {\n \t\t// Create a new cacheItem object to be stored in cache\n \t\tMessageCacheItem cacheItem = new MessageCacheItem();\n \n-\t\t// If the requested locale is not supported, but matches a supported locale (eg. requested locale \"fr_CA matches supported locale \"fr\"),\n-\t\t// return the messages of the supported locale that best matches the requested locale.\n-\t\tProductService ps = new ProductService(dto);\n-\t\tif (!ps.isSupportedLocale(Locale.forLanguageTag(dto.getLocale()))) {\n-\t\t\tLocale matchedLocale = LocaleUtility.pickupLocaleFromList(new LinkedList<>(ps.getSupportedLocales()), Locale.forLanguageTag(dto.getLocale()));\n-\t\t\tif (ps.isSupportedLocale(matchedLocale)) {\n-\t\t\t\tMessagesDTO matchedLocaleDTO = new MessagesDTO(dto.getComponent(), matchedLocale.toLanguageTag(), dto.getProductID(), dto.getVersion());\n-\t\t\t\tcacheItem = new ComponentService(matchedLocaleDTO).getMessages(null);\n-\t\t\t\tMessageCacheItem cacheItemCopy = new MessageCacheItem(matchedLocale.toLanguageTag(), null, null, System.currentTimeMillis(), cacheItem.getMaxAgeMillis());\n-\t\t\t\tcacheService.addCacheOfComponent(cacheItemCopy);\n-\t\t\t\treturn cacheItem;\n-\t\t\t}\n-\t\t}\n-\n-\t\t// Will proceed with the following code if\n-\t\t// a. requested locale is supported OR\n-\t\t// b. requested locale is not supported and does not match any supported locale\n \t\trefreshCacheItem(cacheItem, VIPCfg.getInstance().getMsgOriginsQueue().iterator());\n \t\tif (!cacheItem.getCachedData().isEmpty()) {\n \t\t\tcacheService.addCacheOfComponent(cacheItem);\n \t\t} else if (!dto.getLocale().equals(ConstantsKeys.SOURCE) && fallbackLocalesIter != null && fallbackLocalesIter.hasNext()) {\n \t\t\t// If failed to fetch message for the requested DTO, use MessageCacheItem of the next fallback locale.\n \t\t\tMessagesDTO fallbackLocaleDTO = new MessagesDTO(dto.getComponent(), fallbackLocalesIter.next().toLanguageTag(), dto.getProductID(), dto.getVersion());\n \t\t\tcacheItem = new ComponentService(fallbackLocaleDTO).getMessages(fallbackLocalesIter);\n-\t\t\tif (!cacheItem.getCachedData().isEmpty()) {\n-\t\t\t\t// Cache a copy of the fallback locale's cacheItem, but with only the locale and maxAgeMillis. Use current timestamp.\n-\t\t\t\tMessageCacheItem cacheItemCopy = new MessageCacheItem(cacheItem.getLocale(), null, null, System.currentTimeMillis(), cacheItem.getMaxAgeMillis());\n-\t\t\t\tcacheService.addCacheOfComponent(cacheItemCopy);\n-\t\t\t}\n \t\t}\n \n \t\treturn cacheItem;\n \t}\n \n-\tprivate void createCacheItemTask(Iterator<Locale> fallbackLocalesIter) {\n-\t\tCallable<MessageCacheItem> callable = () -> {\n-\t\t\ttry {\n-\t\t\t\treturn this.createCacheItem(fallbackLocalesIter);\n-\t\t\t} catch (Exception e) {\n-\t\t\t\t// To make sure that the thread will close\n-\t\t\t\t// even when an exception is thrown\n-\t\t\t\treturn null;\n-\t\t\t}\n-\t\t};\n-\t\tFutureTask<MessageCacheItem> task = new FutureTask<>(callable);\n-\t\tThread thread = new Thread(task);\n-\t\tthread.start();\n-\t}\n-\n \tprivate void refreshCacheItemTask(MessageCacheItem cacheItem) {\n \t\tCallable<MessageCacheItem> callable = () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "943bb140cea5cebe4012aa7c2e7ec47e2d938405"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4336, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}