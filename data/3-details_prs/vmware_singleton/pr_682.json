{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0MzA4NTkz", "number": 682, "title": "Add methods in TranslationMessage to support named arguments", "bodyText": "", "createdAt": "2020-07-21T09:23:24Z", "url": "https://github.com/vmware/singleton/pull/682", "merged": true, "mergeCommit": {"oid": "00e1ed5e394dde79b788073f3225772b4b0f8abb"}, "closed": true, "closedAt": "2020-07-22T07:17:34Z", "author": {"login": "Xiaochao8"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3CtDMAH2gAyNDU0MzA4NTkzOjg1MWRlOTlhNTQ1YTdlYTA5ZjczODExMTA0MjdhYWZjYTJjYWMyZDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3VbXkgFqTQ1MzA0OTI3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "851de99a545a7ea09f7381110427aafca2cac2d1", "author": {"user": {"login": "Xiaochao8", "name": "Xiaochao Li"}}, "url": "https://github.com/vmware/singleton/commit/851de99a545a7ea09f7381110427aafca2cac2d1", "committedDate": "2020-07-21T09:20:56Z", "message": "Add methods in TranslationMessage to support named arguments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyOTg5Mzcw", "url": "https://github.com/vmware/singleton/pull/682#pullrequestreview-452989370", "createdAt": "2020-07-22T04:41:01Z", "commit": {"oid": "851de99a545a7ea09f7381110427aafca2cac2d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDo0MTowMVrOG1Sddw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDo0MTowMVrOG1Sddw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzMDE2Nw==", "bodyText": "Can we have another private method for these codes and both getString2 can share it?", "url": "https://github.com/vmware/singleton/pull/682#discussion_r458530167", "createdAt": "2020-07-22T04:41:01Z", "author": {"login": "linr211"}, "path": "src/main/java/com/vmware/vipclient/i18n/base/instances/TranslationMessage.java", "diffHunk": "@@ -319,11 +357,50 @@ public String getString2(final String component,\n                     LocaleUtility.defaultLocale);\n             source = rb.getString(key);\n         } catch (Exception e) {\n-            this.logger.error(e.getMessage());\n+            logger.error(e.getMessage());\n+            source = key;\n+        }\n+        // get translation from VIP service\n+        message = getString(locale, component, key, source, \"\", args);\n+        return message;\n+    }\n+\n+    /**\n+     * get one translation of the configured product from VIP, if message not\n+     * found will get the English message from specified bundle.\n+     *\n+     * @param component\n+     *            defined on VIP service, it will be created automatically if\n+     *            not exist\n+     * @param bundle\n+     *            properties file name, normally it should be put under the root\n+     *            'src' path\n+     * @param locale\n+     *            an object used to get the source's translation\n+     * @param key\n+     *            identify the source\n+     * @param args\n+     *            named arguments used to format the message with placeholder\n+     * @return a message of translation, if the translation is not found from\n+     *         VIP service, it will return the value defined in the bundle\n+     *         searching by the key\n+     */\n+    public String getString2(final String component, final String bundle, final Locale locale, final String key,\n+            final Map<String, Object> arguments) {\n+        logger.trace(\"Start to execute TranslationMessage.getStringWithNamedArgs\");\n+        if (key == null || key.equalsIgnoreCase(\"\"))\n+            return \"\";\n+        String message = \"\";\n+        String source;\n+        try {\n+            ResourceBundle rb = ResourceBundle.getBundle(bundle, LocaleUtility.defaultLocale);\n+            source = rb.getString(key);\n+        } catch (Exception e) {\n+            logger.error(e.getMessage());\n             source = key;\n         }\n         // get translation from VIP service", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "851de99a545a7ea09f7381110427aafca2cac2d1"}, "originalPosition": 238}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dbe6498d931a6b0a165cbf8a3598b51dd68ff1e", "author": {"user": {"login": "Xiaochao8", "name": "Xiaochao Li"}}, "url": "https://github.com/vmware/singleton/commit/6dbe6498d931a6b0a165cbf8a3598b51dd68ff1e", "committedDate": "2020-07-22T05:47:34Z", "message": "Create method getString2WithArgs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMDQ5Mjcw", "url": "https://github.com/vmware/singleton/pull/682#pullrequestreview-453049270", "createdAt": "2020-07-22T07:09:49Z", "commit": {"oid": "6dbe6498d931a6b0a165cbf8a3598b51dd68ff1e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4246, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}