{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNjc2MjEx", "number": 735, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNDowOToyOVrOEb4iAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNDo0MTo1M1rOEb5WMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NjczMjE4OnYy", "diffSide": "RIGHT", "path": "sample-client-app/sample-app-with-shared-lib/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNDowOToyOVrOHGFdcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNTozODo1N1rOHGITNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE0Mjk2MA==", "bodyText": "demonstrate usage of a shared library\nmay should be:\ndemonstrate usage of an application using a shared library", "url": "https://github.com/vmware/singleton/pull/735#discussion_r476142960", "createdAt": "2020-08-25T04:09:29Z", "author": {"login": "huihuiw01"}, "path": "sample-client-app/sample-app-with-shared-lib/README.md", "diffHunk": "@@ -0,0 +1,36 @@\n+Singleton Java Client Sample Application with Shared Library\n+============\n+\n+This application can be used to demonstrate usage of a shared library that uses the Singleton Java client.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE4OTQ5NA==", "bodyText": "No, what I put is what I actually meant.. to. demonstrate usage of (how to use) a shared library that uses the Singleton Java client", "url": "https://github.com/vmware/singleton/pull/735#discussion_r476189494", "createdAt": "2020-08-25T05:38:57Z", "author": {"login": "jessiejuachon"}, "path": "sample-client-app/sample-app-with-shared-lib/README.md", "diffHunk": "@@ -0,0 +1,36 @@\n+Singleton Java Client Sample Application with Shared Library\n+============\n+\n+This application can be used to demonstrate usage of a shared library that uses the Singleton Java client.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE0Mjk2MA=="}, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3Njc3OTc0OnYy", "diffSide": "RIGHT", "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/Main.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNDoyMToxNlrOHGF95Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNjo0MDo1N1rOHHUlaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE1MTI2OQ==", "bodyText": "In actual application, initialize code(line 28-37) usually is not put together(put in one method) with getMessage code(line 39-41). Usually the former is called only once when application start, and the latter is called many times at where it's needed.\nSo I think put initialize code in a method, and get message code in another method is better.", "url": "https://github.com/vmware/singleton/pull/735#discussion_r476151269", "createdAt": "2020-08-25T04:21:16Z", "author": {"login": "huihuiw01"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/Main.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.i18n.util.LocaleUtility;\n+\n+public class Main {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tLocale sharedLibLocale = Locale.forLanguageTag(\"es\");\n+\t\tif (args.length > 0) {\n+\t\t\t// set locale\n+\t\t\tSystem.out.println(\"Set locale to: \" + args[0]);\n+\t\t\tsharedLibLocale = Locale.forLanguageTag(args[0]);\n+\t\t}\n+\n+\t\t// Initialize root application's VIP configuration\n+\t\tVIPCfg cfg = VIPCfg.getInstance();\n+\t\ttry {\n+\t\t\tcfg.initialize(\"sampleconfig\");\n+\t\t} catch (VIPClientInitException e) {\n+\t\t\tSystem.out.println(e.getMessage());\n+\t\t}\n+\t\tcfg.initializeVIPService();\n+\t\tcfg.createTranslationCache(MessageCache.class);\n+\t\tcfg.createFormattingCache(FormattingCache.class);\n+\n+\t\tTranslationMessage tm = (TranslationMessage) I18nFactory.getInstance(cfg).getMessageInstance(TranslationMessage.class);\n+\t\tString rootMsg = tm.getMessage(Locale.forLanguageTag(\"fr\"), \"default\", \"global_text_username\");\n+\t\tSystem.out.println(\"Root application's message; fetch is triggered from the root application:  \" + rootMsg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5MDAxMg==", "bodyText": "We can do this as future improvement. This is how it is in the main sample-client-app also.", "url": "https://github.com/vmware/singleton/pull/735#discussion_r476190012", "createdAt": "2020-08-25T05:40:32Z", "author": {"login": "jessiejuachon"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/Main.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.i18n.util.LocaleUtility;\n+\n+public class Main {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tLocale sharedLibLocale = Locale.forLanguageTag(\"es\");\n+\t\tif (args.length > 0) {\n+\t\t\t// set locale\n+\t\t\tSystem.out.println(\"Set locale to: \" + args[0]);\n+\t\t\tsharedLibLocale = Locale.forLanguageTag(args[0]);\n+\t\t}\n+\n+\t\t// Initialize root application's VIP configuration\n+\t\tVIPCfg cfg = VIPCfg.getInstance();\n+\t\ttry {\n+\t\t\tcfg.initialize(\"sampleconfig\");\n+\t\t} catch (VIPClientInitException e) {\n+\t\t\tSystem.out.println(e.getMessage());\n+\t\t}\n+\t\tcfg.initializeVIPService();\n+\t\tcfg.createTranslationCache(MessageCache.class);\n+\t\tcfg.createFormattingCache(FormattingCache.class);\n+\n+\t\tTranslationMessage tm = (TranslationMessage) I18nFactory.getInstance(cfg).getMessageInstance(TranslationMessage.class);\n+\t\tString rootMsg = tm.getMessage(Locale.forLanguageTag(\"fr\"), \"default\", \"global_text_username\");\n+\t\tSystem.out.println(\"Root application's message; fetch is triggered from the root application:  \" + rootMsg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE1MTI2OQ=="}, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ1Nzc2Mg==", "bodyText": "The point is to demonstrate how to pass the tmSharedLib in the simplest way possible, not how to design the root app or the shared lib.", "url": "https://github.com/vmware/singleton/pull/735#discussion_r476457762", "createdAt": "2020-08-25T13:42:11Z", "author": {"login": "jessiejuachon"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/Main.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.i18n.util.LocaleUtility;\n+\n+public class Main {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tLocale sharedLibLocale = Locale.forLanguageTag(\"es\");\n+\t\tif (args.length > 0) {\n+\t\t\t// set locale\n+\t\t\tSystem.out.println(\"Set locale to: \" + args[0]);\n+\t\t\tsharedLibLocale = Locale.forLanguageTag(args[0]);\n+\t\t}\n+\n+\t\t// Initialize root application's VIP configuration\n+\t\tVIPCfg cfg = VIPCfg.getInstance();\n+\t\ttry {\n+\t\t\tcfg.initialize(\"sampleconfig\");\n+\t\t} catch (VIPClientInitException e) {\n+\t\t\tSystem.out.println(e.getMessage());\n+\t\t}\n+\t\tcfg.initializeVIPService();\n+\t\tcfg.createTranslationCache(MessageCache.class);\n+\t\tcfg.createFormattingCache(FormattingCache.class);\n+\n+\t\tTranslationMessage tm = (TranslationMessage) I18nFactory.getInstance(cfg).getMessageInstance(TranslationMessage.class);\n+\t\tString rootMsg = tm.getMessage(Locale.forLanguageTag(\"fr\"), \"default\", \"global_text_username\");\n+\t\tSystem.out.println(\"Root application's message; fetch is triggered from the root application:  \" + rootMsg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE1MTI2OQ=="}, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAwMjYzOQ==", "bodyText": "I think we should design sample app to make it easiest to use and as close to the real application as possible. So suggest future improvement.", "url": "https://github.com/vmware/singleton/pull/735#discussion_r477002639", "createdAt": "2020-08-26T02:56:29Z", "author": {"login": "huihuiw01"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/Main.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.i18n.util.LocaleUtility;\n+\n+public class Main {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tLocale sharedLibLocale = Locale.forLanguageTag(\"es\");\n+\t\tif (args.length > 0) {\n+\t\t\t// set locale\n+\t\t\tSystem.out.println(\"Set locale to: \" + args[0]);\n+\t\t\tsharedLibLocale = Locale.forLanguageTag(args[0]);\n+\t\t}\n+\n+\t\t// Initialize root application's VIP configuration\n+\t\tVIPCfg cfg = VIPCfg.getInstance();\n+\t\ttry {\n+\t\t\tcfg.initialize(\"sampleconfig\");\n+\t\t} catch (VIPClientInitException e) {\n+\t\t\tSystem.out.println(e.getMessage());\n+\t\t}\n+\t\tcfg.initializeVIPService();\n+\t\tcfg.createTranslationCache(MessageCache.class);\n+\t\tcfg.createFormattingCache(FormattingCache.class);\n+\n+\t\tTranslationMessage tm = (TranslationMessage) I18nFactory.getInstance(cfg).getMessageInstance(TranslationMessage.class);\n+\t\tString rootMsg = tm.getMessage(Locale.forLanguageTag(\"fr\"), \"default\", \"global_text_username\");\n+\t\tSystem.out.println(\"Root application's message; fetch is triggered from the root application:  \" + rootMsg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE1MTI2OQ=="}, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQzOTMzOQ==", "bodyText": "I have created #744 to track this", "url": "https://github.com/vmware/singleton/pull/735#discussion_r477439339", "createdAt": "2020-08-26T16:40:57Z", "author": {"login": "jessiejuachon"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/Main.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.i18n.util.LocaleUtility;\n+\n+public class Main {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tLocale sharedLibLocale = Locale.forLanguageTag(\"es\");\n+\t\tif (args.length > 0) {\n+\t\t\t// set locale\n+\t\t\tSystem.out.println(\"Set locale to: \" + args[0]);\n+\t\t\tsharedLibLocale = Locale.forLanguageTag(args[0]);\n+\t\t}\n+\n+\t\t// Initialize root application's VIP configuration\n+\t\tVIPCfg cfg = VIPCfg.getInstance();\n+\t\ttry {\n+\t\t\tcfg.initialize(\"sampleconfig\");\n+\t\t} catch (VIPClientInitException e) {\n+\t\t\tSystem.out.println(e.getMessage());\n+\t\t}\n+\t\tcfg.initializeVIPService();\n+\t\tcfg.createTranslationCache(MessageCache.class);\n+\t\tcfg.createFormattingCache(FormattingCache.class);\n+\n+\t\tTranslationMessage tm = (TranslationMessage) I18nFactory.getInstance(cfg).getMessageInstance(TranslationMessage.class);\n+\t\tString rootMsg = tm.getMessage(Locale.forLanguageTag(\"fr\"), \"default\", \"global_text_username\");\n+\t\tSystem.out.println(\"Root application's message; fetch is triggered from the root application:  \" + rootMsg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE1MTI2OQ=="}, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NjgzNzUzOnYy", "diffSide": "RIGHT", "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/SharedLibDemo.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNDozNDo1MlrOHGGkkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNjo0NzozM1rOHHU1hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE2MTE3MA==", "bodyText": "This class is for showing how write code in shared library, so shouldn't this class put into sample-shared-library?\nBesides if it is not put into shared library, each application using shared library need write these code snippet.", "url": "https://github.com/vmware/singleton/pull/735#discussion_r476161170", "createdAt": "2020-08-25T04:34:52Z", "author": {"login": "huihuiw01"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/SharedLibDemo.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.sample.shared.Shared;\n+\n+public class SharedLibDemo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5MTM0Ng==", "bodyText": "This is for showing how to use a shared library's class and method (Shared.someMethod in lines 33-34) in a root application code such as SharedLibDemo.\nEach root application that uses the shared library will call shared.someMethod() as usual (line 34). Only those root applications that also want to use VIP will have to write lines 19-33.", "url": "https://github.com/vmware/singleton/pull/735#discussion_r476191346", "createdAt": "2020-08-25T05:45:05Z", "author": {"login": "jessiejuachon"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/SharedLibDemo.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.sample.shared.Shared;\n+\n+public class SharedLibDemo {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE2MTE3MA=="}, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjMzNTI4OQ==", "bodyText": "My description maybe not precise, but the precondition I based on is both the root application and shared library use VIP, or there is no need for us to write these demo code.\nThe goal I want to reach is also let the root application call the shared library code as usual(before use VIP), and no big change for shared library.\nBut if put below code snippet in the root application, and root application call many methods of shared library, you need pass 'tmSharedLib' to each constructor of shared lib class called by the root application as line 31~33,\nTranslationMessage tmSharedLib = (TranslationMessage)  I18nFactory.getInstance().getMessageInstance(TranslationMessage.class, sharedLibCfg);\nShared shared = new Shared(tmSharedLib, locale);\nSystem.out.println(\"Shared library's message; fetch triggered from inside the shared library: \" + shared.someMethod());\nthis not only need add constructor in shared library, but also not call shared lib methods as usual, because before use VIP it call shared lib may like this:\nShared shared = new Shared();\nSystem.out.println(\"Shared library's message; fetch triggered from inside the shared library: \" + shared.someMethod());\nBut if you move these codes into sample-shared-library,  no need add constructor in shared lib and can call share lib methods as usual.", "url": "https://github.com/vmware/singleton/pull/735#discussion_r476335289", "createdAt": "2020-08-25T10:09:24Z", "author": {"login": "huihuiw01"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/SharedLibDemo.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.sample.shared.Shared;\n+\n+public class SharedLibDemo {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE2MTE3MA=="}, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ1NTE3MQ==", "bodyText": "Actually, Shared.java may act as a singleton instance that holds tmSharedLib which is to be used for the rest of the shared library classes. Hence, the new constructor is only in Shared.java, not in all shared library classes. The code in the root app does not have to be repeated also.\nThe point is to demonstrate how to pass the tmSharedLib in the simplest way possible, not how to design the root app or the shared lib.", "url": "https://github.com/vmware/singleton/pull/735#discussion_r476455171", "createdAt": "2020-08-25T13:38:38Z", "author": {"login": "jessiejuachon"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/SharedLibDemo.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.sample.shared.Shared;\n+\n+public class SharedLibDemo {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE2MTE3MA=="}, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAwMjA3Mw==", "bodyText": "Yeah, Shared.java may act as a singleton instance that holds tmSharedLib which is to be used for the rest of the shared library classes. good idea!\nBut in this case Shared class should be called by shared lib's methods which need call getMessage to get translation, not by the root application, because the methods root application need call must not all in the Shared.java.\nI think we should design sample app to make it easiest to use and as close to the real application as possible. So suggest future improvement.", "url": "https://github.com/vmware/singleton/pull/735#discussion_r477002073", "createdAt": "2020-08-26T02:54:24Z", "author": {"login": "huihuiw01"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/SharedLibDemo.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.sample.shared.Shared;\n+\n+public class SharedLibDemo {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE2MTE3MA=="}, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ0MzQ2MA==", "bodyText": "@huihuiw01 , I have created #744 to track this", "url": "https://github.com/vmware/singleton/pull/735#discussion_r477443460", "createdAt": "2020-08-26T16:47:33Z", "author": {"login": "jessiejuachon"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/SharedLibDemo.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.sample.shared.Shared;\n+\n+public class SharedLibDemo {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE2MTE3MA=="}, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3Njg1MTk2OnYy", "diffSide": "RIGHT", "path": "sample-client-app/sample-shared-library/src/main/resources/sharedlib.properties", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNDozODo0MFrOHGGupg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNTo0NjoxNlrOHGIbzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE2Mzc1MA==", "bodyText": "Looks like this file is not used.", "url": "https://github.com/vmware/singleton/pull/735#discussion_r476163750", "createdAt": "2020-08-25T04:38:40Z", "author": {"login": "huihuiw01"}, "path": "sample-client-app/sample-shared-library/src/main/resources/sharedlib.properties", "diffHunk": "@@ -0,0 +1,27 @@\n+# It's used for categorizing translation by product on Singleton side to maintain translation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5MTY5NA==", "bodyText": "This file will be used if sample-shared-library is used as a standalone app so let's keep it there.", "url": "https://github.com/vmware/singleton/pull/735#discussion_r476191694", "createdAt": "2020-08-25T05:46:16Z", "author": {"login": "jessiejuachon"}, "path": "sample-client-app/sample-shared-library/src/main/resources/sharedlib.properties", "diffHunk": "@@ -0,0 +1,27 @@\n+# It's used for categorizing translation by product on Singleton side to maintain translation.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE2Mzc1MA=="}, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3Njg2NTc2OnYy", "diffSide": "RIGHT", "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/SharedLibDemo.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNDo0MTo1M1rOHGG4Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNjo0ODo0OFrOHHU4fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE2NjIxMQ==", "bodyText": "Same comment as that in Main.java", "url": "https://github.com/vmware/singleton/pull/735#discussion_r476166211", "createdAt": "2020-08-25T04:41:53Z", "author": {"login": "huihuiw01"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/SharedLibDemo.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.sample.shared.Shared;\n+\n+public class SharedLibDemo {\n+    public static void demoSharedLib(Locale locale) {\n+        //VIPCfg cfg = VIPCfg.getInstance();\n+\n+        String shareLibProdName = \"SharedProduct\";\n+        VIPCfg sharedLibCfg = VIPCfg.getSubInstance(shareLibProdName);\n+        try {\n+            sharedLibCfg.initialize(\"sharedlibrary\");\n+        } catch (VIPClientInitException e) {\n+            e.printStackTrace();\n+        }\n+        sharedLibCfg.createTranslationCache(MessageCache.class);\n+        sharedLibCfg.createFormattingCache(FormattingCache.class);\n+\n+        TranslationMessage tmSharedLib = (TranslationMessage) I18nFactory.getInstance().getMessageInstance(TranslationMessage.class, sharedLibCfg);\n+\n+        Shared shared = new Shared(tmSharedLib, locale);\n+        System.out.println(\"Shared library's message; fetch triggered from inside the shared library: \" + shared.someMethod());\n+\n+        String sharedMsg = tmSharedLib.getMessage(locale, \"shared\", \"shared.library.key1\");\n+        System.out.println(\"Shared library's message; fetch is triggered from root application:  \" + sharedMsg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5MTUzMg==", "bodyText": "We can do this as future improvement.", "url": "https://github.com/vmware/singleton/pull/735#discussion_r476191532", "createdAt": "2020-08-25T05:45:40Z", "author": {"login": "jessiejuachon"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/SharedLibDemo.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.sample.shared.Shared;\n+\n+public class SharedLibDemo {\n+    public static void demoSharedLib(Locale locale) {\n+        //VIPCfg cfg = VIPCfg.getInstance();\n+\n+        String shareLibProdName = \"SharedProduct\";\n+        VIPCfg sharedLibCfg = VIPCfg.getSubInstance(shareLibProdName);\n+        try {\n+            sharedLibCfg.initialize(\"sharedlibrary\");\n+        } catch (VIPClientInitException e) {\n+            e.printStackTrace();\n+        }\n+        sharedLibCfg.createTranslationCache(MessageCache.class);\n+        sharedLibCfg.createFormattingCache(FormattingCache.class);\n+\n+        TranslationMessage tmSharedLib = (TranslationMessage) I18nFactory.getInstance().getMessageInstance(TranslationMessage.class, sharedLibCfg);\n+\n+        Shared shared = new Shared(tmSharedLib, locale);\n+        System.out.println(\"Shared library's message; fetch triggered from inside the shared library: \" + shared.someMethod());\n+\n+        String sharedMsg = tmSharedLib.getMessage(locale, \"shared\", \"shared.library.key1\");\n+        System.out.println(\"Shared library's message; fetch is triggered from root application:  \" + sharedMsg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE2NjIxMQ=="}, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ1Nzg5Mg==", "bodyText": "The point is to demonstrate how to pass the tmSharedLib in the simplest way possible, not how to design the root app or the shared lib.", "url": "https://github.com/vmware/singleton/pull/735#discussion_r476457892", "createdAt": "2020-08-25T13:42:23Z", "author": {"login": "jessiejuachon"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/SharedLibDemo.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.sample.shared.Shared;\n+\n+public class SharedLibDemo {\n+    public static void demoSharedLib(Locale locale) {\n+        //VIPCfg cfg = VIPCfg.getInstance();\n+\n+        String shareLibProdName = \"SharedProduct\";\n+        VIPCfg sharedLibCfg = VIPCfg.getSubInstance(shareLibProdName);\n+        try {\n+            sharedLibCfg.initialize(\"sharedlibrary\");\n+        } catch (VIPClientInitException e) {\n+            e.printStackTrace();\n+        }\n+        sharedLibCfg.createTranslationCache(MessageCache.class);\n+        sharedLibCfg.createFormattingCache(FormattingCache.class);\n+\n+        TranslationMessage tmSharedLib = (TranslationMessage) I18nFactory.getInstance().getMessageInstance(TranslationMessage.class, sharedLibCfg);\n+\n+        Shared shared = new Shared(tmSharedLib, locale);\n+        System.out.println(\"Shared library's message; fetch triggered from inside the shared library: \" + shared.someMethod());\n+\n+        String sharedMsg = tmSharedLib.getMessage(locale, \"shared\", \"shared.library.key1\");\n+        System.out.println(\"Shared library's message; fetch is triggered from root application:  \" + sharedMsg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE2NjIxMQ=="}, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAwMjMyNA==", "bodyText": "I think we should design sample app to make it easiest to use and as close to the real application as possible. So suggest future improvement.", "url": "https://github.com/vmware/singleton/pull/735#discussion_r477002324", "createdAt": "2020-08-26T02:55:15Z", "author": {"login": "huihuiw01"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/SharedLibDemo.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.sample.shared.Shared;\n+\n+public class SharedLibDemo {\n+    public static void demoSharedLib(Locale locale) {\n+        //VIPCfg cfg = VIPCfg.getInstance();\n+\n+        String shareLibProdName = \"SharedProduct\";\n+        VIPCfg sharedLibCfg = VIPCfg.getSubInstance(shareLibProdName);\n+        try {\n+            sharedLibCfg.initialize(\"sharedlibrary\");\n+        } catch (VIPClientInitException e) {\n+            e.printStackTrace();\n+        }\n+        sharedLibCfg.createTranslationCache(MessageCache.class);\n+        sharedLibCfg.createFormattingCache(FormattingCache.class);\n+\n+        TranslationMessage tmSharedLib = (TranslationMessage) I18nFactory.getInstance().getMessageInstance(TranslationMessage.class, sharedLibCfg);\n+\n+        Shared shared = new Shared(tmSharedLib, locale);\n+        System.out.println(\"Shared library's message; fetch triggered from inside the shared library: \" + shared.someMethod());\n+\n+        String sharedMsg = tmSharedLib.getMessage(locale, \"shared\", \"shared.library.key1\");\n+        System.out.println(\"Shared library's message; fetch is triggered from root application:  \" + sharedMsg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE2NjIxMQ=="}, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ0NDIyMA==", "bodyText": "#744", "url": "https://github.com/vmware/singleton/pull/735#discussion_r477444220", "createdAt": "2020-08-26T16:48:48Z", "author": {"login": "jessiejuachon"}, "path": "sample-client-app/sample-app-with-shared-lib/src/main/java/com/vmware/vipclient/sample/SharedLibDemo.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2019-2020 VMware, Inc.\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package com.vmware.vipclient.sample;\n+\n+import java.util.Locale;\n+\n+import com.vmware.vipclient.i18n.I18nFactory;\n+import com.vmware.vipclient.i18n.VIPCfg;\n+import com.vmware.vipclient.i18n.base.cache.FormattingCache;\n+import com.vmware.vipclient.i18n.base.cache.MessageCache;\n+import com.vmware.vipclient.i18n.base.instances.TranslationMessage;\n+import com.vmware.vipclient.i18n.exceptions.VIPClientInitException;\n+import com.vmware.vipclient.sample.shared.Shared;\n+\n+public class SharedLibDemo {\n+    public static void demoSharedLib(Locale locale) {\n+        //VIPCfg cfg = VIPCfg.getInstance();\n+\n+        String shareLibProdName = \"SharedProduct\";\n+        VIPCfg sharedLibCfg = VIPCfg.getSubInstance(shareLibProdName);\n+        try {\n+            sharedLibCfg.initialize(\"sharedlibrary\");\n+        } catch (VIPClientInitException e) {\n+            e.printStackTrace();\n+        }\n+        sharedLibCfg.createTranslationCache(MessageCache.class);\n+        sharedLibCfg.createFormattingCache(FormattingCache.class);\n+\n+        TranslationMessage tmSharedLib = (TranslationMessage) I18nFactory.getInstance().getMessageInstance(TranslationMessage.class, sharedLibCfg);\n+\n+        Shared shared = new Shared(tmSharedLib, locale);\n+        System.out.println(\"Shared library's message; fetch triggered from inside the shared library: \" + shared.someMethod());\n+\n+        String sharedMsg = tmSharedLib.getMessage(locale, \"shared\", \"shared.library.key1\");\n+        System.out.println(\"Shared library's message; fetch is triggered from root application:  \" + sharedMsg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE2NjIxMQ=="}, "originalCommit": {"oid": "4723dbf16f17bbbb9abdc60e16077f0f1280663e"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4514, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}