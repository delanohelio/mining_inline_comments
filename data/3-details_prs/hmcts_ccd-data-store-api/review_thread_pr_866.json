{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNzM2MzM1", "number": 866, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo1NTozMFrODt5nKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo1NTozMFrODt5nKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDU2NDI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/config/JacksonUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo1NTozMFrOF_l4Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMToxNjo0M1rOF_mhlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyNTE3NQ==", "bodyText": "Great job there in removing all the duplication in the creation of ObjectMappers \ud83d\udc4f\nI think we already addressed the issue of duplicated ObjectMappers creation in DataStore in the past.\nThe solution we proposed was to configure all the ObjectMappers the application uses in:\n\n  \n    \n      ccd-data-store-api/src/main/java/uk/gov/hmcts/ccd/config/JacksonObjectMapperConfig.java\n    \n    \n         Line 12\n      in\n      16bbdeb\n    \n    \n    \n    \n\n        \n          \n           public class JacksonObjectMapperConfig { \n        \n    \n  \n\n\nThen these get injected, for example:\n\n  \n    \n      ccd-data-store-api/src/main/java/uk/gov/hmcts/ccd/domain/service/search/elasticsearch/ElasticsearchCaseSearchOperation.java\n    \n    \n         Line 49\n      in\n      17c6d53\n    \n    \n    \n    \n\n        \n          \n           @Qualifier(\"DefaultObjectMapper\") ObjectMapper objectMapper, \n        \n    \n  \n\n\nPerhaps injecting them is a better approach than using Utils classes with static methods? Not saying we should change the current solution, just want to suggest an alternative.\nYou could refactor this class to a bean called for example JsonService that it's configured in JacksonObjectMapperConfig as well and then itself can get injected? This would also make testability simpler.\nI appreciate that would be more changes though so I'm not saying we have to do it. Just wanted to highlight the solution we had agreed in the past", "url": "https://github.com/hmcts/ccd-data-store-api/pull/866#discussion_r402225175", "createdAt": "2020-04-02T10:55:30Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/config/JacksonUtils.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package uk.gov.hmcts.ccd.config;\n+\n+import com.fasterxml.jackson.core.JsonFactory;\n+import com.fasterxml.jackson.core.JsonParser;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.json.JsonMapper;\n+\n+import java.util.HashMap;\n+\n+\n+public class JacksonUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8bb45114bfcd354d206cb4b6f938f6ec2129d46"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIzNTc5Ng==", "bodyText": "Actually I've noticed now that we have already a service that provides common utility methods for json operations:\n\n  \n    \n      ccd-data-store-api/src/main/java/uk/gov/hmcts/ccd/domain/service/common/DefaultObjectMapperService.java\n    \n    \n         Line 19\n      in\n      3310d47\n    \n    \n    \n    \n\n        \n          \n           public class DefaultObjectMapperService implements ObjectMapperService { \n        \n    \n  \n\n\nI think we are mixing up 2 separate approaches here. I'd spent some time thinking of which one is the best and then use that consistently", "url": "https://github.com/hmcts/ccd-data-store-api/pull/866#discussion_r402235796", "createdAt": "2020-04-02T11:16:43Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/config/JacksonUtils.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package uk.gov.hmcts.ccd.config;\n+\n+import com.fasterxml.jackson.core.JsonFactory;\n+import com.fasterxml.jackson.core.JsonParser;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.MapperFeature;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.json.JsonMapper;\n+\n+import java.util.HashMap;\n+\n+\n+public class JacksonUtils {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyNTE3NQ=="}, "originalCommit": {"oid": "e8bb45114bfcd354d206cb4b6f938f6ec2129d46"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3932, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}