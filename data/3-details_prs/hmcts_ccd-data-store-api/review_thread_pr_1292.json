{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxODM3NzQ3", "number": 1292, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTo1Mzo1NVrOFHHVog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNToyOTowOVrOFOMs-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDA0NTc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseEventEnablingService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTo1Mzo1NVrOIIcQng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMTo0OToyMlrOIIf4SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyMjUyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Boolean evaluate(String enablingCondition,\n          \n          \n            \n                public Boolean isEventEnabled(String enablingCondition,", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1292#discussion_r545722526", "createdAt": "2020-12-18T09:53:55Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseEventEnablingService.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package uk.gov.hmcts.ccd.domain.service.common;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import java.util.Map;\n+import javax.inject.Inject;\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.domain.enablingcondition.EnablingConditionParser;\n+\n+@Service\n+public class CaseEventEnablingService {\n+\n+    private final EnablingConditionParser enablingConditionParser;\n+\n+    @Inject\n+    public CaseEventEnablingService(EnablingConditionParser enablingConditionParser) {\n+        this.enablingConditionParser = enablingConditionParser;\n+    }\n+\n+    public Boolean evaluate(String enablingCondition,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccd3501783cdc93aa79a92b05ec1c174fbd8d381"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc4MTgzMw==", "bodyText": "done", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1292#discussion_r545781833", "createdAt": "2020-12-18T11:49:22Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseEventEnablingService.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package uk.gov.hmcts.ccd.domain.service.common;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import java.util.Map;\n+import javax.inject.Inject;\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.domain.enablingcondition.EnablingConditionParser;\n+\n+@Service\n+public class CaseEventEnablingService {\n+\n+    private final EnablingConditionParser enablingConditionParser;\n+\n+    @Inject\n+    public CaseEventEnablingService(EnablingConditionParser enablingConditionParser) {\n+        this.enablingConditionParser = enablingConditionParser;\n+    }\n+\n+    public Boolean evaluate(String enablingCondition,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyMjUyNg=="}, "originalCommit": {"oid": "ccd3501783cdc93aa79a92b05ec1c174fbd8d381"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDA1MzE2OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseEventEnablingService.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTo1NTo0OFrOIIcU2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMjo1NToxOVrOIIhyvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyMzYwOA==", "bodyText": "something weird here. Show condition can have metadata fields in them, i.e. [STATE]=someState.\nI would have thought you needed to pass the whole case so that metadata can be evaluated as well. Instead we are passing only the case fields in the data field", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1292#discussion_r545723608", "createdAt": "2020-12-18T09:55:48Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseEventEnablingService.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package uk.gov.hmcts.ccd.domain.service.common;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import java.util.Map;\n+import javax.inject.Inject;\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.domain.enablingcondition.EnablingConditionParser;\n+\n+@Service\n+public class CaseEventEnablingService {\n+\n+    private final EnablingConditionParser enablingConditionParser;\n+\n+    @Inject\n+    public CaseEventEnablingService(EnablingConditionParser enablingConditionParser) {\n+        this.enablingConditionParser = enablingConditionParser;\n+    }\n+\n+    public Boolean evaluate(String enablingCondition,\n+                           Map<String, JsonNode> caseEventData) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccd3501783cdc93aa79a92b05ec1c174fbd8d381"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyNTQ0OQ==", "bodyText": "If this issue is confirmed, can we also add some integration tests for event enabling conditions with metadata in show conditions to avoid regressions", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1292#discussion_r545725449", "createdAt": "2020-12-18T09:58:58Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseEventEnablingService.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package uk.gov.hmcts.ccd.domain.service.common;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import java.util.Map;\n+import javax.inject.Inject;\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.domain.enablingcondition.EnablingConditionParser;\n+\n+@Service\n+public class CaseEventEnablingService {\n+\n+    private final EnablingConditionParser enablingConditionParser;\n+\n+    @Inject\n+    public CaseEventEnablingService(EnablingConditionParser enablingConditionParser) {\n+        this.enablingConditionParser = enablingConditionParser;\n+    }\n+\n+    public Boolean evaluate(String enablingCondition,\n+                           Map<String, JsonNode> caseEventData) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyMzYwOA=="}, "originalCommit": {"oid": "ccd3501783cdc93aa79a92b05ec1c174fbd8d381"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyNjQxOA==", "bodyText": "I'm thinking, do we have the same issue with case post states? Do we support metadata fields in show conditions there? we should...", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1292#discussion_r545726418", "createdAt": "2020-12-18T10:00:49Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseEventEnablingService.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package uk.gov.hmcts.ccd.domain.service.common;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import java.util.Map;\n+import javax.inject.Inject;\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.domain.enablingcondition.EnablingConditionParser;\n+\n+@Service\n+public class CaseEventEnablingService {\n+\n+    private final EnablingConditionParser enablingConditionParser;\n+\n+    @Inject\n+    public CaseEventEnablingService(EnablingConditionParser enablingConditionParser) {\n+        this.enablingConditionParser = enablingConditionParser;\n+    }\n+\n+    public Boolean evaluate(String enablingCondition,\n+                           Map<String, JsonNode> caseEventData) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyMzYwOA=="}, "originalCommit": {"oid": "ccd3501783cdc93aa79a92b05ec1c174fbd8d381"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTczNDI5OA==", "bodyText": "We are not supporting metadata fields in case post states for now...", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1292#discussion_r545734298", "createdAt": "2020-12-18T10:15:40Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseEventEnablingService.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package uk.gov.hmcts.ccd.domain.service.common;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import java.util.Map;\n+import javax.inject.Inject;\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.domain.enablingcondition.EnablingConditionParser;\n+\n+@Service\n+public class CaseEventEnablingService {\n+\n+    private final EnablingConditionParser enablingConditionParser;\n+\n+    @Inject\n+    public CaseEventEnablingService(EnablingConditionParser enablingConditionParser) {\n+        this.enablingConditionParser = enablingConditionParser;\n+    }\n+\n+    public Boolean evaluate(String enablingCondition,\n+                           Map<String, JsonNode> caseEventData) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyMzYwOA=="}, "originalCommit": {"oid": "ccd3501783cdc93aa79a92b05ec1c174fbd8d381"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgxMzE4Mw==", "bodyText": "something weird here. Show condition can have metadata fields in them, i.e. [STATE]=someState.\nI would have thought you needed to pass the whole case so that metadata can be evaluated as well. Instead we are passing only the case fields in the data field\n\nchanged to include CaseDetails and now supporting meta data as well in this..", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1292#discussion_r545813183", "createdAt": "2020-12-18T12:55:19Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseEventEnablingService.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package uk.gov.hmcts.ccd.domain.service.common;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import java.util.Map;\n+import javax.inject.Inject;\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.domain.enablingcondition.EnablingConditionParser;\n+\n+@Service\n+public class CaseEventEnablingService {\n+\n+    private final EnablingConditionParser enablingConditionParser;\n+\n+    @Inject\n+    public CaseEventEnablingService(EnablingConditionParser enablingConditionParser) {\n+        this.enablingConditionParser = enablingConditionParser;\n+    }\n+\n+    public Boolean evaluate(String enablingCondition,\n+                           Map<String, JsonNode> caseEventData) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyMzYwOA=="}, "originalCommit": {"oid": "ccd3501783cdc93aa79a92b05ec1c174fbd8d381"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNDMxNjA3OnYy", "diffSide": "RIGHT", "path": "src/aat/resources/features/F-127 - Even Enabling Condition/S-127.2.td.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNToyNzoyNVrOIS0eCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNToyNzoyNVrOIS0eCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjYwNDkzOA==", "bodyText": "Should it be \"are not valid\" at the end? S-127.2 is for a non matching condition.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1292#discussion_r556604938", "createdAt": "2021-01-13T15:27:25Z", "author": {"login": "rafalkalita"}, "path": "src/aat/resources/features/F-127 - Even Enabling Condition/S-127.2.td.json", "diffHunk": "@@ -0,0 +1,49 @@\n+{\n+\t\"_guid_\": \"S-127.2\",\n+  \"_extends_\": \"F-127_Get_Case_View_Base\",\n+  \"title\": \"Get Case event view to validate the events returned in the response when event enabling conditions are valid\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a3300da089d19624598233744e6ff85a8b0d879"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNDMyNTA1OnYy", "diffSide": "RIGHT", "path": "src/aat/resources/features/F-127 - Even Enabling Condition/S-127.1.td.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNToyOTowOVrOIS0jjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNToyOTowOVrOIS0jjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjYwNjM0OQ==", "bodyText": "Should it be \"are valid\" at the end? S-127.1 is for a matching condition.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1292#discussion_r556606349", "createdAt": "2021-01-13T15:29:09Z", "author": {"login": "rafalkalita"}, "path": "src/aat/resources/features/F-127 - Even Enabling Condition/S-127.1.td.json", "diffHunk": "@@ -0,0 +1,56 @@\n+{\n+\t\"_guid_\": \"S-127.1\",\n+  \"_extends_\": \"F-127_Get_Case_View_Base\",\n+  \"title\": \"Get Case event view to validate the events returned in the response when event enabling conditions are not valid\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a3300da089d19624598233744e6ff85a8b0d879"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3613, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}