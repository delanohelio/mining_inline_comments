{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MjEyNjQx", "number": 1193, "title": "RDM-10013: added LOG_CALLBACK_DETAILS to support call back logging", "bodyText": "Before creating a pull request make sure that:\n\n commit messages are meaningful and follow good commit message guidelines\n README and other documentation has been updated / added (if needed)\n tests have been updated / new tests has been added (if needed)\n\nPlease remove this line and everything above and fill the following sections:\nJIRA link (if applicable)\nChange description\nDoes this PR introduce a breaking change? (check one with \"x\")\n[ ] Yes\n[X] No", "createdAt": "2020-11-02T17:29:18Z", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193", "merged": true, "mergeCommit": {"oid": "5068130264f6cfa7940ad455b3ea618875dd56da"}, "closed": true, "closedAt": "2020-11-24T13:03:13Z", "author": {"login": "henrykcgi"}, "timelineItems": {"totalCount": 69, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYn23zgH2gAyNTE0MjEyNjQxOjRlNzRkNjE2YjcxN2M3OGIxMzAxODU4OTdhMTFiZWM0NjZkMGFmNmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfYC_2gH2gAyNTE0MjEyNjQxOjdkOWE0NzIxY2MxMjYwOWEyYTdlYWE4NDUzZGNjMmNhZDJhNTMwODU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4e74d616b717c78b130185897a11bec466d0af6b", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/4e74d616b717c78b130185897a11bec466d0af6b", "committedDate": "2020-11-02T17:17:39Z", "message": "added LOG_CALLBACK_DETAILS to support call back logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5beb4ac8d523074ffad3a161515b46fbb196d5c", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/d5beb4ac8d523074ffad3a161515b46fbb196d5c", "committedDate": "2020-11-02T22:42:22Z", "message": "added fixed junits for call back logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19c001e0f63592df89ff22e4b1c92f49e5e38052", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/19c001e0f63592df89ff22e4b1c92f49e5e38052", "committedDate": "2020-11-03T11:23:46Z", "message": "Update Jenkinsfile_CNP\n\nchanged es flag to false - temporarily"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48ea068594f6cfbc5aaf7c1013250154e6e04d51", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/48ea068594f6cfbc5aaf7c1013250154e6e04d51", "committedDate": "2020-11-04T15:06:28Z", "message": "added junits for call back logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34df12c933db550b49b495953addc1ba63607c63", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/34df12c933db550b49b495953addc1ba63607c63", "committedDate": "2020-11-04T15:07:55Z", "message": "Merge branch 'RDM-10013' of https://github.com/hmcts/ccd-data-store-api into RDM-10013"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18b68cab94258404f655c98262a0df163e9a6e62", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/18b68cab94258404f655c98262a0df163e9a6e62", "committedDate": "2020-11-04T15:39:03Z", "message": "enabled es search flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e52c0d58a4f31bf268ce1cee0553931f2c9e7634", "committedDate": "2020-11-04T17:12:25Z", "message": "add to string method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MTE4MDcx", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-525118071", "createdAt": "2020-11-06T12:45:27Z", "commit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMjo0NToyN1rOHusrLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMjo0NToyN1rOHusrLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODcyODQ5NQ==", "bodyText": "shall we add a quick comment that explain what this does? with an example?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r518728495", "createdAt": "2020-11-06T12:45:27Z", "author": {"login": "mario-paniccia"}, "path": "charts/ccd-data-store-api/values.yaml", "diffHunk": "@@ -25,7 +25,7 @@ java:\n     DATA_STORE_DB_USERNAME: ccd@ccd-data-store-api-postgres-db-{{ .Values.global.environment }}\n     DATA_STORE_DB_OPTIONS: \"?stringtype=unspecified&sslmode=require\"\n     DATA_STORE_DB_MAX_POOL_SIZE: 48\n-\n+    LOG_CALLBACK_DETAILS:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MTI4MzUy", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-525128352", "createdAt": "2020-11-06T13:01:01Z", "commit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzowMTowMlrOHutI-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzowMTowMlrOHutI-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODczNjEyMw==", "bodyText": "this should be a private static final, all upper case. I'd also remove the comment", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r518736123", "createdAt": "2020-11-06T13:01:02Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java", "diffHunk": "@@ -118,18 +123,31 @@ public CallbackService(final SecurityUtils securityUtils,\n         HttpHeaders securityHeaders = securityUtils.authorizationHeaders();\n \n         CallbackTelemetryThreadContext.setTelemetryContext(new CallbackTelemetryContext(callbackType));\n+        List<String> ccdCallbackLogControl = applicationParams.getCcdCallbackLogControl();\n+        boolean match = false;\n+        String starStr = \"*\";//to match any call back", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MTMxNjQ5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-525131649", "createdAt": "2020-11-06T13:05:54Z", "commit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzowNTo1NFrOHutSQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzowNTo1NFrOHutSQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODczODQ5Ng==", "bodyText": "I would log also the url to make it simpler to correlate the response to the callback. Otherwise it can be difficult when plenty of callbacks happen at the same time\nAlso remove initial space please", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r518738496", "createdAt": "2020-11-06T13:05:54Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java", "diffHunk": "@@ -118,18 +123,31 @@ public CallbackService(final SecurityUtils securityUtils,\n         HttpHeaders securityHeaders = securityUtils.authorizationHeaders();\n \n         CallbackTelemetryThreadContext.setTelemetryContext(new CallbackTelemetryContext(callbackType));\n+        List<String> ccdCallbackLogControl = applicationParams.getCcdCallbackLogControl();\n+        boolean match = false;\n+        String starStr = \"*\";//to match any call back\n+        if (ccdCallbackLogControl.size() > 0 && (starStr.equals(ccdCallbackLogControl.get(0))\n+            || ccdCallbackLogControl.stream().anyMatch(url::contains))) {\n+            match = true;\n+        }\n         int httpStatus = 0;\n         Instant startTime = Instant.now();\n \n         try {\n-            LOG.debug(\"Invoking callback {}\", url);\n             final HttpHeaders httpHeaders = new HttpHeaders();\n             httpHeaders.add(\"Content-Type\", \"application/json\");\n             if (null != securityHeaders) {\n                 securityHeaders.forEach((key, values) -> httpHeaders.put(key, values));\n             }\n             final HttpEntity requestEntity = new HttpEntity(callbackRequest, httpHeaders);\n+            if (match) {\n+                LOG.info(\"Invoking callback {} of CallbackType {} at {} with Request {}\",\n+                    url, callbackType, startTime, requestEntity);\n+            }\n             ResponseEntity<T> responseEntity = restTemplate.exchange(url, HttpMethod.POST, requestEntity, clazz);\n+            if (match) {\n+                LOG.info(\" Received callback Response {}\", responseEntity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MTMyNjEz", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-525132613", "createdAt": "2020-11-06T13:07:19Z", "commit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzowNzoxOVrOHutVIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzowNzoxOVrOHutVIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODczOTIzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOG.info(\"Invoking callback {} of CallbackType {} at {} with Request {}\",\n          \n          \n            \n                            LOG.info(\"Invoking callback {} of type {} with request: {}\",\n          \n      \n    \n    \n  \n\nwe could avoid logging the start time since it's logged by default by the logging framework?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r518739232", "createdAt": "2020-11-06T13:07:19Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java", "diffHunk": "@@ -118,18 +123,31 @@ public CallbackService(final SecurityUtils securityUtils,\n         HttpHeaders securityHeaders = securityUtils.authorizationHeaders();\n \n         CallbackTelemetryThreadContext.setTelemetryContext(new CallbackTelemetryContext(callbackType));\n+        List<String> ccdCallbackLogControl = applicationParams.getCcdCallbackLogControl();\n+        boolean match = false;\n+        String starStr = \"*\";//to match any call back\n+        if (ccdCallbackLogControl.size() > 0 && (starStr.equals(ccdCallbackLogControl.get(0))\n+            || ccdCallbackLogControl.stream().anyMatch(url::contains))) {\n+            match = true;\n+        }\n         int httpStatus = 0;\n         Instant startTime = Instant.now();\n \n         try {\n-            LOG.debug(\"Invoking callback {}\", url);\n             final HttpHeaders httpHeaders = new HttpHeaders();\n             httpHeaders.add(\"Content-Type\", \"application/json\");\n             if (null != securityHeaders) {\n                 securityHeaders.forEach((key, values) -> httpHeaders.put(key, values));\n             }\n             final HttpEntity requestEntity = new HttpEntity(callbackRequest, httpHeaders);\n+            if (match) {\n+                LOG.info(\"Invoking callback {} of CallbackType {} at {} with Request {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MTM0MDEx", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-525134011", "createdAt": "2020-11-06T13:09:25Z", "commit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzowOToyNVrOHutZWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzowOToyNVrOHutZWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc0MDMxNA==", "bodyText": "we could do an extract method here to simplify the code.\nAll this could go into a private method\nboolean logCallbackDetails(....)\nand then it can be directly called on line 143 and 148: e.g.\nif(logCallbackDetails(...) {\n     ....", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r518740314", "createdAt": "2020-11-06T13:09:25Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java", "diffHunk": "@@ -118,18 +123,31 @@ public CallbackService(final SecurityUtils securityUtils,\n         HttpHeaders securityHeaders = securityUtils.authorizationHeaders();\n \n         CallbackTelemetryThreadContext.setTelemetryContext(new CallbackTelemetryContext(callbackType));\n+        List<String> ccdCallbackLogControl = applicationParams.getCcdCallbackLogControl();\n+        boolean match = false;\n+        String starStr = \"*\";//to match any call back\n+        if (ccdCallbackLogControl.size() > 0 && (starStr.equals(ccdCallbackLogControl.get(0))\n+            || ccdCallbackLogControl.stream().anyMatch(url::contains))) {\n+            match = true;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MTM5NDA1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-525139405", "createdAt": "2020-11-06T13:17:19Z", "commit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzoxNzoxOVrOHutpPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzoxNzoxOVrOHutpPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc0NDM4MA==", "bodyText": "not sure I understand what we are verifying here", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r518744380", "createdAt": "2020-11-06T13:17:19Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackServiceTest.java", "diffHunk": "@@ -139,10 +144,43 @@ public void shouldTrackCallbackEventOnException() throws Exception {\n \n     }\n \n+    @Test\n+    @DisplayName(\"Should LogAll callback event\")\n+    public void shouldLogAllCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"*\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+\n+        verify(appinsights).trackCallbackEvent(eq(CALLBACK_TYPE), eq(URL), eq(\"200\"), any(Duration.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MTM5NTEz", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-525139513", "createdAt": "2020-11-06T13:17:27Z", "commit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzoxNzoyOFrOHutpfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzoxNzoyOFrOHutpfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc0NDQ0NA==", "bodyText": "not sure I understand what we are verifying here", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r518744444", "createdAt": "2020-11-06T13:17:28Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackServiceTest.java", "diffHunk": "@@ -139,10 +144,43 @@ public void shouldTrackCallbackEventOnException() throws Exception {\n \n     }\n \n+    @Test\n+    @DisplayName(\"Should LogAll callback event\")\n+    public void shouldLogAllCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"*\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+\n+        verify(appinsights).trackCallbackEvent(eq(CALLBACK_TYPE), eq(URL), eq(\"200\"), any(Duration.class));\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Log callback event\")\n+    public void shouldLogCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"test-callback\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+\n+        verify(appinsights).trackCallbackEvent(eq(CALLBACK_TYPE), eq(URL), eq(\"200\"), any(Duration.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MTM5ODE5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-525139819", "createdAt": "2020-11-06T13:17:55Z", "commit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzoxNzo1NVrOHutqXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzoxNzo1NVrOHutqXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc0NDY3MQ==", "bodyText": "not sure I understand what we are verifying here", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r518744671", "createdAt": "2020-11-06T13:17:55Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackServiceTest.java", "diffHunk": "@@ -139,10 +144,43 @@ public void shouldTrackCallbackEventOnException() throws Exception {\n \n     }\n \n+    @Test\n+    @DisplayName(\"Should LogAll callback event\")\n+    public void shouldLogAllCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"*\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+\n+        verify(appinsights).trackCallbackEvent(eq(CALLBACK_TYPE), eq(URL), eq(\"200\"), any(Duration.class));\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Log callback event\")\n+    public void shouldLogCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"test-callback\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+\n+        verify(appinsights).trackCallbackEvent(eq(CALLBACK_TYPE), eq(URL), eq(\"200\"), any(Duration.class));\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Log callback event\")\n+    public void shouldNotLogCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"Notest-callback\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+\n+        verify(appinsights).trackCallbackEvent(eq(CALLBACK_TYPE), eq(URL), eq(\"200\"), any(Duration.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MTQxOTMz", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-525141933", "createdAt": "2020-11-06T13:20:31Z", "commit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzoyMDozMVrOHutv9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzoyMDozMVrOHutv9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc0NjEwMQ==", "bodyText": "perhaps a test where we test the comma separated config?\ne.g.\nccdCallbackLogControl.add(\"callback1, callback2, callback3\");", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r518746101", "createdAt": "2020-11-06T13:20:31Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackServiceTest.java", "diffHunk": "@@ -139,10 +144,43 @@ public void shouldTrackCallbackEventOnException() throws Exception {\n \n     }\n \n+    @Test\n+    @DisplayName(\"Should LogAll callback event\")\n+    public void shouldLogAllCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"*\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+\n+        verify(appinsights).trackCallbackEvent(eq(CALLBACK_TYPE), eq(URL), eq(\"200\"), any(Duration.class));\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Log callback event\")\n+    public void shouldLogCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"test-callback\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+\n+        verify(appinsights).trackCallbackEvent(eq(CALLBACK_TYPE), eq(URL), eq(\"200\"), any(Duration.class));\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Log callback event\")\n+    public void shouldNotLogCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"Notest-callback\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+\n+        verify(appinsights).trackCallbackEvent(eq(CALLBACK_TYPE), eq(URL), eq(\"200\"), any(Duration.class));\n+    }\n+\n     private void initSecurityContext() {\n         doReturn(principal).when(authentication).getPrincipal();\n         doReturn(authentication).when(securityContext).getAuthentication();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MTQyMjE5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-525142219", "createdAt": "2020-11-06T13:20:55Z", "commit": {"oid": "e52c0d58a4f31bf268ce1cee0553931f2c9e7634"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "490ec50aecb2245af1042e7276caebc187737ef2", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/490ec50aecb2245af1042e7276caebc187737ef2", "committedDate": "2020-11-06T13:41:40Z", "message": "add Negative Junit for callback logs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c12ddb56d0b3e41ca114a2e366632e6b405dea9f", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/c12ddb56d0b3e41ca114a2e366632e6b405dea9f", "committedDate": "2020-11-06T16:45:54Z", "message": "refactored callbacklogs method and added multiple test method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "551a92e95f5181ec599d9e7b8c894c6de2764482", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/551a92e95f5181ec599d9e7b8c894c6de2764482", "committedDate": "2020-11-06T16:55:06Z", "message": "added comment for the callback env variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/b63179f6a045ac742050f33f42cf46786acc88e5", "committedDate": "2020-11-06T17:15:54Z", "message": "fixed checkstyle errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDU3MjA2", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-526057206", "createdAt": "2020-11-09T09:18:29Z", "commit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToxODoyOVrOHvlY0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToxODoyOVrOHvlY0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY1NzY4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                LOG_CALLBACK_DETAILS: \"*\"\n          \n          \n            \n                LOG_CALLBACK_DETAILS:", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519657682", "createdAt": "2020-11-09T09:18:29Z", "author": {"login": "mario-paniccia"}, "path": "charts/ccd-data-store-api/values.preview.template.yaml", "diffHunk": "@@ -24,6 +24,7 @@ java:\n     ELASTIC_SEARCH_NODES_DISCOVERY_ENABLED: false\n     ELASTIC_SEARCH_HOSTS: \"{{ .Release.Name }}-es-master:9200\"\n     ELASTIC_SEARCH_DATA_NODES_HOSTS: \"http://{{ .Release.Name }}-es-master:9200\"\n+    LOG_CALLBACK_DETAILS: \"*\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDU5NjM4", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-526059638", "createdAt": "2020-11-09T09:21:30Z", "commit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToyMTozMFrOHvlgQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToyMTozMFrOHvlgQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY1OTU4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # this variable takes comma separated values, To log All '*' is used\n          \n          \n            \n            # this variable takes a comma separated list of callback urls for which details needs to be logged, or '*' for all", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519659585", "createdAt": "2020-11-09T09:21:30Z", "author": {"login": "mario-paniccia"}, "path": "charts/ccd-data-store-api/values.yaml", "diffHunk": "@@ -25,7 +25,9 @@ java:\n     DATA_STORE_DB_USERNAME: ccd@ccd-data-store-api-postgres-db-{{ .Values.global.environment }}\n     DATA_STORE_DB_OPTIONS: \"?stringtype=unspecified&sslmode=require\"\n     DATA_STORE_DB_MAX_POOL_SIZE: 48\n-\n+# this config variable is used to log callback requests and responses,\n+# this variable takes comma separated values, To log All '*' is used", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDYxMTQw", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-526061140", "createdAt": "2020-11-09T09:23:20Z", "commit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToyMzoyMFrOHvlkmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToyMzoyMFrOHvlkmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY2MDY5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOG.info(\"The callback {} response received: {}\", url, responseEntity);\n          \n          \n            \n                            LOG.info(\"Callback {} - response received: {}\", url, responseEntity);", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519660697", "createdAt": "2020-11-09T09:23:20Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java", "diffHunk": "@@ -122,14 +128,19 @@ public CallbackService(final SecurityUtils securityUtils,\n         Instant startTime = Instant.now();\n \n         try {\n-            LOG.debug(\"Invoking callback {}\", url);\n             final HttpHeaders httpHeaders = new HttpHeaders();\n             httpHeaders.add(\"Content-Type\", \"application/json\");\n             if (null != securityHeaders) {\n                 securityHeaders.forEach((key, values) -> httpHeaders.put(key, values));\n             }\n             final HttpEntity requestEntity = new HttpEntity(callbackRequest, httpHeaders);\n+            if (logCallbackDetails(url)) {\n+                LOG.info(\"Invoking callback {} of type {} with request: {}\", url, callbackType, requestEntity);\n+            }\n             ResponseEntity<T> responseEntity = restTemplate.exchange(url, HttpMethod.POST, requestEntity, clazz);\n+            if (logCallbackDetails(url)) {\n+                LOG.info(\"The callback {} response received: {}\", url, responseEntity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDcyNDA2", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-526072406", "createdAt": "2020-11-09T09:36:41Z", "commit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTozNjo0MVrOHvmG8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTozNjo0MVrOHvmG8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY2OTQ4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<String> ccdCallbackLogControl = new ArrayList<String>();\n          \n          \n            \n                    List<String> ccdCallbackLogControl = new ArrayList();", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519669489", "createdAt": "2020-11-09T09:36:41Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackServiceTest.java", "diffHunk": "@@ -139,10 +161,71 @@ public void shouldTrackCallbackEventOnException() throws Exception {\n \n     }\n \n+    @Test\n+    @DisplayName(\"Should LogAll callback event\")\n+    public void shouldLogAllCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDcyNTkx", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-526072591", "createdAt": "2020-11-09T09:36:54Z", "commit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTozNjo1NFrOHvmHgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTozNjo1NFrOHvmHgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY2OTYzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<String> ccdCallbackLogControl = new ArrayList<String>();\n          \n          \n            \n                    List<String> ccdCallbackLogControl = new ArrayList();", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519669632", "createdAt": "2020-11-09T09:36:54Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackServiceTest.java", "diffHunk": "@@ -139,10 +161,71 @@ public void shouldTrackCallbackEventOnException() throws Exception {\n \n     }\n \n+    @Test\n+    @DisplayName(\"Should LogAll callback event\")\n+    public void shouldLogAllCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"*\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+        List<ILoggingEvent> logsList = listAppender.list;\n+        assertEquals(\"Invoking callback {} of type {} with request: {}\", logsList.get(0)\n+            .getMessage());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Log callback test multiple event\")\n+    public void shouldLogCallbackEventMultiple() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 103}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDcyNzMx", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-526072731", "createdAt": "2020-11-09T09:37:03Z", "commit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTozNzowNFrOHvmH9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTozNzowNFrOHvmH9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY2OTc1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<String> ccdCallbackLogControl = new ArrayList<String>();\n          \n          \n            \n                    List<String> ccdCallbackLogControl = new ArrayList();", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519669750", "createdAt": "2020-11-09T09:37:04Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackServiceTest.java", "diffHunk": "@@ -139,10 +161,71 @@ public void shouldTrackCallbackEventOnException() throws Exception {\n \n     }\n \n+    @Test\n+    @DisplayName(\"Should LogAll callback event\")\n+    public void shouldLogAllCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"*\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+        List<ILoggingEvent> logsList = listAppender.list;\n+        assertEquals(\"Invoking callback {} of type {} with request: {}\", logsList.get(0)\n+            .getMessage());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Log callback test multiple event\")\n+    public void shouldLogCallbackEventMultiple() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"abc-callback\");\n+        ccdCallbackLogControl.add(\"xyz-callback\");\n+        ccdCallbackLogControl.add(\"test-callback\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+        List<ILoggingEvent> logsList = listAppender.list;\n+        assertEquals(\"The callback {} response received: {}\", logsList.get(1)\n+            .getMessage());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Log callback test event\")\n+    public void shouldLogCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 117}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDcyODk0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-526072894", "createdAt": "2020-11-09T09:37:15Z", "commit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTozNzoxNVrOHvmIjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTozNzoxNVrOHvmIjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY2OTkwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<String> ccdCallbackLogControl = new ArrayList<String>();\n          \n          \n            \n                    List<String> ccdCallbackLogControl = new ArrayList();", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519669900", "createdAt": "2020-11-09T09:37:15Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackServiceTest.java", "diffHunk": "@@ -139,10 +161,71 @@ public void shouldTrackCallbackEventOnException() throws Exception {\n \n     }\n \n+    @Test\n+    @DisplayName(\"Should LogAll callback event\")\n+    public void shouldLogAllCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"*\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+        List<ILoggingEvent> logsList = listAppender.list;\n+        assertEquals(\"Invoking callback {} of type {} with request: {}\", logsList.get(0)\n+            .getMessage());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Log callback test multiple event\")\n+    public void shouldLogCallbackEventMultiple() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"abc-callback\");\n+        ccdCallbackLogControl.add(\"xyz-callback\");\n+        ccdCallbackLogControl.add(\"test-callback\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+        List<ILoggingEvent> logsList = listAppender.list;\n+        assertEquals(\"The callback {} response received: {}\", logsList.get(1)\n+            .getMessage());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Log callback test event\")\n+    public void shouldLogCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"test-callback\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+        List<ILoggingEvent> logsList = listAppender.list;\n+        assertEquals(\"Invoking callback {} of type {} with request: {}\", logsList.get(0)\n+            .getMessage());\n+        assertEquals(\"The callback {} response received: {}\", logsList.get(1)\n+            .getMessage());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Not Log callback event\")\n+    public void shouldNotLogCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 131}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDczMDM5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-526073039", "createdAt": "2020-11-09T09:37:25Z", "commit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTozNzoyNVrOHvmI-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTozNzoyNVrOHvmI-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY3MDAxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<String> ccdCallbackLogControl = new ArrayList<String>();\n          \n          \n            \n                    List<String> ccdCallbackLogControl = new ArrayList();", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519670010", "createdAt": "2020-11-09T09:37:25Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackServiceTest.java", "diffHunk": "@@ -139,10 +161,71 @@ public void shouldTrackCallbackEventOnException() throws Exception {\n \n     }\n \n+    @Test\n+    @DisplayName(\"Should LogAll callback event\")\n+    public void shouldLogAllCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"*\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+        List<ILoggingEvent> logsList = listAppender.list;\n+        assertEquals(\"Invoking callback {} of type {} with request: {}\", logsList.get(0)\n+            .getMessage());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Log callback test multiple event\")\n+    public void shouldLogCallbackEventMultiple() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"abc-callback\");\n+        ccdCallbackLogControl.add(\"xyz-callback\");\n+        ccdCallbackLogControl.add(\"test-callback\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+        List<ILoggingEvent> logsList = listAppender.list;\n+        assertEquals(\"The callback {} response received: {}\", logsList.get(1)\n+            .getMessage());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Log callback test event\")\n+    public void shouldLogCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"test-callback\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+        List<ILoggingEvent> logsList = listAppender.list;\n+        assertEquals(\"Invoking callback {} of type {} with request: {}\", logsList.get(0)\n+            .getMessage());\n+        assertEquals(\"The callback {} response received: {}\", logsList.get(1)\n+            .getMessage());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Not Log callback event\")\n+    public void shouldNotLogCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"Notest-callback\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+        List<ILoggingEvent> logsList = listAppender.list;\n+        assertEquals(0,logsList.size());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Not Log callback event when empty\")\n+    public void shouldNotLogCallbackEventEmpty() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 142}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDc3NjU0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-526077654", "createdAt": "2020-11-09T09:43:00Z", "commit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTo0MzowMFrOHvmW0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTo0MzowMFrOHvmW0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY3MzU1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @DisplayName(\"Should Log callback test multiple event\")\n          \n          \n            \n                @DisplayName(\"Should Log callback test multiple callbacks\")", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519673554", "createdAt": "2020-11-09T09:43:00Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackServiceTest.java", "diffHunk": "@@ -139,10 +161,71 @@ public void shouldTrackCallbackEventOnException() throws Exception {\n \n     }\n \n+    @Test\n+    @DisplayName(\"Should LogAll callback event\")\n+    public void shouldLogAllCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"*\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+        List<ILoggingEvent> logsList = listAppender.list;\n+        assertEquals(\"Invoking callback {} of type {} with request: {}\", logsList.get(0)\n+            .getMessage());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Log callback test multiple event\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 101}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDc4NDI1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-526078425", "createdAt": "2020-11-09T09:43:57Z", "commit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTo0Mzo1OFrOHvmY7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTo0Mzo1OFrOHvmY7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY3NDA5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @DisplayName(\"Should Log callback test event\")\n          \n          \n            \n                @DisplayName(\"Should Log callback test single callback\")", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519674092", "createdAt": "2020-11-09T09:43:58Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackServiceTest.java", "diffHunk": "@@ -139,10 +161,71 @@ public void shouldTrackCallbackEventOnException() throws Exception {\n \n     }\n \n+    @Test\n+    @DisplayName(\"Should LogAll callback event\")\n+    public void shouldLogAllCallbackEvent() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"*\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+        List<ILoggingEvent> logsList = listAppender.list;\n+        assertEquals(\"Invoking callback {} of type {} with request: {}\", logsList.get(0)\n+            .getMessage());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Log callback test multiple event\")\n+    public void shouldLogCallbackEventMultiple() throws Exception {\n+        List<String> ccdCallbackLogControl = new ArrayList<String>();\n+        ccdCallbackLogControl.add(\"abc-callback\");\n+        ccdCallbackLogControl.add(\"xyz-callback\");\n+        ccdCallbackLogControl.add(\"test-callback\");\n+        doReturn(ccdCallbackLogControl).when(applicationParams).getCcdCallbackLogControl();\n+        callbackService.send(URL, CALLBACK_TYPE, caseEventDefinition, null, caseDetails, (Boolean)null);\n+        List<ILoggingEvent> logsList = listAppender.list;\n+        assertEquals(\"The callback {} response received: {}\", logsList.get(1)\n+            .getMessage());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Should Log callback test event\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 115}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MTA2NDM2", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-526106436", "createdAt": "2020-11-09T10:17:33Z", "commit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMDoxNzozNFrOHvnvlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMDozODozMFrOHvoi2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY5NjI3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String STAR_STR = \"*\";\n          \n          \n            \n                private static final String WILDCARD = \"*\";", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519696276", "createdAt": "2020-11-09T10:17:34Z", "author": {"login": "danlysiak"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java", "diffHunk": "@@ -37,17 +39,21 @@\n @Service\n public class CallbackService {\n     private static final Logger LOG = LoggerFactory.getLogger(CallbackService.class);\n+    private static final String STAR_STR = \"*\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcwMDQyMQ==", "bodyText": "Query: Just checking - does logging requestEntity itself actually log what we need? (Sorry I can't tell from tests, assume it's OK?)", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519700421", "createdAt": "2020-11-09T10:23:56Z", "author": {"login": "danlysiak"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java", "diffHunk": "@@ -122,14 +128,19 @@ public CallbackService(final SecurityUtils securityUtils,\n         Instant startTime = Instant.now();\n \n         try {\n-            LOG.debug(\"Invoking callback {}\", url);\n             final HttpHeaders httpHeaders = new HttpHeaders();\n             httpHeaders.add(\"Content-Type\", \"application/json\");\n             if (null != securityHeaders) {\n                 securityHeaders.forEach((key, values) -> httpHeaders.put(key, values));\n             }\n             final HttpEntity requestEntity = new HttpEntity(callbackRequest, httpHeaders);\n+            if (logCallbackDetails(url)) {\n+                LOG.info(\"Invoking callback {} of type {} with request: {}\", url, callbackType, requestEntity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcwMDY4Mw==", "bodyText": "Same query as above - does logging responseEntity itself actually log what we need?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519700683", "createdAt": "2020-11-09T10:24:20Z", "author": {"login": "danlysiak"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java", "diffHunk": "@@ -122,14 +128,19 @@ public CallbackService(final SecurityUtils securityUtils,\n         Instant startTime = Instant.now();\n \n         try {\n-            LOG.debug(\"Invoking callback {}\", url);\n             final HttpHeaders httpHeaders = new HttpHeaders();\n             httpHeaders.add(\"Content-Type\", \"application/json\");\n             if (null != securityHeaders) {\n                 securityHeaders.forEach((key, values) -> httpHeaders.put(key, values));\n             }\n             final HttpEntity requestEntity = new HttpEntity(callbackRequest, httpHeaders);\n+            if (logCallbackDetails(url)) {\n+                LOG.info(\"Invoking callback {} of type {} with request: {}\", url, callbackType, requestEntity);\n+            }\n             ResponseEntity<T> responseEntity = restTemplate.exchange(url, HttpMethod.POST, requestEntity, clazz);\n+            if (logCallbackDetails(url)) {\n+                LOG.info(\"The callback {} response received: {}\", url, responseEntity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcwMzk3Mg==", "bodyText": "Just return this instead of initialising the boolean, setting in here and then returning..", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519703972", "createdAt": "2020-11-09T10:29:45Z", "author": {"login": "danlysiak"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java", "diffHunk": "@@ -155,4 +166,14 @@ public void validateCallbackErrorsAndWarnings(final CallbackResponse callbackRes\n                 .withWarnings(callbackResponse.getWarnings());\n         }\n     }\n+\n+    private boolean logCallbackDetails(final String url) {\n+        boolean logCallBack = false;\n+        List<String> ccdCallbackLogControl = applicationParams.getCcdCallbackLogControl();\n+        if (ccdCallbackLogControl.size() > 0 && (STAR_STR.equals(ccdCallbackLogControl.get(0))\n+            || ccdCallbackLogControl.stream().anyMatch(url::contains))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcwOTQwMw==", "bodyText": "Could maybe be simplified slightly too?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (ccdCallbackLogControl.size() > 0 && (STAR_STR.equals(ccdCallbackLogControl.get(0))\n          \n          \n            \n                        || ccdCallbackLogControl.stream().anyMatch(url::contains))) {\n          \n          \n            \n                    return ccdCallbackLogControl.contains(WILDCARD) || ccdCallbackLogControl.stream().anyMatch(url::contains);", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519709403", "createdAt": "2020-11-09T10:38:30Z", "author": {"login": "danlysiak"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackService.java", "diffHunk": "@@ -155,4 +166,14 @@ public void validateCallbackErrorsAndWarnings(final CallbackResponse callbackRes\n                 .withWarnings(callbackResponse.getWarnings());\n         }\n     }\n+\n+    private boolean logCallbackDetails(final String url) {\n+        boolean logCallBack = false;\n+        List<String> ccdCallbackLogControl = applicationParams.getCcdCallbackLogControl();\n+        if (ccdCallbackLogControl.size() > 0 && (STAR_STR.equals(ccdCallbackLogControl.get(0))\n+            || ccdCallbackLogControl.stream().anyMatch(url::contains))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcwMzk3Mg=="}, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MTU1MDIz", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-526155023", "createdAt": "2020-11-09T11:20:29Z", "commit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMToyMDoyOVrOHvqDSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMToyMDoyOVrOHvqDSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczNDA4OQ==", "bodyText": "is this now still needed? maybe a leftover?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#discussion_r519734089", "createdAt": "2020-11-09T11:20:29Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/callbacks/CallbackServiceWireMockTest.java", "diffHunk": "@@ -290,7 +290,7 @@ public void shouldThrowCallbackException_whenSendInvalidUrlGetGenericBody() {\n \n         // Builds a new callback service to avoid wiremock exception to get in the way\n         final CallbackService underTest = new CallbackService(Mockito.mock(SecurityUtils.class), restTemplate,\n-            Mockito.mock(AppInsights.class));\n+            Mockito.mock(ApplicationParams.class), Mockito.mock(AppInsights.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63179f6a045ac742050f33f42cf46786acc88e5"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3df5098cba369b7bf182b4dfcc601bbf8406c8a3", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/3df5098cba369b7bf182b4dfcc601bbf8406c8a3", "committedDate": "2020-11-09T13:11:19Z", "message": "addessed the comments about junit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MjgwMzg0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1193#pullrequestreview-526280384", "createdAt": "2020-11-09T13:57:17Z", "commit": {"oid": "3df5098cba369b7bf182b4dfcc601bbf8406c8a3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfdd5bb015f9f12ca5154f6ea1d946c3797ecbb9", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/cfdd5bb015f9f12ca5154f6ea1d946c3797ecbb9", "committedDate": "2020-11-09T14:00:22Z", "message": "fixed failing junit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "712ba349c91f72487f3b08cdc1c053d1c789a142", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/712ba349c91f72487f3b08cdc1c053d1c789a142", "committedDate": "2020-11-09T14:51:43Z", "message": "change the defstore url to get the pr to green"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ebc44bb452184e67fb29b42b0ae9e9715544e29", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/8ebc44bb452184e67fb29b42b0ae9e9715544e29", "committedDate": "2020-11-09T16:05:55Z", "message": "change the defstore url to get the pr to green"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73a93ee80f57c00f28763a77e38e960dcd377423", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/73a93ee80f57c00f28763a77e38e960dcd377423", "committedDate": "2020-11-09T16:59:00Z", "message": "change the defstore url to get the pr to green"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28e269db74c5093a8bc4446922152ee2902f0463", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/28e269db74c5093a8bc4446922152ee2902f0463", "committedDate": "2020-11-09T17:29:17Z", "message": "change the defstore url to get the pr to green"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0705a44b3de299743c1d9b6fb22faf808c3aebc", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/d0705a44b3de299743c1d9b6fb22faf808c3aebc", "committedDate": "2020-11-09T19:27:51Z", "message": "change the defstore url to get the pr to green"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e7e9cb770c5786095760d239c0452c5979e116d", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/0e7e9cb770c5786095760d239c0452c5979e116d", "committedDate": "2020-11-09T21:30:38Z", "message": "change the defstore url to get the pr to green"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f0536cec805aaadb90fed28e25bb24d6be435e5", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/4f0536cec805aaadb90fed28e25bb24d6be435e5", "committedDate": "2020-11-09T22:09:57Z", "message": "change the defstore url to get the pr to green"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0c9b2942a1f1c4734bb255a0c1335dfb1db3aee", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e0c9b2942a1f1c4734bb255a0c1335dfb1db3aee", "committedDate": "2020-11-10T09:20:06Z", "message": "change the defstore url to get the pr to green"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bee249dc7c671ebcf25ca352872c058470eaeb66", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/bee249dc7c671ebcf25ca352872c058470eaeb66", "committedDate": "2020-11-10T10:07:48Z", "message": "Merge branch 'master' into RDM-10013"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "feeddabc8b6960ffc8bd953d8353cf853d885e72", "author": {"user": {"login": "hmcts-jenkins-cdm[bot]", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/feeddabc8b6960ffc8bd953d8353cf853d885e72", "committedDate": "2020-11-10T10:11:17Z", "message": "Bumping chart version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba7d754448f5aea14961fedda6b09da1930e9f11", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/ba7d754448f5aea14961fedda6b09da1930e9f11", "committedDate": "2020-11-10T10:14:31Z", "message": "elastic search disabled"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68c24f933afbb39859d742f4cb9b976ed613e84c", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/68c24f933afbb39859d742f4cb9b976ed613e84c", "committedDate": "2020-11-10T10:27:30Z", "message": "elastic search enabled"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7b2ceb9a1390cde006250a722a9a02d77b0c10b", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/c7b2ceb9a1390cde006250a722a9a02d77b0c10b", "committedDate": "2020-11-10T10:57:16Z", "message": "removed unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58fd0435dac07882c0f82f21cefdf94adc33bdd9", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/58fd0435dac07882c0f82f21cefdf94adc33bdd9", "committedDate": "2020-11-10T11:08:08Z", "message": "supressed the CVE-2020-7020"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e7cf4fc08f3de33d5cdc9fbcbd866fa02fd65ce", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/3e7cf4fc08f3de33d5cdc9fbcbd866fa02fd65ce", "committedDate": "2020-11-10T12:15:33Z", "message": "rdm-10013 changed the def store to develop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3461ea002f4c94929169effe326baf2eb364d16b", "author": {"user": {"login": "RebeccaBaker", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/3461ea002f4c94929169effe326baf2eb364d16b", "committedDate": "2020-11-10T13:31:23Z", "message": "Update values.preview.template.yaml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98959a3e8b67a99fce3c620fac6231e7d141af5c", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/98959a3e8b67a99fce3c620fac6231e7d141af5c", "committedDate": "2020-11-10T13:43:22Z", "message": "matched defstore previow template value to the pr"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f57492bade5ad90e458ab2de26fd092f644f0619", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/f57492bade5ad90e458ab2de26fd092f644f0619", "committedDate": "2020-11-10T13:44:24Z", "message": "Merge remote-tracking branch 'origin/RDM-10013' into RDM-10013"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e273bac2d0c6a2765e3953adaa4760808075d2cf", "author": {"user": {"login": "RebeccaBaker", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e273bac2d0c6a2765e3953adaa4760808075d2cf", "committedDate": "2020-11-10T14:26:46Z", "message": "Update Jenkinsfile_CNP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8281daf5f70de1e503f2c174969f88de4e8b38ef", "author": {"user": {"login": "RebeccaBaker", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/8281daf5f70de1e503f2c174969f88de4e8b38ef", "committedDate": "2020-11-10T14:28:29Z", "message": "Update Jenkinsfile_CNP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53c77ea14e465d1a11f2488b64fa1d2a25e592f5", "author": {"user": {"login": "RebeccaBaker", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/53c77ea14e465d1a11f2488b64fa1d2a25e592f5", "committedDate": "2020-11-10T14:29:15Z", "message": "Update Jenkinsfile_CNP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2003828b158b6c32b5dc7e98638e1905b10f9ad1", "author": {"user": {"login": "noronhaa", "name": "Ashley Noronha"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/2003828b158b6c32b5dc7e98638e1905b10f9ad1", "committedDate": "2020-11-10T14:29:46Z", "message": "disable ES tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09e57ecbc2a4a36812629a51df30003a8580fec7", "author": {"user": {"login": "noronhaa", "name": "Ashley Noronha"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/09e57ecbc2a4a36812629a51df30003a8580fec7", "committedDate": "2020-11-10T14:29:56Z", "message": "Merge branch 'RDM-10013' of github.com:hmcts/ccd-data-store-api into RDM-10013"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5472616105f558ec4d83aafa23ccffd2000fddf", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/f5472616105f558ec4d83aafa23ccffd2000fddf", "committedDate": "2020-11-10T14:33:43Z", "message": "disabled ES flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3db7be55d18f78954705ded5925ac67c0240d673", "author": {"user": {"login": "henrykcgi", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/3db7be55d18f78954705ded5925ac67c0240d673", "committedDate": "2020-11-10T14:35:00Z", "message": "Merge branch 'RDM-10013' of https://github.com/hmcts/ccd-data-store-api into RDM-10013"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "785b27a22371a746cfbd23632285c85411ae73cb", "author": {"user": {"login": "noronhaa", "name": "Ashley Noronha"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/785b27a22371a746cfbd23632285c85411ae73cb", "committedDate": "2020-11-10T15:10:18Z", "message": "fix develop pr"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3559970f3e827e0e569376a9282c0c807c7f009", "author": {"user": {"login": "noronhaa", "name": "Ashley Noronha"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/b3559970f3e827e0e569376a9282c0c807c7f009", "committedDate": "2020-11-10T15:10:30Z", "message": "Merge branch 'RDM-10013' of github.com:hmcts/ccd-data-store-api into RDM-10013"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed5cb11f818d751b3d2ec11ce62e91a23f14be20", "author": {"user": {"login": "noronhaa", "name": "Ashley Noronha"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/ed5cb11f818d751b3d2ec11ce62e91a23f14be20", "committedDate": "2020-11-10T15:46:49Z", "message": "update to new user-profile-api develop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbedeede587ea6efda8e7346a7fb0aae4294666e", "author": {"user": {"login": "noronhaa", "name": "Ashley Noronha"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/dbedeede587ea6efda8e7346a7fb0aae4294666e", "committedDate": "2020-11-12T09:30:57Z", "message": "Merge branch 'master' into RDM-10013"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffde08b016f0ed98e688cf5c7f02535f96585ef0", "author": {"user": {"login": "noronhaa", "name": "Ashley Noronha"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/ffde08b016f0ed98e688cf5c7f02535f96585ef0", "committedDate": "2020-11-23T11:50:17Z", "message": "Merge branch 'master' into RDM-10013"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee66a23700451ed26b5ad9ce6d991e67b50ff165", "author": {"user": {"login": "hmcts-jenkins-cdm[bot]", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/ee66a23700451ed26b5ad9ce6d991e67b50ff165", "committedDate": "2020-11-23T11:57:06Z", "message": "Bumping chart version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9f01715cc0d58b0450b1612408c21b78ec4fc08", "author": {"user": {"login": "noronhaa", "name": "Ashley Noronha"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/f9f01715cc0d58b0450b1612408c21b78ec4fc08", "committedDate": "2020-11-23T16:07:36Z", "message": "Update values.preview.template.yaml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d9a4721cc12609a2a7eaa8453dcc2cad2a53085", "author": {"user": {"login": "noronhaa", "name": "Ashley Noronha"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/7d9a4721cc12609a2a7eaa8453dcc2cad2a53085", "committedDate": "2020-11-23T16:49:53Z", "message": "Update Jenkinsfile_CNP"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2669, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}