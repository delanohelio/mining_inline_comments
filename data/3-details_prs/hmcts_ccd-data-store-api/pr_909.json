{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MDk4NzU1", "number": 909, "title": "RDM-8051 Log and audit: log audit events in Data Store", "bodyText": "JIRA link (if applicable)\nhttps://tools.hmcts.net/jira/browse/RDM-8051\nChange description\nLog and Audit functionality based on the Spring Aspects and Interceptor\nDoes this PR introduce a breaking change? (check one with \"x\")\n[ ] Yes\n[X ] No", "createdAt": "2020-04-17T12:16:34Z", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909", "merged": true, "mergeCommit": {"oid": "eea35b093a04b92e85738f33e33c99a2269300ca"}, "closed": true, "closedAt": "2020-05-07T15:05:10Z", "author": {"login": "rafalkalita"}, "timelineItems": {"totalCount": 132, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcacVqbgH2gAyNDA1MDk4NzU1OmY4MWM1NTM1OTAzODgzZGE5MDI2OTFlZjdlZmYyNWM1Y2M2ZTkyMmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABce-UxogH2gAyNDA1MDk4NzU1OmYzODU2N2Q2NDJlY2UxMTU3ZmNkNmIwNWFhMzE2MjA5MzUxM2YyZDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f81c5535903883da902691ef7eff25c5cc6e922f", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/f81c5535903883da902691ef7eff25c5cc6e922f", "committedDate": "2020-04-23T12:49:07Z", "message": "RDM-8051 - review comment - extracted to a property though it won't differ and change so often."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5809a96c716bde53ddf8428349c0e79d5d6694e", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/f5809a96c716bde53ddf8428349c0e79d5d6694e", "committedDate": "2020-04-23T12:54:49Z", "message": "RDM-8051 Change UPDATE_CASE_ACCESS AuditOperationType label"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fad408366224f98d414258711f3fdcf7a7fa084a", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/fad408366224f98d414258711f3fdcf7a7fa084a", "committedDate": "2020-04-23T12:56:19Z", "message": "Merge branch 'RDM-8051' into RDM-8051-v1\n\n# Conflicts:\n#\tsrc/main/java/uk/gov/hmcts/ccd/auditlog/AuditOperationType.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2af44c4c90fb9d6de1445a6deb39c81dbf9e3bf8", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/2af44c4c90fb9d6de1445a6deb39c81dbf9e3bf8", "committedDate": "2020-04-23T12:57:12Z", "message": "RDM-8051 Change AuditOperationType access labels"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NzE3ODQ4", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-399717848", "createdAt": "2020-04-24T07:51:46Z", "commit": {"oid": "f5809a96c716bde53ddf8428349c0e79d5d6694e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b2b7d1e2e0136f8c8e20cef4e54f86ada7d9063", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/6b2b7d1e2e0136f8c8e20cef4e54f86ada7d9063", "committedDate": "2020-04-24T10:57:30Z", "message": "RDM-8051 Fix few bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8789e6517040eb09868268098193516d25a2521", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/d8789e6517040eb09868268098193516d25a2521", "committedDate": "2020-04-24T11:08:57Z", "message": "RDM-8051 - test checkStyle fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51732ed4f9d0a8c4e3906453f703cc544b6e3b20", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/51732ed4f9d0a8c4e3906453f703cc544b6e3b20", "committedDate": "2020-04-24T11:39:23Z", "message": "RDM-8051 Remove LogAudit on internal v2 event-triggers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "239c2587c530189d8904337eb1db50269133442e", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/239c2587c530189d8904337eb1db50269133442e", "committedDate": "2020-04-24T11:42:24Z", "message": "Merge branch 'develop' into RDM-8051"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58f221985505179591301f7916e1e5fccdef37e5", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/58f221985505179591301f7916e1e5fccdef37e5", "committedDate": "2020-04-27T08:22:24Z", "message": "Merge branch 'RDM-8051' into RDM-8051-v1\n\n# Conflicts:\n#\tsrc/test/java/uk/gov/hmcts/ccd/v2/internal/controller/UIStartTriggerControllerCaseRolesIT.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b7b2249f6b54b518269108fee2734071a43a973", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/5b7b2249f6b54b518269108fee2734071a43a973", "committedDate": "2020-04-27T08:41:39Z", "message": "RDM-8051 fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b3510b690d45e362c267b3bd34239c993b694a1", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/2b3510b690d45e362c267b3bd34239c993b694a1", "committedDate": "2020-04-27T11:22:39Z", "message": "RDM-8051 Change the user to fix the func test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca58c53c7e00eb7b903c550407f0dabe6a2ac706", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/ca58c53c7e00eb7b903c550407f0dabe6a2ac706", "committedDate": "2020-04-27T12:55:42Z", "message": "RDM-8051 - added feature toggle for audit-log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af3ca9dbe481523d09e145acefff8b5edf3b8fde", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/af3ca9dbe481523d09e145acefff8b5edf3b8fde", "committedDate": "2020-04-27T13:11:02Z", "message": "RDM-8051 Default the USER_PROFILE_HOST"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "913a21b579a731f6fa8a5c2f69543d267a533647", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/913a21b579a731f6fa8a5c2f69543d267a533647", "committedDate": "2020-04-27T19:23:25Z", "message": "Merge branch 'develop' into RDM-8051"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3e158bdb634c02ef6a918c39a2c0e66a5affad0", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/c3e158bdb634c02ef6a918c39a2c0e66a5affad0", "committedDate": "2020-04-27T19:49:48Z", "message": "Merge branch 'RDM-8051' into RDM-8051-v1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00bba1e5fe42f60da30af3963939aeb2bcfe41ce", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/00bba1e5fe42f60da30af3963939aeb2bcfe41ce", "committedDate": "2020-04-28T15:23:50Z", "message": "RDM-8051 add jurisdiction to LogAudit in CaseAccessEndpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "815d7859a94e7fa547d8f78da97f58ba0de0b993", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/815d7859a94e7fa547d8f78da97f58ba0de0b993", "committedDate": "2020-04-28T18:46:08Z", "message": "RDM-8051 operationOutcome to operationalOutcome"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "088d9d4228e54a14aa48a4ddba71d580b8565d0e", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/088d9d4228e54a14aa48a4ddba71d580b8565d0e", "committedDate": "2020-05-06T13:41:23Z", "message": "Merge branch 'develop' into RDM-8051\n\n# Conflicts:\n#\tsrc/main/java/uk/gov/hmcts/ccd/endpoint/ui/QueryEndpoint.java\n#\tsrc/main/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseController.java\n#\tsrc/main/java/uk/gov/hmcts/ccd/v2/internal/controller/UIDefinitionController.java\n#\tsrc/main/java/uk/gov/hmcts/ccd/v2/internal/controller/UIStartTriggerController.java\n#\tsrc/test/java/uk/gov/hmcts/ccd/BaseTest.java\n#\tsrc/test/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseControllerCaseRolesIT.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd235ed3fefa7f62d20c9fbf611ec62680313b78", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/fd235ed3fefa7f62d20c9fbf611ec62680313b78", "committedDate": "2020-05-06T13:49:57Z", "message": "RDM-8051 Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bc5426920c0ad08a5ecea27d4773efa8e32f4d2", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/8bc5426920c0ad08a5ecea27d4773efa8e32f4d2", "committedDate": "2020-05-06T14:17:04Z", "message": "RDM-8051 Checkstyle cd."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "229b364262d0528481cb3fe70a08f0eb11a561a1", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/229b364262d0528481cb3fe70a08f0eb11a561a1", "committedDate": "2020-05-06T16:09:21Z", "message": "Merge branch 'RDM-8051' into RDM-8051-v1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f3d2751dd27b0faa775a72c84a56343292a18fe", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/3f3d2751dd27b0faa775a72c84a56343292a18fe", "committedDate": "2020-05-06T16:30:27Z", "message": "RDM-8051 Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b46ac7099417e89c1de45e720104eb8dde9cb3d", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/3b46ac7099417e89c1de45e720104eb8dde9cb3d", "committedDate": "2020-05-06T17:19:47Z", "message": "RDM-8051 Fix merge issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc8f81018276135e5bae31df407c706ee5ba4717", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/cc8f81018276135e5bae31df407c706ee5ba4717", "committedDate": "2020-05-07T09:44:02Z", "message": "Merge remote-tracking branch 'origin/RDM-8051-v1' into RDM-8051-v1\n\n# Conflicts:\n#\tsrc/main/java/uk/gov/hmcts/ccd/auditlog/AuditInterceptor.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f31fd22b33919dae17568d909743c705bfa1dc7", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/1f31fd22b33919dae17568d909743c705bfa1dc7", "committedDate": "2020-05-07T09:57:23Z", "message": "Merge branch 'develop' into RDM-8051"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b69423f6e331ada2653b68b503513601f8f65a3", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/1b69423f6e331ada2653b68b503513601f8f65a3", "committedDate": "2020-05-07T10:53:56Z", "message": "RDM-8051 Disable header checks on FTAs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2c70667f96f34dca67e253311b5a4a2985aed88", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/d2c70667f96f34dca67e253311b5a4a2985aed88", "committedDate": "2020-05-07T12:31:44Z", "message": "RDM-8051 Disable header checks on FTAs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f70b8295e9f83be031a479d2e491acc6a3016cdd", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/f70b8295e9f83be031a479d2e491acc6a3016cdd", "committedDate": "2020-05-07T13:19:23Z", "message": "Merge branch 'RDM-8051' into RDM-8051-v1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22f0d6ad0d53c47b22ca852672f83f71823fde02", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/22f0d6ad0d53c47b22ca852672f83f71823fde02", "committedDate": "2020-05-07T13:42:02Z", "message": "Revert USER_PROFILE_HOST"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aecfb2f74a1bd88a96929993baa26ad0b4665dd5", "author": {"user": {"login": "Olawale", "name": "Olawale Olanrewaju"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/aecfb2f74a1bd88a96929993baa26ad0b4665dd5", "committedDate": "2020-05-07T14:38:56Z", "message": "Merge pull request #921 from hmcts/RDM-8051-v1\n\nRDM-8051 LogAudit for v1 endpoints"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f38567d642ece1157fcd6b05aa3162093513f2d8", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/f38567d642ece1157fcd6b05aa3162093513f2d8", "committedDate": "2020-05-07T14:40:37Z", "message": "Merge branch 'develop' into RDM-8051"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a338f38620610299c49598af909b38456a7e4c5f", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/a338f38620610299c49598af909b38456a7e4c5f", "committedDate": "2020-04-07T11:17:46Z", "message": "RDM-8051 WIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a49e5848471e9026306f0d9c4720b60c2570f201", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/a49e5848471e9026306f0d9c4720b60c2570f201", "committedDate": "2020-04-07T12:29:54Z", "message": "RDM-8051 Introduce Clock"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "929e1ae7db62c3c22802446813e5534e80e64c9e", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/929e1ae7db62c3c22802446813e5534e80e64c9e", "committedDate": "2020-04-08T12:57:43Z", "message": "RDM-8051 Switch to LogAuditInterceptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3032e241654f426bebbfc770c1c581fa2c01d10", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/d3032e241654f426bebbfc770c1c581fa2c01d10", "committedDate": "2020-04-08T16:14:02Z", "message": "RDM-8051 - added test to verify audit flow"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "980ebb5db871edc9fb5f0868112245f00bf11013", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/980ebb5db871edc9fb5f0868112245f00bf11013", "committedDate": "2020-04-09T13:19:47Z", "message": "RDM-8051 - added idam props to audit log message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d5faec5df2816480e0a806e537cf2c6b01000e8", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/3d5faec5df2816480e0a806e537cf2c6b01000e8", "committedDate": "2020-04-14T08:40:25Z", "message": "RDM-8051 - Audit aspect using using spring expression language."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73cfc51ababc8123e4623da676c7a43a6316d4e1", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/73cfc51ababc8123e4623da676c7a43a6316d4e1", "committedDate": "2020-04-14T10:12:37Z", "message": "RDM-8051 - Audit aspect using using spring expression language."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f52c76f4e92814155761841bc167e2b628288f29", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/f52c76f4e92814155761841bc167e2b628288f29", "committedDate": "2020-04-14T14:54:21Z", "message": "RDM-8051 - audit aspect refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "664e184d1bba782c3604ba3c09cec26bb7e63489", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/664e184d1bba782c3604ba3c09cec26bb7e63489", "committedDate": "2020-04-14T18:27:19Z", "message": "RDM-8051 - audit aspect - added caseType property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce1a3dab0b618423614b9c5d107a31b270445457", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/ce1a3dab0b618423614b9c5d107a31b270445457", "committedDate": "2020-04-14T19:40:49Z", "message": "RDM-8051 Add annotation with the operationType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f913a0d68bcfd27d348ab324bc795d88aa1755b0", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/f913a0d68bcfd27d348ab324bc795d88aa1755b0", "committedDate": "2020-04-14T21:35:38Z", "message": "RDM-8051 - minor clean-up; renamed to make it consistency."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2e263eabd8ceb03e3628874e20d7522d228dc6a", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/c2e263eabd8ceb03e3628874e20d7522d228dc6a", "committedDate": "2020-04-15T09:46:41Z", "message": "RDM-8051 - integration test for audit annotation on GET /case/{caseId}"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cd3e096f1b32d42753df8ebde4f496073347ecd", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/3cd3e096f1b32d42753df8ebde4f496073347ecd", "committedDate": "2020-04-15T12:39:09Z", "message": "RDM-8051 - audit aspect - added eventSelected property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "790e168c44918812839044571afa1cc05d503315", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/790e168c44918812839044571afa1cc05d503315", "committedDate": "2020-04-15T14:01:56Z", "message": "RDM-8051 - audit aspect - added eventSelected property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaaede6ceab915b3fb9115057c662974a0716e87", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/eaaede6ceab915b3fb9115057c662974a0716e87", "committedDate": "2020-04-15T15:34:02Z", "message": "RDM-8051 wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4964ed4012c54be2f8833d1a1a93269a0bd104ea", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/4964ed4012c54be2f8833d1a1a93269a0bd104ea", "committedDate": "2020-04-15T20:54:52Z", "message": "RDM-8051 Test LogAudit on CaseController"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc8e012c1f5a8fac42584e390eda067f69e738c5", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/fc8e012c1f5a8fac42584e390eda067f69e738c5", "committedDate": "2020-04-15T21:11:16Z", "message": "RDM-8051 Test LogAudit on DocumentController"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eca83255b7be292094c25ebd6fcdfdf6000b099b", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/eca83255b7be292094c25ebd6fcdfdf6000b099b", "committedDate": "2020-04-16T09:21:52Z", "message": "RDM-8051 - audit log few more endpoints and tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96a0404f3ac41dca8d22f7f6c41bc7c9cef43183", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/96a0404f3ac41dca8d22f7f6c41bc7c9cef43183", "committedDate": "2020-04-16T09:53:42Z", "message": "RDM-8051 - fixed auditInterceptor in case of exceptionHandlers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5658709a6a65071973d2003cffbf9ab8f9e290b", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/c5658709a6a65071973d2003cffbf9ab8f9e290b", "committedDate": "2020-04-16T14:08:54Z", "message": "RDM-8051 - CaseUser.caseRoles log_audit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "564314d8daaf7ee19a2854341852b7c3972160bb", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/564314d8daaf7ee19a2854341852b7c3972160bb", "committedDate": "2020-04-16T15:31:56Z", "message": "RDM-8051 Test LogAudit on StartTriggerController"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bad96d31b1e3b6d394abd4b4ee2d5d7ef530b6fd", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/bad96d31b1e3b6d394abd4b4ee2d5d7ef530b6fd", "committedDate": "2020-04-16T15:48:07Z", "message": "RDM-8051 Remove not needed LogAudit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d00c6fd260b17bb6b18e9528b14b931728aa0cc", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/1d00c6fd260b17bb6b18e9528b14b931728aa0cc", "committedDate": "2020-04-17T08:19:21Z", "message": "RDM-8051 reset sequences"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15924c6b57158664cde808bf8cb3041e2f5a8092", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/15924c6b57158664cde808bf8cb3041e2f5a8092", "committedDate": "2020-04-17T09:12:46Z", "message": "RDM-8051 update address.postcode for a valid one"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ae4000b1eae4164ddfdbb35ea122c184d091048", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/9ae4000b1eae4164ddfdbb35ea122c184d091048", "committedDate": "2020-04-17T12:04:15Z", "message": "RDM-8051 Clean up Access OperationTypes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc70edd71e478c486c294247406b08141669d405", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/fc70edd71e478c486c294247406b08141669d405", "committedDate": "2020-04-17T12:06:03Z", "message": "RDM-8051 Align the endpoint LogAudit with the spec"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53c2885fea9d6000b48aa27db904e7edd4698752", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/53c2885fea9d6000b48aa27db904e7edd4698752", "committedDate": "2020-04-17T12:51:58Z", "message": "RDM-8051 Checkstyle cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bdc951bac684d3ea7afb6fb6170ffe7539633b9", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/1bdc951bac684d3ea7afb6fb6170ffe7539633b9", "committedDate": "2020-04-17T14:43:58Z", "message": "RDM-8051 - fixed CaseRoleRepo securityUtils mock"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c476465511311a0c1675ab2e7db150960f72c20", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/0c476465511311a0c1675ab2e7db150960f72c20", "committedDate": "2020-04-17T15:03:43Z", "message": "RDM-8051 Remove unneeded code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33c893ab8defe9223acfb75485460e42bd992cc6", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/33c893ab8defe9223acfb75485460e42bd992cc6", "committedDate": "2020-04-17T15:51:04Z", "message": "RDM-8051 Unit test for AuditService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8cdb174351f68b267a3d2898133def1aeb0b837", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/f8cdb174351f68b267a3d2898133def1aeb0b837", "committedDate": "2020-04-20T08:28:34Z", "message": "RDM-8051 - unit tests for ExpressionEvaluator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb0f38e720428ea5b641dbda8c9373475d21c196", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/bb0f38e720428ea5b641dbda8c9373475d21c196", "committedDate": "2020-04-20T09:24:42Z", "message": "RDM-8051 - sonar exclusions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "397c3773be58cdba363fddd551e8cc405b767a4f", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/397c3773be58cdba363fddd551e8cc405b767a4f", "committedDate": "2020-04-20T09:51:56Z", "message": "RDM-8051 - checkstyle fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4fa99147fee9c955436f79dcd842b6ee4982a6e", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e4fa99147fee9c955436f79dcd842b6ee4982a6e", "committedDate": "2020-04-20T10:27:19Z", "message": "RDM-8051 - unit tests and sonar fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/23349ce04bb8b4cffe870dec50d0a476eb73a086", "committedDate": "2020-04-20T11:02:06Z", "message": "Merge branch 'develop' into RDM-8051"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80b925590bfe9364034ee9854c25bbc7e10efc3c", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/80b925590bfe9364034ee9854c25bbc7e10efc3c", "committedDate": "2020-04-20T15:07:15Z", "message": "RDM-8051 - audit log for V1 search cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ae9b46c5b1cecb9765ab6b7310a88fa01115acb", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/6ae9b46c5b1cecb9765ab6b7310a88fa01115acb", "committedDate": "2020-04-20T15:31:47Z", "message": "RDM-8051 - audit log for V1 Query endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9529a70ea34714f5bf98bfc0a0411980b12a3931", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/9529a70ea34714f5bf98bfc0a0411980b12a3931", "committedDate": "2020-04-20T18:51:16Z", "message": "RDM-8051 v1 CaseSearchEndpoint amd CallbackEndpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e691114d68c5eb22a29a64b42e783047436aff19", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e691114d68c5eb22a29a64b42e783047436aff19", "committedDate": "2020-04-20T18:54:35Z", "message": "RDM-8051 refactor listOfCaseTypes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MjA5Mjk4", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397209298", "createdAt": "2020-04-21T10:44:24Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDo0NDoyNFrOGI_G7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDo0NDoyNFrOGI_G7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA3NTc1OA==", "bodyText": "Remove the commented lines .", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412075758", "createdAt": "2020-04-21T10:44:24Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/AuditEntry.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import static org.apache.commons.lang3.StringUtils.isNotBlank;\n+import static org.apache.commons.lang3.builder.ToStringStyle.JSON_STYLE;\n+\n+public class AuditEntry {\n+\n+    private static final String TAG = \"CLA-CCD\";\n+\n+    private String dateTime;\n+    private int httpStatus;\n+    private String httpMethod;\n+    private String path;\n+    private String idamId;\n+    private String caseId;\n+    private String caseType;\n+    private String jurisdiction;\n+    private String eventSelected;\n+    private String invokingService;\n+    private String operationType;\n+    private String requestId;\n+    private String targetIdamId;\n+    private List<String> targetCaseRoles;\n+\n+    public void setDateTime(String time) {\n+        this.dateTime = time;\n+    }\n+\n+    public String getDateTime() {\n+        return dateTime;\n+    }\n+\n+    public int getHttpStatus() {\n+        return httpStatus;\n+    }\n+\n+    public void setHttpStatus(int httpStatus) {\n+        this.httpStatus = httpStatus;\n+    }\n+\n+    public String getHttpMethod() {\n+        return httpMethod;\n+    }\n+\n+    public void setHttpMethod(String httpMethod) {\n+        this.httpMethod = httpMethod;\n+    }\n+\n+    public String getPath() {\n+        return path;\n+    }\n+\n+    public void setPath(String path) {\n+        this.path = path;\n+    }\n+\n+    public String getOperationType() {\n+        return operationType;\n+    }\n+\n+    public void setOperationType(String operationType) {\n+        this.operationType = operationType;\n+    }\n+\n+    public String getIdamId() {\n+        return idamId;\n+    }\n+\n+    public void setIdamId(String idamId) {\n+        this.idamId = idamId;\n+    }\n+\n+    public String getInvokingService() {\n+        return invokingService;\n+    }\n+\n+    public void setInvokingService(String invokingService) {\n+        this.invokingService = invokingService;\n+    }\n+\n+    public static String getTAG() {\n+        return TAG;\n+    }\n+\n+    public String getCaseId() {\n+        return caseId;\n+    }\n+\n+    public void setCaseId(String caseId) {\n+        this.caseId = caseId;\n+    }\n+\n+    public String getJurisdiction() {\n+        return jurisdiction;\n+    }\n+\n+    public void setJurisdiction(String jurisdiction) {\n+        this.jurisdiction = jurisdiction;\n+    }\n+\n+    public String getCaseType() {\n+        return caseType;\n+    }\n+\n+    public void setCaseType(String caseType) {\n+        this.caseType = caseType;\n+    }\n+\n+    public String getEventSelected() {\n+        return eventSelected;\n+    }\n+\n+    public void setEventSelected(String eventSelected) {\n+        this.eventSelected = eventSelected;\n+    }\n+\n+    public String getRequestId() {\n+        return requestId;\n+    }\n+\n+    public void setRequestId(String requestId) {\n+        this.requestId = requestId;\n+    }\n+\n+    public String getTargetIdamId() {\n+        return targetIdamId;\n+    }\n+\n+    public void setTargetIdamId(String targetIdamId) {\n+        this.targetIdamId = targetIdamId;\n+    }\n+\n+    public List<String> getTargetCaseRoles() {\n+        return targetCaseRoles;\n+    }\n+\n+    public void setTargetCaseRoles(List<String> targetCaseRoles) {\n+        this.targetCaseRoles = targetCaseRoles;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return TAG + \" \" + dateTime + \" operationType:\" + operationType +\n+            (isNotBlank(caseId) ? \", caseId:\" + caseId : \"\") +\n+            (isNotBlank(idamId) ? \", idamId:\" + idamId : \"\") +\n+            (isNotBlank(invokingService) ? \", invokingService:\" + invokingService : \"\") +\n+            (isNotBlank(path) ? \", endpointCalled:\" + httpMethod + \" \" + path : \"\") +\n+            \", operationOutcome:\" + httpStatus +\n+            (isNotBlank(caseType) ? \", caseType:\" + caseType : \"\") +\n+            (isNotBlank(jurisdiction) ? \", jurisdiction:\" + jurisdiction : \"\") +\n+            (isNotBlank(eventSelected) ? \", eventSelected:\" + eventSelected : \"\") +\n+           (isNotBlank(targetIdamId) ? \", idamIdOfTarget:\" + targetIdamId : \"\") +\n+//            (isNotBlank(listOfCaseTypes) ? \", listOfCaseTypes:\" + listOfCaseTypes : \"\") +\n+            (targetCaseRoles != null && !targetCaseRoles.isEmpty() ? \", targetCaseRoles:\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 159}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MjA5MzU3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397209357", "createdAt": "2020-04-21T10:44:30Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDo0NDozMFrOGI_HJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDo0NDozMFrOGI_HJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA3NTgxNQ==", "bodyText": "Any particular reason why @lazy final SecurityUtils securityUtils is lazy. Because it seems that this securityUtils attribute is important for the AuditService functionality.   without securityUtils AuditService will not work.   Maybe it is good if it always present.   If securityUtils were inside an if statement yes .", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412075815", "createdAt": "2020-04-21T10:44:30Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/AuditService.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.context.annotation.Lazy;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.auditlog.aop.AuditContext;\n+import uk.gov.hmcts.ccd.data.SecurityUtils;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import java.time.Clock;\n+import java.time.LocalDateTime;\n+\n+import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE_TIME;\n+\n+@Service\n+public class AuditService {\n+\n+    private final Clock clock;\n+    private final SecurityUtils securityUtils;\n+    private final UserRepository userRepository;\n+    private final AuditRepository auditRepository;\n+\n+    public AuditService(@Qualifier(\"utcClock\") final Clock clock,\n+                        @Qualifier(CachedUserRepository.QUALIFIER) final UserRepository userRepository,\n+                        @Lazy final SecurityUtils securityUtils, final AuditRepository auditRepository) {\n+        this.clock = clock;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MjA5NDY3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397209467", "createdAt": "2020-04-21T10:44:39Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDo0NDozOVrOGI_Hjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDo0NDozOVrOGI_Hjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA3NTkxOA==", "bodyText": "I think that there is a constant ion the model for \"request-id\" value .  If not maybe we can create one . Only if there is a shared common area for test modules and business modules.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412075918", "createdAt": "2020-04-21T10:44:39Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/AuditService.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.context.annotation.Lazy;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.auditlog.aop.AuditContext;\n+import uk.gov.hmcts.ccd.data.SecurityUtils;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import java.time.Clock;\n+import java.time.LocalDateTime;\n+\n+import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE_TIME;\n+\n+@Service\n+public class AuditService {\n+\n+    private final Clock clock;\n+    private final SecurityUtils securityUtils;\n+    private final UserRepository userRepository;\n+    private final AuditRepository auditRepository;\n+\n+    public AuditService(@Qualifier(\"utcClock\") final Clock clock,\n+                        @Qualifier(CachedUserRepository.QUALIFIER) final UserRepository userRepository,\n+                        @Lazy final SecurityUtils securityUtils, final AuditRepository auditRepository) {\n+        this.clock = clock;\n+        this.userRepository = userRepository;\n+        this.securityUtils = securityUtils;\n+        this.auditRepository = auditRepository;\n+    }\n+\n+    public void audit(HttpServletRequest request, int httpResponseStatus, AuditContext auditContext) {\n+        AuditEntry entry = new AuditEntry();\n+\n+        String formattedDate = LocalDateTime.now(clock).format(ISO_LOCAL_DATE_TIME);\n+\n+        entry.setDateTime(formattedDate);\n+        entry.setHttpStatus(httpResponseStatus);\n+        entry.setHttpMethod(request.getMethod());\n+        entry.setPath(request.getRequestURI());\n+        entry.setIdamId(userRepository.getUser().getEmail());\n+        entry.setInvokingService(securityUtils.getServiceName());\n+\n+        if (auditContext != null) {\n+            entry.setOperationType(auditContext.getOperationType().getLabel());\n+            entry.setJurisdiction(auditContext.getJurisdiction());\n+            entry.setCaseId(auditContext.getCaseId());\n+            entry.setCaseType(auditContext.getCaseType());\n+            entry.setEventSelected(auditContext.getEventName());\n+            entry.setTargetIdamId(auditContext.getTargetIdamId());\n+            entry.setTargetCaseRoles(auditContext.getTargetCaseRoles());\n+        }\n+\n+        entry.setRequestId(request.getHeader(\"request-id\"));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MjA5NTk3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397209597", "createdAt": "2020-04-21T10:44:49Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDo0NDo1MFrOGI_IBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDo0NDo1MFrOGI_IBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA3NjAzNg==", "bodyText": "there is a logger \"LOG\" it would be good if we log the trace and a message.  We know where it is coming from", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412076036", "createdAt": "2020-04-21T10:44:50Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/aop/AuditAspect.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package uk.gov.hmcts.ccd.auditlog.aop;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.aspectj.lang.JoinPoint;\n+import org.aspectj.lang.ProceedingJoinPoint;\n+import org.aspectj.lang.annotation.Around;\n+import org.aspectj.lang.annotation.Aspect;\n+import org.aspectj.lang.reflect.MethodSignature;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.expression.AnnotatedElementKey;\n+import org.springframework.expression.EvaluationContext;\n+import org.springframework.expression.spel.SpelEvaluationException;\n+import org.springframework.stereotype.Component;\n+import uk.gov.hmcts.ccd.auditlog.LogAudit;\n+\n+import java.lang.reflect.Method;\n+import java.util.List;\n+\n+@Aspect\n+@Component\n+public class AuditAspect {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(AuditAspect.class);\n+\n+    private static final String RESULT_VARIABLE = \"result\";\n+\n+    private ExpressionEvaluator evaluator = new ExpressionEvaluator();\n+\n+    @Around(\"@annotation(logAudit)\")\n+    public Object audit(ProceedingJoinPoint joinPoint, LogAudit logAudit) throws Throwable {\n+        Object result = null;\n+        try {\n+            result = joinPoint.proceed();\n+            return result;\n+        } catch (Exception ex) {\n+            throw ex;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MjExMDU2", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397211056", "createdAt": "2020-04-21T10:47:09Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDo0NzowOVrOGI_NhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDo0NzowOVrOGI_NhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA3NzQ0NQ==", "bodyText": "public Object[] getArgs() {. }.  It is not used anywhere and it is not overwriting .", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412077445", "createdAt": "2020-04-21T10:47:09Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/aop/ExpressionEvaluator.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package uk.gov.hmcts.ccd.auditlog.aop;\n+\n+import org.springframework.aop.support.AopUtils;\n+import org.springframework.context.expression.AnnotatedElementKey;\n+import org.springframework.context.expression.CachedExpressionEvaluator;\n+import org.springframework.context.expression.MethodBasedEvaluationContext;\n+import org.springframework.core.DefaultParameterNameDiscoverer;\n+import org.springframework.core.ParameterNameDiscoverer;\n+import org.springframework.expression.EvaluationContext;\n+import org.springframework.expression.Expression;\n+\n+import java.lang.reflect.Method;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ *  Utility class handling the SpEL expression parsing\n+ *\n+ */\n+public class ExpressionEvaluator extends CachedExpressionEvaluator {\n+\n+    // shared param discoverer since it caches data internally\n+    private final ParameterNameDiscoverer paramNameDiscoverer = new DefaultParameterNameDiscoverer();\n+\n+    private final Map<ExpressionKey, Expression> conditionCache = new ConcurrentHashMap<>(64);\n+\n+    private final Map<AnnotatedElementKey, Method> targetMethodCache = new ConcurrentHashMap<>(64);\n+\n+    public EvaluationContext createEvaluationContext(Object object, Class<?> targetClass, Method method, Object[] args) {\n+        Method targetMethod = getTargetMethod(targetClass, method);\n+        ExpressionRootObject root = new ExpressionRootObject(object, args);\n+        return new MethodBasedEvaluationContext(root, targetMethod, args, this.paramNameDiscoverer);\n+    }\n+\n+    public <T> T condition(String conditionExpression, AnnotatedElementKey elementKey, EvaluationContext evalContext, Class<T> clazz) {\n+        return getExpression(this.conditionCache, elementKey, conditionExpression).getValue(evalContext, clazz);\n+    }\n+\n+    private Method getTargetMethod(Class<?> targetClass, Method method) {\n+        AnnotatedElementKey methodKey = new AnnotatedElementKey(method, targetClass);\n+        Method targetMethod = this.targetMethodCache.get(methodKey);\n+        if (targetMethod == null) {\n+            targetMethod = AopUtils.getMostSpecificMethod(method, targetClass);\n+            this.targetMethodCache.put(methodKey, targetMethod);\n+        }\n+        return targetMethod;\n+    }\n+\n+    private static class ExpressionRootObject {\n+        private final Object object;\n+        private final Object[] args;\n+\n+        public ExpressionRootObject(Object object, Object[] args) {\n+            this.object = object;\n+            this.args = args;\n+        }\n+\n+        public Object getObject() {\n+            return object;\n+        }\n+\n+        public Object[] getArgs() {\n+            return args;\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3Mjc4NTU3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397278557", "createdAt": "2020-04-21T12:27:23Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjoyNzoyM1rOGJDASQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjoyNzoyM1rOGJDASQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEzOTU5Mw==", "bodyText": "better to have an AuditRepository interface with at the moment one implementation LoggerAuditRepository.\nThis will allow in the future to easily change the destination of the log files if needed. For example they might want to ask to store on DB rather than on std out", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412139593", "createdAt": "2020-04-21T12:27:23Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/AuditRepository.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class AuditRepository {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MjEyMjg2", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397212286", "createdAt": "2020-04-21T10:49:03Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDo0OTowNFrOGI_SIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMTowMzozMlrOGI_0lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA3ODYyNw==", "bodyText": "if we can avoid using. .*; checkstyle will complaint.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412078627", "createdAt": "2020-04-21T10:49:04Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -31,7 +24,11 @@\n import uk.gov.hmcts.ccd.v2.external.resource.CaseEventsResource;\n import uk.gov.hmcts.ccd.v2.external.resource.CaseResource;\n \n+import javax.transaction.Transactional;\n+import java.util.List;\n+\n import static org.springframework.http.ResponseEntity.status;\n+import static uk.gov.hmcts.ccd.auditlog.OperationType.*;\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA4NzQ0NA==", "bodyText": "private constructor for enum is redundant.  I think intellij can mark that", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412087444", "createdAt": "2020-04-21T11:03:32Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/OperationType.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+public enum OperationType {\n+    CREATE_CASE(\"Create case\"),\n+    UPDATE_CASE(\"Update case\"),\n+    VIEW_CASE(\"View case\"),\n+    SEARCH_CASE(\"Search case\"),\n+    UPDATE_CASE_ACCESS(\"Update case access\");\n+\n+    private final String label;\n+\n+    private OperationType(String label) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzE5MDU3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397319057", "createdAt": "2020-04-21T13:17:10Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzoxNzoxMFrOGJFMMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzoxNzoxMFrOGJFMMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE3NTQwOA==", "bodyText": "I'm thinking that maybe for consistency we should have a field id for the datetime, like datetime:\nThis will also simplify the processing of the records.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412175408", "createdAt": "2020-04-21T13:17:10Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/AuditEntry.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import static org.apache.commons.lang3.StringUtils.isNotBlank;\n+import static org.apache.commons.lang3.builder.ToStringStyle.JSON_STYLE;\n+\n+public class AuditEntry {\n+\n+    private static final String TAG = \"CLA-CCD\";\n+\n+    private String dateTime;\n+    private int httpStatus;\n+    private String httpMethod;\n+    private String path;\n+    private String idamId;\n+    private String caseId;\n+    private String caseType;\n+    private String jurisdiction;\n+    private String eventSelected;\n+    private String invokingService;\n+    private String operationType;\n+    private String requestId;\n+    private String targetIdamId;\n+    private List<String> targetCaseRoles;\n+\n+    public void setDateTime(String time) {\n+        this.dateTime = time;\n+    }\n+\n+    public String getDateTime() {\n+        return dateTime;\n+    }\n+\n+    public int getHttpStatus() {\n+        return httpStatus;\n+    }\n+\n+    public void setHttpStatus(int httpStatus) {\n+        this.httpStatus = httpStatus;\n+    }\n+\n+    public String getHttpMethod() {\n+        return httpMethod;\n+    }\n+\n+    public void setHttpMethod(String httpMethod) {\n+        this.httpMethod = httpMethod;\n+    }\n+\n+    public String getPath() {\n+        return path;\n+    }\n+\n+    public void setPath(String path) {\n+        this.path = path;\n+    }\n+\n+    public String getOperationType() {\n+        return operationType;\n+    }\n+\n+    public void setOperationType(String operationType) {\n+        this.operationType = operationType;\n+    }\n+\n+    public String getIdamId() {\n+        return idamId;\n+    }\n+\n+    public void setIdamId(String idamId) {\n+        this.idamId = idamId;\n+    }\n+\n+    public String getInvokingService() {\n+        return invokingService;\n+    }\n+\n+    public void setInvokingService(String invokingService) {\n+        this.invokingService = invokingService;\n+    }\n+\n+    public static String getTAG() {\n+        return TAG;\n+    }\n+\n+    public String getCaseId() {\n+        return caseId;\n+    }\n+\n+    public void setCaseId(String caseId) {\n+        this.caseId = caseId;\n+    }\n+\n+    public String getJurisdiction() {\n+        return jurisdiction;\n+    }\n+\n+    public void setJurisdiction(String jurisdiction) {\n+        this.jurisdiction = jurisdiction;\n+    }\n+\n+    public String getCaseType() {\n+        return caseType;\n+    }\n+\n+    public void setCaseType(String caseType) {\n+        this.caseType = caseType;\n+    }\n+\n+    public String getEventSelected() {\n+        return eventSelected;\n+    }\n+\n+    public void setEventSelected(String eventSelected) {\n+        this.eventSelected = eventSelected;\n+    }\n+\n+    public String getRequestId() {\n+        return requestId;\n+    }\n+\n+    public void setRequestId(String requestId) {\n+        this.requestId = requestId;\n+    }\n+\n+    public String getTargetIdamId() {\n+        return targetIdamId;\n+    }\n+\n+    public void setTargetIdamId(String targetIdamId) {\n+        this.targetIdamId = targetIdamId;\n+    }\n+\n+    public List<String> getTargetCaseRoles() {\n+        return targetCaseRoles;\n+    }\n+\n+    public void setTargetCaseRoles(List<String> targetCaseRoles) {\n+        this.targetCaseRoles = targetCaseRoles;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return TAG + \" \" + dateTime + \" operationType:\" + operationType +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 148}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzIwNzc5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397320779", "createdAt": "2020-04-21T13:19:06Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzoxOTowNlrOGJFR9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzoxOTowNlrOGJFR9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE3Njg4Nw==", "bodyText": "// FIXME : suppress 404 and 403/401 requests. is this going to be done in this implementation ?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412176887", "createdAt": "2020-04-21T13:19:06Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/AuditInterceptor.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+import org.springframework.lang.Nullable;\n+import org.springframework.web.method.HandlerMethod;\n+import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n+import uk.gov.hmcts.ccd.auditlog.aop.AuditContext;\n+import uk.gov.hmcts.ccd.auditlog.aop.AuditContextHolder;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+public class AuditInterceptor extends HandlerInterceptorAdapter {\n+\n+    private final AuditService auditService;\n+\n+    public AuditInterceptor(AuditService auditService) {\n+        this.auditService = auditService;\n+    }\n+\n+    @Override\n+    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler,\n+                           @Nullable Exception ex) {\n+        if (handler instanceof HandlerMethod && ((HandlerMethod) handler).hasMethodAnnotation(LogAudit.class)) {\n+            AuditContext auditContext = AuditContextHolder.getAuditContext();\n+            // FIXME : suppress 404 and 403/401 requests\n+            auditService.audit(request, response.getStatus(), auditContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzIxNzY1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397321765", "createdAt": "2020-04-21T13:20:09Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzoyMDoxMFrOGJFVLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzoyMDoxMFrOGJFVLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE3NzcwOQ==", "bodyText": "I would move this logic into a separate AuditEntryFormatter class for better separation of concerns. We could also more easily change the formatting", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412177709", "createdAt": "2020-04-21T13:20:10Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/AuditEntry.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import static org.apache.commons.lang3.StringUtils.isNotBlank;\n+import static org.apache.commons.lang3.builder.ToStringStyle.JSON_STYLE;\n+\n+public class AuditEntry {\n+\n+    private static final String TAG = \"CLA-CCD\";\n+\n+    private String dateTime;\n+    private int httpStatus;\n+    private String httpMethod;\n+    private String path;\n+    private String idamId;\n+    private String caseId;\n+    private String caseType;\n+    private String jurisdiction;\n+    private String eventSelected;\n+    private String invokingService;\n+    private String operationType;\n+    private String requestId;\n+    private String targetIdamId;\n+    private List<String> targetCaseRoles;\n+\n+    public void setDateTime(String time) {\n+        this.dateTime = time;\n+    }\n+\n+    public String getDateTime() {\n+        return dateTime;\n+    }\n+\n+    public int getHttpStatus() {\n+        return httpStatus;\n+    }\n+\n+    public void setHttpStatus(int httpStatus) {\n+        this.httpStatus = httpStatus;\n+    }\n+\n+    public String getHttpMethod() {\n+        return httpMethod;\n+    }\n+\n+    public void setHttpMethod(String httpMethod) {\n+        this.httpMethod = httpMethod;\n+    }\n+\n+    public String getPath() {\n+        return path;\n+    }\n+\n+    public void setPath(String path) {\n+        this.path = path;\n+    }\n+\n+    public String getOperationType() {\n+        return operationType;\n+    }\n+\n+    public void setOperationType(String operationType) {\n+        this.operationType = operationType;\n+    }\n+\n+    public String getIdamId() {\n+        return idamId;\n+    }\n+\n+    public void setIdamId(String idamId) {\n+        this.idamId = idamId;\n+    }\n+\n+    public String getInvokingService() {\n+        return invokingService;\n+    }\n+\n+    public void setInvokingService(String invokingService) {\n+        this.invokingService = invokingService;\n+    }\n+\n+    public static String getTAG() {\n+        return TAG;\n+    }\n+\n+    public String getCaseId() {\n+        return caseId;\n+    }\n+\n+    public void setCaseId(String caseId) {\n+        this.caseId = caseId;\n+    }\n+\n+    public String getJurisdiction() {\n+        return jurisdiction;\n+    }\n+\n+    public void setJurisdiction(String jurisdiction) {\n+        this.jurisdiction = jurisdiction;\n+    }\n+\n+    public String getCaseType() {\n+        return caseType;\n+    }\n+\n+    public void setCaseType(String caseType) {\n+        this.caseType = caseType;\n+    }\n+\n+    public String getEventSelected() {\n+        return eventSelected;\n+    }\n+\n+    public void setEventSelected(String eventSelected) {\n+        this.eventSelected = eventSelected;\n+    }\n+\n+    public String getRequestId() {\n+        return requestId;\n+    }\n+\n+    public void setRequestId(String requestId) {\n+        this.requestId = requestId;\n+    }\n+\n+    public String getTargetIdamId() {\n+        return targetIdamId;\n+    }\n+\n+    public void setTargetIdamId(String targetIdamId) {\n+        this.targetIdamId = targetIdamId;\n+    }\n+\n+    public List<String> getTargetCaseRoles() {\n+        return targetCaseRoles;\n+    }\n+\n+    public void setTargetCaseRoles(List<String> targetCaseRoles) {\n+        this.targetCaseRoles = targetCaseRoles;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return TAG + \" \" + dateTime + \" operationType:\" + operationType +\n+            (isNotBlank(caseId) ? \", caseId:\" + caseId : \"\") +\n+            (isNotBlank(idamId) ? \", idamId:\" + idamId : \"\") +\n+            (isNotBlank(invokingService) ? \", invokingService:\" + invokingService : \"\") +\n+            (isNotBlank(path) ? \", endpointCalled:\" + httpMethod + \" \" + path : \"\") +\n+            \", operationOutcome:\" + httpStatus +\n+            (isNotBlank(caseType) ? \", caseType:\" + caseType : \"\") +\n+            (isNotBlank(jurisdiction) ? \", jurisdiction:\" + jurisdiction : \"\") +\n+            (isNotBlank(eventSelected) ? \", eventSelected:\" + eventSelected : \"\") +\n+           (isNotBlank(targetIdamId) ? \", idamIdOfTarget:\" + targetIdamId : \"\") +\n+//            (isNotBlank(listOfCaseTypes) ? \", listOfCaseTypes:\" + listOfCaseTypes : \"\") +\n+            (targetCaseRoles != null && !targetCaseRoles.isEmpty() ? \", targetCaseRoles:\" +\n+                targetCaseRoles.stream().map(String::toString).collect(Collectors.joining(\",\")) : \"\") +\n+            (isNotBlank(requestId) ? \", X-Request-ID:\" + requestId : \"\") +\n+            '}';\n+    }\n+\n+    public String formattedAuditData() {\n+        return  ReflectionToStringBuilder.toString(this, JSON_STYLE, false, false,\n+            true, null).toString();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 168}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzIyNTY2", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397322566", "createdAt": "2020-04-21T13:21:05Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzoyMTowNVrOGJFX9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzoyMTowNVrOGJFX9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE3ODQyMg==", "bodyText": "we'd need to evaluate impact of performance if using reflection", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412178422", "createdAt": "2020-04-21T13:21:05Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/AuditEntry.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import static org.apache.commons.lang3.StringUtils.isNotBlank;\n+import static org.apache.commons.lang3.builder.ToStringStyle.JSON_STYLE;\n+\n+public class AuditEntry {\n+\n+    private static final String TAG = \"CLA-CCD\";\n+\n+    private String dateTime;\n+    private int httpStatus;\n+    private String httpMethod;\n+    private String path;\n+    private String idamId;\n+    private String caseId;\n+    private String caseType;\n+    private String jurisdiction;\n+    private String eventSelected;\n+    private String invokingService;\n+    private String operationType;\n+    private String requestId;\n+    private String targetIdamId;\n+    private List<String> targetCaseRoles;\n+\n+    public void setDateTime(String time) {\n+        this.dateTime = time;\n+    }\n+\n+    public String getDateTime() {\n+        return dateTime;\n+    }\n+\n+    public int getHttpStatus() {\n+        return httpStatus;\n+    }\n+\n+    public void setHttpStatus(int httpStatus) {\n+        this.httpStatus = httpStatus;\n+    }\n+\n+    public String getHttpMethod() {\n+        return httpMethod;\n+    }\n+\n+    public void setHttpMethod(String httpMethod) {\n+        this.httpMethod = httpMethod;\n+    }\n+\n+    public String getPath() {\n+        return path;\n+    }\n+\n+    public void setPath(String path) {\n+        this.path = path;\n+    }\n+\n+    public String getOperationType() {\n+        return operationType;\n+    }\n+\n+    public void setOperationType(String operationType) {\n+        this.operationType = operationType;\n+    }\n+\n+    public String getIdamId() {\n+        return idamId;\n+    }\n+\n+    public void setIdamId(String idamId) {\n+        this.idamId = idamId;\n+    }\n+\n+    public String getInvokingService() {\n+        return invokingService;\n+    }\n+\n+    public void setInvokingService(String invokingService) {\n+        this.invokingService = invokingService;\n+    }\n+\n+    public static String getTAG() {\n+        return TAG;\n+    }\n+\n+    public String getCaseId() {\n+        return caseId;\n+    }\n+\n+    public void setCaseId(String caseId) {\n+        this.caseId = caseId;\n+    }\n+\n+    public String getJurisdiction() {\n+        return jurisdiction;\n+    }\n+\n+    public void setJurisdiction(String jurisdiction) {\n+        this.jurisdiction = jurisdiction;\n+    }\n+\n+    public String getCaseType() {\n+        return caseType;\n+    }\n+\n+    public void setCaseType(String caseType) {\n+        this.caseType = caseType;\n+    }\n+\n+    public String getEventSelected() {\n+        return eventSelected;\n+    }\n+\n+    public void setEventSelected(String eventSelected) {\n+        this.eventSelected = eventSelected;\n+    }\n+\n+    public String getRequestId() {\n+        return requestId;\n+    }\n+\n+    public void setRequestId(String requestId) {\n+        this.requestId = requestId;\n+    }\n+\n+    public String getTargetIdamId() {\n+        return targetIdamId;\n+    }\n+\n+    public void setTargetIdamId(String targetIdamId) {\n+        this.targetIdamId = targetIdamId;\n+    }\n+\n+    public List<String> getTargetCaseRoles() {\n+        return targetCaseRoles;\n+    }\n+\n+    public void setTargetCaseRoles(List<String> targetCaseRoles) {\n+        this.targetCaseRoles = targetCaseRoles;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return TAG + \" \" + dateTime + \" operationType:\" + operationType +\n+            (isNotBlank(caseId) ? \", caseId:\" + caseId : \"\") +\n+            (isNotBlank(idamId) ? \", idamId:\" + idamId : \"\") +\n+            (isNotBlank(invokingService) ? \", invokingService:\" + invokingService : \"\") +\n+            (isNotBlank(path) ? \", endpointCalled:\" + httpMethod + \" \" + path : \"\") +\n+            \", operationOutcome:\" + httpStatus +\n+            (isNotBlank(caseType) ? \", caseType:\" + caseType : \"\") +\n+            (isNotBlank(jurisdiction) ? \", jurisdiction:\" + jurisdiction : \"\") +\n+            (isNotBlank(eventSelected) ? \", eventSelected:\" + eventSelected : \"\") +\n+           (isNotBlank(targetIdamId) ? \", idamIdOfTarget:\" + targetIdamId : \"\") +\n+//            (isNotBlank(listOfCaseTypes) ? \", listOfCaseTypes:\" + listOfCaseTypes : \"\") +\n+            (targetCaseRoles != null && !targetCaseRoles.isEmpty() ? \", targetCaseRoles:\" +\n+                targetCaseRoles.stream().map(String::toString).collect(Collectors.joining(\",\")) : \"\") +\n+            (isNotBlank(requestId) ? \", X-Request-ID:\" + requestId : \"\") +\n+            '}';\n+    }\n+\n+    public String formattedAuditData() {\n+        return  ReflectionToStringBuilder.toString(this, JSON_STYLE, false, false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 166}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzI1OTU4", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397325958", "createdAt": "2020-04-21T13:24:48Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzoyNDo0OVrOGJFjQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzoyNDo0OVrOGJFjQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE4MTMxNA==", "bodyText": "in terms of design I wouldn't pass down web level classes like HttpServletRequest to the AuditService. Ideally AuditService should not be tied to any web class.\nSame way as you don't pass down HttpServletRequest objects to other type of Services classes or *Operation classes\nWe could have the interceptor parsing the request, adding all that info to the context, and invoking the AuditService with the context only so the AuditService knows nothing about HttpServletRequest  and HttpServletResponse", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412181314", "createdAt": "2020-04-21T13:24:49Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/AuditInterceptor.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+import org.springframework.lang.Nullable;\n+import org.springframework.web.method.HandlerMethod;\n+import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n+import uk.gov.hmcts.ccd.auditlog.aop.AuditContext;\n+import uk.gov.hmcts.ccd.auditlog.aop.AuditContextHolder;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+public class AuditInterceptor extends HandlerInterceptorAdapter {\n+\n+    private final AuditService auditService;\n+\n+    public AuditInterceptor(AuditService auditService) {\n+        this.auditService = auditService;\n+    }\n+\n+    @Override\n+    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler,\n+                           @Nullable Exception ex) {\n+        if (handler instanceof HandlerMethod && ((HandlerMethod) handler).hasMethodAnnotation(LogAudit.class)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzMyNjY0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397332664", "createdAt": "2020-04-21T13:32:04Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzozMjowNVrOGJF6NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzozMjowNVrOGJF6NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE4NzE4OA==", "bodyText": "out of coursiosity when is it that auditContext can be null?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412187188", "createdAt": "2020-04-21T13:32:05Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/AuditService.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.context.annotation.Lazy;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.auditlog.aop.AuditContext;\n+import uk.gov.hmcts.ccd.data.SecurityUtils;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import java.time.Clock;\n+import java.time.LocalDateTime;\n+\n+import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE_TIME;\n+\n+@Service\n+public class AuditService {\n+\n+    private final Clock clock;\n+    private final SecurityUtils securityUtils;\n+    private final UserRepository userRepository;\n+    private final AuditRepository auditRepository;\n+\n+    public AuditService(@Qualifier(\"utcClock\") final Clock clock,\n+                        @Qualifier(CachedUserRepository.QUALIFIER) final UserRepository userRepository,\n+                        @Lazy final SecurityUtils securityUtils, final AuditRepository auditRepository) {\n+        this.clock = clock;\n+        this.userRepository = userRepository;\n+        this.securityUtils = securityUtils;\n+        this.auditRepository = auditRepository;\n+    }\n+\n+    public void audit(HttpServletRequest request, int httpResponseStatus, AuditContext auditContext) {\n+        AuditEntry entry = new AuditEntry();\n+\n+        String formattedDate = LocalDateTime.now(clock).format(ISO_LOCAL_DATE_TIME);\n+\n+        entry.setDateTime(formattedDate);\n+        entry.setHttpStatus(httpResponseStatus);\n+        entry.setHttpMethod(request.getMethod());\n+        entry.setPath(request.getRequestURI());\n+        entry.setIdamId(userRepository.getUser().getEmail());\n+        entry.setInvokingService(securityUtils.getServiceName());\n+\n+        if (auditContext != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzM3ODY5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397337869", "createdAt": "2020-04-21T13:37:48Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzozNzo0OFrOGJGLaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzozNzo0OFrOGJGLaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE5MTU5NQ==", "bodyText": "with this design it's not possible from the code to distinguish what properties we are logging for each operation type. I think this is not ideal.\nI wonder whether it's possible to have an AuditEntry superclass with one implementation for each operation type that contains properties only relevant to that operation. So for example CaseSearchAudit, CaseUpdateAudit....", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412191595", "createdAt": "2020-04-21T13:37:48Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/AuditEntry.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import static org.apache.commons.lang3.StringUtils.isNotBlank;\n+import static org.apache.commons.lang3.builder.ToStringStyle.JSON_STYLE;\n+\n+public class AuditEntry {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzQxMjU1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397341255", "createdAt": "2020-04-21T13:41:30Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo0MTozMVrOGJGXFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo0MTozMVrOGJGXFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE5NDU4MA==", "bodyText": "I think the AuditService could be injected with a AuditLogFormatter which is responsible for formatting the audit string. Then the Repository just logs the formatted entry", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412194580", "createdAt": "2020-04-21T13:41:31Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/AuditRepository.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class AuditRepository {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(AuditRepository.class);\n+\n+    public void save(final AuditEntry auditEntry) {\n+        LOG.info(auditEntry.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzQ2NjA0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397346604", "createdAt": "2020-04-21T13:47:14Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo0NzoxNFrOGJGpRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo0NzoxNFrOGJGpRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE5OTIzOA==", "bodyText": "since we're using AOP I'll request some thorough performance testing on this ticket to evaluate the impact on the CCD performance. Will add a comment on the ticket", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412199238", "createdAt": "2020-04-21T13:47:14Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/aop/AuditAspect.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package uk.gov.hmcts.ccd.auditlog.aop;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.aspectj.lang.JoinPoint;\n+import org.aspectj.lang.ProceedingJoinPoint;\n+import org.aspectj.lang.annotation.Around;\n+import org.aspectj.lang.annotation.Aspect;\n+import org.aspectj.lang.reflect.MethodSignature;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.expression.AnnotatedElementKey;\n+import org.springframework.expression.EvaluationContext;\n+import org.springframework.expression.spel.SpelEvaluationException;\n+import org.springframework.stereotype.Component;\n+import uk.gov.hmcts.ccd.auditlog.LogAudit;\n+\n+import java.lang.reflect.Method;\n+import java.util.List;\n+\n+@Aspect\n+@Component\n+public class AuditAspect {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzUyOTI4", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397352928", "createdAt": "2020-04-21T13:53:48Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo1Mzo0OVrOGJG-uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo1Mzo0OVrOGJG-uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIwNDczMQ==", "bodyText": "ThreadLocal are a bit tricky and could cause mem leaks. For my knowledge, why we need to use it here? what problem is this addressing?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412204731", "createdAt": "2020-04-21T13:53:49Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/aop/AuditContextHolder.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package uk.gov.hmcts.ccd.auditlog.aop;\n+\n+public class AuditContextHolder {\n+\n+    private AuditContextHolder() {}\n+\n+    private static final InheritableThreadLocal<AuditContext> threadLocal = new InheritableThreadLocal<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzU1ODQ4", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397355848", "createdAt": "2020-04-21T13:56:51Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo1Njo1MVrOGJHI_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo1Njo1MVrOGJHI_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIwNzM1Ng==", "bodyText": "mmm don't understand why this operation is being logged as a search", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412207356", "createdAt": "2020-04-21T13:56:51Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/std/CallbackEndpoint.java", "diffHunk": "@@ -30,6 +32,7 @@ public CallbackEndpoint(final PrintableDocumentListOperation printableDocumentLi\n     @ApiResponses(value = {\n         @ApiResponse(code = 200, message = \"Printable documents list retrieved\")\n     })\n+    @LogAudit(operationType = OperationType.SEARCH_CASE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzU3NTQ1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397357545", "createdAt": "2020-04-21T13:58:34Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo1ODozNVrOGJHOtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo1ODozNVrOGJHOtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIwODgyMA==", "bodyText": "we said to ignore this endpoint. If we want to log it I don't think we should log it as a search. Search case should be only for the search api I'd say", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412208820", "createdAt": "2020-04-21T13:58:35Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/std/CaseAccessEndpoint.java", "diffHunk": "@@ -33,6 +35,7 @@ public CaseAccessEndpoint(CaseAccessOperation caseAccessOperation) {\n         @ApiResponse(code = 200, message = \"List of cases ids found\"),\n         @ApiResponse(code = 400, message = \"Invalid case ID\")\n     })\n+    @LogAudit(operationType = OperationType.SEARCH_CASE)\n     public List<String> findCaseIdsGivenUserIdHasAccessTo(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzU4OTkx", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397358991", "createdAt": "2020-04-21T14:00:02Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDowMDowMlrOGJHTQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDowMDowMlrOGJHTQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIwOTk4Nw==", "bodyText": "I think we agreed to have GRANT_CASE_ACCESS, REVOKE_CASE_ACCESS for these 2 v1 endpoints, and UDPATE_CASE_ACCESS for the v2 endpoint.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412209987", "createdAt": "2020-04-21T14:00:02Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/std/CaseAccessEndpoint.java", "diffHunk": "@@ -58,6 +61,7 @@ public CaseAccessEndpoint(CaseAccessOperation caseAccessOperation) {\n         @ApiResponse(code = 400, message = \"Invalid case ID\")\n     })\n     @ResponseStatus(value = HttpStatus.CREATED)\n+    @LogAudit(operationType = OperationType.UPDATE_CASE_ACCESS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzYwNzc4", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397360778", "createdAt": "2020-04-21T14:01:53Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDowMTo1M1rOGJHZng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDowMTo1M1rOGJHZng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIxMTYxNA==", "bodyText": "this endpoint is not used by the UI when the user is viewing a case. So the name of the operation might be a bit misleading. I wonder whether we want to introduce a separate operation name for when the case is being accessed programmatically like in this case. Rather than by the UI. I'll ask the Lee and the BAs", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412211614", "createdAt": "2020-04-21T14:01:53Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/std/CaseDetailsEndpoint.java", "diffHunk": "@@ -112,6 +114,7 @@ public CaseDetailsEndpoint(@Qualifier(CreatorGetCaseOperation.QUALIFIER) final G\n         @ApiResponse(code = 400, message = \"Invalid case ID\"),\n         @ApiResponse(code = 404, message = \"No case found for the given ID\")\n     })\n+    @LogAudit(operationType = OperationType.VIEW_CASE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzY2Mzg5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397366389", "createdAt": "2020-04-21T14:07:36Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDowNzozNlrOGJHs-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDowNzozNlrOGJHs-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIxNjU3MA==", "bodyText": "I think we agreed we wouldn't log these start event operations:\nHi @Mario We have few questions for Log and Audit\n1.) Do we need to log this one: Case access API - GET /caseworkers/{uid}/jurisdictions/{jid}/case-types/{ctid}/cases/ids\n2.) Do we need to log middle case creation steps, like Standard case API - GET /caseworkers/{uid}/jurisdictions/{jid}/case-types/{ctid}/event-triggers/{etid}/token  Those are trigerred on starting a new event (for Update or Create case), but not when we persist the case on the Submit.\n\nHi @Rafal Kalita 1) no 2) no \n\nIt's been implemented as yes and yes lol", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412216570", "createdAt": "2020-04-21T14:07:36Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/std/CaseDetailsEndpoint.java", "diffHunk": "@@ -160,6 +164,7 @@ public CaseDetails findCaseDetailsForCitizen(\n         @ApiResponse(code = 404, message = \"No case found for the given ID\"),\n         @ApiResponse(code = 422, message = \"Process could not be started\")\n     })\n+    @LogAudit(operationType = OperationType.CREATE_CASE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzY5Njg3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397369687", "createdAt": "2020-04-21T14:10:53Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxMDo1M1rOGJH3yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxMDo1M1rOGJH3yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIxOTMzNw==", "bodyText": "we agreed not to log this. mmm how come we have done all the opposite of what we agreed? lol", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412219337", "createdAt": "2020-04-21T14:10:53Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/std/CaseDetailsEndpoint.java", "diffHunk": "@@ -308,6 +318,7 @@ public CaseDetails saveCaseDetailsForCitizen(\n         @ApiResponse(code = 422, message = \"Field validation failed\"),\n         @ApiResponse(code = 409, message = \"Case reference not unique\")\n     })\n+    @LogAudit(operationType = OperationType.CREATE_CASE)\n     public JsonNode validateCaseDetails(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3Mzc0MDcy", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397374072", "createdAt": "2020-04-21T14:15:14Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxNToxNFrOGJIGmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxNToxNFrOGJIGmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIyMzEyOA==", "bodyText": "don't think it's correct to classify this as a search. There is not requirement to log this in the design. We could ignore or if we want to log it then we need  a more suitable operation name, like CASE_DOCUMENTS_ACCESS?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412223128", "createdAt": "2020-04-21T14:15:14Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/std/CaseDetailsEndpoint.java", "diffHunk": "@@ -385,6 +398,7 @@ public CaseDetails createCaseEventForCitizen(\n     @ApiResponses(value = {\n         @ApiResponse(code = 200, message = \"Documents list for the given case id\")\n     })\n+    @LogAudit(operationType = OperationType.SEARCH_CASE)\n     public List<Document> getDocumentsForCase(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 102}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3Mzc2MDMy", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397376032", "createdAt": "2020-04-21T14:17:10Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxNzoxMFrOGJINPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxNzoxMFrOGJINPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIyNDgzMQ==", "bodyText": "I thing we can ignore this. We are already logging the search operation in searchCasesForCaseWorkers and searchCasesForCitizens. If we log here as well every user search would be logged twice which would be misleading. For one use operation I think it's better to have 1 log audit only.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412224831", "createdAt": "2020-04-21T14:17:10Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/std/CaseDetailsEndpoint.java", "diffHunk": "@@ -437,6 +453,7 @@ public CaseDetails createCaseEventForCitizen(\n     @ApiOperation(value = \"Get the pagination metadata for a case data search\")\n     @ApiResponses(value = {\n         @ApiResponse(code = 200, message = \"Pagination metadata for the given search criteria\")})\n+    @LogAudit(operationType = OperationType.SEARCH_CASE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 125}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3Mzc4MjA2", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397378206", "createdAt": "2020-04-21T14:19:19Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxOToxOVrOGJIUpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxOToxOVrOGJIUpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIyNjcyNQ==", "bodyText": "ignore please", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412226725", "createdAt": "2020-04-21T14:19:19Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/std/CaseDetailsEndpoint.java", "diffHunk": "@@ -449,6 +466,7 @@ public PaginatedSearchMetadata searchCasesMetadataForCaseworkers(@PathVariable(\"\n     @ApiOperation(value = \"Get the pagination metadata for a case data search\")\n     @ApiResponses(value = {\n         @ApiResponse(code = 200, message = \"Pagination metadata for the given search criteria\")})\n+    @LogAudit(operationType = OperationType.SEARCH_CASE)\n     public PaginatedSearchMetadata searchCasesMetadataForCitizens(@PathVariable(\"uid\") final String uid,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 134}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3Mzc4ODY2", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397378866", "createdAt": "2020-04-21T14:19:58Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxOTo1OFrOGJIW0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxOTo1OFrOGJIW0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIyNzI4Mw==", "bodyText": "UPDATE_CASE?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412227283", "createdAt": "2020-04-21T14:19:58Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/std/DraftsEndpoint.java", "diffHunk": "@@ -113,6 +117,7 @@ public DraftResponse updateDraftForCaseWorker(\n     @ApiResponses(value = {\n         @ApiResponse(code = 200, message = \"A displayable draft\")\n     })\n+    @LogAudit(operationType = OperationType.CREATE_CASE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3Mzc5NTMw", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397379530", "createdAt": "2020-04-21T14:20:40Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyMDo0MVrOGJIZKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyMDo0MVrOGJIZKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIyNzg4Mw==", "bodyText": "rename to AuditOperationType please", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412227883", "createdAt": "2020-04-21T14:20:41Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/OperationType.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+public enum OperationType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzgwNTE4", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397380518", "createdAt": "2020-04-21T14:21:35Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyMTozNlrOGJIcmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyMTozNlrOGJIcmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIyODc2Mg==", "bodyText": "this is not a search, it's  a  case view. VIEW_CASE?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412228762", "createdAt": "2020-04-21T14:21:36Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/ui/QueryEndpoint.java", "diffHunk": "@@ -218,6 +193,7 @@ public SearchResultView searchNew(@PathVariable(\"jid\") final String jurisdiction\n     @ApiResponses(value = {\n         @ApiResponse(code = 200, message = \"A displayable case\")\n     })\n+    @LogAudit(operationType = OperationType.SEARCH_CASE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzgyMjA2", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397382206", "createdAt": "2020-04-21T14:23:21Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyMzoyMVrOGJIiUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyMzoyMVrOGJIiUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzMDIyNA==", "bodyText": "better to introduce a VIEW_CASE_HISTORY operation", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412230224", "createdAt": "2020-04-21T14:23:21Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/ui/QueryEndpoint.java", "diffHunk": "@@ -290,6 +269,7 @@ public CaseEventTrigger getEventTriggerForDraft(@PathVariable(\"uid\") String user\n         @ApiResponse(code = 200, message = \"Displayable case data\"),\n         @ApiResponse(code = 404, message = \"Invalid jurisdiction/case type/case reference or event id\")\n     })\n+    @LogAudit(operationType = OperationType.VIEW_CASE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 140}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3Mzg0MDQ5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397384049", "createdAt": "2020-04-21T14:25:15Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyNToxNVrOGJIokw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyNToxNVrOGJIokw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzMTgyNw==", "bodyText": "either we ignore, or we create a better operation name I'd suggest", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412231827", "createdAt": "2020-04-21T14:25:15Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/DocumentController.java", "diffHunk": "@@ -66,6 +68,7 @@ public DocumentController(\n             message = V2.Error.PRINTABLE_DOCUMENTS_ENDPOINT_DOWN\n         )\n     })\n+    @LogAudit(operationType = OperationType.VIEW_CASE, caseId = \"#caseId\")\n     public ResponseEntity<DocumentsResource> getDocuments(@PathVariable(\"caseId\") String caseId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3Mzg0NDcz", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397384473", "createdAt": "2020-04-21T14:25:40Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyNTo0MFrOGJIp9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyNTo0MFrOGJIp9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzMjE4MA==", "bodyText": "better to ignore as we agreed", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412232180", "createdAt": "2020-04-21T14:25:40Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/StartTriggerController.java", "diffHunk": "@@ -61,6 +63,8 @@ public StartTriggerController(\n             message = EVENT_TRIGGER_NOT_FOUND\n         )\n     })\n+    @LogAudit(operationType = OperationType.CREATE_CASE, jurisdiction = \"#result.body.caseDetails.jurisdiction\",\n+        caseType = \"#caseTypeId\", eventName = \"#triggerId\")\n     public ResponseEntity<StartTriggerResource> getStartCaseTrigger(@PathVariable(\"caseTypeId\") String caseTypeId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3Mzg0NjY0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397384664", "createdAt": "2020-04-21T14:25:52Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyNTo1M1rOGJIqhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyNTo1M1rOGJIqhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzMjMyNg==", "bodyText": "we can ignore as we agreed", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412232326", "createdAt": "2020-04-21T14:25:53Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/StartTriggerController.java", "diffHunk": "@@ -104,6 +108,8 @@ public StartTriggerController(\n             message = EVENT_TRIGGER_NOT_FOUND\n         )\n     })\n+    @LogAudit(operationType = OperationType.UPDATE_CASE, jurisdiction = \"#result.body.caseDetails.jurisdiction\",\n+        caseType = \"#result.body.caseDetails.caseTypeId\", eventName = \"#triggerId\", caseId = \"#caseId\")\n     public ResponseEntity<StartTriggerResource> getStartEventTrigger(@PathVariable(\"caseId\") String caseId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3Mzg2NTU0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397386554", "createdAt": "2020-04-21T14:27:45Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyNzo0NlrOGJIxFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyNzo0NlrOGJIxFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzNDAwNg==", "bodyText": "I'd suggest VIEW_CASE_HISTORY", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r412234006", "createdAt": "2020-04-21T14:27:46Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseController.java", "diffHunk": "@@ -108,6 +113,8 @@ public UICaseController(\n             message = \"Case event not found\"\n         )\n     })\n+    @LogAudit(operationType = VIEW_CASE, caseId = \"#caseId\", eventName = \"#result.body.event.eventId\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3Mzg4NDM0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-397388434", "createdAt": "2020-04-21T14:29:32Z", "commit": {"oid": "23349ce04bb8b4cffe870dec50d0a476eb73a086"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "964ec1f4e18aac3b88059f5b0c37cafc5717a65a", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/964ec1f4e18aac3b88059f5b0c37cafc5717a65a", "committedDate": "2020-04-21T14:37:00Z", "message": "RDM-8051 remove v1 endpoint logging - there will be a separate PR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8214c3912eae3e2019ab32439f287224fc4ab1f", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/c8214c3912eae3e2019ab32439f287224fc4ab1f", "committedDate": "2020-04-21T17:45:36Z", "message": "RDM-8051 CaseAccessEndpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c1be43cad815a17b913e229d16d2354fc146c83", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/3c1be43cad815a17b913e229d16d2354fc146c83", "committedDate": "2020-04-22T07:29:42Z", "message": "RDM-8051 - minor refactoring and clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1650864ba4a8b55a6af9359ad3619ac7a7919f96", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/1650864ba4a8b55a6af9359ad3619ac7a7919f96", "committedDate": "2020-04-22T07:34:00Z", "message": "RDM-8051 - minor refactoring and clean up\n\n# Conflicts:\n#\tsrc/main/java/uk/gov/hmcts/ccd/auditlog/AuditEntry.java\n#\tsrc/main/java/uk/gov/hmcts/ccd/auditlog/AuditService.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89c34ff8aaf71a3fbfa4d5810bdc2ba42b225600", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/89c34ff8aaf71a3fbfa4d5810bdc2ba42b225600", "committedDate": "2020-04-22T09:35:12Z", "message": "RDM-8051 Remove v1 property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0e94a8563b0252101add4e13e31ffc464295631", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/d0e94a8563b0252101add4e13e31ffc464295631", "committedDate": "2020-04-22T10:00:53Z", "message": "RDM-8051 Rename OperationType to AuditOperationType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9804e39845e42e8bb2e3c664a568828badab393", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e9804e39845e42e8bb2e3c664a568828badab393", "committedDate": "2020-04-22T10:01:21Z", "message": "RDM-8051 Rename OperationType to AuditOperationType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d092ef0379fc0807b0e65c7d565a305b1c493de", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/8d092ef0379fc0807b0e65c7d565a305b1c493de", "committedDate": "2020-04-22T10:07:25Z", "message": "RDM-8051 remove LogAndAudit from the StartTriggerController"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a8f962089bd0dda4d19cee7d02a0dd077aa215f", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/9a8f962089bd0dda4d19cee7d02a0dd077aa215f", "committedDate": "2020-04-22T10:12:26Z", "message": "RDM-8051 Change GET events from VIEW_CASE to VIEW_CASE_HISTORY"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4841ab2af29258967fb1473edcbfc331406e3c6f", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/4841ab2af29258967fb1473edcbfc331406e3c6f", "committedDate": "2020-04-22T10:41:15Z", "message": "RDM-8051 do not ignore FORBIDDEN, UNAUTHORIZED errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89388626c13384d4caa6a0a97737b7a9317fcdf0", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/89388626c13384d4caa6a0a97737b7a9317fcdf0", "committedDate": "2020-04-22T13:58:23Z", "message": "RDM-8051 do not log DocumentsController"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41a5a15d9b5cc843fbbd943dd5e7a5b2602b651a", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/41a5a15d9b5cc843fbbd943dd5e7a5b2602b651a", "committedDate": "2020-04-22T14:05:43Z", "message": "RDM-8051 do not log GET /documents"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41adb948d3456d439a28ef01e8543336070a35ef", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/41adb948d3456d439a28ef01e8543336070a35ef", "committedDate": "2020-04-22T14:09:28Z", "message": "RDM-8051 Rename VIEW_CASE to CASE_ACCESSED"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MjM5NzU3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-398239757", "createdAt": "2020-04-22T14:18:45Z", "commit": {"oid": "41adb948d3456d439a28ef01e8543336070a35ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e40a85ac19103518a978343acdad573647fc5263", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e40a85ac19103518a978343acdad573647fc5263", "committedDate": "2020-04-22T14:23:42Z", "message": "RDM-8051 Update CaseAccessEndpoint LogAudit OperationType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d02c5825f9ccee12e3dd2e399b7218aadb71fc6a", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/d02c5825f9ccee12e3dd2e399b7218aadb71fc6a", "committedDate": "2020-04-22T14:34:47Z", "message": "Merge branch 'RDM-8051' into RDM-8051-v1\n\n# Conflicts:\n#\tsrc/main/java/uk/gov/hmcts/ccd/auditlog/AuditInterceptor.java\n#\tsrc/main/java/uk/gov/hmcts/ccd/auditlog/AuditOperationType.java\n#\tsrc/main/java/uk/gov/hmcts/ccd/auditlog/AuditService.java\n#\tsrc/main/java/uk/gov/hmcts/ccd/auditlog/aop/AuditContext.java\n#\tsrc/main/java/uk/gov/hmcts/ccd/endpoint/std/CaseAccessEndpoint.java\n#\tsrc/main/java/uk/gov/hmcts/ccd/endpoint/std/CaseDetailsEndpoint.java\n#\tsrc/main/java/uk/gov/hmcts/ccd/endpoint/std/CaseSearchEndpoint.java\n#\tsrc/main/java/uk/gov/hmcts/ccd/endpoint/ui/QueryEndpoint.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b1e7f71e8a9988cf5596e19d27ac0f7ec0daba7", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/9b1e7f71e8a9988cf5596e19d27ac0f7ec0daba7", "committedDate": "2020-04-22T14:37:29Z", "message": "RDM-8051 Fix the error after merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1c26896cfe7e41b21179d4a121a1a6b4084837b", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/f1c26896cfe7e41b21179d4a121a1a6b4084837b", "committedDate": "2020-04-22T14:44:46Z", "message": "RDM-8051 Updated OperationType to AuditOperationType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2dbc01dc8a92cb19cb2a4538076aa9b3801d986", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/a2dbc01dc8a92cb19cb2a4538076aa9b3801d986", "committedDate": "2020-04-22T17:22:58Z", "message": "RDM-8051 LogAudit in CaseDetailsEndpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83262b5c49e1b84706bdfa88edb5618b49441487", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/83262b5c49e1b84706bdfa88edb5618b49441487", "committedDate": "2020-04-22T17:39:43Z", "message": "RDM-8051 LogAudit in CaseDetailsEndpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f0d3266d9798d4034c0f18ff76ed585cff60b13", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/3f0d3266d9798d4034c0f18ff76ed585cff60b13", "committedDate": "2020-04-22T18:32:22Z", "message": "RDM-8051 CaseDetailsEndpointIT refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0a1c87aa94d93650c2bb2820ac8ad65f0a4b318", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e0a1c87aa94d93650c2bb2820ac8ad65f0a4b318", "committedDate": "2020-04-23T07:11:51Z", "message": "RDM-8051 - dateTime field and unit tests for interceptor, formatter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4OTYzMDM3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-398963037", "createdAt": "2020-04-23T10:22:58Z", "commit": {"oid": "e0a1c87aa94d93650c2bb2820ac8ad65f0a4b318"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMDoyMjo1OVrOGKiDRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMDoyMjo1OVrOGKiDRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY5NjgzNg==", "bodyText": "this should be a config property rather than hardcoded?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r413696836", "createdAt": "2020-04-23T10:22:59Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/AuditInterceptor.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+import com.google.common.collect.Lists;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.lang.Nullable;\n+import org.springframework.web.method.HandlerMethod;\n+import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n+import uk.gov.hmcts.ccd.auditlog.aop.AuditAspect;\n+import uk.gov.hmcts.ccd.auditlog.aop.AuditContext;\n+import uk.gov.hmcts.ccd.auditlog.aop.AuditContextHolder;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.util.List;\n+\n+import static org.springframework.http.HttpStatus.NOT_FOUND;\n+\n+public class AuditInterceptor extends HandlerInterceptorAdapter {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(AuditAspect.class);\n+\n+    public static final String REQUEST_ID = \"request-id\";\n+\n+    private final AuditService auditService;\n+\n+    private static final List<HttpStatus> IGNORED_STATUSES = Lists.newArrayList(NOT_FOUND);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0a1c87aa94d93650c2bb2820ac8ad65f0a4b318"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4OTY3MzI0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-398967324", "createdAt": "2020-04-23T10:29:08Z", "commit": {"oid": "e0a1c87aa94d93650c2bb2820ac8ad65f0a4b318"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMDoyOTowOFrOGKiSRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMDoyOTowOFrOGKiSRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcwMDY3Ng==", "bodyText": "mmm did we say to call this \"Update case access permissions\"?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r413700676", "createdAt": "2020-04-23T10:29:08Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/AuditOperationType.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+public enum AuditOperationType {\n+    CREATE_CASE(\"Create case\"),\n+    UPDATE_CASE(\"Update case\"),\n+    CASE_ACCESSED(\"Case Accessed\"),\n+    SEARCH_CASE(\"Search case\"),\n+    UPDATE_CASE_ACCESS(\"Update case access\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0a1c87aa94d93650c2bb2820ac8ad65f0a4b318"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4OTg1Njgy", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#pullrequestreview-398985682", "createdAt": "2020-04-23T10:56:31Z", "commit": {"oid": "e0a1c87aa94d93650c2bb2820ac8ad65f0a4b318"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMDo1NjozMVrOGKjUBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMDo1NjozMVrOGKjUBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcxNzUxMA==", "bodyText": "we should use dependency injection for AuditRepository", "url": "https://github.com/hmcts/ccd-data-store-api/pull/909#discussion_r413717510", "createdAt": "2020-04-23T10:56:31Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/auditlog/AuditService.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package uk.gov.hmcts.ccd.auditlog;\n+\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.context.annotation.Lazy;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.auditlog.aop.AuditContext;\n+import uk.gov.hmcts.ccd.data.SecurityUtils;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+\n+import java.time.Clock;\n+import java.time.LocalDateTime;\n+\n+import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE_TIME;\n+\n+@Service\n+public class AuditService {\n+\n+    private final Clock clock;\n+    private final SecurityUtils securityUtils;\n+    private final UserRepository userRepository;\n+    private final AuditRepository auditRepository;\n+\n+    public AuditService(@Qualifier(\"utcClock\") final Clock clock,\n+                        @Qualifier(CachedUserRepository.QUALIFIER) final UserRepository userRepository,\n+                        @Lazy final SecurityUtils securityUtils, final AuditRepository auditRepository) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0a1c87aa94d93650c2bb2820ac8ad65f0a4b318"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d4bf1b4bc525013f9ee2137f14f68e7dd993ffd", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/2d4bf1b4bc525013f9ee2137f14f68e7dd993ffd", "committedDate": "2020-04-23T12:22:09Z", "message": "RDM-8051 - review comment - auditRepository interface."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2937, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}