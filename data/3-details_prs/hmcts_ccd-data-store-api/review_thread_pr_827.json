{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMjQxMzQy", "number": 827, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyODo0OFrODjE1QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyOTowN1rODjE1mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTA1OTIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CompoundAccessControlService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyODo0OVrOFurdXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyODo0OVrOFurdXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5MDg0NA==", "bodyText": "This if getting too complicated. Let's move these null checks into a separate private method:\nif (field.isCompoundFieldType() && notNulls(existingNode, newNode, field.getId()) && ....)", "url": "https://github.com/hmcts/ccd-data-store-api/pull/827#discussion_r384490844", "createdAt": "2020-02-26T13:28:49Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CompoundAccessControlService.java", "diffHunk": "@@ -133,7 +133,9 @@ private boolean isCurrentNodeOrAnyChildNodeDeletedWithoutAccess(final JsonNode n\n         if (correspondingNewNode.isPresent()) {\n             JsonNode newNode = correspondingNewNode.get();\n             for (CaseField field : caseField.getFieldType().getCollectionFieldType().getComplexFields()) {\n-                if (field.isCompoundFieldType() && existingNode.get(VALUE) != null && existingNode.get(VALUE).get(field.getId()) != null\n+                if (field.isCompoundFieldType()\n+                    && existingNode.get(VALUE) != null && existingNode.get(VALUE).get(field.getId()) != null\n+                    && newNode.get(VALUE) != null && newNode.get(VALUE).get(field.getId()) != null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf60b884712a46f8f6ec5db9e0d6e17dff93db21"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTA2MDA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CompoundAccessControlService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyOTowN1rOFurd8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyOTowN1rOFurd8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5MDk5NA==", "bodyText": "Unit Tests?\nIntegration Tests?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/827#discussion_r384490994", "createdAt": "2020-02-26T13:29:07Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CompoundAccessControlService.java", "diffHunk": "@@ -133,7 +133,9 @@ private boolean isCurrentNodeOrAnyChildNodeDeletedWithoutAccess(final JsonNode n\n         if (correspondingNewNode.isPresent()) {\n             JsonNode newNode = correspondingNewNode.get();\n             for (CaseField field : caseField.getFieldType().getCollectionFieldType().getComplexFields()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf60b884712a46f8f6ec5db9e0d6e17dff93db21"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3889, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}