{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5OTc5NDg3", "number": 851, "title": "RDM-7692 - DateTime Display Formatting", "bodyText": "JIRA link (if applicable)\nhttps://tools.hmcts.net/jira/browse/RDM-7692\nChange description\nDateTime Display Formatting\nDoes this PR introduce a breaking change? (check one with \"x\")\n[ ] Yes\n[x] No", "createdAt": "2020-03-17T17:36:25Z", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851", "merged": true, "mergeCommit": {"oid": "b4f49ac5bbae5bca7e9f713489494830edf34205"}, "closed": true, "closedAt": "2020-04-15T14:24:10Z", "author": {"login": "danlysiak"}, "timelineItems": {"totalCount": 54, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOPIcKgH2gAyMzg5OTc5NDg3OjhkY2Y0ZWIxNjFjMmViODJjNjUxODdmOTYyZjVhMGZjOGNlMzVhNmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX3qYwgH2gAyMzg5OTc5NDg3OmE4ZWUxMTE2MzEzODU3MGQzZThhNTI4YmNiNWQyNzBmNTgzYjE3YTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8dcf4eb161c2eb82c65187f962f5a0fc8ce35a6f", "author": {"user": {"login": "simchandramouly-hmcts", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/8dcf4eb161c2eb82c65187f962f5a0fc8ce35a6f", "committedDate": "2020-03-16T14:38:49Z", "message": "update to DateTimeFormatParser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b534a43d4ced94ee73c81ac43095ee79c83a118", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/1b534a43d4ced94ee73c81ac43095ee79c83a118", "committedDate": "2020-03-17T14:32:42Z", "message": "Merge branch 'RDM-7630' into RDM-7692"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a544a963bc276e99cfd9e119bd8d7d56808bb4fb", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/a544a963bc276e99cfd9e119bd8d7d56808bb4fb", "committedDate": "2020-03-17T17:31:01Z", "message": "RDM-7692 - Initial functionality"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81dab26d46c14ae631706fa8ee83b5d711dacc68", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/81dab26d46c14ae631706fa8ee83b5d711dacc68", "committedDate": "2020-03-18T12:16:22Z", "message": "Merge branch 'RDM-7630' into RDM-7692"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c36866b5b2485925b25e2d9b50e18c6a116d7fe7", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/c36866b5b2485925b25e2d9b50e18c6a116d7fe7", "committedDate": "2020-03-20T09:33:45Z", "message": "Support for complex type overrides; rename to formatted_value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5400186a1b506d62dd02859850cf063ac53cf350", "author": {"user": {"login": "simchandramouly-hmcts", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/5400186a1b506d62dd02859850cf063ac53cf350", "committedDate": "2020-03-20T17:54:23Z", "message": "DateTimeFormatParserTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74d37003a74c8d8b6ad6063688b8d2255047f707", "author": {"user": {"login": "simchandramouly-hmcts", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/74d37003a74c8d8b6ad6063688b8d2255047f707", "committedDate": "2020-03-20T17:54:45Z", "message": "Merge remote-tracking branch 'origin/RDM-7692' into RDM-7692"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a821060c503e267e4e136e933a3dd7990b75e76c", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/a821060c503e267e4e136e933a3dd7990b75e76c", "committedDate": "2020-03-22T15:36:21Z", "message": "Merge branch 'RDM-7630' into RDM-7692"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0612b3e41728e1b153e3641026b44854b1e96a5", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/c0612b3e41728e1b153e3641026b44854b1e96a5", "committedDate": "2020-03-22T22:31:21Z", "message": "Unit tests and minor refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/8e8f6cb84763a0137ddc1f67375f925406b31646", "committedDate": "2020-03-22T23:39:10Z", "message": "Update FT data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "175a662112b2cdcc5ba99435df0e9a8952530b46", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/175a662112b2cdcc5ba99435df0e9a8952530b46", "committedDate": "2020-03-23T08:41:31Z", "message": "RDM-7694 - DCP for workbasket and search input/results"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNjI3ODEz", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#pullrequestreview-380627813", "createdAt": "2020-03-24T19:23:28Z", "commit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOToyMzoyOVrOF6_quA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTozNDo1NFrOF7ADHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQwNDg1Ng==", "bodyText": "could you add a description ? @apimodel(description = \"\")", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#discussion_r397404856", "createdAt": "2020-03-24T19:23:29Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/definition/WizardPageComplexFieldOverride.java", "diffHunk": "@@ -4,6 +4,7 @@\n import io.swagger.annotations.ApiModel;\n \n import java.io.Serializable;\n+import java.util.Optional;\n \n @ApiModel(description = \"\")\n public class WizardPageComplexFieldOverride implements Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQwNzM2NQ==", "bodyText": "public CaseViewField execute(CaseViewField caseViewField)  and\npublic CaseViewField execute(CaseViewField caseViewField, WizardPageField wizardPageField)\nare very similar in their implementation .   Can you create a generic common method ?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#discussion_r397407365", "createdAt": "2020-03-24T19:28:13Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/processor/CaseViewFieldProcessor.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package uk.gov.hmcts.ccd.domain.service.processor;\n+\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CaseViewField;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CaseViewFieldBuilder;\n+import uk.gov.hmcts.ccd.domain.model.definition.WizardPageField;\n+import uk.gov.hmcts.ccd.domain.types.BaseType;\n+\n+import static uk.gov.hmcts.ccd.domain.model.definition.FieldType.COLLECTION;\n+import static uk.gov.hmcts.ccd.domain.model.definition.FieldType.COMPLEX;\n+\n+public abstract class CaseViewFieldProcessor extends FieldProcessor {\n+\n+    public CaseViewFieldProcessor(CaseViewFieldBuilder caseViewFieldBuilder) {\n+        super(caseViewFieldBuilder);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQwNzk2Mw==", "bodyText": "avoid using *.  here is an example of how to set intelij  https://stackoverflow.com/questions/3348816/intellij-never-use-wildcard-imports#3348855", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#discussion_r397407963", "createdAt": "2020-03-24T19:29:15Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/processor/DateTimeValueFormatter.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package uk.gov.hmcts.ccd.domain.service.processor;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.fasterxml.jackson.databind.node.TextNode;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CaseViewField;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CaseViewFieldBuilder;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CommonField;\n+import uk.gov.hmcts.ccd.domain.model.definition.DisplayContext;\n+import uk.gov.hmcts.ccd.domain.model.definition.WizardPageComplexFieldOverride;\n+import uk.gov.hmcts.ccd.domain.types.BaseType;\n+import uk.gov.hmcts.ccd.domain.types.CollectionValidator;\n+import uk.gov.hmcts.ccd.endpoint.exceptions.DataProcessingException;\n+\n+import java.util.*;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQwODg2OA==", "bodyText": "The same .*", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#discussion_r397408868", "createdAt": "2020-03-24T19:30:34Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/processor/DateTimeValueFormatter.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package uk.gov.hmcts.ccd.domain.service.processor;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.fasterxml.jackson.databind.node.TextNode;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CaseViewField;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CaseViewFieldBuilder;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CommonField;\n+import uk.gov.hmcts.ccd.domain.model.definition.DisplayContext;\n+import uk.gov.hmcts.ccd.domain.model.definition.WizardPageComplexFieldOverride;\n+import uk.gov.hmcts.ccd.domain.types.BaseType;\n+import uk.gov.hmcts.ccd.domain.types.CollectionValidator;\n+import uk.gov.hmcts.ccd.endpoint.exceptions.DataProcessingException;\n+\n+import java.util.*;\n+\n+import static uk.gov.hmcts.ccd.domain.model.definition.FieldType.*;\n+import static uk.gov.hmcts.ccd.domain.service.processor.DisplayContextParameter.getDisplayContextParameterOfType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQxMTEwMg==", "bodyText": "protected CaseViewField executeSimple(CaseViewField caseViewField, BaseType baseType)  and\nprotected CaseViewField executeCollection(CaseViewField caseViewField)\nseems quite similar regardless of  executeCollection () or executeSimple()", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#discussion_r397411102", "createdAt": "2020-03-24T19:34:54Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/processor/DateTimeValueFormatter.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package uk.gov.hmcts.ccd.domain.service.processor;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.fasterxml.jackson.databind.node.TextNode;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CaseViewField;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CaseViewFieldBuilder;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CommonField;\n+import uk.gov.hmcts.ccd.domain.model.definition.DisplayContext;\n+import uk.gov.hmcts.ccd.domain.model.definition.WizardPageComplexFieldOverride;\n+import uk.gov.hmcts.ccd.domain.types.BaseType;\n+import uk.gov.hmcts.ccd.domain.types.CollectionValidator;\n+import uk.gov.hmcts.ccd.endpoint.exceptions.DataProcessingException;\n+\n+import java.util.*;\n+\n+import static uk.gov.hmcts.ccd.domain.model.definition.FieldType.*;\n+import static uk.gov.hmcts.ccd.domain.service.processor.DisplayContextParameter.getDisplayContextParameterOfType;\n+import static uk.gov.hmcts.ccd.domain.service.processor.DisplayContextParameter.hasDisplayContextParameterType;\n+\n+@Component\n+public class DateTimeValueFormatter extends CaseViewFieldProcessor {\n+\n+    private static final List<String> SUPPORTED_TYPES = Arrays.asList(DATETIME, DATE);\n+    private static final Map<DisplayContext, DisplayContextParameterType> ENUM_MAP = new EnumMap<>(DisplayContext.class);\n+\n+    private final DateTimeFormatParser dateTimeFormatParser;\n+\n+    static {\n+        ENUM_MAP.put(DisplayContext.MANDATORY, DisplayContextParameterType.DATETIMEENTRY);\n+        ENUM_MAP.put(DisplayContext.OPTIONAL, DisplayContextParameterType.DATETIMEENTRY);\n+        ENUM_MAP.put(DisplayContext.READONLY, DisplayContextParameterType.DATETIMEDISPLAY);\n+    }\n+\n+    @Autowired\n+    public DateTimeValueFormatter(DateTimeFormatParser dateTimeFormatParser,\n+                                  CaseViewFieldBuilder caseViewFieldBuilder) {\n+        super(caseViewFieldBuilder);\n+        this.dateTimeFormatParser = dateTimeFormatParser;\n+    }\n+\n+    @Override\n+    protected CaseViewField executeSimple(CaseViewField caseViewField, BaseType baseType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTUxNzEz", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#pullrequestreview-380951713", "createdAt": "2020-03-25T08:50:16Z", "commit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo1MDoxN1rOF7RFLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo1MDoxN1rOF7RFLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5MDE1OQ==", "bodyText": "we have a model object DisplayContextParameter. Can we use that instead of String? it would reduce the boilerplate in the code", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#discussion_r397690159", "createdAt": "2020-03-25T08:50:17Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/aggregated/CommonField.java", "diffHunk": "@@ -29,6 +30,10 @@\n \n     void setDisplayContextParameter(String displayContextParameter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTU4NjAw", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#pullrequestreview-380958600", "createdAt": "2020-03-25T09:00:17Z", "commit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOTowMDoxN1rOF7Rb-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOTowMDoxN1rOF7Rb-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5NTk5Mw==", "bodyText": "this method in case the value of display context is \"HIDDEN\" is going to return null. Which is logically wrong.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#discussion_r397695993", "createdAt": "2020-03-25T09:00:17Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/aggregated/CommonField.java", "diffHunk": "@@ -44,6 +49,13 @@ default boolean isCompoundFieldType() {\n         return isCollectionFieldType() || isComplexFieldType();\n     }\n \n+    default DisplayContext displayContextType() {\n+        return Optional.ofNullable(getDisplayContext())\n+            .filter(dc -> !dc.equals(\"HIDDEN\"))\n+            .map(DisplayContext::valueOf)\n+            .orElse(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTYwNDA5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#pullrequestreview-380960409", "createdAt": "2020-03-25T09:02:58Z", "commit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOTowMjo1OFrOF7Rhnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOTowMjo1OFrOF7Rhnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5NzQzOQ==", "bodyText": "same as above", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#discussion_r397697439", "createdAt": "2020-03-25T09:02:58Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/definition/WizardPageComplexFieldOverride.java", "diffHunk": "@@ -67,4 +68,11 @@ public String getDisplayContextParameter() {\n     public void setDisplayContextParameter(String displayContextParameter) {\n         this.displayContextParameter = displayContextParameter;\n     }\n+\n+    public DisplayContext displayContextType() {\n+        return Optional.ofNullable(getDisplayContext())\n+            .filter(dc -> !dc.equals(\"HIDDEN\"))\n+            .map(DisplayContext::valueOf)\n+            .orElse(null);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTcwODA5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#pullrequestreview-380970809", "createdAt": "2020-03-25T09:17:56Z", "commit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOToxNzo1N1rOF7SDVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOToxNzo1N1rOF7SDVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwNjA3MA==", "bodyText": "the logic that loops through collection fields and navigates complex fields is common logic that applies to all processors. So it should be made generic and written only once rather than being inside each single subclass of CaseViewFieldProcessor. But we can ignore this comment for now as I have raised a separate ticket to introduce a generic Processor: https://tools.hmcts.net/jira/browse/RDM-8010", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#discussion_r397706070", "createdAt": "2020-03-25T09:17:57Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/processor/DateTimeValueFormatter.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package uk.gov.hmcts.ccd.domain.service.processor;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.fasterxml.jackson.databind.node.TextNode;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CaseViewField;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CaseViewFieldBuilder;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CommonField;\n+import uk.gov.hmcts.ccd.domain.model.definition.DisplayContext;\n+import uk.gov.hmcts.ccd.domain.model.definition.WizardPageComplexFieldOverride;\n+import uk.gov.hmcts.ccd.domain.types.BaseType;\n+import uk.gov.hmcts.ccd.domain.types.CollectionValidator;\n+import uk.gov.hmcts.ccd.endpoint.exceptions.DataProcessingException;\n+\n+import java.util.*;\n+\n+import static uk.gov.hmcts.ccd.domain.model.definition.FieldType.*;\n+import static uk.gov.hmcts.ccd.domain.service.processor.DisplayContextParameter.getDisplayContextParameterOfType;\n+import static uk.gov.hmcts.ccd.domain.service.processor.DisplayContextParameter.hasDisplayContextParameterType;\n+\n+@Component\n+public class DateTimeValueFormatter extends CaseViewFieldProcessor {\n+\n+    private static final List<String> SUPPORTED_TYPES = Arrays.asList(DATETIME, DATE);\n+    private static final Map<DisplayContext, DisplayContextParameterType> ENUM_MAP = new EnumMap<>(DisplayContext.class);\n+\n+    private final DateTimeFormatParser dateTimeFormatParser;\n+\n+    static {\n+        ENUM_MAP.put(DisplayContext.MANDATORY, DisplayContextParameterType.DATETIMEENTRY);\n+        ENUM_MAP.put(DisplayContext.OPTIONAL, DisplayContextParameterType.DATETIMEENTRY);\n+        ENUM_MAP.put(DisplayContext.READONLY, DisplayContextParameterType.DATETIMEDISPLAY);\n+    }\n+\n+    @Autowired\n+    public DateTimeValueFormatter(DateTimeFormatParser dateTimeFormatParser,\n+                                  CaseViewFieldBuilder caseViewFieldBuilder) {\n+        super(caseViewFieldBuilder);\n+        this.dateTimeFormatParser = dateTimeFormatParser;\n+    }\n+\n+    @Override\n+    protected CaseViewField executeSimple(CaseViewField caseViewField, BaseType baseType) {\n+        caseViewField.setFormattedValue(\n+            caseViewField.getValue() instanceof TextNode && hasSupportedDisplayContextParameter(caseViewField.getDisplayContextParameter()) ?\n+                executeSimple((TextNode) caseViewField.getValue(), caseViewField, baseType, caseViewField.getId(), null, caseViewField) :\n+                caseViewField.getValue()\n+        );\n+\n+        return caseViewField;\n+    }\n+\n+    @Override\n+    protected CaseViewField executeCollection(CaseViewField caseViewField) {\n+        caseViewField.setFormattedValue(\n+            caseViewField.getValue() instanceof ArrayNode && hasSupportedDisplayContextParameter(caseViewField.getDisplayContextParameter()) ?\n+                executeCollection((ArrayNode) caseViewField.getValue(), caseViewField, caseViewField.getId(), null, caseViewField) :\n+                caseViewField.getValue()\n+        );\n+\n+        return caseViewField;\n+    }\n+\n+    @Override\n+    protected JsonNode executeSimple(JsonNode node, CommonField field, BaseType baseType, String fieldPath, WizardPageComplexFieldOverride override, CaseViewField topLevelField) {\n+        final DisplayContext displayContext = displayContext(topLevelField, override);\n+        return !isNullOrEmpty(node)\n+            && hasDisplayContextParameterType(field.getDisplayContextParameter(), ENUM_MAP.get(displayContext))\n+            && isSupportedBaseType(baseType, SUPPORTED_TYPES) ?\n+            createNode(field.getDisplayContextParameter(), node.asText(), baseType, fieldPath, displayContext) :\n+            node;\n+    }\n+\n+    @Override\n+    protected JsonNode executeCollection(JsonNode collectionNode, CommonField caseViewField, String fieldPath, WizardPageComplexFieldOverride override, CaseViewField topLevelField) {\n+        final BaseType collectionFieldType = BaseType.get(caseViewField.getFieldType().getCollectionFieldType().getType());\n+        final DisplayContext displayContext = displayContext(topLevelField, override);\n+\n+        if (hasDisplayContextParameterType(caseViewField.getDisplayContextParameter(), ENUM_MAP.get(displayContext))\n+            && isSupportedBaseType(collectionFieldType, SUPPORTED_TYPES)) {\n+            ArrayNode newNode = MAPPER.createArrayNode();\n+            collectionNode.forEach(item -> {\n+                JsonNode newItem = item.deepCopy();\n+                ((ObjectNode)newItem).replace(CollectionValidator.VALUE,\n+                    createNode(caseViewField.getDisplayContextParameter(), item.get(CollectionValidator.VALUE).asText(), collectionFieldType, fieldPath, displayContext));\n+                newNode.add(newItem);\n+            });\n+\n+            return newNode;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "originalPosition": 93}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTczMTcw", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#pullrequestreview-380973170", "createdAt": "2020-03-25T09:21:09Z", "commit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOToyMTowOVrOF7SLBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOToyMTowOVrOF7SLBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwODAzOA==", "bodyText": "minor:\nthis method is becoming a bit too long. It's generally not recommended to have long sequences of chained methods because it makes the code difficult to understand. It could be useful breaking this down", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#discussion_r397708038", "createdAt": "2020-03-25T09:21:09Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/aggregated/AbstractDefaultGetCaseViewOperation.java", "diffHunk": "@@ -79,6 +83,7 @@ CaseDetails getCaseDetails(String caseReference) {\n             CommonField[] caseViewFields = tab.getTabFields().stream()\n                 .filter(filterCaseTabFieldsBasedOnSecureData(caseDetails))\n                 .map(caseTypeTabField -> CaseViewField.createFrom(caseTypeTabField, data))\n+                .map(fieldProcessorService::processCaseViewField)\n                 .toArray(CaseViewField[]::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTc3NDU1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#pullrequestreview-380977455", "createdAt": "2020-03-25T09:27:08Z", "commit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOToyNzowOFrOF7SZtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOToyNzowOFrOF7SZtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcxMTc5Nw==", "bodyText": "we could reduce boilerplate by adding a\nisCollectionFieldType() and isComplexFieldType() methods to FieldType", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#discussion_r397711797", "createdAt": "2020-03-25T09:27:08Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/processor/CaseViewFieldProcessor.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package uk.gov.hmcts.ccd.domain.service.processor;\n+\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CaseViewField;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CaseViewFieldBuilder;\n+import uk.gov.hmcts.ccd.domain.model.definition.WizardPageField;\n+import uk.gov.hmcts.ccd.domain.types.BaseType;\n+\n+import static uk.gov.hmcts.ccd.domain.model.definition.FieldType.COLLECTION;\n+import static uk.gov.hmcts.ccd.domain.model.definition.FieldType.COMPLEX;\n+\n+public abstract class CaseViewFieldProcessor extends FieldProcessor {\n+\n+    public CaseViewFieldProcessor(CaseViewFieldBuilder caseViewFieldBuilder) {\n+        super(caseViewFieldBuilder);\n+    }\n+\n+    public CaseViewField execute(CaseViewField caseViewField) {\n+        final BaseType fieldType = BaseType.get(caseViewField.getFieldType().getType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a621679cbe24209b65bcfa1e1b33acad841a31cd", "author": {"user": {"login": "RebeccaBaker", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/a621679cbe24209b65bcfa1e1b33acad841a31cd", "committedDate": "2020-03-25T09:52:28Z", "message": "Merge branch 'RDM-7630' into RDM-7692"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d608e2c450bd04b5b02e6b7f9cef771fdae8fa51", "author": {"user": {"login": "RebeccaBaker", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/d608e2c450bd04b5b02e6b7f9cef771fdae8fa51", "committedDate": "2020-03-25T09:54:21Z", "message": "Merge branch 'RDM-7692' into RDM-7694\n\n# Conflicts:\n#\tsrc/main/java/uk/gov/hmcts/ccd/domain/model/search/CriteriaInput.java\n#\tsrc/test/java/uk/gov/hmcts/ccd/domain/service/common/TestBuildersUtil.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMDAxMjE4", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#pullrequestreview-381001218", "createdAt": "2020-03-25T09:59:42Z", "commit": {"oid": "8e8f6cb84763a0137ddc1f67375f925406b31646"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDo0NTozNVrOF7VVVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDo1Mjo1NlrOF7Vlsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc1OTgyOA==", "bodyText": "minor:\nI can see more and more often we need to find a wizard field corresponding to a certain field id. Probably we could introduce a method on the UIDefinitionRepository that returns a map of the wizard fields by fieldID", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#discussion_r397759828", "createdAt": "2020-03-25T10:45:35Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/processor/FieldProcessorService.java", "diffHunk": "@@ -66,6 +81,27 @@ public FieldProcessorService(final List<CaseDataFieldProcessor> caseDataFieldPro\n         return processData(data, caseType, eventTriggerService.findCaseEvent(caseType, eventId));\n     }\n \n+    private CaseViewField processCaseViewField(final CaseViewField field,\n+                                               final List<WizardPageField> wizardPageFields) {\n+        CaseViewField result = field;\n+        for (CaseViewFieldProcessor processor : caseViewFieldProcessors) {\n+            result = processor.execute(result, wizardPageField(wizardPageFields, field.getId()));\n+        }\n+        return result;\n+    }\n+\n+    private List<WizardPageField> getWizardPageFields(String caseTypeId, String eventId) {\n+        return uiDefinitionRepository.getWizardPageCollection(caseTypeId, eventId)\n+            .stream()\n+            .map(WizardPage::getWizardPageFields)\n+            .flatMap(List::stream)\n+            .collect(Collectors.toList());\n+    }\n+\n+    private WizardPageField wizardPageField(List<WizardPageField> wizardPageFields, String fieldId) {\n+        return wizardPageFields.stream().filter(f -> f.getCaseFieldId().equals(fieldId)).findAny().orElse(null);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a621679cbe24209b65bcfa1e1b33acad841a31cd"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2MjQzOQ==", "bodyText": "duplicated", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#discussion_r397762439", "createdAt": "2020-03-25T10:50:08Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/processor/DateTimeValueFormatter.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package uk.gov.hmcts.ccd.domain.service.processor;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.fasterxml.jackson.databind.node.TextNode;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CaseViewField;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CaseViewFieldBuilder;\n+import uk.gov.hmcts.ccd.domain.model.aggregated.CommonField;\n+import uk.gov.hmcts.ccd.domain.model.definition.DisplayContext;\n+import uk.gov.hmcts.ccd.domain.model.definition.WizardPageComplexFieldOverride;\n+import uk.gov.hmcts.ccd.domain.types.BaseType;\n+import uk.gov.hmcts.ccd.domain.types.CollectionValidator;\n+import uk.gov.hmcts.ccd.endpoint.exceptions.DataProcessingException;\n+\n+import java.util.*;\n+\n+import static uk.gov.hmcts.ccd.domain.model.definition.FieldType.*;\n+import static uk.gov.hmcts.ccd.domain.service.processor.DisplayContextParameter.getDisplayContextParameterOfType;\n+import static uk.gov.hmcts.ccd.domain.service.processor.DisplayContextParameter.hasDisplayContextParameterType;\n+\n+@Component\n+public class DateTimeValueFormatter extends CaseViewFieldProcessor {\n+\n+    private static final List<String> SUPPORTED_TYPES = Arrays.asList(DATETIME, DATE);\n+    private static final Map<DisplayContext, DisplayContextParameterType> ENUM_MAP = new EnumMap<>(DisplayContext.class);\n+\n+    private final DateTimeFormatParser dateTimeFormatParser;\n+\n+    static {\n+        ENUM_MAP.put(DisplayContext.MANDATORY, DisplayContextParameterType.DATETIMEENTRY);\n+        ENUM_MAP.put(DisplayContext.OPTIONAL, DisplayContextParameterType.DATETIMEENTRY);\n+        ENUM_MAP.put(DisplayContext.READONLY, DisplayContextParameterType.DATETIMEDISPLAY);\n+    }\n+\n+    @Autowired\n+    public DateTimeValueFormatter(DateTimeFormatParser dateTimeFormatParser,\n+                                  CaseViewFieldBuilder caseViewFieldBuilder) {\n+        super(caseViewFieldBuilder);\n+        this.dateTimeFormatParser = dateTimeFormatParser;\n+    }\n+\n+    @Override\n+    protected CaseViewField executeSimple(CaseViewField caseViewField, BaseType baseType) {\n+        caseViewField.setFormattedValue(\n+            caseViewField.getValue() instanceof TextNode && hasSupportedDisplayContextParameter(caseViewField.getDisplayContextParameter()) ?\n+                executeSimple((TextNode) caseViewField.getValue(), caseViewField, baseType, caseViewField.getId(), null, caseViewField) :\n+                caseViewField.getValue()\n+        );\n+\n+        return caseViewField;\n+    }\n+\n+    @Override\n+    protected CaseViewField executeCollection(CaseViewField caseViewField) {\n+        caseViewField.setFormattedValue(\n+            caseViewField.getValue() instanceof ArrayNode && hasSupportedDisplayContextParameter(caseViewField.getDisplayContextParameter()) ?\n+                executeCollection((ArrayNode) caseViewField.getValue(), caseViewField, caseViewField.getId(), null, caseViewField) :\n+                caseViewField.getValue()\n+        );\n+\n+        return caseViewField;\n+    }\n+\n+    @Override\n+    protected JsonNode executeSimple(JsonNode node, CommonField field, BaseType baseType, String fieldPath, WizardPageComplexFieldOverride override, CaseViewField topLevelField) {\n+        final DisplayContext displayContext = displayContext(topLevelField, override);\n+        return !isNullOrEmpty(node)\n+            && hasDisplayContextParameterType(field.getDisplayContextParameter(), ENUM_MAP.get(displayContext))\n+            && isSupportedBaseType(baseType, SUPPORTED_TYPES) ?\n+            createNode(field.getDisplayContextParameter(), node.asText(), baseType, fieldPath, displayContext) :\n+            node;\n+    }\n+\n+    @Override\n+    protected JsonNode executeCollection(JsonNode collectionNode, CommonField caseViewField, String fieldPath, WizardPageComplexFieldOverride override, CaseViewField topLevelField) {\n+        final BaseType collectionFieldType = BaseType.get(caseViewField.getFieldType().getCollectionFieldType().getType());\n+        final DisplayContext displayContext = displayContext(topLevelField, override);\n+\n+        if (hasDisplayContextParameterType(caseViewField.getDisplayContextParameter(), ENUM_MAP.get(displayContext))\n+            && isSupportedBaseType(collectionFieldType, SUPPORTED_TYPES)) {\n+            ArrayNode newNode = MAPPER.createArrayNode();\n+            collectionNode.forEach(item -> {\n+                JsonNode newItem = item.deepCopy();\n+                ((ObjectNode)newItem).replace(CollectionValidator.VALUE,\n+                    createNode(caseViewField.getDisplayContextParameter(), item.get(CollectionValidator.VALUE).asText(), collectionFieldType, fieldPath, displayContext));\n+                newNode.add(newItem);\n+            });\n+\n+            return newNode;\n+        }\n+\n+        return collectionNode;\n+    }\n+\n+    private TextNode createNode(String displayContextParameter, String valueToConvert, BaseType baseType, String fieldPath, DisplayContext displayContext) {\n+        if (ENUM_MAP.containsKey(displayContext)) {\n+            String format = format(displayContextParameter, displayContext, baseType);\n+            try {\n+                if (baseType == BaseType.get(DATETIME)) {\n+                    return new TextNode(dateTimeFormatParser.convertIso8601ToDateTime(format, valueToConvert));\n+                } else {\n+                    return new TextNode(dateTimeFormatParser.convertIso8601ToDate(format, valueToConvert));\n+                }\n+            } catch (Exception e) {\n+                throw new DataProcessingException().withDetails(\n+                    String.format(\"Unable to process field %s with value %s. Expected format: %s\",\n+                        fieldPath,\n+                        valueToConvert,\n+                        format)\n+                );\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a621679cbe24209b65bcfa1e1b33acad841a31cd"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2NDAxOQ==", "bodyText": "we should add a good bunch of  integration tests to protect ourselves from regressions", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#discussion_r397764019", "createdAt": "2020-03-25T10:52:56Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/processor/FieldProcessorServiceTest.java", "diffHunk": "@@ -0,0 +1,238 @@\n+package uk.gov.hmcts.ccd.domain.service.processor;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a621679cbe24209b65bcfa1e1b33acad841a31cd"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNzM0Nzky", "url": "https://github.com/hmcts/ccd-data-store-api/pull/851#pullrequestreview-382734792", "createdAt": "2020-03-27T10:23:19Z", "commit": {"oid": "a621679cbe24209b65bcfa1e1b33acad841a31cd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bfa1ca7ad351423338a2a0ccf5bdb9f650fb170", "author": {"user": {"login": "RebeccaBaker", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/4bfa1ca7ad351423338a2a0ccf5bdb9f650fb170", "committedDate": "2020-03-27T10:34:10Z", "message": "Merge branch 'RDM-7630' into RDM-7692\n\n# Conflicts:\n#\tsrc/main/java/uk/gov/hmcts/ccd/domain/model/definition/WizardPageComplexFieldOverride.java\n#\tsrc/main/java/uk/gov/hmcts/ccd/domain/service/processor/DateTimeFormatParser.java\n#\tsrc/test/java/uk/gov/hmcts/ccd/domain/service/processor/DateTimeFormatParserTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "296066aee5343e4502982736c1195e03a2b35710", "author": {"user": {"login": "RebeccaBaker", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/296066aee5343e4502982736c1195e03a2b35710", "committedDate": "2020-03-27T10:34:41Z", "message": "Merge branch 'RDM-7692' into RDM-7694"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd6d583cf1aedcbc3d2e5d50db9f861f26bec3e7", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/dd6d583cf1aedcbc3d2e5d50db9f861f26bec3e7", "committedDate": "2020-03-30T08:41:28Z", "message": "Merge branch 'RDM-7630' into RDM-7692"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11bf69bb49fb30da55064b802d60b99ca2cbe472", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/11bf69bb49fb30da55064b802d60b99ca2cbe472", "committedDate": "2020-03-30T08:48:07Z", "message": "RDM-7692 - fixed compilation issue."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8015087b60db2208d545e2d8024ffe94fcb18a1e", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/8015087b60db2208d545e2d8024ffe94fcb18a1e", "committedDate": "2020-03-30T08:48:55Z", "message": "Merge branch 'RDM-7692' into RDM-7694"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e29ddd3fd024c34d3bc3a63a9a1e00715fe4ff1a", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e29ddd3fd024c34d3bc3a63a9a1e00715fe4ff1a", "committedDate": "2020-03-30T09:25:12Z", "message": "Merge branch 'RDM-7630' into RDM-7692"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9e5d2a15e73fc7852bd66338ed2ed76c5b6f00e", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/b9e5d2a15e73fc7852bd66338ed2ed76c5b6f00e", "committedDate": "2020-03-30T09:25:36Z", "message": "Merge branch 'RDM-7692' into RDM-7694"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b1be4e3352ec7bcb5b84df82e11d6d6d99a0fc7", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/0b1be4e3352ec7bcb5b84df82e11d6d6d99a0fc7", "committedDate": "2020-03-30T12:05:56Z", "message": "Merge branch 'RDM-7630' into RDM-7692"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a58ca28950c5b1acb38f6a201bee26357dec6f5", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/5a58ca28950c5b1acb38f6a201bee26357dec6f5", "committedDate": "2020-03-30T12:06:17Z", "message": "Merge branch 'RDM-7692' into RDM-7694"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ed8f3aa934a5df994e9d444f052ff02e62f2c1e", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/9ed8f3aa934a5df994e9d444f052ff02e62f2c1e", "committedDate": "2020-03-30T14:02:41Z", "message": "Add formatted values to search/workbasket results"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc9c17ab6fcfe36563a1b1fd4282026b1a032edf", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/cc9c17ab6fcfe36563a1b1fd4282026b1a032edf", "committedDate": "2020-03-31T12:02:44Z", "message": "Merge branch 'RDM-7630' into RDM-7692"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a4ae4951803d3b2b1b3d3bb68464a41f777eed1", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/8a4ae4951803d3b2b1b3d3bb68464a41f777eed1", "committedDate": "2020-03-31T12:02:55Z", "message": "Merge branch 'RDM-7692' into RDM-7694"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fa20156ff4df437cb78330d256bd3bf9573083b", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/7fa20156ff4df437cb78330d256bd3bf9573083b", "committedDate": "2020-04-01T10:57:25Z", "message": "RDM-8071 - Enable processors on collections of complex"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7256532c9bdaa1b400f8bfa8a216fe9d9d75394", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/f7256532c9bdaa1b400f8bfa8a216fe9d9d75394", "committedDate": "2020-04-01T12:00:05Z", "message": "Merge branch 'RDM-7692' into RDM-7694"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bd8276e4b9ab23deffd5b39346509c03eb4e4ca", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/1bd8276e4b9ab23deffd5b39346509c03eb4e4ca", "committedDate": "2020-04-01T12:16:47Z", "message": "Handle TextNodes with empty strings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92906be40e2b64f6e386a76c01f89928c6cb2a42", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/92906be40e2b64f6e386a76c01f89928c6cb2a42", "committedDate": "2020-04-06T08:28:27Z", "message": "Support complex fields in search/workbasket results"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f28e7a93e315c4d6886aba0e2aa201bf331a308", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/5f28e7a93e315c4d6886aba0e2aa201bf331a308", "committedDate": "2020-04-06T10:30:23Z", "message": "Update mappings for failing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4389b3046b64724519a18bc3a2d431b0ffec987e", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/4389b3046b64724519a18bc3a2d431b0ffec987e", "committedDate": "2020-04-06T11:26:17Z", "message": "Merge branch 'RDM-7630' into RDM-7692"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "524c8a0a24e93365c03f3d7ad3c139e5f2653745", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/524c8a0a24e93365c03f3d7ad3c139e5f2653745", "committedDate": "2020-04-06T11:26:31Z", "message": "Merge branch 'RDM-7692' into RDM-7694"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17dc665970fdec9df13dfe3762bf296399cf8f63", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/17dc665970fdec9df13dfe3762bf296399cf8f63", "committedDate": "2020-04-06T13:53:20Z", "message": "Handle metadata data fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35a9dfaf6e2ece49ca31dd880aef3966459de0a9", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/35a9dfaf6e2ece49ca31dd880aef3966459de0a9", "committedDate": "2020-04-06T14:11:57Z", "message": "Minor checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "792401bf6505699b6e711c72b1563975bb834e52", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/792401bf6505699b6e711c72b1563975bb834e52", "committedDate": "2020-04-06T14:59:24Z", "message": "Add DCP to FT data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7f8784041eea43e1bea615e061fe72ea2bddb45", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e7f8784041eea43e1bea615e061fe72ea2bddb45", "committedDate": "2020-04-06T17:47:58Z", "message": "Unit tests for nested field logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11e1c6c0167f431eb493543ee428b13a2ccf5b0b", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/11e1c6c0167f431eb493543ee428b13a2ccf5b0b", "committedDate": "2020-04-07T11:56:40Z", "message": "RDM-8070 - Default year to 1970"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e48623b6665c787599aa70f1a4139ca1b2a74d95", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e48623b6665c787599aa70f1a4139ca1b2a74d95", "committedDate": "2020-04-07T11:57:23Z", "message": "Merge branch 'RDM-7692' into RDM-7694"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61be3bdf38361f6631f7ea3bb27a81a8a95539ea", "author": {"user": {"login": "RebeccaBaker", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/61be3bdf38361f6631f7ea3bb27a81a8a95539ea", "committedDate": "2020-04-09T12:21:01Z", "message": "RDM-8113 handle display without seconds or milliseconds\nRDM-8057 split DCP correctly when there is multiple params"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "622181fc4cb20ff67c626dd5a860a6f97189da10", "author": {"user": {"login": "RebeccaBaker", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/622181fc4cb20ff67c626dd5a860a6f97189da10", "committedDate": "2020-04-09T12:53:42Z", "message": "RDM-8113 updated functional response"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b02cbadefeece8e4fab9f120e48db5d0c5bb3cdc", "author": {"user": {"login": "RebeccaBaker", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/b02cbadefeece8e4fab9f120e48db5d0c5bb3cdc", "committedDate": "2020-04-09T14:19:05Z", "message": "RDM-8113 added unit tests for partial milliseconds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19101d5fc91a714a1f84b5e67facf5c7da82d919", "author": {"user": {"login": "RebeccaBaker", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/19101d5fc91a714a1f84b5e67facf5c7da82d919", "committedDate": "2020-04-10T06:29:56Z", "message": "RDM-8113 updated functional test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6bcba95f56c01f40df1f522ac4eaebc0d63c172", "author": {"user": {"login": "RebeccaBaker", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/a6bcba95f56c01f40df1f522ac4eaebc0d63c172", "committedDate": "2020-04-10T06:54:11Z", "message": "RDM-8113 updated functional test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8220490c5ce02151f34908079418a5fbb38a95f", "author": {"user": {"login": "Olawale", "name": "Olawale Olanrewaju"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e8220490c5ce02151f34908079418a5fbb38a95f", "committedDate": "2020-04-15T08:44:22Z", "message": "Merge pull request #899 from hmcts/RDM-8113\n\nRDM-8113 handle display without seconds or milliseconds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8ee11163138570d3e8a528bcb5d270f583b17a4", "author": {"user": {"login": "veeresha-hmcts", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/a8ee11163138570d3e8a528bcb5d270f583b17a4", "committedDate": "2020-04-15T12:57:25Z", "message": "Merge pull request #855 from hmcts/RDM-7694\n\nRDM-7694 - DCP for workbasket and search input/results"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2631, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}