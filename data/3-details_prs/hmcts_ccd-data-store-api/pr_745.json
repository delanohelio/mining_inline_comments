{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNzM1NTAz", "number": 745, "title": "RDM-6757 Populate display_context_parameter for collections using case role", "bodyText": "JIRA link (if applicable)\nhttps://tools.hmcts.net/jira/browse/RDM-6757\nChange description\nThe main problem was the user profile on the front-end has no case roles and we cannot use them to show/hide collection Add new/Remove buttons.\nWe have decided to put this information in the display_context_parameter:\n#COLLECTION(allowInsert, allowDelete) - should show both Add New and Remove buttons\n#COLLECTION(allowInsert) - should show Add New and hide Remove button\n#COLLECTION(allowDelete) - should show Remove and hide Add New button\n#COLLECTION() - should hide both Add New and Remove buttons\nThere will be a Front-End change to consume the display_context_parameter.\nDoes this PR introduce a breaking change? (check one with \"x\")\n[ ] Yes\n[ X] No", "createdAt": "2020-01-14T16:46:59Z", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745", "merged": true, "mergeCommit": {"oid": "9d2803852b1f7d394bbfb0ad0f792b06b495c6ac"}, "closed": true, "closedAt": "2020-03-05T12:16:42Z", "author": {"login": "rafalkalita"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABbo285EgH2gAyMzYyNzM1NTAzOjhmY2JhM2VhZTFkNTRmNTU3NWJlNzk5ZWEyYThmMmFhOTc4YjdiNDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKqentgH2gAyMzYyNzM1NTAzOjMxMDliZjRmMDIyODYzYzA4NzU4N2I3OWJhYTRiYTE0MGIzNmM2NmU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8fcba3eae1d54f5575be799ea2a8f2aa978b7b49", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/8fcba3eae1d54f5575be799ea2a8f2aa978b7b49", "committedDate": "2019-11-21T11:33:17Z", "message": "RDM-6521 include CREATOR case role in the event trigger endpoints (#619)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e0ec14a4929211ee7af44fda8349c0d133f9ab7", "author": {"user": {"login": "kiran-yenigala-hmcts", "name": "Kiran Kumar Yenigala"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/1e0ec14a4929211ee7af44fda8349c0d133f9ab7", "committedDate": "2019-11-28T09:57:09Z", "message": "Respondent journey rdm 6520 (#630)\n\n* RDM-6520: Validate the CaseRoles on the case submission\r\n\r\n* RDM-6520: Validate the CaseRoles on the case submission\r\n\r\n* RDM-6520: Validate the CaseRoles on the case submission\r\n\r\n* RDM-6521 include CREATOR case role in the event trigger endpoints (#619)\r\n\r\n* RDM-6520: Validate the CaseRoles on the case submission\r\n\r\n* RDM-6520: Validate the CaseRoles on the case submission\r\n\r\n* RDM-6520: Validate the CaseRoles on the case submission\r\n\r\n* RDM-6520: Validate the CaseRoles on the case submission\r\nReusing the getCaseCreationRoles\r\n\r\n* RDM-6520: Validate the CaseRoles on the case submission"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab727a00c5205c2b5cc0ffd2a026e51952726986", "author": {"user": {"login": "kiran-yenigala-hmcts", "name": "Kiran Kumar Yenigala"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/ab727a00c5205c2b5cc0ffd2a026e51952726986", "committedDate": "2019-12-17T09:39:45Z", "message": "Rdm 6758 (#681) Case role on event history \n\n* RDM-6758: When using case role case history doesn't show events\r\n\r\n* RDM-6758: When using case role case history doesn't show events\r\n\r\n* RDM-6758: When using case role case history doesn't show events\r\n\r\n* RDM-6758: When using case role case history doesn't show events\r\n\r\n* RDM-6758: When using case role case history doesn't show events\r\n\r\n* RDM-6758: When using case role case history doesn't show events\r\n\r\n* RDM-6758: When using case role case history doesn't show events"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e578a2fa80ba4bea7fb57a836fa470939122a41b", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e578a2fa80ba4bea7fb57a836fa470939122a41b", "committedDate": "2020-01-14T16:45:39Z", "message": "RDM-6757 Update displayContextParameter for collections based on ACLs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cd69219e2f9cf5881f5a16778e844c6f0db0eb8", "author": {"user": {"login": "kiran-yenigala-hmcts", "name": "Kiran Kumar Yenigala"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/8cd69219e2f9cf5881f5a16778e844c6f0db0eb8", "committedDate": "2020-01-14T16:59:30Z", "message": "RDM-7150: Fix tomcat security issues on ccd-data-store and ccd-definition-store (#727)\n\n(cherry picked from commit 1ee8ab8bab39b8e3e99170bcff390c9b532c4720)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9863324ba94fa9f56b2a29860ace7d1c8058943", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/b9863324ba94fa9f56b2a29860ace7d1c8058943", "committedDate": "2020-01-15T16:42:55Z", "message": "RDM-6757 Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eef56c3739ed6cdb73030f10735befc208501ac3", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/eef56c3739ed6cdb73030f10735befc208501ac3", "committedDate": "2020-01-16T16:14:05Z", "message": "RDM-6757 Extracted displayContextParameter creation to a separate class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/a461c7b5920b0cf61c58786cd4ab40260ade7db3", "committedDate": "2020-01-16T16:30:22Z", "message": "RDM-6757 Unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NTUzOTUy", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#pullrequestreview-348553952", "createdAt": "2020-01-27T10:15:59Z", "commit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDoxNjowMFrOFh9jhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDoxNjowMFrOFh9jhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE1NTg0Ng==", "bodyText": "can you add a scenario:\n#COLLECTION(\"other\")\", COLLECTION, asList(\"allowInsert\")\nand verify that the end result is\n#COLLECTION(\"other, allowInsert\" )\nwe don't want \"other\" to be wiped out, because it could be some other display option for collections we introduce in the future", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#discussion_r371155846", "createdAt": "2020-01-27T10:16:00Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/model/common/DisplayContextParameterUtilTest.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package uk.gov.hmcts.ccd.domain.model.common;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+import static java.util.Arrays.asList;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertAll;\n+import static uk.gov.hmcts.ccd.domain.model.common.DisplayContextParameterUtil.Parameter.COLLECTION;\n+import static uk.gov.hmcts.ccd.domain.model.common.DisplayContextParameterUtil.Parameter.TABLE;\n+import static uk.gov.hmcts.ccd.domain.model.common.DisplayContextParameterUtil.updateDisplayContextParameter;\n+\n+class DisplayContextParameterUtilTest {\n+\n+    @Test\n+    @DisplayName(\"should create parameter)\")\n+    void shouldCreateParameter() {\n+        assertAll(\n+            () -> assertThat(updateDisplayContextParameter(\"\", COLLECTION, asList(\"allowInsert\", \"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete,allowInsert)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"\", COLLECTION, asList(\"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"\", TABLE, asList(\"postcode\")),\n+                is(\"#TABLE(postcode)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"\", TABLE, asList(\"AddressLine1\", \"postcode\")),\n+                is(\"#TABLE(AddressLine1,postcode)\"))\n+                 );\n+    }\n+\n+    @Test\n+    @DisplayName(\"should update parameter)\")\n+    void shouldUpdateParameter() {\n+        assertAll(\n+            () -> assertThat(updateDisplayContextParameter(\"#COLLECTION(allowInsert,allowDelete)\", COLLECTION, asList(\"allowInsert\", \"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete,allowInsert)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"#COLLECTION(allowInsert,allowDelete)\", COLLECTION, asList(\"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"#COLLECTION()\", COLLECTION, asList(\"allowInsert\")),\n+                is(\"#COLLECTION(allowInsert)\")),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NTY0MjU3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#pullrequestreview-348564257", "createdAt": "2020-01-27T10:32:12Z", "commit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDozMjoxM1rOFh-DJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDozMjoxM1rOFh-DJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE2Mzk0MQ==", "bodyText": "not sure this is correct. Data store should not interfere or override any TABLE option set on the definition. There's no reason to do that. I think we should restrict Data Store action only on the COLLECTION option and ignore all the rest", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#discussion_r371163941", "createdAt": "2020-01-27T10:32:13Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/model/common/DisplayContextParameterUtilTest.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package uk.gov.hmcts.ccd.domain.model.common;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+import static java.util.Arrays.asList;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertAll;\n+import static uk.gov.hmcts.ccd.domain.model.common.DisplayContextParameterUtil.Parameter.COLLECTION;\n+import static uk.gov.hmcts.ccd.domain.model.common.DisplayContextParameterUtil.Parameter.TABLE;\n+import static uk.gov.hmcts.ccd.domain.model.common.DisplayContextParameterUtil.updateDisplayContextParameter;\n+\n+class DisplayContextParameterUtilTest {\n+\n+    @Test\n+    @DisplayName(\"should create parameter)\")\n+    void shouldCreateParameter() {\n+        assertAll(\n+            () -> assertThat(updateDisplayContextParameter(\"\", COLLECTION, asList(\"allowInsert\", \"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete,allowInsert)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"\", COLLECTION, asList(\"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"\", TABLE, asList(\"postcode\")),\n+                is(\"#TABLE(postcode)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"\", TABLE, asList(\"AddressLine1\", \"postcode\")),\n+                is(\"#TABLE(AddressLine1,postcode)\"))\n+                 );\n+    }\n+\n+    @Test\n+    @DisplayName(\"should update parameter)\")\n+    void shouldUpdateParameter() {\n+        assertAll(\n+            () -> assertThat(updateDisplayContextParameter(\"#COLLECTION(allowInsert,allowDelete)\", COLLECTION, asList(\"allowInsert\", \"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete,allowInsert)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"#COLLECTION(allowInsert,allowDelete)\", COLLECTION, asList(\"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"#COLLECTION()\", COLLECTION, asList(\"allowInsert\")),\n+                is(\"#COLLECTION(allowInsert)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"#TABLE(param1,param2)\", TABLE, asList(\"postcode\")),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NTcwNjI1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#pullrequestreview-348570625", "createdAt": "2020-01-27T10:43:25Z", "commit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo0MzoyNVrOFh-WQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo0MzoyNVrOFh-WQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE2ODgzNA==", "bodyText": "mmm not sure about this but it seems to me these tests are describing a feature we don't provide. We only allow overriding of \"allowDelete, allowInsert\" of COLLECTION, so adding tests for all the rest seems a bit misleading to me. But we can leave them", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#discussion_r371168834", "createdAt": "2020-01-27T10:43:25Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/model/common/DisplayContextParameterUtilTest.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package uk.gov.hmcts.ccd.domain.model.common;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+import static java.util.Arrays.asList;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertAll;\n+import static uk.gov.hmcts.ccd.domain.model.common.DisplayContextParameterUtil.Parameter.COLLECTION;\n+import static uk.gov.hmcts.ccd.domain.model.common.DisplayContextParameterUtil.Parameter.TABLE;\n+import static uk.gov.hmcts.ccd.domain.model.common.DisplayContextParameterUtil.updateDisplayContextParameter;\n+\n+class DisplayContextParameterUtilTest {\n+\n+    @Test\n+    @DisplayName(\"should create parameter)\")\n+    void shouldCreateParameter() {\n+        assertAll(\n+            () -> assertThat(updateDisplayContextParameter(\"\", COLLECTION, asList(\"allowInsert\", \"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete,allowInsert)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"\", COLLECTION, asList(\"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"\", TABLE, asList(\"postcode\")),\n+                is(\"#TABLE(postcode)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"\", TABLE, asList(\"AddressLine1\", \"postcode\")),\n+                is(\"#TABLE(AddressLine1,postcode)\"))\n+                 );\n+    }\n+\n+    @Test\n+    @DisplayName(\"should update parameter)\")\n+    void shouldUpdateParameter() {\n+        assertAll(\n+            () -> assertThat(updateDisplayContextParameter(\"#COLLECTION(allowInsert,allowDelete)\", COLLECTION, asList(\"allowInsert\", \"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete,allowInsert)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"#COLLECTION(allowInsert,allowDelete)\", COLLECTION, asList(\"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"#COLLECTION()\", COLLECTION, asList(\"allowInsert\")),\n+                is(\"#COLLECTION(allowInsert)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"#TABLE(param1,param2)\", TABLE, asList(\"postcode\")),\n+                is(\"#TABLE(postcode)\"))\n+                 );\n+    }\n+\n+    @Test\n+    @DisplayName(\"should update parameter and produce multiple result)\")\n+    void shouldUpdateParameterMultiple() {\n+        assertAll(\n+            () -> assertThat(updateDisplayContextParameter(\"#TABLE()\", COLLECTION, asList(\"allowInsert\", \"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete,allowInsert),#TABLE()\")),\n+            () -> assertThat(updateDisplayContextParameter(\"#TABLE(),#COLLECTION(allowInsert,allowDelete)\", COLLECTION, asList(\"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete),#TABLE()\")),\n+            () -> assertThat(updateDisplayContextParameter(\"#TABLE(),#COLLECTION(allowInsert,allowDelete)\", TABLE, asList(\"postcode\")),\n+                is(\"#COLLECTION(allowDelete,allowInsert),#TABLE(postcode)\")),\n+            () -> assertThat(updateDisplayContextParameter(\"#TABLE(postcode),#COLLECTION(allowInsert,allowDelete)\", COLLECTION, asList(\"other\")),\n+                is(\"#COLLECTION(other),#TABLE(postcode)\"))\n+                 );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NTcxNTU4", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#pullrequestreview-348571558", "createdAt": "2020-01-27T10:45:07Z", "commit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo0NTowN1rOFh-ZDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo0NTowN1rOFh-ZDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE2OTU0OA==", "bodyText": "don't think we need to define anything else other than COLLECTION. That's all Data Store should concern with for now", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#discussion_r371169548", "createdAt": "2020-01-27T10:45:07Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/common/DisplayContextParameterUtil.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package uk.gov.hmcts.ccd.domain.model.common;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import static java.util.stream.Collectors.joining;\n+\n+public class DisplayContextParameterUtil {\n+    public enum Parameter {\n+        COLLECTION(\"#COLLECTION\"),\n+        TABLE(\"#TABLE\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NTcyOTU3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#pullrequestreview-348572957", "createdAt": "2020-01-27T10:47:35Z", "commit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo0NzozNVrOFh-dcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo0NzozNVrOFh-dcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3MDY3Mg==", "bodyText": "consider one of these alternative options:\n\nintroduce a method on CaseEventTrigger called getCollectionFields   (preferred)\ncaseEventTrigger.getCaseFields().stream().filter(caseViewField.isCollectionFieldType())....", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#discussion_r371170672", "createdAt": "2020-01-27T10:47:35Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/AccessControlService.java", "diffHunk": "@@ -239,6 +252,46 @@ public CaseEventTrigger setReadOnlyOnCaseViewFieldsIfNoAccess(final CaseEventTri\n         return caseEventTrigger;\n     }\n \n+    public CaseEventTrigger updateCollectionDisplayContextParameterByAccess(final CaseEventTrigger caseEventTrigger,\n+                                                                            final Set<String> userRoles) {\n+        caseEventTrigger.getCaseFields()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NTc1MTE0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#pullrequestreview-348575114", "createdAt": "2020-01-27T10:51:27Z", "commit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo1MToyN1rOFh-kGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo1MToyN1rOFh-kGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3MjM3OA==", "bodyText": "I would change this method to add to collectionAccess CAN_CREATE and CAN_DELETE rather than \"allowInsert\" and \"allowDelete\". It's then DisplayContextParameterUtil that converts  CAN_CREATE to \"allowInsert\"  and CAN_DELETE to \"allowDelete\". This way  \"allowInsert\"  and \"allowDelete\"  are nicely encapsulated inside DisplayContextParameterUtil", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#discussion_r371172378", "createdAt": "2020-01-27T10:51:27Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/AccessControlService.java", "diffHunk": "@@ -239,6 +252,46 @@ public CaseEventTrigger setReadOnlyOnCaseViewFieldsIfNoAccess(final CaseEventTri\n         return caseEventTrigger;\n     }\n \n+    public CaseEventTrigger updateCollectionDisplayContextParameterByAccess(final CaseEventTrigger caseEventTrigger,\n+                                                                            final Set<String> userRoles) {\n+        caseEventTrigger.getCaseFields()\n+            .forEach(caseViewField -> {\n+                if (caseViewField.isCollectionFieldType()) {\n+                    caseViewField.setDisplayContextParameter(getCollectionAccess(userRoles, caseViewField));\n+                }\n+\n+                setChildrenCollectionDisplayContextParameter(caseViewField.getFieldType().getChildren(), userRoles);\n+            });\n+        return caseEventTrigger;\n+    }\n+\n+    private void setChildrenCollectionDisplayContextParameter(final List<CaseField> caseFields,\n+                                                              final Set<String> userRoles) {\n+        caseFields.forEach(childField -> {\n+            if (childField.isCollectionFieldType()) {\n+                childField.setDisplayContextParameter(getCollectionAccess(userRoles, childField));\n+            }\n+\n+            setChildrenCollectionDisplayContextParameter(childField.getFieldType().getChildren(), userRoles);\n+        });\n+    }\n+\n+    private String getCollectionAccess(Set<String> userRoles, CommonField field) {\n+        List<String> collectionAccess = new ArrayList<>();\n+        if (hasAccessControlList(userRoles, CAN_CREATE, field.getAccessControlLists())) {\n+            collectionAccess.add(\"allowInsert\");\n+        }\n+        if (hasAccessControlList(userRoles, CAN_DELETE, field.getAccessControlLists())) {\n+            collectionAccess.add(\"allowDelete\");\n+        }\n+        if (hasAccessControlList(userRoles, CAN_UPDATE, field.getAccessControlLists())) {\n+            collectionAccess.add(\"allowInsert\");\n+            collectionAccess.add(\"allowDelete\");\n+        }\n+        return DisplayContextParameterUtil.updateDisplayContextParameter(field.getDisplayContextParameter(),\n+            DisplayContextParameterUtil.Parameter.COLLECTION, collectionAccess);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NTc4Mzc5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#pullrequestreview-348578379", "createdAt": "2020-01-27T10:57:17Z", "commit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo1NzoxN1rOFh-t2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo1NzoxN1rOFh-t2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3NDg3NQ==", "bodyText": "I would rename getCollectionAccess to generateDisplayContextParamer or similar because we are recalculating the whole displayContextParameter", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#discussion_r371174875", "createdAt": "2020-01-27T10:57:17Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/AccessControlService.java", "diffHunk": "@@ -239,6 +252,46 @@ public CaseEventTrigger setReadOnlyOnCaseViewFieldsIfNoAccess(final CaseEventTri\n         return caseEventTrigger;\n     }\n \n+    public CaseEventTrigger updateCollectionDisplayContextParameterByAccess(final CaseEventTrigger caseEventTrigger,\n+                                                                            final Set<String> userRoles) {\n+        caseEventTrigger.getCaseFields()\n+            .forEach(caseViewField -> {\n+                if (caseViewField.isCollectionFieldType()) {\n+                    caseViewField.setDisplayContextParameter(getCollectionAccess(userRoles, caseViewField));\n+                }\n+\n+                setChildrenCollectionDisplayContextParameter(caseViewField.getFieldType().getChildren(), userRoles);\n+            });\n+        return caseEventTrigger;\n+    }\n+\n+    private void setChildrenCollectionDisplayContextParameter(final List<CaseField> caseFields,\n+                                                              final Set<String> userRoles) {\n+        caseFields.forEach(childField -> {\n+            if (childField.isCollectionFieldType()) {\n+                childField.setDisplayContextParameter(getCollectionAccess(userRoles, childField));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NTgxNDg1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#pullrequestreview-348581485", "createdAt": "2020-01-27T11:03:09Z", "commit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMTowMzowOVrOFh-3lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMTowMzowOVrOFh-3lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3NzM2Ng==", "bodyText": "we need to be careful here. Strictly speaking this ticket should only have effect for case roles. But because userRoles also contains idam roles, when EUI implements the UI part of this ticket, it's possible the UI behaviour will change also for permissions set on Idam roles...\nso if we wanted to implement the ticket strictly, you should only consider the case roles, not the whole userRoles", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#discussion_r371177366", "createdAt": "2020-01-27T11:03:09Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/AccessControlService.java", "diffHunk": "@@ -239,6 +252,46 @@ public CaseEventTrigger setReadOnlyOnCaseViewFieldsIfNoAccess(final CaseEventTri\n         return caseEventTrigger;\n     }\n \n+    public CaseEventTrigger updateCollectionDisplayContextParameterByAccess(final CaseEventTrigger caseEventTrigger,\n+                                                                            final Set<String> userRoles) {\n+        caseEventTrigger.getCaseFields()\n+            .forEach(caseViewField -> {\n+                if (caseViewField.isCollectionFieldType()) {\n+                    caseViewField.setDisplayContextParameter(getCollectionAccess(userRoles, caseViewField));\n+                }\n+\n+                setChildrenCollectionDisplayContextParameter(caseViewField.getFieldType().getChildren(), userRoles);\n+            });\n+        return caseEventTrigger;\n+    }\n+\n+    private void setChildrenCollectionDisplayContextParameter(final List<CaseField> caseFields,\n+                                                              final Set<String> userRoles) {\n+        caseFields.forEach(childField -> {\n+            if (childField.isCollectionFieldType()) {\n+                childField.setDisplayContextParameter(getCollectionAccess(userRoles, childField));\n+            }\n+\n+            setChildrenCollectionDisplayContextParameter(childField.getFieldType().getChildren(), userRoles);\n+        });\n+    }\n+\n+    private String getCollectionAccess(Set<String> userRoles, CommonField field) {\n+        List<String> collectionAccess = new ArrayList<>();\n+        if (hasAccessControlList(userRoles, CAN_CREATE, field.getAccessControlLists())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NTgyNjQx", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#pullrequestreview-348582641", "createdAt": "2020-01-27T11:05:15Z", "commit": {"oid": "a461c7b5920b0cf61c58786cd4ab40260ade7db3"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e548bfc0490231ba327bf56a2701f6b98853c7f0", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e548bfc0490231ba327bf56a2701f6b98853c7f0", "committedDate": "2020-01-27T17:15:53Z", "message": "RDM-6757 Addressed PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6554dedec447b6d58ed494269e99a9ac039f9a38", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/6554dedec447b6d58ed494269e99a9ac039f9a38", "committedDate": "2020-01-28T11:30:35Z", "message": "RDM-6757 Addressed PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MzQ2Mjk5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#pullrequestreview-349346299", "createdAt": "2020-01-28T12:47:10Z", "commit": {"oid": "6554dedec447b6d58ed494269e99a9ac039f9a38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo0NzoxMVrOFijsqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo0NzoxMVrOFijsqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc4MDc3OA==", "bodyText": "this code could seems a bit too complex would be good if we could further simplify by breaking it down into more private method with self explanatory names", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#discussion_r371780778", "createdAt": "2020-01-28T12:47:11Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/common/DisplayContextParameterUtil.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package uk.gov.hmcts.ccd.domain.model.common;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import static org.apache.commons.lang3.StringUtils.isBlank;\n+import static uk.gov.hmcts.ccd.domain.model.common.DisplayContextParameterCollectionOptions.ALLOW_DELETE;\n+import static uk.gov.hmcts.ccd.domain.model.common.DisplayContextParameterCollectionOptions.ALLOW_INSERT;\n+\n+public class DisplayContextParameterUtil {\n+\n+    public static String COLLECTION = \"COLLECTION\";\n+\n+    public static String updateCollectionDisplayContextParameter(final String currentDisplayContextParameter,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6554dedec447b6d58ed494269e99a9ac039f9a38"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MzQ4MDg5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#pullrequestreview-349348089", "createdAt": "2020-01-28T12:50:25Z", "commit": {"oid": "6554dedec447b6d58ed494269e99a9ac039f9a38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo1MDoyNVrOFijycA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo1MDoyNVrOFijycA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc4MjI1Ng==", "bodyText": "this one is funny, how come the result has the order inverted?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#discussion_r371782256", "createdAt": "2020-01-28T12:50:25Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/model/common/DisplayContextParameterUtilTest.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package uk.gov.hmcts.ccd.domain.model.common;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+import static java.util.Arrays.asList;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertAll;\n+import static uk.gov.hmcts.ccd.domain.model.common.DisplayContextParameterUtil.updateCollectionDisplayContextParameter;\n+\n+class DisplayContextParameterUtilTest {\n+\n+    @Test\n+    @DisplayName(\"should create collection parameter)\")\n+    void shouldCreateCollectionParameter() {\n+        assertAll(\n+            () -> assertThat(updateCollectionDisplayContextParameter(\"\", asList(\"allowInsert\", \"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete,allowInsert)\")),\n+            () -> assertThat(updateCollectionDisplayContextParameter(\"\", asList(\"allowInsert\")),\n+                is(\"#COLLECTION(allowInsert)\")),\n+            () -> assertThat(updateCollectionDisplayContextParameter(\"\", asList(\"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete)\")),\n+            () -> assertThat(updateCollectionDisplayContextParameter(\"\", asList(\"\")),\n+                is(\"#COLLECTION()\"))\n+                 );\n+    }\n+\n+    @Test\n+    @DisplayName(\"should update parameter)\")\n+    void shouldUpdateParameter() {\n+        assertAll(\n+            () -> assertThat(updateCollectionDisplayContextParameter(\"#COLLECTION(allowInsert,allowDelete)\", asList(\"allowInsert\", \"allowDelete\")),\n+                is(\"#COLLECTION(allowDelete,allowInsert)\")),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6554dedec447b6d58ed494269e99a9ac039f9a38"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MzUwNjUz", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#pullrequestreview-349350653", "createdAt": "2020-01-28T12:54:53Z", "commit": {"oid": "6554dedec447b6d58ed494269e99a9ac039f9a38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo1NDo1M1rOFij6mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMjo1NDo1M1rOFij6mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc4NDM0Nw==", "bodyText": "We should add few integration tests as well, especially one testing collection of complex of collection...", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#discussion_r371784347", "createdAt": "2020-01-28T12:54:53Z", "author": {"login": "mario-paniccia"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/common/AccessControlServiceFilterTest.java", "diffHunk": "@@ -1152,6 +1154,162 @@ void filterComplexCaseFieldChildrenByUpdateAccessWhenAllAccessIsOnCreate() {\n         }\n     }\n \n+    @Nested\n+    @DisplayName(\"updateCollectionDisplayContextParameter for Event Triggers Tests\")\n+    class UpdateCollectionDisplayContextParameterByAccessTests {\n+\n+        @Test\n+        @DisplayName(\"Should set #COLLECTION(allowInsert,allowDelete) in DisplayContextParameter of a collection \" +\n+            \"caseField when create and delete ACLs are set\")\n+        void updateCollectionDisplayContextParameterWhenFieldHasCreateDeleteRoles() {\n+\n+            final CaseViewField caseViewField1 = aViewField()\n+                .withId(\"People\")\n+                .withFieldType(aFieldType()\n+                    .withId(\"G339483948\")\n+                    .withType(COLLECTION)\n+                    .build())\n+                .withACL(anAcl()\n+                    .withRole(ROLE_IN_USER_ROLES)\n+                    .withCreate(true)\n+                    .withDelete(true)\n+                    .withUpdate(false)\n+                    .build())\n+                .build();\n+            caseViewField1.getFieldType().setCollectionFieldType(getPersonFieldType());\n+            caseViewField1.getFieldType().getChildren().stream()\n+                .filter(e -> e.getId().equals(\"Addresses\")).findFirst()\n+                .get().setAccessControlLists(asList(anAcl()\n+                .withRole(ROLE_IN_USER_ROLES)\n+                .withCreate(true)\n+                .withDelete(true)\n+                .withUpdate(false)\n+                .build()));\n+\n+            CaseEventTrigger caseEventTrigger = newCaseEventTrigger()\n+                .withField(caseViewField1)\n+                .withWizardPage(newWizardPage()\n+                        .withId(\"Page One\")\n+                        .withField(caseViewField1)\n+                        .build()\n+                               )\n+                .build();\n+\n+            CaseEventTrigger eventTrigger = accessControlService.updateCollectionDisplayContextParameterByAccess(\n+                caseEventTrigger,\n+                USER_ROLES);\n+\n+            assertThat(\"There should be only one caseField\", eventTrigger.getCaseFields(), hasSize(1));\n+\n+            CaseViewField people = eventTrigger.getCaseFields().stream()\n+                .filter(e -> e.getId().equals(\"People\")).findFirst().get();\n+\n+            assertAll(\n+                () -> assertNotNull(people),\n+                () -> assertTrue(people.getDisplayContextParameter().contains(\"#COLLECTION(\")),\n+                () -> assertTrue(people.getDisplayContextParameter().contains(\"allowInsert\")),\n+                () -> assertTrue(people.getDisplayContextParameter().contains(\"allowDelete\"))\n+                     );\n+\n+            CaseField addresses = people.getFieldType().getChildren().stream()\n+                .filter(e -> e.getId().equals(\"Addresses\")).findFirst()\n+                .get();\n+\n+            assertAll(\n+                () -> assertTrue(addresses.getDisplayContextParameter().contains(\"#COLLECTION(\")),\n+                () -> assertTrue(addresses.getDisplayContextParameter().contains(\"allowInsert\")),\n+                () -> assertTrue(addresses.getDisplayContextParameter().contains(\"allowDelete\"))\n+                     );\n+        }\n+\n+        @Test\n+        @DisplayName(\"Should set #COLLECTION(allowInsert,allowDelete) in DisplayContextParameter of a collection \" +\n+            \"caseField when an update ACL is set\")\n+        void updateCollectionDisplayContextParameterWhenFieldHasUpdateRole() {\n+\n+            final CaseViewField caseViewField1 = aViewField()\n+                .withId(\"People\")\n+                .withFieldType(aFieldType()\n+                    .withId(\"G339483948\")\n+                    .withType(COLLECTION)\n+                    .build())\n+                .withACL(anAcl()\n+                    .withRole(ROLE_IN_USER_ROLES)\n+                    .withCreate(false)\n+                    .withDelete(false)\n+                    .withUpdate(true)\n+                    .build())\n+                .build();\n+            caseViewField1.getFieldType().setCollectionFieldType(getPersonFieldType());\n+\n+            CaseEventTrigger caseEventTrigger = newCaseEventTrigger()\n+                .withField(caseViewField1)\n+                .withWizardPage(newWizardPage()\n+                        .withId(\"Page One\")\n+                        .withField(caseViewField1)\n+                        .build()\n+                               )\n+                .build();\n+\n+            CaseEventTrigger eventTrigger = accessControlService.updateCollectionDisplayContextParameterByAccess(\n+                caseEventTrigger,\n+                USER_ROLES);\n+\n+            CaseViewField people = eventTrigger.getCaseFields().stream()\n+                .filter(e -> e.getId().equals(\"People\")).findFirst().get();\n+\n+            assertAll(\n+                () -> assertNotNull(people),\n+                () -> assertTrue(people.getDisplayContextParameter().contains(\"#COLLECTION(\")),\n+                () -> assertTrue(people.getDisplayContextParameter().contains(\"allowInsert\")),\n+                () -> assertTrue(people.getDisplayContextParameter().contains(\"allowDelete\"))\n+                     );\n+        }\n+\n+        @Test\n+        @DisplayName(\"Should set #COLLECTION() in DisplayContextParameter of a collection caseField when no ACL set\")\n+        void updateCollectionDisplayContextParameterWhenFieldHasNoCreateDeleteUpdateRoles() {\n+\n+            final CaseViewField caseViewField1 = aViewField()\n+                .withId(\"People\")\n+                .withFieldType(aFieldType()\n+                    .withId(\"G339483948\")\n+                    .withType(COLLECTION)\n+                    .build())\n+                .withACL(anAcl()\n+                    .withRole(ROLE_IN_USER_ROLES)\n+                    .withCreate(false)\n+                    .withDelete(false)\n+                    .withUpdate(false)\n+                    .build())\n+                .build();\n+            caseViewField1.getFieldType().setCollectionFieldType(getPersonFieldType());\n+\n+            CaseEventTrigger caseEventTrigger = newCaseEventTrigger()\n+                .withField(caseViewField1)\n+                .withWizardPage(newWizardPage()\n+                        .withId(\"Page One\")\n+                        .withField(caseViewField1)\n+                        .build()\n+                               )\n+                .build();\n+\n+            CaseEventTrigger eventTrigger = accessControlService.updateCollectionDisplayContextParameterByAccess(\n+                caseEventTrigger,\n+                USER_ROLES);\n+\n+            CaseViewField people = eventTrigger.getCaseFields().stream()\n+                .filter(e -> e.getId().equals(\"People\")).findFirst().get();\n+\n+            assertAll(\n+                () -> assertNotNull(people),\n+                () -> assertTrue(people.getDisplayContextParameter().contains(\"#COLLECTION(\")),\n+                () -> assertFalse(people.getDisplayContextParameter().contains(\"allowInsert\")),\n+                () -> assertFalse(people.getDisplayContextParameter().contains(\"allowDelete\"))\n+                     );\n+        }\n+    }\n+\n     @Nested", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6554dedec447b6d58ed494269e99a9ac039f9a38"}, "originalPosition": 213}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04833dded891af5938a2ef51d3dbb8afa81e64e7", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/04833dded891af5938a2ef51d3dbb8afa81e64e7", "committedDate": "2020-01-30T16:46:56Z", "message": "RDM-6757 Addressed PR comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3de775d06b68eb830593cea74f18aac08bc0c5c", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/c3de775d06b68eb830593cea74f18aac08bc0c5c", "committedDate": "2020-01-31T10:47:21Z", "message": "RDM-6757 Addressed PR comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNDI5NjQw", "url": "https://github.com/hmcts/ccd-data-store-api/pull/745#pullrequestreview-351429640", "createdAt": "2020-01-31T10:56:08Z", "commit": {"oid": "c3de775d06b68eb830593cea74f18aac08bc0c5c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0619b724b575022daa003b32415253de4d622f8", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/b0619b724b575022daa003b32415253de4d622f8", "committedDate": "2020-02-20T10:18:37Z", "message": "Merge branch 'develop' into respondent-journey-RDM-6757"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd330d435d96e71f2d775d36bb4b2a6d5a94c247", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/fd330d435d96e71f2d775d36bb4b2a6d5a94c247", "committedDate": "2020-02-20T10:41:47Z", "message": "Fix merge build issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65f11d0e2ed2432e6484c6824d8a74d8a9a45c92", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/65f11d0e2ed2432e6484c6824d8a74d8a9a45c92", "committedDate": "2020-02-20T11:05:07Z", "message": "Fix checkstyle issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c619e38543258e4be9622e6f2c76ca6eb1c1387", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/5c619e38543258e4be9622e6f2c76ca6eb1c1387", "committedDate": "2020-02-20T11:37:29Z", "message": "Added missing final"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8eff97d60a85b11c1413ecbe1c711775d895896b", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/8eff97d60a85b11c1413ecbe1c711775d895896b", "committedDate": "2020-02-20T12:49:40Z", "message": "Update BEFTA tests with display_context_parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef7c6fd57f66dfc5bb53ea87c236c1374b957f73", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/ef7c6fd57f66dfc5bb53ea87c236c1374b957f73", "committedDate": "2020-02-21T14:22:00Z", "message": "Merge branch 'develop' into respondent-journey-RDM-6757"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7b6a2b91c4143c954c31bad1d72a5aafb924af6", "author": {"user": {"login": "rafalkalita", "name": "Rafal Kalita"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/c7b6a2b91c4143c954c31bad1d72a5aafb924af6", "committedDate": "2020-02-25T15:34:21Z", "message": "Merge branch 'develop' into respondent-journey-RDM-6757"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c064da03e512fc30669b77f23f12c6deab578e64", "author": {"user": {"login": "smathangi", "name": "Sateesh Mathangi"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/c064da03e512fc30669b77f23f12c6deab578e64", "committedDate": "2020-03-03T09:15:55Z", "message": "Ignoring 403 test cases where token validation fails. Will be rewritten as part of RDM-6847 (#834)\n\n* RDM-7621 - ignored few security tests as they are invalid with 401 response upon authentication failures\r\n\r\n* RDM-7621 - two more 403 ones\r\n\r\n* RDM-7621 - comment text change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3109bf4f022863c087587b79baa4ba140b36c66e", "author": {"user": {"login": "hemantt", "name": "Hemanth Potipati"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/3109bf4f022863c087587b79baa4ba140b36c66e", "committedDate": "2020-03-05T12:14:47Z", "message": "Merge branch 'develop' into respondent-journey-RDM-6757"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2681, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}