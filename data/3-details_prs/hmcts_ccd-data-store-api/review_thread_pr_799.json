{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxODYzNjc5", "number": 799, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMDoxMjo0MFrODd-SGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMToyNjozNVrODfJFcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzU1NzM4OnYy", "diffSide": "RIGHT", "path": "src/aat/resources/features/F-036/S-199.td.json", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMDoxMjo0MFrOFm4ScQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwOToyMDo1OFrOFnevNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxMjQzMw==", "bodyText": "not that great that we have to update so many test data files when we add a property to the json. The number of json files will only grow in the future once the number of func tests grows. I see some serious maintainability problems @MSancaktutar", "url": "https://github.com/hmcts/ccd-data-store-api/pull/799#discussion_r376312433", "createdAt": "2020-02-07T10:12:40Z", "author": {"login": "mario-paniccia"}, "path": "src/aat/resources/features/F-036/S-199.td.json", "diffHunk": "@@ -29,6 +29,7 @@\n         \"case_type_id\": \"AAT_AUTH_15\",\n         \"created_date\": \"[[ANY]]\",\n         \"last_modified\": \"[[ANY]]\",\n+        \"last_state_modified_date\": \"[[ANY]]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f68c9f8753ecadc23d65501323299f954e96e5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMyNjYzMg==", "bodyText": "If the outcomes of many functions are changing out of a code change, we should update all the functional verifications. That's integral part of the delivery. However, to reduce the maintenance efforts, we already have data inheritance/re-use mechanisms in place. The current use of the mechanism is already reducing that load a huge amount. If further uses are possible, we can improve the test data, just as with anything else.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/799#discussion_r376326632", "createdAt": "2020-02-07T10:43:48Z", "author": {"login": "MSancaktutar"}, "path": "src/aat/resources/features/F-036/S-199.td.json", "diffHunk": "@@ -29,6 +29,7 @@\n         \"case_type_id\": \"AAT_AUTH_15\",\n         \"created_date\": \"[[ANY]]\",\n         \"last_modified\": \"[[ANY]]\",\n+        \"last_state_modified_date\": \"[[ANY]]\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxMjQzMw=="}, "originalCommit": {"oid": "99f68c9f8753ecadc23d65501323299f954e96e5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMyODU1Ng==", "bodyText": "For example, SB upgrade brought a new Strict-Transport-Security header to almost all our responses, and we added it to only 2 or 3 places among 300+ files, to reflect the change to the verification of hundreds of test scenarios. This is how things should ideally work, and we can achieve it gradually improving the quality of test data files for smarter use of the framework etc.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/799#discussion_r376328556", "createdAt": "2020-02-07T10:48:13Z", "author": {"login": "MSancaktutar"}, "path": "src/aat/resources/features/F-036/S-199.td.json", "diffHunk": "@@ -29,6 +29,7 @@\n         \"case_type_id\": \"AAT_AUTH_15\",\n         \"created_date\": \"[[ANY]]\",\n         \"last_modified\": \"[[ANY]]\",\n+        \"last_state_modified_date\": \"[[ANY]]\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxMjQzMw=="}, "originalCommit": {"oid": "99f68c9f8753ecadc23d65501323299f954e96e5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk0MjM4OA==", "bodyText": "adding a new property to the case data it's something that it's gonna happen again in the future. I'd suggest we apply the inheritance/re-use mechanism for these cases  as well to reduce the number of test files we'll have to update in the future. Too many test files had to be updated in this PR. I'd suggest we raise an Improvement ticket for this", "url": "https://github.com/hmcts/ccd-data-store-api/pull/799#discussion_r376942388", "createdAt": "2020-02-10T09:20:58Z", "author": {"login": "mario-paniccia"}, "path": "src/aat/resources/features/F-036/S-199.td.json", "diffHunk": "@@ -29,6 +29,7 @@\n         \"case_type_id\": \"AAT_AUTH_15\",\n         \"created_date\": \"[[ANY]]\",\n         \"last_modified\": \"[[ANY]]\",\n+        \"last_state_modified_date\": \"[[ANY]]\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxMjQzMw=="}, "originalCommit": {"oid": "99f68c9f8753ecadc23d65501323299f954e96e5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTg2NTY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/CreateCaseEventService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwOTozNjoyNVrOFnfOJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjo1NjoyOFrOFoRBmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk1MDMxMQ==", "bodyText": "just an improvement suggestion. Feel free to ignore.\nUsually when working with dates, to make testability simpler, it's recommended to have a DateService with methods like now() and others which can then be mocked in Unit tests. We could introduce that", "url": "https://github.com/hmcts/ccd-data-store-api/pull/799#discussion_r376950311", "createdAt": "2020-02-10T09:36:25Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/CreateCaseEventService.java", "diffHunk": "@@ -168,12 +168,15 @@ private CaseDetails getCaseDetails(final String caseReference) {\n             .orElseThrow(() -> new ResourceNotFoundException(format(\"Case with reference %s could not be found\", caseReference)));\n     }\n \n-    private CaseDetails saveCaseDetails(final CaseDetails caseDetails,\n+    private CaseDetails saveCaseDetails(CaseDetails caseDetailsBefore, final CaseDetails caseDetails,\n                                         final CaseEvent eventTrigger,\n                                         final Optional<String> state) {\n         if (!state.isPresent() && !equalsIgnoreCase(CaseState.ANY, eventTrigger.getPostState())) {\n             caseDetails.setState(eventTrigger.getPostState());\n         }\n+        if (!caseDetails.getState().equalsIgnoreCase(caseDetailsBefore.getState())) {\n+            caseDetails.setLastStateModifiedDate(LocalDateTime.now(ZoneOffset.UTC));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f68c9f8753ecadc23d65501323299f954e96e5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2NTAxOA==", "bodyText": "Yes, I agree. I'll see if i can introduce \"Clock\" class.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/799#discussion_r377065018", "createdAt": "2020-02-10T13:36:07Z", "author": {"login": "smathangi"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/CreateCaseEventService.java", "diffHunk": "@@ -168,12 +168,15 @@ private CaseDetails getCaseDetails(final String caseReference) {\n             .orElseThrow(() -> new ResourceNotFoundException(format(\"Case with reference %s could not be found\", caseReference)));\n     }\n \n-    private CaseDetails saveCaseDetails(final CaseDetails caseDetails,\n+    private CaseDetails saveCaseDetails(CaseDetails caseDetailsBefore, final CaseDetails caseDetails,\n                                         final CaseEvent eventTrigger,\n                                         final Optional<String> state) {\n         if (!state.isPresent() && !equalsIgnoreCase(CaseState.ANY, eventTrigger.getPostState())) {\n             caseDetails.setState(eventTrigger.getPostState());\n         }\n+        if (!caseDetails.getState().equalsIgnoreCase(caseDetailsBefore.getState())) {\n+            caseDetails.setLastStateModifiedDate(LocalDateTime.now(ZoneOffset.UTC));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk1MDMxMQ=="}, "originalCommit": {"oid": "99f68c9f8753ecadc23d65501323299f954e96e5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc2NjI5Ng==", "bodyText": "done", "url": "https://github.com/hmcts/ccd-data-store-api/pull/799#discussion_r377766296", "createdAt": "2020-02-11T16:56:28Z", "author": {"login": "smathangi"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/CreateCaseEventService.java", "diffHunk": "@@ -168,12 +168,15 @@ private CaseDetails getCaseDetails(final String caseReference) {\n             .orElseThrow(() -> new ResourceNotFoundException(format(\"Case with reference %s could not be found\", caseReference)));\n     }\n \n-    private CaseDetails saveCaseDetails(final CaseDetails caseDetails,\n+    private CaseDetails saveCaseDetails(CaseDetails caseDetailsBefore, final CaseDetails caseDetails,\n                                         final CaseEvent eventTrigger,\n                                         final Optional<String> state) {\n         if (!state.isPresent() && !equalsIgnoreCase(CaseState.ANY, eventTrigger.getPostState())) {\n             caseDetails.setState(eventTrigger.getPostState());\n         }\n+        if (!caseDetails.getState().equalsIgnoreCase(caseDetailsBefore.getState())) {\n+            caseDetails.setLastStateModifiedDate(LocalDateTime.now(ZoneOffset.UTC));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk1MDMxMQ=="}, "originalCommit": {"oid": "99f68c9f8753ecadc23d65501323299f954e96e5"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTc4OTAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/CoreCaseDataApplication.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMToxODozM1rOFoq0yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMToxODozM1rOFoq0yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4OTAwMA==", "bodyText": "shall we do utcClock?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/799#discussion_r378189000", "createdAt": "2020-02-12T11:18:33Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/CoreCaseDataApplication.java", "diffHunk": "@@ -33,4 +37,9 @@ public static void main(String[] args) {\n         SpringApplication.run(CoreCaseDataApplication.class, args);\n     }\n \n+    @Bean\n+    public Clock uTCClock() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6f07349689959775cfcb67b46eb7dd38d1ccda0"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTgxMjk2OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/CoreCaseDataApplication.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMToyNjozNVrOForDHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTo0NzozOFrOForpMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE5MjY2OA==", "bodyText": "could we replace with:\nClock.systemUTC()?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/799#discussion_r378192668", "createdAt": "2020-02-12T11:26:35Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/CoreCaseDataApplication.java", "diffHunk": "@@ -33,4 +37,9 @@ public static void main(String[] args) {\n         SpringApplication.run(CoreCaseDataApplication.class, args);\n     }\n \n+    @Bean\n+    public Clock uTCClock() {\n+        return Clock.system(ZoneOffset.UTC);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6f07349689959775cfcb67b46eb7dd38d1ccda0"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE5NjEzOA==", "bodyText": "can we notify QAs we've made some changes on the way we retrieve current time ? Better doing some regression testing on this", "url": "https://github.com/hmcts/ccd-data-store-api/pull/799#discussion_r378196138", "createdAt": "2020-02-12T11:33:43Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/CoreCaseDataApplication.java", "diffHunk": "@@ -33,4 +37,9 @@ public static void main(String[] args) {\n         SpringApplication.run(CoreCaseDataApplication.class, args);\n     }\n \n+    @Bean\n+    public Clock uTCClock() {\n+        return Clock.system(ZoneOffset.UTC);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE5MjY2OA=="}, "originalCommit": {"oid": "d6f07349689959775cfcb67b46eb7dd38d1ccda0"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE5ODc3MQ==", "bodyText": "sure but no changes tbh.\nLocalDateTime.now(ZoneOffset.UTC) => LocalDateTime.now(Clock.systemUTC())", "url": "https://github.com/hmcts/ccd-data-store-api/pull/799#discussion_r378198771", "createdAt": "2020-02-12T11:39:35Z", "author": {"login": "smathangi"}, "path": "src/main/java/uk/gov/hmcts/ccd/CoreCaseDataApplication.java", "diffHunk": "@@ -33,4 +37,9 @@ public static void main(String[] args) {\n         SpringApplication.run(CoreCaseDataApplication.class, args);\n     }\n \n+    @Bean\n+    public Clock uTCClock() {\n+        return Clock.system(ZoneOffset.UTC);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE5MjY2OA=="}, "originalCommit": {"oid": "d6f07349689959775cfcb67b46eb7dd38d1ccda0"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIwMjQxNg==", "bodyText": "ok then if you are 100% confident ignore my request", "url": "https://github.com/hmcts/ccd-data-store-api/pull/799#discussion_r378202416", "createdAt": "2020-02-12T11:47:38Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/CoreCaseDataApplication.java", "diffHunk": "@@ -33,4 +37,9 @@ public static void main(String[] args) {\n         SpringApplication.run(CoreCaseDataApplication.class, args);\n     }\n \n+    @Bean\n+    public Clock uTCClock() {\n+        return Clock.system(ZoneOffset.UTC);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE5MjY2OA=="}, "originalCommit": {"oid": "d6f07349689959775cfcb67b46eb7dd38d1ccda0"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3870, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}