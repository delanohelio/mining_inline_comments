{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NDAyNDg1", "number": 1194, "title": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORG\u2026", "bodyText": "RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n\u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939).", "createdAt": "2020-11-04T13:57:13Z", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194", "merged": true, "mergeCommit": {"oid": "66dde8b385bde5dcffb06034784aa027f3da2e9d"}, "closed": true, "closedAt": "2020-11-23T09:07:08Z", "author": {"login": "Thor-tech-of-metal"}, "timelineItems": {"totalCount": 68, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZOOAtgH2gAyNTE1NDAyNDg1OjczOGE1ZDE2YzkxZTI2YzQxMzAyYjNmYTlkY2FjOTUxZTc5OWI5NGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfTI4VgFqTUzNjM2NDYwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "738a5d16c91e26c41302b3fa9dcac951e799b94b", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/738a5d16c91e26c41302b3fa9dcac951e799b94b", "committedDate": "2020-11-04T13:59:19Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMzg1Mzc1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-523385375", "createdAt": "2020-11-04T14:00:02Z", "commit": {"oid": "738a5d16c91e26c41302b3fa9dcac951e799b94b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDowMDowMlrOHtZSyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDowMDowMlrOHtZSyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM2MjM3Ng==", "bodyText": "It would be good trying to add this class for all custom validators which extends from DataFieldIdValidator or  PredefinedTypeFieldValidator .  That would lead to deleting  DataFieldIdValidator class.\nValidationContext should be available for all validators  types. regardless its data us use or not.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r517362376", "createdAt": "2020-11-04T14:00:02Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/ValidationContext.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package uk.gov.hmcts.ccd.domain.types;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "738a5d16c91e26c41302b3fa9dcac951e799b94b"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MTAzNzk3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-524103797", "createdAt": "2020-11-05T10:06:06Z", "commit": {"oid": "738a5d16c91e26c41302b3fa9dcac951e799b94b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDowNjowNlrOHt8AwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDowNjowNlrOHt8AwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkzMTIwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    caseTypeService.validateData(content.getData(), caseTypeDefinition, createValidationContext(caseTypeId, content));\n          \n          \n            \n                    caseTypeService.validateData(createValidationContext(content, caseTypeDefinition));\n          \n      \n    \n    \n  \n\nif it's not a big change, why don't you refactor the method to take only 1 parameter the ValidationContext that contains everything?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r517931201", "createdAt": "2020-11-05T10:06:06Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java", "diffHunk": "@@ -59,78 +54,10 @@\n                 + \" is not found in case type definition\");\n         }\n         content.setData(fieldProcessorService.processData(content.getData(), caseTypeDefinition, content.getEventId()));\n-        caseTypeService.validateData(content.getData(), caseTypeDefinition);\n-        validateOrganisationPolicy(caseTypeId, content);\n+        caseTypeService.validateData(content.getData(), caseTypeDefinition, createValidationContext(caseTypeId, content));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "738a5d16c91e26c41302b3fa9dcac951e799b94b"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MTI2ODE1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-524126815", "createdAt": "2020-11-05T10:33:59Z", "commit": {"oid": "738a5d16c91e26c41302b3fa9dcac951e799b94b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDozMzo1OVrOHt9FKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDozMzo1OVrOHt9FKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk0ODcxMg==", "bodyText": "this class is a Singleton, so it's shared between many threads. It's not safe to set the validation context in an instance variable.\nYou need to pass that to the validate method:\nvalidate(data, caseFieldDefinitions, CaseDataValidator.EMPTY_STRING, validationContext);", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r517948712", "createdAt": "2020-11-05T10:33:59Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/CaseDataValidator.java", "diffHunk": "@@ -26,14 +26,17 @@\n     private static final String FIELD_SEPARATOR = \".\";\n \n     private List<FieldValidator> validators;\n+    private ValidationContext validationContext;\n \n     @Inject\n     public CaseDataValidator(final List<FieldValidator> validators) {\n         this.validators = validators;\n     }\n \n     public List<ValidationResult> validate(final Map<String, JsonNode> data,\n-                                           final List<CaseFieldDefinition> caseFieldDefinitions) {\n+                                           final List<CaseFieldDefinition> caseFieldDefinitions,\n+                                           final ValidationContext validationContext) {\n+        this.validationContext = validationContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "738a5d16c91e26c41302b3fa9dcac951e799b94b"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MTQyNjQ3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-524142647", "createdAt": "2020-11-05T10:53:40Z", "commit": {"oid": "738a5d16c91e26c41302b3fa9dcac951e799b94b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo1Mzo0MFrOHt91DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDo1Mzo0MFrOHt91DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2MDk3Mg==", "bodyText": "can we simplify by just using\n@Named", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r517960972", "createdAt": "2020-11-05T10:53:40Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/OrgPolicyCaseAssignedRoleValidator.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package uk.gov.hmcts.ccd.domain.types;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import uk.gov.hmcts.ccd.data.caseaccess.CachedCaseRoleRepository;\n+import uk.gov.hmcts.ccd.data.caseaccess.CaseRoleRepository;\n+import uk.gov.hmcts.ccd.data.definition.CachedCaseDefinitionRepository;\n+import uk.gov.hmcts.ccd.data.definition.CaseDefinitionRepository;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseFieldDefinition;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+\n+@Named(\"OrgPolicyCaseAssignedRole\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "738a5d16c91e26c41302b3fa9dcac951e799b94b"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "284dafbb27c8004ee2a59016553ba528d93f0ff1", "author": {"user": {"login": "mario-paniccia", "name": "Mario Paniccia"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/284dafbb27c8004ee2a59016553ba528d93f0ff1", "committedDate": "2020-11-05T11:52:42Z", "message": "RDM-9868: renaming and small refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MjA5ODI0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-524209824", "createdAt": "2020-11-05T12:25:53Z", "commit": {"oid": "284dafbb27c8004ee2a59016553ba528d93f0ff1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMjoyNTo1M1rOHuA9mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMjoyNTo1M1rOHuA9mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAxMjMxNQ==", "bodyText": "I forgot to remove line 9 can you remove it please", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r518012315", "createdAt": "2020-11-05T12:25:53Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/CustomTypes.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package uk.gov.hmcts.ccd.domain.types;\n+\n+/**\n+ * Custom types IDs\n+ */\n+public enum CustomTypes {\n+\n+    CASE_LINK_TEXT_CASE_REFERENCE(\"TextCaseReference\"),\n+    ORG_POLICY_CASE_ASSIGNED_ROLE(\"OrgPolicyCaseAssignedRole\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "284dafbb27c8004ee2a59016553ba528d93f0ff1"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MjEyNDEw", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-524212410", "createdAt": "2020-11-05T12:29:33Z", "commit": {"oid": "284dafbb27c8004ee2a59016553ba528d93f0ff1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMjoyOTozM1rOHuBFmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMjoyOTozM1rOHuBFmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAxNDM2Mg==", "bodyText": "is it possible to remove this method and pass the validationContext in the validate method as a parameter?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r518014362", "createdAt": "2020-11-05T12:29:33Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/FieldIdBasedValidator.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package uk.gov.hmcts.ccd.domain.types;\n+\n+/**\n+ * A validator that is associated to a field id, rather than the field type. Can be used in predefined complex types\n+ * such as OrganisationPolicy as an easy way to add custom validation for its sub-fields, without having to introduce\n+ * new ad-hoc custom types.\n+ * If a custom type needs to be introduced for predefined complex type sub-field, then prefer using a CustomTypeValidator\n+ * to add additional validation logic\n+ */\n+public interface FieldIdBasedValidator extends FieldValidator {\n+\n+    void setValidationContext(ValidationContext validationContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "284dafbb27c8004ee2a59016553ba528d93f0ff1"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MjEyNzk1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-524212795", "createdAt": "2020-11-05T12:30:04Z", "commit": {"oid": "284dafbb27c8004ee2a59016553ba528d93f0ff1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMjozMDowNVrOHuBGyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMjozMDowNVrOHuBGyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAxNDY2NA==", "bodyText": "is it possible to remove this and pass the validation context around as a parameter to the validate method?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r518014664", "createdAt": "2020-11-05T12:30:05Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/CaseDataValidator.java", "diffHunk": "@@ -124,10 +129,19 @@ public CaseDataValidator(final List<FieldValidator> validators) {\n                     new RuntimeException(\"System error: No validator found for \" + fieldType.getType()));\n     }\n \n-    private boolean isPredefinedTypeFieldValidator(FieldValidator validator, String fieldID) {\n-        if (validator instanceof PredefinedTypeFieldValidator) {\n-            String predefinedId = ((PredefinedTypeFieldValidator) validator).getPredefinedFieldId();\n-            return predefinedId.equals(fieldID);\n+    private boolean isCustomTypeValidator(FieldValidator validator, String fieldTypeId) {\n+        if (validator instanceof CustomTypeValidator) {\n+            String customTypeId = ((CustomTypeValidator) validator).getCustomTypeId();\n+            return customTypeId.equals(fieldTypeId);\n+        }\n+        return false;\n+    }\n+\n+    private boolean isFieldIdBasedValidator(FieldValidator validator, String fieldId) {\n+        if (validator instanceof FieldIdBasedValidator) {\n+            ((FieldIdBasedValidator) validator).setValidationContext(validationContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "284dafbb27c8004ee2a59016553ba528d93f0ff1"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MjE1OTAw", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-524215900", "createdAt": "2020-11-05T12:34:21Z", "commit": {"oid": "284dafbb27c8004ee2a59016553ba528d93f0ff1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMjozNDoyMVrOHuBPyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMjozNDoyMVrOHuBPyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAxNjk2OA==", "bodyText": "forgot to change this, this should be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return CustomTypes.ORG_POLICY_CASE_ASSIGNED_ROLE.getId();\n          \n          \n            \n                    return PredefinedFieldsIDs.ORG_POLICY_CASE_ASSIGNED_ROLE.getId();\n          \n      \n    \n    \n  \n\nforgot to change that", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r518016968", "createdAt": "2020-11-05T12:34:21Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/OrgPolicyCaseAssignedRoleValidator.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package uk.gov.hmcts.ccd.domain.types;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import uk.gov.hmcts.ccd.data.caseaccess.CachedCaseRoleRepository;\n+import uk.gov.hmcts.ccd.data.caseaccess.CaseRoleRepository;\n+import uk.gov.hmcts.ccd.data.definition.CachedCaseDefinitionRepository;\n+import uk.gov.hmcts.ccd.data.definition.CaseDefinitionRepository;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseFieldDefinition;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+\n+@Named(\"OrgPolicyCaseAssignedRole\")\n+@Singleton\n+public class OrgPolicyCaseAssignedRoleValidator implements FieldIdBasedValidator {\n+\n+    private final CaseDefinitionRepository caseDefinitionRepository;\n+    private final CaseRoleRepository caseRoleRepository;\n+    private ValidationContext validationContext;\n+\n+    @Inject\n+    public OrgPolicyCaseAssignedRoleValidator(\n+        @Qualifier(CachedCaseDefinitionRepository.QUALIFIER) final CaseDefinitionRepository caseDefinitionRepository,\n+        @Qualifier(CachedCaseRoleRepository.QUALIFIER) final CaseRoleRepository caseRoleRepository\n+    ) {\n+        this.caseDefinitionRepository = caseDefinitionRepository;\n+        this.caseRoleRepository = caseRoleRepository;\n+    }\n+\n+    @Override\n+    public String getFieldId() {\n+        return CustomTypes.ORG_POLICY_CASE_ASSIGNED_ROLE.getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "284dafbb27c8004ee2a59016553ba528d93f0ff1"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MjE5MTEz", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-524219113", "createdAt": "2020-11-05T12:38:43Z", "commit": {"oid": "284dafbb27c8004ee2a59016553ba528d93f0ff1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMjozODo0M1rOHuBZfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMjozODo0M1rOHuBZfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAxOTQ1NA==", "bodyText": "if errors is empty why you need to create a new empty list?\nI think you can remove this block", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r518019454", "createdAt": "2020-11-05T12:38:43Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/OrgPolicyCaseAssignedRoleValidator.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package uk.gov.hmcts.ccd.domain.types;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import uk.gov.hmcts.ccd.data.caseaccess.CachedCaseRoleRepository;\n+import uk.gov.hmcts.ccd.data.caseaccess.CaseRoleRepository;\n+import uk.gov.hmcts.ccd.data.definition.CachedCaseDefinitionRepository;\n+import uk.gov.hmcts.ccd.data.definition.CaseDefinitionRepository;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseFieldDefinition;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+\n+@Named(\"OrgPolicyCaseAssignedRole\")\n+@Singleton\n+public class OrgPolicyCaseAssignedRoleValidator implements FieldIdBasedValidator {\n+\n+    private final CaseDefinitionRepository caseDefinitionRepository;\n+    private final CaseRoleRepository caseRoleRepository;\n+    private ValidationContext validationContext;\n+\n+    @Inject\n+    public OrgPolicyCaseAssignedRoleValidator(\n+        @Qualifier(CachedCaseDefinitionRepository.QUALIFIER) final CaseDefinitionRepository caseDefinitionRepository,\n+        @Qualifier(CachedCaseRoleRepository.QUALIFIER) final CaseRoleRepository caseRoleRepository\n+    ) {\n+        this.caseDefinitionRepository = caseDefinitionRepository;\n+        this.caseRoleRepository = caseRoleRepository;\n+    }\n+\n+    @Override\n+    public String getFieldId() {\n+        return CustomTypes.ORG_POLICY_CASE_ASSIGNED_ROLE.getId();\n+    }\n+\n+    @Override\n+    public List<ValidationResult> validate(String dataFieldId, JsonNode dataValue, CaseFieldDefinition caseFieldDefinition) {\n+        caseFieldDefinition.getFieldTypeDefinition();\n+        return validateOrganisationPolicy(dataValue, caseFieldDefinition);\n+    }\n+\n+    @Override\n+    public void setValidationContext(ValidationContext validationContext) {\n+        this.validationContext = validationContext;\n+    }\n+\n+    private List<ValidationResult> validateOrganisationPolicy(JsonNode dataValue, CaseFieldDefinition caseFieldDefinition) {\n+        final String caseTypeId = validationContext.getCaseTypeId();\n+        final Set<String> caseRoles = caseRoleRepository.getCaseRoles(caseTypeId);\n+        final List<ValidationResult> errors = new ArrayList<>();\n+        validateContent(caseFieldDefinition.getId(), dataValue, caseRoles, errors);\n+        if (errors.isEmpty()) {\n+            return Collections.emptyList();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "284dafbb27c8004ee2a59016553ba528d93f0ff1"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MjIxOTg5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-524221989", "createdAt": "2020-11-05T12:42:47Z", "commit": {"oid": "284dafbb27c8004ee2a59016553ba528d93f0ff1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMjo0Mjo0N1rOHuBiRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMjo0Mjo0N1rOHuBiRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAyMTcwMw==", "bodyText": "is this used?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r518021703", "createdAt": "2020-11-05T12:42:47Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/OrgPolicyCaseAssignedRoleValidator.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package uk.gov.hmcts.ccd.domain.types;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import uk.gov.hmcts.ccd.data.caseaccess.CachedCaseRoleRepository;\n+import uk.gov.hmcts.ccd.data.caseaccess.CaseRoleRepository;\n+import uk.gov.hmcts.ccd.data.definition.CachedCaseDefinitionRepository;\n+import uk.gov.hmcts.ccd.data.definition.CaseDefinitionRepository;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseFieldDefinition;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+\n+@Named(\"OrgPolicyCaseAssignedRole\")\n+@Singleton\n+public class OrgPolicyCaseAssignedRoleValidator implements FieldIdBasedValidator {\n+\n+    private final CaseDefinitionRepository caseDefinitionRepository;\n+    private final CaseRoleRepository caseRoleRepository;\n+    private ValidationContext validationContext;\n+\n+    @Inject\n+    public OrgPolicyCaseAssignedRoleValidator(\n+        @Qualifier(CachedCaseDefinitionRepository.QUALIFIER) final CaseDefinitionRepository caseDefinitionRepository,\n+        @Qualifier(CachedCaseRoleRepository.QUALIFIER) final CaseRoleRepository caseRoleRepository\n+    ) {\n+        this.caseDefinitionRepository = caseDefinitionRepository;\n+        this.caseRoleRepository = caseRoleRepository;\n+    }\n+\n+    @Override\n+    public String getFieldId() {\n+        return CustomTypes.ORG_POLICY_CASE_ASSIGNED_ROLE.getId();\n+    }\n+\n+    @Override\n+    public List<ValidationResult> validate(String dataFieldId, JsonNode dataValue, CaseFieldDefinition caseFieldDefinition) {\n+        caseFieldDefinition.getFieldTypeDefinition();\n+        return validateOrganisationPolicy(dataValue, caseFieldDefinition);\n+    }\n+\n+    @Override\n+    public void setValidationContext(ValidationContext validationContext) {\n+        this.validationContext = validationContext;\n+    }\n+\n+    private List<ValidationResult> validateOrganisationPolicy(JsonNode dataValue, CaseFieldDefinition caseFieldDefinition) {\n+        final String caseTypeId = validationContext.getCaseTypeId();\n+        final Set<String> caseRoles = caseRoleRepository.getCaseRoles(caseTypeId);\n+        final List<ValidationResult> errors = new ArrayList<>();\n+        validateContent(caseFieldDefinition.getId(), dataValue, caseRoles, errors);\n+        if (errors.isEmpty()) {\n+            return Collections.emptyList();\n+        }\n+        return errors;\n+    }\n+\n+    private void validateContent(final String caseFieldId, final JsonNode orgPolicyRoleNode, final Set<String> caseRoles, final List<ValidationResult> errors) {\n+\n+        if (orgPolicyRoleNode.isNull()) {\n+            errors.add(new ValidationResult(validationContext.getPath() + \" organisation role cannot have an empty value.\", caseFieldId));\n+        } else if (!caseRolesContainsCaseInsensitive(caseRoles, orgPolicyRoleNode)) {\n+            errors.add(new ValidationResult(validationContext.getPath() + \" The value  \" + orgPolicyRoleNode.textValue() + \" is not a valid organisation role.\", caseFieldId));\n+        }\n+    }\n+\n+    private boolean caseRolesContainsCaseInsensitive(Set<String> caseRoles, JsonNode orgPolicyRoleNode) {\n+        return caseRoles.stream().anyMatch(e -> e.equalsIgnoreCase(orgPolicyRoleNode.textValue()));\n+    }\n+\n+    private String getOrganisationFieldName(String fieldPath){\n+        return \"\";\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "284dafbb27c8004ee2a59016553ba528d93f0ff1"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MjI4Mjkw", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-524228290", "createdAt": "2020-11-05T12:51:23Z", "commit": {"oid": "284dafbb27c8004ee2a59016553ba528d93f0ff1"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MjMwODg0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-524230884", "createdAt": "2020-11-05T12:54:50Z", "commit": {"oid": "284dafbb27c8004ee2a59016553ba528d93f0ff1"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6825e66cdac0ee892db4c879965b19140728c00c", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/6825e66cdac0ee892db4c879965b19140728c00c", "committedDate": "2020-11-05T14:59:05Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b944ed00d2b92625e312ee6af19239acc5c6307", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/4b944ed00d2b92625e312ee6af19239acc5c6307", "committedDate": "2020-11-05T16:26:52Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74a80b3008c143b166d1e3452817237d6761d9e4", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/74a80b3008c143b166d1e3452817237d6761d9e4", "committedDate": "2020-11-06T11:58:47Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MjE5Mzk2", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-525219396", "createdAt": "2020-11-06T14:47:08Z", "commit": {"oid": "74a80b3008c143b166d1e3452817237d6761d9e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNDo0NzowOVrOHuw5Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNDo0NzowOVrOHuw5Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc5NzYzMQ==", "bodyText": "not used", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r518797631", "createdAt": "2020-11-06T14:47:09Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/ValidationContext.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package uk.gov.hmcts.ccd.domain.types;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseFieldDefinition;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseTypeDefinition;\n+import uk.gov.hmcts.ccd.domain.model.std.CaseDataContent;\n+\n+import java.util.Map;\n+\n+public class ValidationContext {\n+\n+    private final CaseDataContent currentCaseDataContent;\n+    private final String caseTypeId;\n+    private final CaseTypeDefinition caseTypeDefinition;\n+    private final Map<String, JsonNode> data;\n+    private String fieldId;\n+    private String path;\n+    private JsonNode dataValue;\n+    private CaseFieldDefinition caseFieldDefinition;\n+\n+    public ValidationContext() {\n+        this(null, null, null, null);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a80b3008c143b166d1e3452817237d6761d9e4"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MjUyMTU5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-525252159", "createdAt": "2020-11-06T15:22:42Z", "commit": {"oid": "74a80b3008c143b166d1e3452817237d6761d9e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNToyMjo0MlrOHuyXNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNToyMjo0MlrOHuyXNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMTY4NA==", "bodyText": "Looking at how this is invoked from CreateCaseEventService.createCaseEvent()\nI think this could have been a little bug here. We were passing to validateOrganisationPolicy content, but that might not contain the most up to date case data. We should be using data instead", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r518821684", "createdAt": "2020-11-06T15:22:42Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java", "diffHunk": "@@ -139,7 +66,10 @@ private boolean hasEventId(CaseTypeDefinition caseTypeDefinition, String eventId\n     public void validateData(Map<String, JsonNode> data,\n                              CaseTypeDefinition caseTypeDefinition,\n                              final CaseDataContent content) {\n-        caseTypeService.validateData(data, caseTypeDefinition);\n-        validateOrganisationPolicy(caseTypeDefinition.getId(), content);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a80b3008c143b166d1e3452817237d6761d9e4"}, "originalPosition": 110}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MjUzNzI4", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-525253728", "createdAt": "2020-11-06T15:24:26Z", "commit": {"oid": "74a80b3008c143b166d1e3452817237d6761d9e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNToyNDoyN1rOHuybuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNToyNDoyN1rOHuybuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMjg0MQ==", "bodyText": "String caseTypeId is not needed, you are already passing CaseTypeDefinition caseTypeDefinition you can get it from there", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r518822841", "createdAt": "2020-11-06T15:24:27Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java", "diffHunk": "@@ -139,7 +66,10 @@ private boolean hasEventId(CaseTypeDefinition caseTypeDefinition, String eventId\n     public void validateData(Map<String, JsonNode> data,\n                              CaseTypeDefinition caseTypeDefinition,\n                              final CaseDataContent content) {\n-        caseTypeService.validateData(data, caseTypeDefinition);\n-        validateOrganisationPolicy(caseTypeDefinition.getId(), content);\n+        caseTypeService.validateData(createValidationContext(caseTypeDefinition.getId(), content, data, caseTypeDefinition));\n+    }\n+\n+    public ValidationContext createValidationContext(String caseTypeId, CaseDataContent content, Map<String, JsonNode> data, CaseTypeDefinition caseTypeDefinition) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a80b3008c143b166d1e3452817237d6761d9e4"}, "originalPosition": 114}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fe6f11983639584a10b7735f4b9bf37daaba171", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/0fe6f11983639584a10b7735f4b9bf37daaba171", "committedDate": "2020-11-09T11:45:55Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3684e4f82ea0630236856c073e415f537898f37e", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/3684e4f82ea0630236856c073e415f537898f37e", "committedDate": "2020-11-09T14:49:50Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59e5d34ee02fff3980d1c6adc18fbe5b1bd61ee8", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/59e5d34ee02fff3980d1c6adc18fbe5b1bd61ee8", "committedDate": "2020-11-09T16:50:45Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdb4fb06e67a32193f38a7bd647d745b2bf51b0b", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/fdb4fb06e67a32193f38a7bd647d745b2bf51b0b", "committedDate": "2020-11-10T09:42:43Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21aeaf31e1e54ee4af7129cfb2fad1ae262f7b94", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/21aeaf31e1e54ee4af7129cfb2fad1ae262f7b94", "committedDate": "2020-11-10T09:46:02Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c7c8a3a018ed7dd6e467e814477d6ef23b79202", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/2c7c8a3a018ed7dd6e467e814477d6ef23b79202", "committedDate": "2020-11-10T10:00:31Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3c5628d6207ddfa5d650f82f3fb90255d01c420", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e3c5628d6207ddfa5d650f82f3fb90255d01c420", "committedDate": "2020-11-10T10:16:19Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12aec069b940704e878a6c16448f9c0e9c91d62c", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/12aec069b940704e878a6c16448f9c0e9c91d62c", "committedDate": "2020-11-10T11:39:40Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bed41790e7d9f76c5f8ce529b0838525f24eda61", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/bed41790e7d9f76c5f8ce529b0838525f24eda61", "committedDate": "2020-11-10T12:04:53Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTcyNDg1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-527172485", "createdAt": "2020-11-10T12:55:11Z", "commit": {"oid": "bed41790e7d9f76c5f8ce529b0838525f24eda61"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjo1NToxMlrOHwbPYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjo1NToxMlrOHwbPYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU0MDAwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    validateData(new ValidationContext(caseTypeDefinition,data));\n          \n          \n            \n                    validateData(new ValidationContext(caseTypeDefinition, data));", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r520540003", "createdAt": "2020-11-10T12:55:12Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseTypeService.java", "diffHunk": "@@ -69,6 +68,10 @@ public void validateData(final Map<String, JsonNode> data,\n         }\n     }\n \n+    public void validateData(final Map<String, JsonNode> data, final CaseTypeDefinition caseTypeDefinition) {\n+        validateData(new ValidationContext(caseTypeDefinition,data));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bed41790e7d9f76c5f8ce529b0838525f24eda61"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTc0MzIx", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-527174321", "createdAt": "2020-11-10T12:57:29Z", "commit": {"oid": "bed41790e7d9f76c5f8ce529b0838525f24eda61"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjo1NzoyOVrOHwbUzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjo1NzoyOVrOHwbUzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU0MTM5MQ==", "bodyText": "we could just use the Validation constructor here maybe", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r520541391", "createdAt": "2020-11-10T12:57:29Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java", "diffHunk": "@@ -59,78 +48,12 @@\n                 + \" is not found in case type definition\");\n         }\n         content.setData(fieldProcessorService.processData(content.getData(), caseTypeDefinition, content.getEventId()));\n-        caseTypeService.validateData(content.getData(), caseTypeDefinition);\n-        validateOrganisationPolicy(caseTypeId, content);\n+        caseTypeService.validateData(\n+            createValidationContext(content.getData(), caseTypeDefinition)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bed41790e7d9f76c5f8ce529b0838525f24eda61"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTc1MTgy", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-527175182", "createdAt": "2020-11-10T12:58:35Z", "commit": {"oid": "bed41790e7d9f76c5f8ce529b0838525f24eda61"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjo1ODozNVrOHwbXdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjo1ODozNVrOHwbXdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU0MjA2OQ==", "bodyText": "we could just use the Validation constructor here maybe", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r520542069", "createdAt": "2020-11-10T12:58:35Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java", "diffHunk": "@@ -139,7 +62,13 @@ private boolean hasEventId(CaseTypeDefinition caseTypeDefinition, String eventId\n     public void validateData(Map<String, JsonNode> data,\n                              CaseTypeDefinition caseTypeDefinition,\n                              final CaseDataContent content) {\n-        caseTypeService.validateData(data, caseTypeDefinition);\n-        validateOrganisationPolicy(caseTypeDefinition.getId(), content);\n+        caseTypeService.validateData(\n+            createValidationContext(data, caseTypeDefinition)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bed41790e7d9f76c5f8ce529b0838525f24eda61"}, "originalPosition": 137}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/88b047bb7db208126eac7792a9fa67dd8ee119df", "committedDate": "2020-11-10T13:03:08Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTg0ODQy", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-527184842", "createdAt": "2020-11-10T13:10:36Z", "commit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzoxMDozNlrOHwb0rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzoxMDozNlrOHwb0rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU0OTU1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        validationContext.getDataValue(),\n          \n          \n            \n                        validationContext.getFieldValue(),", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r520549550", "createdAt": "2020-11-10T13:10:36Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/BaseTypeValidator.java", "diffHunk": "@@ -15,4 +18,16 @@ default Boolean isNullOrEmpty(final JsonNode dataValue) {\n             || (dataValue.isTextual() && (null == dataValue.asText() || dataValue.asText().trim().length() == 0))\n             || (dataValue.isObject() && dataValue.toString().equals(\"{}\"));\n     }\n+\n+    default List<ValidationResult> validate(ValidationContext validationContext) {\n+        return validate(\n+            validationContext.getFieldId(),\n+            validationContext.getDataValue(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTg1MDYw", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-527185060", "createdAt": "2020-11-10T13:10:52Z", "commit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzoxMDo1MlrOHwb1TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzoxMDo1MlrOHwb1TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU0OTcwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        validationContext.getCaseFieldDefinition()\n          \n          \n            \n                        validationContext.getFieldDefinition()", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r520549709", "createdAt": "2020-11-10T13:10:52Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/BaseTypeValidator.java", "diffHunk": "@@ -15,4 +18,16 @@ default Boolean isNullOrEmpty(final JsonNode dataValue) {\n             || (dataValue.isTextual() && (null == dataValue.asText() || dataValue.asText().trim().length() == 0))\n             || (dataValue.isObject() && dataValue.toString().equals(\"{}\"));\n     }\n+\n+    default List<ValidationResult> validate(ValidationContext validationContext) {\n+        return validate(\n+            validationContext.getFieldId(),\n+            validationContext.getDataValue(),\n+            validationContext.getCaseFieldDefinition()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MjE0OTc4", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-527214978", "createdAt": "2020-11-10T13:46:02Z", "commit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzo0NjowMlrOHwdO2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzo0NjowMlrOHwdO2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU3MjYzMw==", "bodyText": "maybe it would be less confusing to introduce a new class FieldValidationContext and not mix everything inside the ValidationContext?\nlet's discuss about it", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r520572633", "createdAt": "2020-11-10T13:46:02Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/FieldValidator.java", "diffHunk": "@@ -2,12 +2,6 @@\n \n import java.util.List;\n \n-import com.fasterxml.jackson.databind.JsonNode;\n-import uk.gov.hmcts.ccd.domain.model.definition.CaseFieldDefinition;\n-\n public interface FieldValidator {\n-\n-    List<ValidationResult> validate(final String dataFieldId,\n-                                    final JsonNode dataValue,\n-                                    final CaseFieldDefinition caseFieldDefinition);\n+    List<ValidationResult> validate(ValidationContext validationContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MzcxODkw", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-527371890", "createdAt": "2020-11-10T16:17:32Z", "commit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjoxNzozMlrOHwkYRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjoxNzozMlrOHwkYRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY4OTczMw==", "bodyText": "what's the point of having the ValidationContext object if we've left this method as is with all the parameters?\nthe goal of introducing a ValidationContext object is so that you can simplify to:\nvalidateSimpleField(validationContext)", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r520689733", "createdAt": "2020-11-10T16:17:32Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/CaseDataValidator.java", "diffHunk": "@@ -74,48 +80,71 @@ public CaseDataValidator(final List<FieldValidator> validators) {\n             return validate(\n                 JacksonUtils.convertValue(dataValue),\n                 caseFieldDefinition.getFieldTypeDefinition().getComplexFields(),\n-                fieldIdPrefix + dataFieldId + FIELD_SEPARATOR);\n+                fieldIdPrefix + dataFieldId + FIELD_SEPARATOR, validationContext\n+            );\n         } else if (BaseType.get(COLLECTION) == fieldType) {\n             final List<ValidationResult> validationResults =\n-                validateSimpleField(dataFieldId, dataValue, caseFieldDefinition, fieldIdPrefix, fieldType);\n+                validateSimpleField(\n+                    dataFieldId, dataValue,\n+                    caseFieldDefinition,\n+                    fieldIdPrefix,\n+                    fieldType,\n+                    validationContext", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MDM4MTUy", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-528038152", "createdAt": "2020-11-11T10:15:23Z", "commit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDoxNToyNFrOHxG0sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzo1OToyOFrOHxOTVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI1NDA2Nw==", "bodyText": "Since we're now providing the validationContext, can we remove data and caseFieldDefinitions from the signature? From above it looks like we are just passing the values for those from the validationContext anyway.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r521254067", "createdAt": "2020-11-11T10:15:24Z", "author": {"login": "danlysiak"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/CaseDataValidator.java", "diffHunk": "@@ -32,14 +32,18 @@ public CaseDataValidator(final List<FieldValidator> validators) {\n         this.validators = validators;\n     }\n \n-    public List<ValidationResult> validate(final Map<String, JsonNode> data,\n-                                           final List<CaseFieldDefinition> caseFieldDefinitions) {\n-        return validate(data, caseFieldDefinitions, CaseDataValidator.EMPTY_STRING);\n+    public List<ValidationResult> validate(final ValidationContext validationContext) {\n+        return validate(\n+            validationContext.getData(),\n+            validationContext.getCaseTypeDefinition().getCaseFieldDefinitions(),\n+            CaseDataValidator.EMPTY_STRING, validationContext)\n+            ;\n     }\n \n     public List<ValidationResult> validate(final Map<String, JsonNode> data,\n                                            final List<CaseFieldDefinition> caseFieldDefinitions,\n-                                           final String fieldIdPrefix) {\n+                                           final String fieldIdPrefix,\n+                                           final ValidationContext validationContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMxMTQwMg==", "bodyText": "Just thinking, could this return the PredefinedFieldsIDs enum instead, if every predefined one will be defined there anyway?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r521311402", "createdAt": "2020-11-11T12:04:27Z", "author": {"login": "danlysiak"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/FieldIdBasedValidator.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package uk.gov.hmcts.ccd.domain.types;\n+\n+/**\n+ * A validator that is associated to a field id, rather than the field type. Can be used in predefined complex types\n+ * such as OrganisationPolicy as an easy way to add custom validation for its sub-fields, without having to introduce\n+ * new ad-hoc custom types.\n+ * If a custom type needs to be introduced for predefined complex type sub-field, then prefer using\n+ * a CustomTypeValidator\n+ * to add additional validation logic\n+ */\n+\n+@SuppressWarnings(\"checkstyle:SummaryJavadoc\")\n+public interface FieldIdBasedValidator extends FieldValidator {\n+\n+    /**\n+     * @return the field id to which the validator is associated\n+     */\n+    String getFieldId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM3NTAwNA==", "bodyText": "Could use String.format() instead for these errors. And currently this resolves (I think?) to something like OrgPolicyFieldName.CaseAssignedRole The value [CLAIMANT] is not a valid organisation role.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r521375004", "createdAt": "2020-11-11T13:57:02Z", "author": {"login": "danlysiak"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/OrgPolicyCaseAssignedRoleValidator.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package uk.gov.hmcts.ccd.domain.types;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import uk.gov.hmcts.ccd.data.caseaccess.CachedCaseRoleRepository;\n+import uk.gov.hmcts.ccd.data.caseaccess.CaseRoleRepository;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+\n+@Named\n+@Singleton\n+public class OrgPolicyCaseAssignedRoleValidator implements FieldIdBasedValidator {\n+\n+    private final CaseRoleRepository caseRoleRepository;\n+\n+    @Inject\n+    public OrgPolicyCaseAssignedRoleValidator(\n+        @Qualifier(CachedCaseRoleRepository.QUALIFIER) final CaseRoleRepository caseRoleRepository\n+    ) {\n+        this.caseRoleRepository = caseRoleRepository;\n+    }\n+\n+    @Override\n+    public String getFieldId() {\n+        return PredefinedFieldsIDs.ORG_POLICY_CASE_ASSIGNED_ROLE.getId();\n+    }\n+\n+    @Override\n+    public List<ValidationResult> validate(ValidationContext validationContext) {\n+        return validateOrganisationPolicy(validationContext);\n+    }\n+\n+    private List<ValidationResult> validateOrganisationPolicy(ValidationContext validationContext) {\n+        final String caseTypeId = validationContext.getCaseTypeId();\n+        final Set<String> caseRoles = caseRoleRepository.getCaseRoles(caseTypeId);\n+        final List<ValidationResult> errors = new ArrayList<>();\n+        validateContent(validationContext, caseRoles, errors);\n+        if (errors.isEmpty()) {\n+            return Collections.emptyList();\n+        }\n+        return errors;\n+    }\n+\n+    private void validateContent(ValidationContext validationContext, final Set<String> caseRoles,\n+                                 final List<ValidationResult> errors) {\n+\n+        final JsonNode orgPolicyRoleNode = validationContext.getDataValue();\n+        if (orgPolicyRoleNode.isNull()) {\n+            errors.add(new ValidationResult(validationContext.getPath()\n+                + \" organisation role cannot have an empty value.\", validationContext.getFieldId()));\n+        } else if (!caseRolesContainsCaseInsensitive(caseRoles, orgPolicyRoleNode)) {\n+            errors.add(new ValidationResult(validationContext.getPath()\n+                + \" The value  \" + orgPolicyRoleNode.textValue()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM3NjU5OA==", "bodyText": "Could possibly do without having the caseTypeId variable since it's easily derived?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r521376598", "createdAt": "2020-11-11T13:59:28Z", "author": {"login": "danlysiak"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/ValidationContext.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package uk.gov.hmcts.ccd.domain.types;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseFieldDefinition;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseTypeDefinition;\n+\n+import java.util.Map;\n+\n+public class ValidationContext {\n+\n+    private final String caseTypeId;\n+    private final CaseTypeDefinition caseTypeDefinition;\n+    private final Map<String, JsonNode> data;\n+    private String fieldId;\n+    private String path;\n+    private JsonNode dataValue;\n+    private CaseFieldDefinition caseFieldDefinition;\n+\n+    public ValidationContext(\n+        CaseTypeDefinition caseTypeDefinition,\n+        Map<String, JsonNode> data\n+    ) {\n+        this.caseTypeId = caseTypeDefinition.getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MjQ0MTg5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-528244189", "createdAt": "2020-11-11T14:54:30Z", "commit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDo1NDozMFrOHxQk9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDo1NDozMFrOHxQk9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQxMzg3Ng==", "bodyText": "better to avoid plural names in class naming conventions", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r521413876", "createdAt": "2020-11-11T14:54:30Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/PredefinedFieldsIDs.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package uk.gov.hmcts.ccd.domain.types;\n+\n+/**\n+ * IDs of fields in predefined complex types.\n+ */\n+public enum PredefinedFieldsIDs {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MjQ4MDU2", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-528248056", "createdAt": "2020-11-11T14:58:46Z", "commit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDo1ODo0NlrOHxQwbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDo1ODo0NlrOHxQwbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQxNjgxNA==", "bodyText": "validationContext.getCaseFieldDefinition can be used, no need to pass caseFieldDefinition parameter\nif we have to use validationContext, need to populate the object,\nvalidationContext.setPath(fieldIdPrefix);\nvalidationContext.setDataValue(dataValue);\nvalidationContext.setCaseFieldDefinition(caseFieldDefinition);\nvalidationContext.setFieldId(fieldId);\nInstead of this, can't we provide the constructor with all the required data...", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r521416814", "createdAt": "2020-11-11T14:58:46Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/CaseDataValidator.java", "diffHunk": "@@ -139,33 +176,43 @@ private boolean isBaseTypeValidator(FieldValidator validator, BaseType fieldType\n         return false;\n     }\n \n-    private List<ValidationResult> validateCollectionItem(FieldTypeDefinition fieldTypeDefinition, JsonNode item,\n-                                                          String fieldIdPrefix, String index) {\n+    private List<ValidationResult> validateCollectionItem(\n+        FieldTypeDefinition fieldTypeDefinition,\n+        JsonNode item,\n+        String fieldIdPrefix,\n+        String index,\n+        ValidationContext validationContext\n+    ) {\n         final String itemFieldId = fieldIdPrefix + index;\n \n         final JsonNode itemValue = item.get(CollectionValidator.VALUE);\n \n         if (null == itemValue) {\n             return Collections.emptyList();\n         }\n-\n         if (shouldTreatAsValueNode(fieldTypeDefinition, itemValue)) {\n             if (!BaseType.contains(fieldTypeDefinition.getType())) {\n-                return Collections.singletonList(new ValidationResult(\"Unknown Type:\"\n-                    + fieldTypeDefinition.getType(), itemFieldId));\n+                return Collections.singletonList(\n+                    new ValidationResult(\"Unknown Type:\" + fieldTypeDefinition.getType(), itemFieldId)\n+                );\n             }\n-\n             final BaseType baseType = BaseType.get(fieldTypeDefinition.getType());\n-\n             final CaseFieldDefinition caseFieldDefinition = new CaseFieldDefinition();\n             caseFieldDefinition.setFieldTypeDefinition(fieldTypeDefinition);\n             caseFieldDefinition.setId(index);\n-            return validateSimpleField(index, itemValue, caseFieldDefinition, fieldIdPrefix, baseType);\n+            return validateSimpleField(\n+                                        index,\n+                                        itemValue,\n+                                        caseFieldDefinition,\n+                                        fieldIdPrefix,\n+                                        baseType,\n+                                        validationContext", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "originalPosition": 196}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MjU2OTUy", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-528256952", "createdAt": "2020-11-11T15:08:42Z", "commit": {"oid": "88b047bb7db208126eac7792a9fa67dd8ee119df"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MjkxMjU0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-528291254", "createdAt": "2020-11-11T15:44:31Z", "commit": {"oid": "b165fb9b3d19d4f4c4494aa672293405e892e70a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b165fb9b3d19d4f4c4494aa672293405e892e70a", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/b165fb9b3d19d4f4c4494aa672293405e892e70a", "committedDate": "2020-11-11T15:45:54Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43f19bd6966615b751caccdddf3d21db898dc8e7", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/43f19bd6966615b751caccdddf3d21db898dc8e7", "committedDate": "2020-11-11T15:59:20Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad45e5046c5125784cbbedeee34e8d57c6f30f1f", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/ad45e5046c5125784cbbedeee34e8d57c6f30f1f", "committedDate": "2020-11-11T16:02:19Z", "message": "Merge branch 'develop' of github.com:hmcts/ccd-data-store-api into RDM-9939"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b48116ada8487619165614171bba454d4b0966b", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/8b48116ada8487619165614171bba454d4b0966b", "committedDate": "2020-11-12T09:58:57Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d3df3f8688a093bf6b38750bdff92fde23733ab", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/7d3df3f8688a093bf6b38750bdff92fde23733ab", "committedDate": "2020-11-12T10:00:15Z", "message": "Merge branch 'develop' of github.com:hmcts/ccd-data-store-api into RDM-9939"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce0fe97d29caa876ead39a013183f0f9f6df4171", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/ce0fe97d29caa876ead39a013183f0f9f6df4171", "committedDate": "2020-11-12T10:41:45Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1732d18ebdd001b75472b70b497cc598a7d6be3", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/d1732d18ebdd001b75472b70b497cc598a7d6be3", "committedDate": "2020-11-12T11:13:03Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e79be0fc2510de4bfbabee16d01627ee109cfcd5", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e79be0fc2510de4bfbabee16d01627ee109cfcd5", "committedDate": "2020-11-12T12:34:20Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a8c70370417d3aeef23d7f15faab9fadb804c57", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/6a8c70370417d3aeef23d7f15faab9fadb804c57", "committedDate": "2020-11-12T12:42:48Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MTc5ODA5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-529179809", "createdAt": "2020-11-12T15:06:35Z", "commit": {"oid": "6a8c70370417d3aeef23d7f15faab9fadb804c57"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "946a30b48c5e54d39a22aab23d3d9d2bc19cf537", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/946a30b48c5e54d39a22aab23d3d9d2bc19cf537", "committedDate": "2020-11-13T10:13:32Z", "message": "Merge branch 'develop' of github.com:hmcts/ccd-data-store-api into RDM-9939\n\n\u0001 Conflicts:\n\u0001\tdependency-check-suppressions.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d71319464016cbccc1f3def71e9e23275f237906", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/d71319464016cbccc1f3def71e9e23275f237906", "committedDate": "2020-11-13T13:44:21Z", "message": "Merge branch 'develop' of github.com:hmcts/ccd-data-store-api into RDM-9939"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9486626e8b488afcdcce3304af6ab14b04b55109", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/9486626e8b488afcdcce3304af6ab14b04b55109", "committedDate": "2020-11-13T15:42:22Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23c756b66ca59a246a2e17eb0d2eaf0baac28578", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/23c756b66ca59a246a2e17eb0d2eaf0baac28578", "committedDate": "2020-11-13T16:23:36Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "19d73aa6b80e452b33d2fff6b7f3aecf11338f31", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/19d73aa6b80e452b33d2fff6b7f3aecf11338f31", "committedDate": "2020-11-16T10:14:48Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}, "afterCommit": {"oid": "23c756b66ca59a246a2e17eb0d2eaf0baac28578", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/23c756b66ca59a246a2e17eb0d2eaf0baac28578", "committedDate": "2020-11-13T16:23:36Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b0d7457983e6def0d4505de389d08ed97c1abf7", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/0b0d7457983e6def0d4505de389d08ed97c1abf7", "committedDate": "2020-11-16T10:43:50Z", "message": "Merge branch 'develop' of github.com:hmcts/ccd-data-store-api into RDM-9939"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fadb15ccbad6e0c561ce65a67f67a531ac42fa2", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/9fadb15ccbad6e0c561ce65a67f67a531ac42fa2", "committedDate": "2020-11-16T10:49:27Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa3022ae0340518c11ab26eb2e1d3eb6dd3fc8ef", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/aa3022ae0340518c11ab26eb2e1d3eb6dd3fc8ef", "committedDate": "2020-11-16T12:09:27Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83a51d549503ee59f1538ff206cdeaf4c553140e", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/83a51d549503ee59f1538ff206cdeaf4c553140e", "committedDate": "2020-11-16T14:23:08Z", "message": "Merge branch 'develop' of github.com:hmcts/ccd-data-store-api into RDM-9939"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMzM5NjMy", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-531339632", "createdAt": "2020-11-16T13:54:52Z", "commit": {"oid": "aa3022ae0340518c11ab26eb2e1d3eb6dd3fc8ef"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNDowMDoyNlrOHz_9yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNDozNTo0MlrOH0Bg9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4NzQzNQ==", "bodyText": "Do we need to run this through the TextValidator first before the custom validation in this class, otherwise we are losing those basic validations? (i.e. do the same as what TextCaseReferenceCaseLinkValidator does)", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r524287435", "createdAt": "2020-11-16T14:00:26Z", "author": {"login": "danlysiak"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/OrgPolicyCaseAssignedRoleValidator.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package uk.gov.hmcts.ccd.domain.types;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import uk.gov.hmcts.ccd.data.caseaccess.CachedCaseRoleRepository;\n+import uk.gov.hmcts.ccd.data.caseaccess.CaseRoleRepository;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+\n+@Named\n+@Singleton\n+public class OrgPolicyCaseAssignedRoleValidator implements FieldIdBasedValidator {\n+\n+    private final CaseRoleRepository caseRoleRepository;\n+\n+    @Inject\n+    public OrgPolicyCaseAssignedRoleValidator(\n+        @Qualifier(CachedCaseRoleRepository.QUALIFIER) final CaseRoleRepository caseRoleRepository\n+    ) {\n+        this.caseRoleRepository = caseRoleRepository;\n+    }\n+\n+    @Override\n+    public String getFieldId() {\n+        return PredefinedFieldsIDs.ORG_POLICY_CASE_ASSIGNED_ROLE.getId();\n+    }\n+\n+    @Override\n+    public List<ValidationResult> validate(ValidationContext validationContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3022ae0340518c11ab26eb2e1d3eb6dd3fc8ef"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI5MjkzNQ==", "bodyText": "Is this used?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r524292935", "createdAt": "2020-11-16T14:08:51Z", "author": {"login": "danlysiak"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/common/CaseTypeServiceTest.java", "diffHunk": "@@ -152,5 +154,13 @@ void shouldThrowCaseValidationException() {\n             assertThrows(CaseValidationException.class, () -> subject.validateData(data, caseTypeDefinition));\n         }\n     }\n+\n+    private ValidationContext getValidationContext(\n+        Map<String, JsonNode> values, List<CaseFieldDefinition> caseFieldDefinitions) {\n+\n+        final CaseTypeDefinition caseTypeDefinition = new CaseTypeDefinition();\n+        caseTypeDefinition.setCaseFieldDefinitions(caseFieldDefinitions);\n+        return new ValidationContext(caseTypeDefinition, values);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3022ae0340518c11ab26eb2e1d3eb6dd3fc8ef"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI5NTE1OA==", "bodyText": "Can we make this and all other tests currently using contains check for equality instead? Looks like we can always know what the values should be so should be able to check for an exact match.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r524295158", "createdAt": "2020-11-16T14:11:59Z", "author": {"login": "danlysiak"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/types/OrgPolicyCaseAssignedRoleValidatorTest.java", "diffHunk": "@@ -0,0 +1,135 @@\n+package uk.gov.hmcts.ccd.domain.types;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mock;\n+import org.mockito.MockitoAnnotations;\n+import uk.gov.hmcts.ccd.data.caseaccess.CaseRoleRepository;\n+import uk.gov.hmcts.ccd.data.definition.CaseDefinitionRepository;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseFieldDefinition;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseTypeDefinition;\n+import uk.gov.hmcts.ccd.test.CaseFieldDefinitionBuilder;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.hasSize;\n+import static org.junit.jupiter.api.Assertions.assertAll;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.Mockito.when;\n+\n+@DisplayName(\"OrgPolicyCaseAssignedRoleValidator\")\n+class OrgPolicyCaseAssignedRoleValidatorTest {\n+\n+    private static final JsonNodeFactory NODE_FACTORY = JsonNodeFactory.instance;\n+    private static final String FIELD_ID = \"TEST_FIELD_ID\";\n+\n+    @Mock\n+    private CaseDefinitionRepository definitionRepository;\n+\n+    @Mock\n+    private CaseRoleRepository caseRoleRepository;\n+\n+    private OrgPolicyCaseAssignedRoleValidator validator;\n+\n+    @BeforeEach\n+    void setUp() {\n+        MockitoAnnotations.initMocks(this);\n+\n+        when(definitionRepository.getBaseTypes()).thenReturn(Collections.emptyList());\n+        BaseType.setCaseDefinitionRepository(definitionRepository);\n+        BaseType.initialise();\n+        validator = new OrgPolicyCaseAssignedRoleValidator(caseRoleRepository);\n+    }\n+\n+\n+    @Test\n+    @DisplayName(\"should fail due to incorrect organisation role\")\n+    void failDueToIncorrectOrganisationRole() {\n+\n+        final CaseFieldDefinition caseFieldDefinition = caseField().build();\n+        caseFieldDefinition.setId(\"TEST\");\n+        final JsonNode validValue = NODE_FACTORY.textNode(\"XXXX\");\n+        ValidationContext validationContext1 = createValidationContext(caseFieldDefinition, validValue);\n+        final List<ValidationResult> validResult = validator.validate(validationContext1);\n+\n+        assertAll(\n+            () -> assertThat(\"Expected input to be valid\", validResult, hasSize(1)),\n+            () -> assertTrue(validResult.get(0).getErrorMessage()\n+                .contains(\"The value XXXX is not a valid organisation role.\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3022ae0340518c11ab26eb2e1d3eb6dd3fc8ef"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI5OTE5Mg==", "bodyText": "I think if all these edited tests in this class have now been moved over to the validator test one (which I think they have?) then no longer need them in here anymore? \ud83d\ude03", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r524299192", "createdAt": "2020-11-16T14:17:50Z", "author": {"login": "danlysiak"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperationTest.java", "diffHunk": "@@ -202,36 +206,48 @@ void shouldValidate_when_organisation_has_correct_roles_complex() throws Excepti\n \n     @Test\n     void should_fail_validate_when_organisation_has_null_role() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3022ae0340518c11ab26eb2e1d3eb6dd3fc8ef"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDMwMzQ2MA==", "bodyText": "Just wondering..why is this now 2 - is a change expected in the number of errors from this test? (Sorry, bit hard to understand the context since not many changes were made around this and it's mostly old code \ud83d\ude04 )", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r524303460", "createdAt": "2020-11-16T14:23:26Z", "author": {"login": "danlysiak"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/types/CaseDataValidatorTest.java", "diffHunk": "@@ -177,8 +190,9 @@ public void unknownType() throws Exception {\n                 \"}\";\n         final Map<String, JsonNode> values = MAPPER.readValue(data, new TypeReference<HashMap<String, JsonNode>>() {\n         });\n-        final List<ValidationResult> result = caseDataValidator.validate(values, caseFields);\n-        assertEquals(result.toString(), 1, result.size());\n+        final ValidationContext validationContext = getValidationContext(values);\n+        final List<ValidationResult> result = caseDataValidator.validate(validationContext);\n+        assertEquals(result.toString(), 2, result.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83a51d549503ee59f1538ff206cdeaf4c553140e"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDMxMjU5NA==", "bodyText": "Now this is returning a normal CaseValidationException, we should also see the specific errors in the details field further down - no longer null.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r524312594", "createdAt": "2020-11-16T14:35:24Z", "author": {"login": "danlysiak"}, "path": "src/aat/resources/features/F-107/S-931.td.json", "diffHunk": "@@ -29,11 +29,11 @@\n     }\n   },\n   \"expectedResponse\": {\n-    \"_extends_\": \"Common_400_Response\",\n+    \"_extends_\": \"Common_422_Response\",\n     \"body\" : {\n-      \"exception\" : \"uk.gov.hmcts.ccd.endpoint.exceptions.BadRequestException\",\n+      \"exception\" : \"uk.gov.hmcts.ccd.endpoint.exceptions.CaseValidationException\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83a51d549503ee59f1538ff206cdeaf4c553140e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDMxMjgyMQ==", "bodyText": "Now this is returning a normal CaseValidationException, we should also see the specific errors in the details field further down - no longer null.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r524312821", "createdAt": "2020-11-16T14:35:42Z", "author": {"login": "danlysiak"}, "path": "src/aat/resources/features/F-107/S-928.td.json", "diffHunk": "@@ -25,11 +25,11 @@\n     }\n   },\n   \"expectedResponse\": {\n-    \"_extends_\": \"Common_400_Response\",\n+    \"_extends_\": \"Common_422_Response\",\n     \"body\" : {\n-      \"exception\" : \"uk.gov.hmcts.ccd.endpoint.exceptions.BadRequestException\",\n+      \"exception\" : \"uk.gov.hmcts.ccd.endpoint.exceptions.CaseValidationException\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83a51d549503ee59f1538ff206cdeaf4c553140e"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fa177f67316061a55e7ea62d493d4c787ed4581", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/3fa177f67316061a55e7ea62d493d4c787ed4581", "committedDate": "2020-11-16T15:01:56Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ed24c773fd708188a275b2f1d91456c972c562a", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/0ed24c773fd708188a275b2f1d91456c972c562a", "committedDate": "2020-11-16T15:40:08Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f6611fc5ada0577a2e5296f16b875bad7badd08", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/1f6611fc5ada0577a2e5296f16b875bad7badd08", "committedDate": "2020-11-16T22:09:57Z", "message": " RDM-9939: Re-factor DefaultValidateCaseFieldsOperation to remove ORGANISATION_POLICY_ROLE logic\n    \u00a0\u00a0[RDM-9939] (https://tools.hmcts.net/jira/browse/RDM-9939)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMjc0MjEw", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-532274210", "createdAt": "2020-11-17T11:35:58Z", "commit": {"oid": "1f6611fc5ada0577a2e5296f16b875bad7badd08"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64f84a8f716b5366468df20934ca2e87112052f4", "author": {"user": {"login": "Thor-tech-of-metal", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/64f84a8f716b5366468df20934ca2e87112052f4", "committedDate": "2020-11-19T10:55:43Z", "message": "Merge branch 'develop' of github.com:hmcts/ccd-data-store-api into RDM-9939\n\n\u0001 Conflicts:\n\u0001\tdependency-check-suppressions.xml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MzY0NjA3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#pullrequestreview-536364607", "createdAt": "2020-11-23T10:59:53Z", "commit": {"oid": "64f84a8f716b5366468df20934ca2e87112052f4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDo1OTo1M1rOH4Ib5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMTowNTowNFrOH4InGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYyMDUxOQ==", "bodyText": "SAME", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r528620519", "createdAt": "2020-11-23T10:59:53Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/aat/resources/features/F-107/S-931.td.json", "diffHunk": "@@ -29,11 +29,11 @@\n     }\n   },\n   \"expectedResponse\": {\n-    \"_extends_\": \"Common_400_Response\",\n+    \"_extends_\": \"Common_422_Response\",\n     \"body\" : {\n-      \"exception\" : \"uk.gov.hmcts.ccd.endpoint.exceptions.BadRequestException\",\n+      \"exception\" : \"uk.gov.hmcts.ccd.endpoint.exceptions.CaseValidationException\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDMxMjU5NA=="}, "originalCommit": {"oid": "83a51d549503ee59f1538ff206cdeaf4c553140e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYyMjExOA==", "bodyText": "well TextCaseReferenceCaseLinkValidator has business requirements that force a relationship with TextValidator. Regular expression, Min and max and others.    OrgPolicyCaseAssignedRoleValidator we only have isEmpty , then the validations are different .  I don't see the benefit of forcing a chain of validations calls and injection only for one validation.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r528622118", "createdAt": "2020-11-23T11:02:42Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/types/OrgPolicyCaseAssignedRoleValidator.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package uk.gov.hmcts.ccd.domain.types;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import uk.gov.hmcts.ccd.data.caseaccess.CachedCaseRoleRepository;\n+import uk.gov.hmcts.ccd.data.caseaccess.CaseRoleRepository;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+\n+@Named\n+@Singleton\n+public class OrgPolicyCaseAssignedRoleValidator implements FieldIdBasedValidator {\n+\n+    private final CaseRoleRepository caseRoleRepository;\n+\n+    @Inject\n+    public OrgPolicyCaseAssignedRoleValidator(\n+        @Qualifier(CachedCaseRoleRepository.QUALIFIER) final CaseRoleRepository caseRoleRepository\n+    ) {\n+        this.caseRoleRepository = caseRoleRepository;\n+    }\n+\n+    @Override\n+    public String getFieldId() {\n+        return PredefinedFieldsIDs.ORG_POLICY_CASE_ASSIGNED_ROLE.getId();\n+    }\n+\n+    @Override\n+    public List<ValidationResult> validate(ValidationContext validationContext) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4NzQzNQ=="}, "originalCommit": {"oid": "aa3022ae0340518c11ab26eb2e1d3eb6dd3fc8ef"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYyMzM4NQ==", "bodyText": "yeap , I agree \u261d\ufe0f", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1194#discussion_r528623385", "createdAt": "2020-11-23T11:05:04Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/test/java/uk/gov/hmcts/ccd/domain/types/OrgPolicyCaseAssignedRoleValidatorTest.java", "diffHunk": "@@ -0,0 +1,135 @@\n+package uk.gov.hmcts.ccd.domain.types;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mock;\n+import org.mockito.MockitoAnnotations;\n+import uk.gov.hmcts.ccd.data.caseaccess.CaseRoleRepository;\n+import uk.gov.hmcts.ccd.data.definition.CaseDefinitionRepository;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseFieldDefinition;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseTypeDefinition;\n+import uk.gov.hmcts.ccd.test.CaseFieldDefinitionBuilder;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.hasSize;\n+import static org.junit.jupiter.api.Assertions.assertAll;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.Mockito.when;\n+\n+@DisplayName(\"OrgPolicyCaseAssignedRoleValidator\")\n+class OrgPolicyCaseAssignedRoleValidatorTest {\n+\n+    private static final JsonNodeFactory NODE_FACTORY = JsonNodeFactory.instance;\n+    private static final String FIELD_ID = \"TEST_FIELD_ID\";\n+\n+    @Mock\n+    private CaseDefinitionRepository definitionRepository;\n+\n+    @Mock\n+    private CaseRoleRepository caseRoleRepository;\n+\n+    private OrgPolicyCaseAssignedRoleValidator validator;\n+\n+    @BeforeEach\n+    void setUp() {\n+        MockitoAnnotations.initMocks(this);\n+\n+        when(definitionRepository.getBaseTypes()).thenReturn(Collections.emptyList());\n+        BaseType.setCaseDefinitionRepository(definitionRepository);\n+        BaseType.initialise();\n+        validator = new OrgPolicyCaseAssignedRoleValidator(caseRoleRepository);\n+    }\n+\n+\n+    @Test\n+    @DisplayName(\"should fail due to incorrect organisation role\")\n+    void failDueToIncorrectOrganisationRole() {\n+\n+        final CaseFieldDefinition caseFieldDefinition = caseField().build();\n+        caseFieldDefinition.setId(\"TEST\");\n+        final JsonNode validValue = NODE_FACTORY.textNode(\"XXXX\");\n+        ValidationContext validationContext1 = createValidationContext(caseFieldDefinition, validValue);\n+        final List<ValidationResult> validResult = validator.validate(validationContext1);\n+\n+        assertAll(\n+            () -> assertThat(\"Expected input to be valid\", validResult, hasSize(1)),\n+            () -> assertTrue(validResult.get(0).getErrorMessage()\n+                .contains(\"The value XXXX is not a valid organisation role.\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI5NTE1OA=="}, "originalCommit": {"oid": "aa3022ae0340518c11ab26eb2e1d3eb6dd3fc8ef"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2675, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}