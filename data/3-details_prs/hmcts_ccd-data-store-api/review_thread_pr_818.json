{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MDA4MTIy", "number": 818, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNTo0Mzo0NVrODh7A5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDozOToyMlrODiufdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODk2NDg1OnYy", "diffSide": "RIGHT", "path": "src/test/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseControllerTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNTo0Mzo0NVrOFs7TXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMTozNjoxNFrOFuCz3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1MzI3OQ==", "bodyText": "Hmm I thought it would be external like in description of the ticket:\nv1 endpoint: https://github.com/hmcts/ccd-data-store-api/blob/master/src/main/java/uk/gov/hmcts/ccd/endpoint/std/EventsEndpoint.java#L34-L53\nv2: GET /cases/{cid}/events\nso should likve in v2/external package and URL should not have internal prefix?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r382653279", "createdAt": "2020-02-21T15:43:45Z", "author": {"login": "andrewfolga"}, "path": "src/test/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseControllerTest.java", "diffHunk": "@@ -135,4 +145,39 @@ void shouldPropagateExceptionWhenThrown() {\n                 () -> caseController.getCaseEvent(CASE_REFERENCE, EVENT_ID.toString()));\n         }\n     }\n+\n+    @Nested\n+    @DisplayName(\"GET /internal/cases/{caseId}/events\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "822285aaf4898e505f80dbd783b0cf87ef5275f1"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1MzgyMQ==", "bodyText": "The controller should not have the UI prefix then too.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r382653821", "createdAt": "2020-02-21T15:44:45Z", "author": {"login": "andrewfolga"}, "path": "src/test/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseControllerTest.java", "diffHunk": "@@ -135,4 +145,39 @@ void shouldPropagateExceptionWhenThrown() {\n                 () -> caseController.getCaseEvent(CASE_REFERENCE, EVENT_ID.toString()));\n         }\n     }\n+\n+    @Nested\n+    @DisplayName(\"GET /internal/cases/{caseId}/events\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1MzI3OQ=="}, "originalCommit": {"oid": "822285aaf4898e505f80dbd783b0cf87ef5275f1"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNDg2Mg==", "bodyText": "Changed to external", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383824862", "createdAt": "2020-02-25T11:36:14Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/test/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseControllerTest.java", "diffHunk": "@@ -135,4 +145,39 @@ void shouldPropagateExceptionWhenThrown() {\n                 () -> caseController.getCaseEvent(CASE_REFERENCE, EVENT_ID.toString()));\n         }\n     }\n+\n+    @Nested\n+    @DisplayName(\"GET /internal/cases/{caseId}/events\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1MzI3OQ=="}, "originalCommit": {"oid": "822285aaf4898e505f80dbd783b0cf87ef5275f1"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODk2Njg3OnYy", "diffSide": "RIGHT", "path": "src/test/java/uk/gov/hmcts/ccd/v2/internal/resource/UICaseEventsResourceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNTo0NDoxOVrOFs7Umg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMTozNjo1N1rOFuC1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1MzU5NA==", "bodyText": "Internal or external?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r382653594", "createdAt": "2020-02-21T15:44:19Z", "author": {"login": "andrewfolga"}, "path": "src/test/java/uk/gov/hmcts/ccd/v2/internal/resource/UICaseEventsResourceTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package uk.gov.hmcts.ccd.v2.internal.resource;\n+\n+import com.google.common.collect.Lists;\n+import java.util.List;\n+import java.util.Optional;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.MockitoAnnotations;\n+import org.springframework.hateoas.Link;\n+import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertAll;\n+\n+class UICaseEventsResourceTest {\n+    private static final String REFERENCE = \"1234123412341238\";\n+    private static final String LINK_SELF = String.format(\"/internal/cases/%s/events\", REFERENCE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "822285aaf4898e505f80dbd783b0cf87ef5275f1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNTIwNg==", "bodyText": "Changed to external", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383825206", "createdAt": "2020-02-25T11:36:57Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/test/java/uk/gov/hmcts/ccd/v2/internal/resource/UICaseEventsResourceTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package uk.gov.hmcts.ccd.v2.internal.resource;\n+\n+import com.google.common.collect.Lists;\n+import java.util.List;\n+import java.util.Optional;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.MockitoAnnotations;\n+import org.springframework.hateoas.Link;\n+import uk.gov.hmcts.ccd.domain.model.std.AuditEvent;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertAll;\n+\n+class UICaseEventsResourceTest {\n+    private static final String REFERENCE = \"1234123412341238\";\n+    private static final String LINK_SELF = String.format(\"/internal/cases/%s/events\", REFERENCE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1MzU5NA=="}, "originalCommit": {"oid": "822285aaf4898e505f80dbd783b0cf87ef5275f1"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODk3MTA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/v2/V2.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNTo0NToyN1rOFs7XGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMTozNjoyMFrOFuC0BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1NDIzNQ==", "bodyText": "If this is to be external then it should not have ui- prefix.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r382654235", "createdAt": "2020-02-21T15:45:27Z", "author": {"login": "andrewfolga"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/V2.java", "diffHunk": "@@ -41,6 +41,8 @@ private MediaType() {}\n         public static final String UI_JURISDICTIONS =\n             \"application/vnd.uk.gov.hmcts.ccd-data-store-api.ui-jurisdictions.v2+json;charset=UTF-8\";\n \n+        public static final String UI_CASE_EVENTS = \"application/vnd.uk.gov.hmcts.ccd-data-store-api.ui-case-events.v2+json;charset=UTF-8\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "822285aaf4898e505f80dbd783b0cf87ef5275f1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNDkwMQ==", "bodyText": "Changed to external", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383824901", "createdAt": "2020-02-25T11:36:20Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/V2.java", "diffHunk": "@@ -41,6 +41,8 @@ private MediaType() {}\n         public static final String UI_JURISDICTIONS =\n             \"application/vnd.uk.gov.hmcts.ccd-data-store-api.ui-jurisdictions.v2+json;charset=UTF-8\";\n \n+        public static final String UI_CASE_EVENTS = \"application/vnd.uk.gov.hmcts.ccd-data-store-api.ui-case-events.v2+json;charset=UTF-8\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1NDIzNQ=="}, "originalCommit": {"oid": "822285aaf4898e505f80dbd783b0cf87ef5275f1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODk3NDQ0OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNTo0NjoxOVrOFs7ZJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMTozNjoyOFrOFuC0VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1NDc1OQ==", "bodyText": "So this looks like internal endpoint but the story talks about external which would be located in equivalent CaseController class.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r382654759", "createdAt": "2020-02-21T15:46:19Z", "author": {"login": "andrewfolga"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseController.java", "diffHunk": "@@ -117,4 +124,42 @@ public UICaseController(\n \n         return ResponseEntity.ok(new UIEventViewResource(caseHistoryView, caseId));\n     }\n+\n+    @GetMapping(\n+        path = \"/{caseId}/events\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "822285aaf4898e505f80dbd783b0cf87ef5275f1"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNDk4MQ==", "bodyText": "Changed to external", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383824981", "createdAt": "2020-02-25T11:36:28Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/internal/controller/UICaseController.java", "diffHunk": "@@ -117,4 +124,42 @@ public UICaseController(\n \n         return ResponseEntity.ok(new UIEventViewResource(caseHistoryView, caseId));\n     }\n+\n+    @GetMapping(\n+        path = \"/{caseId}/events\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1NDc1OQ=="}, "originalCommit": {"oid": "822285aaf4898e505f80dbd783b0cf87ef5275f1"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjcxMzc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/DefaultGetEventsOperation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMToxMTozNVrOFuCHng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMTozNTo1MlrOFuCzPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgxMzUzNA==", "bodyText": "this is duplicated with the already existing `getEvents(String jurisdiction, String caseTypeId, String caseReference)\nThe only difference between the 2 is that the above creates a different error message which indicates the  jurisdiction and caseTypeId.\nString.format(RESOURCE_NOT_FOUND, jurisdiction, caseTypeId, caseReference)));\nI think that's not an important detail and can be changed to only log the caseReference. If you do that you can find a way to easily reuse that logic rather than duplicating", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383813534", "createdAt": "2020-02-25T11:11:35Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/DefaultGetEventsOperation.java", "diffHunk": "@@ -58,4 +60,18 @@ public DefaultGetEventsOperation(CaseAuditEventRepository auditEventRepository,\n         return auditEventRepository.findByEventId(eventId).map(Optional::of)\n             .orElseThrow(() -> new ResourceNotFoundException(CASE_EVENT_NOT_FOUND));\n     }\n+\n+    @Override\n+    public List<AuditEvent> getEvents(String caseReference) {\n+        if (!uidService.validateUID(caseReference)) {\n+            throw new BadRequestException(\"Case reference \" + caseReference + \" is not valid\");\n+        }\n+\n+        final CaseDetails caseDetails =\n+            getCaseOperation.execute(caseReference)\n+                .orElseThrow(() -> new ResourceNotFoundException(\n+                    String.format(CASE_RESOURCE_NOT_FOUND, caseReference)));\n+\n+        return getEvents(caseDetails);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b7e5b430c3635dcafac4d51cfdb19e287563e45"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNDcwMw==", "bodyText": "Did some changes.... Please review the code", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383824703", "createdAt": "2020-02-25T11:35:52Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/DefaultGetEventsOperation.java", "diffHunk": "@@ -58,4 +60,18 @@ public DefaultGetEventsOperation(CaseAuditEventRepository auditEventRepository,\n         return auditEventRepository.findByEventId(eventId).map(Optional::of)\n             .orElseThrow(() -> new ResourceNotFoundException(CASE_EVENT_NOT_FOUND));\n     }\n+\n+    @Override\n+    public List<AuditEvent> getEvents(String caseReference) {\n+        if (!uidService.validateUID(caseReference)) {\n+            throw new BadRequestException(\"Case reference \" + caseReference + \" is not valid\");\n+        }\n+\n+        final CaseDetails caseDetails =\n+            getCaseOperation.execute(caseReference)\n+                .orElseThrow(() -> new ResourceNotFoundException(\n+                    String.format(CASE_RESOURCE_NOT_FOUND, caseReference)));\n+\n+        return getEvents(caseDetails);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgxMzUzNA=="}, "originalCommit": {"oid": "0b7e5b430c3635dcafac4d51cfdb19e287563e45"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjgyNDQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/DefaultGetEventsOperation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMTo0ODowOVrOFuDJhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMTo0ODowOVrOFuDJhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMDQwNw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383830407", "createdAt": "2020-02-25T11:48:09Z", "author": {"login": "andrewfolga"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/DefaultGetEventsOperation.java", "diffHunk": "@@ -41,15 +43,17 @@ public DefaultGetEventsOperation(CaseAuditEventRepository auditEventRepository,\n \n     @Override\n     public List<AuditEvent> getEvents(String jurisdiction, String caseTypeId, String caseReference) {\n+        return getEvents(caseReference, () -> String.format(RESOURCE_NOT_FOUND, jurisdiction, caseTypeId, caseReference));\n+    }\n+\n+    private List<AuditEvent> getEvents(String caseReference, Supplier<String> errorMessageSupplier) {\n         if (!uidService.validateUID(caseReference)) {\n             throw new BadRequestException(\"Case reference \" + caseReference + \" is not valid\");\n         }\n \n         final CaseDetails caseDetails =\n             getCaseOperation.execute(caseReference)\n-                .orElseThrow(() -> new ResourceNotFoundException(\n-                    String.format(RESOURCE_NOT_FOUND, jurisdiction, caseTypeId, caseReference)));\n-\n+                .orElseThrow(() -> new ResourceNotFoundException(errorMessageSupplier.get()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "034c0f357da546e0482afa34a60994291f29cc75"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjgzOTE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMTo1MzoyNlrOFuDSfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDozODowNVrOFuIfRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMjcwMw==", "bodyText": "Is this correct? Are we retrieving also by event IDS?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383832703", "createdAt": "2020-02-25T11:53:26Z", "author": {"login": "andrewfolga"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve an event by case and event IDs for dynamic display\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "034c0f357da546e0482afa34a60994291f29cc75"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMzEzNg==", "bodyText": "Also I think we retrieve audit event and not a single event. Could we fix that too?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383833136", "createdAt": "2020-02-25T11:54:20Z", "author": {"login": "andrewfolga"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve an event by case and event IDs for dynamic display\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMjcwMw=="}, "originalCommit": {"oid": "034c0f357da546e0482afa34a60994291f29cc75"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMzQ4MA==", "bodyText": "This is also not for dynamic display. Could we say:\n\"Retrieve audit events by case ID\"", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383833480", "createdAt": "2020-02-25T11:55:07Z", "author": {"login": "andrewfolga"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve an event by case and event IDs for dynamic display\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMjcwMw=="}, "originalCommit": {"oid": "034c0f357da546e0482afa34a60994291f29cc75"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNzg5NQ==", "bodyText": "changed", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383917895", "createdAt": "2020-02-25T14:38:05Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve an event by case and event IDs for dynamic display\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMjcwMw=="}, "originalCommit": {"oid": "034c0f357da546e0482afa34a60994291f29cc75"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Njg0NTI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMTo1NTozM1rOFuDWTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDozNzo1M1rOFuIeuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMzY3Ng==", "bodyText": "Should it not say - Case audit events not found?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383833676", "createdAt": "2020-02-25T11:55:33Z", "author": {"login": "andrewfolga"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve an event by case and event IDs for dynamic display\",\n+        notes = V2.EXPERIMENTAL_WARNING\n+    )\n+    @ApiResponses({\n+        @ApiResponse(\n+            code = 200,\n+            message = \"Success\",\n+            response = CaseEventsResource.class\n+        ),\n+        @ApiResponse(\n+            code = 400,\n+            message = ERROR_CASE_ID_INVALID\n+        ),\n+        @ApiResponse(\n+            code = 404,\n+            message = \"Case event not found\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "034c0f357da546e0482afa34a60994291f29cc75"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNzc1Mg==", "bodyText": "Changed", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383917752", "createdAt": "2020-02-25T14:37:53Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve an event by case and event IDs for dynamic display\",\n+        notes = V2.EXPERIMENTAL_WARNING\n+    )\n+    @ApiResponses({\n+        @ApiResponse(\n+            code = 200,\n+            message = \"Success\",\n+            response = CaseEventsResource.class\n+        ),\n+        @ApiResponse(\n+            code = 400,\n+            message = ERROR_CASE_ID_INVALID\n+        ),\n+        @ApiResponse(\n+            code = 404,\n+            message = \"Case event not found\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzMzY3Ng=="}, "originalCommit": {"oid": "034c0f357da546e0482afa34a60994291f29cc75"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Njg2MDg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMjowMDo1OVrOFuDflQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDozNzozOVrOFuIeHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzNjA1Mw==", "bodyText": "Should it not be \"Retrieve audit events by case ID\"?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383836053", "createdAt": "2020-02-25T12:00:59Z", "author": {"login": "andrewfolga"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve an audit event by Case ID\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "320b01010394530d288e4dd83727592e91a28f78"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNzU5OA==", "bodyText": "Changed", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383917598", "createdAt": "2020-02-25T14:37:39Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve an audit event by Case ID\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzNjA1Mw=="}, "originalCommit": {"oid": "320b01010394530d288e4dd83727592e91a28f78"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Njg2NDA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMjowMjowOVrOFuDhhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDozNzozMFrOFuIdvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzNjU0OQ==", "bodyText": "Can we extract this to V2.Error like \"AUDIT_EVENTS_NOT_FOUND\"?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383836549", "createdAt": "2020-02-25T12:02:09Z", "author": {"login": "andrewfolga"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve an audit event by Case ID\",\n+        notes = V2.EXPERIMENTAL_WARNING\n+    )\n+    @ApiResponses({\n+        @ApiResponse(\n+            code = 200,\n+            message = \"Success\",\n+            response = CaseEventsResource.class\n+        ),\n+        @ApiResponse(\n+            code = 400,\n+            message = ERROR_CASE_ID_INVALID\n+        ),\n+        @ApiResponse(\n+            code = 404,\n+            message = \"Case audit events not found\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "320b01010394530d288e4dd83727592e91a28f78"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNzUwMw==", "bodyText": "Added it into V2.Error", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383917503", "createdAt": "2020-02-25T14:37:30Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve an audit event by Case ID\",\n+        notes = V2.EXPERIMENTAL_WARNING\n+    )\n+    @ApiResponses({\n+        @ApiResponse(\n+            code = 200,\n+            message = \"Success\",\n+            response = CaseEventsResource.class\n+        ),\n+        @ApiResponse(\n+            code = 400,\n+            message = ERROR_CASE_ID_INVALID\n+        ),\n+        @ApiResponse(\n+            code = 404,\n+            message = \"Case audit events not found\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzNjU0OQ=="}, "originalCommit": {"oid": "320b01010394530d288e4dd83727592e91a28f78"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Njg3MjkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMjowNDo1NFrOFuDmqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDozNzoxM1rOFuIdJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzNzg2NQ==", "bodyText": "Aren't we missing other response codes here like 422 UNPROCESSABLE_ENTITY from ValidationException (AuthorisedGetEventsOperation)?\nCan you check whether others are not missing?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383837865", "createdAt": "2020-02-25T12:04:54Z", "author": {"login": "andrewfolga"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve audit events by case ID\",\n+        notes = V2.EXPERIMENTAL_WARNING\n+    )\n+    @ApiResponses({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a85cd154836bc02957f06ba80013507244dc1acc"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNzM0OQ==", "bodyText": "added 422 messages to API", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383917349", "createdAt": "2020-02-25T14:37:13Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -211,4 +219,43 @@ public CaseController(\n \n         return status(HttpStatus.CREATED).body(new CaseResource(caseDetails, content, ignoreWarning));\n     }\n+\n+\n+    @GetMapping(\n+        path = \"/cases/{caseId}/events\",\n+        headers = {\n+            V2.EXPERIMENTAL_HEADER\n+        },\n+        produces = {\n+            V2.MediaType.CASE_EVENTS\n+        }\n+    )\n+    @ApiOperation(\n+        value = \"Retrieve audit events by case ID\",\n+        notes = V2.EXPERIMENTAL_WARNING\n+    )\n+    @ApiResponses({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzNzg2NQ=="}, "originalCommit": {"oid": "a85cd154836bc02957f06ba80013507244dc1acc"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzM1ODgyOnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/AuthorisedGetEventsOperation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDoyOTowNFrOFuIKSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDozNjo1M1rOFuIcUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxMjUyMg==", "bodyText": "we sure this is needed? DefaultGetEventsOperation always returns at least 1 event, the create event for a case.\nAnd I think the other decorators that execute before this one will already return an empty list in case that single event is not accessible", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383912522", "createdAt": "2020-02-25T14:29:04Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/AuthorisedGetEventsOperation.java", "diffHunk": "@@ -61,6 +66,13 @@ public AuthorisedGetEventsOperation(@Qualifier(\"classified\") GetEventsOperation\n         return secureEvents(caseTypeId, event.getCaseDataId(), singletonList(event)).stream().findFirst();\n     }\n \n+    private List<AuditEvent> secureEvents(List<AuditEvent> events) {\n+        if (null == events || events.size() == 0) {\n+            return Lists.newArrayList();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e1d8cfa82bc20b1e76cf5fa48cc25631bfb61be"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNzEzOQ==", "bodyText": "removed above check", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383917139", "createdAt": "2020-02-25T14:36:53Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/AuthorisedGetEventsOperation.java", "diffHunk": "@@ -61,6 +66,13 @@ public AuthorisedGetEventsOperation(@Qualifier(\"classified\") GetEventsOperation\n         return secureEvents(caseTypeId, event.getCaseDataId(), singletonList(event)).stream().findFirst();\n     }\n \n+    private List<AuditEvent> secureEvents(List<AuditEvent> events) {\n+        if (null == events || events.size() == 0) {\n+            return Lists.newArrayList();\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxMjUyMg=="}, "originalCommit": {"oid": "8e1d8cfa82bc20b1e76cf5fa48cc25631bfb61be"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzM2ODA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/ClassifiedGetEventsOperation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDozMToyNlrOFuIQFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDozNjo0MlrOFuIb6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNDAwNA==", "bodyText": "same as above don't think:\nnull == events || events.size() == 0 \nis needed", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383914004", "createdAt": "2020-02-25T14:31:26Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/ClassifiedGetEventsOperation.java", "diffHunk": "@@ -48,6 +57,14 @@ public ClassifiedGetEventsOperation(@Qualifier(\"default\") GetEventsOperation get\n         return secureEvents(jurisdiction, singletonList(event)).stream().findFirst();\n     }\n \n+    private List<AuditEvent> secureEvents(List<AuditEvent> events, String caseReference) {\n+        CaseDetails caseDetails = getCaseOperation.execute(caseReference).orElse(null);\n+        if (null == events || events.size() == 0 || null == caseDetails) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e1d8cfa82bc20b1e76cf5fa48cc25631bfb61be"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNzAzNA==", "bodyText": "removed about check", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383917034", "createdAt": "2020-02-25T14:36:42Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/ClassifiedGetEventsOperation.java", "diffHunk": "@@ -48,6 +57,14 @@ public ClassifiedGetEventsOperation(@Qualifier(\"default\") GetEventsOperation get\n         return secureEvents(jurisdiction, singletonList(event)).stream().findFirst();\n     }\n \n+    private List<AuditEvent> secureEvents(List<AuditEvent> events, String caseReference) {\n+        CaseDetails caseDetails = getCaseOperation.execute(caseReference).orElse(null);\n+        if (null == events || events.size() == 0 || null == caseDetails) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxNDAwNA=="}, "originalCommit": {"oid": "8e1d8cfa82bc20b1e76cf5fa48cc25631bfb61be"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzM5ODkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/AuthorisedGetEventsOperation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDozOToyMlrOFuIiwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDo0MTowOVrOFuInAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxODc4NQ==", "bodyText": "Kiran can you review AuditEvent and make sure it's not missing any important event property and if all the properties we are returning are relevant?\nLet's give this a thought as as we found out the v1 endpoint was not written by us. Perhaps we can take this chance to improve the json response that is returned", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383918785", "createdAt": "2020-02-25T14:39:22Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/AuthorisedGetEventsOperation.java", "diffHunk": "@@ -51,6 +51,11 @@ public AuthorisedGetEventsOperation(@Qualifier(\"classified\") GetEventsOperation\n         return secureEvents(caseTypeId, auditEvents.get(0).getCaseDataId(),  auditEvents);\n     }\n \n+    @Override\n+    public List<AuditEvent> getEvents(String caseReference) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c6b96a1bc110bd8e4a888652108d6750a2d8662"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxOTg3Mw==", "bodyText": "furthermore please test this with a citizen in addition to caseworker. The Service that has requested this endpoint will be accessing it with a citizen role so we should make sure it's working", "url": "https://github.com/hmcts/ccd-data-store-api/pull/818#discussion_r383919873", "createdAt": "2020-02-25T14:41:09Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/getevents/AuthorisedGetEventsOperation.java", "diffHunk": "@@ -51,6 +51,11 @@ public AuthorisedGetEventsOperation(@Qualifier(\"classified\") GetEventsOperation\n         return secureEvents(caseTypeId, auditEvents.get(0).getCaseDataId(),  auditEvents);\n     }\n \n+    @Override\n+    public List<AuditEvent> getEvents(String caseReference) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkxODc4NQ=="}, "originalCommit": {"oid": "2c6b96a1bc110bd8e4a888652108d6750a2d8662"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3884, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}