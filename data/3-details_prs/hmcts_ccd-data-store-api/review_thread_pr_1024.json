{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0OTU2OTIy", "number": 1024, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODowMDoyMlrOET92Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODozMDozOVrOEWs3DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzcxNjY2OnYy", "diffSide": "RIGHT", "path": "src/aat/resources/features/F-105/F-105.feature", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODowMDoyMlrOG5_jfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODowMDoyMlrOG5_jfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2MzI5Mg==", "bodyText": "Should have a more descriptive scenario title, telling what is specific to this scenario.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1024#discussion_r463463292", "createdAt": "2020-07-31T08:00:22Z", "author": {"login": "MSancaktutar"}, "path": "src/aat/resources/features/F-105/F-105.feature", "diffHunk": "@@ -210,3 +199,79 @@ Feature: F-105: Add Case-Assigned Users and Roles\n     Then a positive response is received,\n     And the response has all the details as expected,\n     And a call [to verify Olawale's reception of the role CR-1 and CR-2 over the case C1] will get the expected response as in [S-105.13_Get_Case_Roles_for_Case_C1].\n+\n+  # RDM-8842 AC-1\n+  @S-105.8842.1\n+  Scenario: Must successfully increment Assigned User Count when assigning a user and case role for a specific case (by a user calling through/from an authorised application)\n+    Given an appropriate test context as detailed in the test data source,\n+    And a user [Richard - who can create a case],\n+    And a user [Dil - who is to add some case role assignment for a case],\n+    And a user [Olawale - with an active solicitor profile],\n+    And a user [Hemanth - with an active solicitor profile],\n+    And a case [C1, which Richard has just] created as in [F-105_Case_Data_Create_C1],\n+    And a successful call [to check the number of users having access to C1 in its supplementary data] as in [F-105_Prerequisite_Counter_Check_Call],\n+    When a request is prepared with appropriate values,\n+    And the request [is made from an authorised application, by Dil, with the Case ID of C1, User ID of Olawale, proper Case Role CR-1 and CR-2 and the Organisation ID of Olawale],\n+    And it is submitted to call the [Add Case-Assigned Users and Roles] operation of [CCD Data Store Api],\n+    Then a positive response is received,\n+    And the response has all the details as expected,\n+    And a call [to verify Olawale's reception of the role CR-1 and CR-2 over the case C1] will get the expected response as in [S-105.8842.1_Verify_Case_Roles_for_Case_C1],\n+    And a call [to verify the count of users assigned to C1 has increased by 1] will get the expected response as in [S-105.8842.1_Verify_Counter_1],\n+    And a call [to repeat the same request as above] will get the expected response as in [S-105.8842.1_Repeated_Call_to_Add_Case_Assigned_Users_and_Roles],\n+    And a call [to verify the count of users assigned to C1 has NOT increased] will get the expected response as in [S-105.8842.1_Verify_Counter_2],\n+    And a call [to repeat the same request as above this time with a different user, Hemanth] will get the expected response as in [S-105.8842.1_Repeated_Call_to_Add_Case_Assigned_Users_and_Roles_Hemanth],\n+    And a call [to verify the count of users assigned to a case has increased by 1] will get the expected response as in [S-105.8842.1_Verify_Counter_3].\n+\n+   # RDM-8842 AC-2\n+   @S-105.8842.2\n+   Scenario: Must not increment Assigned User Count when assigning a user and case role for a specific case if there was already a case user role assignment with the respective values in the request (by a user calling through/from an authorised application)\n+     Given an appropriate test context as detailed in the test data source,\n+     And a user [Richard - who can create a case],\n+     And a user [Dil - who is to add some case role assignment for a case],\n+     And a user [Olawale - with an active solicitor profile and valid User ID],\n+     And a case [C1, which Richard has just] created as in [F-105_Case_Data_Create_C1],\n+     And a successful call [to grant access for Olawale with a case role CR-1 over the case C1] as in [S-105.8842.2_Grant_Access],\n+     And a successful call [to check the number of users having access to C1 in its supplementary data] as in [F-105_Prerequisite_Counter_Check_Call],\n+     When a request is prepared with appropriate values,\n+     And the request [is made from an authorised application, by Dil, with the Case ID of C1, User ID of Olawale, proper Case Role CR-2 and the Organisation ID of Olawale],\n+     And it is submitted to call the [Add Case-Assigned Users and Roles] operation of [CCD Data Store Api],\n+     Then a positive response is received,\n+     And the response has all the details as expected,\n+     And a call [to verify Olawale's reception of the role CR-2 over the case C1] will get the expected response as in [S-105.8842.2_Verify_Case_Roles_for_Case_C1],\n+     And a call [to verify the count of users assigned to a case] will get the expected response as in [F-105_Verify_Counter_Unchanged].\n+\n+   # RDM-8842 AC-3\n+   @S-105.8842.3\n+   Scenario: No organisation ID is provided by the user", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1920f5c47ab734b87c163df826a5c04a44a40b46"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzcxOTQ5OnYy", "diffSide": "RIGHT", "path": "src/aat/resources/features/F-105/F-105.feature", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODowMToxOFrOG5_lJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwOTowMTowM1rOG7XneA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2MzcxNg==", "bodyText": "could we be more specific in wording here, telling that the count will be zero?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1024#discussion_r463463716", "createdAt": "2020-07-31T08:01:18Z", "author": {"login": "MSancaktutar"}, "path": "src/aat/resources/features/F-105/F-105.feature", "diffHunk": "@@ -210,3 +199,79 @@ Feature: F-105: Add Case-Assigned Users and Roles\n     Then a positive response is received,\n     And the response has all the details as expected,\n     And a call [to verify Olawale's reception of the role CR-1 and CR-2 over the case C1] will get the expected response as in [S-105.13_Get_Case_Roles_for_Case_C1].\n+\n+  # RDM-8842 AC-1\n+  @S-105.8842.1\n+  Scenario: Must successfully increment Assigned User Count when assigning a user and case role for a specific case (by a user calling through/from an authorised application)\n+    Given an appropriate test context as detailed in the test data source,\n+    And a user [Richard - who can create a case],\n+    And a user [Dil - who is to add some case role assignment for a case],\n+    And a user [Olawale - with an active solicitor profile],\n+    And a user [Hemanth - with an active solicitor profile],\n+    And a case [C1, which Richard has just] created as in [F-105_Case_Data_Create_C1],\n+    And a successful call [to check the number of users having access to C1 in its supplementary data] as in [F-105_Prerequisite_Counter_Check_Call],\n+    When a request is prepared with appropriate values,\n+    And the request [is made from an authorised application, by Dil, with the Case ID of C1, User ID of Olawale, proper Case Role CR-1 and CR-2 and the Organisation ID of Olawale],\n+    And it is submitted to call the [Add Case-Assigned Users and Roles] operation of [CCD Data Store Api],\n+    Then a positive response is received,\n+    And the response has all the details as expected,\n+    And a call [to verify Olawale's reception of the role CR-1 and CR-2 over the case C1] will get the expected response as in [S-105.8842.1_Verify_Case_Roles_for_Case_C1],\n+    And a call [to verify the count of users assigned to C1 has increased by 1] will get the expected response as in [S-105.8842.1_Verify_Counter_1],\n+    And a call [to repeat the same request as above] will get the expected response as in [S-105.8842.1_Repeated_Call_to_Add_Case_Assigned_Users_and_Roles],\n+    And a call [to verify the count of users assigned to C1 has NOT increased] will get the expected response as in [S-105.8842.1_Verify_Counter_2],\n+    And a call [to repeat the same request as above this time with a different user, Hemanth] will get the expected response as in [S-105.8842.1_Repeated_Call_to_Add_Case_Assigned_Users_and_Roles_Hemanth],\n+    And a call [to verify the count of users assigned to a case has increased by 1] will get the expected response as in [S-105.8842.1_Verify_Counter_3].\n+\n+   # RDM-8842 AC-2\n+   @S-105.8842.2\n+   Scenario: Must not increment Assigned User Count when assigning a user and case role for a specific case if there was already a case user role assignment with the respective values in the request (by a user calling through/from an authorised application)\n+     Given an appropriate test context as detailed in the test data source,\n+     And a user [Richard - who can create a case],\n+     And a user [Dil - who is to add some case role assignment for a case],\n+     And a user [Olawale - with an active solicitor profile and valid User ID],\n+     And a case [C1, which Richard has just] created as in [F-105_Case_Data_Create_C1],\n+     And a successful call [to grant access for Olawale with a case role CR-1 over the case C1] as in [S-105.8842.2_Grant_Access],\n+     And a successful call [to check the number of users having access to C1 in its supplementary data] as in [F-105_Prerequisite_Counter_Check_Call],\n+     When a request is prepared with appropriate values,\n+     And the request [is made from an authorised application, by Dil, with the Case ID of C1, User ID of Olawale, proper Case Role CR-2 and the Organisation ID of Olawale],\n+     And it is submitted to call the [Add Case-Assigned Users and Roles] operation of [CCD Data Store Api],\n+     Then a positive response is received,\n+     And the response has all the details as expected,\n+     And a call [to verify Olawale's reception of the role CR-2 over the case C1] will get the expected response as in [S-105.8842.2_Verify_Case_Roles_for_Case_C1],\n+     And a call [to verify the count of users assigned to a case] will get the expected response as in [F-105_Verify_Counter_Unchanged].\n+\n+   # RDM-8842 AC-3\n+   @S-105.8842.3\n+   Scenario: No organisation ID is provided by the user\n+     Given an appropriate test context as detailed in the test data source,\n+     And a user [Richard - who can create a case],\n+     And a user [Dil - who is to add some case role assignment for a case],\n+     And a user [Olawale - with an active solicitor profile and valid User ID],\n+     And a case [C1, which Richard has just] created as in [F-105_Case_Data_Create_C1],\n+     And a successful call [to check the number of users having access to C1 in its supplementary data] as in [F-105_Prerequisite_Counter_Check_Call],\n+     When a request is prepared with appropriate values,\n+     And the request [is made from an authorised application, by Dil, with the Case ID of C1, User ID of Olawale, proper Case Role CR-1 and no Organisation ID],\n+     And it is submitted to call the [Add Case-Assigned Users and Roles] operation of [CCD Data Store Api],\n+     Then a positive response is received,\n+     And the response has all the details as expected,\n+     And a call [to verify Olawale's reception of the role CR-1 over the case C1] will get the expected response as in [S-105.8842.3_Verify_Case_Roles_for_Case_C1],\n+     And a call [to verify the count of users assigned to a case] will get the expected response as in [F-105_Verify_Counter_Unchanged].", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1920f5c47ab734b87c163df826a5c04a44a40b46"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkwNjEwNA==", "bodyText": "As discussed: will update the spec so it reads \"[to verify the count of users assigned to a case has NOT changed]\"", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1024#discussion_r464906104", "createdAt": "2020-08-04T09:01:03Z", "author": {"login": "mattnayler"}, "path": "src/aat/resources/features/F-105/F-105.feature", "diffHunk": "@@ -210,3 +199,79 @@ Feature: F-105: Add Case-Assigned Users and Roles\n     Then a positive response is received,\n     And the response has all the details as expected,\n     And a call [to verify Olawale's reception of the role CR-1 and CR-2 over the case C1] will get the expected response as in [S-105.13_Get_Case_Roles_for_Case_C1].\n+\n+  # RDM-8842 AC-1\n+  @S-105.8842.1\n+  Scenario: Must successfully increment Assigned User Count when assigning a user and case role for a specific case (by a user calling through/from an authorised application)\n+    Given an appropriate test context as detailed in the test data source,\n+    And a user [Richard - who can create a case],\n+    And a user [Dil - who is to add some case role assignment for a case],\n+    And a user [Olawale - with an active solicitor profile],\n+    And a user [Hemanth - with an active solicitor profile],\n+    And a case [C1, which Richard has just] created as in [F-105_Case_Data_Create_C1],\n+    And a successful call [to check the number of users having access to C1 in its supplementary data] as in [F-105_Prerequisite_Counter_Check_Call],\n+    When a request is prepared with appropriate values,\n+    And the request [is made from an authorised application, by Dil, with the Case ID of C1, User ID of Olawale, proper Case Role CR-1 and CR-2 and the Organisation ID of Olawale],\n+    And it is submitted to call the [Add Case-Assigned Users and Roles] operation of [CCD Data Store Api],\n+    Then a positive response is received,\n+    And the response has all the details as expected,\n+    And a call [to verify Olawale's reception of the role CR-1 and CR-2 over the case C1] will get the expected response as in [S-105.8842.1_Verify_Case_Roles_for_Case_C1],\n+    And a call [to verify the count of users assigned to C1 has increased by 1] will get the expected response as in [S-105.8842.1_Verify_Counter_1],\n+    And a call [to repeat the same request as above] will get the expected response as in [S-105.8842.1_Repeated_Call_to_Add_Case_Assigned_Users_and_Roles],\n+    And a call [to verify the count of users assigned to C1 has NOT increased] will get the expected response as in [S-105.8842.1_Verify_Counter_2],\n+    And a call [to repeat the same request as above this time with a different user, Hemanth] will get the expected response as in [S-105.8842.1_Repeated_Call_to_Add_Case_Assigned_Users_and_Roles_Hemanth],\n+    And a call [to verify the count of users assigned to a case has increased by 1] will get the expected response as in [S-105.8842.1_Verify_Counter_3].\n+\n+   # RDM-8842 AC-2\n+   @S-105.8842.2\n+   Scenario: Must not increment Assigned User Count when assigning a user and case role for a specific case if there was already a case user role assignment with the respective values in the request (by a user calling through/from an authorised application)\n+     Given an appropriate test context as detailed in the test data source,\n+     And a user [Richard - who can create a case],\n+     And a user [Dil - who is to add some case role assignment for a case],\n+     And a user [Olawale - with an active solicitor profile and valid User ID],\n+     And a case [C1, which Richard has just] created as in [F-105_Case_Data_Create_C1],\n+     And a successful call [to grant access for Olawale with a case role CR-1 over the case C1] as in [S-105.8842.2_Grant_Access],\n+     And a successful call [to check the number of users having access to C1 in its supplementary data] as in [F-105_Prerequisite_Counter_Check_Call],\n+     When a request is prepared with appropriate values,\n+     And the request [is made from an authorised application, by Dil, with the Case ID of C1, User ID of Olawale, proper Case Role CR-2 and the Organisation ID of Olawale],\n+     And it is submitted to call the [Add Case-Assigned Users and Roles] operation of [CCD Data Store Api],\n+     Then a positive response is received,\n+     And the response has all the details as expected,\n+     And a call [to verify Olawale's reception of the role CR-2 over the case C1] will get the expected response as in [S-105.8842.2_Verify_Case_Roles_for_Case_C1],\n+     And a call [to verify the count of users assigned to a case] will get the expected response as in [F-105_Verify_Counter_Unchanged].\n+\n+   # RDM-8842 AC-3\n+   @S-105.8842.3\n+   Scenario: No organisation ID is provided by the user\n+     Given an appropriate test context as detailed in the test data source,\n+     And a user [Richard - who can create a case],\n+     And a user [Dil - who is to add some case role assignment for a case],\n+     And a user [Olawale - with an active solicitor profile and valid User ID],\n+     And a case [C1, which Richard has just] created as in [F-105_Case_Data_Create_C1],\n+     And a successful call [to check the number of users having access to C1 in its supplementary data] as in [F-105_Prerequisite_Counter_Check_Call],\n+     When a request is prepared with appropriate values,\n+     And the request [is made from an authorised application, by Dil, with the Case ID of C1, User ID of Olawale, proper Case Role CR-1 and no Organisation ID],\n+     And it is submitted to call the [Add Case-Assigned Users and Roles] operation of [CCD Data Store Api],\n+     Then a positive response is received,\n+     And the response has all the details as expected,\n+     And a call [to verify Olawale's reception of the role CR-1 over the case C1] will get the expected response as in [S-105.8842.3_Verify_Case_Roles_for_Case_C1],\n+     And a call [to verify the count of users assigned to a case] will get the expected response as in [F-105_Verify_Counter_Unchanged].", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2MzcxNg=="}, "originalCommit": {"oid": "1920f5c47ab734b87c163df826a5c04a44a40b46"}, "originalPosition": 148}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzczNjgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/std/CaseAssignedUserRoleRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODowNzoxM1rOG5_vuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODo1NjozM1rOG7XdWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2NjQyNA==", "bodyText": "The 2 class names don't have a parallelism in the semantics, breaching the expected connotation of an IS-A relation. The sentence CaseAssignedUserRoleRequest IS A CaseAssignedUserRole is technically correct, but linguistically wrong. Could you please propose a better fitting name for one or both of these to have a proper IS-A reading?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1024#discussion_r463466424", "createdAt": "2020-07-31T08:07:13Z", "author": {"login": "MSancaktutar"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/std/CaseAssignedUserRoleRequest.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package uk.gov.hmcts.ccd.domain.model.std;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.ToString;\n+\n+import static com.fasterxml.jackson.annotation.JsonInclude.Include;\n+\n+@ToString\n+@NoArgsConstructor\n+@Getter\n+public class CaseAssignedUserRoleRequest extends CaseAssignedUserRole {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1920f5c47ab734b87c163df826a5c04a44a40b46"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkwMzUxMw==", "bodyText": "As discussed: will rename as CaseAssignedUserRoleWithOrganisation", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1024#discussion_r464903513", "createdAt": "2020-08-04T08:56:33Z", "author": {"login": "mattnayler"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/std/CaseAssignedUserRoleRequest.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package uk.gov.hmcts.ccd.domain.model.std;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.ToString;\n+\n+import static com.fasterxml.jackson.annotation.JsonInclude.Include;\n+\n+@ToString\n+@NoArgsConstructor\n+@Getter\n+public class CaseAssignedUserRoleRequest extends CaseAssignedUserRole {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2NjQyNA=="}, "originalCommit": {"oid": "1920f5c47ab734b87c163df826a5c04a44a40b46"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5Mzc1MjM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/caseaccess/CaseAccessOperation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODoxMjoxM1rOG5_45Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODoxMjoxM1rOG5_45Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2ODc3Mw==", "bodyText": "in the value of an entry, the list is not that of roles. perhaps a name like requestedAssignments could read", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1024#discussion_r463468773", "createdAt": "2020-07-31T08:12:13Z", "author": {"login": "MSancaktutar"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/caseaccess/CaseAccessOperation.java", "diffHunk": "@@ -84,25 +92,118 @@ public void updateUserAccess(CaseDetails caseDetails, CaseUser caseUser) {\n     }\n \n     @Transactional\n-    public void addCaseUserRoles(List<CaseAssignedUserRole> caseUserRoles) {\n+    public void addCaseUserRoles(List<CaseAssignedUserRoleRequest> caseUserRoles) {\n+\n+        Map<Long, List<CaseAssignedUserRoleRequest>> cauRolesByCaseId = getMapOfCaseAssignedUserRolesByCaseId(caseUserRoles);\n+\n+        Map<String, Map<String, Object>> newUserCounts = getNewUserCountByCaseAndOrganisation(cauRolesByCaseId);\n+\n+        cauRolesByCaseId.forEach((caseId, roles) ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1920f5c47ab734b87c163df826a5c04a44a40b46"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5Mzc1MzY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/caseaccess/CaseAccessOperation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODoxMjo0MlrOG5_5tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODoxMjo0MlrOG5_5tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2ODk4MA==", "bodyText": "how about requestedAssignment here?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1024#discussion_r463468980", "createdAt": "2020-07-31T08:12:42Z", "author": {"login": "MSancaktutar"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/caseaccess/CaseAccessOperation.java", "diffHunk": "@@ -84,25 +92,118 @@ public void updateUserAccess(CaseDetails caseDetails, CaseUser caseUser) {\n     }\n \n     @Transactional\n-    public void addCaseUserRoles(List<CaseAssignedUserRole> caseUserRoles) {\n+    public void addCaseUserRoles(List<CaseAssignedUserRoleRequest> caseUserRoles) {\n+\n+        Map<Long, List<CaseAssignedUserRoleRequest>> cauRolesByCaseId = getMapOfCaseAssignedUserRolesByCaseId(caseUserRoles);\n+\n+        Map<String, Map<String, Object>> newUserCounts = getNewUserCountByCaseAndOrganisation(cauRolesByCaseId);\n+\n+        cauRolesByCaseId.forEach((caseId, roles) ->\n+            roles.forEach(caseUserRole ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1920f5c47ab734b87c163df826a5c04a44a40b46"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5Mzc1NzQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/caseaccess/CaseAccessOperation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODoxNDowMlrOG5_78w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODoxNDowMlrOG5_78w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2OTU1NQ==", "bodyText": "newUserCounts returned shouldn't be nullable. If there is nothing to return, the method calculating this should return an empty map.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1024#discussion_r463469555", "createdAt": "2020-07-31T08:14:02Z", "author": {"login": "MSancaktutar"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/caseaccess/CaseAccessOperation.java", "diffHunk": "@@ -84,25 +92,118 @@ public void updateUserAccess(CaseDetails caseDetails, CaseUser caseUser) {\n     }\n \n     @Transactional\n-    public void addCaseUserRoles(List<CaseAssignedUserRole> caseUserRoles) {\n+    public void addCaseUserRoles(List<CaseAssignedUserRoleRequest> caseUserRoles) {\n+\n+        Map<Long, List<CaseAssignedUserRoleRequest>> cauRolesByCaseId = getMapOfCaseAssignedUserRolesByCaseId(caseUserRoles);\n+\n+        Map<String, Map<String, Object>> newUserCounts = getNewUserCountByCaseAndOrganisation(cauRolesByCaseId);\n+\n+        cauRolesByCaseId.forEach((caseId, roles) ->\n+            roles.forEach(caseUserRole ->\n+                caseUserRepository.grantAccess(caseId, caseUserRole.getUserId(), caseUserRole.getCaseRole()))\n+        );\n+\n+        if (newUserCounts != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1920f5c47ab734b87c163df826a5c04a44a40b46"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjM5MTE2OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/caseaccess/CaseAccessOperation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODozMDozOVrOG-FoWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOToxMzoyMVrOG-G68w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc1NzE0NA==", "bodyText": "May be it's better to extract these into separate small methods for better readability and unit testing?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1024#discussion_r467757144", "createdAt": "2020-08-10T08:30:39Z", "author": {"login": "smathangi"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/caseaccess/CaseAccessOperation.java", "diffHunk": "@@ -84,25 +92,121 @@ public void updateUserAccess(CaseDetails caseDetails, CaseUser caseUser) {\n     }\n \n     @Transactional\n-    public void addCaseUserRoles(List<CaseAssignedUserRole> caseUserRoles) {\n+    public void addCaseUserRoles(List<CaseAssignedUserRoleWithOrganisation> caseUserRoles) {\n+\n+        Map<Long, List<CaseAssignedUserRoleWithOrganisation>> cauRolesByCaseId = getMapOfCaseAssignedUserRolesByCaseId(caseUserRoles);\n+\n+        Map<String, Map<String, Object>> newUserCounts = getNewUserCountByCaseAndOrganisation(cauRolesByCaseId);\n+\n+        cauRolesByCaseId.forEach((caseId, requestedAssignments) ->\n+            requestedAssignments.forEach(requestedAssignment ->\n+                caseUserRepository.grantAccess(caseId, requestedAssignment.getUserId(), requestedAssignment.getCaseRole())\n+            )\n+        );\n+\n+        newUserCounts.forEach((caseReference, orgNewUserCountMap) ->\n+            orgNewUserCountMap.forEach((organisationId, newUserCount) ->\n+                supplementaryDataRepository.incrementSupplementaryData(caseReference, \"orgs_assigned_users.\" + organisationId, newUserCount)\n+            )\n+        );\n+    }\n+\n+    private Map<Long, List<CaseAssignedUserRoleWithOrganisation>> getMapOfCaseAssignedUserRolesByCaseId(\n+        List<CaseAssignedUserRoleWithOrganisation> caseUserRoles\n+    ) {\n+\n+        Map<Long, List<CaseAssignedUserRoleWithOrganisation>> cauRolesByCaseId = new HashMap<>();\n+\n         List<Long> caseReferences = caseUserRoles.stream()\n-            .map(CaseAssignedUserRole::getCaseDataId)\n+            .map(CaseAssignedUserRoleWithOrganisation::getCaseDataId)\n             .distinct()\n             .map(Long::parseLong)\n             .collect(Collectors.toCollection(ArrayList::new));\n \n+        // create map of case references to case IDs\n         Map<Long, String> caseIdAndReferences = getCaseDetailsList(caseReferences).stream()\n             .collect(Collectors.toMap(CaseDetails::getReference, CaseDetails::getId));\n \n-        caseUserRoles.forEach(caseUserRole -> {\n-            final Long caseReference = Long.parseLong(caseUserRole.getCaseDataId());\n+        // group roles by case reference\n+        Map<String, List<CaseAssignedUserRoleWithOrganisation>> cauRolesByCaseReference = caseUserRoles.stream()\n+            .collect(Collectors.groupingBy(CaseAssignedUserRoleWithOrganisation::getCaseDataId));\n+\n+        // merge both maps to check we have found all cases\n+        cauRolesByCaseReference.forEach((key, roles) -> {\n+            final Long caseReference = Long.parseLong(key);\n             if (caseIdAndReferences.containsKey(caseReference)) {\n                 final Long caseId = Long.parseLong(caseIdAndReferences.get(caseReference));\n-                caseUserRepository.grantAccess(caseId, caseUserRole.getUserId(), caseUserRole.getCaseRole());\n+                cauRolesByCaseId.put(caseId, roles);\n             } else {\n-                throw new CaseNotFoundException(caseReference.toString());\n+                throw new CaseNotFoundException(key);\n+            }\n+        });\n+\n+        return cauRolesByCaseId;\n+    }\n+\n+    private Map<String, Map<String, Object>> getNewUserCountByCaseAndOrganisation(Map<Long, List<CaseAssignedUserRoleWithOrganisation>> cauRolesByCaseId) {\n+        Map<String, Map<String, Object>> result = new HashMap<>();\n+\n+        Map<Long, List<CaseAssignedUserRoleWithOrganisation>> caseUserRolesWhichHaveAnOrgId = cauRolesByCaseId.entrySet().stream()\n+            .collect(Collectors.toMap(Map.Entry::getKey, e -> e.getValue().stream()\n+                // filter out no organisation_id\n+                .filter(caseUserRole -> StringUtils.isNoneBlank(caseUserRole.getOrganisationId()))\n+                .collect(Collectors.toList())))\n+            // filter cases that have no remaining roles\n+            .entrySet().stream().filter(e -> !e.getValue().isEmpty())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c36c6c1e95343de4e587463345260123f04b2cf"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc3ODI5MQ==", "bodyText": "I do agree. I'll add this to the content of the ticket for minor tweaks of this major work.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1024#discussion_r467778291", "createdAt": "2020-08-10T09:13:21Z", "author": {"login": "MSancaktutar"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/caseaccess/CaseAccessOperation.java", "diffHunk": "@@ -84,25 +92,121 @@ public void updateUserAccess(CaseDetails caseDetails, CaseUser caseUser) {\n     }\n \n     @Transactional\n-    public void addCaseUserRoles(List<CaseAssignedUserRole> caseUserRoles) {\n+    public void addCaseUserRoles(List<CaseAssignedUserRoleWithOrganisation> caseUserRoles) {\n+\n+        Map<Long, List<CaseAssignedUserRoleWithOrganisation>> cauRolesByCaseId = getMapOfCaseAssignedUserRolesByCaseId(caseUserRoles);\n+\n+        Map<String, Map<String, Object>> newUserCounts = getNewUserCountByCaseAndOrganisation(cauRolesByCaseId);\n+\n+        cauRolesByCaseId.forEach((caseId, requestedAssignments) ->\n+            requestedAssignments.forEach(requestedAssignment ->\n+                caseUserRepository.grantAccess(caseId, requestedAssignment.getUserId(), requestedAssignment.getCaseRole())\n+            )\n+        );\n+\n+        newUserCounts.forEach((caseReference, orgNewUserCountMap) ->\n+            orgNewUserCountMap.forEach((organisationId, newUserCount) ->\n+                supplementaryDataRepository.incrementSupplementaryData(caseReference, \"orgs_assigned_users.\" + organisationId, newUserCount)\n+            )\n+        );\n+    }\n+\n+    private Map<Long, List<CaseAssignedUserRoleWithOrganisation>> getMapOfCaseAssignedUserRolesByCaseId(\n+        List<CaseAssignedUserRoleWithOrganisation> caseUserRoles\n+    ) {\n+\n+        Map<Long, List<CaseAssignedUserRoleWithOrganisation>> cauRolesByCaseId = new HashMap<>();\n+\n         List<Long> caseReferences = caseUserRoles.stream()\n-            .map(CaseAssignedUserRole::getCaseDataId)\n+            .map(CaseAssignedUserRoleWithOrganisation::getCaseDataId)\n             .distinct()\n             .map(Long::parseLong)\n             .collect(Collectors.toCollection(ArrayList::new));\n \n+        // create map of case references to case IDs\n         Map<Long, String> caseIdAndReferences = getCaseDetailsList(caseReferences).stream()\n             .collect(Collectors.toMap(CaseDetails::getReference, CaseDetails::getId));\n \n-        caseUserRoles.forEach(caseUserRole -> {\n-            final Long caseReference = Long.parseLong(caseUserRole.getCaseDataId());\n+        // group roles by case reference\n+        Map<String, List<CaseAssignedUserRoleWithOrganisation>> cauRolesByCaseReference = caseUserRoles.stream()\n+            .collect(Collectors.groupingBy(CaseAssignedUserRoleWithOrganisation::getCaseDataId));\n+\n+        // merge both maps to check we have found all cases\n+        cauRolesByCaseReference.forEach((key, roles) -> {\n+            final Long caseReference = Long.parseLong(key);\n             if (caseIdAndReferences.containsKey(caseReference)) {\n                 final Long caseId = Long.parseLong(caseIdAndReferences.get(caseReference));\n-                caseUserRepository.grantAccess(caseId, caseUserRole.getUserId(), caseUserRole.getCaseRole());\n+                cauRolesByCaseId.put(caseId, roles);\n             } else {\n-                throw new CaseNotFoundException(caseReference.toString());\n+                throw new CaseNotFoundException(key);\n+            }\n+        });\n+\n+        return cauRolesByCaseId;\n+    }\n+\n+    private Map<String, Map<String, Object>> getNewUserCountByCaseAndOrganisation(Map<Long, List<CaseAssignedUserRoleWithOrganisation>> cauRolesByCaseId) {\n+        Map<String, Map<String, Object>> result = new HashMap<>();\n+\n+        Map<Long, List<CaseAssignedUserRoleWithOrganisation>> caseUserRolesWhichHaveAnOrgId = cauRolesByCaseId.entrySet().stream()\n+            .collect(Collectors.toMap(Map.Entry::getKey, e -> e.getValue().stream()\n+                // filter out no organisation_id\n+                .filter(caseUserRole -> StringUtils.isNoneBlank(caseUserRole.getOrganisationId()))\n+                .collect(Collectors.toList())))\n+            // filter cases that have no remaining roles\n+            .entrySet().stream().filter(e -> !e.getValue().isEmpty())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc1NzE0NA=="}, "originalCommit": {"oid": "0c36c6c1e95343de4e587463345260123f04b2cf"}, "originalPosition": 118}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3771, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}