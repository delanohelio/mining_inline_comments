{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNDgxNjA5", "number": 862, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMjowNTowOFrODt6-uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMjo0NjoyNlrODuXKgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDc4ODQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/exceptions/RestExceptionHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMjowNTowOFrOF_oB-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMzoyNzo1OFrOF_rJ5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI2MDQ3NQ==", "bodyText": "I was wondering whether it makes sense to not log the stacktrace for the the validation errors. What do you think @mattnayler?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/862#discussion_r402260475", "createdAt": "2020-04-02T12:05:08Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/exceptions/RestExceptionHandler.java", "diffHunk": "@@ -50,6 +60,29 @@ public RestExceptionHandler(AppInsights appInsights) {\n                 .body(error);\n     }\n \n+    @ExceptionHandler(CaseValidationException.class)\n+    @ResponseBody\n+    public ResponseEntity<HttpError> handleCaseValidationException(HttpServletRequest request, CaseValidationException exception) {\n+\n+        // read field IDs from CaseValidationException.details (i.e. avoid using full error details as this may contain user data)\n+        List<String> fieldIds = new ArrayList<>();\n+        if (exception.getDetails() != null) {\n+            String detailsJson = this.objectMapperService.convertObjectToString(exception.getDetails());\n+            fieldIds = JsonPath.read(detailsJson, \"$..field_errors[*].id\");\n+        }\n+\n+        Map<String, String> customProperties = new HashMap<>();\n+        customProperties.put(\"CaseValidationError field IDs\", Arrays.toString(fieldIds.toArray()));\n+\n+        LOG.warn(\"{}: The following list of fields are in an error state: {}\", exception.getMessage(), fieldIds, exception);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29da58d8958ff0fcc61af615e67e7d076a7a981c"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMwNjA3Mg==", "bodyText": "The same field level validation routines may be triggered in three separate places for a single UI call:\n\nInitial event data submission\nAfter callback has returned new data\nAfter data has been merged with existing unchanged case details (i.e. before case event is saved)\n\nSo whilst the data submitted to AppInsights will always contain the full stack details it may still be useful for a dev to see their stack trace is different to the one they are investigating (i.e. it was for me during RDM-7840).  So I am currently tempted to leave it but also happy to be overruled, @mario-paniccia?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/862#discussion_r402306072", "createdAt": "2020-04-02T13:20:02Z", "author": {"login": "mattnayler"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/exceptions/RestExceptionHandler.java", "diffHunk": "@@ -50,6 +60,29 @@ public RestExceptionHandler(AppInsights appInsights) {\n                 .body(error);\n     }\n \n+    @ExceptionHandler(CaseValidationException.class)\n+    @ResponseBody\n+    public ResponseEntity<HttpError> handleCaseValidationException(HttpServletRequest request, CaseValidationException exception) {\n+\n+        // read field IDs from CaseValidationException.details (i.e. avoid using full error details as this may contain user data)\n+        List<String> fieldIds = new ArrayList<>();\n+        if (exception.getDetails() != null) {\n+            String detailsJson = this.objectMapperService.convertObjectToString(exception.getDetails());\n+            fieldIds = JsonPath.read(detailsJson, \"$..field_errors[*].id\");\n+        }\n+\n+        Map<String, String> customProperties = new HashMap<>();\n+        customProperties.put(\"CaseValidationError field IDs\", Arrays.toString(fieldIds.toArray()));\n+\n+        LOG.warn(\"{}: The following list of fields are in an error state: {}\", exception.getMessage(), fieldIds, exception);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI2MDQ3NQ=="}, "originalCommit": {"oid": "29da58d8958ff0fcc61af615e67e7d076a7a981c"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMxMTY1NQ==", "bodyText": "right, good point. Let's leave it then cheers", "url": "https://github.com/hmcts/ccd-data-store-api/pull/862#discussion_r402311655", "createdAt": "2020-04-02T13:27:58Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/exceptions/RestExceptionHandler.java", "diffHunk": "@@ -50,6 +60,29 @@ public RestExceptionHandler(AppInsights appInsights) {\n                 .body(error);\n     }\n \n+    @ExceptionHandler(CaseValidationException.class)\n+    @ResponseBody\n+    public ResponseEntity<HttpError> handleCaseValidationException(HttpServletRequest request, CaseValidationException exception) {\n+\n+        // read field IDs from CaseValidationException.details (i.e. avoid using full error details as this may contain user data)\n+        List<String> fieldIds = new ArrayList<>();\n+        if (exception.getDetails() != null) {\n+            String detailsJson = this.objectMapperService.convertObjectToString(exception.getDetails());\n+            fieldIds = JsonPath.read(detailsJson, \"$..field_errors[*].id\");\n+        }\n+\n+        Map<String, String> customProperties = new HashMap<>();\n+        customProperties.put(\"CaseValidationError field IDs\", Arrays.toString(fieldIds.toArray()));\n+\n+        LOG.warn(\"{}: The following list of fields are in an error state: {}\", exception.getMessage(), fieldIds, exception);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI2MDQ3NQ=="}, "originalCommit": {"oid": "29da58d8958ff0fcc61af615e67e7d076a7a981c"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDc5MDA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/exceptions/RestExceptionHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMjowNTozOVrOF_oC_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODo0Nzo1OVrOGAL2JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI2MDczNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.warn(\"{}: The following list of fields are in an error state: {}\", exception.getMessage(), fieldIds, exception);\n          \n          \n            \n                    LOG.warn(\"{}: The following list of fields are in an invalid state: {}\", exception.getMessage(), fieldIds, exception);", "url": "https://github.com/hmcts/ccd-data-store-api/pull/862#discussion_r402260734", "createdAt": "2020-04-02T12:05:39Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/exceptions/RestExceptionHandler.java", "diffHunk": "@@ -50,6 +60,29 @@ public RestExceptionHandler(AppInsights appInsights) {\n                 .body(error);\n     }\n \n+    @ExceptionHandler(CaseValidationException.class)\n+    @ResponseBody\n+    public ResponseEntity<HttpError> handleCaseValidationException(HttpServletRequest request, CaseValidationException exception) {\n+\n+        // read field IDs from CaseValidationException.details (i.e. avoid using full error details as this may contain user data)\n+        List<String> fieldIds = new ArrayList<>();\n+        if (exception.getDetails() != null) {\n+            String detailsJson = this.objectMapperService.convertObjectToString(exception.getDetails());\n+            fieldIds = JsonPath.read(detailsJson, \"$..field_errors[*].id\");\n+        }\n+\n+        Map<String, String> customProperties = new HashMap<>();\n+        customProperties.put(\"CaseValidationError field IDs\", Arrays.toString(fieldIds.toArray()));\n+\n+        LOG.warn(\"{}: The following list of fields are in an error state: {}\", exception.getMessage(), fieldIds, exception);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29da58d8958ff0fcc61af615e67e7d076a7a981c"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg0NzI2OQ==", "bodyText": "Thanks that sounds much cleaner. Updated in next push.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/862#discussion_r402847269", "createdAt": "2020-04-03T08:47:59Z", "author": {"login": "mattnayler"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/exceptions/RestExceptionHandler.java", "diffHunk": "@@ -50,6 +60,29 @@ public RestExceptionHandler(AppInsights appInsights) {\n                 .body(error);\n     }\n \n+    @ExceptionHandler(CaseValidationException.class)\n+    @ResponseBody\n+    public ResponseEntity<HttpError> handleCaseValidationException(HttpServletRequest request, CaseValidationException exception) {\n+\n+        // read field IDs from CaseValidationException.details (i.e. avoid using full error details as this may contain user data)\n+        List<String> fieldIds = new ArrayList<>();\n+        if (exception.getDetails() != null) {\n+            String detailsJson = this.objectMapperService.convertObjectToString(exception.getDetails());\n+            fieldIds = JsonPath.read(detailsJson, \"$..field_errors[*].id\");\n+        }\n+\n+        Map<String, String> customProperties = new HashMap<>();\n+        customProperties.put(\"CaseValidationError field IDs\", Arrays.toString(fieldIds.toArray()));\n+\n+        LOG.warn(\"{}: The following list of fields are in an error state: {}\", exception.getMessage(), fieldIds, exception);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI2MDczNA=="}, "originalCommit": {"oid": "29da58d8958ff0fcc61af615e67e7d076a7a981c"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDgxMDk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/exceptions/RestExceptionHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMjoxMTo0OFrOF_oQFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODo0OToyN1rOGAL7Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI2NDA4Ng==", "bodyText": "wonder whether we can enhance CaseValidationException with a property that stores fields with validation error so that here rather than manipulating JSON we could just call: exception.getFields() and we get back a list of field ids", "url": "https://github.com/hmcts/ccd-data-store-api/pull/862#discussion_r402264086", "createdAt": "2020-04-02T12:11:48Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/exceptions/RestExceptionHandler.java", "diffHunk": "@@ -50,6 +60,29 @@ public RestExceptionHandler(AppInsights appInsights) {\n                 .body(error);\n     }\n \n+    @ExceptionHandler(CaseValidationException.class)\n+    @ResponseBody\n+    public ResponseEntity<HttpError> handleCaseValidationException(HttpServletRequest request, CaseValidationException exception) {\n+\n+        // read field IDs from CaseValidationException.details (i.e. avoid using full error details as this may contain user data)\n+        List<String> fieldIds = new ArrayList<>();\n+        if (exception.getDetails() != null) {\n+            String detailsJson = this.objectMapperService.convertObjectToString(exception.getDetails());\n+            fieldIds = JsonPath.read(detailsJson, \"$..field_errors[*].id\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29da58d8958ff0fcc61af615e67e7d076a7a981c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg0ODU3NA==", "bodyText": "Thanks, I have now refactored CaseValidationException constructor to populate both the ApiException.details property and new CaseValidationException.fields property.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/862#discussion_r402848574", "createdAt": "2020-04-03T08:49:27Z", "author": {"login": "mattnayler"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/exceptions/RestExceptionHandler.java", "diffHunk": "@@ -50,6 +60,29 @@ public RestExceptionHandler(AppInsights appInsights) {\n                 .body(error);\n     }\n \n+    @ExceptionHandler(CaseValidationException.class)\n+    @ResponseBody\n+    public ResponseEntity<HttpError> handleCaseValidationException(HttpServletRequest request, CaseValidationException exception) {\n+\n+        // read field IDs from CaseValidationException.details (i.e. avoid using full error details as this may contain user data)\n+        List<String> fieldIds = new ArrayList<>();\n+        if (exception.getDetails() != null) {\n+            String detailsJson = this.objectMapperService.convertObjectToString(exception.getDetails());\n+            fieldIds = JsonPath.read(detailsJson, \"$..field_errors[*].id\");\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI2NDA4Ng=="}, "originalCommit": {"oid": "29da58d8958ff0fcc61af615e67e7d076a7a981c"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDgxNjc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/AppInsights.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMjoxMzozM1rOF_oTxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODo1MDo1MFrOGAMARA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI2NTAzMA==", "bodyText": "mind adding a javadoc explaining the usage of custom properties", "url": "https://github.com/hmcts/ccd-data-store-api/pull/862#discussion_r402265030", "createdAt": "2020-04-02T12:13:33Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/AppInsights.java", "diffHunk": "@@ -33,6 +37,20 @@ public void trackException(Exception e) {\n         telemetry.trackException(e);\n     }\n \n+    public void trackException(Exception e, Map<String, String> customProperties, SeverityLevel severityLevel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29da58d8958ff0fcc61af615e67e7d076a7a981c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg0OTg2MA==", "bodyText": "Updated to mirror the javadoc comments used in the wrapped Microsoft components.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/862#discussion_r402849860", "createdAt": "2020-04-03T08:50:50Z", "author": {"login": "mattnayler"}, "path": "src/main/java/uk/gov/hmcts/ccd/AppInsights.java", "diffHunk": "@@ -33,6 +37,20 @@ public void trackException(Exception e) {\n         telemetry.trackException(e);\n     }\n \n+    public void trackException(Exception e, Map<String, String> customProperties, SeverityLevel severityLevel) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI2NTAzMA=="}, "originalCommit": {"oid": "29da58d8958ff0fcc61af615e67e7d076a7a981c"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTQwMjM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/exceptions/CaseValidationException.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMjo0NToyN1rOGAT3sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMjo0NToyN1rOGAT3sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk3ODczOQ==", "bodyText": "don't think this null check and empty check is really needed", "url": "https://github.com/hmcts/ccd-data-store-api/pull/862#discussion_r402978739", "createdAt": "2020-04-03T12:45:27Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/exceptions/CaseValidationException.java", "diffHunk": "@@ -2,11 +2,36 @@\n \n import org.springframework.http.HttpStatus;\n import org.springframework.web.bind.annotation.ResponseStatus;\n+import uk.gov.hmcts.ccd.domain.model.std.CaseFieldValidationError;\n+import uk.gov.hmcts.ccd.domain.model.std.CaseValidationError;\n+\n+import java.util.List;\n \n @ResponseStatus(code = HttpStatus.UNPROCESSABLE_ENTITY)\n public class CaseValidationException extends ValidationException {\n \n-    public CaseValidationException() {\n+    private final String[] fields;\n+\n+    public CaseValidationException(List<CaseFieldValidationError> fieldErrors) {\n         super(\"Case data validation failed\");\n+\n+        String[] fieldIds = new String[0];\n+\n+        if (fieldErrors != null && !fieldErrors.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11b852c7e21af1364e2f0bb73efd18d92dd17f02"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTQwNjA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/exceptions/CaseValidationException.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMjo0NjoyNlrOGAT59Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMjo0NjoyNlrOGAT59Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk3OTMxNw==", "bodyText": "I'd recommend to prefer List than Array in Java. The perf gain of using Array is almost 0 but the boilerplate in the code is much higher because working with arrays in Java is very cumbersome", "url": "https://github.com/hmcts/ccd-data-store-api/pull/862#discussion_r402979317", "createdAt": "2020-04-03T12:46:26Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/endpoint/exceptions/CaseValidationException.java", "diffHunk": "@@ -2,11 +2,36 @@\n \n import org.springframework.http.HttpStatus;\n import org.springframework.web.bind.annotation.ResponseStatus;\n+import uk.gov.hmcts.ccd.domain.model.std.CaseFieldValidationError;\n+import uk.gov.hmcts.ccd.domain.model.std.CaseValidationError;\n+\n+import java.util.List;\n \n @ResponseStatus(code = HttpStatus.UNPROCESSABLE_ENTITY)\n public class CaseValidationException extends ValidationException {\n \n-    public CaseValidationException() {\n+    private final String[] fields;\n+\n+    public CaseValidationException(List<CaseFieldValidationError> fieldErrors) {\n         super(\"Case data validation failed\");\n+\n+        String[] fieldIds = new String[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11b852c7e21af1364e2f0bb73efd18d92dd17f02"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3926, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}