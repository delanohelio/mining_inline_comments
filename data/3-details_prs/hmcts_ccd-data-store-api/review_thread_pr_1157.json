{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5Mzg2NTIz", "number": 1157, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo0NjowNVrOErgotA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOTo0MDowOFrOErh-EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDU4OTMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseStateUpdateService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo0NjowNVrOHeUL0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo0NjowNVrOHeUL0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1MDAzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class CaseStateUpdateService {\n          \n          \n            \n            public class CasePostStateService {\n          \n      \n    \n    \n  \n\nthis class is not really doing any case update itself right?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501550033", "createdAt": "2020-10-08T08:46:05Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseStateUpdateService.java", "diffHunk": "@@ -3,34 +3,43 @@\n import com.fasterxml.jackson.databind.JsonNode;\n import java.util.List;\n import java.util.Map;\n-import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n import javax.inject.Inject;\n import org.springframework.stereotype.Service;\n-import uk.gov.hmcts.ccd.domain.casestate.EnablingConditionSorter;\n+import uk.gov.hmcts.ccd.domain.enablingcondition.PrioritiseEnablingCondition;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n import uk.gov.hmcts.ccd.domain.model.definition.EventPostStateDefinition;\n \n @Service\n public class CaseStateUpdateService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3226487a3cbbe9be0c52064613c5f570db811da2"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDU5MjI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseStateUpdateService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo0Njo0OVrOHeUNlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo1Mjo1MlrOHeUciw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1MDQ4Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public String retrieveCaseState(CaseEventDefinition caseEventDefinition, CaseDetails caseDetails) {\n          \n          \n            \n                public String determineCaseState(CaseEventDefinition caseEventDefinition, CaseDetails caseDetails) {", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501550486", "createdAt": "2020-10-08T08:46:49Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseStateUpdateService.java", "diffHunk": "@@ -3,34 +3,43 @@\n import com.fasterxml.jackson.databind.JsonNode;\n import java.util.List;\n import java.util.Map;\n-import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n import javax.inject.Inject;\n import org.springframework.stereotype.Service;\n-import uk.gov.hmcts.ccd.domain.casestate.EnablingConditionSorter;\n+import uk.gov.hmcts.ccd.domain.enablingcondition.PrioritiseEnablingCondition;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n import uk.gov.hmcts.ccd.domain.model.definition.EventPostStateDefinition;\n \n @Service\n public class CaseStateUpdateService {\n \n-    private final EnablingConditionSorter enablingConditionSorter;\n-    private StateReferenceService stateReferenceService;\n+    private final PrioritiseEnablingCondition prioritiseEnablingCondition;\n+    private CasePostStateEvaluationService casePostStateEvaluationService;\n \n     @Inject\n-    public CaseStateUpdateService(EnablingConditionSorter enablingConditionSorter,\n-                                  StateReferenceService stateReferenceService) {\n-        this.enablingConditionSorter = enablingConditionSorter;\n-        this.stateReferenceService = stateReferenceService;\n+    public CaseStateUpdateService(PrioritiseEnablingCondition prioritiseEnablingCondition,\n+                                  CasePostStateEvaluationService casePostStateEvaluationService) {\n+        this.prioritiseEnablingCondition = prioritiseEnablingCondition;\n+        this.casePostStateEvaluationService = casePostStateEvaluationService;\n     }\n \n-    public Optional<String> retrieveCaseState(CaseEventDefinition caseEventDefinition, CaseDetails caseDetails) {\n-        List<EventPostStateDefinition> eventPostStateDefinitions = caseEventDefinition.getPostStates();\n-        this.enablingConditionSorter.sortEventPostStates(eventPostStateDefinitions);\n-        Map<String, JsonNode> caseEventData = caseDetails.getCaseEventData(caseEventDefinition);\n-        Optional<String> postStateReference = this.stateReferenceService\n+    public String retrieveCaseState(CaseEventDefinition caseEventDefinition, CaseDetails caseDetails) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3226487a3cbbe9be0c52064613c5f570db811da2"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1NDMxNQ==", "bodyText": "or evaluateCaseState?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501554315", "createdAt": "2020-10-08T08:52:52Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseStateUpdateService.java", "diffHunk": "@@ -3,34 +3,43 @@\n import com.fasterxml.jackson.databind.JsonNode;\n import java.util.List;\n import java.util.Map;\n-import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n import javax.inject.Inject;\n import org.springframework.stereotype.Service;\n-import uk.gov.hmcts.ccd.domain.casestate.EnablingConditionSorter;\n+import uk.gov.hmcts.ccd.domain.enablingcondition.PrioritiseEnablingCondition;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n import uk.gov.hmcts.ccd.domain.model.definition.EventPostStateDefinition;\n \n @Service\n public class CaseStateUpdateService {\n \n-    private final EnablingConditionSorter enablingConditionSorter;\n-    private StateReferenceService stateReferenceService;\n+    private final PrioritiseEnablingCondition prioritiseEnablingCondition;\n+    private CasePostStateEvaluationService casePostStateEvaluationService;\n \n     @Inject\n-    public CaseStateUpdateService(EnablingConditionSorter enablingConditionSorter,\n-                                  StateReferenceService stateReferenceService) {\n-        this.enablingConditionSorter = enablingConditionSorter;\n-        this.stateReferenceService = stateReferenceService;\n+    public CaseStateUpdateService(PrioritiseEnablingCondition prioritiseEnablingCondition,\n+                                  CasePostStateEvaluationService casePostStateEvaluationService) {\n+        this.prioritiseEnablingCondition = prioritiseEnablingCondition;\n+        this.casePostStateEvaluationService = casePostStateEvaluationService;\n     }\n \n-    public Optional<String> retrieveCaseState(CaseEventDefinition caseEventDefinition, CaseDetails caseDetails) {\n-        List<EventPostStateDefinition> eventPostStateDefinitions = caseEventDefinition.getPostStates();\n-        this.enablingConditionSorter.sortEventPostStates(eventPostStateDefinitions);\n-        Map<String, JsonNode> caseEventData = caseDetails.getCaseEventData(caseEventDefinition);\n-        Optional<String> postStateReference = this.stateReferenceService\n+    public String retrieveCaseState(CaseEventDefinition caseEventDefinition, CaseDetails caseDetails) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1MDQ4Ng=="}, "originalCommit": {"oid": "3226487a3cbbe9be0c52064613c5f570db811da2"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDYyOTczOnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/CreateCaseEventService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo1NjoxMlrOHeUlEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOTowNToxNFrOHeU8Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1NjQ5Ng==", "bodyText": "if(!shouldRemainOnCurrentState(postState)){\nwhere shouldRemainOnCurrentState(String state) is a private method containing equalsIgnoreCase(CaseStateDefinition.ANY, postState)", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501556496", "createdAt": "2020-10-08T08:56:12Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/CreateCaseEventService.java", "diffHunk": "@@ -234,9 +234,9 @@ private void mergeUpdatedFieldsToCaseDetails(final Map<String, JsonNode> data,\n     }\n \n     private void updateCaseState(CaseDetails caseDetails, CaseEventDefinition caseEventDefinition) {\n-        Optional<String> postState = caseStateUpdateService.retrieveCaseState(caseEventDefinition, caseDetails);\n-        if (postState.isPresent() && !equalsIgnoreCase(CaseStateDefinition.ANY, postState.get())) {\n-            caseDetails.setState(postState.get());\n+        String postState = caseStateUpdateService.retrieveCaseState(caseEventDefinition, caseDetails);\n+        if (!equalsIgnoreCase(CaseStateDefinition.ANY, postState)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3226487a3cbbe9be0c52064613c5f570db811da2"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU2MjQwNw==", "bodyText": "suggesting also the same refactor on CreateCaseEventService", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501562407", "createdAt": "2020-10-08T09:05:14Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/CreateCaseEventService.java", "diffHunk": "@@ -234,9 +234,9 @@ private void mergeUpdatedFieldsToCaseDetails(final Map<String, JsonNode> data,\n     }\n \n     private void updateCaseState(CaseDetails caseDetails, CaseEventDefinition caseEventDefinition) {\n-        Optional<String> postState = caseStateUpdateService.retrieveCaseState(caseEventDefinition, caseDetails);\n-        if (postState.isPresent() && !equalsIgnoreCase(CaseStateDefinition.ANY, postState.get())) {\n-            caseDetails.setState(postState.get());\n+        String postState = caseStateUpdateService.retrieveCaseState(caseEventDefinition, caseDetails);\n+        if (!equalsIgnoreCase(CaseStateDefinition.ANY, postState)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1NjQ5Ng=="}, "originalCommit": {"oid": "3226487a3cbbe9be0c52064613c5f570db811da2"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDY0MzI1OnYy", "diffSide": "LEFT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/enablingcondition/jexl/JexlEnablingConditionParser.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo1OToxM1rOHeUtAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNTo1NDo1MVrOHelWyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1ODUzMQ==", "bodyText": "are we able to support enabling condition on null fields? And on blank String fields? what is the notation that we need to use? same for both?\nfor example something like this what would match:\nclaimantIndType.claimant_title1 =\"\"", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501558531", "createdAt": "2020-10-08T08:59:13Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/enablingcondition/jexl/JexlEnablingConditionParser.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package uk.gov.hmcts.ccd.domain.casestate.jexl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3226487a3cbbe9be0c52064613c5f570db811da2"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU4NjM5MA==", "bodyText": "actually can we have a unit test for the scenarios above?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501586390", "createdAt": "2020-10-08T09:43:20Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/enablingcondition/jexl/JexlEnablingConditionParser.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package uk.gov.hmcts.ccd.domain.casestate.jexl;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1ODUzMQ=="}, "originalCommit": {"oid": "3226487a3cbbe9be0c52064613c5f570db811da2"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzMTM3MA==", "bodyText": "Null we can't check, as this is not supported in field_show_condition parsing right now... Need to change the regular expression to make it work.. it is going to cause regression on field_show_condition", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501831370", "createdAt": "2020-10-08T15:54:51Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/enablingcondition/jexl/JexlEnablingConditionParser.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package uk.gov.hmcts.ccd.domain.casestate.jexl;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1ODUzMQ=="}, "originalCommit": {"oid": "3226487a3cbbe9be0c52064613c5f570db811da2"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDcyMTgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/enablingcondition/EnablingConditionFormatter.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOToxODo0MFrOHeVdNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNTozNDoxNFrOHekdlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MDg3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public interface EnablingConditionFormatter {\n          \n          \n            \n            public interface EnablingConditionConverter {\n          \n      \n    \n    \n  \n\nalso can you add a small Javadoc explaining this is converting our internal enabling condition syntax to the Jexl one?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501570871", "createdAt": "2020-10-08T09:18:40Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/enablingcondition/EnablingConditionFormatter.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package uk.gov.hmcts.ccd.domain.casestate;\n+package uk.gov.hmcts.ccd.domain.enablingcondition;\n \n public interface EnablingConditionFormatter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3226487a3cbbe9be0c52064613c5f570db811da2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MjMwNQ==", "bodyText": "and change the method:\nString format(String enablingCondition);\nString convert(String enablingCondition);", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501572305", "createdAt": "2020-10-08T09:21:02Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/enablingcondition/EnablingConditionFormatter.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package uk.gov.hmcts.ccd.domain.casestate;\n+package uk.gov.hmcts.ccd.domain.enablingcondition;\n \n public interface EnablingConditionFormatter {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MDg3MQ=="}, "originalCommit": {"oid": "3226487a3cbbe9be0c52064613c5f570db811da2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3NDQyNA==", "bodyText": "sorry the javadoc should be on the JexlConverter subclass not on the interface. On the interface we can add a more generic description of the class withouth mentioning Jexl", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501574424", "createdAt": "2020-10-08T09:24:24Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/enablingcondition/EnablingConditionFormatter.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package uk.gov.hmcts.ccd.domain.casestate;\n+package uk.gov.hmcts.ccd.domain.enablingcondition;\n \n public interface EnablingConditionFormatter {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MDg3MQ=="}, "originalCommit": {"oid": "3226487a3cbbe9be0c52064613c5f570db811da2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgxNjcyNQ==", "bodyText": "done", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501816725", "createdAt": "2020-10-08T15:34:14Z", "author": {"login": "kiran-yenigala-hmcts"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/enablingcondition/EnablingConditionFormatter.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package uk.gov.hmcts.ccd.domain.casestate;\n+package uk.gov.hmcts.ccd.domain.enablingcondition;\n \n public interface EnablingConditionFormatter {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MDg3MQ=="}, "originalCommit": {"oid": "3226487a3cbbe9be0c52064613c5f570db811da2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDgwNzg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/uk/gov/hmcts/ccd/domain/enablingcondition/jexl/JexlEnablingConditionFormatter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOTo0MDowOFrOHeWSRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOTo0MDowOFrOHeWSRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU4NDQ1NQ==", "bodyText": "shall we rename to JexlEnablingConditionConverter ?\nand add a small Javadoc describing what the class is doing", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501584455", "createdAt": "2020-10-08T09:40:08Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/enablingcondition/jexl/JexlEnablingConditionFormatter.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package uk.gov.hmcts.ccd.domain.casestate.jexl;\n+package uk.gov.hmcts.ccd.domain.enablingcondition.jexl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3226487a3cbbe9be0c52064613c5f570db811da2"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3713, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}