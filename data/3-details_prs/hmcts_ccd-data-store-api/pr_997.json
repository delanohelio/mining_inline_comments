{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNjg4MTIz", "number": 997, "title": "RDM-8750: Introduce endpoint for updating case supplementary data", "bodyText": "JIRA link (if applicable)\nhttps://tools.hmcts.net/jira/browse/RDM-8750\nChange description\nSupplementary Data Update and Increment functionality Added\nDoes this PR introduce a breaking change? (check one with \"x\")\n[ ] Yes\n[X ] No", "createdAt": "2020-06-29T22:48:33Z", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997", "merged": true, "mergeCommit": {"oid": "e12c5c0063dbe6b9535217edce98cdd9d63ac854"}, "closed": true, "closedAt": "2020-07-09T16:31:29Z", "author": {"login": "kiran-yenigala-hmcts"}, "timelineItems": {"totalCount": 77, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABctue5HgH2gAyNDQxNjg4MTIzOmIzOTljNjA2MzZiZTVjMzc0YzczOGI1OTVhNGRlMTU2MTJlZjZlYjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczMF1NgH2gAyNDQxNjg4MTIzOjVhNGZhMDNjOWE3OTUyYWYyMGU3NDA5MjllYzQwOTdiYzc2MTdiNDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b399c60636be5c374c738b595a4de15612ef6eb5", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/b399c60636be5c374c738b595a4de15612ef6eb5", "committedDate": "2020-06-22T10:42:03Z", "message": "RDM-8750: Supplementary Data update changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "169126842169012372ce3be6ed43e824d6f7c45c", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/169126842169012372ce3be6ed43e824d6f7c45c", "committedDate": "2020-06-22T12:21:39Z", "message": "RDM-8750: Supplementary Data update changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f555d78945b3ae456a285694216bfc6bc7814ee", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/8f555d78945b3ae456a285694216bfc6bc7814ee", "committedDate": "2020-06-23T09:02:34Z", "message": "RDM-8750: Supplementary Data update changes new data mapper added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d195feb7c63b68503b6844a68eb4ae6cbac2751c", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/d195feb7c63b68503b6844a68eb4ae6cbac2751c", "committedDate": "2020-06-23T09:03:36Z", "message": "Merge remote-tracking branch 'origin/RDM-8747' into RDM-8750"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2d145b949c50b5434e66eb9de55c55efdef2b42", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/c2d145b949c50b5434e66eb9de55c55efdef2b42", "committedDate": "2020-06-25T12:21:39Z", "message": "RDM-8750: Supplementary Data update changes new data mapper added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35a3d1184f4283bde1ab67922e4d601258f783a6", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/35a3d1184f4283bde1ab67922e4d601258f783a6", "committedDate": "2020-06-29T22:41:09Z", "message": "RDM-8750: Supplementary Data Query Builders added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fd13ed8a8f8073296dbbae11cee91ceb86fab1a", "author": {"user": {"login": "kiran-yenigala-hmcts", "name": "Kiran Kumar Yenigala"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/8fd13ed8a8f8073296dbbae11cee91ceb86fab1a", "committedDate": "2020-06-29T22:49:58Z", "message": "Merge branch 'develop' into RDM-8750"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b1f491e76722711ddeb36e1ad0674b554d69d78", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/4b1f491e76722711ddeb36e1ad0674b554d69d78", "committedDate": "2020-06-29T23:37:21Z", "message": "RDM-8750: Fixed loading SupplementaryDataRepository"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NzQxNDM3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-439741437", "createdAt": "2020-06-30T07:29:23Z", "commit": {"oid": "4b1f491e76722711ddeb36e1ad0674b554d69d78"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzoyOToyM1rOGqvW3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzoyOToyM1rOGqvW3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2OTI3Nw==", "bodyText": "There is a JacksonUtils which helps to reduce code duplication.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r447469277", "createdAt": "2020-06-30T07:29:23Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/config/JacksonUtils.java", "diffHunk": "@@ -42,4 +42,9 @@ public static JsonNode convertValueJsonNode(Object from) {\n         return new TypeReference<HashMap<String, JsonNode>>() {\n         };\n     }\n+\n+    public static HashMap<String, Object> convertJsonNode(Object from) {\n+        return MAPPER.convertValue(from, new TypeReference<HashMap<String, Object>>() {\n+        });\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b1f491e76722711ddeb36e1ad0674b554d69d78"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NzYwNzQx", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-439760741", "createdAt": "2020-06-30T07:55:20Z", "commit": {"oid": "4b1f491e76722711ddeb36e1ad0674b554d69d78"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzo1NToyMFrOGqwTlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzo1ODoxMlrOGqwaZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4NDgyMA==", "bodyText": "Can queryList.size be 0 ?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r447484820", "createdAt": "2020-06-30T07:55:20Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/supplementarydata/DefaultSupplementaryDataRepository.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package uk.gov.hmcts.ccd.data.casedetails.supplementarydata;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import java.util.List;\n+import java.util.Map;\n+import javax.inject.Singleton;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.Query;\n+import javax.transaction.Transactional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.config.JacksonUtils;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryData;\n+\n+@Service\n+@Qualifier(\"default\")\n+@Singleton\n+@Transactional\n+public class DefaultSupplementaryDataRepository implements SupplementaryDataRepository {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultSupplementaryDataRepository.class);\n+\n+    @PersistenceContext\n+    private EntityManager em;\n+\n+    private List<SupplementaryDataQueryBuilder> queryBuilders;\n+\n+    @Autowired\n+    public DefaultSupplementaryDataRepository(final List<SupplementaryDataQueryBuilder> queryBuilders) {\n+        this.queryBuilders = queryBuilders;\n+    }\n+\n+    @Override\n+    public void setSupplementaryData(final String caseReference, final Map<String, Object> supplementaryData) {\n+        LOG.debug(\"Set supplementary data\");\n+        List<Query> queryList = getQueryBuilder(Operation.SET).buildQueries(em, caseReference, supplementaryData);\n+        queryList.stream().forEach(query -> query.executeUpdate());\n+    }\n+\n+    @Override\n+    public void incrementSupplementaryData(final String caseReference, final Map<String, Object> supplementaryData) {\n+        LOG.debug(\"Insert supplementary data\");\n+        List<Query> queryList = getQueryBuilder(Operation.INC).buildQueries(em, caseReference, supplementaryData);\n+        queryList.stream().forEach(query -> query.executeUpdate());\n+    }\n+\n+    @Override\n+    public SupplementaryData findSupplementaryData(final String caseReference) {\n+        LOG.debug(\"Find supplementary data\");\n+        List<Query> queryList = getQueryBuilder(Operation.FIND).buildQueries(em, caseReference, null);\n+        JsonNode result = (JsonNode) queryList.get(0).getSingleResult();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b1f491e76722711ddeb36e1ad0674b554d69d78"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4NjU2Nw==", "bodyText": "Can we LOG the error ? It will be easier for tracking.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r447486567", "createdAt": "2020-06-30T07:58:12Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/supplementarydata/SupplementaryDataQueryBuilder.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package uk.gov.hmcts.ccd.data.casedetails.supplementarydata;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.vladmihalcea.hibernate.type.json.JsonNodeBinaryType;\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n+import java.util.List;\n+import java.util.Map;\n+import javax.persistence.EntityManager;\n+import javax.persistence.Query;\n+import org.hibernate.query.NativeQuery;\n+\n+public interface SupplementaryDataQueryBuilder {\n+\n+    ObjectMapper mapper = new ObjectMapper();\n+\n+    SupplementaryDataProcessor dataProcessor = new SupplementaryDataProcessor();\n+\n+    List<Query> buildQueries(EntityManager entityManager, String caseReference, Map<String, Object> requestData);\n+\n+    Operation operationType();\n+\n+    default String requestJson(Object supplementaryData) {\n+        try {\n+            return mapper.writeValueAsString(supplementaryData);\n+        } catch (JsonProcessingException e) {\n+            return \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b1f491e76722711ddeb36e1ad0674b554d69d78"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NzY0NTEz", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-439764513", "createdAt": "2020-06-30T08:00:04Z", "commit": {"oid": "4b1f491e76722711ddeb36e1ad0674b554d69d78"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODowMDowNFrOGqwfVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODowMDowNFrOGqwfVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4NzgzMQ==", "bodyText": "No required ., but may be we can use Optinal to be null safe .", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r447487831", "createdAt": "2020-06-30T08:00:04Z", "author": {"login": "Thor-tech-of-metal"}, "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/supplementarydata/SupplementaryDataProcessor.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package uk.gov.hmcts.ccd.data.casedetails.supplementarydata;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+\n+public class SupplementaryDataProcessor {\n+\n+    private final ObjectMapper objectMapper = new ObjectMapper();\n+\n+    public Map<String, Object> accessLeafNodes(Map<String, Object> supplementaryData) {\n+        Map<String, Object> leafNodePathsAndValues = new HashMap<>();\n+        if (supplementaryData != null && supplementaryData.size() > 0) {\n+            JsonNode root = objectMapper.valueToTree(supplementaryData);\n+            processNode(root, new StringBuilder(\"\"), leafNodePathsAndValues);\n+        }\n+        return leafNodePathsAndValues;\n+    }\n+\n+    private Object getValue(JsonNode jsonNode) {\n+        if (jsonNode.isValueNode()) {\n+            if (jsonNode.isInt()) {\n+                return jsonNode.intValue();\n+            } else if (jsonNode.isBoolean()) {\n+                return jsonNode.booleanValue();\n+            } else {\n+                return jsonNode.textValue();\n+            }\n+        }\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b1f491e76722711ddeb36e1ad0674b554d69d78"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6b024f1b1f1a12e0a0c92f0d4aeeb5506688855", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e6b024f1b1f1a12e0a0c92f0d4aeeb5506688855", "committedDate": "2020-06-30T08:27:19Z", "message": "RDM-8750: Fixed smoke test failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc08a7e8b49734e77159b53f6754da2ed87f907c", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/bc08a7e8b49734e77159b53f6754da2ed87f907c", "committedDate": "2020-06-30T08:56:48Z", "message": "Merge remote-tracking branch 'origin/RDM-8747' into RDM-8750"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a0bb8806f8c7211a95686337db6844bb466fea0", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/4a0bb8806f8c7211a95686337db6844bb466fea0", "committedDate": "2020-06-30T08:58:55Z", "message": "RDM-8750: Revert changes after RDM-8474 is merged"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMDcxNzM0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440071734", "createdAt": "2020-06-30T14:26:44Z", "commit": {"oid": "4a0bb8806f8c7211a95686337db6844bb466fea0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDoyNjo0NFrOGq_COg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDoyNjo0NFrOGq_COg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcyNjEzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class SupplementaryDataRequest {\n          \n          \n            \n            public class SupplementaryDataUpdateRequest {", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r447726138", "createdAt": "2020-06-30T14:26:44Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/std/SupplementaryDataRequest.java", "diffHunk": "@@ -0,0 +1,16 @@\n+package uk.gov.hmcts.ccd.domain.model.std;\n+\n+import java.util.Map;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.ToString;\n+\n+@ToString\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Getter\n+public class SupplementaryDataRequest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a0bb8806f8c7211a95686337db6844bb466fea0"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMDczNTY1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440073565", "createdAt": "2020-06-30T14:28:30Z", "commit": {"oid": "4a0bb8806f8c7211a95686337db6844bb466fea0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDoyODozMFrOGq_HeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDoyODozMFrOGq_HeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcyNzQ4MQ==", "bodyText": "we no longer need to do HATEOAS so in theory we could remove this", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r447727481", "createdAt": "2020-06-30T14:28:30Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/resource/SupplementaryDataResource.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package uk.gov.hmcts.ccd.v2.external.resource;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.Data;\n+import lombok.EqualsAndHashCode;\n+import lombok.NoArgsConstructor;\n+import org.springframework.hateoas.RepresentationModel;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryData;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryDataRequest;\n+import uk.gov.hmcts.ccd.v2.external.controller.CaseController;\n+\n+import static org.springframework.hateoas.server.mvc.WebMvcLinkBuilder.linkTo;\n+import static org.springframework.hateoas.server.mvc.WebMvcLinkBuilder.methodOn;\n+\n+@Data\n+@EqualsAndHashCode(callSuper = true)\n+@NoArgsConstructor\n+public class SupplementaryDataResource extends RepresentationModel<RepresentationModel<?>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a0bb8806f8c7211a95686337db6844bb466fea0"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMDc4MjM1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440078235", "createdAt": "2020-06-30T14:32:56Z", "commit": {"oid": "4a0bb8806f8c7211a95686337db6844bb466fea0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDozMjo1NlrOGq_Vww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDozMjo1NlrOGq_Vww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczMTEzOQ==", "bodyText": "for performance reasons it would be better to check first if user has explicit access, and only if yes retrieve the case", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r447731139", "createdAt": "2020-06-30T14:32:56Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/supplementarydata/AuthorisedSupplementaryDataOperation.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package uk.gov.hmcts.ccd.domain.service.supplementarydata;\n+\n+import java.util.Optional;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.CachedCaseDetailsRepository;\n+import uk.gov.hmcts.ccd.data.casedetails.CaseDetailsRepository;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryData;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryDataRequest;\n+import uk.gov.hmcts.ccd.domain.service.getcase.CaseNotFoundException;\n+import uk.gov.hmcts.ccd.domain.service.supplementarydata.rolevalidator.UserRoleValidator;\n+import uk.gov.hmcts.ccd.endpoint.exceptions.CaseRoleAccessException;\n+import uk.gov.hmcts.ccd.v2.V2;\n+\n+@Service\n+@Qualifier(\"authorised\")\n+public class AuthorisedSupplementaryDataOperation implements SupplementaryDataOperation {\n+\n+    private SupplementaryDataOperation supplementaryDataOperation;\n+\n+    private UserRoleValidator roleValidator;\n+\n+    private final CaseDetailsRepository caseDetailsRepository;\n+\n+    @Autowired\n+    public AuthorisedSupplementaryDataOperation(final @Qualifier(\"default\") SupplementaryDataOperation supplementaryDataOperation,\n+                                                final @Qualifier(CachedCaseDetailsRepository.QUALIFIER) CaseDetailsRepository caseDetailsRepository,\n+                                                final @Qualifier(\"default\") UserRoleValidator roleValidator) {\n+        this.supplementaryDataOperation = supplementaryDataOperation;\n+        this.roleValidator = roleValidator;\n+        this.caseDetailsRepository = caseDetailsRepository;\n+    }\n+\n+    @Override\n+    public SupplementaryData updateSupplementaryData(String caseReference, SupplementaryDataRequest supplementaryData) {\n+        Optional<CaseDetails> caseDetails = this.caseDetailsRepository.findByReference(caseReference);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a0bb8806f8c7211a95686337db6844bb466fea0"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMDkyMjMx", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440092231", "createdAt": "2020-06-30T14:46:33Z", "commit": {"oid": "4a0bb8806f8c7211a95686337db6844bb466fea0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0NjozM1rOGq__Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0NjozM1rOGq__Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc0MTc5OA==", "bodyText": "for future reusability, I think it's better if we delegate this check to the CaseAccessService by introducing a dedicated method isJurisdictionAccessAllowed that can be reused by future endpoints with the same requirement. Therefore:\nreturn canAccess || this.caseAccessService.isJurisdictionAccessAllowed()", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r447741798", "createdAt": "2020-06-30T14:46:33Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/supplementarydata/rolevalidator/DefaultUserRoleValidator.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package uk.gov.hmcts.ccd.domain.service.supplementarydata.rolevalidator;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.IdamJurisdictionsResolver;\n+import uk.gov.hmcts.ccd.data.user.JurisdictionsResolver;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n+import uk.gov.hmcts.ccd.domain.service.common.CaseAccessService;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class DefaultUserRoleValidator implements UserRoleValidator {\n+\n+    private static final String ROLE_CASE_WORKER_CAA = \"caseworker-caa\";\n+\n+    private final UserRepository userRepository;\n+    private final JurisdictionsResolver jurisdictionsResolver;\n+    private final CaseAccessService caseAccessService;\n+\n+    @Autowired\n+    public DefaultUserRoleValidator(final @Qualifier(CachedUserRepository.QUALIFIER) UserRepository userRepository,\n+                                    final @Qualifier(IdamJurisdictionsResolver.QUALIFIER) JurisdictionsResolver jurisdictionsResolver,\n+                                    final CaseAccessService caseAccessService) {\n+        this.userRepository = userRepository;\n+        this.jurisdictionsResolver = jurisdictionsResolver;\n+        this.caseAccessService = caseAccessService;\n+    }\n+\n+    @Override\n+    public boolean canUpdateSupplementaryData(CaseDetails caseDetails) {\n+        boolean canAccess = this.userRepository.getUserRoles().contains(ROLE_CASE_WORKER_CAA);\n+\n+        canAccess = canAccess || this.caseAccessService.canUserAccess(caseDetails);\n+\n+        return canAccess || this.jurisdictionsResolver\n+            .getJurisdictions()\n+            .stream()\n+            .anyMatch(caseDetails.getJurisdiction()::equalsIgnoreCase);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a0bb8806f8c7211a95686337db6844bb466fea0"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMDk1MDM3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440095037", "createdAt": "2020-06-30T14:49:17Z", "commit": {"oid": "4a0bb8806f8c7211a95686337db6844bb466fea0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0OToxOFrOGrAHjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0OToxOFrOGrAHjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc0Mzg4NQ==", "bodyText": "minor: I'd suggest using a more standard if else if construct. A bit simpler to follow", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r447743885", "createdAt": "2020-06-30T14:49:18Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/supplementarydata/rolevalidator/DefaultUserRoleValidator.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package uk.gov.hmcts.ccd.domain.service.supplementarydata.rolevalidator;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.IdamJurisdictionsResolver;\n+import uk.gov.hmcts.ccd.data.user.JurisdictionsResolver;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n+import uk.gov.hmcts.ccd.domain.service.common.CaseAccessService;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class DefaultUserRoleValidator implements UserRoleValidator {\n+\n+    private static final String ROLE_CASE_WORKER_CAA = \"caseworker-caa\";\n+\n+    private final UserRepository userRepository;\n+    private final JurisdictionsResolver jurisdictionsResolver;\n+    private final CaseAccessService caseAccessService;\n+\n+    @Autowired\n+    public DefaultUserRoleValidator(final @Qualifier(CachedUserRepository.QUALIFIER) UserRepository userRepository,\n+                                    final @Qualifier(IdamJurisdictionsResolver.QUALIFIER) JurisdictionsResolver jurisdictionsResolver,\n+                                    final CaseAccessService caseAccessService) {\n+        this.userRepository = userRepository;\n+        this.jurisdictionsResolver = jurisdictionsResolver;\n+        this.caseAccessService = caseAccessService;\n+    }\n+\n+    @Override\n+    public boolean canUpdateSupplementaryData(CaseDetails caseDetails) {\n+        boolean canAccess = this.userRepository.getUserRoles().contains(ROLE_CASE_WORKER_CAA);\n+\n+        canAccess = canAccess || this.caseAccessService.canUserAccess(caseDetails);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a0bb8806f8c7211a95686337db6844bb466fea0"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/22590b9d89b98f10f63f1662f913e125c61e19f4", "committedDate": "2020-06-30T20:44:05Z", "message": "RDM-8750: Code Review Comments addressed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjUwMDkz", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440650093", "createdAt": "2020-07-01T08:21:24Z", "commit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODoyMToyNFrOGrb27Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODoyMToyNFrOGrb27Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE5ODM4MQ==", "bodyText": "this class could be renamed to be more generic so we can reuse it for other endpoints with similar access requirements. We could call it for example EndpointAuthorisationService with a method isAccessAllowed. Or something similar", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r448198381", "createdAt": "2020-07-01T08:21:24Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/supplementarydata/rolevalidator/DefaultUserRoleValidator.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package uk.gov.hmcts.ccd.domain.service.supplementarydata.rolevalidator;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n+import uk.gov.hmcts.ccd.domain.service.common.CaseAccessService;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class DefaultUserRoleValidator implements UserRoleValidator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjUwNzc2", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440650776", "createdAt": "2020-07-01T08:22:17Z", "commit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODoyMjoxN1rOGrb4-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODoyMjoxN1rOGrb4-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE5ODkwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public boolean canUpdateSupplementaryData(CaseDetails caseDetails) {\n          \n          \n            \n                public boolean isAccessAllowed(CaseDetails caseDetails) {", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r448198904", "createdAt": "2020-07-01T08:22:17Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/supplementarydata/rolevalidator/DefaultUserRoleValidator.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package uk.gov.hmcts.ccd.domain.service.supplementarydata.rolevalidator;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.user.CachedUserRepository;\n+import uk.gov.hmcts.ccd.data.user.UserRepository;\n+import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n+import uk.gov.hmcts.ccd.domain.service.common.CaseAccessService;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class DefaultUserRoleValidator implements UserRoleValidator {\n+\n+    private static final String ROLE_CASE_WORKER_CAA = \"caseworker-caa\";\n+\n+    private final UserRepository userRepository;\n+    private final CaseAccessService caseAccessService;\n+\n+    @Autowired\n+    public DefaultUserRoleValidator(final @Qualifier(CachedUserRepository.QUALIFIER) UserRepository userRepository,\n+                                    final CaseAccessService caseAccessService) {\n+        this.userRepository = userRepository;\n+        this.caseAccessService = caseAccessService;\n+    }\n+\n+    @Override\n+    public boolean canUpdateSupplementaryData(CaseDetails caseDetails) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjU1MDQw", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440655040", "createdAt": "2020-07-01T08:27:28Z", "commit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODoyNzoyOVrOGrcFzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODoyNzoyOVrOGrcFzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIwMjE5MQ==", "bodyText": "we could make things a bit more flexible by having this class store a map of functions, with the map key being the operation identifier, e.g. $inc.\nWe could then loop through the supplementaryData keys and get and execute the corresponding function", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r448202191", "createdAt": "2020-07-01T08:27:29Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/supplementarydata/DefaultSupplementaryDataOperation.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package uk.gov.hmcts.ccd.domain.service.supplementarydata;\n+\n+import java.util.Map;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.supplementarydata.Operation;\n+import uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataRepository;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryData;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryDataUpdateRequest;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class DefaultSupplementaryDataOperation implements SupplementaryDataOperation {\n+\n+    private final SupplementaryDataRepository supplementaryDataRepository;\n+\n+    @Autowired\n+    public DefaultSupplementaryDataOperation(final @Qualifier(\"default\") SupplementaryDataRepository supplementaryDataRepository) {\n+        this.supplementaryDataRepository = supplementaryDataRepository;\n+    }\n+\n+    @Override\n+    public SupplementaryData updateSupplementaryData(String caseReference, SupplementaryDataUpdateRequest supplementaryData) {\n+        incrementData(caseReference, supplementaryData);\n+        setData(caseReference, supplementaryData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjYwNTc5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440660579", "createdAt": "2020-07-01T08:34:47Z", "commit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODozNDo0N1rOGrcXBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODozNDo0N1rOGrcXBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIwNjU5Ng==", "bodyText": "supplementaryData.getRequestData().get --> can we provide on supplementaryData itself a method like Optional<> getOperation(Operation.INC) and move this logic there? it would reduce duplication", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r448206596", "createdAt": "2020-07-01T08:34:47Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/supplementarydata/DefaultSupplementaryDataOperation.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package uk.gov.hmcts.ccd.domain.service.supplementarydata;\n+\n+import java.util.Map;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.supplementarydata.Operation;\n+import uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataRepository;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryData;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryDataUpdateRequest;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class DefaultSupplementaryDataOperation implements SupplementaryDataOperation {\n+\n+    private final SupplementaryDataRepository supplementaryDataRepository;\n+\n+    @Autowired\n+    public DefaultSupplementaryDataOperation(final @Qualifier(\"default\") SupplementaryDataRepository supplementaryDataRepository) {\n+        this.supplementaryDataRepository = supplementaryDataRepository;\n+    }\n+\n+    @Override\n+    public SupplementaryData updateSupplementaryData(String caseReference, SupplementaryDataUpdateRequest supplementaryData) {\n+        incrementData(caseReference, supplementaryData);\n+        setData(caseReference, supplementaryData);\n+        return this.supplementaryDataRepository.findSupplementaryData(caseReference);\n+    }\n+\n+    private void incrementData(String caseReference, SupplementaryDataUpdateRequest supplementaryData) {\n+        Map<String, Object> incrementRequest = supplementaryData.getRequestData().get(Operation.INC.getOperationName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjY3NzE5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440667719", "createdAt": "2020-07-01T08:44:27Z", "commit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODo0NDoyN1rOGrcr6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODo0NDoyN1rOGrcr6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIxMTk0Nw==", "bodyText": "are we returning the whole supplementary data here? we should return only the updated properties", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r448211947", "createdAt": "2020-07-01T08:44:27Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/supplementarydata/DefaultSupplementaryDataOperation.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package uk.gov.hmcts.ccd.domain.service.supplementarydata;\n+\n+import java.util.Map;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.supplementarydata.Operation;\n+import uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataRepository;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryData;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryDataUpdateRequest;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class DefaultSupplementaryDataOperation implements SupplementaryDataOperation {\n+\n+    private final SupplementaryDataRepository supplementaryDataRepository;\n+\n+    @Autowired\n+    public DefaultSupplementaryDataOperation(final @Qualifier(\"default\") SupplementaryDataRepository supplementaryDataRepository) {\n+        this.supplementaryDataRepository = supplementaryDataRepository;\n+    }\n+\n+    @Override\n+    public SupplementaryData updateSupplementaryData(String caseReference, SupplementaryDataUpdateRequest supplementaryData) {\n+        incrementData(caseReference, supplementaryData);\n+        setData(caseReference, supplementaryData);\n+        return this.supplementaryDataRepository.findSupplementaryData(caseReference);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzA1MzUx", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440705351", "createdAt": "2020-07-01T09:34:03Z", "commit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTozNDowNFrOGrealw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTozNDowNFrOGrealw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI0MDI3OQ==", "bodyText": "mmm we use a query builder in setSupplementaryData and incrementSupplementaryData. Are increment and set operations a query? strictly speaking they are updates so I find it slightly confusing. I would leave the query builder only for the find operations.", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r448240279", "createdAt": "2020-07-01T09:34:04Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/supplementarydata/DefaultSupplementaryDataRepository.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package uk.gov.hmcts.ccd.data.casedetails.supplementarydata;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import java.util.List;\n+import java.util.Map;\n+import javax.inject.Singleton;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.Query;\n+import javax.transaction.Transactional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.config.JacksonUtils;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryData;\n+\n+@Service\n+@Qualifier(\"default\")\n+@Singleton\n+@Transactional\n+public class DefaultSupplementaryDataRepository implements SupplementaryDataRepository {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultSupplementaryDataRepository.class);\n+\n+    @PersistenceContext\n+    private EntityManager em;\n+\n+    private List<SupplementaryDataQueryBuilder> queryBuilders;\n+\n+    @Autowired\n+    public DefaultSupplementaryDataRepository(final List<SupplementaryDataQueryBuilder> queryBuilders) {\n+        this.queryBuilders = queryBuilders;\n+    }\n+\n+    @Override\n+    public void setSupplementaryData(final String caseReference, final Map<String, Object> supplementaryData) {\n+        LOG.debug(\"Set supplementary data\");\n+        List<Query> queryList = getQueryBuilder(Operation.SET).buildQueries(em, caseReference, supplementaryData);\n+        queryList.stream().forEach(query -> query.executeUpdate());\n+    }\n+\n+    @Override\n+    public void incrementSupplementaryData(final String caseReference, final Map<String, Object> supplementaryData) {\n+        LOG.debug(\"Insert supplementary data\");\n+        List<Query> queryList = getQueryBuilder(Operation.INC).buildQueries(em, caseReference, supplementaryData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzQzNTE1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440743515", "createdAt": "2020-07-01T10:25:39Z", "commit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDoyNTo0MFrOGrgIHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDoyNTo0MFrOGrgIHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI2ODMxOQ==", "bodyText": "what if we moved this method inside the SupplementaryDataRequest itself? the idea being the SupplementaryDataRequest encapsulates the requested data, and provides utility methods to access it. For example to retrieve the leaf node and much more. And we pass the request down rather than a simple Map", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r448268319", "createdAt": "2020-07-01T10:25:40Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/supplementarydata/IncrementSupplementaryDataQueryBuilder.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package uk.gov.hmcts.ccd.data.casedetails.supplementarydata;\n+\n+import java.util.Arrays;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import javax.persistence.EntityManager;\n+import javax.persistence.Query;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Qualifier(\"increment\")\n+public class IncrementSupplementaryDataQueryBuilder implements SupplementaryDataQueryBuilder {\n+\n+    private static final String INC_UPDATE_QUERY = \"UPDATE case_data SET \"\n+        + \"supplementary_data= (CASE\"\n+        + \"        WHEN COALESCE(supplementary_data, '{}') = '{}' \"\n+        + \"        THEN COALESCE(supplementary_data, '{}') || :json_value\\\\:\\\\:jsonb\"\n+        + \"        WHEN jsonb_extract_path_text(COALESCE(supplementary_data, '{}'), :node_path) IS NULL \"\n+        + \"        THEN jsonb_set(COALESCE(supplementary_data, '{}'), :leaf_node_key, :value\\\\:\\\\:TEXT\\\\:\\\\:jsonb)\"\n+        + \"        WHEN jsonb_extract_path_text(COALESCE(supplementary_data, '{}'), :node_path) IS NOT NULL\"\n+        + \"        THEN jsonb_set(COALESCE(supplementary_data, '{}'), :leaf_node_key,\"\n+        + \"             GREATEST((jsonb_extract_path_text(supplementary_data, :node_path)\\\\:\\\\:INT + :value), 0) \\\\:\\\\:TEXT\\\\:\\\\:jsonb, false)\"\n+        + \"    END), \"\n+        + \"supplementary_data_last_modified = :current_time \"\n+        + \"WHERE reference = :reference\";\n+\n+    @Override\n+    public List<Query> buildQueries(EntityManager entityManager, String caseReference, Map<String, Object> requestData) {\n+        Map<String, Object> leafNodes = dataProcessor.accessLeafNodes(requestData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzU0NDk3", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440754497", "createdAt": "2020-07-01T10:42:38Z", "commit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo0MjozOFrOGrgobQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo0MjozOFrOGrgobQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI3NjU4OQ==", "bodyText": "we could add a constructor in SupplementaryData that gets a JsonNode and does the conversion", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r448276589", "createdAt": "2020-07-01T10:42:38Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/supplementarydata/DefaultSupplementaryDataRepository.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package uk.gov.hmcts.ccd.data.casedetails.supplementarydata;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import java.util.List;\n+import java.util.Map;\n+import javax.inject.Singleton;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.Query;\n+import javax.transaction.Transactional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.config.JacksonUtils;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryData;\n+\n+@Service\n+@Qualifier(\"default\")\n+@Singleton\n+@Transactional\n+public class DefaultSupplementaryDataRepository implements SupplementaryDataRepository {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultSupplementaryDataRepository.class);\n+\n+    @PersistenceContext\n+    private EntityManager em;\n+\n+    private List<SupplementaryDataQueryBuilder> queryBuilders;\n+\n+    @Autowired\n+    public DefaultSupplementaryDataRepository(final List<SupplementaryDataQueryBuilder> queryBuilders) {\n+        this.queryBuilders = queryBuilders;\n+    }\n+\n+    @Override\n+    public void setSupplementaryData(final String caseReference, final Map<String, Object> supplementaryData) {\n+        LOG.debug(\"Set supplementary data\");\n+        List<Query> queryList = getQueryBuilder(Operation.SET).buildQueries(em, caseReference, supplementaryData);\n+        queryList.stream().forEach(query -> query.executeUpdate());\n+    }\n+\n+    @Override\n+    public void incrementSupplementaryData(final String caseReference, final Map<String, Object> supplementaryData) {\n+        LOG.debug(\"Insert supplementary data\");\n+        List<Query> queryList = getQueryBuilder(Operation.INC).buildQueries(em, caseReference, supplementaryData);\n+        queryList.stream().forEach(query -> query.executeUpdate());\n+    }\n+\n+    @Override\n+    public SupplementaryData findSupplementaryData(final String caseReference) {\n+        LOG.debug(\"Find supplementary data\");\n+        List<Query> queryList = getQueryBuilder(Operation.FIND).buildQueries(em, caseReference, null);\n+        JsonNode result = (JsonNode) queryList.get(0).getSingleResult();\n+        return new SupplementaryData(JacksonUtils.convertJsonNode(result));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzU1NDY0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440755464", "createdAt": "2020-07-01T10:44:02Z", "commit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo0NDowM1rOGrgrUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo0NDowM1rOGrgrUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI3NzMyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<Query> queryList = getQueryBuilder(Operation.SET).buildQueries(em, caseReference, supplementaryData);\n          \n          \n            \n                    List<Query> queryList = getQueryBuilder(Operation.SET).buildQueryForEachSupplementaryDataProperty(em, caseReference, supplementaryData);", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r448277329", "createdAt": "2020-07-01T10:44:03Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/supplementarydata/DefaultSupplementaryDataRepository.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package uk.gov.hmcts.ccd.data.casedetails.supplementarydata;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import java.util.List;\n+import java.util.Map;\n+import javax.inject.Singleton;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.Query;\n+import javax.transaction.Transactional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.config.JacksonUtils;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryData;\n+\n+@Service\n+@Qualifier(\"default\")\n+@Singleton\n+@Transactional\n+public class DefaultSupplementaryDataRepository implements SupplementaryDataRepository {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultSupplementaryDataRepository.class);\n+\n+    @PersistenceContext\n+    private EntityManager em;\n+\n+    private List<SupplementaryDataQueryBuilder> queryBuilders;\n+\n+    @Autowired\n+    public DefaultSupplementaryDataRepository(final List<SupplementaryDataQueryBuilder> queryBuilders) {\n+        this.queryBuilders = queryBuilders;\n+    }\n+\n+    @Override\n+    public void setSupplementaryData(final String caseReference, final Map<String, Object> supplementaryData) {\n+        LOG.debug(\"Set supplementary data\");\n+        List<Query> queryList = getQueryBuilder(Operation.SET).buildQueries(em, caseReference, supplementaryData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzU3MjMy", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440757232", "createdAt": "2020-07-01T10:46:56Z", "commit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo0Njo1N1rOGrgw0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo0Njo1N1rOGrgw0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI3ODczNg==", "bodyText": "I think this could be a .toJson() method on the SupplementaryDataRequest", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r448278736", "createdAt": "2020-07-01T10:46:57Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/supplementarydata/SupplementaryDataQueryBuilder.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package uk.gov.hmcts.ccd.data.casedetails.supplementarydata;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.vladmihalcea.hibernate.type.json.JsonNodeBinaryType;\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n+import java.util.List;\n+import java.util.Map;\n+import javax.persistence.EntityManager;\n+import javax.persistence.Query;\n+import org.hibernate.query.NativeQuery;\n+\n+public interface SupplementaryDataQueryBuilder {\n+\n+    ObjectMapper mapper = new ObjectMapper();\n+\n+    SupplementaryDataProcessor dataProcessor = new SupplementaryDataProcessor();\n+\n+    List<Query> buildQueries(EntityManager entityManager, String caseReference, Map<String, Object> requestData);\n+\n+    Operation operationType();\n+\n+    default String requestJson(Object supplementaryData) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzYyMzEz", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440762313", "createdAt": "2020-07-01T10:54:49Z", "commit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo1NDo1MFrOGrg_4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo1NDo1MFrOGrg_4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI4MjU5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public enum Operation {\n          \n          \n            \n            public enum SupplementaryDataOperation {", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r448282595", "createdAt": "2020-07-01T10:54:50Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/supplementarydata/Operation.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package uk.gov.hmcts.ccd.data.casedetails.supplementarydata;\n+\n+public enum Operation {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzk1MTU0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440795154", "createdAt": "2020-07-01T11:47:10Z", "commit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMTo0NzoxMVrOGriiTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMTo0NzoxMVrOGriiTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMwNzc4OQ==", "bodyText": "suggestion: can we use a less generic name? like getProperties or sim?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r448307789", "createdAt": "2020-07-01T11:47:11Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/supplementarydata/SupplementaryDataProcessor.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package uk.gov.hmcts.ccd.data.casedetails.supplementarydata;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+\n+public class SupplementaryDataProcessor {\n+\n+    private final ObjectMapper objectMapper = new ObjectMapper();\n+\n+    public Map<String, Object> accessLeafNodes(Map<String, Object> supplementaryData) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzk4NDE4", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-440798418", "createdAt": "2020-07-01T11:52:10Z", "commit": {"oid": "22590b9d89b98f10f63f1662f913e125c61e19f4"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0214b70bc0be93ba7447f3a952aa6b3c03d04698", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/0214b70bc0be93ba7447f3a952aa6b3c03d04698", "committedDate": "2020-07-01T23:58:00Z", "message": "RDM-8750: Code Review Comments addressed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3babc91ce8da0849f3346653646e457adff5e4e9", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/3babc91ce8da0849f3346653646e457adff5e4e9", "committedDate": "2020-07-02T00:27:16Z", "message": "RDM-8750: Test coverage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTYwNTA5", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-441560509", "createdAt": "2020-07-02T10:43:06Z", "commit": {"oid": "3babc91ce8da0849f3346653646e457adff5e4e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMDo0MzowNlrOGsHdTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMDo0MzowNlrOGsHdTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkxMjcxOA==", "bodyText": "is it possible to provide an example of the request in Swagger?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r448912718", "createdAt": "2020-07-02T10:43:06Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/external/controller/CaseController.java", "diffHunk": "@@ -267,4 +281,54 @@ public CaseController(\n \n         return ResponseEntity.ok(new CaseEventsResource(caseId, auditEvents));\n     }\n+\n+\n+    @Transactional\n+    @PostMapping(\n+        path = \"/cases/{caseId}/supplementary-data\"\n+    )\n+    @ApiOperation(\n+        value = \"Update Case Supplementary Data\"\n+    )\n+    @ApiResponses({\n+        @ApiResponse(\n+            code = 200,\n+            message = \"Updated\",\n+            response = SupplementaryDataResource.class\n+        ),\n+        @ApiResponse(\n+            code = 400,\n+            message = V2.Error.CASE_ID_INVALID\n+        ),\n+        @ApiResponse(\n+            code = 400,\n+            message = V2.Error.SUPPLEMENTARY_DATA_INVALID\n+        ),\n+        @ApiResponse(\n+            code = 404,\n+            message = V2.Error.CASE_NOT_FOUND\n+        ),\n+        @ApiResponse(\n+            code = 403,\n+            message = V2.Error.NOT_AUTHORISED_UPDATE_SUPPLEMENTARY_DATA\n+        )\n+    })\n+    public ResponseEntity<SupplementaryDataResource> updateCaseSupplementaryData(@PathVariable(\"caseId\") String caseId,\n+                                                                                 @RequestBody final SupplementaryDataUpdateRequest supplementaryData) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3babc91ce8da0849f3346653646e457adff5e4e9"}, "originalPosition": 111}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9107a6e893b91269d33f4d1d56ac82b497930496", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/9107a6e893b91269d33f4d1d56ac82b497930496", "committedDate": "2020-07-02T22:11:19Z", "message": "RDM-8750: Code Review Comments Addressed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "313c8f038470695d1d77f64563de3c5227a4c75c", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/313c8f038470695d1d77f64563de3c5227a4c75c", "committedDate": "2020-07-03T00:45:43Z", "message": "RDM-8750: Code Review Comments Addressed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8b7b89762b543a4bd5a58681963fecbe6a713d2", "author": {"user": {"login": "mario-paniccia", "name": "Mario Paniccia"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/b8b7b89762b543a4bd5a58681963fecbe6a713d2", "committedDate": "2020-07-03T09:45:21Z", "message": "refactor 'canUserAccess' method to improve code readability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa739adae283b8265c3a27b3ee6c3278629bd377", "author": {"user": {"login": "mario-paniccia", "name": "Mario Paniccia"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/fa739adae283b8265c3a27b3ee6c3278629bd377", "committedDate": "2020-07-03T11:05:24Z", "message": "updated access control rules for the EndpointAuthorisationService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c793bf76f6c46aa605c860d21c9add09ef027f21", "author": {"user": {"login": "mario-paniccia", "name": "Mario Paniccia"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/c793bf76f6c46aa605c860d21c9add09ef027f21", "committedDate": "2020-07-03T11:10:44Z", "message": "updated access control rules for the EndpointAuthorisationService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f69551f5a2f833764f05e603a91671bb7049a9a5", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/f69551f5a2f833764f05e603a91671bb7049a9a5", "committedDate": "2020-07-03T11:44:34Z", "message": "RDM-8750: Fixed Failure test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2a208e797108ccc923b43f731c2d862ddaeb79e", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/b2a208e797108ccc923b43f731c2d862ddaeb79e", "committedDate": "2020-07-03T11:44:45Z", "message": "Merge remote-tracking branch 'origin/RDM-8750' into RDM-8750"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8e0361d78e36bfa05a7c206d5d24c24ed2b4de9", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/d8e0361d78e36bfa05a7c206d5d24c24ed2b4de9", "committedDate": "2020-07-04T22:05:28Z", "message": "RDM-8750: Addressed code review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fe5d363ae587b40bd5ce76b612e1a4a9d2fa3b9", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/6fe5d363ae587b40bd5ce76b612e1a4a9d2fa3b9", "committedDate": "2020-07-06T00:55:36Z", "message": "RDM-8750: CVE-2020-11996 issue, tomcat version upgraded"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/342f1d30039a1e8676a7e96edca5707135484226", "committedDate": "2020-07-06T09:48:04Z", "message": "RDM-8750: SupplementaryDataUpdateRequestValidator introduced"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyOTQ5OTUy", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-442949952", "createdAt": "2020-07-06T10:15:48Z", "commit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMDoxNTo0OFrOGtRZTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMDoxNTo0OFrOGtRZTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDEyNDEwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Query query = queryBuilder(SupplementaryDataOperation.SET).buildQueryForEachSupplementaryDataProperty(em,\n          \n          \n            \n                    Query query = queryBuilder(SupplementaryDataOperation.SET).build(em,", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r450124108", "createdAt": "2020-07-06T10:15:48Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/supplementarydata/DefaultSupplementaryDataRepository.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package uk.gov.hmcts.ccd.data.casedetails.supplementarydata;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import java.util.List;\n+import java.util.Set;\n+import javax.inject.Singleton;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.Query;\n+import javax.transaction.Transactional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryData;\n+\n+@Service\n+@Qualifier(\"default\")\n+@Singleton\n+@Transactional\n+public class DefaultSupplementaryDataRepository implements SupplementaryDataRepository {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultSupplementaryDataRepository.class);\n+\n+    @PersistenceContext\n+    private EntityManager em;\n+\n+    private List<SupplementaryDataQueryBuilder> queryBuilders;\n+\n+\n+    @Autowired\n+    public DefaultSupplementaryDataRepository(final List<SupplementaryDataQueryBuilder> queryBuilders) {\n+        this.queryBuilders = queryBuilders;\n+    }\n+\n+    @Override\n+    public void setSupplementaryData(final String caseReference,\n+                                     String fieldPath,\n+                                     Object fieldValue) {\n+        LOG.debug(\"Set supplementary data\");\n+        Query query = queryBuilder(SupplementaryDataOperation.SET).buildQueryForEachSupplementaryDataProperty(em,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyOTUzMDcx", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-442953071", "createdAt": "2020-07-06T10:20:44Z", "commit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMDoyMDo0NFrOGtRi8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMDoyMDo0NFrOGtRi8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDEyNjU3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public static final String MORE_THAN_ONE_NESTED_LEVEL = \"More than one nested level is not allowed\";\n          \n          \n            \n                    public static final String MORE_THAN_ONE_NESTED_LEVEL = \"Supplementary data properties with more than one nested level are currently not supported\";", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r450126576", "createdAt": "2020-07-06T10:20:44Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/v2/V2.java", "diffHunk": "@@ -75,6 +75,9 @@ private Error() {}\n         public static final String USER_ID_INVALID = \"User ID is not valid\";\n         public static final String EMPTY_CASE_USER_ROLE_LIST = \"Case user roles list is empty\";\n         public static final String OTHER_USER_CASE_ROLE_ACCESS_NOT_GRANTED = \"Access to other user's case role assignments not granted\";\n+        public static final String NOT_AUTHORISED_UPDATE_SUPPLEMENTARY_DATA = \"Not authorised to update case supplementary data\";\n         public static final String CLIENT_SERVICE_NOT_AUTHORISED_FOR_OPERATION = \"Client service not authorised to perform operation\";\n+        public static final String SUPPLEMENTARY_DATA_INVALID = \"Supplementary Data Invalid\";\n+        public static final String MORE_THAN_ONE_NESTED_LEVEL = \"More than one nested level is not allowed\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyOTUzNzA4", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-442953708", "createdAt": "2020-07-06T10:21:49Z", "commit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMDoyMTo0OVrOGtRk9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMDoyMTo0OVrOGtRk9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDEyNzA5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    allowedNestedLevels(supplementaryData);\n          \n          \n            \n                    validateAtMostOneLevelOfNesting(supplementaryData);", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r450127093", "createdAt": "2020-07-06T10:21:49Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/std/validator/SupplementaryDataUpdateRequestValidator.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package uk.gov.hmcts.ccd.domain.model.std.validator;\n+\n+import java.util.Map;\n+import java.util.regex.Pattern;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryDataUpdateRequest;\n+import uk.gov.hmcts.ccd.endpoint.exceptions.BadRequestException;\n+\n+import static uk.gov.hmcts.ccd.v2.V2.Error.MORE_THAN_ONE_NESTED_LEVEL;\n+import static uk.gov.hmcts.ccd.v2.V2.Error.SUPPLEMENTARY_DATA_INVALID;\n+\n+@Named\n+@Singleton\n+public class SupplementaryDataUpdateRequestValidator {\n+\n+    public void validate(SupplementaryDataUpdateRequest supplementaryData) {\n+        if (supplementaryData == null\n+            || supplementaryData.getRequestData() == null\n+            || supplementaryData.getRequestData().size() == 0) {\n+            throw new BadRequestException(SUPPLEMENTARY_DATA_INVALID);\n+        }\n+        allowedNestedLevels(supplementaryData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyOTU2MzM1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-442956335", "createdAt": "2020-07-06T10:26:04Z", "commit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMDoyNjowNFrOGtRtPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMDoyNjowNFrOGtRtPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDEyOTIxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Set<String> getRequestDataKeys() {\n          \n          \n            \n                public Set<String> getPropertiesNames() {", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r450129214", "createdAt": "2020-07-06T10:26:04Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/model/std/SupplementaryDataUpdateRequest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package uk.gov.hmcts.ccd.domain.model.std;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.ToString;\n+import uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataOperation;\n+\n+@ToString\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Getter\n+public class SupplementaryDataUpdateRequest {\n+\n+    private Map<String, Map<String, Object>> requestData;\n+\n+    @JsonIgnore\n+    public Map<String, Object> getOperationProperties(SupplementaryDataOperation operation) {\n+        return this.requestData.getOrDefault(operation.getOperationName(), new HashMap<>());\n+    }\n+\n+    @JsonIgnore\n+    public Set<String> getRequestDataKeys() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbf5bbda5b76dd41d4869c88c9321da74cbe7f85", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/bbf5bbda5b76dd41d4869c88c9321da74cbe7f85", "committedDate": "2020-07-06T11:06:05Z", "message": "RDM-8750: Review Comments addressed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyOTg3MjUz", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-442987253", "createdAt": "2020-07-06T11:18:48Z", "commit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMToxODo0OFrOGtTMMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMToxODo0OFrOGtTMMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE1MzUyMw==", "bodyText": "Is it possible we have a race condition here when there are many concurrent updates?\nImagine update 1 updates propertyA: 5, then the thread stops just before line 60. At the same time update 2 updates propertyA: 10 and completes. Then update1 resumes and does the find, which will return propertyA: 10 rather than propertyA: 5.\nI think you mentioned the operations are transactional, but I can see those are transactional at the level of the Repository. Not at the level of the controller. So it's possible that update1 sees the changes introduced by update2 transaction here and returns a wrong response?", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r450153523", "createdAt": "2020-07-06T11:18:48Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/supplementarydata/DefaultSupplementaryDataUpdateOperation.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package uk.gov.hmcts.ccd.domain.service.supplementarydata;\n+\n+import java.util.EnumMap;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.function.BiConsumer;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataOperation;\n+import uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataRepository;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryData;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryDataUpdateRequest;\n+\n+import static uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataOperation.INC;\n+import static uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataOperation.SET;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class DefaultSupplementaryDataUpdateOperation implements SupplementaryDataUpdateOperation {\n+\n+    private final SupplementaryDataRepository supplementaryDataRepository;\n+\n+    private EnumMap<SupplementaryDataOperation, BiConsumer<String, SupplementaryDataUpdateRequest>> supplementaryFunctions =\n+        new EnumMap<>(SupplementaryDataOperation.class);\n+\n+    @Autowired\n+    public DefaultSupplementaryDataUpdateOperation(final @Qualifier(\"default\") SupplementaryDataRepository supplementaryDataRepository) {\n+        this.supplementaryDataRepository = supplementaryDataRepository;\n+        supplementaryFunctions.put(SET, (caseReference, updateRequest) -> {\n+            Map<String, Object> requestedData = updateRequest.getOperationProperties(SET);\n+            requestedData\n+                .entrySet()\n+                .stream()\n+                .forEach(entry -> this.supplementaryDataRepository.setSupplementaryData(caseReference,\n+                    entry.getKey(),\n+                    entry.getValue()));\n+        });\n+        supplementaryFunctions.put(INC, (caseReference, updateRequest) -> {\n+            Map<String, Object> requestedData = updateRequest.getOperationProperties(INC);\n+            requestedData\n+                .entrySet()\n+                .stream()\n+                .forEach(entry -> this.supplementaryDataRepository.incrementSupplementaryData(caseReference,\n+                    entry.getKey(),\n+                    entry.getValue()));\n+        });\n+    }\n+\n+    @Override\n+    public SupplementaryData updateSupplementaryData(String caseReference, SupplementaryDataUpdateRequest supplementaryData) {\n+        supplementaryData.getRequestData().keySet().forEach(key -> {\n+            Optional<SupplementaryDataOperation> operation = SupplementaryDataOperation.getOperation(key);\n+            if (operation.isPresent()) {\n+                supplementaryFunctions\n+                    .get(operation.get())\n+                    .accept(caseReference, supplementaryData);\n+            }\n+        });\n+        return this.supplementaryDataRepository.findSupplementaryData(caseReference, supplementaryData.getRequestDataKeys());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyOTkxMTY1", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-442991165", "createdAt": "2020-07-06T11:25:27Z", "commit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMToyNToyN1rOGtTXmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMToyNToyN1rOGtTXmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE1NjQ0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                SupplementaryData findSupplementaryData(String caseReference, Set<String> filterFieldPaths);\n          \n          \n            \n                SupplementaryData findSupplementaryData(String caseReference, Set<String> requestedProperties);", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r450156440", "createdAt": "2020-07-06T11:25:27Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/supplementarydata/SupplementaryDataRepository.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package uk.gov.hmcts.ccd.data.casedetails.supplementarydata;\n+\n+import java.util.Set;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryData;\n+\n+public interface SupplementaryDataRepository {\n+\n+    void setSupplementaryData(String caseReference, String fieldPath, Object fieldValue);\n+\n+    void incrementSupplementaryData(String caseReference, String fieldPath, Object fieldValue);\n+\n+    SupplementaryData findSupplementaryData(String caseReference, Set<String> filterFieldPaths);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyOTkxMzEy", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-442991312", "createdAt": "2020-07-06T11:25:43Z", "commit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMToyNTo0M1rOGtTYCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMToyNTo0M1rOGtTYCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE1NjU1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public SupplementaryData findSupplementaryData(final String caseReference, Set<String> filterFieldPaths) {\n          \n          \n            \n                public SupplementaryData findSupplementaryData(final String caseReference, Set<String> requestedProperties) {", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r450156555", "createdAt": "2020-07-06T11:25:43Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/data/casedetails/supplementarydata/DefaultSupplementaryDataRepository.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package uk.gov.hmcts.ccd.data.casedetails.supplementarydata;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import java.util.List;\n+import java.util.Set;\n+import javax.inject.Singleton;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.Query;\n+import javax.transaction.Transactional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryData;\n+\n+@Service\n+@Qualifier(\"default\")\n+@Singleton\n+@Transactional\n+public class DefaultSupplementaryDataRepository implements SupplementaryDataRepository {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DefaultSupplementaryDataRepository.class);\n+\n+    @PersistenceContext\n+    private EntityManager em;\n+\n+    private List<SupplementaryDataQueryBuilder> queryBuilders;\n+\n+\n+    @Autowired\n+    public DefaultSupplementaryDataRepository(final List<SupplementaryDataQueryBuilder> queryBuilders) {\n+        this.queryBuilders = queryBuilders;\n+    }\n+\n+    @Override\n+    public void setSupplementaryData(final String caseReference,\n+                                     String fieldPath,\n+                                     Object fieldValue) {\n+        LOG.debug(\"Set supplementary data\");\n+        Query query = queryBuilder(SupplementaryDataOperation.SET).buildQueryForEachSupplementaryDataProperty(em,\n+            caseReference,\n+            fieldPath,\n+            fieldValue);\n+        query.executeUpdate();\n+    }\n+\n+    @Override\n+    public void incrementSupplementaryData(final String caseReference,\n+                                           String fieldPath,\n+                                           Object fieldValue) {\n+        LOG.debug(\"Insert supplementary data\");\n+        Query query = queryBuilder(SupplementaryDataOperation.INC).buildQueryForEachSupplementaryDataProperty(em,\n+            caseReference,\n+            fieldPath,\n+            fieldValue);\n+        query.executeUpdate();\n+    }\n+\n+    @Override\n+    public SupplementaryData findSupplementaryData(final String caseReference, Set<String> filterFieldPaths) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyOTkyMjE0", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-442992214", "createdAt": "2020-07-06T11:27:21Z", "commit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMToyNzoyMVrOGtTa0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMToyNzoyMVrOGtTa0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE1NzI2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private EnumMap<SupplementaryDataOperation, BiConsumer<String, SupplementaryDataUpdateRequest>> supplementaryFunctions =\n          \n          \n            \n                private EnumMap<SupplementaryDataOperation, BiConsumer<String, SupplementaryDataUpdateRequest>> supplementaryDataFunctions =", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r450157265", "createdAt": "2020-07-06T11:27:21Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/supplementarydata/DefaultSupplementaryDataUpdateOperation.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package uk.gov.hmcts.ccd.domain.service.supplementarydata;\n+\n+import java.util.EnumMap;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.function.BiConsumer;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataOperation;\n+import uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataRepository;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryData;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryDataUpdateRequest;\n+\n+import static uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataOperation.INC;\n+import static uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataOperation.SET;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class DefaultSupplementaryDataUpdateOperation implements SupplementaryDataUpdateOperation {\n+\n+    private final SupplementaryDataRepository supplementaryDataRepository;\n+\n+    private EnumMap<SupplementaryDataOperation, BiConsumer<String, SupplementaryDataUpdateRequest>> supplementaryFunctions =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "076da07dfa2fd4ecd99bfc805dfa0087af2b90d2", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/076da07dfa2fd4ecd99bfc805dfa0087af2b90d2", "committedDate": "2020-07-06T11:32:07Z", "message": "RDM-8750: Swagger documentation with Example supplementary data request added\nAnd Review comments addressed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyOTk4MDAz", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-442998003", "createdAt": "2020-07-06T11:37:27Z", "commit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMTozNzoyOFrOGtTspw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMTozNzoyOFrOGtTspw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDE2MTgzMQ==", "bodyText": "I would remove direct access in supplementary data to the request data, to avoid boilerplate code like:\ngetRequestData().keySet().forEach\nBetter introduce proper utility methods with self explanatory names to SupplementaryDataUpdateRequest instead.\nIn this case:\ngetSupplementaryDataOperations, which will pair nicely with the already introduced getSupplementaryDataProperties", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#discussion_r450161831", "createdAt": "2020-07-06T11:37:28Z", "author": {"login": "mario-paniccia"}, "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/supplementarydata/DefaultSupplementaryDataUpdateOperation.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package uk.gov.hmcts.ccd.domain.service.supplementarydata;\n+\n+import java.util.EnumMap;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.function.BiConsumer;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataOperation;\n+import uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataRepository;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryData;\n+import uk.gov.hmcts.ccd.domain.model.std.SupplementaryDataUpdateRequest;\n+\n+import static uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataOperation.INC;\n+import static uk.gov.hmcts.ccd.data.casedetails.supplementarydata.SupplementaryDataOperation.SET;\n+\n+@Service\n+@Qualifier(\"default\")\n+public class DefaultSupplementaryDataUpdateOperation implements SupplementaryDataUpdateOperation {\n+\n+    private final SupplementaryDataRepository supplementaryDataRepository;\n+\n+    private EnumMap<SupplementaryDataOperation, BiConsumer<String, SupplementaryDataUpdateRequest>> supplementaryFunctions =\n+        new EnumMap<>(SupplementaryDataOperation.class);\n+\n+    @Autowired\n+    public DefaultSupplementaryDataUpdateOperation(final @Qualifier(\"default\") SupplementaryDataRepository supplementaryDataRepository) {\n+        this.supplementaryDataRepository = supplementaryDataRepository;\n+        supplementaryFunctions.put(SET, (caseReference, updateRequest) -> {\n+            Map<String, Object> requestedData = updateRequest.getOperationProperties(SET);\n+            requestedData\n+                .entrySet()\n+                .stream()\n+                .forEach(entry -> this.supplementaryDataRepository.setSupplementaryData(caseReference,\n+                    entry.getKey(),\n+                    entry.getValue()));\n+        });\n+        supplementaryFunctions.put(INC, (caseReference, updateRequest) -> {\n+            Map<String, Object> requestedData = updateRequest.getOperationProperties(INC);\n+            requestedData\n+                .entrySet()\n+                .stream()\n+                .forEach(entry -> this.supplementaryDataRepository.incrementSupplementaryData(caseReference,\n+                    entry.getKey(),\n+                    entry.getValue()));\n+        });\n+    }\n+\n+    @Override\n+    public SupplementaryData updateSupplementaryData(String caseReference, SupplementaryDataUpdateRequest supplementaryData) {\n+        supplementaryData.getRequestData().keySet().forEach(key -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "342f1d30039a1e8676a7e96edca5707135484226"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d811538e50548c7cb5a7d8e46eea7e4b376014e", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/3d811538e50548c7cb5a7d8e46eea7e4b376014e", "committedDate": "2020-07-06T11:46:50Z", "message": "RDM-8750: Swagger documentation with Example supplementary data request added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53988db869a982f16d03b8244ce2bd00857a0a5a", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/53988db869a982f16d03b8244ce2bd00857a0a5a", "committedDate": "2020-07-06T12:03:53Z", "message": "RDM-8750: Review comments addressed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70bd1716cd931db4f5e6b72ebcdb2ac7f045a7dc", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/70bd1716cd931db4f5e6b72ebcdb2ac7f045a7dc", "committedDate": "2020-07-06T12:06:03Z", "message": "RDM-8750: check style issues fixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09231e4af0f683295222edb25c4679626224fc42", "author": {"user": {"login": "mario-paniccia", "name": "Mario Paniccia"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/09231e4af0f683295222edb25c4679626224fc42", "committedDate": "2020-07-06T15:26:13Z", "message": "reused existing method getPropertiesNames()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58ee2744d386a39b32d8e1359b96e49090d48584", "author": {"user": {"login": "mario-paniccia", "name": "Mario Paniccia"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/58ee2744d386a39b32d8e1359b96e49090d48584", "committedDate": "2020-07-06T15:31:17Z", "message": "refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09a1cb3131a9f32cd76b49b0d1082896def5fb7c", "author": {"user": {"login": "mario-paniccia", "name": "Mario Paniccia"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/09a1cb3131a9f32cd76b49b0d1082896def5fb7c", "committedDate": "2020-07-06T15:43:52Z", "message": "refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f77d752f1617863563bfb1958daab3cbdce7d20", "author": {"user": {"login": "mario-paniccia", "name": "Mario Paniccia"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/1f77d752f1617863563bfb1958daab3cbdce7d20", "committedDate": "2020-07-06T15:45:26Z", "message": "refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be8091dc455a96e9895b7f488ad909630cea8f1a", "author": {"user": {"login": "mario-paniccia", "name": "Mario Paniccia"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/be8091dc455a96e9895b7f488ad909630cea8f1a", "committedDate": "2020-07-06T15:48:51Z", "message": "fixed wrong refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c24887769e23a4abe7d69e6213b74fa591f5575", "author": {"user": {"login": "mario-paniccia", "name": "Mario Paniccia"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/4c24887769e23a4abe7d69e6213b74fa591f5575", "committedDate": "2020-07-06T16:03:13Z", "message": "refactoring, added unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78a7a73a9a6810ce76dc80c2afafa76243b03507", "author": {"user": {"login": "mario-paniccia", "name": "Mario Paniccia"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/78a7a73a9a6810ce76dc80c2afafa76243b03507", "committedDate": "2020-07-06T16:06:53Z", "message": "added unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16065c5db4f1ba277ba3a46c9f12d5a8b44e9ad3", "author": {"user": {"login": "mario-paniccia", "name": "Mario Paniccia"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/16065c5db4f1ba277ba3a46c9f12d5a8b44e9ad3", "committedDate": "2020-07-06T16:12:00Z", "message": "rename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "221f73e621fe904b2408057e9447451834f4c462", "author": {"user": {"login": "mario-paniccia", "name": "Mario Paniccia"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/221f73e621fe904b2408057e9447451834f4c462", "committedDate": "2020-07-06T16:12:52Z", "message": "refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b01a8d1cab7879e9f507cb5050322c4dfbe1e284", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/b01a8d1cab7879e9f507cb5050322c4dfbe1e284", "committedDate": "2020-07-06T19:39:05Z", "message": "RDM-8868: Removed Unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c76fbf1e44304b059d46da7e9c669f6047210da", "author": {"user": {"login": "mario-paniccia", "name": "Mario Paniccia"}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/0c76fbf1e44304b059d46da7e9c669f6047210da", "committedDate": "2020-07-07T11:09:33Z", "message": "updated"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzODAwMjE2", "url": "https://github.com/hmcts/ccd-data-store-api/pull/997#pullrequestreview-443800216", "createdAt": "2020-07-07T11:27:40Z", "commit": {"oid": "0c76fbf1e44304b059d46da7e9c669f6047210da"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5a2d186e7505aae95c73eddade81944ac137a30", "author": {"user": {"login": "RebeccaBaker", "name": null}}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e5a2d186e7505aae95c73eddade81944ac137a30", "committedDate": "2020-07-07T12:57:32Z", "message": "Merge branch 'develop' into RDM-8750"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "064e4af9fc5c734c93c86fdd5afb3e482b043683", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/064e4af9fc5c734c93c86fdd5afb3e482b043683", "committedDate": "2020-07-08T16:16:39Z", "message": "RDM-8750: Checkpoint comments addressed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11385c9a3a49b32221d7e878737889e519094f4d", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/11385c9a3a49b32221d7e878737889e519094f4d", "committedDate": "2020-07-08T16:52:00Z", "message": "RDM-8750: Checkpoint comments addressed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e69c6934ab7be039cd116071a167a932cbbf1cd9", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/e69c6934ab7be039cd116071a167a932cbbf1cd9", "committedDate": "2020-07-09T09:29:20Z", "message": "RDM-8750: Checkpoint comments addressed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a4fa03c9a7952af20e740929ec4097bc7617b40", "author": {"user": null}, "url": "https://github.com/hmcts/ccd-data-store-api/commit/5a4fa03c9a7952af20e740929ec4097bc7617b40", "committedDate": "2020-07-09T10:01:27Z", "message": "RDM-8750: Duplicate Key Detection in JSON"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2809, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}