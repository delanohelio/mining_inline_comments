{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MTU3NDA5", "number": 2322, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNToyNTo1NFrOEFVCkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNTo1NzowNVrOEFVK2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDIzMDU3OnYy", "diffSide": "RIGHT", "path": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/FatalExceptions.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNToyNTo1NFrOGjdvuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNTo0MDo1NlrOGjd1Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MDY5Ng==", "bodyText": "Instead of the term \"fatal\", I would suggest something along the lines of \"unrecoverable\" meaning an exception from which the application (test plan) cannot recover.\nIt's certainly debatable due to the common use of \"fatal errors\" in computing in general, but I have been told that terms (potentially) implying \"death\" or \"violence\" should be avoided if other terms are more suitable.", "url": "https://github.com/junit-team/junit5/pull/2322#discussion_r439840696", "createdAt": "2020-06-14T15:25:54Z", "author": {"login": "sbrannen"}, "path": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/FatalExceptions.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.commons.util;\n+\n+import static org.apiguardian.api.API.Status.INTERNAL;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * Internal utilities for working with <em>fatal</em> exceptions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be04af19b02f75432cf4c75d2767c42b151150ba"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MDg3NQ==", "bodyText": "Granted, I realize that \"fatal\" can also mean \"causing failure\". That's why I say it's debatable.", "url": "https://github.com/junit-team/junit5/pull/2322#discussion_r439840875", "createdAt": "2020-06-14T15:27:57Z", "author": {"login": "sbrannen"}, "path": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/FatalExceptions.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.commons.util;\n+\n+import static org.apiguardian.api.API.Status.INTERNAL;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * Internal utilities for working with <em>fatal</em> exceptions.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MDY5Ng=="}, "originalCommit": {"oid": "be04af19b02f75432cf4c75d2767c42b151150ba"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MjEyMw==", "bodyText": "I agree that \"unrecoverable\" is better and will change it accordingly.", "url": "https://github.com/junit-team/junit5/pull/2322#discussion_r439842123", "createdAt": "2020-06-14T15:40:56Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/FatalExceptions.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.commons.util;\n+\n+import static org.apiguardian.api.API.Status.INTERNAL;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * Internal utilities for working with <em>fatal</em> exceptions.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MDY5Ng=="}, "originalCommit": {"oid": "be04af19b02f75432cf4c75d2767c42b151150ba"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDI1MTc3OnYy", "diffSide": "RIGHT", "path": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/BlacklistedExceptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNTo1NzowNVrOGjd6uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNzo1MDoxN1rOGjefUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MzUxMg==", "bodyText": "Please add an @deprecated Javadoc tag at the class level analogous to the one at the method level.", "url": "https://github.com/junit-team/junit5/pull/2322#discussion_r439843512", "createdAt": "2020-06-14T15:57:05Z", "author": {"login": "sbrannen"}, "path": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/BlacklistedExceptions.java", "diffHunk": "@@ -36,26 +33,26 @@\n  *\n  * @since 1.0\n  */\n-@API(status = INTERNAL, since = \"1.0\")\n+@API(status = DEPRECATED, since = \"1.7\")\n public final class BlacklistedExceptions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40f37b49ae874a2f5f568d2e5b50831adb80bf50"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1Mjg4Mg==", "bodyText": "Added.", "url": "https://github.com/junit-team/junit5/pull/2322#discussion_r439852882", "createdAt": "2020-06-14T17:50:17Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/BlacklistedExceptions.java", "diffHunk": "@@ -36,26 +33,26 @@\n  *\n  * @since 1.0\n  */\n-@API(status = INTERNAL, since = \"1.0\")\n+@API(status = DEPRECATED, since = \"1.7\")\n public final class BlacklistedExceptions {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MzUxMg=="}, "originalCommit": {"oid": "40f37b49ae874a2f5f568d2e5b50831adb80bf50"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4043, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}