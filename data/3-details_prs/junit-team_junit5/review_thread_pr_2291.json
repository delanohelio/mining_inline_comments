{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MTU0NDg5", "number": 2291, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyNjozOVrOD80XUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjo0NDoxMVrOEA4AJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDk5MDg5OnYy", "diffSide": "RIGHT", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyNjozOVrOGV_Tcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyNjozOVrOGV_Tcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcxMDQ1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * <p>Note: An implementation of this method may materialize the lines of both streams eagerly and\n          \n          \n            \n            \t * @implNote An implementation of this method may consume the lines of both streams eagerly and", "url": "https://github.com/junit-team/junit5/pull/2291#discussion_r425710450", "createdAt": "2020-05-15T10:26:39Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java", "diffHunk": "@@ -1613,6 +1613,61 @@ public static void assertLinesMatch(List<String> expectedLines, List<String> act\n \t\tAssertLinesMatch.assertLinesMatch(expectedLines, actualLines, messageSupplier);\n \t}\n \n+\t/**\n+\t * <em>Assert</em> that {@code expected} stream of {@linkplain String}s matches {@code actual}\n+\t * stream.\n+\t *\n+\t * <p>Find a detailed description of the matching algorithm in {@link #assertLinesMatch(List, List)}.\n+\t *\n+\t * <p>Note: An implementation of this method may materialize the lines of both streams eagerly and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "860c1792c08280b8532a07f81aa250ccc115ada8"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTAwMDE2OnYy", "diffSide": "RIGHT", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyOTo0NlrOGV_ZbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyOTo0NlrOGV_ZbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcxMTk4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * delegate the evaluation to the {@code List<String>}-taking overload.\n          \n          \n            \n            \t * delegate the evaluation to {@link #assertLinesMatch(List, List)}.", "url": "https://github.com/junit-team/junit5/pull/2291#discussion_r425711980", "createdAt": "2020-05-15T10:29:46Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java", "diffHunk": "@@ -1613,6 +1613,61 @@ public static void assertLinesMatch(List<String> expectedLines, List<String> act\n \t\tAssertLinesMatch.assertLinesMatch(expectedLines, actualLines, messageSupplier);\n \t}\n \n+\t/**\n+\t * <em>Assert</em> that {@code expected} stream of {@linkplain String}s matches {@code actual}\n+\t * stream.\n+\t *\n+\t * <p>Find a detailed description of the matching algorithm in {@link #assertLinesMatch(List, List)}.\n+\t *\n+\t * <p>Note: An implementation of this method may materialize the lines of both streams eagerly and\n+\t * delegate the evaluation to the {@code List<String>}-taking overload.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "860c1792c08280b8532a07f81aa250ccc115ada8"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MzUyOTk3OnYy", "diffSide": "RIGHT", "path": "documentation/src/docs/asciidoc/release-notes/release-notes-5.7.0-M2.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjo0NDoxMVrOGcbGaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjo0NDoxMVrOGcbGaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1NzMyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * New `assertLinesMatch` method overloads added to class `Assertions` that take in\n          \n          \n            \n              two `Stream<String>` instances for comparision.\n          \n          \n            \n            * New `assertLinesMatch` method overloads added to class `Assertions` that accept\n          \n          \n            \n              two `Stream<String>` instances for comparison.", "url": "https://github.com/junit-team/junit5/pull/2291#discussion_r432457321", "createdAt": "2020-05-29T12:44:11Z", "author": {"login": "marcphilipp"}, "path": "documentation/src/docs/asciidoc/release-notes/release-notes-5.7.0-M2.adoc", "diffHunk": "@@ -52,7 +52,8 @@ on GitHub.\n * All `@Enabled*`/`@Disabled*` annotations now have an optional `disabledReason`\n   attribute that can be used to provide additional explanation as to why a test or\n   container might be disabled.\n-\n+* New `assertLinesMatch` method overloads added to class `Assertions` that take in\n+  two `Stream<String>` instances for comparision.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7e601c140b975abc9b1a7c3af030bc703ab256b"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4033, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}