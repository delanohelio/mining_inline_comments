{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNDA0MjA5", "number": 2416, "title": "Introduce junit-platform-suite-engine", "bodyText": "Overview\nImplements a test engine that allows declarative execution of test suites using\nthe @Suite annotation.\nInternally the Suite Engine uses the JUnit Platform Launcher. The engine works\nadding the test descriptors of the discovered engines and tests as children to its\nown test descriptor.\npackage org.junit.platform.suite;\n\nimport org.junit.platform.suite.api.SelectPackages;\n\n@Suite\n@SelectPackages(\"org.junit.suite.testcases\")\nclass SelectPackageSuite {\n\n}\nIs equivalent to:\nimport org.junit.platform.engine.discovery.DiscoverySelectors;\nimport org.junit.platform.launcher.Launcher;\nimport org.junit.platform.launcher.LauncherDiscoveryRequest;\nimport org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\nimport org.junit.platform.launcher.core.LauncherFactory;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Launcher launcher = LauncherFactory.create();\n        LauncherDiscoveryRequest request = LauncherDiscoveryRequestBuilder.request()\n                .selectors(DiscoverySelectors.selectPackage(\"org.junit.suite.testcases\"))\n                .build();\n        launcher.execute(request);\n    }\n}\nIssue: #744\n\nI hereby agree to the terms of the JUnit Contributor License Agreement.\n\nDefinition of Done\n\n There are no TODOs left in the code\n Method preconditions are checked and documented in the method's Javadoc\n Coding conventions (e.g. for logging) have been followed\n Change is covered by automated tests including corner cases, errors, and exception handling\n Public API has Javadoc and @API annotations\n Change is documented in the User Guide and Release Notes\n All continuous integration builds pass", "createdAt": "2020-09-21T16:01:22Z", "url": "https://github.com/junit-team/junit5/pull/2416", "merged": true, "mergeCommit": {"oid": "b2a98105cc3d5c751e5a2a5709ad463021924613"}, "closed": true, "closedAt": "2021-02-09T13:14:58Z", "author": {"login": "mpkorstanje"}, "timelineItems": {"totalCount": 89, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdL0KDngBqjM4MDA1NTY4OTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd4bqweAFqTU4NjUyNjY1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5452775eebcca2e7a414c85e8411b0e2f43bbaa1", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/5452775eebcca2e7a414c85e8411b0e2f43bbaa1", "committedDate": "2020-09-23T22:13:15Z", "message": "Allow cycles\n\nCycle detection is limited to the suite engine launching other suite engines.\nWe're using the configuration parameters to smuggle in the parent suite id\nfor each launching request."}, "afterCommit": {"oid": "d2c8982eaca4da848155f1fc3bc7009e6a69c31e", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/d2c8982eaca4da848155f1fc3bc7009e6a69c31e", "committedDate": "2020-09-23T22:16:15Z", "message": "Allow cycles\n\nCycle detection is limited to the suite engine launching other suite engines.\nWe're using the configuration parameters to smuggle in the parent suite id\nfor each launching request."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d2c8982eaca4da848155f1fc3bc7009e6a69c31e", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/d2c8982eaca4da848155f1fc3bc7009e6a69c31e", "committedDate": "2020-09-23T22:16:15Z", "message": "Allow cycles\n\nCycle detection is limited to the suite engine launching other suite engines.\nWe're using the configuration parameters to smuggle in the parent suite id\nfor each launching request."}, "afterCommit": {"oid": "04e7397231b4690bf34c5174b008e240451326e2", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/04e7397231b4690bf34c5174b008e240451326e2", "committedDate": "2020-09-23T22:17:39Z", "message": "Forbid cycles\n\nCycle detection is limited to the suite engine launching other suite engines.\nWe're using the configuration parameters to smuggle in the parent suite id\nfor each launching request."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "45c13bbdf4ce4b9ad17f9077bcafe2ba947febcb", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/45c13bbdf4ce4b9ad17f9077bcafe2ba947febcb", "committedDate": "2020-09-23T22:27:39Z", "message": "Merge remote-tracking branch 'origin/main' into junit-platform-suite-engine"}, "afterCommit": {"oid": "3abe7c4ab232aeaf2b93204fb06b8cd2e8944574", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/3abe7c4ab232aeaf2b93204fb06b8cd2e8944574", "committedDate": "2020-09-23T22:41:53Z", "message": "Spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NDQ1NTM5", "url": "https://github.com/junit-team/junit5/pull/2416#pullrequestreview-556445539", "createdAt": "2020-12-21T15:06:22Z", "commit": {"oid": "e024c150baec914fc601cd4de0cb8ec2e2439ec6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTowNjoyMlrOIJbZUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTowNjoyMlrOIJbZUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc1Njk0Nw==", "bodyText": "Consider explicitly disabling the discovery of launcher-discovery listeners via SPI when introduced by #2457.", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r546756947", "createdAt": "2020-12-21T15:06:22Z", "author": {"login": "mpkorstanje"}, "path": "junit-platform-suite-engine/src/main/java/org/junit/platform/suite/engine/SuiteTestDescriptor.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.suite.engine;\n+\n+import java.util.function.Function;\n+import java.util.function.Supplier;\n+\n+import org.junit.platform.commons.util.AnnotationUtils;\n+import org.junit.platform.commons.util.Preconditions;\n+import org.junit.platform.commons.util.StringUtils;\n+import org.junit.platform.engine.TestDescriptor;\n+import org.junit.platform.engine.UniqueId;\n+import org.junit.platform.engine.support.descriptor.AbstractTestDescriptor;\n+import org.junit.platform.engine.support.descriptor.ClassSource;\n+import org.junit.platform.launcher.Launcher;\n+import org.junit.platform.launcher.LauncherDiscoveryRequest;\n+import org.junit.platform.launcher.TestIdentifier;\n+import org.junit.platform.launcher.TestPlan;\n+import org.junit.platform.launcher.core.LauncherConfig;\n+import org.junit.platform.launcher.core.LauncherFactory;\n+import org.junit.platform.suite.api.SuiteDisplayName;\n+\n+/**\n+ * {@link TestDescriptor} for tests based on the JUnit Platform Launcher API.\n+ *\n+ * <h3>Default Display Names</h3>\n+ *\n+ * <p>The default display name is the simple name of the class.\n+ *\n+ * @since 1.8\n+ * @see SuiteDisplayName\n+ */\n+final class SuiteTestDescriptor extends AbstractTestDescriptor {\n+\n+\tstatic final String SEGMENT_TYPE = \"suite\";\n+\n+\tprivate final SuiteLauncherDiscoveryRequestBuilder requestBuilder;\n+\n+\tprivate TestPlan testPlan;\n+\tprivate Launcher launcher;\n+\n+\tSuiteTestDescriptor(UniqueId id, Class<?> suiteClass, SuiteConfiguration configuration) {\n+\t\tsuper(id, getSuiteDisplayName(suiteClass), ClassSource.from(suiteClass));\n+\t\t// @formatter:off\n+\t\tUniqueId requestingSuiteId = requireNoCycles(configuration).parentSuiteId()\n+\t\t\t\t.map(parentId -> UniqueIdHelper.append(parentId, getUniqueId()))\n+\t\t\t\t.orElseGet(this::getUniqueId);\n+\t\t// @formatter:on\n+\t\tSuiteLauncherDiscoveryRequestBuilder requestBuilder = new SuiteLauncherDiscoveryRequestBuilder();\n+\t\tthis.requestBuilder = requestBuilder.configureRequestingSuiteId(requestingSuiteId);\n+\t}\n+\n+\tprivate SuiteConfiguration requireNoCycles(SuiteConfiguration configuration) {\n+\t\tconfiguration.parentSuiteId().ifPresent(parentSuiteId -> {\n+\t\t\tUniqueId fullSuiteId = UniqueIdHelper.append(parentSuiteId, getUniqueId());\n+\t\t\tSupplier<String> message = () -> String.format(\n+\t\t\t\t\"Configuration error: The suite configuration may not contain a cycle [%s]\", fullSuiteId);\n+\t\t\tPreconditions.condition(!UniqueIdHelper.containCycle(fullSuiteId, SEGMENT_TYPE), message);\n+\t\t});\n+\t\treturn configuration;\n+\t}\n+\n+\tUniqueId uniqueIdInSuite(TestIdentifier testDescriptor) {\n+\t\tPreconditions.notNull(testDescriptor, \"uniqueId most not be null\");\n+\t\tUniqueId uniqueIdInTestPlan = UniqueId.parse(testDescriptor.getUniqueId());\n+\t\tUniqueId uniqueIdInSuite = getUniqueId();\n+\t\treturn UniqueIdHelper.append(uniqueIdInSuite, uniqueIdInTestPlan);\n+\t}\n+\n+\tSuiteTestDescriptor addDiscoveryRequestFrom(Class<?> testClass) {\n+\t\tPreconditions.condition(testPlan == null, \"discovery request can not be modified after discovery\");\n+\t\trequestBuilder.addRequestFrom(testClass);\n+\t\treturn this;\n+\t}\n+\n+\tSuiteTestDescriptor addDiscoveryRequestFrom(UniqueId uniqueId) {\n+\t\tPreconditions.condition(testPlan == null, \"discovery request can not be modified after discovery\");\n+\t\trequestBuilder.addRequestFrom(uniqueId);\n+\t\treturn this;\n+\t}\n+\n+\tvoid discover() {\n+\t\tPreconditions.condition(testPlan == null, \"discovery can only happen once\");\n+\n+\t\tLauncherDiscoveryRequest request = requestBuilder.build();\n+\t\t// @formatter:off\n+\t\tLauncherConfig launcherConfig = LauncherConfig.builder()\n+\t\t\t\t.enableTestExecutionListenerAutoRegistration(false)\n+\t\t\t\t.enablePostDiscoveryFilterAutoRegistration(false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e024c150baec914fc601cd4de0cb8ec2e2439ec6"}, "originalPosition": 97}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "339c1d49fdd69382bfcdb9ee87d676059d4a4d44", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/339c1d49fdd69382bfcdb9ee87d676059d4a4d44", "committedDate": "2020-12-27T19:14:28Z", "message": "Merge remote-tracking branch 'origin/main' into junit-platform-suite-engine"}, "afterCommit": {"oid": "abf9dc5afd490b73ef67fb3510b8e3fae1900393", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/abf9dc5afd490b73ef67fb3510b8e3fae1900393", "committedDate": "2020-12-27T22:49:19Z", "message": "Implement junit-platform-suite-engine #2416\n\nImplements a test engine that allows declarative execution of test suites using\nthe `@Suite` annotation.\n\nInternally the Suite Engine uses the JUnit Platform Launcher. The engine works\nby mapping the `TestIdentifier` used by the launcher to `TestDescriptor` used\nby the engine during discovery and execution.\n\n```\npackage org.junit.platform.suite;\n\nimport org.junit.platform.suite.api.SelectPackages;\n\n@suite\n@SelectPackages(\"org.junit.suite.testcases\")\nclass SelectPackageSuite {\n\n}\n```\n\nIs equivalent to:\n\n```\nimport org.junit.platform.engine.discovery.DiscoverySelectors;\nimport org.junit.platform.launcher.Launcher;\nimport org.junit.platform.launcher.LauncherDiscoveryRequest;\nimport org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\nimport org.junit.platform.launcher.core.LauncherFactory;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Launcher launcher = LauncherFactory.create();\n        LauncherDiscoveryRequest request = LauncherDiscoveryRequestBuilder.request()\n                .selectors(DiscoverySelectors.selectPackage(\"org.junit.suite.testcases\"))\n                .build();\n        launcher.execute(request);\n    }\n}\n```\n\nThe suite engine converts an annotated class into a discovery request. This\nrequest is executed and the resulting test plan is mapped to a tree of test\ndescriptors. In essence the tree of test descriptors are a view on the test\nplan. So suppose the discovery requests produces this test plan:\n\n```\nJUnit Jupiter\n|- TestA\n||- method1\n||- method2\n|- TestB\n||- method1\n||- method2\n```\n\nThen that test plan is mapped to a tree of test descriptors like so:\n\n```\nSuiteEngine\n|- ExampleSuite\n||-JUnit Jupiter\n|||- TestA\n||||- method1\n||||- method2\n|||- TestB\n||||- method1\n||||- method2\n````\n\nThe unique identifiers are remapped by pre-pending the unique identifier of the suite. So:\n\n```\njunit-jupiter/TestA/method1() ->  junit-suite/ExampleSuite/junit-jupiter/TestA/method1()\n```\n\nIssue: #744"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abf9dc5afd490b73ef67fb3510b8e3fae1900393", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/abf9dc5afd490b73ef67fb3510b8e3fae1900393", "committedDate": "2020-12-27T22:49:19Z", "message": "Implement junit-platform-suite-engine #2416\n\nImplements a test engine that allows declarative execution of test suites using\nthe `@Suite` annotation.\n\nInternally the Suite Engine uses the JUnit Platform Launcher. The engine works\nby mapping the `TestIdentifier` used by the launcher to `TestDescriptor` used\nby the engine during discovery and execution.\n\n```\npackage org.junit.platform.suite;\n\nimport org.junit.platform.suite.api.SelectPackages;\n\n@suite\n@SelectPackages(\"org.junit.suite.testcases\")\nclass SelectPackageSuite {\n\n}\n```\n\nIs equivalent to:\n\n```\nimport org.junit.platform.engine.discovery.DiscoverySelectors;\nimport org.junit.platform.launcher.Launcher;\nimport org.junit.platform.launcher.LauncherDiscoveryRequest;\nimport org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\nimport org.junit.platform.launcher.core.LauncherFactory;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Launcher launcher = LauncherFactory.create();\n        LauncherDiscoveryRequest request = LauncherDiscoveryRequestBuilder.request()\n                .selectors(DiscoverySelectors.selectPackage(\"org.junit.suite.testcases\"))\n                .build();\n        launcher.execute(request);\n    }\n}\n```\n\nThe suite engine converts an annotated class into a discovery request. This\nrequest is executed and the resulting test plan is mapped to a tree of test\ndescriptors. In essence the tree of test descriptors are a view on the test\nplan. So suppose the discovery requests produces this test plan:\n\n```\nJUnit Jupiter\n|- TestA\n||- method1\n||- method2\n|- TestB\n||- method1\n||- method2\n```\n\nThen that test plan is mapped to a tree of test descriptors like so:\n\n```\nSuiteEngine\n|- ExampleSuite\n||-JUnit Jupiter\n|||- TestA\n||||- method1\n||||- method2\n|||- TestB\n||||- method1\n||||- method2\n````\n\nThe unique identifiers are remapped by pre-pending the unique identifier of the suite. So:\n\n```\njunit-jupiter/TestA/method1() ->  junit-suite/ExampleSuite/junit-jupiter/TestA/method1()\n```\n\nIssue: #744"}, "afterCommit": {"oid": "f71be7220aa55a7ab6b8e46f792f9b44a512f73d", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/f71be7220aa55a7ab6b8e46f792f9b44a512f73d", "committedDate": "2020-12-27T22:49:55Z", "message": "Implement junit-platform-suite-engine\n\nImplements a test engine that allows declarative execution of test suites using\nthe `@Suite` annotation.\n\nInternally the Suite Engine uses the JUnit Platform Launcher. The engine works\nby mapping the `TestIdentifier` used by the launcher to `TestDescriptor` used\nby the engine during discovery and execution.\n\n```\npackage org.junit.platform.suite;\n\nimport org.junit.platform.suite.api.SelectPackages;\n\n@suite\n@SelectPackages(\"org.junit.suite.testcases\")\nclass SelectPackageSuite {\n\n}\n```\n\nIs equivalent to:\n\n```\nimport org.junit.platform.engine.discovery.DiscoverySelectors;\nimport org.junit.platform.launcher.Launcher;\nimport org.junit.platform.launcher.LauncherDiscoveryRequest;\nimport org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\nimport org.junit.platform.launcher.core.LauncherFactory;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Launcher launcher = LauncherFactory.create();\n        LauncherDiscoveryRequest request = LauncherDiscoveryRequestBuilder.request()\n                .selectors(DiscoverySelectors.selectPackage(\"org.junit.suite.testcases\"))\n                .build();\n        launcher.execute(request);\n    }\n}\n```\n\nThe suite engine converts an annotated class into a discovery request. This\nrequest is executed and the resulting test plan is mapped to a tree of test\ndescriptors. In essence the tree of test descriptors are a view on the test\nplan. So suppose the discovery requests produces this test plan:\n\n```\nJUnit Jupiter\n|- TestA\n||- method1\n||- method2\n|- TestB\n||- method1\n||- method2\n```\n\nThen that test plan is mapped to a tree of test descriptors like so:\n\n```\nSuiteEngine\n|- ExampleSuite\n||-JUnit Jupiter\n|||- TestA\n||||- method1\n||||- method2\n|||- TestB\n||||- method1\n||||- method2\n````\n\nThe unique identifiers are remapped by pre-pending the unique identifier of the suite. So:\n\n```\njunit-jupiter/TestA/method1() ->  junit-suite/ExampleSuite/junit-jupiter/TestA/method1()\n```\n\nIssue: #744"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f71be7220aa55a7ab6b8e46f792f9b44a512f73d", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/f71be7220aa55a7ab6b8e46f792f9b44a512f73d", "committedDate": "2020-12-27T22:49:55Z", "message": "Implement junit-platform-suite-engine\n\nImplements a test engine that allows declarative execution of test suites using\nthe `@Suite` annotation.\n\nInternally the Suite Engine uses the JUnit Platform Launcher. The engine works\nby mapping the `TestIdentifier` used by the launcher to `TestDescriptor` used\nby the engine during discovery and execution.\n\n```\npackage org.junit.platform.suite;\n\nimport org.junit.platform.suite.api.SelectPackages;\n\n@suite\n@SelectPackages(\"org.junit.suite.testcases\")\nclass SelectPackageSuite {\n\n}\n```\n\nIs equivalent to:\n\n```\nimport org.junit.platform.engine.discovery.DiscoverySelectors;\nimport org.junit.platform.launcher.Launcher;\nimport org.junit.platform.launcher.LauncherDiscoveryRequest;\nimport org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\nimport org.junit.platform.launcher.core.LauncherFactory;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Launcher launcher = LauncherFactory.create();\n        LauncherDiscoveryRequest request = LauncherDiscoveryRequestBuilder.request()\n                .selectors(DiscoverySelectors.selectPackage(\"org.junit.suite.testcases\"))\n                .build();\n        launcher.execute(request);\n    }\n}\n```\n\nThe suite engine converts an annotated class into a discovery request. This\nrequest is executed and the resulting test plan is mapped to a tree of test\ndescriptors. In essence the tree of test descriptors are a view on the test\nplan. So suppose the discovery requests produces this test plan:\n\n```\nJUnit Jupiter\n|- TestA\n||- method1\n||- method2\n|- TestB\n||- method1\n||- method2\n```\n\nThen that test plan is mapped to a tree of test descriptors like so:\n\n```\nSuiteEngine\n|- ExampleSuite\n||-JUnit Jupiter\n|||- TestA\n||||- method1\n||||- method2\n|||- TestB\n||||- method1\n||||- method2\n````\n\nThe unique identifiers are remapped by pre-pending the unique identifier of the suite. So:\n\n```\njunit-jupiter/TestA/method1() ->  junit-suite/ExampleSuite/junit-jupiter/TestA/method1()\n```\n\nIssue: #744"}, "afterCommit": {"oid": "4cabd7b1df53fab932d892f206dbf00e5b4d74f3", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/4cabd7b1df53fab932d892f206dbf00e5b4d74f3", "committedDate": "2020-12-27T22:50:18Z", "message": "Implement junit-platform-suite-engine\n\nImplements a test engine that allows declarative execution of test suites using\nthe `@Suite` annotation.\n\nInternally the Suite Engine uses the JUnit Platform Launcher. The engine works\nby mapping the `TestIdentifier` used by the launcher to `TestDescriptor` used\nby the engine during discovery and execution.\n\n```\npackage org.junit.platform.suite;\n\nimport org.junit.platform.suite.api.SelectPackages;\n\n@Suite\n@SelectPackages(\"org.junit.suite.testcases\")\nclass SelectPackageSuite {\n\n}\n```\n\nIs equivalent to:\n\n```\nimport org.junit.platform.engine.discovery.DiscoverySelectors;\nimport org.junit.platform.launcher.Launcher;\nimport org.junit.platform.launcher.LauncherDiscoveryRequest;\nimport org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\nimport org.junit.platform.launcher.core.LauncherFactory;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Launcher launcher = LauncherFactory.create();\n        LauncherDiscoveryRequest request = LauncherDiscoveryRequestBuilder.request()\n                .selectors(DiscoverySelectors.selectPackage(\"org.junit.suite.testcases\"))\n                .build();\n        launcher.execute(request);\n    }\n}\n```\n\nThe suite engine converts an annotated class into a discovery request. This\nrequest is executed and the resulting test plan is mapped to a tree of test\ndescriptors. In essence the tree of test descriptors are a view on the test\nplan. So suppose the discovery requests produces this test plan:\n\n```\nJUnit Jupiter\n|- TestA\n||- method1\n||- method2\n|- TestB\n||- method1\n||- method2\n```\n\nThen that test plan is mapped to a tree of test descriptors like so:\n\n```\nSuiteEngine\n|- ExampleSuite\n||-JUnit Jupiter\n|||- TestA\n||||- method1\n||||- method2\n|||- TestB\n||||- method1\n||||- method2\n````\n\nThe unique identifiers are remapped by pre-pending the unique identifier of the suite. So:\n\n```\njunit-jupiter/TestA/method1() ->  junit-suite/ExampleSuite/junit-jupiter/TestA/method1()\n```\n\nIssue: #744"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ddbf914d5be3e93c2ac917a8cba50279cd9c22c9", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/ddbf914d5be3e93c2ac917a8cba50279cd9c22c9", "committedDate": "2021-01-01T18:04:02Z", "message": "Merge remote-tracking branch 'origin/main' into junit-platform-suite-engine"}, "afterCommit": {"oid": "b227adb3283af8b8b40ebab7b979cdd55608f1b2", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/b227adb3283af8b8b40ebab7b979cdd55608f1b2", "committedDate": "2021-01-01T18:13:42Z", "message": "Implement junit-platform-suite-engine\n\nImplements a test engine that allows declarative execution of test suites using\nthe `@Suite` annotation.\n\nInternally the Suite Engine uses the JUnit Platform Launcher. The engine works\nby mapping the `TestIdentifier` used by the launcher to `TestDescriptor` used\nby the engine during discovery and execution.\n\n```\npackage org.junit.platform.suite;\n\nimport org.junit.platform.suite.api.SelectPackages;\n\n@Suite\n@SelectPackages(\"org.junit.suite.testcases\")\nclass SelectPackageSuite {\n\n}\n```\n\nIs equivalent to:\n\n```\nimport org.junit.platform.engine.discovery.DiscoverySelectors;\nimport org.junit.platform.launcher.Launcher;\nimport org.junit.platform.launcher.LauncherDiscoveryRequest;\nimport org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\nimport org.junit.platform.launcher.core.LauncherFactory;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Launcher launcher = LauncherFactory.create();\n        LauncherDiscoveryRequest request = LauncherDiscoveryRequestBuilder.request()\n                .selectors(DiscoverySelectors.selectPackage(\"org.junit.suite.testcases\"))\n                .build();\n        launcher.execute(request);\n    }\n}\n```\n\nThe suite engine converts an annotated class into a discovery request. This\nrequest is executed and the resulting test plan is mapped to a tree of test\ndescriptors. In essence the tree of test descriptors are a view on the test\nplan. So suppose the discovery requests produces this test plan:\n\n```\nJUnit Jupiter\n|- TestA\n||- method1\n||- method2\n|- TestB\n||- method1\n||- method2\n```\n\nThen that test plan is mapped to a tree of test descriptors like so:\n\n```\nSuiteEngine\n|- ExampleSuite\n||-JUnit Jupiter\n|||- TestA\n||||- method1\n||||- method2\n|||- TestB\n||||- method1\n||||- method2\n````\n\nThe unique identifiers are remapped by pre-pending the unique identifier of the suite. So:\n\n```\njunit-jupiter/TestA/method1() ->  junit-suite/ExampleSuite/junit-jupiter/TestA/method1()\n```\n\nIssue: #744"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNjQ0NjY5", "url": "https://github.com/junit-team/junit5/pull/2416#pullrequestreview-560644669", "createdAt": "2021-01-02T16:49:55Z", "commit": {"oid": "b227adb3283af8b8b40ebab7b979cdd55608f1b2"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMlQxNjo0OTo1NlrOINYN3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMlQxNzowNzowN1rOINYTpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDg5OTE2Ng==", "bodyText": "Shouldn't this be runtimeOnly?", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r550899166", "createdAt": "2021-01-02T16:49:56Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-suite/junit-platform-suite.gradle.kts", "diffHunk": "@@ -0,0 +1,13 @@\n+plugins {\n+\t`java-library-conventions`\n+}\n+\n+description = \"JUnit Platform Suite (Aggregator)\"\n+\n+dependencies {\n+\tinternal(platform(project(\":dependencies\")))\n+\n+\tapi(platform(project(\":junit-bom\")))\n+\tapi(project(\":junit-platform-suite-api\"))\n+\tapi(project(\":junit-platform-suite-engine\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b227adb3283af8b8b40ebab7b979cdd55608f1b2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDg5OTIxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn Optional.of(\"org.junit.platform.suite\");\n          \n          \n            \n            \t\treturn Optional.of(\"org.junit.platform\");", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r550899219", "createdAt": "2021-01-02T16:50:52Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-suite-engine/src/main/java/org/junit/platform/suite/engine/SuiteTestEngine.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.suite.engine;\n+\n+import static org.apiguardian.api.API.Status.INTERNAL;\n+\n+import java.util.Optional;\n+import java.util.function.Consumer;\n+\n+import org.apiguardian.api.API;\n+import org.junit.platform.engine.EngineDiscoveryRequest;\n+import org.junit.platform.engine.EngineExecutionListener;\n+import org.junit.platform.engine.ExecutionRequest;\n+import org.junit.platform.engine.TestDescriptor;\n+import org.junit.platform.engine.TestEngine;\n+import org.junit.platform.engine.TestExecutionResult;\n+import org.junit.platform.engine.UniqueId;\n+import org.junit.platform.launcher.Launcher;\n+import org.junit.platform.launcher.TestExecutionListener;\n+import org.junit.platform.launcher.TestPlan;\n+\n+/**\n+ * The JUnit Platform Suite {@link org.junit.platform.engine.TestEngine TestEngine}.\n+ *\n+ * @since 5.8\n+ */\n+@API(status = INTERNAL, since = \"5.8\")\n+public final class SuiteTestEngine implements TestEngine {\n+\n+\t@Override\n+\tpublic String getId() {\n+\t\treturn SuiteEngineDescriptor.ENGINE_ID;\n+\t}\n+\n+\t/**\n+\t * Returns {@code org.junit.platform.suite} as the group ID.\n+\t */\n+\t@Override\n+\tpublic Optional<String> getGroupId() {\n+\t\treturn Optional.of(\"org.junit.platform.suite\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b227adb3283af8b8b40ebab7b979cdd55608f1b2"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDg5OTMzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t// Nested tests are never filtered out", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r550899332", "createdAt": "2021-01-02T16:52:47Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-suite-engine/src/main/java/org/junit/platform/suite/engine/ClassSelectorResolver.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.suite.engine;\n+\n+import static org.junit.platform.engine.support.discovery.SelectorResolver.Resolution.unresolved;\n+import static org.junit.platform.suite.engine.UniqueIdHelper.removePrefix;\n+import static org.junit.platform.suite.engine.UniqueIdHelper.uniqueIdOfSegment;\n+\n+import java.util.Optional;\n+import java.util.function.Predicate;\n+\n+import org.junit.platform.commons.util.ReflectionUtils;\n+import org.junit.platform.engine.TestDescriptor;\n+import org.junit.platform.engine.UniqueId;\n+import org.junit.platform.engine.discovery.ClassSelector;\n+import org.junit.platform.engine.discovery.UniqueIdSelector;\n+import org.junit.platform.engine.support.discovery.SelectorResolver;\n+\n+final class ClassSelectorResolver implements SelectorResolver {\n+\n+\tprivate static final IsSuiteClass isSuiteClass = new IsSuiteClass();\n+\n+\tprivate final Predicate<String> classNameFilter;\n+\tprivate final SuiteConfiguration configuration;\n+\n+\tClassSelectorResolver(Predicate<String> classNameFilter, SuiteConfiguration configuration) {\n+\t\tthis.classNameFilter = classNameFilter;\n+\t\tthis.configuration = configuration;\n+\t}\n+\n+\t@Override\n+\tpublic Resolution resolve(ClassSelector selector, Context context) {\n+\t\tClass<?> testClass = selector.getJavaClass();\n+\t\tif (isSuiteClass.test(testClass)) {\n+\t\t\t// Nested tests are never filtered out", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b227adb3283af8b8b40ebab7b979cdd55608f1b2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDg5OTg2OA==", "bodyText": "\u274c getLegacyReportingName() and getTags() should be overridden.", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r550899868", "createdAt": "2021-01-02T16:58:26Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-suite-engine/src/main/java/org/junit/platform/suite/engine/TestIdentifierAsTestDescriptor.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.suite.engine;\n+\n+import org.junit.platform.engine.ExecutionRequest;\n+import org.junit.platform.engine.TestDescriptor;\n+import org.junit.platform.engine.UniqueId;\n+import org.junit.platform.engine.support.descriptor.AbstractTestDescriptor;\n+import org.junit.platform.launcher.TestIdentifier;\n+import org.junit.platform.launcher.TestPlan;\n+\n+/**\n+ * Represents a {@link TestIdentifier} from a {@link TestPlan} as a\n+ * {@link TestDescriptor} in an {@link ExecutionRequest}.\n+ *\n+ * @see EngineExecutionListenerAdaptor\n+ */\n+final class TestIdentifierAsTestDescriptor extends AbstractTestDescriptor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b227adb3283af8b8b40ebab7b979cdd55608f1b2"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkwMDE3OQ==", "bodyText": "Can we share this with junit-platform-runner?", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r550900179", "createdAt": "2021-01-02T17:02:17Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-suite-engine/src/main/java/org/junit/platform/suite/engine/SuiteLauncherDiscoveryRequestBuilder.java", "diffHunk": "@@ -0,0 +1,182 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.suite.engine;\n+\n+import static java.util.stream.Collectors.toList;\n+import static org.junit.platform.commons.support.AnnotationSupport.findAnnotation;\n+import static org.junit.platform.commons.support.AnnotationSupport.findRepeatableAnnotations;\n+import static org.junit.platform.engine.discovery.ClassNameFilter.excludeClassNamePatterns;\n+import static org.junit.platform.engine.discovery.ClassNameFilter.includeClassNamePatterns;\n+import static org.junit.platform.engine.discovery.DiscoverySelectors.selectClasspathResource;\n+import static org.junit.platform.engine.discovery.DiscoverySelectors.selectDirectory;\n+import static org.junit.platform.engine.discovery.DiscoverySelectors.selectFile;\n+import static org.junit.platform.engine.discovery.PackageNameFilter.excludePackageNames;\n+import static org.junit.platform.engine.discovery.PackageNameFilter.includePackageNames;\n+import static org.junit.platform.launcher.EngineFilter.excludeEngines;\n+import static org.junit.platform.launcher.EngineFilter.includeEngines;\n+import static org.junit.platform.launcher.TagFilter.excludeTags;\n+import static org.junit.platform.launcher.TagFilter.includeTags;\n+\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.junit.platform.engine.UniqueId;\n+import org.junit.platform.engine.discovery.ClassSelector;\n+import org.junit.platform.engine.discovery.ClasspathResourceSelector;\n+import org.junit.platform.engine.discovery.ClasspathRootSelector;\n+import org.junit.platform.engine.discovery.DiscoverySelectors;\n+import org.junit.platform.engine.discovery.FilePosition;\n+import org.junit.platform.engine.discovery.FileSelector;\n+import org.junit.platform.engine.discovery.ModuleSelector;\n+import org.junit.platform.engine.discovery.PackageSelector;\n+import org.junit.platform.engine.discovery.UriSelector;\n+import org.junit.platform.launcher.LauncherDiscoveryRequest;\n+import org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\n+import org.junit.platform.suite.api.Configuration;\n+import org.junit.platform.suite.api.ExcludeClassNamePatterns;\n+import org.junit.platform.suite.api.ExcludeEngines;\n+import org.junit.platform.suite.api.ExcludePackages;\n+import org.junit.platform.suite.api.ExcludeTags;\n+import org.junit.platform.suite.api.IncludeClassNamePatterns;\n+import org.junit.platform.suite.api.IncludeEngines;\n+import org.junit.platform.suite.api.IncludePackages;\n+import org.junit.platform.suite.api.IncludeTags;\n+import org.junit.platform.suite.api.SelectClasses;\n+import org.junit.platform.suite.api.SelectClasspathResource;\n+import org.junit.platform.suite.api.SelectClasspathRoots;\n+import org.junit.platform.suite.api.SelectDirectories;\n+import org.junit.platform.suite.api.SelectFile;\n+import org.junit.platform.suite.api.SelectModules;\n+import org.junit.platform.suite.api.SelectPackages;\n+import org.junit.platform.suite.api.SelectUris;\n+\n+final class SuiteLauncherDiscoveryRequestBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b227adb3283af8b8b40ebab7b979cdd55608f1b2"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkwMDY0Ng==", "bodyText": "We should use the java-test-fixtures Gradle plugin and move the two sample packages to the testFixtures source set like we do in junit-vintage-engine.", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r550900646", "createdAt": "2021-01-02T17:07:07Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-suite-engine/src/test/java/org/junit/platform/suite/engine/testsuites/SuiteSuite.java", "diffHunk": "@@ -0,0 +1,20 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.suite.engine.testsuites;\n+\n+import org.junit.platform.suite.api.SelectClasses;\n+import org.junit.platform.suite.api.Suite;\n+\n+@Suite\n+@SelectClasses(SelectClassesSuite.class)\n+public class SuiteSuite {\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b227adb3283af8b8b40ebab7b979cdd55608f1b2"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08feabb0fa201c21d9667adbfc26098bf25c98d9", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/08feabb0fa201c21d9667adbfc26098bf25c98d9", "committedDate": "2021-01-02T20:46:30Z", "message": "Use test-fixtures plugin for test fixtures"}, "afterCommit": {"oid": "a32923aecb8aed5e8bd27c86dec7c54bde3fdfe2", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/a32923aecb8aed5e8bd27c86dec7c54bde3fdfe2", "committedDate": "2021-01-03T11:43:40Z", "message": "Use test-fixtures plugin for test fixtures"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "62a43e08860ead2525777a70642eeac298adde05", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/62a43e08860ead2525777a70642eeac298adde05", "committedDate": "2021-01-03T13:56:23Z", "message": "Fix tests on java 15"}, "afterCommit": {"oid": "fd64804a9f4d4fa74ec026b067ba001cb0076a35", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/fd64804a9f4d4fa74ec026b067ba001cb0076a35", "committedDate": "2021-01-03T16:40:35Z", "message": "WIP: Pass parentId along with discovery selection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNzEwODY2", "url": "https://github.com/junit-team/junit5/pull/2416#pullrequestreview-560710866", "createdAt": "2021-01-03T16:51:59Z", "commit": {"oid": "fd64804a9f4d4fa74ec026b067ba001cb0076a35"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QxNjo1MTo1OVrOINgIoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QxNjo1OTozOVrOINgMDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTAyODg5Nw==", "bodyText": "@marcphilipp wdyt? Would it break the expectation of the LauncherDiscoveryListener to provide the executionId rather then the uniqueEngineId?", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r551028897", "createdAt": "2021-01-03T16:51:59Z", "author": {"login": "mpkorstanje"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/EngineDiscoveryOrchestrator.java", "diffHunk": "@@ -115,13 +119,14 @@ private LauncherDiscoveryResult discoverSafely(LauncherDiscoveryRequest request,\n \t}\n \n \tprivate TestDescriptor discoverEngineRoot(TestEngine testEngine, LauncherDiscoveryRequest request,\n-\t\t\tLauncherDiscoveryListener listener) {\n+\t\t\tLauncherDiscoveryListener listener, UniqueId parentId) {\n \t\tUniqueId uniqueEngineId = UniqueId.forEngine(testEngine.getId());\n+\t\tUniqueId executionId = parentId == null ? uniqueEngineId : parentId.append(uniqueEngineId.getLastSegment()); // TODO: Do better\n \t\ttry {\n-\t\t\tlistener.engineDiscoveryStarted(uniqueEngineId);\n-\t\t\tTestDescriptor engineRoot = testEngine.discover(request, uniqueEngineId);\n+\t\t\tlistener.engineDiscoveryStarted(uniqueEngineId); // TODO: uniqueEngineId ok?\n+\t\t\tTestDescriptor engineRoot = testEngine.discover(request, executionId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd64804a9f4d4fa74ec026b067ba001cb0076a35"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTAyODk5MA==", "bodyText": "I'm surpriced that this isn't already use by test kit.", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r551028990", "createdAt": "2021-01-03T16:53:12Z", "author": {"login": "mpkorstanje"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/EngineIdValidator.java", "diffHunk": "@@ -21,14 +24,15 @@\n /**\n  * @since 1.7\n  */\n-class EngineIdValidator {\n+@API(status = INTERNAL, since = \"1.7\", consumers = \"suite\") //TODO: Why isn't this used in testkit?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd64804a9f4d4fa74ec026b067ba001cb0076a35"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTAyOTc3Mw==", "bodyText": "Could have opened up getEngineTestDescriptors but given  getEngineTestDescriptor needs a matching getTestEngines for the API to be usable I opened up this one instead.", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r551029773", "createdAt": "2021-01-03T16:59:39Z", "author": {"login": "mpkorstanje"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherDiscoveryResult.java", "diffHunk": "@@ -48,7 +48,7 @@ ConfigurationParameters getConfigurationParameters() {\n \t\treturn configurationParameters;\n \t}\n \n-\tCollection<TestEngine> getTestEngines() {\n+\tpublic Collection<TestEngine> getTestEngines() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd64804a9f4d4fa74ec026b067ba001cb0076a35"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eeda3d2490f83f0a472fad716b3ebce742e7106f", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/eeda3d2490f83f0a472fad716b3ebce742e7106f", "committedDate": "2021-01-04T23:01:32Z", "message": "Fixup"}, "afterCommit": {"oid": "84c494efb7c04db1ba55c2acf4d25e6aa7ab0281", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/84c494efb7c04db1ba55c2acf4d25e6aa7ab0281", "committedDate": "2021-01-05T19:58:32Z", "message": "Enable jacoco for suite module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "84c494efb7c04db1ba55c2acf4d25e6aa7ab0281", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/84c494efb7c04db1ba55c2acf4d25e6aa7ab0281", "committedDate": "2021-01-05T19:58:32Z", "message": "Enable jacoco for suite module"}, "afterCommit": {"oid": "9dbd712e37876be9f731062aad120c958b203fda", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/9dbd712e37876be9f731062aad120c958b203fda", "committedDate": "2021-01-05T20:10:42Z", "message": "Enable jacoco for suite module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91b2e7aaaf1d2746d13e39634b7f5024e1b1e393", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/91b2e7aaaf1d2746d13e39634b7f5024e1b1e393", "committedDate": "2021-01-05T20:54:41Z", "message": "Trim tags and manually pretty format discovery request builder"}, "afterCommit": {"oid": "7156feb81209f512f753fa46fc6992ad6c5c0d98", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/7156feb81209f512f753fa46fc6992ad6c5c0d98", "committedDate": "2021-01-05T21:06:20Z", "message": "Trim tags and manually pretty format discovery request builder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7156feb81209f512f753fa46fc6992ad6c5c0d98", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/7156feb81209f512f753fa46fc6992ad6c5c0d98", "committedDate": "2021-01-05T21:06:20Z", "message": "Trim tags and manually pretty format discovery request builder"}, "afterCommit": {"oid": "11165e195e6759c536c69ffe367a7f4cedec61bc", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/11165e195e6759c536c69ffe367a7f4cedec61bc", "committedDate": "2021-01-05T21:22:51Z", "message": "Trim tags and manually pretty format discovery request builder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "11165e195e6759c536c69ffe367a7f4cedec61bc", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/11165e195e6759c536c69ffe367a7f4cedec61bc", "committedDate": "2021-01-05T21:22:51Z", "message": "Trim tags and manually pretty format discovery request builder"}, "afterCommit": {"oid": "52cbe001a5734490a7ee8830cd1e42b6a807d590", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/52cbe001a5734490a7ee8830cd1e42b6a807d590", "committedDate": "2021-01-05T21:46:47Z", "message": "Trim tags and manually pretty format discovery request builder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "52cbe001a5734490a7ee8830cd1e42b6a807d590", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/52cbe001a5734490a7ee8830cd1e42b6a807d590", "committedDate": "2021-01-05T21:46:47Z", "message": "Trim tags and manually pretty format discovery request builder"}, "afterCommit": {"oid": "bfe2cc28eb741a139d0c5776f84c64c4b8e336c0", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/bfe2cc28eb741a139d0c5776f84c64c4b8e336c0", "committedDate": "2021-01-05T21:49:06Z", "message": "Trim patterns and manually pretty format discovery request builder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bfe2cc28eb741a139d0c5776f84c64c4b8e336c0", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/bfe2cc28eb741a139d0c5776f84c64c4b8e336c0", "committedDate": "2021-01-05T21:49:06Z", "message": "Trim patterns and manually pretty format discovery request builder"}, "afterCommit": {"oid": "09aadb6770129c95530092648bfc88c55335657d", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/09aadb6770129c95530092648bfc88c55335657d", "committedDate": "2021-01-09T09:33:03Z", "message": "Trim patterns and manually pretty format discovery request builder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09aadb6770129c95530092648bfc88c55335657d", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/09aadb6770129c95530092648bfc88c55335657d", "committedDate": "2021-01-09T09:33:03Z", "message": "Trim patterns and manually pretty format discovery request builder"}, "afterCommit": {"oid": "58aa333dcf541d6d62ee5ac156835fabc59f1606", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/58aa333dcf541d6d62ee5ac156835fabc59f1606", "committedDate": "2021-01-10T00:10:35Z", "message": "WIP: Doc stuff"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "58aa333dcf541d6d62ee5ac156835fabc59f1606", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/58aa333dcf541d6d62ee5ac156835fabc59f1606", "committedDate": "2021-01-10T00:10:35Z", "message": "WIP: Doc stuff"}, "afterCommit": {"oid": "bd8498ce4a98fe58c7a32a68fc894d7a31dbe0c3", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/bd8498ce4a98fe58c7a32a68fc894d7a31dbe0c3", "committedDate": "2021-01-10T02:48:49Z", "message": "Docs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd8498ce4a98fe58c7a32a68fc894d7a31dbe0c3", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/bd8498ce4a98fe58c7a32a68fc894d7a31dbe0c3", "committedDate": "2021-01-10T02:48:49Z", "message": "Docs"}, "afterCommit": {"oid": "0d048074b8f113cf9edf90a5ace7ec2fd32eb577", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/0d048074b8f113cf9edf90a5ace7ec2fd32eb577", "committedDate": "2021-01-10T02:50:56Z", "message": "Docs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d048074b8f113cf9edf90a5ace7ec2fd32eb577", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/0d048074b8f113cf9edf90a5ace7ec2fd32eb577", "committedDate": "2021-01-10T02:50:56Z", "message": "Docs"}, "afterCommit": {"oid": "94b232de90bbf22a3081036440ee6319313085a2", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/94b232de90bbf22a3081036440ee6319313085a2", "committedDate": "2021-01-10T19:29:21Z", "message": "Document the junit platform suite engine"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0ODk0MTcy", "url": "https://github.com/junit-team/junit5/pull/2416#pullrequestreview-564894172", "createdAt": "2021-01-10T19:40:13Z", "commit": {"oid": "94b232de90bbf22a3081036440ee6319313085a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxOTo0MDoxM1rOIQ65Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxOTo0MDoxM1rOIQ65Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxMjk5OA==", "bodyText": "Both the platform launcher and platform runner only include classes with specific names when no other pattern is provided. In doing so they ignore ExampleTestCase.failingTest which would fail the build. So we have to explicitly configure the include patterns.\nI don't think it is a good idea to repeat this feature in the suite engine. It is a \"hidden\" requirement in addition to the use of the annotations. However I'm also unaware of the rationale for including it in the first place.\nWhat was is reason to only include classes with certain names by default?", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r554612998", "createdAt": "2021-01-10T19:40:13Z", "author": {"login": "mpkorstanje"}, "path": "documentation/src/test/java/example/SuiteDemo.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package example;\n+\n+//tag::user_guide[]\n+import org.junit.platform.suite.api.SelectPackages;\n+import org.junit.platform.suite.api.Suite;\n+import org.junit.platform.suite.api.SuiteDisplayName;\n+\n+@Suite\n+@SuiteDisplayName(\"JUnit Platform Suite Demo\")\n+@SelectPackages(\"example\")\n+//end::user_guide[]\n+@org.junit.platform.suite.api.IncludeClassNamePatterns", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94b232de90bbf22a3081036440ee6319313085a2"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0ODk0Mjcy", "url": "https://github.com/junit-team/junit5/pull/2416#pullrequestreview-564894272", "createdAt": "2021-01-10T19:41:28Z", "commit": {"oid": "94b232de90bbf22a3081036440ee6319313085a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxOTo0MToyOFrOIQ65kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxOTo0MToyOFrOIQ65kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxMzEzNw==", "bodyText": "I've intentionally removed the reference to other test engines. Looking at the current implementations I don't think it is feasible for other test engines to replicate this functionality without using JUnits internals.", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r554613137", "createdAt": "2021-01-10T19:41:28Z", "author": {"login": "mpkorstanje"}, "path": "documentation/src/docs/asciidoc/user-guide/appendix.adoc", "diffHunk": "@@ -50,10 +50,17 @@ artifacts are deployed to Sonatype's {snapshot-repo}[snapshots repository] under\n   `junit-platform-runner`::\n     Runner for executing tests and test suites on the JUnit Platform in a JUnit 4\n     environment. See <<running-tests-junit-platform-runner>> for details.\n+  `junit-platform-suite`::\n+    JUnit Platform Suite artifact that transitively pulls in dependencies on\n+    `junit-platform-suite-api`, `junit-platfomr-suite-engine` for simplified\n+    dependency management in build tools such as Gradle and Maven.\n   `junit-platform-suite-api`::\n     Annotations for configuring test suites on the JUnit Platform. Supported by the\n-    <<running-tests-junit-platform-runner,JUnitPlatform runner>> and possibly by\n-    third-party `TestEngine` implementations.\n+    <<junit-platform-suite-engine,JUnit Platform Suite Engine>> and\n+    <<running-tests-junit-platform-runner,JUnitPlatform runner>>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94b232de90bbf22a3081036440ee6319313085a2"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0ODk0NDE4", "url": "https://github.com/junit-team/junit5/pull/2416#pullrequestreview-564894418", "createdAt": "2021-01-10T19:43:17Z", "commit": {"oid": "697db7c78603a77189d9408a5af0d23deb9fc079"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxOTo0MzoxN1rOIQ66Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxOTo0MzoxN1rOIQ66Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxMzM1MQ==", "bodyText": "The usage of consumers is rather inconsistent. What is the preferred usage?\n@API(status = EXPERIMENTAL, since = \"1.3\", consumers = \"org.junit.platform.engine.support.hierarchical\")\n@API(status = INTERNAL, since = \"5.8\", consumers = \"org.junit.vintage.**\")\n@API(status = INTERNAL, since = \"1.7\", consumers = { \"testkit\", \"suite\" })", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r554613351", "createdAt": "2021-01-10T19:43:17Z", "author": {"login": "mpkorstanje"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/EngineDiscoveryOrchestrator.java", "diffHunk": "@@ -45,7 +48,7 @@\n  *\n  * @since 1.7\n  */\n-@API(status = INTERNAL, since = \"1.7\", consumers = \"testkit\")\n+@API(status = INTERNAL, since = \"1.7\", consumers = { \"testkit\", \"suite\" })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "697db7c78603a77189d9408a5af0d23deb9fc079"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0ODk0NzEz", "url": "https://github.com/junit-team/junit5/pull/2416#pullrequestreview-564894713", "createdAt": "2021-01-10T19:46:57Z", "commit": {"oid": "697db7c78603a77189d9408a5af0d23deb9fc079"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxOTo0Njo1N1rOIQ68Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxOTo0Njo1N1rOIQ68Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxMzgwMw==", "bodyText": "Pruning the test engines is necessary because their test descriptors no longer root containers. This results in them being pruned when added as children to the parent engine. However because the LauncherDiscoveryResult is executed as a whole events for these empty test engine are still emitted resulting exceptions when trying to look up these nodes in in the test plan.\nI'm not sure where and if I should convey this information.\nPruning here also avoids the need to open up the LauncherDiscoveryResult more.", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r554613803", "createdAt": "2021-01-10T19:46:57Z", "author": {"login": "mpkorstanje"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/EngineDiscoveryOrchestrator.java", "diffHunk": "@@ -72,18 +75,40 @@ public EngineDiscoveryOrchestrator(Iterable<TestEngine> testEngines,\n \t * {@linkplain TestDescriptor#prune() prunes} the resulting test tree.\n \t */\n \tpublic LauncherDiscoveryResult discover(LauncherDiscoveryRequest request, Phase phase) {\n+\t\tMap<TestEngine, TestDescriptor> result = discover(request, phase, UniqueId::forEngine);\n+\t\treturn new LauncherDiscoveryResult(result, request.getConfigurationParameters());\n+\t}\n+\n+\t/**\n+\t * Discovers tests for the supplied request in the supplied phase using the\n+\t * configured test engines.\n+\t *\n+\t * <p>Applies {@linkplain org.junit.platform.launcher.EngineFilter engine\n+\t * filters} and {@linkplain PostDiscoveryFilter post-discovery filters} and\n+\t * {@linkplain TestDescriptor#prune() prunes} the resulting test tree.\n+\t *\n+\t * Additionally test engines without tests are pruned from from the discovery\n+\t * result and the engines unique id will be prefixed with {@code parentId}.\n+\t */\n+\tpublic LauncherDiscoveryResult discover(LauncherDiscoveryRequest request, Phase phase, UniqueId parentId) {\n+\t\tMap<TestEngine, TestDescriptor> result = discover(request, phase, parentId::appendEngine);\n+\t\treturn new LauncherDiscoveryResult(pruneEngines(result), request.getConfigurationParameters());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "697db7c78603a77189d9408a5af0d23deb9fc079"}, "originalPosition": 57}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94b232de90bbf22a3081036440ee6319313085a2", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/94b232de90bbf22a3081036440ee6319313085a2", "committedDate": "2021-01-10T19:29:21Z", "message": "Document the junit platform suite engine"}, "afterCommit": {"oid": "bc71101989a5d66e42dfbe12ffcf684d2111e8b8", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/bc71101989a5d66e42dfbe12ffcf684d2111e8b8", "committedDate": "2021-01-10T19:59:21Z", "message": "Document the junit platform suite engine"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc71101989a5d66e42dfbe12ffcf684d2111e8b8", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/bc71101989a5d66e42dfbe12ffcf684d2111e8b8", "committedDate": "2021-01-10T19:59:21Z", "message": "Document the junit platform suite engine"}, "afterCommit": {"oid": "78fca289c4312a67b41de3140dfbb4e2c8cae499", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/78fca289c4312a67b41de3140dfbb4e2c8cae499", "committedDate": "2021-01-10T20:00:14Z", "message": "Document the junit platform suite engine"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0ODk1OTgy", "url": "https://github.com/junit-team/junit5/pull/2416#pullrequestreview-564895982", "createdAt": "2021-01-10T20:03:39Z", "commit": {"oid": "78fca289c4312a67b41de3140dfbb4e2c8cae499"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQyMDowMzozOVrOIQ7DQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQyMDowMzozOVrOIQ7DQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxNTYxNg==", "bodyText": "This image is becoming quite crowded now. I'm not sure how to improve it.", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r554615616", "createdAt": "2021-01-10T20:03:39Z", "author": {"login": "mpkorstanje"}, "path": "documentation/src/docs/asciidoc/user-guide/appendix.adoc", "diffHunk": "@@ -199,6 +208,12 @@ runner ..> launcher\n runner ..> suite_api\n runner ..> junit4\n \n+suite ..> suite_api\n+suite ..> suite_engine\n+\n+suite_engine ..> launcher\n+suite_engine ..> suite_api", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78fca289c4312a67b41de3140dfbb4e2c8cae499"}, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5813e66ea7163f315836acacb3e58090d1960a2", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/f5813e66ea7163f315836acacb3e58090d1960a2", "committedDate": "2021-01-10T20:43:52Z", "message": "Use more distance for cross package connections"}, "afterCommit": {"oid": "a36f3ac3c1f14b37781635c49ffad0f5e451e05b", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/a36f3ac3c1f14b37781635c49ffad0f5e451e05b", "committedDate": "2021-01-16T01:48:59Z", "message": "Explain that test descriptors in the discovery result can be used as non-root"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "153b3488d7b4b5ea253c8378a17764f392db9b0f", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/153b3488d7b4b5ea253c8378a17764f392db9b0f", "committedDate": "2021-01-17T15:51:31Z", "message": "Implement junit-platform-suite-engine\n\nImplements a test engine that allows declarative execution of test suites using\nthe `@Suite` annotation.\n\nInternally the Suite Engine uses the JUnit Platform Launcher. The engine works\nby mapping the `TestIdentifier` used by the launcher to `TestDescriptor` used\nby the engine during discovery and execution.\n\n```\npackage org.junit.platform.suite;\n\nimport org.junit.platform.suite.api.SelectPackages;\n\n@Suite\n@SelectPackages(\"org.junit.suite.testcases\")\nclass SelectPackageSuite {\n\n}\n```\n\nIs equivalent to:\n\n```\nimport org.junit.platform.engine.discovery.DiscoverySelectors;\nimport org.junit.platform.launcher.Launcher;\nimport org.junit.platform.launcher.LauncherDiscoveryRequest;\nimport org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\nimport org.junit.platform.launcher.core.LauncherFactory;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Launcher launcher = LauncherFactory.create();\n        LauncherDiscoveryRequest request = LauncherDiscoveryRequestBuilder.request()\n                .selectors(DiscoverySelectors.selectPackage(\"org.junit.suite.testcases\"))\n                .build();\n        launcher.execute(request);\n    }\n}\n```\n\nThe suite engine converts an annotated class into a discovery request. This\nrequest is executed and the resulting test plan is mapped to a tree of test\ndescriptors. In essence the tree of test descriptors are a view on the test\nplan. So suppose the discovery requests produces this test plan:\n\n```\nJUnit Jupiter\n|- TestA\n||- method1\n||- method2\n|- TestB\n||- method1\n||- method2\n```\n\nThen that test plan is mapped to a tree of test descriptors like so:\n\n```\nSuiteEngine\n|- ExampleSuite\n||-JUnit Jupiter\n|||- TestA\n||||- method1\n||||- method2\n|||- TestB\n||||- method1\n||||- method2\n````\n\nThe unique identifiers are remapped by pre-pending the unique identifier of the suite. So:\n\n```\njunit-jupiter/TestA/method1() ->  junit-suite/ExampleSuite/junit-jupiter/TestA/method1()\n```\n\nIssue: #744"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd009acaf37a518d208a4d69be02270f8dc33b25", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/dd009acaf37a518d208a4d69be02270f8dc33b25", "committedDate": "2021-01-17T15:51:31Z", "message": "Apply review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7ad80f11883bfa21e24e5d48a60f2e9f46f4a6a", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/c7ad80f11883bfa21e24e5d48a60f2e9f46f4a6a", "committedDate": "2021-01-17T15:51:31Z", "message": "Pass parentId along with discovery selection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a82d55038486d9ea210c9c7b0a23a7fa33f7ac09", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/a82d55038486d9ea210c9c7b0a23a7fa33f7ac09", "committedDate": "2021-01-17T15:51:31Z", "message": "Document the junit platform suite engine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e21db43323dd1bc3318869ff154de6fb0dbaaf33", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/e21db43323dd1bc3318869ff154de6fb0dbaaf33", "committedDate": "2021-01-17T15:51:31Z", "message": "Use more distance for cross package connections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30379d76a8aa6057ce4bf08c69c65d2d2672994f", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/30379d76a8aa6057ce4bf08c69c65d2d2672994f", "committedDate": "2021-01-17T15:51:31Z", "message": "Explain that test descriptors in the discovery result can be used as non-root"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a15714a08f71ea3b22427c60ff3611a01e60019", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/9a15714a08f71ea3b22427c60ff3611a01e60019", "committedDate": "2021-01-17T15:51:31Z", "message": "Reference correct group id in java doc"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d23cf1d3bcf72673d3a15618eb2e1dae155f7c77", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/d23cf1d3bcf72673d3a15618eb2e1dae155f7c77", "committedDate": "2021-01-16T01:52:08Z", "message": "Reference correct group id in java doc"}, "afterCommit": {"oid": "9a15714a08f71ea3b22427c60ff3611a01e60019", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/9a15714a08f71ea3b22427c60ff3611a01e60019", "committedDate": "2021-01-17T15:51:31Z", "message": "Reference correct group id in java doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5d816d7468c1a1e06e79d95fef4ca0af24f144c", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/d5d816d7468c1a1e06e79d95fef4ca0af24f144c", "committedDate": "2021-01-17T17:20:32Z", "message": "Spotless"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "afa9d9060c22b35bab1b9f984ed3d55284e019f8", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/afa9d9060c22b35bab1b9f984ed3d55284e019f8", "committedDate": "2021-01-17T17:07:02Z", "message": "Spotless"}, "afterCommit": {"oid": "d5d816d7468c1a1e06e79d95fef4ca0af24f144c", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/d5d816d7468c1a1e06e79d95fef4ca0af24f144c", "committedDate": "2021-01-17T17:20:32Z", "message": "Spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "354a47b9b44f9bfddfcd1c0dc4e3f837b0baf6dd", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/354a47b9b44f9bfddfcd1c0dc4e3f837b0baf6dd", "committedDate": "2021-01-30T14:40:28Z", "message": "Merge remote-tracking branch 'origin/main' into junit-platform-suite-engine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9e76fbd037aecc7e19825e55c759b3955c0051c", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/c9e76fbd037aecc7e19825e55c759b3955c0051c", "committedDate": "2021-01-30T14:46:40Z", "message": "Consistently use fqn package names in @API(consumer) field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3662638a3d48733a428f5a62c183fbb509b14a59", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/3662638a3d48733a428f5a62c183fbb509b14a59", "committedDate": "2021-01-30T15:10:15Z", "message": "Fix warnings on OpenJDK 17."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07025f83f0e1ff5097cf4a192bc40d1b9b3625c3", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/07025f83f0e1ff5097cf4a192bc40d1b9b3625c3", "committedDate": "2021-01-30T15:01:21Z", "message": "Fix warnings on OpenJDK 17."}, "afterCommit": {"oid": "3662638a3d48733a428f5a62c183fbb509b14a59", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/3662638a3d48733a428f5a62c183fbb509b14a59", "committedDate": "2021-01-30T15:10:15Z", "message": "Fix warnings on OpenJDK 17."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a6c97c9ebb5a578d0d16d04c253232a8a82b6ad", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/1a6c97c9ebb5a578d0d16d04c253232a8a82b6ad", "committedDate": "2021-01-30T16:32:35Z", "message": "Move selector variations to DiscoverySelectors\n\nDropped SelectClasspathRoots; it doesn't make sense inside an annotation based engine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "757977ebd0181f29fd778a780ea0a5fe1c0df558", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/757977ebd0181f29fd778a780ea0a5fe1c0df558", "committedDate": "2021-01-30T17:59:38Z", "message": "Reduce repetition"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c252a9281c637faf641bc987e07677e9e049f5d", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/1c252a9281c637faf641bc987e07677e9e049f5d", "committedDate": "2021-01-30T20:32:27Z", "message": "Remove duplication from suite-api-documentation"}, "afterCommit": {"oid": "e5e5a925c771ed7bc525db64053f6b020d8f487f", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/e5e5a925c771ed7bc525db64053f6b020d8f487f", "committedDate": "2021-01-30T20:38:56Z", "message": "Remove duplication from suite-api-documentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5ODI4MDcw", "url": "https://github.com/junit-team/junit5/pull/2416#pullrequestreview-579828070", "createdAt": "2021-01-30T23:28:07Z", "commit": {"oid": "37230ccccbf8d699a665950161fce4e0c93fe515"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0zMFQyMzoyODowOFrOIdDbtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0zMFQyMzoyODowOFrOIdDbtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzMzNTg2Mw==", "bodyText": "What about meta-annotations?", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r567335863", "createdAt": "2021-01-30T23:28:08Z", "author": {"login": "mpkorstanje"}, "path": "junit-platform-runner/src/main/java/org/junit/platform/runner/JUnitPlatform.java", "diffHunk": "@@ -145,160 +157,23 @@ private JUnitPlatformTestTree generateTestTree(LauncherDiscoveryRequest discover\n \t}\n \n \tprivate LauncherDiscoveryRequest createDiscoveryRequest() {\n-\t\tList<DiscoverySelector> selectors = getSelectorsFromAnnotations();\n-\n+\t\tLauncherDiscoveryRequestBuilder requestBuilder = request();\n \t\t// Allows @RunWith(JUnitPlatform.class) to be added to any test case\n-\t\tboolean isSuite = !selectors.isEmpty();\n+\t\tboolean isSuite = isSuite();\n \t\tif (!isSuite) {\n-\t\t\tselectors.add(selectClass(this.testClass));\n+\t\t\trequestBuilder.selectors(selectClass(this.testClass));\n \t\t}\n \n-\t\tLauncherDiscoveryRequestBuilder requestBuilder = request().selectors(selectors);\n-\t\taddFiltersFromAnnotations(requestBuilder, isSuite);\n-\t\treturn requestBuilder.build();\n-\t}\n-\n-\tprivate void addFiltersFromAnnotations(LauncherDiscoveryRequestBuilder requestBuilder, boolean isSuite) {\n-\t\taddIncludeClassNamePatternFilter(requestBuilder, isSuite);\n-\t\taddExcludeClassNamePatternFilter(requestBuilder);\n-\n-\t\taddIncludePackagesFilter(requestBuilder);\n-\t\taddExcludePackagesFilter(requestBuilder);\n-\n-\t\taddIncludedTagsFilter(requestBuilder);\n-\t\taddExcludedTagsFilter(requestBuilder);\n-\n-\t\taddIncludedEnginesFilter(requestBuilder);\n-\t\taddExcludedEnginesFilter(requestBuilder);\n-\t}\n-\n-\tprivate List<DiscoverySelector> getSelectorsFromAnnotations() {\n-\t\tList<DiscoverySelector> selectors = new ArrayList<>();\n-\n-\t\tselectors.addAll(transform(getSelectedClasses(), DiscoverySelectors::selectClass));\n-\t\tselectors.addAll(transform(getSelectedPackageNames(), DiscoverySelectors::selectPackage));\n-\n-\t\treturn selectors;\n-\t}\n-\n-\tprivate <T> List<DiscoverySelector> transform(T[] sourceElements, Function<T, DiscoverySelector> transformer) {\n-\t\treturn stream(sourceElements).map(transformer).collect(toList());\n-\t}\n-\n-\tprivate void addIncludeClassNamePatternFilter(LauncherDiscoveryRequestBuilder requestBuilder, boolean isSuite) {\n-\t\tString[] patterns = getIncludeClassNamePatterns(isSuite);\n-\t\tif (patterns.length > 0) {\n-\t\t\trequestBuilder.filters(includeClassNamePatterns(patterns));\n-\t\t}\n-\t}\n-\n-\tprivate void addExcludeClassNamePatternFilter(LauncherDiscoveryRequestBuilder requestBuilder) {\n-\t\tString[] patterns = getExcludeClassNamePatterns();\n-\t\tif (patterns.length > 0) {\n-\t\t\trequestBuilder.filters(excludeClassNamePatterns(patterns));\n-\t\t}\n-\t}\n-\n-\tprivate void addIncludePackagesFilter(LauncherDiscoveryRequestBuilder requestBuilder) {\n-\t\tString[] includedPackages = getIncludedPackages();\n-\t\tif (includedPackages.length > 0) {\n-\t\t\trequestBuilder.filters(includePackageNames(includedPackages));\n-\t\t}\n-\t}\n-\n-\tprivate void addExcludePackagesFilter(LauncherDiscoveryRequestBuilder requestBuilder) {\n-\t\tString[] excludedPackages = getExcludedPackages();\n-\t\tif (excludedPackages.length > 0) {\n-\t\t\trequestBuilder.filters(excludePackageNames(excludedPackages));\n-\t\t}\n-\t}\n-\n-\tprivate void addIncludedTagsFilter(LauncherDiscoveryRequestBuilder requestBuilder) {\n-\t\tString[] includedTags = getIncludedTags();\n-\t\tif (includedTags.length > 0) {\n-\t\t\trequestBuilder.filters(includeTags(includedTags));\n-\t\t}\n-\t}\n-\n-\tprivate void addExcludedTagsFilter(LauncherDiscoveryRequestBuilder requestBuilder) {\n-\t\tString[] excludedTags = getExcludedTags();\n-\t\tif (excludedTags.length > 0) {\n-\t\t\trequestBuilder.filters(excludeTags(excludedTags));\n-\t\t}\n-\t}\n-\n-\tprivate void addIncludedEnginesFilter(LauncherDiscoveryRequestBuilder requestBuilder) {\n-\t\tString[] engineIds = getIncludedEngineIds();\n-\t\tif (engineIds.length > 0) {\n-\t\t\trequestBuilder.filters(includeEngines(engineIds));\n-\t\t}\n-\t}\n-\n-\tprivate void addExcludedEnginesFilter(LauncherDiscoveryRequestBuilder requestBuilder) {\n-\t\tString[] engineIds = getExcludedEngineIds();\n-\t\tif (engineIds.length > 0) {\n-\t\t\trequestBuilder.filters(excludeEngines(engineIds));\n-\t\t}\n-\t}\n-\n-\tprivate Class<?>[] getSelectedClasses() {\n-\t\treturn getValueFromAnnotation(SelectClasses.class, SelectClasses::value, EMPTY_CLASS_ARRAY);\n-\t}\n-\n-\tprivate String[] getSelectedPackageNames() {\n-\t\treturn getValueFromAnnotation(SelectPackages.class, SelectPackages::value, EMPTY_STRING_ARRAY);\n-\t}\n-\n-\tprivate String[] getIncludedPackages() {\n-\t\treturn getValueFromAnnotation(IncludePackages.class, IncludePackages::value, EMPTY_STRING_ARRAY);\n-\t}\n-\n-\tprivate String[] getExcludedPackages() {\n-\t\treturn getValueFromAnnotation(ExcludePackages.class, ExcludePackages::value, EMPTY_STRING_ARRAY);\n-\t}\n-\n-\tprivate String[] getIncludedTags() {\n-\t\treturn getValueFromAnnotation(IncludeTags.class, IncludeTags::value, EMPTY_STRING_ARRAY);\n-\t}\n-\n-\tprivate String[] getExcludedTags() {\n-\t\treturn getValueFromAnnotation(ExcludeTags.class, ExcludeTags::value, EMPTY_STRING_ARRAY);\n-\t}\n-\n-\tprivate String[] getIncludedEngineIds() {\n-\t\treturn getValueFromAnnotation(IncludeEngines.class, IncludeEngines::value, EMPTY_STRING_ARRAY);\n-\t}\n-\n-\tprivate String[] getExcludedEngineIds() {\n-\t\treturn getValueFromAnnotation(ExcludeEngines.class, ExcludeEngines::value, EMPTY_STRING_ARRAY);\n-\t}\n-\n-\tprivate String[] getIncludeClassNamePatterns(boolean isSuite) {\n-\t\tString[] patterns = trimmed(getValueFromAnnotation(IncludeClassNamePatterns.class,\n-\t\t\tIncludeClassNamePatterns::value, EMPTY_STRING_ARRAY));\n-\t\tif (patterns.length == 0 && isSuite) {\n-\t\t\treturn STANDARD_INCLUDE_PATTERN_ARRAY;\n-\t\t}\n-\t\treturn patterns;\n-\t}\n-\n-\tprivate String[] getExcludeClassNamePatterns() {\n-\t\treturn trimmed(getValueFromAnnotation(ExcludeClassNamePatterns.class, ExcludeClassNamePatterns::value,\n-\t\t\tEMPTY_STRING_ARRAY));\n-\t}\n-\n-\tprivate String[] trimmed(String[] patterns) {\n-\t\tif (patterns.length == 0) {\n-\t\t\treturn patterns;\n-\t\t}\n-\t\treturn Arrays.stream(patterns).filter(StringUtils::isNotBlank).map(String::trim).toArray(String[]::new);\n+\t\t// @formatter:off\n+\t\treturn SuiteLauncherDiscoveryRequestBuilder.request(requestBuilder)\n+\t\t\t\t.filterStandardClassNamePatterns(isSuite)\n+\t\t\t\t.suite(this.testClass)\n+\t\t\t\t.build();\n+\t\t// @formatter:on\n \t}\n \n-\tprivate <A extends Annotation, V> V getValueFromAnnotation(Class<A> annotationClass, Function<A, V> extractor,\n-\t\t\tV defaultValue) {\n-\n-\t\tA annotation = this.testClass.getAnnotation(annotationClass);\n-\t\treturn (annotation != null ? extractor.apply(annotation) : defaultValue);\n+\tprivate boolean isSuite() {\n+\t\treturn SUITE_ANNOTATIONS.stream().anyMatch(annotation -> testClass.getAnnotation(annotation) != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37230ccccbf8d699a665950161fce4e0c93fe515"}, "originalPosition": 275}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5ODI4MjIw", "url": "https://github.com/junit-team/junit5/pull/2416#pullrequestreview-579828220", "createdAt": "2021-01-30T23:31:50Z", "commit": {"oid": "37230ccccbf8d699a665950161fce4e0c93fe515"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0zMFQyMzozMTo1MFrOIdDc9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0zMFQyMzozMTo1MFrOIdDc9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzMzNjE4Mg==", "bodyText": "What about meta annotations?", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r567336182", "createdAt": "2021-01-30T23:31:50Z", "author": {"login": "mpkorstanje"}, "path": "documentation/src/docs/asciidoc/user-guide/junit-platform-suite-engine.adoc", "diffHunk": "@@ -0,0 +1,41 @@\n+[[junit-platform-suite-engine]]\n+=== JUnit Platform Suite Engine\n+\n+The JUnit Platform supports declarative definition and execution of suites of tests from\n+_any_ test engine using the Junit Platform.\n+\n+==== Setup\n+\n+In addition to _at least one_ other test engine, you need the following artifacts and\n+their dependencies on the classpath. See <<dependency-metadata>> for details regarding\n+group IDs, artifact IDs, and versions.\n+\n+===== Explicit Dependencies\n+\n+* `junit-platform-suite-api` in _test_ scope\n+* `junit-platform-suite-engine` in _test runtime_ scope: implementation of the\n+                                `TestEngine` API for the declarative Junit Platform\n+                                Suites\n+\n+===== Transitive Dependencies\n+\n+* `junit-platform-launcher` in _test_ scope\n+* `junit-platform-engine` in _test_ scope\n+* `junit-platform-commons` in _test_ scope\n+* `opentest4j` in _test_ scope\n+\n+==== Test Suite\n+\n+By annotating a class with `@Suite` it is marked as a test suite on the JUnit Platform.\n+As seen in the following example, selector and filter annotations can then be used to\n+control the contents of the suite.\n+\n+[source,java,indent=0]\n+----\n+include::{testDir}/example/SuiteDemo.java[tags=user_guide]\n+----\n+\n+.Additional Configuration Options", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37230ccccbf8d699a665950161fce4e0c93fe515"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5ODMyMjA0", "url": "https://github.com/junit-team/junit5/pull/2416#pullrequestreview-579832204", "createdAt": "2021-01-30T23:35:25Z", "commit": {"oid": "37230ccccbf8d699a665950161fce4e0c93fe515"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0zMFQyMzozNToyNlrOIdDd0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0zMFQyMzozNToyNlrOIdDd0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzMzNjQwMg==", "bodyText": "For consistency.", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r567336402", "createdAt": "2021-01-30T23:35:26Z", "author": {"login": "mpkorstanje"}, "path": "junit-platform-engine/src/main/java/org/junit/platform/engine/discovery/DiscoverySelectors.java", "diffHunk": "@@ -343,8 +343,8 @@ public static ModuleSelector selectModule(String moduleName) {\n \t */\n \t@API(status = EXPERIMENTAL, since = \"1.1\")\n \tpublic static List<ModuleSelector> selectModules(Set<String> moduleNames) {\n-\t\tPreconditions.notNull(moduleNames, \"moduleNames must not be null\");\n-\t\tPreconditions.containsNoNullElements(moduleNames, \"individual module name must not be null\");\n+\t\tPreconditions.notNull(moduleNames, \"Module names must not be null\");\n+\t\tPreconditions.containsNoNullElements(moduleNames, \"Individual module name must not be null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37230ccccbf8d699a665950161fce4e0c93fe515"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5ODM5NzY0", "url": "https://github.com/junit-team/junit5/pull/2416#pullrequestreview-579839764", "createdAt": "2021-01-30T23:47:45Z", "commit": {"oid": "450ff2024d6f692e51855d98b77b1b4c6a4e2ed7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0zMFQyMzo0Nzo0NVrOIdDqUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0zMFQyMzo0Nzo0NVrOIdDqUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzMzOTYwMw==", "bodyText": "@Suite\n@SelectPackages(\"org.junit.suite.testcases\")\nThis is starting to look kinda redundant. A suite without selectors doesn't work anyway. Though on the other hand, it would make it harder if multiple suite engines were used in the same project.\nSelectClasses\nSelectClasspathResource\nSelectDirectories\nSelectFile\nSelectFile\nSelectModules.\nSelectPackages\nSelectUris", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r567339603", "createdAt": "2021-01-30T23:47:45Z", "author": {"login": "mpkorstanje"}, "path": "junit-platform-suite-engine/src/main/java/org/junit/platform/suite/engine/IsSuiteClass.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2015-2021 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.suite.engine;\n+\n+import java.util.function.Predicate;\n+\n+import org.junit.platform.commons.support.AnnotationSupport;\n+import org.junit.platform.suite.api.Suite;\n+\n+final class IsSuiteClass implements Predicate<Class<?>> {\n+\n+\tprivate static final IsPotentialTestContainer isPotentialTestContainer = new IsPotentialTestContainer();\n+\n+\t@Override\n+\tpublic boolean test(Class<?> testClass) {\n+\t\treturn isPotentialTestContainer.test(testClass) && hasSuiteAnnotation(testClass);\n+\t}\n+\n+\tprivate boolean hasSuiteAnnotation(Class<?> testClass) {\n+\t\treturn AnnotationSupport.isAnnotated(testClass, Suite.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "450ff2024d6f692e51855d98b77b1b4c6a4e2ed7"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d8476980f25327e9861d2842d63d3bc8288e536", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/3d8476980f25327e9861d2842d63d3bc8288e536", "committedDate": "2021-02-06T14:09:22Z", "message": "Fix release notes"}, "afterCommit": {"oid": "b7e540d874203814ebf41868d7eb8909b030ab13", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/b7e540d874203814ebf41868d7eb8909b030ab13", "committedDate": "2021-02-06T14:13:00Z", "message": "Fix release notes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b7e540d874203814ebf41868d7eb8909b030ab13", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/b7e540d874203814ebf41868d7eb8909b030ab13", "committedDate": "2021-02-06T14:13:00Z", "message": "Fix release notes"}, "afterCommit": {"oid": "a1f12ba7c2f7b0679044cb61c49a4ff4a5a62077", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/a1f12ba7c2f7b0679044cb61c49a4ff4a5a62077", "committedDate": "2021-02-06T14:15:49Z", "message": "Fix release notes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9a1f7b6c56a8ef2a8beec932d10b3701d69e05c", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/f9a1f7b6c56a8ef2a8beec932d10b3701d69e05c", "committedDate": "2021-02-06T14:17:58Z", "message": "Untangle SuiteDiscoveryRequestBuilder from LauncherDiscoveryRequestBuilder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb86ebe8b6f3af5cfd6ee5c78c5bdd38e58e9f48", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/bb86ebe8b6f3af5cfd6ee5c78c5bdd38e58e9f48", "committedDate": "2021-02-06T14:17:58Z", "message": "Use standard include patterns when IncludeClassNamePatterns is omitted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0cb4e2a63a5747fa9893dba1837153c550d5a1e", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/f0cb4e2a63a5747fa9893dba1837153c550d5a1e", "committedDate": "2021-02-06T14:17:58Z", "message": "Reuse SuiteLauncherDiscoveryRequestBuilder through duplication"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a8d843c7e0b5c3cf986de28f2d5d072870f6a18", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/2a8d843c7e0b5c3cf986de28f2d5d072870f6a18", "committedDate": "2021-02-06T14:17:58Z", "message": "Remove duplication from suite-api-documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91137887df04ff6229f9d9b0f0fb8c4fe74a56df", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/91137887df04ff6229f9d9b0f0fb8c4fe74a56df", "committedDate": "2021-02-06T14:17:58Z", "message": "Extract SuiteLauncherDiscoveryRequestBuilder to junit-platform-suite-commons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fabc3a3415f975b02609df400c607f0a4484b6be", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/fabc3a3415f975b02609df400c607f0a4484b6be", "committedDate": "2021-02-06T14:17:58Z", "message": "Add junit-platform-suite-commons to dependency diagram"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5500c67bfc18291df1c54e994072ab00c66eed63", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/5500c67bfc18291df1c54e994072ab00c66eed63", "committedDate": "2021-02-06T14:17:58Z", "message": "Clean up accessors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32fe7e44b8aec59213ec1b0c81abf4444d36d0df", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/32fe7e44b8aec59213ec1b0c81abf4444d36d0df", "committedDate": "2021-02-06T14:17:58Z", "message": "Clean up naming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d9f9d83764cfac7ec9e453ba05773c594ab6c78", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/0d9f9d83764cfac7ec9e453ba05773c594ab6c78", "committedDate": "2021-02-06T14:17:58Z", "message": "Update dependency list in docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e02608b49f15035d6299b386987d27b537bb6406", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/e02608b49f15035d6299b386987d27b537bb6406", "committedDate": "2021-02-06T14:17:58Z", "message": "Support meta annotations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f11f18ed667c828437c6937c9e4e9c29e283320b", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/f11f18ed667c828437c6937c9e4e9c29e283320b", "committedDate": "2021-02-06T14:17:58Z", "message": "Fix update documentation check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa7befad1a3d0ac5446d33a40a0a5f4906c85d18", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/aa7befad1a3d0ac5446d33a40a0a5f4906c85d18", "committedDate": "2021-02-06T14:17:58Z", "message": "Nits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4f4b0d636ffcb5d6f7c99a34b3b1fb2b6ab437f", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/f4f4b0d636ffcb5d6f7c99a34b3b1fb2b6ab437f", "committedDate": "2021-02-06T14:17:58Z", "message": "Nits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f7328aa8feba5788f1d3b915a806f9f3990d93c", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/5f7328aa8feba5788f1d3b915a806f9f3990d93c", "committedDate": "2021-02-06T14:17:58Z", "message": "Use delegation to keep purpose of suite request builder clear"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c59900f49fd81568eb03a66cc5fe58b26a40bba1", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/c59900f49fd81568eb03a66cc5fe58b26a40bba1", "committedDate": "2021-02-06T14:17:58Z", "message": "Add test for meta-annotations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0e92f0ff593af01e6d8beef2b7b4e7b2c8626d8", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/a0e92f0ff593af01e6d8beef2b7b4e7b2c8626d8", "committedDate": "2021-02-06T14:17:58Z", "message": "Fix java doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "659f71c0eba33746392a09f5049bd0be4a569c62", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/659f71c0eba33746392a09f5049bd0be4a569c62", "committedDate": "2021-02-06T14:17:58Z", "message": "Fix release notes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a1f12ba7c2f7b0679044cb61c49a4ff4a5a62077", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/a1f12ba7c2f7b0679044cb61c49a4ff4a5a62077", "committedDate": "2021-02-06T14:15:49Z", "message": "Fix release notes"}, "afterCommit": {"oid": "659f71c0eba33746392a09f5049bd0be4a569c62", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/659f71c0eba33746392a09f5049bd0be4a569c62", "committedDate": "2021-02-06T14:17:58Z", "message": "Fix release notes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbe8cb001d0cef1f5df7e957dcdfacaccede175f", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/dbe8cb001d0cef1f5df7e957dcdfacaccede175f", "committedDate": "2021-02-06T14:27:35Z", "message": "Nits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89dc3d597765ea21e4750b68cd9d353a852dbe77", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/89dc3d597765ea21e4750b68cd9d353a852dbe77", "committedDate": "2021-02-06T14:32:44Z", "message": "Keep apiguardian as a transitive dependency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10cfe8db6b185fec4db9cbddfd0f045ac4d46128", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/10cfe8db6b185fec4db9cbddfd0f045ac4d46128", "committedDate": "2021-02-06T14:35:21Z", "message": "Merge remote-tracking branch 'origin/main' into junit-platform-suite-engine"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1MDIxMDAz", "url": "https://github.com/junit-team/junit5/pull/2416#pullrequestreview-585021003", "createdAt": "2021-02-07T14:36:35Z", "commit": {"oid": "10cfe8db6b185fec4db9cbddfd0f045ac4d46128"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wN1QxNDozNjozNVrOIhJUtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wN1QxNToxODoyMVrOIhJsgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTYyNjY3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tPreconditions.condition(hasTestEngineOtherThenSuiteEngine(testEngines),\n          \n          \n            \n            \t\t\t() -> \"Cannot create SuiteLauncher without at least one other TestEngine; \"\n          \n          \n            \n            \t\t\t\t\t+ \"consider adding an engine implementation JAR to the classpath\");\n          \n          \n            \n            \t\tthis.discoveryOrchestrator = new EngineDiscoveryOrchestrator(testEngines, emptyList());\n          \n          \n            \n            \t}\n          \n          \n            \n            \n          \n          \n            \n            \tprivate boolean hasTestEngineOtherThenSuiteEngine(Set<TestEngine> testEngines) {\n          \n          \n            \n            \t\tPreconditions.condition(hasTestEngineOtherThanSuiteEngine(testEngines),\n          \n          \n            \n            \t\t\t() -> \"Cannot create SuiteLauncher without at least one other TestEngine; \"\n          \n          \n            \n            \t\t\t\t\t+ \"consider adding an engine implementation JAR to the classpath\");\n          \n          \n            \n            \t\tthis.discoveryOrchestrator = new EngineDiscoveryOrchestrator(testEngines, emptyList());\n          \n          \n            \n            \t}\n          \n          \n            \n            \n          \n          \n            \n            \tprivate boolean hasTestEngineOtherThanSuiteEngine(Set<TestEngine> testEngines) {", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r571626679", "createdAt": "2021-02-07T14:36:35Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-suite-engine/src/main/java/org/junit/platform/suite/engine/SuiteLauncher.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2015-2021 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.suite.engine;\n+\n+import static java.util.Collections.emptyList;\n+\n+import java.util.LinkedHashSet;\n+import java.util.Set;\n+\n+import org.junit.platform.commons.util.Preconditions;\n+import org.junit.platform.engine.EngineExecutionListener;\n+import org.junit.platform.engine.TestEngine;\n+import org.junit.platform.engine.UniqueId;\n+import org.junit.platform.launcher.LauncherDiscoveryRequest;\n+import org.junit.platform.launcher.core.EngineDiscoveryOrchestrator;\n+import org.junit.platform.launcher.core.EngineDiscoveryOrchestrator.Phase;\n+import org.junit.platform.launcher.core.EngineExecutionOrchestrator;\n+import org.junit.platform.launcher.core.LauncherDiscoveryResult;\n+import org.junit.platform.launcher.core.ServiceLoaderTestEngineRegistry;\n+\n+class SuiteLauncher {\n+\n+\tprivate final EngineExecutionOrchestrator executionOrchestrator = new EngineExecutionOrchestrator();\n+\tprivate final EngineDiscoveryOrchestrator discoveryOrchestrator;\n+\n+\tstatic SuiteLauncher create() {\n+\t\tSet<TestEngine> engines = new LinkedHashSet<>();\n+\t\tnew ServiceLoaderTestEngineRegistry().loadTestEngines().forEach(engines::add);\n+\t\treturn new SuiteLauncher(engines);\n+\t}\n+\n+\tprivate SuiteLauncher(Set<TestEngine> testEngines) {\n+\t\tPreconditions.condition(hasTestEngineOtherThenSuiteEngine(testEngines),\n+\t\t\t() -> \"Cannot create SuiteLauncher without at least one other TestEngine; \"\n+\t\t\t\t\t+ \"consider adding an engine implementation JAR to the classpath\");\n+\t\tthis.discoveryOrchestrator = new EngineDiscoveryOrchestrator(testEngines, emptyList());\n+\t}\n+\n+\tprivate boolean hasTestEngineOtherThenSuiteEngine(Set<TestEngine> testEngines) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10cfe8db6b185fec4db9cbddfd0f045ac4d46128"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTYyNzExMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Platform Launcher.\n          \n          \n            \n              Platform Launcher.", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r571627111", "createdAt": "2021-02-07T14:39:46Z", "author": {"login": "marcphilipp"}, "path": "documentation/src/docs/asciidoc/release-notes/release-notes-5.8.0-M1.adoc", "diffHunk": "@@ -45,7 +45,9 @@ on GitHub.\n   `LauncherSession` in order to allow for executing global setup and teardown code exactly\n   once via the new `LauncherSessionListener` interface that can be registered via Java\u2019s\n   `{ServiceLoader}` mechanism.\n-\n+* New `junit-platform-suite-engine` to execute declarative test suites using the JUnit\n+Platform Launcher.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10cfe8db6b185fec4db9cbddfd0f045ac4d46128"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTYyOTI5Nw==", "bodyText": "\u2753 Should we rather document to use junit-platform-suite?", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r571629297", "createdAt": "2021-02-07T14:55:43Z", "author": {"login": "marcphilipp"}, "path": "documentation/src/docs/asciidoc/user-guide/junit-platform-suite-engine.adoc", "diffHunk": "@@ -0,0 +1,42 @@\n+[[junit-platform-suite-engine]]\n+=== JUnit Platform Suite Engine\n+\n+The JUnit Platform supports declarative definition and execution of suites of tests from\n+_any_ test engine using the Junit Platform.\n+\n+==== Setup\n+\n+In addition to _at least one_ other test engine, you need the following artifacts and\n+their dependencies on the classpath. See <<dependency-metadata>> for details regarding\n+group IDs, artifact IDs, and versions.\n+\n+===== Explicit Dependencies\n+\n+* `junit-platform-suite-api` in _test_ scope\n+* `junit-platform-suite-engine` in _test runtime_ scope: implementation of the\n+                                `TestEngine` API for the declarative Junit Platform\n+                                Suites", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10cfe8db6b185fec4db9cbddfd0f045ac4d46128"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTYyOTkyNA==", "bodyText": "\u2b55 Does this work?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * {@link Segment#getType type} {@code \"engine\"}.\n          \n          \n            \n            \t * {@link Segment#getType type} {@value ENGINE_SEGMENT_TYPE}.", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r571629924", "createdAt": "2021-02-07T14:59:56Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-engine/src/main/java/org/junit/platform/engine/UniqueId.java", "diffHunk": "@@ -162,6 +163,24 @@ public final UniqueId append(Segment segment) {\n \t\treturn new UniqueId(this.uniqueIdFormat, baseSegments);\n \t}\n \n+\t/**\n+\t * Construct a new {@code UniqueId} by appending a new {@link Segment}, based\n+\t * on the supplied {@code engineId}, to the end of this {@code UniqueId}.\n+\t *\n+\t * <p>This {@code UniqueId} will not be modified.\n+\t *\n+\t * <p>The engine ID will be stored in a {@link Segment} with\n+\t * {@link Segment#getType type} {@code \"engine\"}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10cfe8db6b185fec4db9cbddfd0f045ac4d46128"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTYzMDQ1Mw==", "bodyText": "\u274c Although I don't know of any engine that is completely dynamic, we should call containsTests here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t.filter(entry -> !entry.getValue().getChildren().isEmpty())\n          \n          \n            \n            \t\t\t\t.filter(entry -> TestDescriptor.containsTests(entry.getValue())", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r571630453", "createdAt": "2021-02-07T15:04:41Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/EngineDiscoveryOrchestrator.java", "diffHunk": "@@ -173,6 +202,15 @@ private void logTestDescriptorExclusionReasons(Map<String, List<TestDescriptor>>\n \t\t});\n \t}\n \n+\tprivate Map<TestEngine, TestDescriptor> pruneEngines(Map<TestEngine, TestDescriptor> result) {\n+\t\t// @formatter:off\n+\t\treturn result.entrySet()\n+\t\t\t\t.stream()\n+\t\t\t\t.filter(entry -> !entry.getValue().getChildren().isEmpty())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10cfe8db6b185fec4db9cbddfd0f045ac4d46128"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTYzMDY0Mw==", "bodyText": "\u2753 You opted for brevity here?", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r571630643", "createdAt": "2021-02-07T15:06:03Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-suite-api/src/main/java/org/junit/platform/suite/api/Configuration.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2015-2021 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.suite.api;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Inherited;\n+import java.lang.annotation.Repeatable;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import org.apiguardian.api.API;\n+import org.apiguardian.api.API.Status;\n+\n+/**\n+ * {@code @Configuration} specifies the configuration {@linkplain #key key} and\n+ * {@linkplain #value value} pairs to be added to the discovery request when running\n+ * a test suite on the JUnit Platform.\n+ *\n+ * @since 1.8\n+ * @see Suite\n+ * @see org.junit.platform.runner.JUnitPlatform\n+ * @see org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder#configurationParameter(String, String)\n+ */\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.TYPE)\n+@Inherited\n+@Documented\n+@API(status = Status.EXPERIMENTAL, since = \"1.8\")\n+@Repeatable(Configurations.class)\n+public @interface Configuration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10cfe8db6b185fec4db9cbddfd0f045ac4d46128"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTYzMDk4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * {@code @Suite} with the {@code junit-platform-suite-engine}.\n          \n          \n            \n             * {@link Suite @Suite} with the {@code junit-platform-suite-engine}.", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r571630988", "createdAt": "2021-02-07T15:08:20Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-suite-api/src/main/java/org/junit/platform/suite/api/package-info.java", "diffHunk": "@@ -1,5 +1,13 @@\n /**\n  * Annotations for configuring a <em>test suite</em> on the JUnit Platform.\n+ *\n+ * <h4>JUnit 4 Suite Support</h4>\n+ * <p>Test suites can be run on the JUnit Platform in a JUnit 4 environment via\n+ * {@code @RunWith(JUnitPlatform.class)} with the {@code junit-platform-runner}.\n+ *\n+ * <h4>JUnit 5 Suite Support</h4>\n+ * <p>Test suites can be run on the JUnit Platform in a JUnit 5 environment via\n+ * {@code @Suite} with the {@code junit-platform-suite-engine}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10cfe8db6b185fec4db9cbddfd0f045ac4d46128"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTYzMTc0NA==", "bodyText": "\u274c We shouldn't do this recursively, just for the engine descriptor's direct children.", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r571631744", "createdAt": "2021-02-07T15:13:13Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-suite-engine/src/main/java/org/junit/platform/suite/engine/DiscoverySelectorResolver.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2015-2021 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.suite.engine;\n+\n+import org.junit.platform.engine.EngineDiscoveryRequest;\n+import org.junit.platform.engine.TestDescriptor;\n+import org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolver;\n+\n+final class DiscoverySelectorResolver {\n+\n+\t// @formatter:off\n+\tprivate static final EngineDiscoveryRequestResolver<SuiteEngineDescriptor> resolver = EngineDiscoveryRequestResolver.<SuiteEngineDescriptor>builder()\n+\t\t\t.addClassContainerSelectorResolver(new IsSuiteClass())\n+\t\t\t.addSelectorResolver(context -> new ClassSelectorResolver(context.getClassNameFilter(), context.getEngineDescriptor()))\n+\t\t\t.addTestDescriptorVisitor(context -> DiscoverySelectorResolver::discoverSuite)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10cfe8db6b185fec4db9cbddfd0f045ac4d46128"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTYzMjc3MA==", "bodyText": "Nice, I didn't know about these! \ud83d\udc4d", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r571632770", "createdAt": "2021-02-07T15:18:21Z", "author": {"login": "marcphilipp"}, "path": "documentation/src/docs/asciidoc/user-guide/appendix.adoc", "diffHunk": "@@ -173,15 +183,15 @@ jupiter ..> jupiter_api\n jupiter ..> jupiter_params\n jupiter ..> jupiter_engine\n \n-jupiter_api ..> opentest4j\n-jupiter_api ..> commons\n+jupiter_api ....> opentest4j\n+jupiter_api ...> commons", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10cfe8db6b185fec4db9cbddfd0f045ac4d46128"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d1b7d1a26b1304eb1497691acb92b8712b5b1da", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/2d1b7d1a26b1304eb1497691acb92b8712b5b1da", "committedDate": "2021-02-07T16:19:52Z", "message": "Update junit-platform-suite-api/src/main/java/org/junit/platform/suite/api/package-info.java\n\nCo-authored-by: Marc Philipp <marc@gradle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7749b906fa8bb31b8f028a1c1ad0cdc2e4677d26", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/7749b906fa8bb31b8f028a1c1ad0cdc2e4677d26", "committedDate": "2021-02-07T16:27:51Z", "message": "Update junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/EngineDiscoveryOrchestrator.java\n\nCo-authored-by: Marc Philipp <marc@gradle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01a611a00c810a4ba80445822f9cb0ebd7ee34fc", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/01a611a00c810a4ba80445822f9cb0ebd7ee34fc", "committedDate": "2021-02-07T16:27:51Z", "message": "Update junit-platform-engine/src/main/java/org/junit/platform/engine/UniqueId.java\n\nCo-authored-by: Marc Philipp <marc@gradle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8723325766bd0b7e3a6d380b9db8055962713481", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/8723325766bd0b7e3a6d380b9db8055962713481", "committedDate": "2021-02-07T16:27:51Z", "message": "Update documentation/src/docs/asciidoc/release-notes/release-notes-5.8.0-M1.adoc\n\nCo-authored-by: Marc Philipp <marc@gradle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da654f2a1fb3b42ddde0873fec3cb2394178f38c", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/da654f2a1fb3b42ddde0873fec3cb2394178f38c", "committedDate": "2021-02-07T16:27:51Z", "message": "Update junit-platform-suite-engine/src/main/java/org/junit/platform/suite/engine/SuiteLauncher.java\n\nCo-authored-by: Marc Philipp <marc@gradle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ade1c4889c6d5e32b6481f8f2b267b1141102cb", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/4ade1c4889c6d5e32b6481f8f2b267b1141102cb", "committedDate": "2021-02-07T16:30:43Z", "message": "Rename Configuration to ConfigurationParameter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8fe44a291ab1dfb7fa933e07e225c57d463b93ab", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/8fe44a291ab1dfb7fa933e07e225c57d463b93ab", "committedDate": "2021-02-07T16:22:16Z", "message": "Update junit-platform-suite-engine/src/main/java/org/junit/platform/suite/engine/SuiteLauncher.java\n\nCo-authored-by: Marc Philipp <marc@gradle.com>"}, "afterCommit": {"oid": "4ade1c4889c6d5e32b6481f8f2b267b1141102cb", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/4ade1c4889c6d5e32b6481f8f2b267b1141102cb", "committedDate": "2021-02-07T16:30:43Z", "message": "Rename Configuration to ConfigurationParameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94e47a2d66468829bc1ea6cad18c7b7e5086a8a0", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/94e47a2d66468829bc1ea6cad18c7b7e5086a8a0", "committedDate": "2021-02-07T16:42:24Z", "message": "Only discover test in suit for engines direct descendents"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7bb95529986d856f66b1992ee6158965634558d", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/a7bb95529986d856f66b1992ee6158965634558d", "committedDate": "2021-02-07T17:12:26Z", "message": "Delay prune until after suits have been discovered"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b4a1f30d1293b3102be4459cf42a8a440e3de59", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/6b4a1f30d1293b3102be4459cf42a8a440e3de59", "committedDate": "2021-02-07T17:28:56Z", "message": "Add note about aggregator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9911f665753b5e497e2f014c289c28dfb077fa2", "author": {"user": {"login": "mpkorstanje", "name": "M.P. Korstanje"}}, "url": "https://github.com/junit-team/junit5/commit/b9911f665753b5e497e2f014c289c28dfb077fa2", "committedDate": "2021-02-07T17:30:07Z", "message": "Use note styling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1MDQ5NjYx", "url": "https://github.com/junit-team/junit5/pull/2416#pullrequestreview-585049661", "createdAt": "2021-02-07T18:46:48Z", "commit": {"oid": "94e47a2d66468829bc1ea6cad18c7b7e5086a8a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wN1QxODo0Njo0OFrOIhLqAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wN1QxODo0Njo0OFrOIhLqAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTY2NDg5OA==", "bodyText": "\u2753 Shouldn't this be done before pruning the tree?", "url": "https://github.com/junit-team/junit5/pull/2416#discussion_r571664898", "createdAt": "2021-02-07T18:46:48Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-suite-engine/src/main/java/org/junit/platform/suite/engine/DiscoverySelectorResolver.java", "diffHunk": "@@ -34,6 +33,7 @@ private static void discoverSuite(TestDescriptor descriptor) {\n \n \tvoid resolveSelectors(EngineDiscoveryRequest request, SuiteEngineDescriptor engineDescriptor) {\n \t\tresolver.resolve(request, engineDescriptor);\n+\t\tengineDescriptor.getChildren().forEach(DiscoverySelectorResolver::discoverSuite);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94e47a2d66468829bc1ea6cad18c7b7e5086a8a0"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg2NTI2NjU4", "url": "https://github.com/junit-team/junit5/pull/2416#pullrequestreview-586526658", "createdAt": "2021-02-09T13:11:08Z", "commit": {"oid": "b9911f665753b5e497e2f014c289c28dfb077fa2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3620, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}