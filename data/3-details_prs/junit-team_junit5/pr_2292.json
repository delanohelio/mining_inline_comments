{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NTc0OTg3", "number": 2292, "title": "Add support for local files to CsvFileSource", "bodyText": "In addition to classpath resources, CsvFileSource now supports files\nfrom the local file system.\nResolves #2281.\n\nDefinition of Done\n\n There are no TODOs left in the code\n Method preconditions are checked and documented in the method's Javadoc\n Coding conventions (e.g. for logging) have been followed\n Change is covered by automated tests including corner cases, errors, and exception handling\n Public API has Javadoc and @API annotations\n Change is documented in the User Guide and Release Notes\n All continuous integration builds pass", "createdAt": "2020-05-09T13:21:06Z", "url": "https://github.com/junit-team/junit5/pull/2292", "merged": true, "mergeCommit": {"oid": "6f8ec91380e0494f50f703701b116d1ae548b9e3"}, "closed": true, "closedAt": "2020-05-31T19:12:41Z", "author": {"login": "marcphilipp"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfmXmJAH2gAyNDE1NTc0OTg3OmMwNzc5Yjg4ZjZkOGE2YjgzZTZjZDgxZjc5MDhkNzhkMzkyMjNhNDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmwKqxAH2gAyNDE1NTc0OTg3OjE0YjZkNjE3NDJkOGM2OWU3YmNmZTgyNGU5ZDhlMmI0YWM5MTI1ZmE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c0779b88f6d8a6b83e6cd81f7908d78d39223a40", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/c0779b88f6d8a6b83e6cd81f7908d78d39223a40", "committedDate": "2020-05-09T13:19:54Z", "message": "Add support for local files to CsvFileSource\n\nIn addition to classpath resources, CsvFileSource now supports files\nfrom the local file system.\n\nResolves #2281."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1c59c7d323e4b9335e730c15316a61c2d72c3a4", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/d1c59c7d323e4b9335e730c15316a61c2d72c3a4", "committedDate": "2020-05-09T13:38:38Z", "message": "Fix integration test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjU3OTQw", "url": "https://github.com/junit-team/junit5/pull/2292#pullrequestreview-408657940", "createdAt": "2020-05-09T15:16:42Z", "commit": {"oid": "d1c59c7d323e4b9335e730c15316a61c2d72c3a4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxNToxNjo0M1rOGS7yoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxNToxNzozOFrOGS7y8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUwNzE2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tPreconditions.notBlank(path, \"Classpath resource [\" + path + \"] must not be null or blank\");\n          \n          \n            \n            \t\t\tPreconditions.notBlank(path, () -> \"Classpath resource [\" + path + \"] must not be null or blank\");", "url": "https://github.com/junit-team/junit5/pull/2292#discussion_r422507169", "createdAt": "2020-05-09T15:16:43Z", "author": {"login": "sbrannen"}, "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/provider/CsvFileArgumentsProvider.java", "diffHunk": "@@ -160,4 +161,50 @@ private void advance() {\n \n \t}\n \n+\tprivate interface Source {\n+\n+\t\tInputStream open(ExtensionContext context);\n+\n+\t}\n+\n+\tinterface InputStreamProvider {\n+\n+\t\tInputStream openClasspathResource(Class<?> baseClass, String path);\n+\n+\t\tInputStream openFile(String path);\n+\n+\t\tdefault Source classpathResource(String path) {\n+\t\t\treturn context -> openClasspathResource(context.getRequiredTestClass(), path);\n+\t\t}\n+\n+\t\tdefault Source file(String path) {\n+\t\t\treturn context -> openFile(path);\n+\t\t}\n+\n+\t}\n+\n+\tprivate static class DefaultInputStreamProvider implements InputStreamProvider {\n+\n+\t\tprivate static final DefaultInputStreamProvider INSTANCE = new DefaultInputStreamProvider();\n+\n+\t\t@Override\n+\t\tpublic InputStream openClasspathResource(Class<?> baseClass, String path) {\n+\t\t\tPreconditions.notBlank(path, \"Classpath resource [\" + path + \"] must not be null or blank\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1c59c7d323e4b9335e730c15316a61c2d72c3a4"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUwNzE4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tPreconditions.notBlank(path, \"File [\" + path + \"] must not be null or blank\");\n          \n          \n            \n            \t\t\tPreconditions.notBlank(path, () -> \"File [\" + path + \"] must not be null or blank\");", "url": "https://github.com/junit-team/junit5/pull/2292#discussion_r422507186", "createdAt": "2020-05-09T15:16:54Z", "author": {"login": "sbrannen"}, "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/provider/CsvFileArgumentsProvider.java", "diffHunk": "@@ -160,4 +161,50 @@ private void advance() {\n \n \t}\n \n+\tprivate interface Source {\n+\n+\t\tInputStream open(ExtensionContext context);\n+\n+\t}\n+\n+\tinterface InputStreamProvider {\n+\n+\t\tInputStream openClasspathResource(Class<?> baseClass, String path);\n+\n+\t\tInputStream openFile(String path);\n+\n+\t\tdefault Source classpathResource(String path) {\n+\t\t\treturn context -> openClasspathResource(context.getRequiredTestClass(), path);\n+\t\t}\n+\n+\t\tdefault Source file(String path) {\n+\t\t\treturn context -> openFile(path);\n+\t\t}\n+\n+\t}\n+\n+\tprivate static class DefaultInputStreamProvider implements InputStreamProvider {\n+\n+\t\tprivate static final DefaultInputStreamProvider INSTANCE = new DefaultInputStreamProvider();\n+\n+\t\t@Override\n+\t\tpublic InputStream openClasspathResource(Class<?> baseClass, String path) {\n+\t\t\tPreconditions.notBlank(path, \"Classpath resource [\" + path + \"] must not be null or blank\");\n+\t\t\tInputStream inputStream = baseClass.getResourceAsStream(path);\n+\t\t\treturn Preconditions.notNull(inputStream, () -> \"Classpath resource [\" + path + \"] does not exist\");\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic InputStream openFile(String path) {\n+\t\t\tPreconditions.notBlank(path, \"File [\" + path + \"] must not be null or blank\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1c59c7d323e4b9335e730c15316a61c2d72c3a4"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUwNzI1MA==", "bodyText": "Shouldn't this rather be a JUnitException (or subclass thereof)?", "url": "https://github.com/junit-team/junit5/pull/2292#discussion_r422507250", "createdAt": "2020-05-09T15:17:38Z", "author": {"login": "sbrannen"}, "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/provider/CsvFileArgumentsProvider.java", "diffHunk": "@@ -160,4 +161,50 @@ private void advance() {\n \n \t}\n \n+\tprivate interface Source {\n+\n+\t\tInputStream open(ExtensionContext context);\n+\n+\t}\n+\n+\tinterface InputStreamProvider {\n+\n+\t\tInputStream openClasspathResource(Class<?> baseClass, String path);\n+\n+\t\tInputStream openFile(String path);\n+\n+\t\tdefault Source classpathResource(String path) {\n+\t\t\treturn context -> openClasspathResource(context.getRequiredTestClass(), path);\n+\t\t}\n+\n+\t\tdefault Source file(String path) {\n+\t\t\treturn context -> openFile(path);\n+\t\t}\n+\n+\t}\n+\n+\tprivate static class DefaultInputStreamProvider implements InputStreamProvider {\n+\n+\t\tprivate static final DefaultInputStreamProvider INSTANCE = new DefaultInputStreamProvider();\n+\n+\t\t@Override\n+\t\tpublic InputStream openClasspathResource(Class<?> baseClass, String path) {\n+\t\t\tPreconditions.notBlank(path, \"Classpath resource [\" + path + \"] must not be null or blank\");\n+\t\t\tInputStream inputStream = baseClass.getResourceAsStream(path);\n+\t\t\treturn Preconditions.notNull(inputStream, () -> \"Classpath resource [\" + path + \"] does not exist\");\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic InputStream openFile(String path) {\n+\t\t\tPreconditions.notBlank(path, \"File [\" + path + \"] must not be null or blank\");\n+\t\t\ttry {\n+\t\t\t\treturn Files.newInputStream(Paths.get(path));\n+\t\t\t}\n+\t\t\tcatch (IOException e) {\n+\t\t\t\tthrow new UncheckedIOException(\"File [\" + path + \"] could not be read\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1c59c7d323e4b9335e730c15316a61c2d72c3a4"}, "originalPosition": 128}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66e6c36a026092d6aa8560a8afffefe134b8d2d9", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/66e6c36a026092d6aa8560a8afffefe134b8d2d9", "committedDate": "2020-05-10T14:06:04Z", "message": "Make preconditions lazy\n\nCo-authored-by: Sam Brannen <sbrannen@pivotal.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7883bcc2694b7939787664b5bf7a186fcbfc2b05", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/7883bcc2694b7939787664b5bf7a186fcbfc2b05", "committedDate": "2020-05-10T14:10:34Z", "message": "Use JUnitException"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwOTU4MTcw", "url": "https://github.com/junit-team/junit5/pull/2292#pullrequestreview-420958170", "createdAt": "2020-05-29T13:38:50Z", "commit": {"oid": "7883bcc2694b7939787664b5bf7a186fcbfc2b05"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14b6d61742d8c69e7bcfe824e9d8e2b4ac9125fa", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/14b6d61742d8c69e7bcfe824e9d8e2b4ac9125fa", "committedDate": "2020-05-31T18:42:18Z", "message": "Merge branch 'master' into issues/2281-csvfilesource-file-support"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3547, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}