{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNjM0MzMx", "number": 2346, "title": "Introduce `TypedArgumentConverter` as a more specific `ArgumentConverter`", "bodyText": "Resolves #2284.\n\nI hereby agree to the terms of the JUnit Contributor License Agreement.\n\nDefinition of Done\n\n There are no TODOs left in the code\n Method preconditions are checked and documented in the method's Javadoc\n Coding conventions (e.g. for logging) have been followed\n Change is covered by automated tests including corner cases, errors, and exception handling\n Public API has Javadoc and @API annotations\n Change is documented in the User Guide and Release Notes\n All continuous integration builds pass", "createdAt": "2020-06-29T20:33:42Z", "url": "https://github.com/junit-team/junit5/pull/2346", "merged": true, "mergeCommit": {"oid": "202a63b18c4042a74b33432ed1b26f5b6230f7c6"}, "closed": true, "closedAt": "2020-08-02T10:18:56Z", "author": {"login": "juliette-derancourt"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwHSR-gBqjM0OTQ0NjQzMzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc66qEYAH2gAyNDQxNjM0MzMxOjZhZmU5MmEyNjY5NmFhNTA5NTA2ZDY4Zjc2OGVmYWZlMGM3ZDkxNGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0327c31fd4f0759a18744df8312fa33aaed127d8", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/0327c31fd4f0759a18744df8312fa33aaed127d8", "committedDate": "2020-06-29T20:32:48Z", "message": "Introduce `TypedArgumentConverter` as a more specific `ArgumentConverter`"}, "afterCommit": {"oid": "67c2cfd8ec23784c9ab7737139dd45d66e0db713", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/67c2cfd8ec23784c9ab7737139dd45d66e0db713", "committedDate": "2020-06-29T20:43:37Z", "message": "Introduce `TypedArgumentConverter` as a more specific `ArgumentConverter`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMzEyODM4", "url": "https://github.com/junit-team/junit5/pull/2346#pullrequestreview-442312838", "createdAt": "2020-07-03T10:21:29Z", "commit": {"oid": "67c2cfd8ec23784c9ab7737139dd45d66e0db713"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMDoyMToyOVrOGsrtvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMDoyMToyOVrOGsrtvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUwNjc0OA==", "bodyText": "The @SuppressWarnings can be avoided via:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn convert((S) source);\n          \n          \n            \n            \t\treturn convert(sourceType.cast(source));", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r449506748", "createdAt": "2020-07-03T10:21:29Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/converter/TypedArgumentConverter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.params.converter;\n+\n+import static org.apiguardian.api.API.Status.EXPERIMENTAL;\n+\n+import org.apiguardian.api.API;\n+import org.junit.jupiter.api.extension.ParameterContext;\n+\n+/**\n+ * {@code TypedArgumentConverter} is an {@code ArgumentConverter} that\n+ * always converts a given type to another.\n+ *\n+ * @param <S> the type of the argument to convert\n+ * @param <T> the type of the target\n+ * @since 5.7\n+ * @see ArgumentConverter\n+ */\n+@API(status = EXPERIMENTAL, since = \"5.7\")\n+public abstract class TypedArgumentConverter<S, T> implements ArgumentConverter {\n+\n+\tprivate final Class<S> sourceType;\n+\tprivate final Class<T> targetType;\n+\n+\tprotected TypedArgumentConverter(Class<S> sourceType, Class<T> targetType) {\n+\t\tthis.sourceType = sourceType;\n+\t\tthis.targetType = targetType;\n+\t}\n+\n+\t@Override\n+\t@SuppressWarnings(\"unchecked\")\n+\tpublic final Object convert(Object source, ParameterContext context) throws ArgumentConversionException {\n+\t\tif (!sourceType.isAssignableFrom(source.getClass())) {\n+\t\t\tthrow new ArgumentConversionException(\"Can only convert objects of type \" + sourceType);\n+\t\t}\n+\t\tif (!targetType.isAssignableFrom(context.getParameter().getType())) {\n+\t\t\tthrow new ArgumentConversionException(\"Can only convert to type \" + targetType);\n+\t\t}\n+\t\treturn convert((S) source);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67c2cfd8ec23784c9ab7737139dd45d66e0db713"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMzE4NDEy", "url": "https://github.com/junit-team/junit5/pull/2346#pullrequestreview-442318412", "createdAt": "2020-07-03T10:31:29Z", "commit": {"oid": "67c2cfd8ec23784c9ab7737139dd45d66e0db713"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMDozMToyOVrOGsr-5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMDozMToyOVrOGsr-5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUxMTE0MA==", "bodyText": "Please take a look at TypeBasedParameterResolver which determines the parameter type reflectively which would avoid the boilerplate constructor.", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r449511140", "createdAt": "2020-07-03T10:31:29Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/converter/TypedArgumentConverter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.params.converter;\n+\n+import static org.apiguardian.api.API.Status.EXPERIMENTAL;\n+\n+import org.apiguardian.api.API;\n+import org.junit.jupiter.api.extension.ParameterContext;\n+\n+/**\n+ * {@code TypedArgumentConverter} is an {@code ArgumentConverter} that\n+ * always converts a given type to another.\n+ *\n+ * @param <S> the type of the argument to convert\n+ * @param <T> the type of the target\n+ * @since 5.7\n+ * @see ArgumentConverter\n+ */\n+@API(status = EXPERIMENTAL, since = \"5.7\")\n+public abstract class TypedArgumentConverter<S, T> implements ArgumentConverter {\n+\n+\tprivate final Class<S> sourceType;\n+\tprivate final Class<T> targetType;\n+\n+\tprotected TypedArgumentConverter(Class<S> sourceType, Class<T> targetType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67c2cfd8ec23784c9ab7737139dd45d66e0db713"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18d34e2a57c06629958270cc740f237d90a6ab33", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/18d34e2a57c06629958270cc740f237d90a6ab33", "committedDate": "2020-08-01T20:23:59Z", "message": "Introduce `TypedArgumentConverter` as a more specific `ArgumentConverter`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24fe9e51b9c34d579b815a70a3f4e6fd828f408d", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/24fe9e51b9c34d579b815a70a3f4e6fd828f408d", "committedDate": "2020-08-01T20:23:59Z", "message": "Remove unchecked warning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8ad09df2a292f521c7e3a587b4f45f05be4efcd", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/f8ad09df2a292f521c7e3a587b4f45f05be4efcd", "committedDate": "2020-08-01T20:23:59Z", "message": "Add documentation + release note"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0f5d17e209b097c16938ead055c612549f85569", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/b0f5d17e209b097c16938ead055c612549f85569", "committedDate": "2020-07-05T18:07:17Z", "message": "Remove unchecked warning"}, "afterCommit": {"oid": "f8ad09df2a292f521c7e3a587b4f45f05be4efcd", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/f8ad09df2a292f521c7e3a587b4f45f05be4efcd", "committedDate": "2020-08-01T20:23:59Z", "message": "Add documentation + release note"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NjMxMzMw", "url": "https://github.com/junit-team/junit5/pull/2346#pullrequestreview-459631330", "createdAt": "2020-08-02T08:35:05Z", "commit": {"oid": "f8ad09df2a292f521c7e3a587b4f45f05be4efcd"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQwODozNTowNVrOG6jXOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQwODozNjowMlrOG6jXqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA0OTk3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * New `TypedArgumentConverter` that always convert one specific type to another, therefore\n          \n          \n            \n              reducing boilerplate type checks compared to `ArgumentConverter`.\n          \n          \n            \n            * New `TypedArgumentConverter` for converting one specific type to another, therefore\n          \n          \n            \n              reducing boilerplate type checks compared to implementing `ArgumentConverter` directly.", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r464049979", "createdAt": "2020-08-02T08:35:05Z", "author": {"login": "marcphilipp"}, "path": "documentation/src/docs/asciidoc/release-notes/release-notes-5.7.0-M2.adoc", "diffHunk": "@@ -105,6 +105,8 @@ on GitHub.\n   same functionality but a more descriptive name.\n * `assertTimeoutPreemptively` in `Assertions` now reports the stacktrace of the timed out\n   thread in the cause of the `AssertionFailedError`.\n+* New `TypedArgumentConverter` that always convert one specific type to another, therefore\n+  reducing boilerplate type checks compared to `ArgumentConverter`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8ad09df2a292f521c7e3a587b4f45f05be4efcd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA1MDA5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `TypedArgumentConverter` that reduce boilerplate type checks.\n          \n          \n            \n            `TypedArgumentConverter` to avoid boilerplate type checks.", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r464050091", "createdAt": "2020-08-02T08:36:02Z", "author": {"login": "marcphilipp"}, "path": "documentation/src/docs/asciidoc/user-guide/writing-tests.adoc", "diffHunk": "@@ -1442,6 +1442,14 @@ include::{testDir}/example/ParameterizedTestDemo.java[tags=explicit_conversion_e\n include::{testDir}/example/ParameterizedTestDemo.java[tags=explicit_conversion_example_ToStringArgumentConverter]\n ----\n \n+If the converter is only meant to convert one type to another, you can extend\n+`TypedArgumentConverter` that reduce boilerplate type checks.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8ad09df2a292f521c7e3a587b4f45f05be4efcd"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6afe92a26696aa509506d68f768efafe0c7d914a", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/6afe92a26696aa509506d68f768efafe0c7d914a", "committedDate": "2020-08-02T10:14:08Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Marc Philipp <mail@marcphilipp.de>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3578, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}