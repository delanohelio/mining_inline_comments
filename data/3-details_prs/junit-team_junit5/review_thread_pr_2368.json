{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYxMjI1NTI2", "number": 2368, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQwODoxNzozN1rOEUW_lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQwODoxNzozN1rOEUW_lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NzgzNzAzOnYy", "diffSide": "RIGHT", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertLinesMatch.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQwODoxNzozN1rOG6jQiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQwODoyMzozNFrOG6jSrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA0ODI2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tfail(\"expected line #%d doesn't match actual line #%d%n\" + \"\\texpected: `%s`%n\" + \"\\t  actual: `%s`\",\n          \n          \n            \n            \t\t\t\tfail(\"expected line #%d doesn't match actual line #%d%n\\texpected: `%s`%n\\t  actual: `%s`\",", "url": "https://github.com/junit-team/junit5/pull/2368#discussion_r464048265", "createdAt": "2020-08-02T08:17:37Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertLinesMatch.java", "diffHunk": "@@ -173,7 +171,9 @@ void assertLinesMatchWithFastForward() {\n \t\t\t\t\t}\n \t\t\t\t}\n \n-\t\t\t\tfail(\"expected line #%d:`%s` doesn't match\", expectedLineNumber, snippet(expectedLine));\n+\t\t\t\tint actualLineNumber = actualLines.size() - actualDeque.size() + 1; // 1-based line number\n+\t\t\t\tfail(\"expected line #%d doesn't match actual line #%d%n\" + \"\\texpected: `%s`%n\" + \"\\t  actual: `%s`\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9532d27dfd87b33dfb96cce5d12eb0876e217fa"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA0ODgxMg==", "bodyText": "Ah... my fault. I wanted to start each line in an extra line. Will add // to force line breaks.", "url": "https://github.com/junit-team/junit5/pull/2368#discussion_r464048812", "createdAt": "2020-08-02T08:23:34Z", "author": {"login": "sormuras"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertLinesMatch.java", "diffHunk": "@@ -173,7 +171,9 @@ void assertLinesMatchWithFastForward() {\n \t\t\t\t\t}\n \t\t\t\t}\n \n-\t\t\t\tfail(\"expected line #%d:`%s` doesn't match\", expectedLineNumber, snippet(expectedLine));\n+\t\t\t\tint actualLineNumber = actualLines.size() - actualDeque.size() + 1; // 1-based line number\n+\t\t\t\tfail(\"expected line #%d doesn't match actual line #%d%n\" + \"\\texpected: `%s`%n\" + \"\\t  actual: `%s`\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA0ODI2NQ=="}, "originalCommit": {"oid": "c9532d27dfd87b33dfb96cce5d12eb0876e217fa"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4081, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}