{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MTA0ODQz", "number": 2270, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxODozNjozNlrOD1azAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMDo0NjozM1rOD2F9zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzQwMTYxOnYy", "diffSide": "RIGHT", "path": "platform-tests/src/test/java/org/junit/platform/console/tasks/DiscoveryRequestCreatorTests.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxODozNjozNlrOGK2iMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNTozODozMFrOGMGLQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAzMjQzNQ==", "bodyText": "Not sure if this is a good idea... Might need a better name \ud83e\udd14", "url": "https://github.com/junit-team/junit5/pull/2270#discussion_r414032435", "createdAt": "2020-04-23T18:36:36Z", "author": {"login": "juliette-derancourt"}, "path": "platform-tests/src/test/java/org/junit/platform/console/tasks/DiscoveryRequestCreatorTests.java", "diffHunk": "@@ -282,6 +298,10 @@ private LauncherDiscoveryRequest convert() {\n \t\treturn creator.toDiscoveryRequest(options);\n \t}\n \n+\tprivate void assertFilters(Filter<?> filter, String filteredElement) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb41e46206a1447b0e0f0e3db21ff128b1862d01"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAzNjkyNQ==", "bodyText": "assertFilterDescriptionContains?\nShould we rather call the filter and check it includes/excludes the expected names?", "url": "https://github.com/junit-team/junit5/pull/2270#discussion_r415036925", "createdAt": "2020-04-25T10:49:01Z", "author": {"login": "marcphilipp"}, "path": "platform-tests/src/test/java/org/junit/platform/console/tasks/DiscoveryRequestCreatorTests.java", "diffHunk": "@@ -282,6 +298,10 @@ private LauncherDiscoveryRequest convert() {\n \t\treturn creator.toDiscoveryRequest(options);\n \t}\n \n+\tprivate void assertFilters(Filter<?> filter, String filteredElement) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAzMjQzNQ=="}, "originalCommit": {"oid": "eb41e46206a1447b0e0f0e3db21ff128b1862d01"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMzNzI4Mw==", "bodyText": "Indeed!", "url": "https://github.com/junit-team/junit5/pull/2270#discussion_r415337283", "createdAt": "2020-04-26T15:38:30Z", "author": {"login": "juliette-derancourt"}, "path": "platform-tests/src/test/java/org/junit/platform/console/tasks/DiscoveryRequestCreatorTests.java", "diffHunk": "@@ -282,6 +298,10 @@ private LauncherDiscoveryRequest convert() {\n \t\treturn creator.toDiscoveryRequest(options);\n \t}\n \n+\tprivate void assertFilters(Filter<?> filter, String filteredElement) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAzMjQzNQ=="}, "originalCommit": {"oid": "eb41e46206a1447b0e0f0e3db21ff128b1862d01"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDQ1MTYwOnYy", "diffSide": "RIGHT", "path": "documentation/src/docs/asciidoc/release-notes/release-notes-5.7.0-M2.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMDozMTozM1rOGLzqtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMDozMTozM1rOGLzqtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAzNDAzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              provided with `--include-classname`.\n          \n          \n            \n              provided with `--include-classname` or the default class name pattern.", "url": "https://github.com/junit-team/junit5/pull/2270#discussion_r415034037", "createdAt": "2020-04-25T10:31:33Z", "author": {"login": "marcphilipp"}, "path": "documentation/src/docs/asciidoc/release-notes/release-notes-5.7.0-M2.adoc", "diffHunk": "@@ -23,7 +23,9 @@ on GitHub.\n \n ==== New Features and Improvements\n \n-* \u2753\n+* When using `ConsoleLauncher`, explicitly selected classes from `--select-class`\n+  and `--select-method` are now always executed regardless of class name patterns\n+  provided with `--include-classname`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb41e46206a1447b0e0f0e3db21ff128b1862d01"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDQ3NDM4OnYy", "diffSide": "RIGHT", "path": "junit-platform-console/src/main/java/org/junit/platform/console/tasks/DiscoveryRequestCreator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMDo0NjozM1rOGLz0eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNTozNzoyNFrOGMGKhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAzNjUzOA==", "bodyText": "We should quote the literal class names using Pattern.quote, e.g. like this:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate ClassNameFilter includedClassNamePatterns(CommandLineOptions patterns) {\n          \n          \n            \n            \t\tList<String> classNamePatterns = new ArrayList<>();\n          \n          \n            \n            \t\tclassNamePatterns.addAll(patterns.getIncludedClassNamePatterns());\n          \n          \n            \n            \t\tclassNamePatterns.addAll(patterns.getSelectedClasses());\n          \n          \n            \n            \t\tclassNamePatterns.addAll(patterns.getSelectedMethods().stream() //\n          \n          \n            \n            \t\t\t\t.map(name -> ReflectionUtils.parseFullyQualifiedMethodName(name)[0]) //\n          \n          \n            \n            \t\t\t\t.collect(Collectors.toList()));\n          \n          \n            \n            \t\treturn includeClassNamePatterns(classNamePatterns.toArray(new String[0]));\n          \n          \n            \n            \t}\n          \n          \n            \n            \tprivate ClassNameFilter includedClassNamePatterns(CommandLineOptions options) {\n          \n          \n            \n            \t\tStream<Stream<String>> patternStreams = Stream.of( //\n          \n          \n            \n            \t\t\toptions.getIncludedClassNamePatterns().stream(), //\n          \n          \n            \n            \t\t\toptions.getSelectedClasses().stream() //\n          \n          \n            \n            \t\t\t\t\t.map(Pattern::quote), //\n          \n          \n            \n            \t\t\toptions.getSelectedMethods().stream() //\n          \n          \n            \n            \t\t\t\t\t.map(name -> ReflectionUtils.parseFullyQualifiedMethodName(name)[0]) //\n          \n          \n            \n            \t\t\t\t\t.map(Pattern::quote));\n          \n          \n            \n            \t\treturn includeClassNamePatterns(patternStreams //\n          \n          \n            \n            \t\t\t\t.flatMap(Function.identity()) //\n          \n          \n            \n            \t\t\t\t.toArray(String[]::new));\n          \n          \n            \n            \t}", "url": "https://github.com/junit-team/junit5/pull/2270#discussion_r415036538", "createdAt": "2020-04-25T10:46:33Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-console/src/main/java/org/junit/platform/console/tasks/DiscoveryRequestCreator.java", "diffHunk": "@@ -127,4 +129,14 @@ private void addFilters(LauncherDiscoveryRequestBuilder requestBuilder, CommandL\n \t\t}\n \t}\n \n+\tprivate ClassNameFilter includedClassNamePatterns(CommandLineOptions patterns) {\n+\t\tList<String> classNamePatterns = new ArrayList<>();\n+\t\tclassNamePatterns.addAll(patterns.getIncludedClassNamePatterns());\n+\t\tclassNamePatterns.addAll(patterns.getSelectedClasses());\n+\t\tclassNamePatterns.addAll(patterns.getSelectedMethods().stream() //\n+\t\t\t\t.map(name -> ReflectionUtils.parseFullyQualifiedMethodName(name)[0]) //\n+\t\t\t\t.collect(Collectors.toList()));\n+\t\treturn includeClassNamePatterns(classNamePatterns.toArray(new String[0]));\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb41e46206a1447b0e0f0e3db21ff128b1862d01"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMzNzA5NQ==", "bodyText": "Haven't thought of that, thanks! \ud83d\udc4d", "url": "https://github.com/junit-team/junit5/pull/2270#discussion_r415337095", "createdAt": "2020-04-26T15:37:24Z", "author": {"login": "juliette-derancourt"}, "path": "junit-platform-console/src/main/java/org/junit/platform/console/tasks/DiscoveryRequestCreator.java", "diffHunk": "@@ -127,4 +129,14 @@ private void addFilters(LauncherDiscoveryRequestBuilder requestBuilder, CommandL\n \t\t}\n \t}\n \n+\tprivate ClassNameFilter includedClassNamePatterns(CommandLineOptions patterns) {\n+\t\tList<String> classNamePatterns = new ArrayList<>();\n+\t\tclassNamePatterns.addAll(patterns.getIncludedClassNamePatterns());\n+\t\tclassNamePatterns.addAll(patterns.getSelectedClasses());\n+\t\tclassNamePatterns.addAll(patterns.getSelectedMethods().stream() //\n+\t\t\t\t.map(name -> ReflectionUtils.parseFullyQualifiedMethodName(name)[0]) //\n+\t\t\t\t.collect(Collectors.toList()));\n+\t\treturn includeClassNamePatterns(classNamePatterns.toArray(new String[0]));\n+\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAzNjUzOA=="}, "originalCommit": {"oid": "eb41e46206a1447b0e0f0e3db21ff128b1862d01"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4014, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}