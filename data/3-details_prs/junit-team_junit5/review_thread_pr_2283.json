{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMDkxMDAz", "number": 2283, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNDoyNToxOVrOD4YZHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNDozMTowMVrOD4YfmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNDQ2NDk1OnYy", "diffSide": "RIGHT", "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/EngineDiscoveryOrchestrator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNDoyNToxOVrOGPLHHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNDoyNToxOVrOGPLHHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU2Mzg2OQ==", "bodyText": "nit: we don't use final for local variables.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfinal List<PostDiscoveryFilter> filters = new LinkedList<>(postDiscoveryFilters);\n          \n          \n            \n            \t\tList<PostDiscoveryFilter> filters = new LinkedList<>(postDiscoveryFilters);", "url": "https://github.com/junit-team/junit5/pull/2283#discussion_r418563869", "createdAt": "2020-05-01T14:25:19Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/EngineDiscoveryOrchestrator.java", "diffHunk": "@@ -82,7 +86,10 @@ public LauncherDiscoveryResult discover(LauncherDiscoveryRequest request, String\n \t\t\ttestEngineDescriptors.put(testEngine, rootDescriptor);\n \t\t}\n \n-\t\tapplyPostDiscoveryFilters(testEngineDescriptors, request.getPostDiscoveryFilters());\n+\t\tfinal List<PostDiscoveryFilter> filters = new LinkedList<>(postDiscoveryFilters);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ebd891b45fe985fb78ab8d5beb0e6f1a96536c"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNDQ3MTIwOnYy", "diffSide": "RIGHT", "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherFactory.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNDoyNzozMlrOGPLLHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNTo0MjozN1rOGPNPYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU2NDg5NQ==", "bodyText": "\u2753 I'm not sure we should be using a Set here but then again it's consistent with engines above. Thoughts?", "url": "https://github.com/junit-team/junit5/pull/2283#discussion_r418564895", "createdAt": "2020-05-01T14:27:32Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherFactory.java", "diffHunk": "@@ -93,7 +94,13 @@ public static Launcher create(LauncherConfig config) throws PreconditionViolatio\n \t\t}\n \t\tengines.addAll(config.getAdditionalTestEngines());\n \n-\t\tLauncher launcher = new DefaultLauncher(engines);\n+\t\tSet<PostDiscoveryFilter> filters = new LinkedHashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ebd891b45fe985fb78ab8d5beb0e6f1a96536c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU3ODgyOA==", "bodyText": "Agree. Totally makes no sense to use set, only for consistency reasons.\nBy having a list instead of set we can kinda keep the order of filters. At some point having possibility to control the orders can give users some advantages", "url": "https://github.com/junit-team/junit5/pull/2283#discussion_r418578828", "createdAt": "2020-05-01T14:58:20Z", "author": {"login": "baev"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherFactory.java", "diffHunk": "@@ -93,7 +94,13 @@ public static Launcher create(LauncherConfig config) throws PreconditionViolatio\n \t\t}\n \t\tengines.addAll(config.getAdditionalTestEngines());\n \n-\t\tLauncher launcher = new DefaultLauncher(engines);\n+\t\tSet<PostDiscoveryFilter> filters = new LinkedHashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU2NDg5NQ=="}, "originalCommit": {"oid": "67ebd891b45fe985fb78ab8d5beb0e6f1a96536c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5ODc1NQ==", "bodyText": "replaced with list for now", "url": "https://github.com/junit-team/junit5/pull/2283#discussion_r418598755", "createdAt": "2020-05-01T15:42:37Z", "author": {"login": "baev"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherFactory.java", "diffHunk": "@@ -93,7 +94,13 @@ public static Launcher create(LauncherConfig config) throws PreconditionViolatio\n \t\t}\n \t\tengines.addAll(config.getAdditionalTestEngines());\n \n-\t\tLauncher launcher = new DefaultLauncher(engines);\n+\t\tSet<PostDiscoveryFilter> filters = new LinkedHashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU2NDg5NQ=="}, "originalCommit": {"oid": "67ebd891b45fe985fb78ab8d5beb0e6f1a96536c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNDQ3MzQ3OnYy", "diffSide": "RIGHT", "path": "platform-tests/src/test/java/org/junit/platform/launcher/TestPostDiscoveryFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNDoyODoxOFrOGPLMhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNDoyODoxOFrOGPLMhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU2NTI1Mw==", "bodyText": "Ditto.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfinal boolean include = object.getTags().stream().map(TestTag::getName).anyMatch(\"test-post-discovery\"::equals);\n          \n          \n            \n            \t\tboolean include = object.getTags().stream().map(TestTag::getName).anyMatch(\"test-post-discovery\"::equals);", "url": "https://github.com/junit-team/junit5/pull/2283#discussion_r418565253", "createdAt": "2020-05-01T14:28:18Z", "author": {"login": "marcphilipp"}, "path": "platform-tests/src/test/java/org/junit/platform/launcher/TestPostDiscoveryFilter.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.launcher;\n+\n+import org.junit.platform.engine.FilterResult;\n+import org.junit.platform.engine.TestDescriptor;\n+import org.junit.platform.engine.TestTag;\n+\n+public class TestPostDiscoveryFilter implements PostDiscoveryFilter {\n+\t@Override\n+\tpublic FilterResult apply(final TestDescriptor object) {\n+\t\tfinal boolean include = object.getTags().stream().map(TestTag::getName).anyMatch(\"test-post-discovery\"::equals);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ebd891b45fe985fb78ab8d5beb0e6f1a96536c"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNDQ4MTUyOnYy", "diffSide": "RIGHT", "path": "platform-tests/src/test/java/org/junit/platform/launcher/TestPostDiscoveryFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNDozMTowMVrOGPLRhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNDozMTowMVrOGPLRhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU2NjUzMg==", "bodyText": "How about TestPostDiscoveryTagFilter?", "url": "https://github.com/junit-team/junit5/pull/2283#discussion_r418566532", "createdAt": "2020-05-01T14:31:01Z", "author": {"login": "marcphilipp"}, "path": "platform-tests/src/test/java/org/junit/platform/launcher/TestPostDiscoveryFilter.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.platform.launcher;\n+\n+import org.junit.platform.engine.FilterResult;\n+import org.junit.platform.engine.TestDescriptor;\n+import org.junit.platform.engine.TestTag;\n+\n+public class TestPostDiscoveryFilter implements PostDiscoveryFilter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ebd891b45fe985fb78ab8d5beb0e6f1a96536c"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4028, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}