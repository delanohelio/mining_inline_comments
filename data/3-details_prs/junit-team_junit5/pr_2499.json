{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNzUxNjgx", "number": 2499, "title": "Add an `assertInstanceOf` to Jupiter's assertions", "bodyText": "Signed-off-by: Jan Bernitt jaanbernitt@gmail.com\nOverview\n\nThis PR adds the new assertion assertInstanceOf.\nIt is essentially a substitute for assertTrue(obj instanceof X) that provides a more helpful error message.\n\nI hereby agree to the terms of the JUnit Contributor License Agreement.\n\nDefinition of Done\n\n There are no TODOs left in the code\n Method preconditions are checked and documented in the method's Javadoc\n Coding conventions (e.g. for logging) have been followed\n Change is covered by automated tests including corner cases, errors, and exception handling\n Public API has Javadoc and @API annotations\n Change is documented in the User Guide and Release Notes\n All continuous integration builds pass", "createdAt": "2020-12-18T20:10:52Z", "url": "https://github.com/junit-team/junit5/pull/2499", "merged": true, "mergeCommit": {"oid": "9c59b692fd2d75a1600791a5680bb3a5b22e8f73"}, "closed": true, "closedAt": "2021-01-05T08:52:13Z", "author": {"login": "jbee"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnd49ygH2gAyNTQyNzUxNjgxOjJkYWExYWVhZTFjZTlhZDZlMTEzYjg2MTE0N2UzOTU0N2RjNzRjZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtG5NqgFqTU2MTYwNDkwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2daa1aeae1ce9ad6e113b861147e39547dc74cea", "author": {"user": {"login": "jbee", "name": "Jan Bernitt"}}, "url": "https://github.com/junit-team/junit5/commit/2daa1aeae1ce9ad6e113b861147e39547dc74cea", "committedDate": "2020-12-18T20:09:45Z", "message": "adds assertInstanceOf proof of concept for feedback\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1c5cd5fa17e5b95133fdf0a18b37fb44b4cc700", "author": {"user": {"login": "jbee", "name": "Jan Bernitt"}}, "url": "https://github.com/junit-team/junit5/commit/b1c5cd5fa17e5b95133fdf0a18b37fb44b4cc700", "committedDate": "2020-12-26T19:37:47Z", "message": "adds javadoc and better test coverage\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26985a8ccdb58fdc81778dbb124e517a3f16e683", "author": {"user": {"login": "jbee", "name": "Jan Bernitt"}}, "url": "https://github.com/junit-team/junit5/commit/26985a8ccdb58fdc81778dbb124e517a3f16e683", "committedDate": "2020-12-26T19:40:17Z", "message": "spotlessApply\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4OTUxNzY2", "url": "https://github.com/junit-team/junit5/pull/2499#pullrequestreview-558951766", "createdAt": "2020-12-27T18:37:04Z", "commit": {"oid": "26985a8ccdb58fdc81778dbb124e517a3f16e683"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxODozNzowNFrOILtd1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxODo0ODo0MFrOILtiFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MDE2Ng==", "bodyText": "Please mark all of the new methods \"experimental\".\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t@API(status = STABLE, since = \"5.8\")\n          \n          \n            \n            \t@API(status = EXPERIMENTAL, since = \"5.8\")", "url": "https://github.com/junit-team/junit5/pull/2499#discussion_r549150166", "createdAt": "2020-12-27T18:37:04Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java", "diffHunk": "@@ -3448,4 +3448,48 @@ public static void assertTimeoutPreemptively(Duration timeout, Executable execut\n \t\treturn AssertTimeout.assertTimeoutPreemptively(timeout, supplier, messageSupplier);\n \t}\n \n+\t/**\n+\t * <em>Assert</em> that the supplied {@code actualValue} is an instance of the\n+\t * {@code expectedType}.\n+\t *\n+\t * <p>Like the {@code instanceof} operator a {@code null} value is not\n+\t * considered to be of the {@code expectedType} and does not pass the assertion.\n+\t *\n+\t * @since 5.8\n+\t */\n+\tpublic static void assertInstanceOf(Class<?> expectedType, Object actualValue) {\n+\t\tAssertInstanceOf.assertInstanceOf(expectedType, actualValue);\n+\t}\n+\n+\t/**\n+\t * <em>Assert</em> that the supplied {@code actualValue} is an instance of the\n+\t * {@code expectedType}.\n+\t *\n+\t * <p>Like the {@code instanceof} operator a {@code null} value is not\n+\t * considered to be of the {@code expectedType} and does not pass the assertion.\n+\t *\n+\t * <p>Fails with the supplied failure {@code message}.\n+\t *\n+\t * @since 5.8\n+\t */\n+\tpublic static void assertInstanceOf(Class<?> expectedType, Object actualValue, String message) {\n+\t\tAssertInstanceOf.assertInstanceOf(expectedType, actualValue, message);\n+\t}\n+\n+\t/**\n+\t * <em>Assert</em> that the supplied {@code actualValue} is an instance of the\n+\t * {@code expectedType}.\n+\t *\n+\t * <p>Like the {@code instanceof} operator a {@code null} value is not\n+\t * considered to be of the {@code expectedType} and does not pass the assertion.\n+\t *\n+\t * <p>If necessary, the failure message will be retrieved lazily from the\n+\t * supplied {@code messageSupplier}.\n+\t *\n+\t * @since 5.8\n+\t */\n+\t@API(status = STABLE, since = \"5.8\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26985a8ccdb58fdc81778dbb124e517a3f16e683"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MDU1Mw==", "bodyText": "I wonder if the signature of this and the other methods shouldn't look like this to avoid obviously wrong parameters at compile time:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic static void assertInstanceOf(Class<?> expectedType, Object actualValue) {\n          \n          \n            \n            \tpublic static <T> void assertInstanceOf(Class<? extends T> expectedType, T actualValue) {", "url": "https://github.com/junit-team/junit5/pull/2499#discussion_r549150553", "createdAt": "2020-12-27T18:41:34Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java", "diffHunk": "@@ -3448,4 +3448,48 @@ public static void assertTimeoutPreemptively(Duration timeout, Executable execut\n \t\treturn AssertTimeout.assertTimeoutPreemptively(timeout, supplier, messageSupplier);\n \t}\n \n+\t/**\n+\t * <em>Assert</em> that the supplied {@code actualValue} is an instance of the\n+\t * {@code expectedType}.\n+\t *\n+\t * <p>Like the {@code instanceof} operator a {@code null} value is not\n+\t * considered to be of the {@code expectedType} and does not pass the assertion.\n+\t *\n+\t * @since 5.8\n+\t */\n+\tpublic static void assertInstanceOf(Class<?> expectedType, Object actualValue) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26985a8ccdb58fdc81778dbb124e517a3f16e683"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MTI1NQ==", "bodyText": "I think these and the other methods should return the casted value.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tstatic void assertInstanceOf(Class<?> expectedType, Object actualValue) {\n          \n          \n            \n            \tstatic <T> T assertInstanceOf(Class<T> expectedType, Object actualValue) {", "url": "https://github.com/junit-team/junit5/pull/2499#discussion_r549151255", "createdAt": "2020-12-27T18:48:40Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertInstanceOf.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.api;\n+\n+import static org.junit.jupiter.api.AssertionUtils.*;\n+\n+import java.util.function.Supplier;\n+\n+import org.opentest4j.AssertionFailedError;\n+\n+/**\n+ * {@code AssertInstanceOf} is a collection of utility methods that support\n+ * asserting that a value is of a expected instance type -\n+ * in other words, if it can be assigned to the expected type.\n+ *\n+ * @since 5.8\n+ */\n+class AssertInstanceOf {\n+\n+\tprivate AssertInstanceOf() {\n+\t\t/* no-op */\n+\t}\n+\n+\tstatic void assertInstanceOf(Class<?> expectedType, Object actualValue) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26985a8ccdb58fdc81778dbb124e517a3f16e683"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8a0fbdf817b2261b208e4f0f4df7e230ab54e43", "author": {"user": {"login": "jbee", "name": "Jan Bernitt"}}, "url": "https://github.com/junit-team/junit5/commit/d8a0fbdf817b2261b208e4f0f4df7e230ab54e43", "committedDate": "2020-12-31T15:31:58Z", "message": "return actual value cast to expected type; @API as EXPERIMENTAL\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNTg2ODM5", "url": "https://github.com/junit-team/junit5/pull/2499#pullrequestreview-560586839", "createdAt": "2021-01-01T13:15:33Z", "commit": {"oid": "d8a0fbdf817b2261b208e4f0f4df7e230ab54e43"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQxMzoxNTozM1rOINQMLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQxMzoxNTozM1rOINQMLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc2NzY2MQ==", "bodyText": "Is it really worth differentiating between exception and \"normal\" instances here? Couldn't we always say \"Unexpected type\"?", "url": "https://github.com/junit-team/junit5/pull/2499#discussion_r550767661", "createdAt": "2021-01-01T13:15:33Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertInstanceOf.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.api;\n+\n+import static org.junit.jupiter.api.AssertionUtils.*;\n+\n+import java.util.function.Supplier;\n+\n+import org.opentest4j.AssertionFailedError;\n+\n+/**\n+ * {@code AssertInstanceOf} is a collection of utility methods that support\n+ * asserting that a value is of a expected instance type -\n+ * in other words, if it can be assigned to the expected type.\n+ *\n+ * @since 5.8\n+ */\n+class AssertInstanceOf {\n+\n+\tprivate AssertInstanceOf() {\n+\t\t/* no-op */\n+\t}\n+\n+\tstatic <T> T assertInstanceOf(Class<T> expectedType, Object actualValue) {\n+\t\treturn assertInstanceOf(expectedType, actualValue, (Object) null);\n+\t}\n+\n+\tstatic <T> T assertInstanceOf(Class<T> expectedType, Object actualValue, String message) {\n+\t\treturn assertInstanceOf(expectedType, actualValue, (Object) message);\n+\t}\n+\n+\tstatic <T> T assertInstanceOf(Class<T> expectedType, Object actualValue, Supplier<String> messageSupplier) {\n+\t\treturn assertInstanceOf(expectedType, actualValue, (Object) messageSupplier);\n+\t}\n+\n+\tprivate static <T> T assertInstanceOf(Class<T> expectedType, Object actualValue, Object messageOrSupplier) {\n+\t\tif (!expectedType.isInstance(actualValue)) {\n+\t\t\tString template = actualValue instanceof Throwable ? \"Unexpected exception type\"\n+\t\t\t\t\t: \"Unexpected instance type\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a0fbdf817b2261b208e4f0f4df7e230ab54e43"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNjg1ODI0", "url": "https://github.com/junit-team/junit5/pull/2499#pullrequestreview-560685824", "createdAt": "2021-01-03T10:42:35Z", "commit": {"oid": "d8a0fbdf817b2261b208e4f0f4df7e230ab54e43"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QxMDo0MjozNVrOINdqPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QxMDo0MjozNVrOINdqPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk4ODM1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tString template = actualValue instanceof Throwable ? \"Unexpected exception type\"\n          \n          \n            \n            \t\t\t\t\t: \"Unexpected instance type\";\n          \n          \n            \n            \t\t\tString template = \"Unexpected type\";", "url": "https://github.com/junit-team/junit5/pull/2499#discussion_r550988351", "createdAt": "2021-01-03T10:42:35Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertInstanceOf.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.api;\n+\n+import static org.junit.jupiter.api.AssertionUtils.*;\n+\n+import java.util.function.Supplier;\n+\n+import org.opentest4j.AssertionFailedError;\n+\n+/**\n+ * {@code AssertInstanceOf} is a collection of utility methods that support\n+ * asserting that a value is of a expected instance type -\n+ * in other words, if it can be assigned to the expected type.\n+ *\n+ * @since 5.8\n+ */\n+class AssertInstanceOf {\n+\n+\tprivate AssertInstanceOf() {\n+\t\t/* no-op */\n+\t}\n+\n+\tstatic <T> T assertInstanceOf(Class<T> expectedType, Object actualValue) {\n+\t\treturn assertInstanceOf(expectedType, actualValue, (Object) null);\n+\t}\n+\n+\tstatic <T> T assertInstanceOf(Class<T> expectedType, Object actualValue, String message) {\n+\t\treturn assertInstanceOf(expectedType, actualValue, (Object) message);\n+\t}\n+\n+\tstatic <T> T assertInstanceOf(Class<T> expectedType, Object actualValue, Supplier<String> messageSupplier) {\n+\t\treturn assertInstanceOf(expectedType, actualValue, (Object) messageSupplier);\n+\t}\n+\n+\tprivate static <T> T assertInstanceOf(Class<T> expectedType, Object actualValue, Object messageOrSupplier) {\n+\t\tif (!expectedType.isInstance(actualValue)) {\n+\t\t\tString template = actualValue instanceof Throwable ? \"Unexpected exception type\"\n+\t\t\t\t\t: \"Unexpected instance type\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc2NzY2MQ=="}, "originalCommit": {"oid": "d8a0fbdf817b2261b208e4f0f4df7e230ab54e43"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5afe1ed72a7b66c99995b049b9d665838a1cd690", "author": {"user": {"login": "jbee", "name": "Jan Bernitt"}}, "url": "https://github.com/junit-team/junit5/commit/5afe1ed72a7b66c99995b049b9d665838a1cd690", "committedDate": "2021-01-03T10:48:48Z", "message": "Update junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertInstanceOf.java\n\nCo-authored-by: Marc Philipp <marc@gradle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6e08066d59645f5494b9bb7ada532cce04e6669", "author": {"user": {"login": "jbee", "name": "Jan Bernitt"}}, "url": "https://github.com/junit-team/junit5/commit/b6e08066d59645f5494b9bb7ada532cce04e6669", "committedDate": "2021-01-03T10:52:40Z", "message": "adjust tests to changed message\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNjg2NjI1", "url": "https://github.com/junit-team/junit5/pull/2499#pullrequestreview-560686625", "createdAt": "2021-01-03T10:56:04Z", "commit": {"oid": "b6e08066d59645f5494b9bb7ada532cce04e6669"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21e8b53932e7964abbcaf45bc3e82bf26b94a8ac", "author": {"user": {"login": "jbee", "name": "Jan Bernitt"}}, "url": "https://github.com/junit-team/junit5/commit/21e8b53932e7964abbcaf45bc3e82bf26b94a8ac", "committedDate": "2021-01-03T11:10:10Z", "message": "adds entry to release notes\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNjkwNjIw", "url": "https://github.com/junit-team/junit5/pull/2499#pullrequestreview-560690620", "createdAt": "2021-01-03T12:01:39Z", "commit": {"oid": "21e8b53932e7964abbcaf45bc3e82bf26b94a8ac"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QxMjowMTozOVrOINeKSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QxMjowMTozOVrOINeKSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk5NjU1NA==", "bodyText": "This should go to the \"New Features and Improvements\" section of \"JUnit Jupiter\"", "url": "https://github.com/junit-team/junit5/pull/2499#discussion_r550996554", "createdAt": "2021-01-03T12:01:39Z", "author": {"login": "marcphilipp"}, "path": "documentation/src/docs/asciidoc/release-notes/release-notes-5.8.0-M1.adoc", "diffHunk": "@@ -31,6 +31,9 @@ on GitHub.\n   `test(displayName(\"my test\"))` can be used to match against a test whose display name is\n   `my test`.\n \n+* New `assertInstanceOf` methods as a replacement for `assertTrue(obj instanceof X)` which\n+  provide better error messages comparable to those of `assertThrows`.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21e8b53932e7964abbcaf45bc3e82bf26b94a8ac"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3afc55383e2e666d735096ac44a4a866e13e4e72", "author": {"user": {"login": "jbee", "name": "Jan Bernitt"}}, "url": "https://github.com/junit-team/junit5/commit/3afc55383e2e666d735096ac44a4a866e13e4e72", "committedDate": "2021-01-03T12:05:58Z", "message": "moves release note item to JUnit Jupiter\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNzE0NTEy", "url": "https://github.com/junit-team/junit5/pull/2499#pullrequestreview-560714512", "createdAt": "2021-01-03T17:50:04Z", "commit": {"oid": "3afc55383e2e666d735096ac44a4a866e13e4e72"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83be82b7bb24531488f0da82742b1c0bc6e81a22", "author": {"user": {"login": "jbee", "name": "Jan Bernitt"}}, "url": "https://github.com/junit-team/junit5/commit/83be82b7bb24531488f0da82742b1c0bc6e81a22", "committedDate": "2021-01-03T20:34:19Z", "message": "Merge branch 'main' into assert-instance-of"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNzc1ODg0", "url": "https://github.com/junit-team/junit5/pull/2499#pullrequestreview-560775884", "createdAt": "2021-01-04T04:33:48Z", "commit": {"oid": "83be82b7bb24531488f0da82742b1c0bc6e81a22"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fcfe701c7d1d2a1da560b46353932bcf6295cc8", "author": {"user": {"login": "jbee", "name": "Jan Bernitt"}}, "url": "https://github.com/junit-team/junit5/commit/7fcfe701c7d1d2a1da560b46353932bcf6295cc8", "committedDate": "2021-01-05T08:21:30Z", "message": "replaces star-imports\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNjA0OTAw", "url": "https://github.com/junit-team/junit5/pull/2499#pullrequestreview-561604900", "createdAt": "2021-01-05T08:45:45Z", "commit": {"oid": "7fcfe701c7d1d2a1da560b46353932bcf6295cc8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3494, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}