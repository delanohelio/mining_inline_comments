{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NzU3NTA4", "number": 2293, "title": "Ignore implicit config params in EngineTestKit by default", "bodyText": "Resolves #2285.\n\nDefinition of Done\n\n There are no TODOs left in the code\n Method preconditions are checked and documented in the method's Javadoc\n Coding conventions (e.g. for logging) have been followed\n Change is covered by automated tests including corner cases, errors, and exception handling\n Public API has Javadoc and @API annotations\n Change is documented in the User Guide and Release Notes\n All continuous integration builds pass", "createdAt": "2020-05-10T18:01:39Z", "url": "https://github.com/junit-team/junit5/pull/2293", "merged": true, "mergeCommit": {"oid": "e1ce0012f5ef94c01f0130db97962ff1ce524af6"}, "closed": true, "closedAt": "2020-06-01T12:20:00Z", "author": {"login": "marcphilipp"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcf--syAH2gAyNDE1NzU3NTA4OmM0M2YzOWE1NGRlMWI1YzhiYTI3ZGQ4NGZiOTM2ZjhmY2EzYmFhZTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcm_EQEAH2gAyNDE1NzU3NTA4OjYwZTA3YzAyODJiZTI2ZjJhOTk4NzQ2OWY0NDMxZmQ4MzQyNjZlYTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c43f39a54de1b5c8ba27dd84fb936f8fca3baae6", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/c43f39a54de1b5c8ba27dd84fb936f8fca3baae6", "committedDate": "2020-05-10T18:00:20Z", "message": "Make EngineTestKit ignore implicit config params by default\n\nResolves #2285."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNTI1MDE1", "url": "https://github.com/junit-team/junit5/pull/2293#pullrequestreview-412525015", "createdAt": "2020-05-15T10:20:44Z", "commit": {"oid": "c43f39a54de1b5c8ba27dd84fb936f8fca3baae6"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyMDo0NFrOGV_HNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyMzoxMlrOGV_Mlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwNzMxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic LauncherDiscoveryRequestBuilder withImplicitConfigurationParameters(\n          \n          \n            \n            \tpublic LauncherDiscoveryRequestBuilder enableImplicitConfigurationParameters(", "url": "https://github.com/junit-team/junit5/pull/2293#discussion_r425707316", "createdAt": "2020-05-15T10:20:44Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherDiscoveryRequestBuilder.java", "diffHunk": "@@ -225,18 +226,31 @@ else if (filter instanceof DiscoveryFilter<?>) {\n \t\t}\n \t}\n \n+\t@API(status = API.Status.EXPERIMENTAL, since = \"1.7\")\n+\tpublic LauncherDiscoveryRequestBuilder withImplicitConfigurationParameters(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f39a54de1b5c8ba27dd84fb936f8fca3baae6"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwNzgwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tpublic Builder withImplicitConfigurationParameters(boolean useImplicitConfigurationParameters) {\n          \n          \n            \n            \t\tpublic Builder enableImplicitConfigurationParameters(boolean enabled) {", "url": "https://github.com/junit-team/junit5/pull/2293#discussion_r425707806", "createdAt": "2020-05-15T10:21:40Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-testkit/src/main/java/org/junit/platform/testkit/engine/EngineTestKit.java", "diffHunk": "@@ -438,6 +439,12 @@ public Builder configurationParameters(Map<String, String> configurationParamete\n \t\t\treturn this;\n \t\t}\n \n+\t\t@API(status = API.Status.EXPERIMENTAL, since = \"1.7\")\n+\t\tpublic Builder withImplicitConfigurationParameters(boolean useImplicitConfigurationParameters) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f39a54de1b5c8ba27dd84fb936f8fca3baae6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwODExMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tBuilder withImplicitLookups(boolean useImplicitLookups) {\n          \n          \n            \n            \t\tBuilder enableImplicitLookups(boolean enabled) {", "url": "https://github.com/junit-team/junit5/pull/2293#discussion_r425708110", "createdAt": "2020-05-15T10:22:10Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherConfigurationParameters.java", "diffHunk": "@@ -36,25 +38,157 @@\n \n \tprivate static final Logger logger = LoggerFactory.getLogger(LauncherConfigurationParameters.class);\n \n-\tprivate final Map<String, String> explicitConfigParams;\n-\tprivate final Properties configParamsFromFile;\n+\tstatic Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\n+\tprivate final List<Lookup> lookups;\n \n-\tLauncherConfigurationParameters() {\n-\t\tthis(emptyMap(), ConfigurationParameters.CONFIG_FILE_NAME);\n+\tprivate LauncherConfigurationParameters(List<Lookup> lookups) {\n+\t\tthis.lookups = lookups;\n+\t}\n+\n+\t@Override\n+\tpublic Optional<String> get(String key) {\n+\t\treturn Optional.ofNullable(getProperty(key));\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams) {\n-\t\tthis(configParams, ConfigurationParameters.CONFIG_FILE_NAME);\n+\t@Override\n+\tpublic Optional<Boolean> getBoolean(String key) {\n+\t\treturn get(key).map(Boolean::parseBoolean);\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams, String configFileName) {\n-\t\tPreconditions.notNull(configParams, \"configuration parameters must not be null\");\n-\t\tPreconditions.notBlank(configFileName, \"configFileName must not be null or blank\");\n-\t\tthis.explicitConfigParams = configParams;\n-\t\tthis.configParamsFromFile = fromClasspathResource(configFileName.trim());\n+\t@Override\n+\tpublic int size() {\n+\t\treturn lookups.stream() //\n+\t\t\t\t.mapToInt(Lookup::size) //\n+\t\t\t\t.sum();\n+\t}\n+\n+\tprivate String getProperty(String key) {\n+\t\tPreconditions.notBlank(key, \"key must not be null or blank\");\n+\t\treturn lookups.stream() //\n+\t\t\t\t.map(lookup -> lookup.getValue(key)) //\n+\t\t\t\t.filter(Objects::nonNull) //\n+\t\t\t\t.findFirst() //\n+\t\t\t\t.orElse(null);\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn new ToStringBuilder(this) //\n+\t\t\t\t.append(\"lookups\", lookups) //\n+\t\t\t\t.toString();\n+\t}\n+\n+\tstatic final class Builder {\n+\n+\t\tprivate final Map<String, String> explicitParameters = new HashMap<>();\n+\t\tprivate boolean useImplicitLookups = true;\n+\t\tprivate String configFileName = ConfigurationParameters.CONFIG_FILE_NAME;\n+\n+\t\tprivate Builder() {\n+\t\t}\n+\n+\t\tBuilder withExplicitParameters(Map<String, String> parameters) {\n+\t\t\tPreconditions.notNull(parameters, \"configuration parameters must not be null\");\n+\t\t\texplicitParameters.putAll(parameters);\n+\t\t\treturn this;\n+\t\t}\n+\n+\t\tBuilder withImplicitLookups(boolean useImplicitLookups) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f39a54de1b5c8ba27dd84fb936f8fca3baae6"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwODUxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tBuilder withExplicitParameters(Map<String, String> parameters) {\n          \n          \n            \n            \t\tBuilder explicitParameters(Map<String, String> parameters) {", "url": "https://github.com/junit-team/junit5/pull/2293#discussion_r425708518", "createdAt": "2020-05-15T10:22:58Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherConfigurationParameters.java", "diffHunk": "@@ -36,25 +38,157 @@\n \n \tprivate static final Logger logger = LoggerFactory.getLogger(LauncherConfigurationParameters.class);\n \n-\tprivate final Map<String, String> explicitConfigParams;\n-\tprivate final Properties configParamsFromFile;\n+\tstatic Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\n+\tprivate final List<Lookup> lookups;\n \n-\tLauncherConfigurationParameters() {\n-\t\tthis(emptyMap(), ConfigurationParameters.CONFIG_FILE_NAME);\n+\tprivate LauncherConfigurationParameters(List<Lookup> lookups) {\n+\t\tthis.lookups = lookups;\n+\t}\n+\n+\t@Override\n+\tpublic Optional<String> get(String key) {\n+\t\treturn Optional.ofNullable(getProperty(key));\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams) {\n-\t\tthis(configParams, ConfigurationParameters.CONFIG_FILE_NAME);\n+\t@Override\n+\tpublic Optional<Boolean> getBoolean(String key) {\n+\t\treturn get(key).map(Boolean::parseBoolean);\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams, String configFileName) {\n-\t\tPreconditions.notNull(configParams, \"configuration parameters must not be null\");\n-\t\tPreconditions.notBlank(configFileName, \"configFileName must not be null or blank\");\n-\t\tthis.explicitConfigParams = configParams;\n-\t\tthis.configParamsFromFile = fromClasspathResource(configFileName.trim());\n+\t@Override\n+\tpublic int size() {\n+\t\treturn lookups.stream() //\n+\t\t\t\t.mapToInt(Lookup::size) //\n+\t\t\t\t.sum();\n+\t}\n+\n+\tprivate String getProperty(String key) {\n+\t\tPreconditions.notBlank(key, \"key must not be null or blank\");\n+\t\treturn lookups.stream() //\n+\t\t\t\t.map(lookup -> lookup.getValue(key)) //\n+\t\t\t\t.filter(Objects::nonNull) //\n+\t\t\t\t.findFirst() //\n+\t\t\t\t.orElse(null);\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn new ToStringBuilder(this) //\n+\t\t\t\t.append(\"lookups\", lookups) //\n+\t\t\t\t.toString();\n+\t}\n+\n+\tstatic final class Builder {\n+\n+\t\tprivate final Map<String, String> explicitParameters = new HashMap<>();\n+\t\tprivate boolean useImplicitLookups = true;\n+\t\tprivate String configFileName = ConfigurationParameters.CONFIG_FILE_NAME;\n+\n+\t\tprivate Builder() {\n+\t\t}\n+\n+\t\tBuilder withExplicitParameters(Map<String, String> parameters) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f39a54de1b5c8ba27dd84fb936f8fca3baae6"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwODY5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tBuilder withConfigFileName(String configFileName) {\n          \n          \n            \n            \t\tBuilder configFileName(String configFileName) {", "url": "https://github.com/junit-team/junit5/pull/2293#discussion_r425708694", "createdAt": "2020-05-15T10:23:12Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherConfigurationParameters.java", "diffHunk": "@@ -36,25 +38,157 @@\n \n \tprivate static final Logger logger = LoggerFactory.getLogger(LauncherConfigurationParameters.class);\n \n-\tprivate final Map<String, String> explicitConfigParams;\n-\tprivate final Properties configParamsFromFile;\n+\tstatic Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\n+\tprivate final List<Lookup> lookups;\n \n-\tLauncherConfigurationParameters() {\n-\t\tthis(emptyMap(), ConfigurationParameters.CONFIG_FILE_NAME);\n+\tprivate LauncherConfigurationParameters(List<Lookup> lookups) {\n+\t\tthis.lookups = lookups;\n+\t}\n+\n+\t@Override\n+\tpublic Optional<String> get(String key) {\n+\t\treturn Optional.ofNullable(getProperty(key));\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams) {\n-\t\tthis(configParams, ConfigurationParameters.CONFIG_FILE_NAME);\n+\t@Override\n+\tpublic Optional<Boolean> getBoolean(String key) {\n+\t\treturn get(key).map(Boolean::parseBoolean);\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams, String configFileName) {\n-\t\tPreconditions.notNull(configParams, \"configuration parameters must not be null\");\n-\t\tPreconditions.notBlank(configFileName, \"configFileName must not be null or blank\");\n-\t\tthis.explicitConfigParams = configParams;\n-\t\tthis.configParamsFromFile = fromClasspathResource(configFileName.trim());\n+\t@Override\n+\tpublic int size() {\n+\t\treturn lookups.stream() //\n+\t\t\t\t.mapToInt(Lookup::size) //\n+\t\t\t\t.sum();\n+\t}\n+\n+\tprivate String getProperty(String key) {\n+\t\tPreconditions.notBlank(key, \"key must not be null or blank\");\n+\t\treturn lookups.stream() //\n+\t\t\t\t.map(lookup -> lookup.getValue(key)) //\n+\t\t\t\t.filter(Objects::nonNull) //\n+\t\t\t\t.findFirst() //\n+\t\t\t\t.orElse(null);\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn new ToStringBuilder(this) //\n+\t\t\t\t.append(\"lookups\", lookups) //\n+\t\t\t\t.toString();\n+\t}\n+\n+\tstatic final class Builder {\n+\n+\t\tprivate final Map<String, String> explicitParameters = new HashMap<>();\n+\t\tprivate boolean useImplicitLookups = true;\n+\t\tprivate String configFileName = ConfigurationParameters.CONFIG_FILE_NAME;\n+\n+\t\tprivate Builder() {\n+\t\t}\n+\n+\t\tBuilder withExplicitParameters(Map<String, String> parameters) {\n+\t\t\tPreconditions.notNull(parameters, \"configuration parameters must not be null\");\n+\t\t\texplicitParameters.putAll(parameters);\n+\t\t\treturn this;\n+\t\t}\n+\n+\t\tBuilder withImplicitLookups(boolean useImplicitLookups) {\n+\t\t\tthis.useImplicitLookups = useImplicitLookups;\n+\t\t\treturn this;\n+\t\t}\n+\n+\t\tBuilder withConfigFileName(String configFileName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f39a54de1b5c8ba27dd84fb936f8fca3baae6"}, "originalPosition": 97}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNTI3NDE1", "url": "https://github.com/junit-team/junit5/pull/2293#pullrequestreview-412527415", "createdAt": "2020-05-15T10:24:29Z", "commit": {"oid": "c43f39a54de1b5c8ba27dd84fb936f8fca3baae6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyNDoyOVrOGV_POQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyNDoyOVrOGV_POQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwOTM2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate interface Lookup {\n          \n          \n            \n            \tprivate interface PropertyProvider {", "url": "https://github.com/junit-team/junit5/pull/2293#discussion_r425709369", "createdAt": "2020-05-15T10:24:29Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherConfigurationParameters.java", "diffHunk": "@@ -36,25 +38,157 @@\n \n \tprivate static final Logger logger = LoggerFactory.getLogger(LauncherConfigurationParameters.class);\n \n-\tprivate final Map<String, String> explicitConfigParams;\n-\tprivate final Properties configParamsFromFile;\n+\tstatic Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\n+\tprivate final List<Lookup> lookups;\n \n-\tLauncherConfigurationParameters() {\n-\t\tthis(emptyMap(), ConfigurationParameters.CONFIG_FILE_NAME);\n+\tprivate LauncherConfigurationParameters(List<Lookup> lookups) {\n+\t\tthis.lookups = lookups;\n+\t}\n+\n+\t@Override\n+\tpublic Optional<String> get(String key) {\n+\t\treturn Optional.ofNullable(getProperty(key));\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams) {\n-\t\tthis(configParams, ConfigurationParameters.CONFIG_FILE_NAME);\n+\t@Override\n+\tpublic Optional<Boolean> getBoolean(String key) {\n+\t\treturn get(key).map(Boolean::parseBoolean);\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams, String configFileName) {\n-\t\tPreconditions.notNull(configParams, \"configuration parameters must not be null\");\n-\t\tPreconditions.notBlank(configFileName, \"configFileName must not be null or blank\");\n-\t\tthis.explicitConfigParams = configParams;\n-\t\tthis.configParamsFromFile = fromClasspathResource(configFileName.trim());\n+\t@Override\n+\tpublic int size() {\n+\t\treturn lookups.stream() //\n+\t\t\t\t.mapToInt(Lookup::size) //\n+\t\t\t\t.sum();\n+\t}\n+\n+\tprivate String getProperty(String key) {\n+\t\tPreconditions.notBlank(key, \"key must not be null or blank\");\n+\t\treturn lookups.stream() //\n+\t\t\t\t.map(lookup -> lookup.getValue(key)) //\n+\t\t\t\t.filter(Objects::nonNull) //\n+\t\t\t\t.findFirst() //\n+\t\t\t\t.orElse(null);\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn new ToStringBuilder(this) //\n+\t\t\t\t.append(\"lookups\", lookups) //\n+\t\t\t\t.toString();\n+\t}\n+\n+\tstatic final class Builder {\n+\n+\t\tprivate final Map<String, String> explicitParameters = new HashMap<>();\n+\t\tprivate boolean useImplicitLookups = true;\n+\t\tprivate String configFileName = ConfigurationParameters.CONFIG_FILE_NAME;\n+\n+\t\tprivate Builder() {\n+\t\t}\n+\n+\t\tBuilder withExplicitParameters(Map<String, String> parameters) {\n+\t\t\tPreconditions.notNull(parameters, \"configuration parameters must not be null\");\n+\t\t\texplicitParameters.putAll(parameters);\n+\t\t\treturn this;\n+\t\t}\n+\n+\t\tBuilder withImplicitLookups(boolean useImplicitLookups) {\n+\t\t\tthis.useImplicitLookups = useImplicitLookups;\n+\t\t\treturn this;\n+\t\t}\n+\n+\t\tBuilder withConfigFileName(String configFileName) {\n+\t\t\tPreconditions.notBlank(configFileName, \"configFileName must not be null or blank\");\n+\t\t\tthis.configFileName = configFileName;\n+\t\t\treturn this;\n+\t\t}\n+\n+\t\tLauncherConfigurationParameters build() {\n+\t\t\tList<Lookup> lookups = new ArrayList<>();\n+\t\t\tif (!explicitParameters.isEmpty()) {\n+\t\t\t\tlookups.add(Lookup.explicit(explicitParameters));\n+\t\t\t}\n+\t\t\tif (useImplicitLookups) {\n+\t\t\t\tlookups.add(Lookup.systemProperties());\n+\t\t\t\tlookups.add(Lookup.propertiesFile(configFileName));\n+\t\t\t}\n+\t\t\treturn new LauncherConfigurationParameters(lookups);\n+\t\t}\n \t}\n \n-\tprivate static Properties fromClasspathResource(String configFileName) {\n+\tprivate interface Lookup {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f39a54de1b5c8ba27dd84fb936f8fca3baae6"}, "originalPosition": 117}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b46135f656c180c883f183b5647ec53ca4308ab", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/3b46135f656c180c883f183b5647ec53ca4308ab", "committedDate": "2020-06-01T11:42:00Z", "message": "Rename all the things"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60e07c0282be26f2a9987469f4431fd834266ea6", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/60e07c0282be26f2a9987469f4431fd834266ea6", "committedDate": "2020-06-01T12:03:52Z", "message": "Document all the things"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3551, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}