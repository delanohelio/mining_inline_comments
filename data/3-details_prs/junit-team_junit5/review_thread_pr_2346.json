{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNjM0MzMx", "number": 2346, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMDoyMToyOVrOELNB-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQwODozNjowMlrOEUXFSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMTgzMjg4OnYy", "diffSide": "RIGHT", "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/converter/TypedArgumentConverter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMDoyMToyOVrOGsrtvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMDoyMToyOVrOGsrtvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUwNjc0OA==", "bodyText": "The @SuppressWarnings can be avoided via:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn convert((S) source);\n          \n          \n            \n            \t\treturn convert(sourceType.cast(source));", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r449506748", "createdAt": "2020-07-03T10:21:29Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/converter/TypedArgumentConverter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.params.converter;\n+\n+import static org.apiguardian.api.API.Status.EXPERIMENTAL;\n+\n+import org.apiguardian.api.API;\n+import org.junit.jupiter.api.extension.ParameterContext;\n+\n+/**\n+ * {@code TypedArgumentConverter} is an {@code ArgumentConverter} that\n+ * always converts a given type to another.\n+ *\n+ * @param <S> the type of the argument to convert\n+ * @param <T> the type of the target\n+ * @since 5.7\n+ * @see ArgumentConverter\n+ */\n+@API(status = EXPERIMENTAL, since = \"5.7\")\n+public abstract class TypedArgumentConverter<S, T> implements ArgumentConverter {\n+\n+\tprivate final Class<S> sourceType;\n+\tprivate final Class<T> targetType;\n+\n+\tprotected TypedArgumentConverter(Class<S> sourceType, Class<T> targetType) {\n+\t\tthis.sourceType = sourceType;\n+\t\tthis.targetType = targetType;\n+\t}\n+\n+\t@Override\n+\t@SuppressWarnings(\"unchecked\")\n+\tpublic final Object convert(Object source, ParameterContext context) throws ArgumentConversionException {\n+\t\tif (!sourceType.isAssignableFrom(source.getClass())) {\n+\t\t\tthrow new ArgumentConversionException(\"Can only convert objects of type \" + sourceType);\n+\t\t}\n+\t\tif (!targetType.isAssignableFrom(context.getParameter().getType())) {\n+\t\t\tthrow new ArgumentConversionException(\"Can only convert to type \" + targetType);\n+\t\t}\n+\t\treturn convert((S) source);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67c2cfd8ec23784c9ab7737139dd45d66e0db713"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMTg2MDkwOnYy", "diffSide": "RIGHT", "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/converter/TypedArgumentConverter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMDozMToyOVrOGsr-5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQxMTozNjoyN1rOGzuz4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUxMTE0MA==", "bodyText": "Please take a look at TypeBasedParameterResolver which determines the parameter type reflectively which would avoid the boilerplate constructor.", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r449511140", "createdAt": "2020-07-03T10:31:29Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/converter/TypedArgumentConverter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.params.converter;\n+\n+import static org.apiguardian.api.API.Status.EXPERIMENTAL;\n+\n+import org.apiguardian.api.API;\n+import org.junit.jupiter.api.extension.ParameterContext;\n+\n+/**\n+ * {@code TypedArgumentConverter} is an {@code ArgumentConverter} that\n+ * always converts a given type to another.\n+ *\n+ * @param <S> the type of the argument to convert\n+ * @param <T> the type of the target\n+ * @since 5.7\n+ * @see ArgumentConverter\n+ */\n+@API(status = EXPERIMENTAL, since = \"5.7\")\n+public abstract class TypedArgumentConverter<S, T> implements ArgumentConverter {\n+\n+\tprivate final Class<S> sourceType;\n+\tprivate final Class<T> targetType;\n+\n+\tprotected TypedArgumentConverter(Class<S> sourceType, Class<T> targetType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67c2cfd8ec23784c9ab7737139dd45d66e0db713"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkwNDUzMg==", "bodyText": "Thing is, I would have to cast the found Class objects into Class<S> and Class<T>? Or am I missing something?", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r449904532", "createdAt": "2020-07-05T18:16:37Z", "author": {"login": "juliette-derancourt"}, "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/converter/TypedArgumentConverter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.params.converter;\n+\n+import static org.apiguardian.api.API.Status.EXPERIMENTAL;\n+\n+import org.apiguardian.api.API;\n+import org.junit.jupiter.api.extension.ParameterContext;\n+\n+/**\n+ * {@code TypedArgumentConverter} is an {@code ArgumentConverter} that\n+ * always converts a given type to another.\n+ *\n+ * @param <S> the type of the argument to convert\n+ * @param <T> the type of the target\n+ * @since 5.7\n+ * @see ArgumentConverter\n+ */\n+@API(status = EXPERIMENTAL, since = \"5.7\")\n+public abstract class TypedArgumentConverter<S, T> implements ArgumentConverter {\n+\n+\tprivate final Class<S> sourceType;\n+\tprivate final Class<T> targetType;\n+\n+\tprotected TypedArgumentConverter(Class<S> sourceType, Class<T> targetType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUxMTE0MA=="}, "originalCommit": {"oid": "67c2cfd8ec23784c9ab7737139dd45d66e0db713"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5NzUwNA==", "bodyText": "I guess so... \ud83e\udd14 @sbrannen WDYT?", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r456897504", "createdAt": "2020-07-19T11:36:27Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/converter/TypedArgumentConverter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.params.converter;\n+\n+import static org.apiguardian.api.API.Status.EXPERIMENTAL;\n+\n+import org.apiguardian.api.API;\n+import org.junit.jupiter.api.extension.ParameterContext;\n+\n+/**\n+ * {@code TypedArgumentConverter} is an {@code ArgumentConverter} that\n+ * always converts a given type to another.\n+ *\n+ * @param <S> the type of the argument to convert\n+ * @param <T> the type of the target\n+ * @since 5.7\n+ * @see ArgumentConverter\n+ */\n+@API(status = EXPERIMENTAL, since = \"5.7\")\n+public abstract class TypedArgumentConverter<S, T> implements ArgumentConverter {\n+\n+\tprivate final Class<S> sourceType;\n+\tprivate final Class<T> targetType;\n+\n+\tprotected TypedArgumentConverter(Class<S> sourceType, Class<T> targetType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUxMTE0MA=="}, "originalCommit": {"oid": "67c2cfd8ec23784c9ab7737139dd45d66e0db713"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5Nzg1MDc0OnYy", "diffSide": "RIGHT", "path": "documentation/src/docs/asciidoc/release-notes/release-notes-5.7.0-M2.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQwODozNTowNVrOG6jXOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQwODozNTowNVrOG6jXOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA0OTk3OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * New `TypedArgumentConverter` that always convert one specific type to another, therefore\n          \n          \n            \n              reducing boilerplate type checks compared to `ArgumentConverter`.\n          \n          \n            \n            * New `TypedArgumentConverter` for converting one specific type to another, therefore\n          \n          \n            \n              reducing boilerplate type checks compared to implementing `ArgumentConverter` directly.", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r464049979", "createdAt": "2020-08-02T08:35:05Z", "author": {"login": "marcphilipp"}, "path": "documentation/src/docs/asciidoc/release-notes/release-notes-5.7.0-M2.adoc", "diffHunk": "@@ -105,6 +105,8 @@ on GitHub.\n   same functionality but a more descriptive name.\n * `assertTimeoutPreemptively` in `Assertions` now reports the stacktrace of the timed out\n   thread in the cause of the `AssertionFailedError`.\n+* New `TypedArgumentConverter` that always convert one specific type to another, therefore\n+  reducing boilerplate type checks compared to `ArgumentConverter`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8ad09df2a292f521c7e3a587b4f45f05be4efcd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5Nzg1MTYyOnYy", "diffSide": "RIGHT", "path": "documentation/src/docs/asciidoc/user-guide/writing-tests.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQwODozNjowMlrOG6jXqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQwODozNjowMlrOG6jXqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA1MDA5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `TypedArgumentConverter` that reduce boilerplate type checks.\n          \n          \n            \n            `TypedArgumentConverter` to avoid boilerplate type checks.", "url": "https://github.com/junit-team/junit5/pull/2346#discussion_r464050091", "createdAt": "2020-08-02T08:36:02Z", "author": {"login": "marcphilipp"}, "path": "documentation/src/docs/asciidoc/user-guide/writing-tests.adoc", "diffHunk": "@@ -1442,6 +1442,14 @@ include::{testDir}/example/ParameterizedTestDemo.java[tags=explicit_conversion_e\n include::{testDir}/example/ParameterizedTestDemo.java[tags=explicit_conversion_example_ToStringArgumentConverter]\n ----\n \n+If the converter is only meant to convert one type to another, you can extend\n+`TypedArgumentConverter` that reduce boilerplate type checks.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8ad09df2a292f521c7e3a587b4f45f05be4efcd"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4061, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}