{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NDQ1Nzkz", "number": 2382, "title": "Introduce global default lock to facilitate isolated test execution", "bodyText": "This commit introduces a new global resource lock \"global\" that all\ntest descriptors that are children of the engine descriptor acquire by\ndefault in READ mode. Using the @Isolated annotation in the Jupiter\nAPI causes the mode to be changed to READ_WRITE.\nWill eventually resolve #2142.\n\nI hereby agree to the terms of the JUnit Contributor License Agreement.\n\nDefinition of Done\n\n There are no TODOs left in the code\n Method preconditions are checked and documented in the method's Javadoc\n Coding conventions (e.g. for logging) have been followed\n Change is covered by automated tests including corner cases, errors, and exception handling\n\n Add tests for @Isolated on test classes and in @Nested tests\n\n\n Public API has Javadoc and @API annotations\n Change is documented in the User Guide and Release Notes\n All continuous integration builds pass", "createdAt": "2020-08-13T15:05:01Z", "url": "https://github.com/junit-team/junit5/pull/2382", "merged": true, "mergeCommit": {"oid": "8760ec1e67b4a27b1c2c699721a312651df32e99"}, "closed": true, "closedAt": "2020-08-15T14:47:34Z", "author": {"login": "marcphilipp"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-hW8hgH2gAyNDY3NDQ1NzkzOjhiN2M2ZGZiZWNjMmZhNjdiM2RiNzJlNjJkODM1NDM5ZDk5MDg5ZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_LoWCAFqTQ2ODAwMjk2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8b7c6dfbecc2fa67b3db72e62d835439d99089fc", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/8b7c6dfbecc2fa67b3db72e62d835439d99089fc", "committedDate": "2020-08-13T15:01:19Z", "message": "Introduce global default lock to facilitate isolated test execution\n\nThis commit introduces a new global resource lock \"__global__\" that all\ntest descriptors that are children of the engine descriptor acquire by\ndefault in READ mode. Using the `@Isolated` annotation in the Jupiter\nAPI causes the mode to be changed to READ_WRITE.\n\nCo-authored-by: Leonard Br\u00fcnings <lord_damokles@gmx.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2ODc2ODkx", "url": "https://github.com/junit-team/junit5/pull/2382#pullrequestreview-466876891", "createdAt": "2020-08-13T15:31:37Z", "commit": {"oid": "8b7c6dfbecc2fa67b3db72e62d835439d99089fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTozMTozN1rOHAQ9Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTozMTozN1rOHAQ9Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzOTg1OQ==", "bodyText": "This can be moved into the else branch again.", "url": "https://github.com/junit-team/junit5/pull/2382#discussion_r470039859", "createdAt": "2020-08-13T15:31:37Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-engine/src/main/java/org/junit/platform/engine/support/hierarchical/NodeTreeWalker.java", "diffHunk": "@@ -10,39 +10,62 @@\n \n package org.junit.platform.engine.support.hierarchical;\n \n+import static java.util.Collections.singleton;\n+import static org.junit.platform.engine.support.hierarchical.ExclusiveResource.GLOBAL_RESOURCE_LOCK_KEY;\n import static org.junit.platform.engine.support.hierarchical.Node.ExecutionMode.SAME_THREAD;\n \n import java.util.HashSet;\n import java.util.Set;\n import java.util.function.Consumer;\n \n+import org.junit.platform.commons.util.Preconditions;\n import org.junit.platform.engine.TestDescriptor;\n \n /**\n  * @since 1.3\n  */\n class NodeTreeWalker {\n \n+\tprivate static final ExclusiveResource GLOBAL_WRITE_LOCK = new ExclusiveResource(GLOBAL_RESOURCE_LOCK_KEY,\n+\t\tExclusiveResource.LockMode.READ_WRITE);\n+\tprivate static final ExclusiveResource GLOBAL_READ_LOCK = new ExclusiveResource(GLOBAL_RESOURCE_LOCK_KEY,\n+\t\tExclusiveResource.LockMode.READ);\n+\n \tprivate final LockManager lockManager = new LockManager();\n \n-\tNodeExecutionAdvisor walk(TestDescriptor testDescriptor) {\n+\tNodeExecutionAdvisor walk(TestDescriptor rootDescriptor) {\n \t\tNodeExecutionAdvisor advisor = new NodeExecutionAdvisor();\n-\t\twalk(testDescriptor, advisor);\n+\t\tPreconditions.condition(getExclusiveResources(rootDescriptor).isEmpty(),\n+\t\t\t\"Engine descriptor must not declare exclusive resources\");\n+\t\trootDescriptor.getChildren().forEach(child -> {\n+\t\t\twalk(child, child, advisor);\n+\t\t});\n \t\treturn advisor;\n \t}\n \n-\tprivate void walk(TestDescriptor testDescriptor, NodeExecutionAdvisor advisor) {\n+\tprivate void walk(TestDescriptor globalLockDescriptor, TestDescriptor testDescriptor,\n+\t\t\tNodeExecutionAdvisor advisor) {\n \t\tSet<ExclusiveResource> exclusiveResources = getExclusiveResources(testDescriptor);\n+\t\tSet<ExclusiveResource> allResources = new HashSet<>(exclusiveResources);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b7c6dfbecc2fa67b3db72e62d835439d99089fc"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2ODc3Nzcx", "url": "https://github.com/junit-team/junit5/pull/2382#pullrequestreview-466877771", "createdAt": "2020-08-13T15:32:36Z", "commit": {"oid": "8b7c6dfbecc2fa67b3db72e62d835439d99089fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTozMjozNlrOHAQ_qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTozMjozNlrOHAQ_qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MDQ5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tnew ExclusiveResource(GLOBAL_RESOURCE_LOCK_KEY, globalLockMode), new ExclusiveResource(\"bar\", READ_WRITE));\n          \n          \n            \n            \t\t\tnew ExclusiveResource(GLOBAL_RESOURCE_LOCK_KEY, globalLockMode), //\n          \n          \n            \n            \t\t\tnew ExclusiveResource(\"bar\", READ_WRITE));", "url": "https://github.com/junit-team/junit5/pull/2382#discussion_r470040490", "createdAt": "2020-08-13T15:32:36Z", "author": {"login": "marcphilipp"}, "path": "platform-tests/src/test/java/org/junit/platform/engine/support/hierarchical/LockManagerTests.java", "diffHunk": "@@ -93,6 +97,27 @@ void returnsWriteLockForExclusiveResourceWithBothLockModes() {\n \t\tassertThat(locks.get(1)).isInstanceOf(WriteLock.class);\n \t}\n \n+\t@ParameterizedTest\n+\t@EnumSource\n+\tvoid globalLockComesFirst(LockMode globalLockMode) {\n+\t\tCollection<ExclusiveResource> resources = asList( //\n+\t\t\tnew ExclusiveResource(\"___foo\", READ), //\n+\t\t\tnew ExclusiveResource(\"foo\", READ_WRITE), //\n+\t\t\tnew ExclusiveResource(GLOBAL_RESOURCE_LOCK_KEY, globalLockMode), new ExclusiveResource(\"bar\", READ_WRITE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b7c6dfbecc2fa67b3db72e62d835439d99089fc"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3f5a4dbb98cccc0bd198d54d3047e91644cd29f", "author": {"user": {"login": "leonard84", "name": "Leonard Br\u00fcnings"}}, "url": "https://github.com/junit-team/junit5/commit/e3f5a4dbb98cccc0bd198d54d3047e91644cd29f", "committedDate": "2020-08-13T17:02:51Z", "message": "Add more tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NDYyMjIw", "url": "https://github.com/junit-team/junit5/pull/2382#pullrequestreview-467462220", "createdAt": "2020-08-14T10:10:07Z", "commit": {"oid": "e3f5a4dbb98cccc0bd198d54d3047e91644cd29f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMDoxMDowN1rOHAvPhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMDoxMDowN1rOHAvPhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUzNjA2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Target({ ElementType.TYPE, ElementType.METHOD })\n          \n          \n            \n            @Target(ElementType.TYPE)", "url": "https://github.com/junit-team/junit5/pull/2382#discussion_r470536068", "createdAt": "2020-08-14T10:10:07Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/parallel/Isolated.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.api.parallel;\n+\n+import static org.apiguardian.api.API.Status.EXPERIMENTAL;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Inherited;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import org.apiguardian.api.API;\n+\n+@API(status = EXPERIMENTAL, since = \"5.7\")\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target({ ElementType.TYPE, ElementType.METHOD })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3f5a4dbb98cccc0bd198d54d3047e91644cd29f"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NDY5ODMx", "url": "https://github.com/junit-team/junit5/pull/2382#pullrequestreview-467469831", "createdAt": "2020-08-14T10:23:13Z", "commit": {"oid": "e3f5a4dbb98cccc0bd198d54d3047e91644cd29f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMDoyMzoxM1rOHAvmhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMDoyMzoxM1rOHAvmhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU0MTk1Ng==", "bodyText": "\u2753 Feedback from JUnit team call: maybe call the lock __isolated__? Or namespace it (e.g. junit.platform.isolation)?", "url": "https://github.com/junit-team/junit5/pull/2382#discussion_r470541956", "createdAt": "2020-08-14T10:23:13Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/parallel/Isolated.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.api.parallel;\n+\n+import static org.apiguardian.api.API.Status.EXPERIMENTAL;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Inherited;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import org.apiguardian.api.API;\n+\n+@API(status = EXPERIMENTAL, since = \"5.7\")\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target({ ElementType.TYPE, ElementType.METHOD })\n+@Inherited\n+@ResourceLock(\"__global__\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3f5a4dbb98cccc0bd198d54d3047e91644cd29f"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "662c8e1558f9dff065f2f44b6328d4caca01f8a6", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/662c8e1558f9dff065f2f44b6328d4caca01f8a6", "committedDate": "2020-08-14T18:12:46Z", "message": "Reduce applicability of Isolated annotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee12be4c2f435951c729d0b5d201cd2c24fa6e4e", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/ee12be4c2f435951c729d0b5d201cd2c24fa6e4e", "committedDate": "2020-08-14T18:13:13Z", "message": "Improve formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa115a6b4eeeea6f0f1db8822296e198073128be", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/aa115a6b4eeeea6f0f1db8822296e198073128be", "committedDate": "2020-08-14T18:32:03Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54009fff7e36f94c29b5a587f52e774f791b6e10", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/54009fff7e36f94c29b5a587f52e774f791b6e10", "committedDate": "2020-08-14T18:34:42Z", "message": "Move allResources back into else branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2be0236b5cde5d85ec77d557ecd69ae3a56a7bdd", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/2be0236b5cde5d85ec77d557ecd69ae3a56a7bdd", "committedDate": "2020-08-14T18:51:58Z", "message": "Simplify comparator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6b4e496f36a6fc976d5d9a6875979c11b7181aa", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/d6b4e496f36a6fc976d5d9a6875979c11b7181aa", "committedDate": "2020-08-15T09:01:56Z", "message": "Document Isolated annotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99683df4d29ccec7b185319ef2ee1f8f5a4d9490", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/99683df4d29ccec7b185319ef2ee1f8f5a4d9490", "committedDate": "2020-08-15T09:02:35Z", "message": "Rename global lock and make constant public"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTYxNjY1", "url": "https://github.com/junit-team/junit5/pull/2382#pullrequestreview-467961665", "createdAt": "2020-08-15T09:55:50Z", "commit": {"oid": "99683df4d29ccec7b185319ef2ee1f8f5a4d9490"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwOTo1NTo1MFrOHBJKzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwOTo1NTo1MFrOHBJKzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2MDg0NA==", "bodyText": "You could create a constant for the singleton locks, no real need to create new instances, same for the read_write below", "url": "https://github.com/junit-team/junit5/pull/2382#discussion_r470960844", "createdAt": "2020-08-15T09:55:50Z", "author": {"login": "leonard84"}, "path": "junit-platform-engine/src/main/java/org/junit/platform/engine/support/hierarchical/NodeTreeWalker.java", "diffHunk": "@@ -25,16 +29,20 @@\n \n \tprivate final LockManager lockManager = new LockManager();\n \n-\tNodeExecutionAdvisor walk(TestDescriptor testDescriptor) {\n+\tNodeExecutionAdvisor walk(TestDescriptor rootDescriptor) {\n \t\tNodeExecutionAdvisor advisor = new NodeExecutionAdvisor();\n-\t\twalk(testDescriptor, advisor);\n+\t\tPreconditions.condition(getExclusiveResources(rootDescriptor).isEmpty(),\n+\t\t\t\"Engine descriptor must not declare exclusive resources\");\n+\t\trootDescriptor.getChildren().forEach(child -> walk(child, child, advisor));\n \t\treturn advisor;\n \t}\n \n-\tprivate void walk(TestDescriptor testDescriptor, NodeExecutionAdvisor advisor) {\n+\tprivate void walk(TestDescriptor globalLockDescriptor, TestDescriptor testDescriptor,\n+\t\t\tNodeExecutionAdvisor advisor) {\n \t\tSet<ExclusiveResource> exclusiveResources = getExclusiveResources(testDescriptor);\n \t\tif (exclusiveResources.isEmpty()) {\n-\t\t\ttestDescriptor.getChildren().forEach(child -> walk(child, advisor));\n+\t\t\tadvisor.useResourceLock(testDescriptor, lockManager.getLockForResources(singleton(GLOBAL_READ)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99683df4d29ccec7b185319ef2ee1f8f5a4d9490"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTYyNDY1", "url": "https://github.com/junit-team/junit5/pull/2382#pullrequestreview-467962465", "createdAt": "2020-08-15T10:12:13Z", "commit": {"oid": "99683df4d29ccec7b185319ef2ee1f8f5a4d9490"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMDoxMjoxM1rOHBJQAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMDoxMjoxM1rOHBJQAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2MjE3Ng==", "bodyText": "Maybe extend the explanation a bit with the additional effects if any such child requests READ_WRITE for this key, i.e. lock coarsening to top-level descriptor, forced same thread execution", "url": "https://github.com/junit-team/junit5/pull/2382#discussion_r470962176", "createdAt": "2020-08-15T10:12:13Z", "author": {"login": "leonard84"}, "path": "junit-platform-engine/src/main/java/org/junit/platform/engine/support/hierarchical/ExclusiveResource.java", "diffHunk": "@@ -29,6 +29,19 @@\n @API(status = EXPERIMENTAL, since = \"1.3\")\n public class ExclusiveResource {\n \n+\t/**\n+\t * The key for the global resource lock that all direct children of the\n+\t * engine descriptor acquire in {@linkplain LockMode#READ read} mode by\n+\t * default.\n+\t *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99683df4d29ccec7b185319ef2ee1f8f5a4d9490"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65029a222d382dd0fabaff9fcbd231ee8b1971bb", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/65029a222d382dd0fabaff9fcbd231ee8b1971bb", "committedDate": "2020-08-15T10:23:12Z", "message": "Minimize allocations for single resource lock"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7a7742ba8c4c8dab6956a2265262920e22b9434", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/f7a7742ba8c4c8dab6956a2265262920e22b9434", "committedDate": "2020-08-15T10:38:11Z", "message": "Document current semantics of global resource lock"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61fbbaedb54995e6cf4372cd311d1e5c615018f9", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/61fbbaedb54995e6cf4372cd311d1e5c615018f9", "committedDate": "2020-08-15T10:40:08Z", "message": "Polishing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dce2d61d391564892173d0b7293a3d6ede38cb47", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/dce2d61d391564892173d0b7293a3d6ede38cb47", "committedDate": "2020-08-15T11:14:45Z", "message": "Add test for NodeTreeWalker's lock coarsening"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0c2dabdb0f06adc1072231071a0b84174aabe8d", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/f0c2dabdb0f06adc1072231071a0b84174aabe8d", "committedDate": "2020-08-15T11:29:13Z", "message": "Only allocate ResourceLocks for global locks once"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9afd579efcde6f148b0e41fb8beaa9a0e4c7abf1", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/9afd579efcde6f148b0e41fb8beaa9a0e4c7abf1", "committedDate": "2020-08-15T11:30:37Z", "message": "Polishing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTY1ODIy", "url": "https://github.com/junit-team/junit5/pull/2382#pullrequestreview-467965822", "createdAt": "2020-08-15T11:33:16Z", "commit": {"oid": "9afd579efcde6f148b0e41fb8beaa9a0e4c7abf1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30f1955235456c1cba70ee34b33a676b4f938b62", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/30f1955235456c1cba70ee34b33a676b4f938b62", "committedDate": "2020-08-15T11:33:27Z", "message": "Use switch"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTY5ODg3", "url": "https://github.com/junit-team/junit5/pull/2382#pullrequestreview-467969887", "createdAt": "2020-08-15T12:47:11Z", "commit": {"oid": "30f1955235456c1cba70ee34b33a676b4f938b62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDAyOTY1", "url": "https://github.com/junit-team/junit5/pull/2382#pullrequestreview-468002965", "createdAt": "2020-08-15T16:16:19Z", "commit": {"oid": "30f1955235456c1cba70ee34b33a676b4f938b62"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxNjoxNjoyMFrOHBML2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxNjoxNjoyMFrOHBML2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAxMDI2NQ==", "bodyText": "I wonder if the constant could be declared in the interface, so it could be referenced from ExclusiveResource", "url": "https://github.com/junit-team/junit5/pull/2382#discussion_r471010265", "createdAt": "2020-08-15T16:16:20Z", "author": {"login": "vlsi"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/parallel/Isolated.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.api.parallel;\n+\n+import static org.apiguardian.api.API.Status.EXPERIMENTAL;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Inherited;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * {@code @Isolated} is used to declare that the annotated test class should be\n+ * executed in isolation from other test classes.\n+ *\n+ * <p>When a test class is run in isolation, no other test class is executed\n+ * concurrently. This can be used to enable parallel test execution for the\n+ * entire test suite while running some tests in isolation (e.g. if they modify\n+ * some global resource).\n+ *\n+ * @since 5.7\n+ * @see ExecutionMode\n+ * @see ResourceLock\n+ */\n+@API(status = EXPERIMENTAL, since = \"5.7\")\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.TYPE)\n+@Inherited\n+@ResourceLock(\"org.junit.platform.engine.support.hierarchical.ExclusiveResource.GLOBAL_KEY\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30f1955235456c1cba70ee34b33a676b4f938b62"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3604, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}