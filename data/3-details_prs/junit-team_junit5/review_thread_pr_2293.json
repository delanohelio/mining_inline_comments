{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NzU3NTA4", "number": 2293, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyMDo0NFrOD80Pig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyNDoyOVrOD80Urg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDk3MDk4OnYy", "diffSide": "RIGHT", "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherDiscoveryRequestBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyMDo0NFrOGV_HNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyMDo0NFrOGV_HNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwNzMxNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic LauncherDiscoveryRequestBuilder withImplicitConfigurationParameters(\n          \n          \n            \n            \tpublic LauncherDiscoveryRequestBuilder enableImplicitConfigurationParameters(", "url": "https://github.com/junit-team/junit5/pull/2293#discussion_r425707316", "createdAt": "2020-05-15T10:20:44Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherDiscoveryRequestBuilder.java", "diffHunk": "@@ -225,18 +226,31 @@ else if (filter instanceof DiscoveryFilter<?>) {\n \t\t}\n \t}\n \n+\t@API(status = API.Status.EXPERIMENTAL, since = \"1.7\")\n+\tpublic LauncherDiscoveryRequestBuilder withImplicitConfigurationParameters(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f39a54de1b5c8ba27dd84fb936f8fca3baae6"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDk3NDAwOnYy", "diffSide": "RIGHT", "path": "junit-platform-testkit/src/main/java/org/junit/platform/testkit/engine/EngineTestKit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyMTo0MFrOGV_JHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyMTo0MFrOGV_JHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwNzgwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tpublic Builder withImplicitConfigurationParameters(boolean useImplicitConfigurationParameters) {\n          \n          \n            \n            \t\tpublic Builder enableImplicitConfigurationParameters(boolean enabled) {", "url": "https://github.com/junit-team/junit5/pull/2293#discussion_r425707806", "createdAt": "2020-05-15T10:21:40Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-testkit/src/main/java/org/junit/platform/testkit/engine/EngineTestKit.java", "diffHunk": "@@ -438,6 +439,12 @@ public Builder configurationParameters(Map<String, String> configurationParamete\n \t\t\treturn this;\n \t\t}\n \n+\t\t@API(status = API.Status.EXPERIMENTAL, since = \"1.7\")\n+\t\tpublic Builder withImplicitConfigurationParameters(boolean useImplicitConfigurationParameters) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f39a54de1b5c8ba27dd84fb936f8fca3baae6"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDk3NjEyOnYy", "diffSide": "RIGHT", "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherConfigurationParameters.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyMjoxMFrOGV_KTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyMjoxMFrOGV_KTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwODExMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tBuilder withImplicitLookups(boolean useImplicitLookups) {\n          \n          \n            \n            \t\tBuilder enableImplicitLookups(boolean enabled) {", "url": "https://github.com/junit-team/junit5/pull/2293#discussion_r425708110", "createdAt": "2020-05-15T10:22:10Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherConfigurationParameters.java", "diffHunk": "@@ -36,25 +38,157 @@\n \n \tprivate static final Logger logger = LoggerFactory.getLogger(LauncherConfigurationParameters.class);\n \n-\tprivate final Map<String, String> explicitConfigParams;\n-\tprivate final Properties configParamsFromFile;\n+\tstatic Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\n+\tprivate final List<Lookup> lookups;\n \n-\tLauncherConfigurationParameters() {\n-\t\tthis(emptyMap(), ConfigurationParameters.CONFIG_FILE_NAME);\n+\tprivate LauncherConfigurationParameters(List<Lookup> lookups) {\n+\t\tthis.lookups = lookups;\n+\t}\n+\n+\t@Override\n+\tpublic Optional<String> get(String key) {\n+\t\treturn Optional.ofNullable(getProperty(key));\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams) {\n-\t\tthis(configParams, ConfigurationParameters.CONFIG_FILE_NAME);\n+\t@Override\n+\tpublic Optional<Boolean> getBoolean(String key) {\n+\t\treturn get(key).map(Boolean::parseBoolean);\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams, String configFileName) {\n-\t\tPreconditions.notNull(configParams, \"configuration parameters must not be null\");\n-\t\tPreconditions.notBlank(configFileName, \"configFileName must not be null or blank\");\n-\t\tthis.explicitConfigParams = configParams;\n-\t\tthis.configParamsFromFile = fromClasspathResource(configFileName.trim());\n+\t@Override\n+\tpublic int size() {\n+\t\treturn lookups.stream() //\n+\t\t\t\t.mapToInt(Lookup::size) //\n+\t\t\t\t.sum();\n+\t}\n+\n+\tprivate String getProperty(String key) {\n+\t\tPreconditions.notBlank(key, \"key must not be null or blank\");\n+\t\treturn lookups.stream() //\n+\t\t\t\t.map(lookup -> lookup.getValue(key)) //\n+\t\t\t\t.filter(Objects::nonNull) //\n+\t\t\t\t.findFirst() //\n+\t\t\t\t.orElse(null);\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn new ToStringBuilder(this) //\n+\t\t\t\t.append(\"lookups\", lookups) //\n+\t\t\t\t.toString();\n+\t}\n+\n+\tstatic final class Builder {\n+\n+\t\tprivate final Map<String, String> explicitParameters = new HashMap<>();\n+\t\tprivate boolean useImplicitLookups = true;\n+\t\tprivate String configFileName = ConfigurationParameters.CONFIG_FILE_NAME;\n+\n+\t\tprivate Builder() {\n+\t\t}\n+\n+\t\tBuilder withExplicitParameters(Map<String, String> parameters) {\n+\t\t\tPreconditions.notNull(parameters, \"configuration parameters must not be null\");\n+\t\t\texplicitParameters.putAll(parameters);\n+\t\t\treturn this;\n+\t\t}\n+\n+\t\tBuilder withImplicitLookups(boolean useImplicitLookups) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f39a54de1b5c8ba27dd84fb936f8fca3baae6"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDk3ODczOnYy", "diffSide": "RIGHT", "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherConfigurationParameters.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyMjo1OFrOGV_L5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyMjo1OFrOGV_L5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwODUxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tBuilder withExplicitParameters(Map<String, String> parameters) {\n          \n          \n            \n            \t\tBuilder explicitParameters(Map<String, String> parameters) {", "url": "https://github.com/junit-team/junit5/pull/2293#discussion_r425708518", "createdAt": "2020-05-15T10:22:58Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherConfigurationParameters.java", "diffHunk": "@@ -36,25 +38,157 @@\n \n \tprivate static final Logger logger = LoggerFactory.getLogger(LauncherConfigurationParameters.class);\n \n-\tprivate final Map<String, String> explicitConfigParams;\n-\tprivate final Properties configParamsFromFile;\n+\tstatic Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\n+\tprivate final List<Lookup> lookups;\n \n-\tLauncherConfigurationParameters() {\n-\t\tthis(emptyMap(), ConfigurationParameters.CONFIG_FILE_NAME);\n+\tprivate LauncherConfigurationParameters(List<Lookup> lookups) {\n+\t\tthis.lookups = lookups;\n+\t}\n+\n+\t@Override\n+\tpublic Optional<String> get(String key) {\n+\t\treturn Optional.ofNullable(getProperty(key));\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams) {\n-\t\tthis(configParams, ConfigurationParameters.CONFIG_FILE_NAME);\n+\t@Override\n+\tpublic Optional<Boolean> getBoolean(String key) {\n+\t\treturn get(key).map(Boolean::parseBoolean);\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams, String configFileName) {\n-\t\tPreconditions.notNull(configParams, \"configuration parameters must not be null\");\n-\t\tPreconditions.notBlank(configFileName, \"configFileName must not be null or blank\");\n-\t\tthis.explicitConfigParams = configParams;\n-\t\tthis.configParamsFromFile = fromClasspathResource(configFileName.trim());\n+\t@Override\n+\tpublic int size() {\n+\t\treturn lookups.stream() //\n+\t\t\t\t.mapToInt(Lookup::size) //\n+\t\t\t\t.sum();\n+\t}\n+\n+\tprivate String getProperty(String key) {\n+\t\tPreconditions.notBlank(key, \"key must not be null or blank\");\n+\t\treturn lookups.stream() //\n+\t\t\t\t.map(lookup -> lookup.getValue(key)) //\n+\t\t\t\t.filter(Objects::nonNull) //\n+\t\t\t\t.findFirst() //\n+\t\t\t\t.orElse(null);\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn new ToStringBuilder(this) //\n+\t\t\t\t.append(\"lookups\", lookups) //\n+\t\t\t\t.toString();\n+\t}\n+\n+\tstatic final class Builder {\n+\n+\t\tprivate final Map<String, String> explicitParameters = new HashMap<>();\n+\t\tprivate boolean useImplicitLookups = true;\n+\t\tprivate String configFileName = ConfigurationParameters.CONFIG_FILE_NAME;\n+\n+\t\tprivate Builder() {\n+\t\t}\n+\n+\t\tBuilder withExplicitParameters(Map<String, String> parameters) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f39a54de1b5c8ba27dd84fb936f8fca3baae6"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDk3OTk2OnYy", "diffSide": "RIGHT", "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherConfigurationParameters.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyMzoxMlrOGV_Mlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyMzoxMlrOGV_Mlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwODY5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tBuilder withConfigFileName(String configFileName) {\n          \n          \n            \n            \t\tBuilder configFileName(String configFileName) {", "url": "https://github.com/junit-team/junit5/pull/2293#discussion_r425708694", "createdAt": "2020-05-15T10:23:12Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherConfigurationParameters.java", "diffHunk": "@@ -36,25 +38,157 @@\n \n \tprivate static final Logger logger = LoggerFactory.getLogger(LauncherConfigurationParameters.class);\n \n-\tprivate final Map<String, String> explicitConfigParams;\n-\tprivate final Properties configParamsFromFile;\n+\tstatic Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\n+\tprivate final List<Lookup> lookups;\n \n-\tLauncherConfigurationParameters() {\n-\t\tthis(emptyMap(), ConfigurationParameters.CONFIG_FILE_NAME);\n+\tprivate LauncherConfigurationParameters(List<Lookup> lookups) {\n+\t\tthis.lookups = lookups;\n+\t}\n+\n+\t@Override\n+\tpublic Optional<String> get(String key) {\n+\t\treturn Optional.ofNullable(getProperty(key));\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams) {\n-\t\tthis(configParams, ConfigurationParameters.CONFIG_FILE_NAME);\n+\t@Override\n+\tpublic Optional<Boolean> getBoolean(String key) {\n+\t\treturn get(key).map(Boolean::parseBoolean);\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams, String configFileName) {\n-\t\tPreconditions.notNull(configParams, \"configuration parameters must not be null\");\n-\t\tPreconditions.notBlank(configFileName, \"configFileName must not be null or blank\");\n-\t\tthis.explicitConfigParams = configParams;\n-\t\tthis.configParamsFromFile = fromClasspathResource(configFileName.trim());\n+\t@Override\n+\tpublic int size() {\n+\t\treturn lookups.stream() //\n+\t\t\t\t.mapToInt(Lookup::size) //\n+\t\t\t\t.sum();\n+\t}\n+\n+\tprivate String getProperty(String key) {\n+\t\tPreconditions.notBlank(key, \"key must not be null or blank\");\n+\t\treturn lookups.stream() //\n+\t\t\t\t.map(lookup -> lookup.getValue(key)) //\n+\t\t\t\t.filter(Objects::nonNull) //\n+\t\t\t\t.findFirst() //\n+\t\t\t\t.orElse(null);\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn new ToStringBuilder(this) //\n+\t\t\t\t.append(\"lookups\", lookups) //\n+\t\t\t\t.toString();\n+\t}\n+\n+\tstatic final class Builder {\n+\n+\t\tprivate final Map<String, String> explicitParameters = new HashMap<>();\n+\t\tprivate boolean useImplicitLookups = true;\n+\t\tprivate String configFileName = ConfigurationParameters.CONFIG_FILE_NAME;\n+\n+\t\tprivate Builder() {\n+\t\t}\n+\n+\t\tBuilder withExplicitParameters(Map<String, String> parameters) {\n+\t\t\tPreconditions.notNull(parameters, \"configuration parameters must not be null\");\n+\t\t\texplicitParameters.putAll(parameters);\n+\t\t\treturn this;\n+\t\t}\n+\n+\t\tBuilder withImplicitLookups(boolean useImplicitLookups) {\n+\t\t\tthis.useImplicitLookups = useImplicitLookups;\n+\t\t\treturn this;\n+\t\t}\n+\n+\t\tBuilder withConfigFileName(String configFileName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f39a54de1b5c8ba27dd84fb936f8fca3baae6"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDk4NDE0OnYy", "diffSide": "RIGHT", "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherConfigurationParameters.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyNDoyOVrOGV_POQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoyNDoyOVrOGV_POQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwOTM2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate interface Lookup {\n          \n          \n            \n            \tprivate interface PropertyProvider {", "url": "https://github.com/junit-team/junit5/pull/2293#discussion_r425709369", "createdAt": "2020-05-15T10:24:29Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/LauncherConfigurationParameters.java", "diffHunk": "@@ -36,25 +38,157 @@\n \n \tprivate static final Logger logger = LoggerFactory.getLogger(LauncherConfigurationParameters.class);\n \n-\tprivate final Map<String, String> explicitConfigParams;\n-\tprivate final Properties configParamsFromFile;\n+\tstatic Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\n+\tprivate final List<Lookup> lookups;\n \n-\tLauncherConfigurationParameters() {\n-\t\tthis(emptyMap(), ConfigurationParameters.CONFIG_FILE_NAME);\n+\tprivate LauncherConfigurationParameters(List<Lookup> lookups) {\n+\t\tthis.lookups = lookups;\n+\t}\n+\n+\t@Override\n+\tpublic Optional<String> get(String key) {\n+\t\treturn Optional.ofNullable(getProperty(key));\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams) {\n-\t\tthis(configParams, ConfigurationParameters.CONFIG_FILE_NAME);\n+\t@Override\n+\tpublic Optional<Boolean> getBoolean(String key) {\n+\t\treturn get(key).map(Boolean::parseBoolean);\n \t}\n \n-\tLauncherConfigurationParameters(Map<String, String> configParams, String configFileName) {\n-\t\tPreconditions.notNull(configParams, \"configuration parameters must not be null\");\n-\t\tPreconditions.notBlank(configFileName, \"configFileName must not be null or blank\");\n-\t\tthis.explicitConfigParams = configParams;\n-\t\tthis.configParamsFromFile = fromClasspathResource(configFileName.trim());\n+\t@Override\n+\tpublic int size() {\n+\t\treturn lookups.stream() //\n+\t\t\t\t.mapToInt(Lookup::size) //\n+\t\t\t\t.sum();\n+\t}\n+\n+\tprivate String getProperty(String key) {\n+\t\tPreconditions.notBlank(key, \"key must not be null or blank\");\n+\t\treturn lookups.stream() //\n+\t\t\t\t.map(lookup -> lookup.getValue(key)) //\n+\t\t\t\t.filter(Objects::nonNull) //\n+\t\t\t\t.findFirst() //\n+\t\t\t\t.orElse(null);\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn new ToStringBuilder(this) //\n+\t\t\t\t.append(\"lookups\", lookups) //\n+\t\t\t\t.toString();\n+\t}\n+\n+\tstatic final class Builder {\n+\n+\t\tprivate final Map<String, String> explicitParameters = new HashMap<>();\n+\t\tprivate boolean useImplicitLookups = true;\n+\t\tprivate String configFileName = ConfigurationParameters.CONFIG_FILE_NAME;\n+\n+\t\tprivate Builder() {\n+\t\t}\n+\n+\t\tBuilder withExplicitParameters(Map<String, String> parameters) {\n+\t\t\tPreconditions.notNull(parameters, \"configuration parameters must not be null\");\n+\t\t\texplicitParameters.putAll(parameters);\n+\t\t\treturn this;\n+\t\t}\n+\n+\t\tBuilder withImplicitLookups(boolean useImplicitLookups) {\n+\t\t\tthis.useImplicitLookups = useImplicitLookups;\n+\t\t\treturn this;\n+\t\t}\n+\n+\t\tBuilder withConfigFileName(String configFileName) {\n+\t\t\tPreconditions.notBlank(configFileName, \"configFileName must not be null or blank\");\n+\t\t\tthis.configFileName = configFileName;\n+\t\t\treturn this;\n+\t\t}\n+\n+\t\tLauncherConfigurationParameters build() {\n+\t\t\tList<Lookup> lookups = new ArrayList<>();\n+\t\t\tif (!explicitParameters.isEmpty()) {\n+\t\t\t\tlookups.add(Lookup.explicit(explicitParameters));\n+\t\t\t}\n+\t\t\tif (useImplicitLookups) {\n+\t\t\t\tlookups.add(Lookup.systemProperties());\n+\t\t\t\tlookups.add(Lookup.propertiesFile(configFileName));\n+\t\t\t}\n+\t\t\treturn new LauncherConfigurationParameters(lookups);\n+\t\t}\n \t}\n \n-\tprivate static Properties fromClasspathResource(String configFileName) {\n+\tprivate interface Lookup {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43f39a54de1b5c8ba27dd84fb936f8fca3baae6"}, "originalPosition": 117}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4040, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}