{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYxODI4MjUw", "number": 2371, "title": "Truncate arguments in display name if they exceed max length", "bodyText": "Resolves #2358.\n\nI hereby agree to the terms of the JUnit Contributor License Agreement.\n\nDefinition of Done\n\n There are no TODOs left in the code\n Method preconditions are checked and documented in the method's Javadoc\n Coding conventions (e.g. for logging) have been followed\n Change is covered by automated tests including corner cases, errors, and exception handling\n Public API has Javadoc and @API annotations\n Change is documented in the User Guide and Release Notes\n All continuous integration builds pass", "createdAt": "2020-08-02T16:22:48Z", "url": "https://github.com/junit-team/junit5/pull/2371", "merged": true, "mergeCommit": {"oid": "9d8da988898c994d65ac38b53df15d0ff3757d74"}, "closed": true, "closedAt": "2020-08-03T16:08:12Z", "author": {"login": "marcphilipp"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6_zuCAH2gAyNDYxODI4MjUwOjNmZmY4NDU1ODk5MWJjZGFkNWU2Zjk3ODgyODZmYjc1Y2U2MjQ2Mjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7SRrigFqTQ2MDAzODI4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3fff84558991bcdad5e6f9788286fb75ce624629", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/3fff84558991bcdad5e6f9788286fb75ce624629", "committedDate": "2020-08-02T16:14:12Z", "message": "Add convenience method for reading transformed config params"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60f1a15049fdd78123ba4f85475a2cf3510113bc", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/60f1a15049fdd78123ba4f85475a2cf3510113bc", "committedDate": "2020-08-02T16:14:12Z", "message": "Truncate arguments in display name if they exceed max length\n\nResolves #2358."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NjY4NjMy", "url": "https://github.com/junit-team/junit5/pull/2371#pullrequestreview-459668632", "createdAt": "2020-08-02T18:20:56Z", "commit": {"oid": "60f1a15049fdd78123ba4f85475a2cf3510113bc"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxODoyMDo1NlrOG6m4vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxODoyMDo1NlrOG6m4vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwNzcxMQ==", "bodyText": "So do we consider that \u2026 counts as a character? Personally, with a max length of two I'd naturally expect fo\u2026. But I may be the only one \ud83e\udd37\u200d\u2640\ufe0f", "url": "https://github.com/junit-team/junit5/pull/2371#discussion_r464107711", "createdAt": "2020-08-02T18:20:56Z", "author": {"login": "juliette-derancourt"}, "path": "junit-jupiter-params/src/test/java/org/junit/jupiter/params/ParameterizedTestIntegrationTests.java", "diffHunk": "@@ -219,6 +220,17 @@ void executesLifecycleMethods() {\n \t\t// @formatter:on\n \t}\n \n+\t@Test\n+\tvoid truncatesArgumentsThatExceedMaxLength() {\n+\t\tvar results = EngineTestKit.engine(new JupiterTestEngine()) //\n+\t\t\t\t.configurationParameter(ParameterizedTestExtension.ARGUMENT_MAX_LENGTH_KEY, \"2\") //\n+\t\t\t\t.selectors(selectMethod(TestCase.class, \"testWithCsvSource\", String.class.getName())) //\n+\t\t\t\t.execute();\n+\t\tresults.testEvents().assertThatEvents() //\n+\t\t\t\t.haveExactly(1, event(displayName(\"[1] argument=f\u2026\"), started())) //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60f1a15049fdd78123ba4f85475a2cf3510113bc"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5OTA1NjEz", "url": "https://github.com/junit-team/junit5/pull/2371#pullrequestreview-459905613", "createdAt": "2020-08-03T10:05:23Z", "commit": {"oid": "60f1a15049fdd78123ba4f85475a2cf3510113bc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMDowNToyM1rOG6zvVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMDoxMTowNVrOG6z5vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMxODI5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Arguments of in display names of parameterized test invocations are now truncated if\n          \n          \n            \n            * Arguments in display names of parameterized test invocations are now truncated if", "url": "https://github.com/junit-team/junit5/pull/2371#discussion_r464318292", "createdAt": "2020-08-03T10:05:23Z", "author": {"login": "sbrannen"}, "path": "documentation/src/docs/asciidoc/release-notes/release-notes-5.7.0-M2.adoc", "diffHunk": "@@ -107,6 +107,10 @@ on GitHub.\n   thread in the cause of the `AssertionFailedError`.\n * New `TypedArgumentConverter` for converting one specific type to another, therefore\n   reducing boilerplate type checks compared to implementing `ArgumentConverter` directly.\n+* Added `ExtensionContext.getConfigurationParameter(String, Function<String, T>)`\n+  convenience method for reading transformed configuration parameters from extensions.\n+* Arguments of in display names of parameterized test invocations are now truncated if", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60f1a15049fdd78123ba4f85475a2cf3510113bc"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMxOTk5OA==", "bodyText": "Maybe add a comment that the unicode character is an ellipsis.", "url": "https://github.com/junit-team/junit5/pull/2371#discussion_r464319998", "createdAt": "2020-08-03T10:09:00Z", "author": {"login": "sbrannen"}, "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/ParameterizedTestNameFormatter.java", "diffHunk": "@@ -91,10 +94,17 @@ private String argumentsPattern(Object[] arguments) {\n \t\tObject[] result = Arrays.copyOf(arguments, Math.min(arguments.length, formats.length), Object[].class);\n \t\tfor (int i = 0; i < result.length; i++) {\n \t\t\tif (formats[i] == null) {\n-\t\t\t\tresult[i] = StringUtils.nullSafeToString(arguments[i]);\n+\t\t\t\tresult[i] = truncateIfExceedsMaxLength(StringUtils.nullSafeToString(arguments[i]));\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n \n+\tprivate String truncateIfExceedsMaxLength(String argument) {\n+\t\tif (argument.length() > argumentMaxLength) {\n+\t\t\treturn argument.substring(0, argumentMaxLength - 1) + \"\\u2026\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60f1a15049fdd78123ba4f85475a2cf3510113bc"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMyMDk1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: When including arguments in display names, their string representation is truncated\n          \n          \n            \n            if it exceeds the configured maximum length. The limit is configurable via the\n          \n          \n            \n            NOTE: When including arguments in display names, their string representations are truncated\n          \n          \n            \n            if they exceed the configured maximum length. The limit is configurable via the", "url": "https://github.com/junit-team/junit5/pull/2371#discussion_r464320959", "createdAt": "2020-08-03T10:11:05Z", "author": {"login": "sbrannen"}, "path": "documentation/src/docs/asciidoc/user-guide/writing-tests.adoc", "diffHunk": "@@ -1563,6 +1563,11 @@ The following placeholders are supported within custom display names.\n | `{0}`, `{1}`, ...        | an individual argument\n |===\n \n+NOTE: When including arguments in display names, their string representation is truncated\n+if it exceeds the configured maximum length. The limit is configurable via the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60f1a15049fdd78123ba4f85475a2cf3510113bc"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "585ba080f671c5c22c23076bb33a3db1e2526faa", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/585ba080f671c5c22c23076bb33a3db1e2526faa", "committedDate": "2020-08-03T13:40:13Z", "message": "Polish documentation\n\nCo-authored-by: Sam Brannen <sbrannen@pivotal.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f4707e082ae70e3f34925f0d1f37039b5d70691", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/4f4707e082ae70e3f34925f0d1f37039b5d70691", "committedDate": "2020-08-03T13:43:10Z", "message": "Extract constant to increase readability"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMDM4Mjgy", "url": "https://github.com/junit-team/junit5/pull/2371#pullrequestreview-460038282", "createdAt": "2020-08-03T13:45:13Z", "commit": {"oid": "4f4707e082ae70e3f34925f0d1f37039b5d70691"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3601, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}