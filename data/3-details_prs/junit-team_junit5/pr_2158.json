{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0ODA1MjMx", "number": 2158, "title": "Fix stack overflow error in assertIterableEquals", "bodyText": "Overview\nPrior to this commit an iterable of iterables (here instances of java.nio.file.Path) passed to method assertIterableEquals in class Assertions of the JUnit Jupiter API yielded a StackOverflowError.\nThis commit prevent the eternal while-loop by leveraging the equals()-implementation of the non-null expected element.\nFixes #2157\n\nI hereby agree to the terms of the JUnit Contributor License Agreement.\n\nDefinition of Done\n\n There are no TODOs left in the code\n Method preconditions are checked and documented in the method's Javadoc\n Coding conventions (e.g. for logging) have been followed\n Change is covered by automated tests including corner cases, errors, and exception handling\n Public API has Javadoc and @API annotations\n Change is documented in the User Guide and Release Notes\n All continuous integration builds pass", "createdAt": "2020-01-20T12:17:46Z", "url": "https://github.com/junit-team/junit5/pull/2158", "merged": true, "mergeCommit": {"oid": "df10b04bc10da5896a9542560a5c5dac80c4efcc"}, "closed": true, "closedAt": "2020-01-20T19:06:28Z", "author": {"login": "sormuras"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8LiGLgH2gAyMzY0ODA1MjMxOjk5MGQ4NGZkNjJkMDU3OWU2NGY3NmI4YjZjYjU0MjU2ZWE4MWM0ZTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8RTGZAFqTM0NTQ4OTA3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "990d84fd62d0579e64f76b8b6cb54256ea81c4e0", "author": {"user": {"login": "sormuras", "name": "Christian Stein"}}, "url": "https://github.com/junit-team/junit5/commit/990d84fd62d0579e64f76b8b6cb54256ea81c4e0", "committedDate": "2020-01-20T12:16:35Z", "message": "Fix stack overflow error in assertIterableEquals\n\nPrior to this commit an iterable of iterables (here instances\nof java.nio.file.Path) passed to method `assertIterableEquals`\nin class `Assertions` of the JUnit Jupiter API yielded a\n`StackOverflowError`.\n\nThis commit prevent the eternal while-loop by leveraging the\n`equals()`-implementation of the non-null expected element.\n\nFixes #2157"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NDgwOTY4", "url": "https://github.com/junit-team/junit5/pull/2158#pullrequestreview-345480968", "createdAt": "2020-01-20T18:38:14Z", "commit": {"oid": "990d84fd62d0579e64f76b8b6cb54256ea81c4e0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxODozODoxNFrOFfmpyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxODozODoxNFrOFfmpyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY4MzQ2Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tif (expectedElement != null && expectedElement.equals(actualElement)) {\n          \n          \n            \n            \t\t\tif (Objects.equals(expectedElement, actualElement)) {\n          \n      \n    \n    \n  \n\nYou can then also merge the two ifs into one because Objects.equals() already checks for ==.", "url": "https://github.com/junit-team/junit5/pull/2158#discussion_r368683467", "createdAt": "2020-01-20T18:38:14Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertIterableEquals.java", "diffHunk": "@@ -67,6 +67,11 @@ private static void assertIterableEquals(Iterable<?> expected, Iterable<?> actua\n \t\t\tif (expectedElement == actualElement) {\n \t\t\t\tcontinue;\n \t\t\t}\n+\t\t\t// Prevent stack overflow error.\n+\t\t\t// See https://github.com/junit-team/junit5/issues/2157 for details.\n+\t\t\tif (expectedElement != null && expectedElement.equals(actualElement)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "990d84fd62d0579e64f76b8b6cb54256ea81c4e0"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb715e95d3c9c1d37e75a617af939f0f68208182", "author": {"user": {"login": "sormuras", "name": "Christian Stein"}}, "url": "https://github.com/junit-team/junit5/commit/cb715e95d3c9c1d37e75a617af939f0f68208182", "committedDate": "2020-01-20T18:42:30Z", "message": "Use Objects.equals()\n\nCo-Authored-By: Marc Philipp <mail@marcphilipp.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NDgzMTg2", "url": "https://github.com/junit-team/junit5/pull/2158#pullrequestreview-345483186", "createdAt": "2020-01-20T18:44:21Z", "commit": {"oid": "cb715e95d3c9c1d37e75a617af939f0f68208182"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "052637b1ef33cac18a737a57fa5c31c862a0613d", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/052637b1ef33cac18a737a57fa5c31c862a0613d", "committedDate": "2020-01-20T18:57:01Z", "message": "Add test for interlocked recursive structures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cd5a40587dd5a27a8cd1c2f87e6575194f3892d", "author": {"user": {"login": "marcphilipp", "name": "Marc Philipp"}}, "url": "https://github.com/junit-team/junit5/commit/9cd5a40587dd5a27a8cd1c2f87e6575194f3892d", "committedDate": "2020-01-20T18:58:06Z", "message": "Simplify code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NDg5MDc5", "url": "https://github.com/junit-team/junit5/pull/2158#pullrequestreview-345489079", "createdAt": "2020-01-20T18:59:38Z", "commit": {"oid": "9cd5a40587dd5a27a8cd1c2f87e6575194f3892d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3647, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}