{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MDc1ODk3", "number": 2336, "title": "Introduce MethodName orderer to replace deprecated Alphanumeric", "bodyText": "Overview\nWith the introduction of DisplayName orderer in 6fee44d, the name of the\nAlphanumeric orderer becomes ambiguous ie \"Alphanumeric of what?\".\nMethodName is a better name. It is unambiguous, it clearly states what\nit is using for ordering the tests and it's naming is consistent with\nthe new orderer DisplayName.\nResolves: #2334\n\n\nI hereby agree to the terms of the JUnit Contributor License Agreement.\n\nDefinition of Done\n\n There are no TODOs left in the code\n Method preconditions are checked and documented in the method's Javadoc\n Coding conventions (e.g. for logging) have been followed\n Change is covered by automated tests including corner cases, errors, and exception handling\n Public API has Javadoc and @API annotations\n Change is documented in the User Guide and Release Notes\n All continuous integration builds pass", "createdAt": "2020-06-22T17:14:34Z", "url": "https://github.com/junit-team/junit5/pull/2336", "merged": true, "mergeCommit": {"oid": "5be88453c4641428aabba5b1f0cda663c9f3b3b8"}, "closed": true, "closedAt": "2020-07-13T15:27:05Z", "author": {"login": "gaganis"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcvbCMEgBqjM0ODkxNDc1MDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0i8IqAFqTQ0NzM0NDc1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0d8e7fac233105aa28d9629d6a5c7a6c752a724", "author": {"user": {"login": "gaganis", "name": "Giorgos Gaganis"}}, "url": "https://github.com/junit-team/junit5/commit/f0d8e7fac233105aa28d9629d6a5c7a6c752a724", "committedDate": "2020-06-22T17:11:35Z", "message": "Introduce MethodName orderer to replace deprecated Alphanumeric\n\nWith the introduction of DisplayName orderer in 6fee44d, the name of the\nAlphanumeric orderer becomes ambiguous ie \"Alphanumeric of what?\".\nMethodName is a better name. It is unambiguous, it clearly states what\nit is using for ordering the tests and it's naming is consistent with\nthe new orderer DisplayName.\n\nResolves: #2334"}, "afterCommit": {"oid": "c54502db7c7088e3f4dac3a76129fb849db92c36", "author": {"user": {"login": "gaganis", "name": "Giorgos Gaganis"}}, "url": "https://github.com/junit-team/junit5/commit/c54502db7c7088e3f4dac3a76129fb849db92c36", "committedDate": "2020-06-27T17:08:19Z", "message": "Remove  @Deprecated anotation from Alphanumeric method orderer\n\nAdding @Deprecated causes the full build to fail as they configure to\nfail on compile warnings. The deprecation is still declared in the @API\nannotation and described in the javadoc."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NzkwODI0", "url": "https://github.com/junit-team/junit5/pull/2336#pullrequestreview-438790824", "createdAt": "2020-06-28T15:38:12Z", "commit": {"oid": "c54502db7c7088e3f4dac3a76129fb849db92c36"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0434b4105cf1982922621db0ab8b932f6dff5c4f", "author": {"user": {"login": "gaganis", "name": "Giorgos Gaganis"}}, "url": "https://github.com/junit-team/junit5/commit/0434b4105cf1982922621db0ab8b932f6dff5c4f", "committedDate": "2020-06-29T07:03:20Z", "message": "Introduce MethodName orderer to replace deprecated Alphanumeric\n\nWith the introduction of DisplayName orderer in 6fee44d, the name of the\nAlphanumeric orderer becomes ambiguous ie \"Alphanumeric of what?\".\nMethodName is a better name. It is unambiguous, it clearly states what\nit is using for ordering the tests and it's naming is consistent with\nthe new orderer DisplayName.\n\nResolves: #2334"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c54502db7c7088e3f4dac3a76129fb849db92c36", "author": {"user": {"login": "gaganis", "name": "Giorgos Gaganis"}}, "url": "https://github.com/junit-team/junit5/commit/c54502db7c7088e3f4dac3a76129fb849db92c36", "committedDate": "2020-06-27T17:08:19Z", "message": "Remove  @Deprecated anotation from Alphanumeric method orderer\n\nAdding @Deprecated causes the full build to fail as they configure to\nfail on compile warnings. The deprecation is still declared in the @API\nannotation and described in the javadoc."}, "afterCommit": {"oid": "0434b4105cf1982922621db0ab8b932f6dff5c4f", "author": {"user": {"login": "gaganis", "name": "Giorgos Gaganis"}}, "url": "https://github.com/junit-team/junit5/commit/0434b4105cf1982922621db0ab8b932f6dff5c4f", "committedDate": "2020-06-29T07:03:20Z", "message": "Introduce MethodName orderer to replace deprecated Alphanumeric\n\nWith the introduction of DisplayName orderer in 6fee44d, the name of the\nAlphanumeric orderer becomes ambiguous ie \"Alphanumeric of what?\".\nMethodName is a better name. It is unambiguous, it clearly states what\nit is using for ordering the tests and it's naming is consistent with\nthe new orderer DisplayName.\n\nResolves: #2334"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda", "author": {"user": {"login": "gaganis", "name": "Giorgos Gaganis"}}, "url": "https://github.com/junit-team/junit5/commit/78e025e88a6679ac37d8aa56f4bbc0d78b854bda", "committedDate": "2020-06-29T16:04:05Z", "message": "Add removal version for MethodOrderer.Alphanumeric"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NDQ0NjIx", "url": "https://github.com/junit-team/junit5/pull/2336#pullrequestreview-439444621", "createdAt": "2020-06-29T19:40:16Z", "commit": {"oid": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTo0MDoxNlrOGqfbqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTo1NToxOFrOGqf7yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwODM2MA==", "bodyText": "Since we're deprecating it, maybe we should push it to the end of the list?", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447208360", "createdAt": "2020-06-29T19:40:16Z", "author": {"login": "juliette-derancourt"}, "path": "documentation/src/docs/asciidoc/user-guide/writing-tests.adoc", "diffHunk": "@@ -557,6 +557,8 @@ implementation. You can implement your own custom `MethodOrderer` or use one of\n following built-in `MethodOrderer` implementations.\n \n * `{Alphanumeric}`: sorts test methods _alphanumerically_ based on their names and formal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwOTE1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t@API(status = DEPRECATED, since = \"5.4\")\n          \n          \n            \n            \t@API(status = DEPRECATED, since = \"5.7\")", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447209159", "createdAt": "2020-06-29T19:41:41Z", "author": {"login": "juliette-derancourt"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java", "diffHunk": "@@ -104,15 +105,35 @@\n \t\treturn Optional.of(ExecutionMode.SAME_THREAD);\n \t}\n \n+\t/**\n+\t * {@code MethodOrderer} that sorts methods alphanumerically based on their\n+\t * names using {@link String#compareTo(String)}.\n+\t *\n+\t * <p>If two methods have the same name, {@code String} representations of\n+\t * their formal parameter lists will be used as a fallback for comparing the\n+\t * methods.</p>\n+\t * <p> <b>This class has been deprecated in favor of {@code MethodOrderer.MethodName} and will be\n+\t * removed in 6.0</b></p>\n+\t *\n+\t * @since 5.4\n+\t * @deprecated Deprecated in favor of MethodOrderer.MethodName. Will be removed in 6.0\n+\t */\n+\t@API(status = DEPRECATED, since = \"5.4\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxMDU0Ng==", "bodyText": "Please use {@link MethodOrderer.MethodName} to point towards the new class.", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447210546", "createdAt": "2020-06-29T19:44:08Z", "author": {"login": "juliette-derancourt"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java", "diffHunk": "@@ -104,15 +105,35 @@\n \t\treturn Optional.of(ExecutionMode.SAME_THREAD);\n \t}\n \n+\t/**\n+\t * {@code MethodOrderer} that sorts methods alphanumerically based on their\n+\t * names using {@link String#compareTo(String)}.\n+\t *\n+\t * <p>If two methods have the same name, {@code String} representations of\n+\t * their formal parameter lists will be used as a fallback for comparing the\n+\t * methods.</p>\n+\t * <p> <b>This class has been deprecated in favor of {@code MethodOrderer.MethodName} and will be\n+\t * removed in 6.0</b></p>\n+\t *\n+\t * @since 5.4\n+\t * @deprecated Deprecated in favor of MethodOrderer.MethodName. Will be removed in 6.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxMjI0OQ==", "bodyText": "JavaDoc should be wrapped at 80 characters.", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447212249", "createdAt": "2020-06-29T19:47:19Z", "author": {"login": "juliette-derancourt"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java", "diffHunk": "@@ -104,15 +105,35 @@\n \t\treturn Optional.of(ExecutionMode.SAME_THREAD);\n \t}\n \n+\t/**\n+\t * {@code MethodOrderer} that sorts methods alphanumerically based on their\n+\t * names using {@link String#compareTo(String)}.\n+\t *\n+\t * <p>If two methods have the same name, {@code String} representations of\n+\t * their formal parameter lists will be used as a fallback for comparing the\n+\t * methods.</p>\n+\t * <p> <b>This class has been deprecated in favor of {@code MethodOrderer.MethodName} and will be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxMzA1OA==", "bodyText": "Should we leave this one until we delete the orderer completely? Or remove it right away?", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447213058", "createdAt": "2020-06-29T19:48:58Z", "author": {"login": "juliette-derancourt"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/TestMethodOrder.java", "diffHunk": "@@ -72,7 +72,7 @@\n \t * The {@link MethodOrderer} to use.\n \t *\n \t * @see MethodOrderer\n-\t * @see MethodOrderer.Alphanumeric", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxNDQwNg==", "bodyText": "CI likes it better indeed \ud83d\ude09", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447214406", "createdAt": "2020-06-29T19:51:31Z", "author": {"login": "juliette-derancourt"}, "path": "junit-jupiter-engine/src/test/java/org/junit/jupiter/engine/extension/OrderedMethodTests.java", "diffHunk": "@@ -317,6 +340,59 @@ void c() {\n \n \t}\n \n+\t@TestMethodOrder(MethodName.class)\n+\tstatic class MethodNameTestCase extends BaseTestCase {\n+\n+\t\t@BeforeEach\n+\t\tvoid trackInvocations(TestInfo testInfo) {\n+\t\t\tvar method = testInfo.getTestMethod().get();\n+\t\t\tvar signature = String.format(\"%s(%s)\", method.getName(),\n+\t\t\t\tClassUtils.nullSafeToString(method.getParameterTypes()));\n+\n+\t\t\tcallSequence.add(signature);\n+\t\t\tthreadNames.add(Thread.currentThread().getName());\n+\t\t}\n+\n+\t\t@TestFactory\n+\t\tDynamicTest b() {\n+\t\t\treturn dynamicTest(\"dynamic\", () -> {\n+\t\t\t});\n+\t\t}\n+\n+\t\t@Test\n+\t\tvoid $() {\n+\t\t}\n+\n+\t\t@Test\n+\t\tvoid ___() {\n+\t\t}\n+\n+\t\t@Test\n+\t\tvoid AAA(TestReporter testReporter) {\n+\t\t}\n+\n+\t\t@Test\n+\t\tvoid AAA(TestInfo testInfo) {\n+\t\t}\n+\n+\t\t@Test\n+\t\tvoid ZZ_Top() {\n+\t\t}\n+\n+\t\t@Test\n+\t\tvoid a1() {\n+\t\t}\n+\n+\t\t@Test\n+\t\tvoid a2() {\n+\t\t}\n+\n+\t\t@RepeatedTest(1)\n+\t\tvoid zzz() {\n+\t\t}\n+\t}\n+\n+\t@SuppressWarnings(\"deprecation\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxNjU4NA==", "bodyText": "I'm not sure about this one... Personally I'd prefer to leave it the way it is, to be 100% sure it will not break things for users. (It's probably unlikely but... we never know \ud83e\udd13)\nWhat do you think?", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447216584", "createdAt": "2020-06-29T19:55:18Z", "author": {"login": "juliette-derancourt"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java", "diffHunk": "@@ -104,15 +105,35 @@\n \t\treturn Optional.of(ExecutionMode.SAME_THREAD);\n \t}\n \n+\t/**\n+\t * {@code MethodOrderer} that sorts methods alphanumerically based on their\n+\t * names using {@link String#compareTo(String)}.\n+\t *\n+\t * <p>If two methods have the same name, {@code String} representations of\n+\t * their formal parameter lists will be used as a fallback for comparing the\n+\t * methods.</p>\n+\t * <p> <b>This class has been deprecated in favor of {@code MethodOrderer.MethodName} and will be\n+\t * removed in 6.0</b></p>\n+\t *\n+\t * @since 5.4\n+\t * @deprecated Deprecated in favor of MethodOrderer.MethodName. Will be removed in 6.0\n+\t */\n+\t@API(status = DEPRECATED, since = \"5.4\")\n+\t@Deprecated\n+\tclass Alphanumeric extends MethodName {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71d53fdcd272abc093982b58803cfb3246730d72", "author": {"user": {"login": "gaganis", "name": "Giorgos Gaganis"}}, "url": "https://github.com/junit-team/junit5/commit/71d53fdcd272abc093982b58803cfb3246730d72", "committedDate": "2020-06-30T08:50:17Z", "message": "Polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26cb5f4e69d7ee3f5459396c7425710a737c9792", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/26cb5f4e69d7ee3f5459396c7425710a737c9792", "committedDate": "2020-07-13T15:07:05Z", "message": "Merge branch 'main' into 2334_rename_alpanumeric_orderer_to_methodname"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MzQ0NzU2", "url": "https://github.com/junit-team/junit5/pull/2336#pullrequestreview-447344756", "createdAt": "2020-07-13T15:12:30Z", "commit": {"oid": "26cb5f4e69d7ee3f5459396c7425710a737c9792"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNToxMjozMFrOGwtCrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNToxMjozMFrOGwtCrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcyMjc5Ng==", "bodyText": "I don't \ud83d\ude1c\nLet's go with this then.", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r453722796", "createdAt": "2020-07-13T15:12:30Z", "author": {"login": "juliette-derancourt"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java", "diffHunk": "@@ -104,15 +105,35 @@\n \t\treturn Optional.of(ExecutionMode.SAME_THREAD);\n \t}\n \n+\t/**\n+\t * {@code MethodOrderer} that sorts methods alphanumerically based on their\n+\t * names using {@link String#compareTo(String)}.\n+\t *\n+\t * <p>If two methods have the same name, {@code String} representations of\n+\t * their formal parameter lists will be used as a fallback for comparing the\n+\t * methods.</p>\n+\t * <p> <b>This class has been deprecated in favor of {@code MethodOrderer.MethodName} and will be\n+\t * removed in 6.0</b></p>\n+\t *\n+\t * @since 5.4\n+\t * @deprecated Deprecated in favor of MethodOrderer.MethodName. Will be removed in 6.0\n+\t */\n+\t@API(status = DEPRECATED, since = \"5.4\")\n+\t@Deprecated\n+\tclass Alphanumeric extends MethodName {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxNjU4NA=="}, "originalCommit": {"oid": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3571, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}