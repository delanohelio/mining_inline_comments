{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MTM2ODg3", "number": 2276, "title": "Support custom reason in @Disabled* / @Enabled* variants", "bodyText": "Overview\nAdd the possibility to give a custom reason in case a test/container is disabled with one of the @Enabled*/@Disabled* annotations. This reason will be printed in addition to the current default reason.\nResolves #1787.\n\nI hereby agree to the terms of the JUnit Contributor License Agreement.\n\nDefinition of Done\n\n There are no TODOs left in the code\n Method preconditions are checked and documented in the method's Javadoc\n Coding conventions (e.g. for logging) have been followed\n Change is covered by automated tests including corner cases, errors, and exception handling\n Public API has Javadoc and @API annotations\n Change is documented in the User Guide and Release Notes\n All continuous integration builds pass", "createdAt": "2020-04-26T18:45:52Z", "url": "https://github.com/junit-team/junit5/pull/2276", "merged": true, "mergeCommit": {"oid": "c4e0a26deb6194c0221410d9fa8261cf3ffd3719"}, "closed": true, "closedAt": "2020-05-05T14:52:56Z", "author": {"login": "juliette-derancourt"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbflNMABqjMyNzMyNzI0MTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceU-qEgH2gAyNDA5MTM2ODg3OmFlNjRjMGQ3OWQ4OGM5ZjU4MjQ3MWI4OGVhMjM2NjdhMzNjZjMyOGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65d636c9fd50eacf5b8e4bc158b987e01165cd17", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/65d636c9fd50eacf5b8e4bc158b987e01165cd17", "committedDate": "2020-04-26T18:55:44Z", "message": "Fix checkstyle"}, "afterCommit": {"oid": "bd41c60b06ea88c60531b0b8a0a94d1e5f8253e8", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/bd41c60b06ea88c60531b0b8a0a94d1e5f8253e8", "committedDate": "2020-04-26T19:08:42Z", "message": "Fix build"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNTQzMDgx", "url": "https://github.com/junit-team/junit5/pull/2276#pullrequestreview-400543081", "createdAt": "2020-04-26T19:58:10Z", "commit": {"oid": "bd41c60b06ea88c60531b0b8a0a94d1e5f8253e8"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxOTo1ODoxMVrOGMJRkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxOTo1ODoxMVrOGMJRkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM4ODA0OQ==", "bodyText": "I just saw this, and i thought i drop my few cents here on the .isPresent()-.get()-combination - as i do think there are nicer and more Optional-API-ish way. :)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tOptional<A> optional = findAnnotation(context.getElement(), annotationType);\n          \n          \n            \n            \t\tif (optional.isPresent()) {\n          \n          \n            \n            \t\t\tA annotation = optional.get();\n          \n          \n            \n            \t\t\tString customReason = customDisabledReason.apply(annotation);\n          \n          \n            \n            \t\t\treturn isEnabled(annotation) ? enabled(enabledReason) : disabled(disabledReason, customReason);\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t\treturn enabledByDefault();\n          \n          \n            \n            \t\treturn findAnnotation(context.getElement(), annotationType)\n          \n          \n            \n            \t\t    .map(annotation -> {\n          \n          \n            \n            \t\t\tString customReason = customDisabledReason.apply(annotation);\n          \n          \n            \n            \t\t\treturn isEnabled(annotation) ? enabled(enabledReason) : disabled(disabledReason, customReason);\n          \n          \n            \n            \t\t     })\n          \n          \n            \n            \t\t     .orElseGet(this::enabledByDefault);\n          \n          \n            \n            \t}", "url": "https://github.com/junit-team/junit5/pull/2276#discussion_r415388049", "createdAt": "2020-04-26T19:58:11Z", "author": {"login": "aepfli"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/condition/BooleanExecutionCondition.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.api.condition;\n+\n+import static org.junit.jupiter.api.extension.ConditionEvaluationResult.disabled;\n+import static org.junit.jupiter.api.extension.ConditionEvaluationResult.enabled;\n+import static org.junit.platform.commons.util.AnnotationUtils.findAnnotation;\n+\n+import java.lang.annotation.Annotation;\n+import java.util.Optional;\n+import java.util.function.Function;\n+\n+import org.junit.jupiter.api.extension.ConditionEvaluationResult;\n+import org.junit.jupiter.api.extension.ExecutionCondition;\n+import org.junit.jupiter.api.extension.ExtensionContext;\n+\n+abstract class BooleanExecutionCondition<A extends Annotation> implements ExecutionCondition {\n+\n+\tprivate final Class<A> annotationType;\n+\tprivate final String enabledReason;\n+\tprivate final String disabledReason;\n+\tprivate final Function<A, String> customDisabledReason;\n+\n+\tBooleanExecutionCondition(Class<A> annotationType, String enabledReason, String disabledReason,\n+\t\t\tFunction<A, String> customDisabledReason) {\n+\t\tthis.annotationType = annotationType;\n+\t\tthis.enabledReason = enabledReason;\n+\t\tthis.disabledReason = disabledReason;\n+\t\tthis.customDisabledReason = customDisabledReason;\n+\t}\n+\n+\tabstract boolean isEnabled(A annotation);\n+\n+\t@Override\n+\tpublic ConditionEvaluationResult evaluateExecutionCondition(ExtensionContext context) {\n+\t\tOptional<A> optional = findAnnotation(context.getElement(), annotationType);\n+\t\tif (optional.isPresent()) {\n+\t\t\tA annotation = optional.get();\n+\t\t\tString customReason = customDisabledReason.apply(annotation);\n+\t\t\treturn isEnabled(annotation) ? enabled(enabledReason) : disabled(disabledReason, customReason);\n+\t\t}\n+\t\treturn enabledByDefault();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd41c60b06ea88c60531b0b8a0a94d1e5f8253e8"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94298f4e873e08dddfad0088404b38ccae8231bc", "author": {"user": null}, "url": "https://github.com/junit-team/junit5/commit/94298f4e873e08dddfad0088404b38ccae8231bc", "committedDate": "2020-04-27T15:54:08Z", "message": "Simple solution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d0ff0e3dc4611d2f01c79c13288af47c9e3c356", "author": {"user": null}, "url": "https://github.com/junit-team/junit5/commit/9d0ff0e3dc4611d2f01c79c13288af47c9e3c356", "committedDate": "2020-04-27T15:54:08Z", "message": "Extract similar logic in an abstract ExecutionCondition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2992083c5dec2be6f7bc577ba2724bb3d2bcd6f2", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/2992083c5dec2be6f7bc577ba2724bb3d2bcd6f2", "committedDate": "2020-04-27T15:54:08Z", "message": "Use constructor to pass reasons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "954a16a9573dd7a08eead1f8623fe6358c167199", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/954a16a9573dd7a08eead1f8623fe6358c167199", "committedDate": "2020-04-27T15:54:08Z", "message": "Add disabledReason tests for EnabledOnOs/DisabledOnOs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a33d2c12bc676d3b0e49f3c73528242ea4d5b795", "author": {"user": null}, "url": "https://github.com/junit-team/junit5/commit/a33d2c12bc676d3b0e49f3c73528242ea4d5b795", "committedDate": "2020-04-27T15:54:08Z", "message": "Apply changes to JRE based conditions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edd1a4b0b2d94074dd43af5e8ffdbc719b1a47c8", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/edd1a4b0b2d94074dd43af5e8ffdbc719b1a47c8", "committedDate": "2020-04-27T15:54:08Z", "message": "Add tests for JRE based conditions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8417e6a4919e9e5537f84434e4f5defa994ced1a", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/8417e6a4919e9e5537f84434e4f5defa994ced1a", "committedDate": "2020-04-27T15:54:09Z", "message": "Add custom reason for repeatable conditions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82f86cf8d5334f40445f784216fbecfba28d8445", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/82f86cf8d5334f40445f784216fbecfba28d8445", "committedDate": "2020-04-27T15:54:09Z", "message": "Add custom reason for method based conditions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31f608644c55d400e04837aa62def4f7149d7ce8", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/31f608644c55d400e04837aa62def4f7149d7ce8", "committedDate": "2020-04-27T15:54:09Z", "message": "Refactor MethodBasedCondition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f6bd5e2d9c0dd1f2ac649ae1ce508fa51c0373a", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/7f6bd5e2d9c0dd1f2ac649ae1ce508fa51c0373a", "committedDate": "2020-04-27T15:54:09Z", "message": "Fix build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38f74c4746c9464299855d646ec5be2f22a48482", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/38f74c4746c9464299855d646ec5be2f22a48482", "committedDate": "2020-04-27T15:54:09Z", "message": "Take advantage of the `Optional` API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b12fb197f8458ce019b391e83da54bab1bc5039", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/4b12fb197f8458ce019b391e83da54bab1bc5039", "committedDate": "2020-04-27T16:07:29Z", "message": "Update release notes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e272cd145ab028f74841db401c13d0440cbe4ea", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/3e272cd145ab028f74841db401c13d0440cbe4ea", "committedDate": "2020-04-27T15:52:11Z", "message": "Take advantage of the `Optional` API"}, "afterCommit": {"oid": "4b12fb197f8458ce019b391e83da54bab1bc5039", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/4b12fb197f8458ce019b391e83da54bab1bc5039", "committedDate": "2020-04-27T16:07:29Z", "message": "Update release notes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MDcxNjY3", "url": "https://github.com/junit-team/junit5/pull/2276#pullrequestreview-404071667", "createdAt": "2020-05-01T08:42:06Z", "commit": {"oid": "4b12fb197f8458ce019b391e83da54bab1bc5039"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwODo0MjowNlrOGPFCYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwODo0Njo0MFrOGPFHhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2NDM1NA==", "bodyText": "\u2b55 Should we use StringUtils.isBlank() here?", "url": "https://github.com/junit-team/junit5/pull/2276#discussion_r418464354", "createdAt": "2020-05-01T08:42:06Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/extension/ConditionEvaluationResult.java", "diffHunk": "@@ -45,6 +45,21 @@ public static ConditionEvaluationResult disabled(String reason) {\n \t\treturn new ConditionEvaluationResult(false, reason);\n \t}\n \n+\t/**\n+\t * Factory for creating <em>disabled</em> results with custom reasons\n+\t * added by the user.\n+\t *\n+\t * @param reason the default reason why the container or test should be disabled\n+\t * @param customReason the custom reason why the container or test should be disabled\n+\t * @return a disabled {@code ConditionEvaluationResult} with the given reasons\n+\t */\n+\tpublic static ConditionEvaluationResult disabled(String reason, String customReason) {\n+\t\tif (customReason.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b12fb197f8458ce019b391e83da54bab1bc5039"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2NTY2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * All `@EnabledIf*`/`@DisabledIf*` annotations now have an optional `disabledReason`\n          \n          \n            \n            * All `@Enabled*`/`@Disabled*` annotations now have an optional `disabledReason`", "url": "https://github.com/junit-team/junit5/pull/2276#discussion_r418465669", "createdAt": "2020-05-01T08:46:40Z", "author": {"login": "marcphilipp"}, "path": "documentation/src/docs/asciidoc/release-notes/release-notes-5.7.0-M2.adoc", "diffHunk": "@@ -39,7 +39,9 @@ on GitHub.\n \n ==== New Features and Improvements\n \n-* \u2753\n+* All `@EnabledIf*`/`@DisabledIf*` annotations now have an optional `disabledReason`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b12fb197f8458ce019b391e83da54bab1bc5039"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "374aeecd21aa782f1bccc2437b63d3e7ca49ed36", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/374aeecd21aa782f1bccc2437b63d3e7ca49ed36", "committedDate": "2020-05-02T15:53:56Z", "message": "Improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06a2f555c3039c0fbab8791e511071871766e267", "author": {"user": null}, "url": "https://github.com/junit-team/junit5/commit/06a2f555c3039c0fbab8791e511071871766e267", "committedDate": "2020-05-04T16:10:06Z", "message": "Update user guide"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MTM3Mjkz", "url": "https://github.com/junit-team/junit5/pull/2276#pullrequestreview-405137293", "createdAt": "2020-05-04T16:13:44Z", "commit": {"oid": "06a2f555c3039c0fbab8791e511071871766e267"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNjoxMzo0NFrOGQHkBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNjoxMzo0NFrOGQHkBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU1NDMwOQ==", "bodyText": "@marcphilipp something like that?\nShould we also mention the fact that there is a default reason?", "url": "https://github.com/junit-team/junit5/pull/2276#discussion_r419554309", "createdAt": "2020-05-04T16:13:44Z", "author": {"login": "juliette-derancourt"}, "path": "documentation/src/docs/asciidoc/user-guide/writing-tests.adoc", "diffHunk": "@@ -342,7 +342,9 @@ conditions _programmatically_. The simplest example of such a condition is the b\n several other annotation-based conditions in the `org.junit.jupiter.api.condition`\n package that allow developers to enable or disable containers and tests _declaratively_.\n When multiple `ExecutionCondition` extensions are registered, a container or test is\n-disabled as soon as one of the conditions returns _disabled_.\n+disabled as soon as one of the conditions returns _disabled_. If you wish to provide\n+details about why they might be disabled, every annotation associated to these built-in\n+conditions have a `disabledReason` attribute available for that purpose.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06a2f555c3039c0fbab8791e511071871766e267"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae64c0d79d88c9f582471b88ea23667a33cf328d", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/ae64c0d79d88c9f582471b88ea23667a33cf328d", "committedDate": "2020-05-05T14:30:21Z", "message": "Update user guide\n\nCo-authored-by: Marc Philipp <mail@marcphilipp.de>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3534, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}