{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3OTQyNTY4", "number": 2214, "title": "Introduce `@EnabledIf`/`@DisabledIf` annotations", "bodyText": "Resolves #1911.\n\nI hereby agree to the terms of the JUnit Contributor License Agreement.\n\nDefinition of Done\n\n There are no TODOs left in the code\n Method preconditions are checked and documented in the method's Javadoc\n Coding conventions (e.g. for logging) have been followed\n Change is covered by automated tests including corner cases, errors, and exception handling\n Public API has Javadoc and @API annotations\n Change is documented in the User Guide and Release Notes\n All continuous integration builds pass", "createdAt": "2020-03-13T19:34:50Z", "url": "https://github.com/junit-team/junit5/pull/2214", "merged": true, "mergeCommit": {"oid": "6191c45a601a6ba33116507e97ef8a172c250a93"}, "closed": true, "closedAt": "2020-04-14T10:33:50Z", "author": {"login": "juliette-derancourt"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNVvfzgBqjMxMjc5OTQwMzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWjcHOAFqTM5MTc1NjMyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "34cd2e9c1c1a94db871582d7024667e3544ac25a", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/34cd2e9c1c1a94db871582d7024667e3544ac25a", "committedDate": "2020-03-13T19:33:13Z", "message": "Introduce `@EnabledIf`/`@DisabledIf` annotations based on static condition methods"}, "afterCommit": {"oid": "6fc3abc5e44c0eab6db0ec4a1088353002d3310e", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/6fc3abc5e44c0eab6db0ec4a1088353002d3310e", "committedDate": "2020-03-13T19:46:51Z", "message": "Introduce `@EnabledIf`/`@DisabledIf` annotations based on static condition methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6fc3abc5e44c0eab6db0ec4a1088353002d3310e", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/6fc3abc5e44c0eab6db0ec4a1088353002d3310e", "committedDate": "2020-03-13T19:46:51Z", "message": "Introduce `@EnabledIf`/`@DisabledIf` annotations based on static condition methods"}, "afterCommit": {"oid": "d3e6c02d42f58c5f99f85cffd623c7436c499b0a", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/d3e6c02d42f58c5f99f85cffd623c7436c499b0a", "committedDate": "2020-03-13T19:59:24Z", "message": "Introduce `@EnabledIf`/`@DisabledIf` annotations based on static condition methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3e6c02d42f58c5f99f85cffd623c7436c499b0a", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/d3e6c02d42f58c5f99f85cffd623c7436c499b0a", "committedDate": "2020-03-13T19:59:24Z", "message": "Introduce `@EnabledIf`/`@DisabledIf` annotations based on static condition methods"}, "afterCommit": {"oid": "08a0db885b3bc89b4432f74a2625fcc20e462afa", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/08a0db885b3bc89b4432f74a2625fcc20e462afa", "committedDate": "2020-03-13T20:14:20Z", "message": "Introduce `@EnabledIf`/`@DisabledIf` annotations based on static condition methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTk3NzE4", "url": "https://github.com/junit-team/junit5/pull/2214#pullrequestreview-374597718", "createdAt": "2020-03-13T20:21:20Z", "commit": {"oid": "08a0db885b3bc89b4432f74a2625fcc20e462afa"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMDoyMToyMVrOF2RLhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMDoyNjozM1rOF2RZjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ0ODkwMg==", "bodyText": "I believe you might have copied that from somewhere. \ud83d\ude09", "url": "https://github.com/junit-team/junit5/pull/2214#discussion_r392448902", "createdAt": "2020-03-13T20:21:21Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/condition/DisabledIf.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.api.condition;\n+\n+import static org.apiguardian.api.API.Status.STABLE;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import org.apiguardian.api.API;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+\n+/**\n+ * {@code @DisabledIf} is used to signal that the annotated test class or\n+ * test method is <em>disabled</em> only if the provided condition\n+ * evaluates to {@code true}.\n+ *\n+ * <p>When applied at the class level, all test methods within that class\n+ * will be disabled on the same specified operating systems.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a0db885b3bc89b4432f74a2625fcc20e462afa"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1MDI5MQ==", "bodyText": "I think this class can be package-private.", "url": "https://github.com/junit-team/junit5/pull/2214#discussion_r392450291", "createdAt": "2020-03-13T20:23:28Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/condition/MethodBasedCondition.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.api.condition;\n+\n+import static java.lang.String.format;\n+\n+import java.lang.reflect.Method;\n+import java.util.Optional;\n+\n+import org.junit.jupiter.api.extension.ConditionEvaluationResult;\n+import org.junit.jupiter.api.extension.ExecutionCondition;\n+import org.junit.jupiter.api.extension.ExtensionContext;\n+import org.junit.platform.commons.JUnitException;\n+import org.junit.platform.commons.util.Preconditions;\n+import org.junit.platform.commons.util.ReflectionUtils;\n+\n+public abstract class MethodBasedCondition implements ExecutionCondition {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a0db885b3bc89b4432f74a2625fcc20e462afa"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1MjQ5Mw==", "bodyText": "Can we reuse this logic from MethodArgumentsProvider somehow?", "url": "https://github.com/junit-team/junit5/pull/2214#discussion_r392452493", "createdAt": "2020-03-13T20:26:33Z", "author": {"login": "marcphilipp"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/condition/MethodBasedCondition.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.api.condition;\n+\n+import static java.lang.String.format;\n+\n+import java.lang.reflect.Method;\n+import java.util.Optional;\n+\n+import org.junit.jupiter.api.extension.ConditionEvaluationResult;\n+import org.junit.jupiter.api.extension.ExecutionCondition;\n+import org.junit.jupiter.api.extension.ExtensionContext;\n+import org.junit.platform.commons.JUnitException;\n+import org.junit.platform.commons.util.Preconditions;\n+import org.junit.platform.commons.util.ReflectionUtils;\n+\n+public abstract class MethodBasedCondition implements ExecutionCondition {\n+\n+\tabstract Optional<String> getMethodName(ExtensionContext context);\n+\n+\tabstract ConditionEvaluationResult getDefaultResult();\n+\n+\tabstract ConditionEvaluationResult getResultBasedOnBoolean(boolean result);\n+\n+\t@Override\n+\tpublic ConditionEvaluationResult evaluateExecutionCondition(ExtensionContext context) {\n+\t\treturn getMethodName(context) //\n+\t\t\t\t.map(methodName -> getConditionMethod(methodName, context)) //\n+\t\t\t\t.map(method -> (boolean) evaluateCondition(method, context)) //\n+\t\t\t\t.map(this::getResultBasedOnBoolean).orElse(getDefaultResult());\n+\t}\n+\n+\tprivate Method getConditionMethod(String methodName, ExtensionContext context) {\n+\t\tif (methodName.contains(\"#\")) {\n+\t\t\treturn findMethodByFullyQualifiedName(methodName);\n+\t\t}\n+\t\treturn findMethod(context.getRequiredTestClass(), methodName);\n+\t}\n+\n+\tprivate Method findMethodByFullyQualifiedName(String fullyQualifiedMethodName) {\n+\t\tString[] methodParts = ReflectionUtils.parseFullyQualifiedMethodName(fullyQualifiedMethodName);\n+\t\tString className = methodParts[0];\n+\t\tString methodName = methodParts[1];\n+\t\tClass<?> clazz = ReflectionUtils.tryToLoadClass(className).getOrThrow(\n+\t\t\tcause -> new JUnitException(format(\"Could not load class [%s]\", className), cause));\n+\t\treturn findMethod(clazz, methodName);\n+\t}\n+\n+\tprivate Method findMethod(Class<?> clazz, String methodName) {\n+\t\treturn ReflectionUtils.findMethod(clazz, methodName) //\n+\t\t\t\t.orElseGet(() -> ReflectionUtils.findMethod(clazz, methodName, ExtensionContext.class) //\n+\t\t\t\t\t\t.orElseThrow(() -> new JUnitException(\n+\t\t\t\t\t\t\tformat(\"Could not find method [%s] in class [%s]\", methodName, clazz.getName()))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a0db885b3bc89b4432f74a2625fcc20e462afa"}, "originalPosition": 61}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08a0db885b3bc89b4432f74a2625fcc20e462afa", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/08a0db885b3bc89b4432f74a2625fcc20e462afa", "committedDate": "2020-03-13T20:14:20Z", "message": "Introduce `@EnabledIf`/`@DisabledIf` annotations based on static condition methods"}, "afterCommit": {"oid": "6ed42576b598af549207609f8cdf88c5b8b67837", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/6ed42576b598af549207609f8cdf88c5b8b67837", "committedDate": "2020-03-13T20:32:42Z", "message": "Introduce `@EnabledIf`/`@DisabledIf` annotations based on static condition methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6ed42576b598af549207609f8cdf88c5b8b67837", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/6ed42576b598af549207609f8cdf88c5b8b67837", "committedDate": "2020-03-13T20:32:42Z", "message": "Introduce `@EnabledIf`/`@DisabledIf` annotations based on static condition methods"}, "afterCommit": {"oid": "eebf1d6824839f6898830d06f7b157f168e01bc7", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/eebf1d6824839f6898830d06f7b157f168e01bc7", "committedDate": "2020-03-13T20:56:15Z", "message": "Introduce `@EnabledIf`/`@DisabledIf` annotations based on static condition methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eebf1d6824839f6898830d06f7b157f168e01bc7", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/eebf1d6824839f6898830d06f7b157f168e01bc7", "committedDate": "2020-03-13T20:56:15Z", "message": "Introduce `@EnabledIf`/`@DisabledIf` annotations based on static condition methods"}, "afterCommit": {"oid": "542e607309602f89db3ecc27095c01a56d157ffb", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/542e607309602f89db3ecc27095c01a56d157ffb", "committedDate": "2020-03-21T16:27:21Z", "message": "Update release notes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "17abcea716e418a09f10ec885748d058b117d61a", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/17abcea716e418a09f10ec885748d058b117d61a", "committedDate": "2020-03-21T16:51:27Z", "message": "Add documentation in the user guide"}, "afterCommit": {"oid": "ee1eef90569893d22858079cf33d42cd2e6d6ab7", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/ee1eef90569893d22858079cf33d42cd2e6d6ab7", "committedDate": "2020-03-21T17:02:04Z", "message": "Add documentation in the user guide"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMzAyMDAz", "url": "https://github.com/junit-team/junit5/pull/2214#pullrequestreview-383302003", "createdAt": "2020-03-28T10:37:29Z", "commit": {"oid": "ee1eef90569893d22858079cf33d42cd2e6d6ab7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxMDozNzozMFrOF9IhlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxMDo0NzoxMFrOF9IkxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY0NzEyNA==", "bodyText": "These attributes need to be defined in documentation/src/docs/asciidoc/link-attributes.adoc.", "url": "https://github.com/junit-team/junit5/pull/2214#discussion_r399647124", "createdAt": "2020-03-28T10:37:30Z", "author": {"login": "marcphilipp"}, "path": "documentation/src/docs/asciidoc/user-guide/writing-tests.adoc", "diffHunk": "@@ -437,6 +437,21 @@ method. Specifically, these annotations will be found if they are directly prese\n indirectly present, or meta-present on a given element.\n ====\n \n+[[writing-tests-conditional-execution-custom]]\n+==== Custom Conditions\n+\n+A container or test may be enabled or disabled based on the boolean return of a static\n+method via the `{EnabledIf}` and `{DisabledIf}` annotations. The method is provided to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee1eef90569893d22858079cf33d42cd2e6d6ab7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY0NzY4NQ==", "bodyText": "We should describe that the method does not have to be static in case @TestInstance(PER_CLASS) is used and add tests for this case.", "url": "https://github.com/junit-team/junit5/pull/2214#discussion_r399647685", "createdAt": "2020-03-28T10:43:43Z", "author": {"login": "marcphilipp"}, "path": "documentation/src/docs/asciidoc/user-guide/writing-tests.adoc", "diffHunk": "@@ -437,6 +437,21 @@ method. Specifically, these annotations will be found if they are directly prese\n indirectly present, or meta-present on a given element.\n ====\n \n+[[writing-tests-conditional-execution-custom]]\n+==== Custom Conditions\n+\n+A container or test may be enabled or disabled based on the boolean return of a static", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee1eef90569893d22858079cf33d42cd2e6d6ab7"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY0Nzk0MQ==", "bodyText": "This method needs Javadoc, including @since, and an @API annotation.", "url": "https://github.com/junit-team/junit5/pull/2214#discussion_r399647941", "createdAt": "2020-03-28T10:47:10Z", "author": {"login": "marcphilipp"}, "path": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/ReflectionUtils.java", "diffHunk": "@@ -1314,6 +1315,11 @@ public static boolean isMethodPresent(Class<?> clazz, Predicate<Method> predicat\n \t\treturn Optional.empty();\n \t}\n \n+\tpublic static Method getRequiredMethod(Class<?> clazz, String methodName, Class<?>... parameterTypes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee1eef90569893d22858079cf33d42cd2e6d6ab7"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ecd346b780a17a177cd2118dfaa738dce77e7da2", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/ecd346b780a17a177cd2118dfaa738dce77e7da2", "committedDate": "2020-03-28T11:57:13Z", "message": "Update link-attributes.adoc"}, "afterCommit": {"oid": "49747a0e6731b70c2154a473a70b6061e213ce53", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/49747a0e6731b70c2154a473a70b6061e213ce53", "committedDate": "2020-03-28T16:34:34Z", "message": "Add Javadoc for `getRequiredMethod(Class, String, Class...)`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a22ff2adad2d27a5dfec491ae7f23f98f24f9e1", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/1a22ff2adad2d27a5dfec491ae7f23f98f24f9e1", "committedDate": "2020-04-01T19:46:15Z", "message": "Introduce `@EnabledIf`/`@DisabledIf` annotations based on static condition methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d064777ed18d0b1ace548c5634e0d8fc287ef2e", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/0d064777ed18d0b1ace548c5634e0d8fc287ef2e", "committedDate": "2020-04-01T19:46:15Z", "message": "Extract logic to ReflectionUtils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dbcbf217ec769a3881246ed2c5a84ef232de0fa", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/5dbcbf217ec769a3881246ed2c5a84ef232de0fa", "committedDate": "2020-04-01T19:46:15Z", "message": "Update release notes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ce647d44839ccbbef338bc3a4ff3674caa596f6", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/9ce647d44839ccbbef338bc3a4ff3674caa596f6", "committedDate": "2020-04-01T19:46:15Z", "message": "Add documentation in the user guide"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7b594bca2b95f03cd106f851730ee57aef38b0e", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/f7b594bca2b95f03cd106f851730ee57aef38b0e", "committedDate": "2020-04-01T19:46:15Z", "message": "Update link-attributes.adoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f08fe9d7b45c21f767591b9ba522e7ddd5af158", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/5f08fe9d7b45c21f767591b9ba522e7ddd5af158", "committedDate": "2020-04-01T19:46:15Z", "message": "Add Javadoc for `getRequiredMethod(Class, String, Class...)`"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "49747a0e6731b70c2154a473a70b6061e213ce53", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/49747a0e6731b70c2154a473a70b6061e213ce53", "committedDate": "2020-03-28T16:34:34Z", "message": "Add Javadoc for `getRequiredMethod(Class, String, Class...)`"}, "afterCommit": {"oid": "f7224428e7d0323fe11f8998a78298eda79221d9", "author": {"user": null}, "url": "https://github.com/junit-team/junit5/commit/f7224428e7d0323fe11f8998a78298eda79221d9", "committedDate": "2020-04-01T19:58:34Z", "message": "Add tests with non-static method and per class lifecycle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1OTA3MzQw", "url": "https://github.com/junit-team/junit5/pull/2214#pullrequestreview-385907340", "createdAt": "2020-04-01T20:01:37Z", "commit": {"oid": "f7224428e7d0323fe11f8998a78298eda79221d9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDowMTozN1rOF_QhCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDowMTozN1rOF_QhCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3NTIxMQ==", "bodyText": "@marcphilipp Am I wrong to assume that the testInstance will always be present in this case?\nIf so, is the presence of @TestInstance(Lifecycle.PER_CLASS) even required in the case of a non-static method?", "url": "https://github.com/junit-team/junit5/pull/2214#discussion_r401875211", "createdAt": "2020-04-01T20:01:37Z", "author": {"login": "juliette-derancourt"}, "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/condition/MethodBasedCondition.java", "diffHunk": "@@ -66,7 +66,7 @@ private Object evaluateCondition(Method method, ExtensionContext context) {\n \t\tPreconditions.condition(areParametersSupported(method),\n \t\t\t() -> format(\"method [%s] should take either an ExtensionContext or no parameters\", method.getName()));\n \n-\t\tObject testInstance = context.getTestInstance().orElse(null);\n+\t\tObject testInstance = context.getRequiredTestInstance();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7224428e7d0323fe11f8998a78298eda79221d9"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f367023ba3415da34cfa7261548d8271429f0d8", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/4f367023ba3415da34cfa7261548d8271429f0d8", "committedDate": "2020-04-03T19:47:12Z", "message": "Add tests with non-static method and per class lifecycle"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f7224428e7d0323fe11f8998a78298eda79221d9", "author": {"user": null}, "url": "https://github.com/junit-team/junit5/commit/f7224428e7d0323fe11f8998a78298eda79221d9", "committedDate": "2020-04-01T19:58:34Z", "message": "Add tests with non-static method and per class lifecycle"}, "afterCommit": {"oid": "4f367023ba3415da34cfa7261548d8271429f0d8", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/4f367023ba3415da34cfa7261548d8271429f0d8", "committedDate": "2020-04-03T19:47:12Z", "message": "Add tests with non-static method and per class lifecycle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Njg4NjYz", "url": "https://github.com/junit-team/junit5/pull/2214#pullrequestreview-387688663", "createdAt": "2020-04-04T10:45:20Z", "commit": {"oid": "4f367023ba3415da34cfa7261548d8271429f0d8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a2dceaaf75b5609511dd4f1fec4ea1c3e686b79", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/3a2dceaaf75b5609511dd4f1fec4ea1c3e686b79", "committedDate": "2020-04-09T09:10:46Z", "message": "Add integration tests for annotations at class level"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "800d3680419977283f63f0f4aea42b2ba793b4ad", "author": {"user": {"login": "juliette-derancourt", "name": "Juliette de Rancourt"}}, "url": "https://github.com/junit-team/junit5/commit/800d3680419977283f63f0f4aea42b2ba793b4ad", "committedDate": "2020-04-10T20:27:16Z", "message": "Update documentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzU2MzI1", "url": "https://github.com/junit-team/junit5/pull/2214#pullrequestreview-391756325", "createdAt": "2020-04-11T10:49:48Z", "commit": {"oid": "800d3680419977283f63f0f4aea42b2ba793b4ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3497, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}