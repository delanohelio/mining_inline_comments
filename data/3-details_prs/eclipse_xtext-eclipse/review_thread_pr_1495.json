{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3NzcwNjk2", "number": 1495, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzo0ODoxOVrOES0e2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzo0ODoxOVrOES0e2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTY5Njg5OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.builder/src/org/eclipse/xtext/builder/builderState/AbstractBuilderState.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzo0ODoxOVrOG4NcCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzo0OTowOVrOG4NeWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU5MzYwOA==", "bodyText": "If I'm not mistake, the lock should be aquired before the try block. Otherwise we'll try to release something in the finally block, if the acquisition failed from some reason.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1495#discussion_r461593608", "createdAt": "2020-07-28T13:48:19Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.builder/src/org/eclipse/xtext/builder/builderState/AbstractBuilderState.java", "diffHunk": "@@ -68,17 +70,26 @@\n \tprivate WorkspaceLockAccess workspaceLockAccess;\n \n \tprivate volatile boolean isLoaded = false;\n+\t\n+\tfinal ILock lock = Job.getJobManager().newLock();\n \n \tpublic void load() {\n \t\tif (!isLoaded) {\n \t\t\tIWorkspaceRunnable runnable = new IWorkspaceRunnable() {\n \t\t\t\t@Override\n \t\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {\n \t\t\t\t\tif (!isLoaded) {\n-\t\t\t\t\t\tresourceDescriptionData = new ResourceDescriptionsData(persister.load());\n-\t\t\t\t\t\tif(storage2UriMapper instanceof IStorage2UriMapperExtension)\n-\t\t\t\t\t\t\t((IStorage2UriMapperExtension) storage2UriMapper).initializeCache();\n-\t\t\t\t\t\tisLoaded = true;\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tlock.acquire();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f35f9fd1e4aec38e42834104d3ca31c3ff60a66"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU5NDIwMg==", "bodyText": "Hmm weird, the documentation for ILock has an example that states otherwise...", "url": "https://github.com/eclipse/xtext-eclipse/pull/1495#discussion_r461594202", "createdAt": "2020-07-28T13:49:09Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.builder/src/org/eclipse/xtext/builder/builderState/AbstractBuilderState.java", "diffHunk": "@@ -68,17 +70,26 @@\n \tprivate WorkspaceLockAccess workspaceLockAccess;\n \n \tprivate volatile boolean isLoaded = false;\n+\t\n+\tfinal ILock lock = Job.getJobManager().newLock();\n \n \tpublic void load() {\n \t\tif (!isLoaded) {\n \t\t\tIWorkspaceRunnable runnable = new IWorkspaceRunnable() {\n \t\t\t\t@Override\n \t\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {\n \t\t\t\t\tif (!isLoaded) {\n-\t\t\t\t\t\tresourceDescriptionData = new ResourceDescriptionsData(persister.load());\n-\t\t\t\t\t\tif(storage2UriMapper instanceof IStorage2UriMapperExtension)\n-\t\t\t\t\t\t\t((IStorage2UriMapperExtension) storage2UriMapper).initializeCache();\n-\t\t\t\t\t\tisLoaded = true;\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tlock.acquire();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU5MzYwOA=="}, "originalCommit": {"oid": "1f35f9fd1e4aec38e42834104d3ca31c3ff60a66"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 742, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}