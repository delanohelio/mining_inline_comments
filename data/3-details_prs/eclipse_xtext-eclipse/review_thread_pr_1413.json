{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NjI4OTMw", "number": 1413, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNTo1NTowMVrOD116ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjozODoyMFrOD2gweQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Nzg0NDI2OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/folding/XtextFoldingTest.xtend", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNTo1NTowMVrOGLeSQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjo1MDozNVrOGMTbrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4MzcxNA==", "bodyText": "is it possible to write this in java directly", "url": "https://github.com/eclipse/xtext-eclipse/pull/1413#discussion_r414683714", "createdAt": "2020-04-24T15:55:01Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/folding/XtextFoldingTest.xtend", "diffHunk": "@@ -0,0 +1,242 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xtext.ui.editor.folding\n+\n+import org.eclipse.xtext.testing.InjectWith\n+import org.eclipse.xtext.testing.XtextRunner\n+import org.eclipse.xtext.ui.testing.AbstractFoldingTest\n+import org.eclipse.xtext.xtext.ui.XtextUiInjectorProvider\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+/**\n+ * @author miklossy - Initial contribution and API\n+ */\n+@RunWith(XtextRunner)\n+@InjectWith(XtextUiInjectorProvider)\n+class XtextFoldingTest extends AbstractFoldingTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c8b260e29b4416b1485aa6d12d02fc0c020e168"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4OTQ4MQ==", "bodyText": "Because of the heavy usage of multi-line strings I think Xtend is a better choice here.\nHow would you replace the Xtend multi-line strings in Java?", "url": "https://github.com/eclipse/xtext-eclipse/pull/1413#discussion_r414689481", "createdAt": "2020-04-24T16:03:12Z", "author": {"login": "miklossy"}, "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/folding/XtextFoldingTest.xtend", "diffHunk": "@@ -0,0 +1,242 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xtext.ui.editor.folding\n+\n+import org.eclipse.xtext.testing.InjectWith\n+import org.eclipse.xtext.testing.XtextRunner\n+import org.eclipse.xtext.ui.testing.AbstractFoldingTest\n+import org.eclipse.xtext.xtext.ui.XtextUiInjectorProvider\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+/**\n+ * @author miklossy - Initial contribution and API\n+ */\n+@RunWith(XtextRunner)\n+@InjectWith(XtextUiInjectorProvider)\n+class XtextFoldingTest extends AbstractFoldingTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4MzcxNA=="}, "originalCommit": {"oid": "1c8b260e29b4416b1485aa6d12d02fc0c020e168"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU0NjUxNg==", "bodyText": "something like Xtext2EcoreTransformerTest?", "url": "https://github.com/eclipse/xtext-eclipse/pull/1413#discussion_r415546516", "createdAt": "2020-04-27T06:33:49Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/folding/XtextFoldingTest.xtend", "diffHunk": "@@ -0,0 +1,242 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xtext.ui.editor.folding\n+\n+import org.eclipse.xtext.testing.InjectWith\n+import org.eclipse.xtext.testing.XtextRunner\n+import org.eclipse.xtext.ui.testing.AbstractFoldingTest\n+import org.eclipse.xtext.xtext.ui.XtextUiInjectorProvider\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+/**\n+ * @author miklossy - Initial contribution and API\n+ */\n+@RunWith(XtextRunner)\n+@InjectWith(XtextUiInjectorProvider)\n+class XtextFoldingTest extends AbstractFoldingTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4MzcxNA=="}, "originalCommit": {"oid": "1c8b260e29b4416b1485aa6d12d02fc0c020e168"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU1MDg0Nw==", "bodyText": "something like Xtext2EcoreTransformerTest?\n\nI do not know if it is a good idea to use hard-coded linux line endings as currently in the Xtext2EcoreTransformerTest.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1413#discussion_r415550847", "createdAt": "2020-04-27T06:42:59Z", "author": {"login": "miklossy"}, "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/folding/XtextFoldingTest.xtend", "diffHunk": "@@ -0,0 +1,242 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xtext.ui.editor.folding\n+\n+import org.eclipse.xtext.testing.InjectWith\n+import org.eclipse.xtext.testing.XtextRunner\n+import org.eclipse.xtext.ui.testing.AbstractFoldingTest\n+import org.eclipse.xtext.xtext.ui.XtextUiInjectorProvider\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+/**\n+ * @author miklossy - Initial contribution and API\n+ */\n+@RunWith(XtextRunner)\n+@InjectWith(XtextUiInjectorProvider)\n+class XtextFoldingTest extends AbstractFoldingTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4MzcxNA=="}, "originalCommit": {"oid": "1c8b260e29b4416b1485aa6d12d02fc0c020e168"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU1NDQ3Ng==", "bodyText": "Working with fixed line delimiters is usually better than monkey-patching everything to system specific line delimiters back and forth.\nWe should make sure though that we do have tests for windows and unix line endings in place.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1413#discussion_r415554476", "createdAt": "2020-04-27T06:50:35Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/folding/XtextFoldingTest.xtend", "diffHunk": "@@ -0,0 +1,242 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xtext.ui.editor.folding\n+\n+import org.eclipse.xtext.testing.InjectWith\n+import org.eclipse.xtext.testing.XtextRunner\n+import org.eclipse.xtext.ui.testing.AbstractFoldingTest\n+import org.eclipse.xtext.xtext.ui.XtextUiInjectorProvider\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+/**\n+ * @author miklossy - Initial contribution and API\n+ */\n+@RunWith(XtextRunner)\n+@InjectWith(XtextUiInjectorProvider)\n+class XtextFoldingTest extends AbstractFoldingTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4MzcxNA=="}, "originalCommit": {"oid": "1c8b260e29b4416b1485aa6d12d02fc0c020e168"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDg2MzkzOnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/folding/XtextFoldingTest.xtend", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjozODoyMFrOGMTE7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNzoyMzo0MlrOGMUhtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU0ODY1NA==", "bodyText": "What is this curly brace here?", "url": "https://github.com/eclipse/xtext-eclipse/pull/1413#discussion_r415548654", "createdAt": "2020-04-27T06:38:20Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/folding/XtextFoldingTest.xtend", "diffHunk": "@@ -0,0 +1,242 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xtext.ui.editor.folding\n+\n+import org.eclipse.xtext.testing.InjectWith\n+import org.eclipse.xtext.testing.XtextRunner\n+import org.eclipse.xtext.ui.testing.AbstractFoldingTest\n+import org.eclipse.xtext.xtext.ui.XtextUiInjectorProvider\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+/**\n+ * @author miklossy - Initial contribution and API\n+ */\n+@RunWith(XtextRunner)\n+@InjectWith(XtextUiInjectorProvider)\n+class XtextFoldingTest extends AbstractFoldingTest {\n+\n+\t@Test def greetings() {\n+\t\t'''\n+\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\n+\t\t\t[>Model:\n+\t\t\t\tgreetings+=Greeting*;<]\n+\t\t\t\t\n+\t\t\t[>Greeting:\n+\t\t\t\t'Hello' name=ID '!';<]\n+\t\t'''.testFoldingRegions\n+\t}\n+\n+\t@Test def arithmetics() {\n+\t\t'''\n+\t\t\t[>/*******************************************************************************\n+\t\t\t * Copyright (c) 2015, 2017 itemis AG (http://www.itemis.eu) and others.\n+\t\t\t * This program and the accompanying materials are made available under the\n+\t\t\t * terms of the Eclipse Public License 2.0 which is available at\n+\t\t\t * http://www.eclipse.org/legal/epl-2.0.\n+\t\t\t *\n+\t\t\t * SPDX-License-Identifier: EPL-2.0\n+\t\t\t *******************************************************************************/<]\n+\t\t\tgrammar org.eclipse.xtext.example.arithmetics.Arithmetics with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\timport \"http://www.eclipse.org/emf/2002/Ecore\" as ecore\n+\t\t\tgenerate arithmetics \"http://www.eclipse.org/Xtext/example/Arithmetics\"\n+\t\t\t\n+\t\t\t[>Module:\n+\t\t\t\t'module' name=ID\n+\t\t\t\t(imports+=Import)*\n+\t\t\t\t(statements+=Statement)*;<]\n+\t\t\t\n+\t\t\t[>Import:\n+\t\t\t\t'import' module=[Module];<]\n+\t\t\t\n+\t\t\t[>Statement:\n+\t\t\t\tDefinition | Evaluation;<]\n+\t\t\t\n+\t\t\t[>Definition:\n+\t\t\t\t'def' name=ID ('(' args+=DeclaredParameter (',' args+=DeclaredParameter)* ')')?\n+\t\t\t\t':' expr=Expression ';';<]\n+\t\t\t\n+\t\t\t[>DeclaredParameter:\n+\t\t\t\tname=ID;<]\n+\t\t\t\n+\t\t\t[>AbstractDefinition:\n+\t\t\t\tDefinition | DeclaredParameter;<]\n+\t\t\t\n+\t\t\t[>Evaluation:\n+\t\t\t\texpression=Expression ';';<]\n+\t\t\t\n+\t\t\t[>Expression:\n+\t\t\t\tAddition;<]\n+\t\t\t\n+\t\t\t[>Addition returns Expression:\n+\t\t\t\tMultiplication (({Plus.left=current} '+' | {Minus.left=current} '-') right=Multiplication)*;<]\n+\t\t\t\n+\t\t\t[>Multiplication returns Expression:\n+\t\t\t\tPrimaryExpression (({Multi.left=current} '*' | {Div.left=current} '/') right=PrimaryExpression)*;<]\n+\t\t\t\n+\t\t\t[>PrimaryExpression returns Expression:\n+\t\t\t\t'(' Expression ')' |\n+\t\t\t\t{NumberLiteral} value=NUMBER |\n+\t\t\t\t{FunctionCall} func=[AbstractDefinition] ('(' args+=Expression (',' args+=Expression)* ')')?;<]\n+\t\t\t\n+\t\t\t[>terminal NUMBER returns ecore::EBigDecimal:\n+\t\t\t\t('0'..'9')* ('.' ('0'..'9')+)?;<]\n+\t\t\t\n+\t\t\t[>@Override\n+\t\t\tterminal INT returns ecore::EInt:\n+\t\t\t\t'this one has been deactivated';<]\n+\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c8b260e29b4416b1485aa6d12d02fc0c020e168"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU1Mjk2Nw==", "bodyText": "Good catch eagle-eye @szarnekow ! I removed it.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1413#discussion_r415552967", "createdAt": "2020-04-27T06:47:18Z", "author": {"login": "miklossy"}, "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/folding/XtextFoldingTest.xtend", "diffHunk": "@@ -0,0 +1,242 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xtext.ui.editor.folding\n+\n+import org.eclipse.xtext.testing.InjectWith\n+import org.eclipse.xtext.testing.XtextRunner\n+import org.eclipse.xtext.ui.testing.AbstractFoldingTest\n+import org.eclipse.xtext.xtext.ui.XtextUiInjectorProvider\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+/**\n+ * @author miklossy - Initial contribution and API\n+ */\n+@RunWith(XtextRunner)\n+@InjectWith(XtextUiInjectorProvider)\n+class XtextFoldingTest extends AbstractFoldingTest {\n+\n+\t@Test def greetings() {\n+\t\t'''\n+\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\n+\t\t\t[>Model:\n+\t\t\t\tgreetings+=Greeting*;<]\n+\t\t\t\t\n+\t\t\t[>Greeting:\n+\t\t\t\t'Hello' name=ID '!';<]\n+\t\t'''.testFoldingRegions\n+\t}\n+\n+\t@Test def arithmetics() {\n+\t\t'''\n+\t\t\t[>/*******************************************************************************\n+\t\t\t * Copyright (c) 2015, 2017 itemis AG (http://www.itemis.eu) and others.\n+\t\t\t * This program and the accompanying materials are made available under the\n+\t\t\t * terms of the Eclipse Public License 2.0 which is available at\n+\t\t\t * http://www.eclipse.org/legal/epl-2.0.\n+\t\t\t *\n+\t\t\t * SPDX-License-Identifier: EPL-2.0\n+\t\t\t *******************************************************************************/<]\n+\t\t\tgrammar org.eclipse.xtext.example.arithmetics.Arithmetics with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\timport \"http://www.eclipse.org/emf/2002/Ecore\" as ecore\n+\t\t\tgenerate arithmetics \"http://www.eclipse.org/Xtext/example/Arithmetics\"\n+\t\t\t\n+\t\t\t[>Module:\n+\t\t\t\t'module' name=ID\n+\t\t\t\t(imports+=Import)*\n+\t\t\t\t(statements+=Statement)*;<]\n+\t\t\t\n+\t\t\t[>Import:\n+\t\t\t\t'import' module=[Module];<]\n+\t\t\t\n+\t\t\t[>Statement:\n+\t\t\t\tDefinition | Evaluation;<]\n+\t\t\t\n+\t\t\t[>Definition:\n+\t\t\t\t'def' name=ID ('(' args+=DeclaredParameter (',' args+=DeclaredParameter)* ')')?\n+\t\t\t\t':' expr=Expression ';';<]\n+\t\t\t\n+\t\t\t[>DeclaredParameter:\n+\t\t\t\tname=ID;<]\n+\t\t\t\n+\t\t\t[>AbstractDefinition:\n+\t\t\t\tDefinition | DeclaredParameter;<]\n+\t\t\t\n+\t\t\t[>Evaluation:\n+\t\t\t\texpression=Expression ';';<]\n+\t\t\t\n+\t\t\t[>Expression:\n+\t\t\t\tAddition;<]\n+\t\t\t\n+\t\t\t[>Addition returns Expression:\n+\t\t\t\tMultiplication (({Plus.left=current} '+' | {Minus.left=current} '-') right=Multiplication)*;<]\n+\t\t\t\n+\t\t\t[>Multiplication returns Expression:\n+\t\t\t\tPrimaryExpression (({Multi.left=current} '*' | {Div.left=current} '/') right=PrimaryExpression)*;<]\n+\t\t\t\n+\t\t\t[>PrimaryExpression returns Expression:\n+\t\t\t\t'(' Expression ')' |\n+\t\t\t\t{NumberLiteral} value=NUMBER |\n+\t\t\t\t{FunctionCall} func=[AbstractDefinition] ('(' args+=Expression (',' args+=Expression)* ')')?;<]\n+\t\t\t\n+\t\t\t[>terminal NUMBER returns ecore::EBigDecimal:\n+\t\t\t\t('0'..'9')* ('.' ('0'..'9')+)?;<]\n+\t\t\t\n+\t\t\t[>@Override\n+\t\t\tterminal INT returns ecore::EInt:\n+\t\t\t\t'this one has been deactivated';<]\n+\t\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU0ODY1NA=="}, "originalCommit": {"oid": "1c8b260e29b4416b1485aa6d12d02fc0c020e168"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU1Nzc4Nw==", "bodyText": "I wonder why the test passed and if it is a good idea to accept syntax errors by default in the folding test utilities.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1413#discussion_r415557787", "createdAt": "2020-04-27T06:57:02Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/folding/XtextFoldingTest.xtend", "diffHunk": "@@ -0,0 +1,242 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xtext.ui.editor.folding\n+\n+import org.eclipse.xtext.testing.InjectWith\n+import org.eclipse.xtext.testing.XtextRunner\n+import org.eclipse.xtext.ui.testing.AbstractFoldingTest\n+import org.eclipse.xtext.xtext.ui.XtextUiInjectorProvider\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+/**\n+ * @author miklossy - Initial contribution and API\n+ */\n+@RunWith(XtextRunner)\n+@InjectWith(XtextUiInjectorProvider)\n+class XtextFoldingTest extends AbstractFoldingTest {\n+\n+\t@Test def greetings() {\n+\t\t'''\n+\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\n+\t\t\t[>Model:\n+\t\t\t\tgreetings+=Greeting*;<]\n+\t\t\t\t\n+\t\t\t[>Greeting:\n+\t\t\t\t'Hello' name=ID '!';<]\n+\t\t'''.testFoldingRegions\n+\t}\n+\n+\t@Test def arithmetics() {\n+\t\t'''\n+\t\t\t[>/*******************************************************************************\n+\t\t\t * Copyright (c) 2015, 2017 itemis AG (http://www.itemis.eu) and others.\n+\t\t\t * This program and the accompanying materials are made available under the\n+\t\t\t * terms of the Eclipse Public License 2.0 which is available at\n+\t\t\t * http://www.eclipse.org/legal/epl-2.0.\n+\t\t\t *\n+\t\t\t * SPDX-License-Identifier: EPL-2.0\n+\t\t\t *******************************************************************************/<]\n+\t\t\tgrammar org.eclipse.xtext.example.arithmetics.Arithmetics with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\timport \"http://www.eclipse.org/emf/2002/Ecore\" as ecore\n+\t\t\tgenerate arithmetics \"http://www.eclipse.org/Xtext/example/Arithmetics\"\n+\t\t\t\n+\t\t\t[>Module:\n+\t\t\t\t'module' name=ID\n+\t\t\t\t(imports+=Import)*\n+\t\t\t\t(statements+=Statement)*;<]\n+\t\t\t\n+\t\t\t[>Import:\n+\t\t\t\t'import' module=[Module];<]\n+\t\t\t\n+\t\t\t[>Statement:\n+\t\t\t\tDefinition | Evaluation;<]\n+\t\t\t\n+\t\t\t[>Definition:\n+\t\t\t\t'def' name=ID ('(' args+=DeclaredParameter (',' args+=DeclaredParameter)* ')')?\n+\t\t\t\t':' expr=Expression ';';<]\n+\t\t\t\n+\t\t\t[>DeclaredParameter:\n+\t\t\t\tname=ID;<]\n+\t\t\t\n+\t\t\t[>AbstractDefinition:\n+\t\t\t\tDefinition | DeclaredParameter;<]\n+\t\t\t\n+\t\t\t[>Evaluation:\n+\t\t\t\texpression=Expression ';';<]\n+\t\t\t\n+\t\t\t[>Expression:\n+\t\t\t\tAddition;<]\n+\t\t\t\n+\t\t\t[>Addition returns Expression:\n+\t\t\t\tMultiplication (({Plus.left=current} '+' | {Minus.left=current} '-') right=Multiplication)*;<]\n+\t\t\t\n+\t\t\t[>Multiplication returns Expression:\n+\t\t\t\tPrimaryExpression (({Multi.left=current} '*' | {Div.left=current} '/') right=PrimaryExpression)*;<]\n+\t\t\t\n+\t\t\t[>PrimaryExpression returns Expression:\n+\t\t\t\t'(' Expression ')' |\n+\t\t\t\t{NumberLiteral} value=NUMBER |\n+\t\t\t\t{FunctionCall} func=[AbstractDefinition] ('(' args+=Expression (',' args+=Expression)* ')')?;<]\n+\t\t\t\n+\t\t\t[>terminal NUMBER returns ecore::EBigDecimal:\n+\t\t\t\t('0'..'9')* ('.' ('0'..'9')+)?;<]\n+\t\t\t\n+\t\t\t[>@Override\n+\t\t\tterminal INT returns ecore::EInt:\n+\t\t\t\t'this one has been deactivated';<]\n+\t\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU0ODY1NA=="}, "originalCommit": {"oid": "1c8b260e29b4416b1485aa6d12d02fc0c020e168"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU2Njg4MA==", "bodyText": "We could improve that in the future, but I think for the time being it is acceptable.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1413#discussion_r415566880", "createdAt": "2020-04-27T07:14:18Z", "author": {"login": "miklossy"}, "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/folding/XtextFoldingTest.xtend", "diffHunk": "@@ -0,0 +1,242 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xtext.ui.editor.folding\n+\n+import org.eclipse.xtext.testing.InjectWith\n+import org.eclipse.xtext.testing.XtextRunner\n+import org.eclipse.xtext.ui.testing.AbstractFoldingTest\n+import org.eclipse.xtext.xtext.ui.XtextUiInjectorProvider\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+/**\n+ * @author miklossy - Initial contribution and API\n+ */\n+@RunWith(XtextRunner)\n+@InjectWith(XtextUiInjectorProvider)\n+class XtextFoldingTest extends AbstractFoldingTest {\n+\n+\t@Test def greetings() {\n+\t\t'''\n+\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\n+\t\t\t[>Model:\n+\t\t\t\tgreetings+=Greeting*;<]\n+\t\t\t\t\n+\t\t\t[>Greeting:\n+\t\t\t\t'Hello' name=ID '!';<]\n+\t\t'''.testFoldingRegions\n+\t}\n+\n+\t@Test def arithmetics() {\n+\t\t'''\n+\t\t\t[>/*******************************************************************************\n+\t\t\t * Copyright (c) 2015, 2017 itemis AG (http://www.itemis.eu) and others.\n+\t\t\t * This program and the accompanying materials are made available under the\n+\t\t\t * terms of the Eclipse Public License 2.0 which is available at\n+\t\t\t * http://www.eclipse.org/legal/epl-2.0.\n+\t\t\t *\n+\t\t\t * SPDX-License-Identifier: EPL-2.0\n+\t\t\t *******************************************************************************/<]\n+\t\t\tgrammar org.eclipse.xtext.example.arithmetics.Arithmetics with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\timport \"http://www.eclipse.org/emf/2002/Ecore\" as ecore\n+\t\t\tgenerate arithmetics \"http://www.eclipse.org/Xtext/example/Arithmetics\"\n+\t\t\t\n+\t\t\t[>Module:\n+\t\t\t\t'module' name=ID\n+\t\t\t\t(imports+=Import)*\n+\t\t\t\t(statements+=Statement)*;<]\n+\t\t\t\n+\t\t\t[>Import:\n+\t\t\t\t'import' module=[Module];<]\n+\t\t\t\n+\t\t\t[>Statement:\n+\t\t\t\tDefinition | Evaluation;<]\n+\t\t\t\n+\t\t\t[>Definition:\n+\t\t\t\t'def' name=ID ('(' args+=DeclaredParameter (',' args+=DeclaredParameter)* ')')?\n+\t\t\t\t':' expr=Expression ';';<]\n+\t\t\t\n+\t\t\t[>DeclaredParameter:\n+\t\t\t\tname=ID;<]\n+\t\t\t\n+\t\t\t[>AbstractDefinition:\n+\t\t\t\tDefinition | DeclaredParameter;<]\n+\t\t\t\n+\t\t\t[>Evaluation:\n+\t\t\t\texpression=Expression ';';<]\n+\t\t\t\n+\t\t\t[>Expression:\n+\t\t\t\tAddition;<]\n+\t\t\t\n+\t\t\t[>Addition returns Expression:\n+\t\t\t\tMultiplication (({Plus.left=current} '+' | {Minus.left=current} '-') right=Multiplication)*;<]\n+\t\t\t\n+\t\t\t[>Multiplication returns Expression:\n+\t\t\t\tPrimaryExpression (({Multi.left=current} '*' | {Div.left=current} '/') right=PrimaryExpression)*;<]\n+\t\t\t\n+\t\t\t[>PrimaryExpression returns Expression:\n+\t\t\t\t'(' Expression ')' |\n+\t\t\t\t{NumberLiteral} value=NUMBER |\n+\t\t\t\t{FunctionCall} func=[AbstractDefinition] ('(' args+=Expression (',' args+=Expression)* ')')?;<]\n+\t\t\t\n+\t\t\t[>terminal NUMBER returns ecore::EBigDecimal:\n+\t\t\t\t('0'..'9')* ('.' ('0'..'9')+)?;<]\n+\t\t\t\n+\t\t\t[>@Override\n+\t\t\tterminal INT returns ecore::EInt:\n+\t\t\t\t'this one has been deactivated';<]\n+\t\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU0ODY1NA=="}, "originalCommit": {"oid": "1c8b260e29b4416b1485aa6d12d02fc0c020e168"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU3MDM5NQ==", "bodyText": "i think currently it is a feature to test folding on broken models", "url": "https://github.com/eclipse/xtext-eclipse/pull/1413#discussion_r415570395", "createdAt": "2020-04-27T07:20:21Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/folding/XtextFoldingTest.xtend", "diffHunk": "@@ -0,0 +1,242 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xtext.ui.editor.folding\n+\n+import org.eclipse.xtext.testing.InjectWith\n+import org.eclipse.xtext.testing.XtextRunner\n+import org.eclipse.xtext.ui.testing.AbstractFoldingTest\n+import org.eclipse.xtext.xtext.ui.XtextUiInjectorProvider\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+/**\n+ * @author miklossy - Initial contribution and API\n+ */\n+@RunWith(XtextRunner)\n+@InjectWith(XtextUiInjectorProvider)\n+class XtextFoldingTest extends AbstractFoldingTest {\n+\n+\t@Test def greetings() {\n+\t\t'''\n+\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\n+\t\t\t[>Model:\n+\t\t\t\tgreetings+=Greeting*;<]\n+\t\t\t\t\n+\t\t\t[>Greeting:\n+\t\t\t\t'Hello' name=ID '!';<]\n+\t\t'''.testFoldingRegions\n+\t}\n+\n+\t@Test def arithmetics() {\n+\t\t'''\n+\t\t\t[>/*******************************************************************************\n+\t\t\t * Copyright (c) 2015, 2017 itemis AG (http://www.itemis.eu) and others.\n+\t\t\t * This program and the accompanying materials are made available under the\n+\t\t\t * terms of the Eclipse Public License 2.0 which is available at\n+\t\t\t * http://www.eclipse.org/legal/epl-2.0.\n+\t\t\t *\n+\t\t\t * SPDX-License-Identifier: EPL-2.0\n+\t\t\t *******************************************************************************/<]\n+\t\t\tgrammar org.eclipse.xtext.example.arithmetics.Arithmetics with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\timport \"http://www.eclipse.org/emf/2002/Ecore\" as ecore\n+\t\t\tgenerate arithmetics \"http://www.eclipse.org/Xtext/example/Arithmetics\"\n+\t\t\t\n+\t\t\t[>Module:\n+\t\t\t\t'module' name=ID\n+\t\t\t\t(imports+=Import)*\n+\t\t\t\t(statements+=Statement)*;<]\n+\t\t\t\n+\t\t\t[>Import:\n+\t\t\t\t'import' module=[Module];<]\n+\t\t\t\n+\t\t\t[>Statement:\n+\t\t\t\tDefinition | Evaluation;<]\n+\t\t\t\n+\t\t\t[>Definition:\n+\t\t\t\t'def' name=ID ('(' args+=DeclaredParameter (',' args+=DeclaredParameter)* ')')?\n+\t\t\t\t':' expr=Expression ';';<]\n+\t\t\t\n+\t\t\t[>DeclaredParameter:\n+\t\t\t\tname=ID;<]\n+\t\t\t\n+\t\t\t[>AbstractDefinition:\n+\t\t\t\tDefinition | DeclaredParameter;<]\n+\t\t\t\n+\t\t\t[>Evaluation:\n+\t\t\t\texpression=Expression ';';<]\n+\t\t\t\n+\t\t\t[>Expression:\n+\t\t\t\tAddition;<]\n+\t\t\t\n+\t\t\t[>Addition returns Expression:\n+\t\t\t\tMultiplication (({Plus.left=current} '+' | {Minus.left=current} '-') right=Multiplication)*;<]\n+\t\t\t\n+\t\t\t[>Multiplication returns Expression:\n+\t\t\t\tPrimaryExpression (({Multi.left=current} '*' | {Div.left=current} '/') right=PrimaryExpression)*;<]\n+\t\t\t\n+\t\t\t[>PrimaryExpression returns Expression:\n+\t\t\t\t'(' Expression ')' |\n+\t\t\t\t{NumberLiteral} value=NUMBER |\n+\t\t\t\t{FunctionCall} func=[AbstractDefinition] ('(' args+=Expression (',' args+=Expression)* ')')?;<]\n+\t\t\t\n+\t\t\t[>terminal NUMBER returns ecore::EBigDecimal:\n+\t\t\t\t('0'..'9')* ('.' ('0'..'9')+)?;<]\n+\t\t\t\n+\t\t\t[>@Override\n+\t\t\tterminal INT returns ecore::EInt:\n+\t\t\t\t'this one has been deactivated';<]\n+\t\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU0ODY1NA=="}, "originalCommit": {"oid": "1c8b260e29b4416b1485aa6d12d02fc0c020e168"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU3MjQwNg==", "bodyText": "i think currently it is a feature to test folding on broken models\n\nYes, it is, but it could be a good idea to make it configurable in the AbstractFoldingTest base class if testing broken models is desired or not.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1413#discussion_r415572406", "createdAt": "2020-04-27T07:23:42Z", "author": {"login": "miklossy"}, "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/folding/XtextFoldingTest.xtend", "diffHunk": "@@ -0,0 +1,242 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xtext.ui.editor.folding\n+\n+import org.eclipse.xtext.testing.InjectWith\n+import org.eclipse.xtext.testing.XtextRunner\n+import org.eclipse.xtext.ui.testing.AbstractFoldingTest\n+import org.eclipse.xtext.xtext.ui.XtextUiInjectorProvider\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+/**\n+ * @author miklossy - Initial contribution and API\n+ */\n+@RunWith(XtextRunner)\n+@InjectWith(XtextUiInjectorProvider)\n+class XtextFoldingTest extends AbstractFoldingTest {\n+\n+\t@Test def greetings() {\n+\t\t'''\n+\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\n+\t\t\t[>Model:\n+\t\t\t\tgreetings+=Greeting*;<]\n+\t\t\t\t\n+\t\t\t[>Greeting:\n+\t\t\t\t'Hello' name=ID '!';<]\n+\t\t'''.testFoldingRegions\n+\t}\n+\n+\t@Test def arithmetics() {\n+\t\t'''\n+\t\t\t[>/*******************************************************************************\n+\t\t\t * Copyright (c) 2015, 2017 itemis AG (http://www.itemis.eu) and others.\n+\t\t\t * This program and the accompanying materials are made available under the\n+\t\t\t * terms of the Eclipse Public License 2.0 which is available at\n+\t\t\t * http://www.eclipse.org/legal/epl-2.0.\n+\t\t\t *\n+\t\t\t * SPDX-License-Identifier: EPL-2.0\n+\t\t\t *******************************************************************************/<]\n+\t\t\tgrammar org.eclipse.xtext.example.arithmetics.Arithmetics with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\timport \"http://www.eclipse.org/emf/2002/Ecore\" as ecore\n+\t\t\tgenerate arithmetics \"http://www.eclipse.org/Xtext/example/Arithmetics\"\n+\t\t\t\n+\t\t\t[>Module:\n+\t\t\t\t'module' name=ID\n+\t\t\t\t(imports+=Import)*\n+\t\t\t\t(statements+=Statement)*;<]\n+\t\t\t\n+\t\t\t[>Import:\n+\t\t\t\t'import' module=[Module];<]\n+\t\t\t\n+\t\t\t[>Statement:\n+\t\t\t\tDefinition | Evaluation;<]\n+\t\t\t\n+\t\t\t[>Definition:\n+\t\t\t\t'def' name=ID ('(' args+=DeclaredParameter (',' args+=DeclaredParameter)* ')')?\n+\t\t\t\t':' expr=Expression ';';<]\n+\t\t\t\n+\t\t\t[>DeclaredParameter:\n+\t\t\t\tname=ID;<]\n+\t\t\t\n+\t\t\t[>AbstractDefinition:\n+\t\t\t\tDefinition | DeclaredParameter;<]\n+\t\t\t\n+\t\t\t[>Evaluation:\n+\t\t\t\texpression=Expression ';';<]\n+\t\t\t\n+\t\t\t[>Expression:\n+\t\t\t\tAddition;<]\n+\t\t\t\n+\t\t\t[>Addition returns Expression:\n+\t\t\t\tMultiplication (({Plus.left=current} '+' | {Minus.left=current} '-') right=Multiplication)*;<]\n+\t\t\t\n+\t\t\t[>Multiplication returns Expression:\n+\t\t\t\tPrimaryExpression (({Multi.left=current} '*' | {Div.left=current} '/') right=PrimaryExpression)*;<]\n+\t\t\t\n+\t\t\t[>PrimaryExpression returns Expression:\n+\t\t\t\t'(' Expression ')' |\n+\t\t\t\t{NumberLiteral} value=NUMBER |\n+\t\t\t\t{FunctionCall} func=[AbstractDefinition] ('(' args+=Expression (',' args+=Expression)* ')')?;<]\n+\t\t\t\n+\t\t\t[>terminal NUMBER returns ecore::EBigDecimal:\n+\t\t\t\t('0'..'9')* ('.' ('0'..'9')+)?;<]\n+\t\t\t\n+\t\t\t[>@Override\n+\t\t\tterminal INT returns ecore::EInt:\n+\t\t\t\t'this one has been deactivated';<]\n+\t\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU0ODY1NA=="}, "originalCommit": {"oid": "1c8b260e29b4416b1485aa6d12d02fc0c020e168"}, "originalPosition": 98}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 835, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}