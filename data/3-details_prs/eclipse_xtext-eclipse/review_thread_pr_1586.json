{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNTI3Mzc5", "number": 1586, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoxODowMFrOE55h-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODo1NDo0NVrOE8Hp5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTQ2ODcyOnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.codetemplates/src-gen/org/eclipse/xtext/ui/codetemplates/services/CodetemplatesGrammarAccess.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoxODowMFrOH0pGmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoxODowMFrOH0pGmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2MTQzMg==", "bodyText": "@ArneDeutsch Do we miss a formatting rule for the hidden tokens clause? The space shouldn't be there, should it?", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524961432", "createdAt": "2020-11-17T08:18:00Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.codetemplates/src-gen/org/eclipse/xtext/ui/codetemplates/services/CodetemplatesGrammarAccess.java", "diffHunk": "@@ -160,15 +161,16 @@\n \t\tprivate final RuleCall cTemplateBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);\n \t\tprivate final Keyword cLessThanSignLessThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);\n \t\t\n-\t\t//TemplateBodyWithQuotes TemplateBody hidden():\n+\t\t//TemplateBodyWithQuotes TemplateBody hidden ():", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTQ3NTA3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/BacktrackingContentAssistTestLanguageGrammarAccess.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoxOTo0NlrOH0pKdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoxOTo0NlrOH0pKdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2MjQyMg==", "bodyText": "I'm aware that this is a known issue, but it's really sad.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524962422", "createdAt": "2020-11-17T08:19:46Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/BacktrackingContentAssistTestLanguageGrammarAccess.java", "diffHunk": "@@ -778,7 +781,8 @@\n \t\t//\t'::' element=ClassifierRef;\n \t\t@Override public ParserRule getRule() { return rule; }\n \t\t\n-\t\t//namespace=Identifier '::' element=ClassifierRef\n+\t\t//namespace=Identifier", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTQ3NjgzOnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/BacktrackingContentAssistTestLanguageGrammarAccess.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoyMDoxOFrOH0pLlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoyMDoxOFrOH0pLlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2MjcxMA==", "bodyText": "@ArneDeutsch Missing formatting rule for actions? The space around the . is unexpected. Same for the space before current", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524962710", "createdAt": "2020-11-17T08:20:18Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/BacktrackingContentAssistTestLanguageGrammarAccess.java", "diffHunk": "@@ -1112,26 +1121,28 @@\n \t\t\n \t\t//// Follows ., ->, ^\n \t\t//NavigatingExp:\n-\t\t//\tSubNavigatingExp ({InfixExp.source=current} op=('.' | '->') argument=NavigatingExp | {OclMessage.source=current}\n-\t\t//\top=('^^' | '^') messageName=Identifier\n+\t\t//\tSubNavigatingExp ({InfixExp . source= current} op=('.' | '->') argument=NavigatingExp | {OclMessage . source= current} op=(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTQ4NjQ1OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug286935TestLanguageGrammarAccess.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoyMjo1OFrOH0pRUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoyMjo1OFrOH0pRUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2NDE3Ng==", "bodyText": "@ArneDeutsch Missing formatting rule for EnumLiteralDeclaration - the space around the = is unexpected.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524964176", "createdAt": "2020-11-17T08:22:58Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug286935TestLanguageGrammarAccess.java", "diffHunk": "@@ -156,10 +159,10 @@\n \t\tprivate final Keyword cTEXTUALTextualKeyword_3_0 = (Keyword)cTEXTUALEnumLiteralDeclaration_3.eContents().get(0);\n \t\t\n \t\t//enum StateType:\n-\t\t//\tNORMAL | PSEUDO='cond' | REFERENCE='reference' | TEXTUAL='textual';\n+\t\t//\tNORMAL | PSEUDO = 'cond' | REFERENCE = 'reference' | TEXTUAL = 'textual';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTQ5NTM1OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug287941TestLanguageGrammarAccess.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoyNToxMlrOH0pWng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoyNToxMlrOH0pWng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2NTUzNA==", "bodyText": "Interesting: The return keyword is missing.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524965534", "createdAt": "2020-11-17T08:25:12Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug287941TestLanguageGrammarAccess.java", "diffHunk": "@@ -520,7 +522,7 @@\n \t\tprivate final RuleCall cWhereEntryParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);\n \t\tprivate final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);\n \t\t\n-\t\t//ParWhereEntry WhereEntry:\n+\t\t//ParWhereEntry  WhereEntry:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTUxMTI5OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug348199TestLanguageGrammarAccess.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoyOToyM1rOH0pgOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTowMzo1NVrOH3TZ4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2Nzk5NQ==", "bodyText": "Blank line? I see that this is part of the original xtext file, but why do we keep that for groups in the formatter?", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524967995", "createdAt": "2020-11-17T08:29:23Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug348199TestLanguageGrammarAccess.java", "diffHunk": "@@ -259,8 +259,10 @@\n \t\t//Timeperiod:\n \t\t//\t{Timeperiod}\n \t\t//\t'define' 'timeperiod' ('1'\n-\t\t//\t'{' (NL+ time+=TimeDef1)* (NL+ 'timeperiod_name' name+=ID (NL+ time+=TimeDef2)* & (NL+ 'otherelement' alias+=ID (NL+\n-\t\t//\ttime+=TimeDef3)*)?) NL+\n+\t\t//\t'{' (NL+ time+=TimeDef1)* ( NL+ 'timeperiod_name' name+=ID (NL+ time+=TimeDef2)* & (NL+ 'otherelement' alias+=ID (NL+\n+\t\t//\ttime+=TimeDef3)*)?\n+\t\t//\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc1MTY1MQ==", "bodyText": "We preserve most newlines because they might be intentionally there. Might be annoying for the user if we remove the newlines inside his rules.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r527751651", "createdAt": "2020-11-20T15:03:55Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug348199TestLanguageGrammarAccess.java", "diffHunk": "@@ -259,8 +259,10 @@\n \t\t//Timeperiod:\n \t\t//\t{Timeperiod}\n \t\t//\t'define' 'timeperiod' ('1'\n-\t\t//\t'{' (NL+ time+=TimeDef1)* (NL+ 'timeperiod_name' name+=ID (NL+ time+=TimeDef2)* & (NL+ 'otherelement' alias+=ID (NL+\n-\t\t//\ttime+=TimeDef3)*)?) NL+\n+\t\t//\t'{' (NL+ time+=TimeDef1)* ( NL+ 'timeperiod_name' name+=ID (NL+ time+=TimeDef2)* & (NL+ 'otherelement' alias+=ID (NL+\n+\t\t//\ttime+=TimeDef3)*)?\n+\t\t//\t\t", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2Nzk5NQ=="}, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTUyMTU3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug377311TestLanguageGrammarAccess.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODozMTo0NVrOH0pmSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTowMjoyOFrOH3TWTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTU0Nw==", "bodyText": "@ArneDeutsch Another thing that is missing for hidden clauses: The space before the , is unexpected.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524969547", "createdAt": "2020-11-17T08:31:45Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug377311TestLanguageGrammarAccess.java", "diffHunk": "@@ -118,7 +118,7 @@ public ParserRule getRootRule() {\n \t\treturn getRootAccess().getRule();\n \t}\n \t\n-\t//Child hidden(WS, ID):\n+\t//Child hidden (WS , ID):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc1MDczMw==", "bodyText": "Should be fixed with eclipse/xtext-core#1489", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r527750733", "createdAt": "2020-11-20T15:02:28Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug377311TestLanguageGrammarAccess.java", "diffHunk": "@@ -118,7 +118,7 @@ public ParserRule getRootRule() {\n \t\treturn getRootAccess().getRule();\n \t}\n \t\n-\t//Child hidden(WS, ID):\n+\t//Child hidden (WS , ID):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTU0Nw=="}, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTUyMzQ3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug381381TestLanguageGrammarAccess.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODozMjoxMFrOH0pnVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzozNToxOFrOH_RJfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTgxMw==", "bodyText": "@ArneDeutsch  The space before the closing parentheses is unexpected.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524969813", "createdAt": "2020-11-17T08:32:10Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug381381TestLanguageGrammarAccess.java", "diffHunk": "@@ -66,18 +66,18 @@\n \t\tprivate final Keyword cREPLACEKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);\n \t\t\n \t\t//CopyFieldNameToVariableStmt:\n-\t\t//\t'FIELD-NAME-TO-VARIABLE' (',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n-\t\t//\t'REPLACE')?);\n+\t\t//\t'FIELD-NAME-TO-VARIABLE' ( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n+\t\t//\t'REPLACE')? );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc1MDY3Mw==", "bodyText": "Should be fixed with eclipse/xtext-core#1489", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r527750673", "createdAt": "2020-11-20T15:02:22Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug381381TestLanguageGrammarAccess.java", "diffHunk": "@@ -66,18 +66,18 @@\n \t\tprivate final Keyword cREPLACEKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);\n \t\t\n \t\t//CopyFieldNameToVariableStmt:\n-\t\t//\t'FIELD-NAME-TO-VARIABLE' (',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n-\t\t//\t'REPLACE')?);\n+\t\t//\t'FIELD-NAME-TO-VARIABLE' ( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n+\t\t//\t'REPLACE')? );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTgxMw=="}, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc2NDg2Nw==", "bodyText": "problem still seems to be there", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r527764867", "createdAt": "2020-11-20T15:24:07Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug381381TestLanguageGrammarAccess.java", "diffHunk": "@@ -66,18 +66,18 @@\n \t\tprivate final Keyword cREPLACEKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);\n \t\t\n \t\t//CopyFieldNameToVariableStmt:\n-\t\t//\t'FIELD-NAME-TO-VARIABLE' (',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n-\t\t//\t'REPLACE')?);\n+\t\t//\t'FIELD-NAME-TO-VARIABLE' ( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n+\t\t//\t'REPLACE')? );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTgxMw=="}, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUzNDMzMg==", "bodyText": "I do not really understand why the issue is still there. I have added a dedicated test case (JavaFormatterGrammarTest.unorderedGroups). It is succeeding, formatting is correct. But on the otehr hand the generated comment is clearly wrong ... it is not only the whitespace, there is a missing parantesis, too.\nOriginal Code: (notice the two openeing parentesis before the ','.\nCopyFieldNameToVariableStmt:\n  'FIELD-NAME-TO-VARIABLE' ((',' 'SCREEN' '=' '(' line=INT ',' column=INT ')') &\n                            (',' 'VAR' '=' name=ID) &\n                            (',' 'TYPE' '=' 'REPLACE')?);\n\nIn my test this is formatted to:\nCopyFieldNameToVariableStmt:\n\t'FIELD-NAME-TO-VARIABLE' ((',' 'SCREEN' '=' '(' line=INT ',' column=INT ')') &\n\t(',' 'VAR' '=' name=ID) &\n\t(',' 'TYPE' '=' 'REPLACE')?);\n\nBut the comment in the end looks like this:\n//CopyFieldNameToVariableStmt:\n//\t'FIELD-NAME-TO-VARIABLE' ( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n//\t'REPLACE')? );\n\nFor me it looks like a bug in the serializer, because of the missing parantesis ... am a bit clueless here ...", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r531534332", "createdAt": "2020-11-27T11:05:09Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug381381TestLanguageGrammarAccess.java", "diffHunk": "@@ -66,18 +66,18 @@\n \t\tprivate final Keyword cREPLACEKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);\n \t\t\n \t\t//CopyFieldNameToVariableStmt:\n-\t\t//\t'FIELD-NAME-TO-VARIABLE' (',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n-\t\t//\t'REPLACE')?);\n+\t\t//\t'FIELD-NAME-TO-VARIABLE' ( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n+\t\t//\t'REPLACE')? );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTgxMw=="}, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEwMzI5Mw==", "bodyText": "I created a ticket for this one: eclipse/xtext-core#1641", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r536103293", "createdAt": "2020-12-04T13:35:18Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug381381TestLanguageGrammarAccess.java", "diffHunk": "@@ -66,18 +66,18 @@\n \t\tprivate final Keyword cREPLACEKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);\n \t\t\n \t\t//CopyFieldNameToVariableStmt:\n-\t\t//\t'FIELD-NAME-TO-VARIABLE' (',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n-\t\t//\t'REPLACE')?);\n+\t\t//\t'FIELD-NAME-TO-VARIABLE' ( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n+\t\t//\t'REPLACE')? );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTgxMw=="}, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTUyNDU0OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug381381TestLanguageGrammarAccess.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODozMjozMFrOH0pn_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMTowNTozOFrOH66S_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTk4MA==", "bodyText": "@ArneDeutsch Also the space after the opening parentheses. Is something missing for unordered groups?", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524969980", "createdAt": "2020-11-17T08:32:30Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug381381TestLanguageGrammarAccess.java", "diffHunk": "@@ -66,18 +66,18 @@\n \t\tprivate final Keyword cREPLACEKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);\n \t\t\n \t\t//CopyFieldNameToVariableStmt:\n-\t\t//\t'FIELD-NAME-TO-VARIABLE' (',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n-\t\t//\t'REPLACE')?);\n+\t\t//\t'FIELD-NAME-TO-VARIABLE' ( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n+\t\t//\t'REPLACE')? );\n \t\t@Override public ParserRule getRule() { return rule; }\n \t\t\n-\t\t//'FIELD-NAME-TO-VARIABLE' (',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n-\t\t//'REPLACE')?)\n+\t\t//'FIELD-NAME-TO-VARIABLE' ( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n+\t\t//'REPLACE')? )\n \t\tpublic Group getGroup() { return cGroup; }\n \t\t\n \t\t//'FIELD-NAME-TO-VARIABLE'\n \t\tpublic Keyword getFIELDNAMETOVARIABLEKeyword_0() { return cFIELDNAMETOVARIABLEKeyword_0; }\n \t\t\n-\t\t//(',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '=' 'REPLACE')?)\n+\t\t//( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '=' 'REPLACE')? )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc1MDU4Mg==", "bodyText": "Should be fixed with eclipse/xtext-core#1489", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r527750582", "createdAt": "2020-11-20T15:02:13Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug381381TestLanguageGrammarAccess.java", "diffHunk": "@@ -66,18 +66,18 @@\n \t\tprivate final Keyword cREPLACEKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);\n \t\t\n \t\t//CopyFieldNameToVariableStmt:\n-\t\t//\t'FIELD-NAME-TO-VARIABLE' (',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n-\t\t//\t'REPLACE')?);\n+\t\t//\t'FIELD-NAME-TO-VARIABLE' ( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n+\t\t//\t'REPLACE')? );\n \t\t@Override public ParserRule getRule() { return rule; }\n \t\t\n-\t\t//'FIELD-NAME-TO-VARIABLE' (',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n-\t\t//'REPLACE')?)\n+\t\t//'FIELD-NAME-TO-VARIABLE' ( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n+\t\t//'REPLACE')? )\n \t\tpublic Group getGroup() { return cGroup; }\n \t\t\n \t\t//'FIELD-NAME-TO-VARIABLE'\n \t\tpublic Keyword getFIELDNAMETOVARIABLEKeyword_0() { return cFIELDNAMETOVARIABLEKeyword_0; }\n \t\t\n-\t\t//(',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '=' 'REPLACE')?)\n+\t\t//( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '=' 'REPLACE')? )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTk4MA=="}, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc2NTAzNA==", "bodyText": "problem still seems to be there", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r527765034", "createdAt": "2020-11-20T15:24:22Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug381381TestLanguageGrammarAccess.java", "diffHunk": "@@ -66,18 +66,18 @@\n \t\tprivate final Keyword cREPLACEKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);\n \t\t\n \t\t//CopyFieldNameToVariableStmt:\n-\t\t//\t'FIELD-NAME-TO-VARIABLE' (',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n-\t\t//\t'REPLACE')?);\n+\t\t//\t'FIELD-NAME-TO-VARIABLE' ( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n+\t\t//\t'REPLACE')? );\n \t\t@Override public ParserRule getRule() { return rule; }\n \t\t\n-\t\t//'FIELD-NAME-TO-VARIABLE' (',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n-\t\t//'REPLACE')?)\n+\t\t//'FIELD-NAME-TO-VARIABLE' ( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n+\t\t//'REPLACE')? )\n \t\tpublic Group getGroup() { return cGroup; }\n \t\t\n \t\t//'FIELD-NAME-TO-VARIABLE'\n \t\tpublic Keyword getFIELDNAMETOVARIABLEKeyword_0() { return cFIELDNAMETOVARIABLEKeyword_0; }\n \t\t\n-\t\t//(',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '=' 'REPLACE')?)\n+\t\t//( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '=' 'REPLACE')? )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTk4MA=="}, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUzNDU5MA==", "bodyText": "see above", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r531534590", "createdAt": "2020-11-27T11:05:38Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug381381TestLanguageGrammarAccess.java", "diffHunk": "@@ -66,18 +66,18 @@\n \t\tprivate final Keyword cREPLACEKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);\n \t\t\n \t\t//CopyFieldNameToVariableStmt:\n-\t\t//\t'FIELD-NAME-TO-VARIABLE' (',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n-\t\t//\t'REPLACE')?);\n+\t\t//\t'FIELD-NAME-TO-VARIABLE' ( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n+\t\t//\t'REPLACE')? );\n \t\t@Override public ParserRule getRule() { return rule; }\n \t\t\n-\t\t//'FIELD-NAME-TO-VARIABLE' (',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n-\t\t//'REPLACE')?)\n+\t\t//'FIELD-NAME-TO-VARIABLE' ( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '='\n+\t\t//'REPLACE')? )\n \t\tpublic Group getGroup() { return cGroup; }\n \t\t\n \t\t//'FIELD-NAME-TO-VARIABLE'\n \t\tpublic Keyword getFIELDNAMETOVARIABLEKeyword_0() { return cFIELDNAMETOVARIABLEKeyword_0; }\n \t\t\n-\t\t//(',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '=' 'REPLACE')?)\n+\t\t//( ',' 'SCREEN' '=' '(' line=INT ',' column=INT ')' & ',' 'VAR' '=' name=ID & (',' 'TYPE' '=' 'REPLACE')? )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTk4MA=="}, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTUzMzYyOnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/GH341TestLanguageGrammarAccess.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODozNDo1OFrOH0ptXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMTowNjozM1rOH66Utw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3MTM1Ng==", "bodyText": "@ArneDeutsch @cdietrich I'm not sure about that one. For wildcard fragments, I've a slight preference towards a space before the * wildcard. What do you think?", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524971356", "createdAt": "2020-11-17T08:34:58Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/GH341TestLanguageGrammarAccess.java", "diffHunk": "@@ -274,7 +274,7 @@\n \t\tprivate final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), \"org.eclipse.xtext.ui.tests.editor.contentassist.GH341TestLanguage.STREAM\");\n \t\tprivate final Keyword cStreamKeyword = (Keyword)rule.eContents().get(0);\n \t\t\n-\t\t//fragment STREAM *:\n+\t\t//fragment STREAM*:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUzNTAzMQ==", "bodyText": "Would not agree here ... looks ok for me.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r531535031", "createdAt": "2020-11-27T11:06:33Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/GH341TestLanguageGrammarAccess.java", "diffHunk": "@@ -274,7 +274,7 @@\n \t\tprivate final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), \"org.eclipse.xtext.ui.tests.editor.contentassist.GH341TestLanguage.STREAM\");\n \t\tprivate final Keyword cStreamKeyword = (Keyword)rule.eContents().get(0);\n \t\t\n-\t\t//fragment STREAM *:\n+\t\t//fragment STREAM*:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3MTM1Ng=="}, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTUzNjY2OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODozNTo0N1rOH0pvPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODozNTo0N1rOH0pvPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3MTgzOQ==", "bodyText": "There is something missing here: I think it should read RootStatement<Yield> returns Statement:", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524971839", "createdAt": "2020-11-17T08:35:47Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "diffHunk": "@@ -31,7 +31,7 @@\n \t\tprivate final RuleCall cLabelledStatementParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);\n \t\tprivate final RuleCall cExpressionStatementParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);\n \t\t\n-\t\t//RootStatement <Yield Statement:\n+\t\t//RootStatement <YieldStatement:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTUzOTE1OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODozNjoyNlrOH0pwug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODozNjoyNlrOH0pwug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3MjIxOA==", "bodyText": "@ArneDeutsch Missing formatting rule for parameterized rule calls? I'd expect a space after the , comma", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524972218", "createdAt": "2020-11-17T08:36:26Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "diffHunk": "@@ -61,22 +61,25 @@\n \t\t\n \t\t//FunctionDeclaration <Yield>:\n \t\t//\t=> ({FunctionDeclaration}\n-\t\t//\t-> FunctionImpl <Yield,Yield,Expression=false>) => ';'?;\n+\t\t//\t-> FunctionImpl<Yield,Yield,Expression=false>) => ';'?;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTU0MzM3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODozNzoyN1rOH0pzOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOTowNjo0NFrOH0q7jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3Mjg1Ng==", "bodyText": "@cdietrich What do you think about the space after the predicates => (..) and -> (..) - I've slight preference towards noSpace for that location.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524972856", "createdAt": "2020-11-17T08:37:27Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "diffHunk": "@@ -61,22 +61,25 @@\n \t\t\n \t\t//FunctionDeclaration <Yield>:\n \t\t//\t=> ({FunctionDeclaration}\n-\t\t//\t-> FunctionImpl <Yield,Yield,Expression=false>) => ';'?;\n+\t\t//\t-> FunctionImpl<Yield,Yield,Expression=false>) => ';'?;\n \t\t@Override public ParserRule getRule() { return rule; }\n \t\t\n-\t\t//=> ({FunctionDeclaration} -> FunctionImpl <Yield,Yield,Expression=false>) => ';'?\n+\t\t//=> ({FunctionDeclaration}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk5MTM3Mg==", "bodyText": "me too", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524991372", "createdAt": "2020-11-17T09:06:44Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "diffHunk": "@@ -61,22 +61,25 @@\n \t\t\n \t\t//FunctionDeclaration <Yield>:\n \t\t//\t=> ({FunctionDeclaration}\n-\t\t//\t-> FunctionImpl <Yield,Yield,Expression=false>) => ';'?;\n+\t\t//\t-> FunctionImpl<Yield,Yield,Expression=false>) => ';'?;\n \t\t@Override public ParserRule getRule() { return rule; }\n \t\t\n-\t\t//=> ({FunctionDeclaration} -> FunctionImpl <Yield,Yield,Expression=false>) => ';'?\n+\t\t//=> ({FunctionDeclaration}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3Mjg1Ng=="}, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTU0NjMwOnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODozODoxNlrOH0p1Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTowMDo0MlrOH3TR2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3MzMzMQ==", "bodyText": "@ArneDeutsch Missing formatting rule for the parameter declarations. There is a space missing after the ,", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524973331", "createdAt": "2020-11-17T08:38:16Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "diffHunk": "@@ -144,12 +147,13 @@\n \t\tprivate final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);\n \t\tprivate final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);\n \t\t\n-\t\t//fragment FunctionHeader <Yield, Generator> *:\n+\t\t//fragment FunctionHeader <Yield,Generator>*:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTU5NQ==", "bodyText": "Should be fixed with eclipse/xtext-core#1489", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r527749595", "createdAt": "2020-11-20T15:00:42Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "diffHunk": "@@ -144,12 +147,13 @@\n \t\tprivate final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);\n \t\tprivate final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);\n \t\t\n-\t\t//fragment FunctionHeader <Yield, Generator> *:\n+\t\t//fragment FunctionHeader <Yield,Generator>*:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3MzMzMQ=="}, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTU1MjQ3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODozOTo0NFrOH0p4uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTowMDozMlrOH3TRaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3NDI2Nw==", "bodyText": "@ArneDeutsch Unexpected spaces around the ! and for the angular brackets. < and >. Please also check the formatting rules for the boolean operators in argument lists. They should be surrounded by a space & and |", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524974267", "createdAt": "2020-11-17T08:39:44Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "diffHunk": "@@ -174,14 +178,14 @@\n \t\tprivate final Assignment cBodyAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);\n \t\tprivate final RuleCall cBodyBlockParserRuleCall_1_0_0 = (RuleCall)cBodyAssignment_1_0.eContents().get(0);\n \t\t\n-\t\t//fragment FunctionBody <Yield, Expression> *:\n-\t\t//\t<Expression> body=Block<Yield> | <!Expression> body=Block<Yield>?;\n+\t\t//fragment FunctionBody <Yield,Expression>*:\n+\t\t//\t< Expression > body=Block<Yield> | < ! Expression > body=Block<Yield>?;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTQ4MA==", "bodyText": "Should be fixed with eclipse/xtext-core#1489", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r527749480", "createdAt": "2020-11-20T15:00:32Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "diffHunk": "@@ -174,14 +178,14 @@\n \t\tprivate final Assignment cBodyAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);\n \t\tprivate final RuleCall cBodyBlockParserRuleCall_1_0_0 = (RuleCall)cBodyAssignment_1_0.eContents().get(0);\n \t\t\n-\t\t//fragment FunctionBody <Yield, Expression> *:\n-\t\t//\t<Expression> body=Block<Yield> | <!Expression> body=Block<Yield>?;\n+\t\t//fragment FunctionBody <Yield,Expression>*:\n+\t\t//\t< Expression > body=Block<Yield> | < ! Expression > body=Block<Yield>?;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3NDI2Nw=="}, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTU1NzgwOnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODo0MTowM1rOH0p75w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTowMDoyNFrOH3TRDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3NTA3OQ==", "bodyText": "@ArneDeutsch Missing formatting config for guard conditions?  There are unexpected spaces here inside the < Yield >", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r524975079", "createdAt": "2020-11-17T08:41:03Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "diffHunk": "@@ -591,37 +596,37 @@\n \t\tprivate final Assignment cRhsAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);\n \t\tprivate final RuleCall cRhsAssignmentExpressionParserRuleCall_1_1_1_0 = (RuleCall)cRhsAssignment_1_1_1.eContents().get(0);\n \t\t\n-\t\t//AssignmentExpression <In, Yield Expression:\n-\t\t//\t<Yield> YieldExpression<In> | RelationalExpression<In,Yield> (=> ({AssignmentExpression.lhs=current} op='=')\n+\t\t//AssignmentExpression <In,YieldExpression:\n+\t\t//\t< Yield > YieldExpression<In> | RelationalExpression<In,Yield> (=> ({AssignmentExpression . lhs= current} op='=')\n \t\t//\trhs=AssignmentExpression<In,Yield>)?;\n \t\t@Override public ParserRule getRule() { return rule; }\n \t\t\n-\t\t//<Yield> YieldExpression<In> | RelationalExpression<In,Yield> (=> ({AssignmentExpression.lhs=current} op='=')\n+\t\t//< Yield > YieldExpression<In> | RelationalExpression<In,Yield> (=> ({AssignmentExpression . lhs= current} op='=')\n \t\t//rhs=AssignmentExpression<In,Yield>)?\n \t\tpublic Alternatives getAlternatives() { return cAlternatives; }\n \t\t\n-\t\t//<Yield> YieldExpression<In>\n+\t\t//< Yield > YieldExpression<In>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 277}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTM4OQ==", "bodyText": "Should be fixed with eclipse/xtext-core#1489", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r527749389", "createdAt": "2020-11-20T15:00:24Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/ParameterizedExpressionsTestLanguageGrammarAccess.java", "diffHunk": "@@ -591,37 +596,37 @@\n \t\tprivate final Assignment cRhsAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);\n \t\tprivate final RuleCall cRhsAssignmentExpressionParserRuleCall_1_1_1_0 = (RuleCall)cRhsAssignment_1_1_1.eContents().get(0);\n \t\t\n-\t\t//AssignmentExpression <In, Yield Expression:\n-\t\t//\t<Yield> YieldExpression<In> | RelationalExpression<In,Yield> (=> ({AssignmentExpression.lhs=current} op='=')\n+\t\t//AssignmentExpression <In,YieldExpression:\n+\t\t//\t< Yield > YieldExpression<In> | RelationalExpression<In,Yield> (=> ({AssignmentExpression . lhs= current} op='=')\n \t\t//\trhs=AssignmentExpression<In,Yield>)?;\n \t\t@Override public ParserRule getRule() { return rule; }\n \t\t\n-\t\t//<Yield> YieldExpression<In> | RelationalExpression<In,Yield> (=> ({AssignmentExpression.lhs=current} op='=')\n+\t\t//< Yield > YieldExpression<In> | RelationalExpression<In,Yield> (=> ({AssignmentExpression . lhs= current} op='=')\n \t\t//rhs=AssignmentExpression<In,Yield>)?\n \t\tpublic Alternatives getAlternatives() { return cAlternatives; }\n \t\t\n-\t\t//<Yield> YieldExpression<In>\n+\t\t//< Yield > YieldExpression<In>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3NTA3OQ=="}, "originalCommit": {"oid": "e22d8f453836f7c50f702f9319ba1bcb8c1212bb"}, "originalPosition": 277}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDc1MTY3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.codetemplates/src-gen/org/eclipse/xtext/ui/codetemplates/services/CodetemplatesGrammarAccess.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODo1NDowMlrOH4D7ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzoyMzoxN1rOH_QtIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU0NjY2Ng==", "bodyText": "Weird formatting @ArneDeutsch", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r528546666", "createdAt": "2020-11-23T08:54:02Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.codetemplates/src-gen/org/eclipse/xtext/ui/codetemplates/services/CodetemplatesGrammarAccess.java", "diffHunk": "@@ -94,8 +95,8 @@\n \t\t//\tkeywordContext=STRING) body=TemplateBodyWithQuotes;\n \t\t@Override public ParserRule getRule() { return rule; }\n \t\t\n-\t\t//name=ValidID '(' id=ID ',' description=STRING ')' 'for' (context=[xtext::AbstractRule|ValidID] | keywordContext=STRING)\n-\t\t//body=TemplateBodyWithQuotes\n+\t\t//name=ValidID '(' id=ID ',' description=STRING ')' 'for' (context=[xtext::AbstractRule|ValidID] | keywordContext=STRING\n+\t\t//) body=TemplateBodyWithQuotes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "327beda80839d999a0e74e33cc2ad54287c9f29b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3ODYxNA==", "bodyText": "Ja, in der Tat. Habe es im Unit-Test versucht nachzustellen, da kommt aber raus was man erwarten w\u00fcrde ...", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r531578614", "createdAt": "2020-11-27T12:38:24Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.ui.codetemplates/src-gen/org/eclipse/xtext/ui/codetemplates/services/CodetemplatesGrammarAccess.java", "diffHunk": "@@ -94,8 +95,8 @@\n \t\t//\tkeywordContext=STRING) body=TemplateBodyWithQuotes;\n \t\t@Override public ParserRule getRule() { return rule; }\n \t\t\n-\t\t//name=ValidID '(' id=ID ',' description=STRING ')' 'for' (context=[xtext::AbstractRule|ValidID] | keywordContext=STRING)\n-\t\t//body=TemplateBodyWithQuotes\n+\t\t//name=ValidID '(' id=ID ',' description=STRING ')' 'for' (context=[xtext::AbstractRule|ValidID] | keywordContext=STRING\n+\t\t//) body=TemplateBodyWithQuotes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU0NjY2Ng=="}, "originalCommit": {"oid": "327beda80839d999a0e74e33cc2ad54287c9f29b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA5NjAzNQ==", "bodyText": "Ich kann mir nur vorstellen, dass da gerade so die maximale Zeichenanzahl erreicht ist und der automatisch umbricht. Wenn ich die Zeichen z\u00e4hle komme ich auf 117 ... bissl Whitespace davor ...", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r536096035", "createdAt": "2020-12-04T13:23:17Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.ui.codetemplates/src-gen/org/eclipse/xtext/ui/codetemplates/services/CodetemplatesGrammarAccess.java", "diffHunk": "@@ -94,8 +95,8 @@\n \t\t//\tkeywordContext=STRING) body=TemplateBodyWithQuotes;\n \t\t@Override public ParserRule getRule() { return rule; }\n \t\t\n-\t\t//name=ValidID '(' id=ID ',' description=STRING ')' 'for' (context=[xtext::AbstractRule|ValidID] | keywordContext=STRING)\n-\t\t//body=TemplateBodyWithQuotes\n+\t\t//name=ValidID '(' id=ID ',' description=STRING ')' 'for' (context=[xtext::AbstractRule|ValidID] | keywordContext=STRING\n+\t\t//) body=TemplateBodyWithQuotes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU0NjY2Ng=="}, "originalCommit": {"oid": "327beda80839d999a0e74e33cc2ad54287c9f29b"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDc1NDMwOnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug287941TestLanguageGrammarAccess.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODo1NDo0NVrOH4D8_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzoyODoxNlrOH_Q5BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU0NzA2OA==", "bodyText": "Still an unexpected space after the assignment op @ArneDeutsch", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r528547068", "createdAt": "2020-11-23T08:54:45Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug287941TestLanguageGrammarAccess.java", "diffHunk": "@@ -411,19 +412,19 @@\n \t\tprivate final RuleCall cEntriesAndWhereEntryParserRuleCall_1_1_1_0 = (RuleCall)cEntriesAssignment_1_1_1.eContents().get(0);\n \t\t\n \t\t//WhereEntry:\n-\t\t//\tAndWhereEntry ({OrWhereEntry.entries+=current} (\"or\" entries+=AndWhereEntry)+)?;\n+\t\t//\tAndWhereEntry ({OrWhereEntry.entries+= current} (\"or\" entries+=AndWhereEntry)+)?;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "327beda80839d999a0e74e33cc2ad54287c9f29b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3ODgxNQ==", "bodyText": "Created a unit test, but there it works as expected ...", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r531578815", "createdAt": "2020-11-27T12:38:48Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug287941TestLanguageGrammarAccess.java", "diffHunk": "@@ -411,19 +412,19 @@\n \t\tprivate final RuleCall cEntriesAndWhereEntryParserRuleCall_1_1_1_0 = (RuleCall)cEntriesAssignment_1_1_1.eContents().get(0);\n \t\t\n \t\t//WhereEntry:\n-\t\t//\tAndWhereEntry ({OrWhereEntry.entries+=current} (\"or\" entries+=AndWhereEntry)+)?;\n+\t\t//\tAndWhereEntry ({OrWhereEntry.entries+= current} (\"or\" entries+=AndWhereEntry)+)?;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU0NzA2OA=="}, "originalCommit": {"oid": "327beda80839d999a0e74e33cc2ad54287c9f29b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU4MDcwNg==", "bodyText": "when i format\nAndWhereEntry returns WhereEntry:\n\tConcreteWhereEntry ({AndWhereEntry.entries += current}\n\t(\"and\" entries+=ConcreteWhereEntry)+)?;\n\nspaces dont get removed", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r531580706", "createdAt": "2020-11-27T12:42:53Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug287941TestLanguageGrammarAccess.java", "diffHunk": "@@ -411,19 +412,19 @@\n \t\tprivate final RuleCall cEntriesAndWhereEntryParserRuleCall_1_1_1_0 = (RuleCall)cEntriesAssignment_1_1_1.eContents().get(0);\n \t\t\n \t\t//WhereEntry:\n-\t\t//\tAndWhereEntry ({OrWhereEntry.entries+=current} (\"or\" entries+=AndWhereEntry)+)?;\n+\t\t//\tAndWhereEntry ({OrWhereEntry.entries+= current} (\"or\" entries+=AndWhereEntry)+)?;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU0NzA2OA=="}, "originalCommit": {"oid": "327beda80839d999a0e74e33cc2ad54287c9f29b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA5OTA3Nw==", "bodyText": "Will be fixed with next commit. Only formatted \"=\" but missed \"+=\".", "url": "https://github.com/eclipse/xtext-eclipse/pull/1586#discussion_r536099077", "createdAt": "2020-12-04T13:28:16Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.ui.tests/src-gen/org/eclipse/xtext/ui/tests/editor/contentassist/services/Bug287941TestLanguageGrammarAccess.java", "diffHunk": "@@ -411,19 +412,19 @@\n \t\tprivate final RuleCall cEntriesAndWhereEntryParserRuleCall_1_1_1_0 = (RuleCall)cEntriesAssignment_1_1_1.eContents().get(0);\n \t\t\n \t\t//WhereEntry:\n-\t\t//\tAndWhereEntry ({OrWhereEntry.entries+=current} (\"or\" entries+=AndWhereEntry)+)?;\n+\t\t//\tAndWhereEntry ({OrWhereEntry.entries+= current} (\"or\" entries+=AndWhereEntry)+)?;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU0NzA2OA=="}, "originalCommit": {"oid": "327beda80839d999a0e74e33cc2ad54287c9f29b"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 788, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}