{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1Mzk4MjQz", "number": 1507, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNzozNjo0MFrOEbcQoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNzo0MTozMFrOEbcXRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MjEwMDE3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/quickfix/XtextGrammarQuickfixTest.xtend", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNzozNjo0MFrOHFX-KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDo0MDozMlrOHGSMBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM5NzY3Mw==", "bodyText": "Hmm a terminal fragment does not make much sense here, but I prefer to adjust this in a subsequent step to move this change forward. What do you think?", "url": "https://github.com/eclipse/xtext-eclipse/pull/1507#discussion_r475397673", "createdAt": "2020-08-24T07:36:40Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/quickfix/XtextGrammarQuickfixTest.xtend", "diffHunk": "@@ -24,27 +24,156 @@ import static org.eclipse.xtext.xtext.XtextConfigurableIssueCodes.SPACES_IN_KEYW\n @RunWith(XtextRunner)\n @InjectWith(XtextUiInjectorProvider)\n class XtextGrammarQuickfixTest extends AbstractQuickfixTest {\n-\n-\t@Test def test_fix_missing_rule() {\n+\t\n+\t@Test def test_convert_terminal_fragment_to_terminal_rule() {\n+\t\t'''\n+\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\n+\t\t\tModel hidden(ABC):\n+\t\t\t\ta = ID;\n+\t\t\t\n+\t\t\tterminal fragment ABC:\n+\t\t\t\t'a';\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.InvalidHiddenTokenFragment\",\n+\t\t\tnew Quickfix(\"Convert terminal fragment to terminal rule\", \"Convert terminal fragment to terminal rule\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel hidden(ABC):\n+\t\t\t\t\ta = ID;\n+\t\t\t\t\n+\t\t\t\tterminal ABC:\n+\t\t\t\t\t'a';\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Remove hidden token definition\", \"Remove hidden token definition\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel hidden():\n+\t\t\t\t\ta = ID;\n+\t\t\t\t\n+\t\t\t\tterminal fragment ABC:\n+\t\t\t\t\t'a';\n+\t\t\t''')\n+\t\t);\n+\t}\n+\t\n+\t@Test def test_convert_terminal_fragment_to_terminal_rule_01() {\n \t\t'''\n \t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n \t\t\t\n \t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n \t\t\t\n \t\t\tModel:\n-\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\ta = ABC;\n+\t\t\t\n+\t\t\tterminal fragment ABC:\n+\t\t\t\t'a';\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.InvalidTerminalFragmentRuleReference\",\n+\t\t\tnew Quickfix(\"Convert terminal fragment to terminal rule\", \"Convert terminal fragment to terminal rule\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\ta = ABC;\n+\t\t\t\t\n+\t\t\t\tterminal ABC:\n+\t\t\t\t\t'a';\n+\t\t\t''')\n+\t\t);\n+\t}\n+\n+\t@Test def test_fix_invalid_hidden_token() {\n+\t\t'''\n+\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\n+\t\t\tModel hidden(AnotherModel):\n+\t\t\t\ta = ID;\n+\t\t\t\n+\t\t\tAnotherModel:\n+\t\t\t\tb = ID;\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.InvalidHiddenToken\",\n+\t\t\tnew Quickfix(\"Remove hidden token definition\", \"Remove hidden token definition\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel hidden():\n+\t\t\t\t\ta = ID;\n+\t\t\t\t\n+\t\t\t\tAnotherModel:\n+\t\t\t\t\tb = ID;\n+\t\t\t''')\n+\t\t);\n+\t}\n+\n+\t@Test def test_fix_missing_rule() {\n \t\t'''\n-\t\t.testQuickfixesOn(\"org.eclipse.xtext.grammar.UnresolvedRule\", new Quickfix(\"Create rule 'Greeting'\", \"Create rule 'Greeting'\", '''\n \t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n \t\t\t\n \t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n \t\t\t\n \t\t\tModel:\n \t\t\t\tgreetings+=Greeting*;\n-\t\t\t\n-\t\t\tGreeting:\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.UnresolvedRule\",\n+\t\t\tnew Quickfix(\"Create rule 'Greeting'\", \"Create rule 'Greeting'\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\t\n+\t\t\t\tGreeting:\n+\t\t\t\t\t\n+\t\t\t\t;\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Create enum rule 'Greeting'\", \"Create enum rule 'Greeting'\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\t\n+\t\t\t\tenum Greeting:\n+\t\t\t\t\t\n+\t\t\t\t;\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Create terminal 'Greeting'\", \"Create terminal 'Greeting'\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\t\n+\t\t\t\tterminal Greeting:\n+\t\t\t\t\t\n+\t\t\t\t;\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Create terminal fragment 'Greeting'\", \"Create terminal fragment 'Greeting'\", '''", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7c49672f79b79497fd5fa2f6a819bfb9be5b4a9"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU4ODEwOQ==", "bodyText": "@szarnekow Sorry, I do not understand \"but I prefer to adjust this in a subsequent step to move this change forward\". Could you please clarify.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1507#discussion_r475588109", "createdAt": "2020-08-24T13:10:19Z", "author": {"login": "nbhusare"}, "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/quickfix/XtextGrammarQuickfixTest.xtend", "diffHunk": "@@ -24,27 +24,156 @@ import static org.eclipse.xtext.xtext.XtextConfigurableIssueCodes.SPACES_IN_KEYW\n @RunWith(XtextRunner)\n @InjectWith(XtextUiInjectorProvider)\n class XtextGrammarQuickfixTest extends AbstractQuickfixTest {\n-\n-\t@Test def test_fix_missing_rule() {\n+\t\n+\t@Test def test_convert_terminal_fragment_to_terminal_rule() {\n+\t\t'''\n+\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\n+\t\t\tModel hidden(ABC):\n+\t\t\t\ta = ID;\n+\t\t\t\n+\t\t\tterminal fragment ABC:\n+\t\t\t\t'a';\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.InvalidHiddenTokenFragment\",\n+\t\t\tnew Quickfix(\"Convert terminal fragment to terminal rule\", \"Convert terminal fragment to terminal rule\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel hidden(ABC):\n+\t\t\t\t\ta = ID;\n+\t\t\t\t\n+\t\t\t\tterminal ABC:\n+\t\t\t\t\t'a';\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Remove hidden token definition\", \"Remove hidden token definition\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel hidden():\n+\t\t\t\t\ta = ID;\n+\t\t\t\t\n+\t\t\t\tterminal fragment ABC:\n+\t\t\t\t\t'a';\n+\t\t\t''')\n+\t\t);\n+\t}\n+\t\n+\t@Test def test_convert_terminal_fragment_to_terminal_rule_01() {\n \t\t'''\n \t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n \t\t\t\n \t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n \t\t\t\n \t\t\tModel:\n-\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\ta = ABC;\n+\t\t\t\n+\t\t\tterminal fragment ABC:\n+\t\t\t\t'a';\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.InvalidTerminalFragmentRuleReference\",\n+\t\t\tnew Quickfix(\"Convert terminal fragment to terminal rule\", \"Convert terminal fragment to terminal rule\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\ta = ABC;\n+\t\t\t\t\n+\t\t\t\tterminal ABC:\n+\t\t\t\t\t'a';\n+\t\t\t''')\n+\t\t);\n+\t}\n+\n+\t@Test def test_fix_invalid_hidden_token() {\n+\t\t'''\n+\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\n+\t\t\tModel hidden(AnotherModel):\n+\t\t\t\ta = ID;\n+\t\t\t\n+\t\t\tAnotherModel:\n+\t\t\t\tb = ID;\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.InvalidHiddenToken\",\n+\t\t\tnew Quickfix(\"Remove hidden token definition\", \"Remove hidden token definition\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel hidden():\n+\t\t\t\t\ta = ID;\n+\t\t\t\t\n+\t\t\t\tAnotherModel:\n+\t\t\t\t\tb = ID;\n+\t\t\t''')\n+\t\t);\n+\t}\n+\n+\t@Test def test_fix_missing_rule() {\n \t\t'''\n-\t\t.testQuickfixesOn(\"org.eclipse.xtext.grammar.UnresolvedRule\", new Quickfix(\"Create rule 'Greeting'\", \"Create rule 'Greeting'\", '''\n \t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n \t\t\t\n \t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n \t\t\t\n \t\t\tModel:\n \t\t\t\tgreetings+=Greeting*;\n-\t\t\t\n-\t\t\tGreeting:\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.UnresolvedRule\",\n+\t\t\tnew Quickfix(\"Create rule 'Greeting'\", \"Create rule 'Greeting'\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\t\n+\t\t\t\tGreeting:\n+\t\t\t\t\t\n+\t\t\t\t;\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Create enum rule 'Greeting'\", \"Create enum rule 'Greeting'\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\t\n+\t\t\t\tenum Greeting:\n+\t\t\t\t\t\n+\t\t\t\t;\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Create terminal 'Greeting'\", \"Create terminal 'Greeting'\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\t\n+\t\t\t\tterminal Greeting:\n+\t\t\t\t\t\n+\t\t\t\t;\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Create terminal fragment 'Greeting'\", \"Create terminal fragment 'Greeting'\", '''", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM5NzY3Mw=="}, "originalCommit": {"oid": "f7c49672f79b79497fd5fa2f6a819bfb9be5b4a9"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU5MjE4Ng==", "bodyText": "I'd like to merge this change as-is but create a follow-up task to avoid the quickfix to create a terminal fragment where the fragment usage would be illegal.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1507#discussion_r475592186", "createdAt": "2020-08-24T13:17:12Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/quickfix/XtextGrammarQuickfixTest.xtend", "diffHunk": "@@ -24,27 +24,156 @@ import static org.eclipse.xtext.xtext.XtextConfigurableIssueCodes.SPACES_IN_KEYW\n @RunWith(XtextRunner)\n @InjectWith(XtextUiInjectorProvider)\n class XtextGrammarQuickfixTest extends AbstractQuickfixTest {\n-\n-\t@Test def test_fix_missing_rule() {\n+\t\n+\t@Test def test_convert_terminal_fragment_to_terminal_rule() {\n+\t\t'''\n+\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\n+\t\t\tModel hidden(ABC):\n+\t\t\t\ta = ID;\n+\t\t\t\n+\t\t\tterminal fragment ABC:\n+\t\t\t\t'a';\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.InvalidHiddenTokenFragment\",\n+\t\t\tnew Quickfix(\"Convert terminal fragment to terminal rule\", \"Convert terminal fragment to terminal rule\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel hidden(ABC):\n+\t\t\t\t\ta = ID;\n+\t\t\t\t\n+\t\t\t\tterminal ABC:\n+\t\t\t\t\t'a';\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Remove hidden token definition\", \"Remove hidden token definition\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel hidden():\n+\t\t\t\t\ta = ID;\n+\t\t\t\t\n+\t\t\t\tterminal fragment ABC:\n+\t\t\t\t\t'a';\n+\t\t\t''')\n+\t\t);\n+\t}\n+\t\n+\t@Test def test_convert_terminal_fragment_to_terminal_rule_01() {\n \t\t'''\n \t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n \t\t\t\n \t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n \t\t\t\n \t\t\tModel:\n-\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\ta = ABC;\n+\t\t\t\n+\t\t\tterminal fragment ABC:\n+\t\t\t\t'a';\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.InvalidTerminalFragmentRuleReference\",\n+\t\t\tnew Quickfix(\"Convert terminal fragment to terminal rule\", \"Convert terminal fragment to terminal rule\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\ta = ABC;\n+\t\t\t\t\n+\t\t\t\tterminal ABC:\n+\t\t\t\t\t'a';\n+\t\t\t''')\n+\t\t);\n+\t}\n+\n+\t@Test def test_fix_invalid_hidden_token() {\n+\t\t'''\n+\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\n+\t\t\tModel hidden(AnotherModel):\n+\t\t\t\ta = ID;\n+\t\t\t\n+\t\t\tAnotherModel:\n+\t\t\t\tb = ID;\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.InvalidHiddenToken\",\n+\t\t\tnew Quickfix(\"Remove hidden token definition\", \"Remove hidden token definition\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel hidden():\n+\t\t\t\t\ta = ID;\n+\t\t\t\t\n+\t\t\t\tAnotherModel:\n+\t\t\t\t\tb = ID;\n+\t\t\t''')\n+\t\t);\n+\t}\n+\n+\t@Test def test_fix_missing_rule() {\n \t\t'''\n-\t\t.testQuickfixesOn(\"org.eclipse.xtext.grammar.UnresolvedRule\", new Quickfix(\"Create rule 'Greeting'\", \"Create rule 'Greeting'\", '''\n \t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n \t\t\t\n \t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n \t\t\t\n \t\t\tModel:\n \t\t\t\tgreetings+=Greeting*;\n-\t\t\t\n-\t\t\tGreeting:\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.UnresolvedRule\",\n+\t\t\tnew Quickfix(\"Create rule 'Greeting'\", \"Create rule 'Greeting'\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\t\n+\t\t\t\tGreeting:\n+\t\t\t\t\t\n+\t\t\t\t;\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Create enum rule 'Greeting'\", \"Create enum rule 'Greeting'\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\t\n+\t\t\t\tenum Greeting:\n+\t\t\t\t\t\n+\t\t\t\t;\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Create terminal 'Greeting'\", \"Create terminal 'Greeting'\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\t\n+\t\t\t\tterminal Greeting:\n+\t\t\t\t\t\n+\t\t\t\t;\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Create terminal fragment 'Greeting'\", \"Create terminal fragment 'Greeting'\", '''", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM5NzY3Mw=="}, "originalCommit": {"oid": "f7c49672f79b79497fd5fa2f6a819bfb9be5b4a9"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1MTQ5NQ==", "bodyText": "@szarnekow Tx for clarifying. @cdietrich Would you mind merging the PR if you are ok with it. Tx.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1507#discussion_r476351495", "createdAt": "2020-08-25T10:40:32Z", "author": {"login": "nbhusare"}, "path": "org.eclipse.xtext.xtext.ui.tests/src/org/eclipse/xtext/xtext/ui/editor/quickfix/XtextGrammarQuickfixTest.xtend", "diffHunk": "@@ -24,27 +24,156 @@ import static org.eclipse.xtext.xtext.XtextConfigurableIssueCodes.SPACES_IN_KEYW\n @RunWith(XtextRunner)\n @InjectWith(XtextUiInjectorProvider)\n class XtextGrammarQuickfixTest extends AbstractQuickfixTest {\n-\n-\t@Test def test_fix_missing_rule() {\n+\t\n+\t@Test def test_convert_terminal_fragment_to_terminal_rule() {\n+\t\t'''\n+\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\n+\t\t\tModel hidden(ABC):\n+\t\t\t\ta = ID;\n+\t\t\t\n+\t\t\tterminal fragment ABC:\n+\t\t\t\t'a';\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.InvalidHiddenTokenFragment\",\n+\t\t\tnew Quickfix(\"Convert terminal fragment to terminal rule\", \"Convert terminal fragment to terminal rule\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel hidden(ABC):\n+\t\t\t\t\ta = ID;\n+\t\t\t\t\n+\t\t\t\tterminal ABC:\n+\t\t\t\t\t'a';\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Remove hidden token definition\", \"Remove hidden token definition\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel hidden():\n+\t\t\t\t\ta = ID;\n+\t\t\t\t\n+\t\t\t\tterminal fragment ABC:\n+\t\t\t\t\t'a';\n+\t\t\t''')\n+\t\t);\n+\t}\n+\t\n+\t@Test def test_convert_terminal_fragment_to_terminal_rule_01() {\n \t\t'''\n \t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n \t\t\t\n \t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n \t\t\t\n \t\t\tModel:\n-\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\ta = ABC;\n+\t\t\t\n+\t\t\tterminal fragment ABC:\n+\t\t\t\t'a';\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.InvalidTerminalFragmentRuleReference\",\n+\t\t\tnew Quickfix(\"Convert terminal fragment to terminal rule\", \"Convert terminal fragment to terminal rule\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\ta = ABC;\n+\t\t\t\t\n+\t\t\t\tterminal ABC:\n+\t\t\t\t\t'a';\n+\t\t\t''')\n+\t\t);\n+\t}\n+\n+\t@Test def test_fix_invalid_hidden_token() {\n+\t\t'''\n+\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\n+\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\n+\t\t\tModel hidden(AnotherModel):\n+\t\t\t\ta = ID;\n+\t\t\t\n+\t\t\tAnotherModel:\n+\t\t\t\tb = ID;\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.InvalidHiddenToken\",\n+\t\t\tnew Quickfix(\"Remove hidden token definition\", \"Remove hidden token definition\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel hidden():\n+\t\t\t\t\ta = ID;\n+\t\t\t\t\n+\t\t\t\tAnotherModel:\n+\t\t\t\t\tb = ID;\n+\t\t\t''')\n+\t\t);\n+\t}\n+\n+\t@Test def test_fix_missing_rule() {\n \t\t'''\n-\t\t.testQuickfixesOn(\"org.eclipse.xtext.grammar.UnresolvedRule\", new Quickfix(\"Create rule 'Greeting'\", \"Create rule 'Greeting'\", '''\n \t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n \t\t\t\n \t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n \t\t\t\n \t\t\tModel:\n \t\t\t\tgreetings+=Greeting*;\n-\t\t\t\n-\t\t\tGreeting:\n+\t\t'''.testQuickfixesOn(\n+\t\t\t\"org.eclipse.xtext.grammar.UnresolvedRule\",\n+\t\t\tnew Quickfix(\"Create rule 'Greeting'\", \"Create rule 'Greeting'\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\t\n+\t\t\t\tGreeting:\n+\t\t\t\t\t\n+\t\t\t\t;\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Create enum rule 'Greeting'\", \"Create enum rule 'Greeting'\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\t\n+\t\t\t\tenum Greeting:\n+\t\t\t\t\t\n+\t\t\t\t;\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Create terminal 'Greeting'\", \"Create terminal 'Greeting'\", '''\n+\t\t\t\tgrammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals\n+\t\t\t\t\n+\t\t\t\tgenerate myDsl \"http://www.xtext.org/example/mydsl/MyDsl\"\n+\t\t\t\t\n+\t\t\t\tModel:\n+\t\t\t\t\tgreetings+=Greeting*;\n+\t\t\t\t\n+\t\t\t\tterminal Greeting:\n+\t\t\t\t\t\n+\t\t\t\t;\n+\t\t\t'''),\n+\t\t\tnew Quickfix(\"Create terminal fragment 'Greeting'\", \"Create terminal fragment 'Greeting'\", '''", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM5NzY3Mw=="}, "originalCommit": {"oid": "f7c49672f79b79497fd5fa2f6a819bfb9be5b4a9"}, "originalPosition": 149}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MjExNzE2OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.xtext.ui/src/org/eclipse/xtext/xtext/ui/editor/quickfix/XtextGrammarQuickfixProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNzo0MTozMFrOHFYH0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNzo0ODo0MVrOHFYXSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQwMDE0Ng==", "bodyText": "I'm aware that this is code has been like this for ages: If we figure that we should have another round on this, it could be worthwhile to use the org.eclipse.xtext.formatting.IIndentationInformation instead of the hardcoded \\t (tab) character", "url": "https://github.com/eclipse/xtext-eclipse/pull/1507#discussion_r475400146", "createdAt": "2020-08-24T07:41:30Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.ui/src/org/eclipse/xtext/xtext/ui/editor/quickfix/XtextGrammarQuickfixProvider.java", "diffHunk": "@@ -687,17 +709,14 @@ public void fixInvalidHiddenToken(Issue issue, IssueResolutionAcceptor acceptor)\n \t\t\t\t});\n \t}\n \n-\tprivate ISemanticModification createNewRule(String ruleName, boolean isFragment) {\n+\tprivate ISemanticModification createNewRule(String ruleName, String ruleType) {\n \t\treturn (element, context) -> {\n \t\t\tAbstractRule abstractRule = EcoreUtil2.getContainerOfType(element, AbstractRule.class);\n \t\t\tICompositeNode node = NodeModelUtils.getNode(abstractRule);\n \t\t\tString nl = context.getXtextDocument().getLineDelimiter(0);\n \t\t\tStringBuilder builder = new StringBuilder(nl + nl);\n-\t\t\tif (abstractRule instanceof TerminalRule) {\n-\t\t\t\tbuilder.append(\"terminal \");\n-\t\t\t\tif (isFragment) {\n-\t\t\t\t\tbuilder.append(\"fragment \");\n-\t\t\t\t}\n+\t\t\tif (ruleType != null) {\n+\t\t\t\tbuilder.append(ruleType);\n \t\t\t}\n \t\t\tString newRule = builder.append(ruleName).append(\":\" + nl + \"\\t\" + nl + \";\").toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7c49672f79b79497fd5fa2f6a819bfb9be5b4a9"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQwNDEwNg==", "bodyText": "would also handle this in a follow up", "url": "https://github.com/eclipse/xtext-eclipse/pull/1507#discussion_r475404106", "createdAt": "2020-08-24T07:48:41Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.xtext.ui/src/org/eclipse/xtext/xtext/ui/editor/quickfix/XtextGrammarQuickfixProvider.java", "diffHunk": "@@ -687,17 +709,14 @@ public void fixInvalidHiddenToken(Issue issue, IssueResolutionAcceptor acceptor)\n \t\t\t\t});\n \t}\n \n-\tprivate ISemanticModification createNewRule(String ruleName, boolean isFragment) {\n+\tprivate ISemanticModification createNewRule(String ruleName, String ruleType) {\n \t\treturn (element, context) -> {\n \t\t\tAbstractRule abstractRule = EcoreUtil2.getContainerOfType(element, AbstractRule.class);\n \t\t\tICompositeNode node = NodeModelUtils.getNode(abstractRule);\n \t\t\tString nl = context.getXtextDocument().getLineDelimiter(0);\n \t\t\tStringBuilder builder = new StringBuilder(nl + nl);\n-\t\t\tif (abstractRule instanceof TerminalRule) {\n-\t\t\t\tbuilder.append(\"terminal \");\n-\t\t\t\tif (isFragment) {\n-\t\t\t\t\tbuilder.append(\"fragment \");\n-\t\t\t\t}\n+\t\t\tif (ruleType != null) {\n+\t\t\t\tbuilder.append(ruleType);\n \t\t\t}\n \t\t\tString newRule = builder.append(ruleName).append(\":\" + nl + \"\\t\" + nl + \";\").toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQwMDE0Ng=="}, "originalCommit": {"oid": "f7c49672f79b79497fd5fa2f6a819bfb9be5b4a9"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 747, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}