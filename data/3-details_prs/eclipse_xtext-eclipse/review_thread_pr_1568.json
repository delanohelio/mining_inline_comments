{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4ODgyNjg1", "number": 1568, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNjowMDowOFrOExwmyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNjowMDowOFrOExwmyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjEyMDQxOnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.ui/src/org/eclipse/xtext/ui/wizard/template/WorkspaceFileGenerator.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNjowMDowOFrOHoBuuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwODowMjowNVrOHoEMjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczMzQzMw==", "bodyText": "as the api is still beta, should we change it to throws Exception @ArneDeutsch ?\nthen we would not need these", "url": "https://github.com/eclipse/xtext-eclipse/pull/1568#discussion_r511733433", "createdAt": "2020-10-26T06:00:08Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.ui/src/org/eclipse/xtext/ui/wizard/template/WorkspaceFileGenerator.java", "diffHunk": "@@ -49,12 +54,15 @@ protected void execute(IProgressMonitor monitor) throws CoreException, Invocatio\n \t\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();\n \t\t\tfor (Map.Entry<String, CharSequence> fileEntry : files.entrySet()) {\n \t\t\t\tIFile file = workspace.getRoot().getFile(new Path(fileEntry.getKey()));\n-\t\t\t\tfile.create(new StringInputStream(fileEntry.getValue().toString()), true, subMonitor);\n+\t\t\t\tfile.create(new StringInputStream(fileEntry.getValue().toString(), file.getCharset()), true, subMonitor);\n \t\t\t\tif (firstFile == null) {\n \t\t\t\t\tfirstFile = file;\n \t\t\t\t}\n \t\t\t\tsubMonitor.worked(1);\n \t\t\t}\n+\t\t} catch (UnsupportedEncodingException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99b1ee897df16697f29b1f1074907453864b5ac3"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczNTUzMg==", "bodyText": "I wouldn't do that. As a user I can't set the encoding so what should I do if the encoding is not supported. Throwing a Core exception should be enough.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1568#discussion_r511735532", "createdAt": "2020-10-26T06:09:07Z", "author": {"login": "hannesN"}, "path": "org.eclipse.xtext.ui/src/org/eclipse/xtext/ui/wizard/template/WorkspaceFileGenerator.java", "diffHunk": "@@ -49,12 +54,15 @@ protected void execute(IProgressMonitor monitor) throws CoreException, Invocatio\n \t\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();\n \t\t\tfor (Map.Entry<String, CharSequence> fileEntry : files.entrySet()) {\n \t\t\t\tIFile file = workspace.getRoot().getFile(new Path(fileEntry.getKey()));\n-\t\t\t\tfile.create(new StringInputStream(fileEntry.getValue().toString()), true, subMonitor);\n+\t\t\t\tfile.create(new StringInputStream(fileEntry.getValue().toString(), file.getCharset()), true, subMonitor);\n \t\t\t\tif (firstFile == null) {\n \t\t\t\t\tfirstFile = file;\n \t\t\t\t}\n \t\t\t\tsubMonitor.worked(1);\n \t\t\t}\n+\t\t} catch (UnsupportedEncodingException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczMzQzMw=="}, "originalCommit": {"oid": "99b1ee897df16697f29b1f1074907453864b5ac3"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczNjA4NA==", "bodyText": "well. this is about geneneral exception handling.\nthrows CoreException, InvocationTargetException, InterruptedException {\n=> replace this with \"throws Exception\" as we dont care about the other exceptons neither", "url": "https://github.com/eclipse/xtext-eclipse/pull/1568#discussion_r511736084", "createdAt": "2020-10-26T06:11:11Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.ui/src/org/eclipse/xtext/ui/wizard/template/WorkspaceFileGenerator.java", "diffHunk": "@@ -49,12 +54,15 @@ protected void execute(IProgressMonitor monitor) throws CoreException, Invocatio\n \t\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();\n \t\t\tfor (Map.Entry<String, CharSequence> fileEntry : files.entrySet()) {\n \t\t\t\tIFile file = workspace.getRoot().getFile(new Path(fileEntry.getKey()));\n-\t\t\t\tfile.create(new StringInputStream(fileEntry.getValue().toString()), true, subMonitor);\n+\t\t\t\tfile.create(new StringInputStream(fileEntry.getValue().toString(), file.getCharset()), true, subMonitor);\n \t\t\t\tif (firstFile == null) {\n \t\t\t\t\tfirstFile = file;\n \t\t\t\t}\n \t\t\t\tsubMonitor.worked(1);\n \t\t\t}\n+\t\t} catch (UnsupportedEncodingException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczMzQzMw=="}, "originalCommit": {"oid": "99b1ee897df16697f29b1f1074907453864b5ac3"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc0NDE4OQ==", "bodyText": "No because then please only throw RuntimeExceptions :-)\nSeriously, I would encapsulate the incovationTargetException and InterruptedException as well in an core Exception and only throw this, because this is handled by the eclipse frame work (with an error dialog if I remember correctly).\nEnforcing a lot of catches just blows the code using the method and I mostly just throw a runtimeException in this cases.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1568#discussion_r511744189", "createdAt": "2020-10-26T06:40:51Z", "author": {"login": "hannesN"}, "path": "org.eclipse.xtext.ui/src/org/eclipse/xtext/ui/wizard/template/WorkspaceFileGenerator.java", "diffHunk": "@@ -49,12 +54,15 @@ protected void execute(IProgressMonitor monitor) throws CoreException, Invocatio\n \t\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();\n \t\t\tfor (Map.Entry<String, CharSequence> fileEntry : files.entrySet()) {\n \t\t\t\tIFile file = workspace.getRoot().getFile(new Path(fileEntry.getKey()));\n-\t\t\t\tfile.create(new StringInputStream(fileEntry.getValue().toString()), true, subMonitor);\n+\t\t\t\tfile.create(new StringInputStream(fileEntry.getValue().toString(), file.getCharset()), true, subMonitor);\n \t\t\t\tif (firstFile == null) {\n \t\t\t\t\tfirstFile = file;\n \t\t\t\t}\n \t\t\t\tsubMonitor.worked(1);\n \t\t\t}\n+\t\t} catch (UnsupportedEncodingException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczMzQzMw=="}, "originalCommit": {"oid": "99b1ee897df16697f29b1f1074907453864b5ac3"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc0OTE4OQ==", "bodyText": "Another thought: Why would I need 3 different exception, which tell me: \"the generation failed!\" I have to deal with that, I don't want to catch different types of reasons. If I relly need to know them, e.getReason() is the method to go. But usually I need to do some clean-up or other stuff.\nMore important than different exception is a good javadoc, which is still missing here.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1568#discussion_r511749189", "createdAt": "2020-10-26T06:57:25Z", "author": {"login": "hannesN"}, "path": "org.eclipse.xtext.ui/src/org/eclipse/xtext/ui/wizard/template/WorkspaceFileGenerator.java", "diffHunk": "@@ -49,12 +54,15 @@ protected void execute(IProgressMonitor monitor) throws CoreException, Invocatio\n \t\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();\n \t\t\tfor (Map.Entry<String, CharSequence> fileEntry : files.entrySet()) {\n \t\t\t\tIFile file = workspace.getRoot().getFile(new Path(fileEntry.getKey()));\n-\t\t\t\tfile.create(new StringInputStream(fileEntry.getValue().toString()), true, subMonitor);\n+\t\t\t\tfile.create(new StringInputStream(fileEntry.getValue().toString(), file.getCharset()), true, subMonitor);\n \t\t\t\tif (firstFile == null) {\n \t\t\t\t\tfirstFile = file;\n \t\t\t\t}\n \t\t\t\tsubMonitor.worked(1);\n \t\t\t}\n+\t\t} catch (UnsupportedEncodingException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczMzQzMw=="}, "originalCommit": {"oid": "99b1ee897df16697f29b1f1074907453864b5ac3"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc0OTkwNQ==", "bodyText": "in this case we have explicit handing for some at caller place", "url": "https://github.com/eclipse/xtext-eclipse/pull/1568#discussion_r511749905", "createdAt": "2020-10-26T06:59:55Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.ui/src/org/eclipse/xtext/ui/wizard/template/WorkspaceFileGenerator.java", "diffHunk": "@@ -49,12 +54,15 @@ protected void execute(IProgressMonitor monitor) throws CoreException, Invocatio\n \t\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();\n \t\t\tfor (Map.Entry<String, CharSequence> fileEntry : files.entrySet()) {\n \t\t\t\tIFile file = workspace.getRoot().getFile(new Path(fileEntry.getKey()));\n-\t\t\t\tfile.create(new StringInputStream(fileEntry.getValue().toString()), true, subMonitor);\n+\t\t\t\tfile.create(new StringInputStream(fileEntry.getValue().toString(), file.getCharset()), true, subMonitor);\n \t\t\t\tif (firstFile == null) {\n \t\t\t\t\tfirstFile = file;\n \t\t\t\t}\n \t\t\t\tsubMonitor.worked(1);\n \t\t\t}\n+\t\t} catch (UnsupportedEncodingException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczMzQzMw=="}, "originalCommit": {"oid": "99b1ee897df16697f29b1f1074907453864b5ac3"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc3MzgzNw==", "bodyText": "The #execute method is inherited from WorkspaceModifyOperation - we cannot add a checked exception to the signature.\nI think wrapping it in a CoreException is the right move + some JavaDoc on the failure scenarios.", "url": "https://github.com/eclipse/xtext-eclipse/pull/1568#discussion_r511773837", "createdAt": "2020-10-26T08:02:05Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ui/src/org/eclipse/xtext/ui/wizard/template/WorkspaceFileGenerator.java", "diffHunk": "@@ -49,12 +54,15 @@ protected void execute(IProgressMonitor monitor) throws CoreException, Invocatio\n \t\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();\n \t\t\tfor (Map.Entry<String, CharSequence> fileEntry : files.entrySet()) {\n \t\t\t\tIFile file = workspace.getRoot().getFile(new Path(fileEntry.getKey()));\n-\t\t\t\tfile.create(new StringInputStream(fileEntry.getValue().toString()), true, subMonitor);\n+\t\t\t\tfile.create(new StringInputStream(fileEntry.getValue().toString(), file.getCharset()), true, subMonitor);\n \t\t\t\tif (firstFile == null) {\n \t\t\t\t\tfirstFile = file;\n \t\t\t\t}\n \t\t\t\tsubMonitor.worked(1);\n \t\t\t}\n+\t\t} catch (UnsupportedEncodingException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTczMzQzMw=="}, "originalCommit": {"oid": "99b1ee897df16697f29b1f1074907453864b5ac3"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 774, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}