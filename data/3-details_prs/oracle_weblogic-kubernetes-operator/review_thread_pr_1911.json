{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1NDMzNzYy", "number": 1911, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOTo0MDoyNFrOEjvzUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOTo0MDoyNFrOEjvzUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTE4ODAwOnYy", "diffSide": "RIGHT", "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/JobHelperTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOTo0MDoyNFrOHSRvKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMDoyNDowN1rOHSTNig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyNzAxOA==", "bodyText": "Should this test be named ..._jobNotCreated rather than ..._reportValidationError?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1911#discussion_r488927018", "createdAt": "2020-09-15T19:40:24Z", "author": {"login": "alai8"}, "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/JobHelperTest.java", "diffHunk": "@@ -441,6 +444,55 @@ public void introspectorPodStartupWithNullAdminUsernamePasswordEnvVarValues() {\n         getConfiguredDomainSpec(domainConfigurator).getEnv(), hasEnvVar(\"item1\", RAW_VALUE_1));\n   }\n \n+  @Test\n+  public void whenDomainHasAdditionalVolumesWithReservedVariables_createIntrospectorPodWithSubstitutions() {\n+    configureDomain()\n+        .withAdditionalVolumeMount(\"volume2\", \"/source-$(DOMAIN_UID)\");\n+    runCreateJob();\n+    assertThat(\n+        job.getSpec().getTemplate().getSpec().getContainers().get(0).getVolumeMounts(),\n+        hasVolumeMount(\"volume2\", \"/source-\" + UID));\n+  }\n+\n+  @Test\n+  public void whenDomainHasAdditionalVolumesWithCustomVariables_createIntrospectorPodWithSubstitutions() {\n+    resourceLookup.defineResource(SECRET_NAME, KubernetesResourceType.Secret, NS);\n+    resourceLookup.defineResource(OVERRIDES_CM_NAME_MODEL, KubernetesResourceType.ConfigMap, NS);\n+    resourceLookup.defineResource(OVERRIDES_CM_NAME_IMAGE, KubernetesResourceType.ConfigMap, NS);\n+\n+    configureDomain()\n+        .withEnvironmentVariable(ENV_NAME1, GOOD_MY_ENV_VALUE)\n+        .withWebLogicCredentialsSecret(SECRET_NAME, null)\n+        .withAdditionalVolume(\"volume1\", VOLUME_PATH_1)\n+        .withAdditionalVolumeMount(\"volume1\", VOLUME_MOUNT_PATH_1);\n+\n+    runCreateJob();\n+\n+    assertThat(job.getSpec().getTemplate().getSpec().getContainers().get(0).getVolumeMounts(),\n+            hasVolumeMount(\"volume1\", END_VOLUME_MOUNT_PATH_1));\n+  }\n+\n+  @Test\n+  public void whenDomainHasAdditionalVolumesWithCustomVariablesInvalidValue_reportValidationError() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "877de6f1ee9e08e9361a0f1f8909a5bbd042afdd"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1MTE3OA==", "bodyText": "sure. thanks!", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1911#discussion_r488951178", "createdAt": "2020-09-15T20:24:07Z", "author": {"login": "doxiao"}, "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/JobHelperTest.java", "diffHunk": "@@ -441,6 +444,55 @@ public void introspectorPodStartupWithNullAdminUsernamePasswordEnvVarValues() {\n         getConfiguredDomainSpec(domainConfigurator).getEnv(), hasEnvVar(\"item1\", RAW_VALUE_1));\n   }\n \n+  @Test\n+  public void whenDomainHasAdditionalVolumesWithReservedVariables_createIntrospectorPodWithSubstitutions() {\n+    configureDomain()\n+        .withAdditionalVolumeMount(\"volume2\", \"/source-$(DOMAIN_UID)\");\n+    runCreateJob();\n+    assertThat(\n+        job.getSpec().getTemplate().getSpec().getContainers().get(0).getVolumeMounts(),\n+        hasVolumeMount(\"volume2\", \"/source-\" + UID));\n+  }\n+\n+  @Test\n+  public void whenDomainHasAdditionalVolumesWithCustomVariables_createIntrospectorPodWithSubstitutions() {\n+    resourceLookup.defineResource(SECRET_NAME, KubernetesResourceType.Secret, NS);\n+    resourceLookup.defineResource(OVERRIDES_CM_NAME_MODEL, KubernetesResourceType.ConfigMap, NS);\n+    resourceLookup.defineResource(OVERRIDES_CM_NAME_IMAGE, KubernetesResourceType.ConfigMap, NS);\n+\n+    configureDomain()\n+        .withEnvironmentVariable(ENV_NAME1, GOOD_MY_ENV_VALUE)\n+        .withWebLogicCredentialsSecret(SECRET_NAME, null)\n+        .withAdditionalVolume(\"volume1\", VOLUME_PATH_1)\n+        .withAdditionalVolumeMount(\"volume1\", VOLUME_MOUNT_PATH_1);\n+\n+    runCreateJob();\n+\n+    assertThat(job.getSpec().getTemplate().getSpec().getContainers().get(0).getVolumeMounts(),\n+            hasVolumeMount(\"volume1\", END_VOLUME_MOUNT_PATH_1));\n+  }\n+\n+  @Test\n+  public void whenDomainHasAdditionalVolumesWithCustomVariablesInvalidValue_reportValidationError() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyNzAxOA=="}, "originalCommit": {"oid": "877de6f1ee9e08e9361a0f1f8909a5bbd042afdd"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3954, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}