{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MTU0MTAx", "number": 1702, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjoyNDowMlrOECOtsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjoyNjozNFrOECOxxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzczNjgzOnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/ServerPod.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjoyNDowMlrOGejwjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzo0ODoyNlrOGem3eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY5NjMzNA==", "bodyText": "If to.getPreferred..() was null, does the array preferredDuringSchedulingIgnoredDuringExecution contains element from from.getPreferred...()?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1702#discussion_r434696334", "createdAt": "2020-06-03T16:24:02Z", "author": {"login": "alai8"}, "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/ServerPod.java", "diffHunk": "@@ -307,12 +311,18 @@ private void copyValues(V1Affinity to, V1Affinity from) {\n   }\n \n   private void copyValues(V1NodeAffinity to, V1NodeAffinity from) {\n-    if (to.getPreferredDuringSchedulingIgnoredDuringExecution() == null) {\n-      to.setPreferredDuringSchedulingIgnoredDuringExecution(from.getPreferredDuringSchedulingIgnoredDuringExecution());\n-    } else if (from.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n-      from.getPreferredDuringSchedulingIgnoredDuringExecution()\n-          .forEach(to::addPreferredDuringSchedulingIgnoredDuringExecutionItem);\n+    if (from.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n+      List<V1PreferredSchedulingTerm> preferredDuringSchedulingIgnoredDuringExecution = new ArrayList<>();\n+      if (to.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n+        preferredDuringSchedulingIgnoredDuringExecution =\n+            Stream.concat(to.getPreferredDuringSchedulingIgnoredDuringExecution().stream(),\n+                from.getPreferredDuringSchedulingIgnoredDuringExecution().stream())\n+                .distinct()\n+                .collect(Collectors.toList());\n+      }\n+      to.setPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1629d704c3c56467fa7cd36a2f8b12ec4ecdf56c"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwNjgzMw==", "bodyText": "Good catch... This bug is also in the code I copied this from (look at copyValues(V1Capabilities, V1Capabilities)).", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1702#discussion_r434706833", "createdAt": "2020-06-03T16:40:24Z", "author": {"login": "rjeberhard"}, "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/ServerPod.java", "diffHunk": "@@ -307,12 +311,18 @@ private void copyValues(V1Affinity to, V1Affinity from) {\n   }\n \n   private void copyValues(V1NodeAffinity to, V1NodeAffinity from) {\n-    if (to.getPreferredDuringSchedulingIgnoredDuringExecution() == null) {\n-      to.setPreferredDuringSchedulingIgnoredDuringExecution(from.getPreferredDuringSchedulingIgnoredDuringExecution());\n-    } else if (from.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n-      from.getPreferredDuringSchedulingIgnoredDuringExecution()\n-          .forEach(to::addPreferredDuringSchedulingIgnoredDuringExecutionItem);\n+    if (from.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n+      List<V1PreferredSchedulingTerm> preferredDuringSchedulingIgnoredDuringExecution = new ArrayList<>();\n+      if (to.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n+        preferredDuringSchedulingIgnoredDuringExecution =\n+            Stream.concat(to.getPreferredDuringSchedulingIgnoredDuringExecution().stream(),\n+                from.getPreferredDuringSchedulingIgnoredDuringExecution().stream())\n+                .distinct()\n+                .collect(Collectors.toList());\n+      }\n+      to.setPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY5NjMzNA=="}, "originalCommit": {"oid": "1629d704c3c56467fa7cd36a2f8b12ec4ecdf56c"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc0NzI1Nw==", "bodyText": "@alai8, this is fixed... can you please recheck?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1702#discussion_r434747257", "createdAt": "2020-06-03T17:48:26Z", "author": {"login": "rjeberhard"}, "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/ServerPod.java", "diffHunk": "@@ -307,12 +311,18 @@ private void copyValues(V1Affinity to, V1Affinity from) {\n   }\n \n   private void copyValues(V1NodeAffinity to, V1NodeAffinity from) {\n-    if (to.getPreferredDuringSchedulingIgnoredDuringExecution() == null) {\n-      to.setPreferredDuringSchedulingIgnoredDuringExecution(from.getPreferredDuringSchedulingIgnoredDuringExecution());\n-    } else if (from.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n-      from.getPreferredDuringSchedulingIgnoredDuringExecution()\n-          .forEach(to::addPreferredDuringSchedulingIgnoredDuringExecutionItem);\n+    if (from.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n+      List<V1PreferredSchedulingTerm> preferredDuringSchedulingIgnoredDuringExecution = new ArrayList<>();\n+      if (to.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n+        preferredDuringSchedulingIgnoredDuringExecution =\n+            Stream.concat(to.getPreferredDuringSchedulingIgnoredDuringExecution().stream(),\n+                from.getPreferredDuringSchedulingIgnoredDuringExecution().stream())\n+                .distinct()\n+                .collect(Collectors.toList());\n+      }\n+      to.setPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY5NjMzNA=="}, "originalCommit": {"oid": "1629d704c3c56467fa7cd36a2f8b12ec4ecdf56c"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzc0NzI0OnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/ServerPod.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjoyNjozNFrOGej3Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjo0MToxM1rOGekbmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY5ODA0Mg==", "bodyText": "do we need deep copy here?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1702#discussion_r434698042", "createdAt": "2020-06-03T16:26:34Z", "author": {"login": "alai8"}, "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/ServerPod.java", "diffHunk": "@@ -307,12 +311,18 @@ private void copyValues(V1Affinity to, V1Affinity from) {\n   }\n \n   private void copyValues(V1NodeAffinity to, V1NodeAffinity from) {\n-    if (to.getPreferredDuringSchedulingIgnoredDuringExecution() == null) {\n-      to.setPreferredDuringSchedulingIgnoredDuringExecution(from.getPreferredDuringSchedulingIgnoredDuringExecution());\n-    } else if (from.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n-      from.getPreferredDuringSchedulingIgnoredDuringExecution()\n-          .forEach(to::addPreferredDuringSchedulingIgnoredDuringExecutionItem);\n+    if (from.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n+      List<V1PreferredSchedulingTerm> preferredDuringSchedulingIgnoredDuringExecution = new ArrayList<>();\n+      if (to.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n+        preferredDuringSchedulingIgnoredDuringExecution =\n+            Stream.concat(to.getPreferredDuringSchedulingIgnoredDuringExecution().stream(),\n+                from.getPreferredDuringSchedulingIgnoredDuringExecution().stream())\n+                .distinct()\n+                .collect(Collectors.toList());\n+      }\n+      to.setPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution);\n     }\n+\n     if (to.getRequiredDuringSchedulingIgnoredDuringExecution() == null) {\n       to.setRequiredDuringSchedulingIgnoredDuringExecution(from.getRequiredDuringSchedulingIgnoredDuringExecution());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1629d704c3c56467fa7cd36a2f8b12ec4ecdf56c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwNzM1NA==", "bodyText": "No, I don't think we do. You will get lists that contain all of collected terms, which is the intent.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1702#discussion_r434707354", "createdAt": "2020-06-03T16:41:13Z", "author": {"login": "rjeberhard"}, "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/ServerPod.java", "diffHunk": "@@ -307,12 +311,18 @@ private void copyValues(V1Affinity to, V1Affinity from) {\n   }\n \n   private void copyValues(V1NodeAffinity to, V1NodeAffinity from) {\n-    if (to.getPreferredDuringSchedulingIgnoredDuringExecution() == null) {\n-      to.setPreferredDuringSchedulingIgnoredDuringExecution(from.getPreferredDuringSchedulingIgnoredDuringExecution());\n-    } else if (from.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n-      from.getPreferredDuringSchedulingIgnoredDuringExecution()\n-          .forEach(to::addPreferredDuringSchedulingIgnoredDuringExecutionItem);\n+    if (from.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n+      List<V1PreferredSchedulingTerm> preferredDuringSchedulingIgnoredDuringExecution = new ArrayList<>();\n+      if (to.getPreferredDuringSchedulingIgnoredDuringExecution() != null) {\n+        preferredDuringSchedulingIgnoredDuringExecution =\n+            Stream.concat(to.getPreferredDuringSchedulingIgnoredDuringExecution().stream(),\n+                from.getPreferredDuringSchedulingIgnoredDuringExecution().stream())\n+                .distinct()\n+                .collect(Collectors.toList());\n+      }\n+      to.setPreferredDuringSchedulingIgnoredDuringExecution(preferredDuringSchedulingIgnoredDuringExecution);\n     }\n+\n     if (to.getRequiredDuringSchedulingIgnoredDuringExecution() == null) {\n       to.setRequiredDuringSchedulingIgnoredDuringExecution(from.getRequiredDuringSchedulingIgnoredDuringExecution());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY5ODA0Mg=="}, "originalCommit": {"oid": "1629d704c3c56467fa7cd36a2f8b12ec4ecdf56c"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4289, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}