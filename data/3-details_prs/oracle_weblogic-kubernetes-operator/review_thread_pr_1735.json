{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzOTExNDA0", "number": 1735, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMzoxNDozM1rOEFNd1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxNzoyMTo0NVrOEFQ-cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODk4OTY3OnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMzoxNDozM1rOGjTtsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNTo1OTowM1rOGkiW_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY3NjMzNw==", "bodyText": "consider adding a utility method in LoggingContext that handles setting the context, invoke the code, and removal of context, something like LoggingContext.runUnderContext(LoggingContext, Runnable).", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1735#discussion_r439676337", "createdAt": "2020-06-12T23:14:33Z", "author": {"login": "alai8"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -231,8 +232,23 @@ public void reportSuspendedFibers() {\n             gate.getCurrentFibers().forEach(\n                 (key, fiber) -> {\n                   Optional.ofNullable(fiber.getSuspendedStep()).ifPresent(suspendedStep -> {\n-                    LOGGER.fine(\"Namespace: \" + namespace + \", DomainUid: \" + key\n-                        + \", Fiber: \" + fiber.toString() + \" is SUSPENDED at \" + suspendedStep.getName());\n+                  \n+                    // find out the domainUID \n+                    Packet packet = fiber == null ? null : fiber.getPacket();\n+                    String domainUid = null;\n+                    if (packet != null) {\n+                      DomainPresenceInfo info = packet.getSpi(DomainPresenceInfo.class);\n+                      if (info != null) {\n+                        domainUid = info.getDomainUid();\n+                      }\n+                    }\n+                    LoggingContext.context(new LoggingContext().namespace(namespace).domainUid(domainUid));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7353aa2a8f561d8772a557f04514bad8d4220b30"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1NDcyMw==", "bodyText": "Or maybe have a Closable wrapper to allow for a 'try (closable) {}' pattern?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1735#discussion_r439754723", "createdAt": "2020-06-13T17:24:46Z", "author": {"login": "tbarnes-us"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -231,8 +232,23 @@ public void reportSuspendedFibers() {\n             gate.getCurrentFibers().forEach(\n                 (key, fiber) -> {\n                   Optional.ofNullable(fiber.getSuspendedStep()).ifPresent(suspendedStep -> {\n-                    LOGGER.fine(\"Namespace: \" + namespace + \", DomainUid: \" + key\n-                        + \", Fiber: \" + fiber.toString() + \" is SUSPENDED at \" + suspendedStep.getName());\n+                  \n+                    // find out the domainUID \n+                    Packet packet = fiber == null ? null : fiber.getPacket();\n+                    String domainUid = null;\n+                    if (packet != null) {\n+                      DomainPresenceInfo info = packet.getSpi(DomainPresenceInfo.class);\n+                      if (info != null) {\n+                        domainUid = info.getDomainUid();\n+                      }\n+                    }\n+                    LoggingContext.context(new LoggingContext().namespace(namespace).domainUid(domainUid));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY3NjMzNw=="}, "originalCommit": {"oid": "7353aa2a8f561d8772a557f04514bad8d4220b30"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk2NDg2Mw==", "bodyText": "Changed to use AutoCloseable.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1735#discussion_r440964863", "createdAt": "2020-06-16T15:59:03Z", "author": {"login": "doxiao"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -231,8 +232,23 @@ public void reportSuspendedFibers() {\n             gate.getCurrentFibers().forEach(\n                 (key, fiber) -> {\n                   Optional.ofNullable(fiber.getSuspendedStep()).ifPresent(suspendedStep -> {\n-                    LOGGER.fine(\"Namespace: \" + namespace + \", DomainUid: \" + key\n-                        + \", Fiber: \" + fiber.toString() + \" is SUSPENDED at \" + suspendedStep.getName());\n+                  \n+                    // find out the domainUID \n+                    Packet packet = fiber == null ? null : fiber.getPacket();\n+                    String domainUid = null;\n+                    if (packet != null) {\n+                      DomainPresenceInfo info = packet.getSpi(DomainPresenceInfo.class);\n+                      if (info != null) {\n+                        domainUid = info.getDomainUid();\n+                      }\n+                    }\n+                    LoggingContext.context(new LoggingContext().namespace(namespace).domainUid(domainUid));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY3NjMzNw=="}, "originalCommit": {"oid": "7353aa2a8f561d8772a557f04514bad8d4220b30"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTU2NDY1OnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/operator/ServerStatusReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxNzoyMTo0NVrOGjYfKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjowMToyNVrOGkiduA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1NDUzOA==", "bodyText": "Does this need a corresponding LoggingContext().remove() in a finally?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1735#discussion_r439754538", "createdAt": "2020-06-13T17:21:45Z", "author": {"login": "tbarnes-us"}, "path": "operator/src/main/java/oracle/kubernetes/operator/ServerStatusReader.java", "diffHunk": "@@ -167,6 +168,8 @@ public NextAction apply(Packet packet) {\n             String state = null;\n             ClientPool helper = ClientPool.getInstance();\n             ApiClient client = helper.take();\n+            String namespace = pod.getMetadata().getNamespace();\n+            LoggingContext.context(new LoggingContext().namespace(namespace));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7353aa2a8f561d8772a557f04514bad8d4220b30"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk2NjU4NA==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1735#discussion_r440966584", "createdAt": "2020-06-16T16:01:25Z", "author": {"login": "doxiao"}, "path": "operator/src/main/java/oracle/kubernetes/operator/ServerStatusReader.java", "diffHunk": "@@ -167,6 +168,8 @@ public NextAction apply(Packet packet) {\n             String state = null;\n             ClientPool helper = ClientPool.getInstance();\n             ApiClient client = helper.take();\n+            String namespace = pod.getMetadata().getNamespace();\n+            LoggingContext.context(new LoggingContext().namespace(namespace));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1NDUzOA=="}, "originalCommit": {"oid": "7353aa2a8f561d8772a557f04514bad8d4220b30"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4339, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}