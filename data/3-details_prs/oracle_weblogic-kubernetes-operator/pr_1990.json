{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNTIyODkx", "number": 1990, "title": "OWLS 84741: Scaling failed on Jenkins when setting Dedicated to true & io.kubernetes.client.openapi.ApiException: Not Found", "bodyText": "Currently, before any Operator REST Api invocation is allowed, the client is authenticated by the Operator if a TokenReview (based on the client's Bearer Token) is successfully created.  Subsequently, the Operator then does authorization checks by using a SubectAccessReview request to verify the client has the correct permissions to do the operation on a Resource.  If the client is successfully authorized, the WebLogic Operator REST implementation makes all K8s Api Server operations (on behalf of the client) using the Operator's service account credentials.\nWhen the Operator is configured to run with 'domainNamespaceSelectionStrategy=Dedicated' mode, all Resource modification operations are namespaced scope, except for TokenReview creation (which is a cluster scope operation).\nThe K8s Api Server already controls client's access (and hence any Resource modification operations) by authentication and authorization checks as outlined in https://kubernetes.io/docs/reference/access-authn-authz/controlling-access/.\nSince the K8s Api Server already does authentication and authorization checks, this change proposes to delegate these checks directly to the K8s Api Server by creating a K8s ApiClient object based on the client's 'Bearer Token'.  Thus all Resource operations through the Operator's REST api's are done using the client's service account and not the Operator's service account.  The only change in behavior is that permissions would have to be given to the client's service account to do 'patch' operations on the Domain resource.  Otherwise, the client's Operator REST Api invocations do not need to be changed.  Backward compatibility with the Operator's original authentication (TokenReview) and authorization (SubjectAccessReview) behavior can be enabled through an environment variable, \"TOKEN_REVIEW_AUTHENTICATION=true\".", "createdAt": "2020-10-14T17:13:31Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990", "merged": true, "mergeCommit": {"oid": "7e3e0573f4c1444c5d0126f91dc6334382e6ca36"}, "closed": true, "closedAt": "2020-10-23T21:03:30Z", "author": {"login": "lennyphan"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdR79a3AH2gAyNTAzNTIyODkxOjYwNjVlYzllODczYTZiZDg4ODQ4NzczMDlhZDRmNzg4MTFlZjgxY2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVdF5cAFqTUxNjAwOTA3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6065ec9e873a6bd8884877309ad4f78811ef81cb", "author": {"user": {"login": "lennyphan", "name": "Lenny Phan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6065ec9e873a6bd8884877309ad4f78811ef81cb", "committedDate": "2020-10-12T22:45:26Z", "message": "Use REST client's access token for authentication and authorization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9af2a9c3334aaade4fdc4aefbdb9c4a69a8ba723", "author": {"user": {"login": "lennyphan", "name": "Lenny Phan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9af2a9c3334aaade4fdc4aefbdb9c4a69a8ba723", "committedDate": "2020-10-13T19:12:08Z", "message": "Enable testDedicatedModeSameNamespaceScale"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cbf21375e0ea27d955c5a2b0347c99c026bd1f0", "author": {"user": {"login": "lennyphan", "name": "Lenny Phan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3cbf21375e0ea27d955c5a2b0347c99c026bd1f0", "committedDate": "2020-10-14T00:08:02Z", "message": "Add patch permissions to rolebinding"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43c8e0ef1369599d9dc77c539f9e6dd9ef176ee6", "author": {"user": {"login": "lennyphan", "name": "Lenny Phan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/43c8e0ef1369599d9dc77c539f9e6dd9ef176ee6", "committedDate": "2020-10-14T16:23:09Z", "message": "Code cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4ODk1Njk1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#pullrequestreview-508895695", "createdAt": "2020-10-15T02:34:27Z", "commit": {"oid": "43c8e0ef1369599d9dc77c539f9e6dd9ef176ee6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMjozNDoyOFrOHhumSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMzowMjoyNVrOHhvFFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEyODUyMA==", "bodyText": "Please try to avoid reflection in tests. We set statics this way in tests because it allows us to deal with dependency injection, and those should be relatively rare cases. Changing instance fields this way, though, is hard to read and very apt to lead to surprising results. If we need to set the field in a test, create a setter for it and comment that it is intended for unit testing.\nIn this case, I would even recommend a fluent interface, so you could do something like:\n  RestBackendImpl restBackendImpl = new RestBackendImpl(\"\", \"\", Collections.singletonList(NS))\n                                          .withAuthorizationProxy(authorizationProxyStub);\n\n\nIt would make the test easier to read.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r505128520", "createdAt": "2020-10-15T02:34:28Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/rest/RestBackendImplTest.java", "diffHunk": "@@ -326,6 +335,74 @@ public void verify_getWlsDomainConfig_doesNotReturnNull_whenScanIsNull() {\n     assertThat(wlsDomainConfig, notNullValue());\n   }\n \n+  @Test\n+  public void verify_initializeCallBuilder_withAccessToken_userInfoIsNull() {\n+    RestBackendImpl restBackendImpl = new RestBackendImpl(\"\", \"\", Collections.singletonList(NS));\n+    assertThat(restBackendImpl.getUserInfo(), nullValue());\n+  }\n+\n+  @Test\n+  public void verify_initializeCallBuilder_withTokenReview_userInfoNotNull() {\n+    RestBackEndStub restBackEndStub = new RestBackEndStub(\"\", \"\", Collections.singletonList(NS));\n+    assertThat(restBackEndStub.getUserInfo(), notNullValue());\n+  }\n+\n+  @Test\n+  public void verify_authorizationCheck_notCalled_whenAuthenticateWithTokenReviewIsFalse()\n+      throws NoSuchFieldException, IllegalAccessException {\n+    RestBackendImpl restBackendImpl = new RestBackendImpl(\"\", \"\", Collections.singletonList(NS));\n+    AuthorizationProxyStub authorizationProxyStub = new AuthorizationProxyStub();\n+    Field nameField = restBackendImpl.getClass()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43c8e0ef1369599d9dc77c539f9e6dd9ef176ee6"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEyOTQ5Mg==", "bodyText": "You can improve these test names. There is no need to say verify, for example, as all tests do verification of something. I have found a useful convention is something like: \"whenCONDITION_EXPECTATION\". I make it a point to have at most one underscore in test names, just to separate logical parts.\nSo this one could be, for example, whenUsingTokenReview_configureApiClient", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r505129492", "createdAt": "2020-10-15T02:38:01Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/rest/RestBackendImplTest.java", "diffHunk": "@@ -326,6 +335,74 @@ public void verify_getWlsDomainConfig_doesNotReturnNull_whenScanIsNull() {\n     assertThat(wlsDomainConfig, notNullValue());\n   }\n \n+  @Test\n+  public void verify_initializeCallBuilder_withAccessToken_userInfoIsNull() {\n+    RestBackendImpl restBackendImpl = new RestBackendImpl(\"\", \"\", Collections.singletonList(NS));\n+    assertThat(restBackendImpl.getUserInfo(), nullValue());\n+  }\n+\n+  @Test\n+  public void verify_initializeCallBuilder_withTokenReview_userInfoNotNull() {\n+    RestBackEndStub restBackEndStub = new RestBackEndStub(\"\", \"\", Collections.singletonList(NS));\n+    assertThat(restBackEndStub.getUserInfo(), notNullValue());\n+  }\n+\n+  @Test\n+  public void verify_authorizationCheck_notCalled_whenAuthenticateWithTokenReviewIsFalse()\n+      throws NoSuchFieldException, IllegalAccessException {\n+    RestBackendImpl restBackendImpl = new RestBackendImpl(\"\", \"\", Collections.singletonList(NS));\n+    AuthorizationProxyStub authorizationProxyStub = new AuthorizationProxyStub();\n+    Field nameField = restBackendImpl.getClass()\n+        .getDeclaredField(\"atz\");\n+    nameField.setAccessible(true);\n+\n+    nameField.set(restBackendImpl, authorizationProxyStub);\n+    restBackendImpl.getClusters(NAME1);\n+    assertThat(authorizationProxyStub.atzCheck, is(false));\n+  }\n+\n+  @Test\n+  public void verify_authorizationCheck_isCalled_whenAuthenticateWithTokenReviewIsTrue()\n+      throws NoSuchFieldException, IllegalAccessException {\n+    RestBackEndStub restBackEndStub = new RestBackEndStub(\"\", \"\", Collections.singletonList(NS));\n+    AuthorizationProxyStub authorizationProxyStub = new AuthorizationProxyStub();\n+    Field nameField = restBackEndStub.getClass()\n+        .getSuperclass()\n+        .getDeclaredField(\"atz\");\n+    nameField.setAccessible(true);\n+\n+    nameField.set(restBackEndStub, authorizationProxyStub);\n+    restBackEndStub.getClusters(NAME1);\n+    assertThat(authorizationProxyStub.atzCheck, is(true));\n+  }\n+\n+  @Test\n+  public void verify_apiClient_configured_with_AccessTokenAuthentication()\n+      throws IllegalAccessException {\n+    RestBackendImpl restBackendImpl = new RestBackendImpl(\"\", \"1234\", Collections.singletonList(NS));\n+    CallBuilder callBuilder = getValue(restBackendImpl, \"callBuilder\");\n+    ClientPool pool = getValue(callBuilder, \"helper\");\n+    ApiClient apiClient = pool.take();\n+    Authentication authentication = apiClient.getAuthentication(\"BearerToken\");\n+    assertThat(authentication instanceof ApiKeyAuth, is(true));\n+    String apiKey = ((ApiKeyAuth) authentication).getApiKey();\n+    assertThat(apiKey, is(\"1234\"));\n+  }\n+\n+  @Test\n+  public void verify_apiClient_configured_whenAuthenticateWithTokenReviewIsTrue()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43c8e0ef1369599d9dc77c539f9e6dd9ef176ee6"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMDg3Mg==", "bodyText": "Where is this environment variable defined? Is it in Helm? If so, prefer the HelmAccess class. There is already a HelmAccessStub to facilitate unit testing.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r505130872", "createdAt": "2020-10-15T02:42:45Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/rest/RestBackendImpl.java", "diffHunk": "@@ -417,6 +450,15 @@ private WebApplicationException createWebApplicationException(int status, String\n     return new WebApplicationException(rb.build());\n   }\n \n+  protected boolean authenticateWithTokenReview() {\n+    return \"true\".equalsIgnoreCase(Optional.ofNullable(getEnvVariable.apply(\"TOKEN_REVIEW_AUTHENTICATION\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43c8e0ef1369599d9dc77c539f9e6dd9ef176ee6"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNjEwMg==", "bodyText": "It would probably be cleaner to add a fluent method to CallBuilder that would allow you to say something like:\n  new CallBuilder().withAuthentication(new AccessTokenAuthentication(accessToken))\n\nIf the authentication is null, you'd get the current behavior. That would allow this logic to be moved into CallBuilder, where it really belongs. This isn't a REST thing.\nBut this whole bit of code seems needlessly complex. Find a way to simplify it, please.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r505136102", "createdAt": "2020-10-15T03:01:14Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/rest/RestBackendImpl.java", "diffHunk": "@@ -89,13 +97,38 @@\n   RestBackendImpl(String principal, String accessToken, Collection<String> domainNamespaces) {\n     LOGGER.entering(principal, domainNamespaces);\n     this.principal = principal;\n-    userInfo = authenticate(accessToken);\n+    initializeCallBuilder(accessToken);\n     this.domainNamespaces = domainNamespaces;\n     LOGGER.exiting();\n   }\n \n+  private void initializeCallBuilder(String accessToken) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43c8e0ef1369599d9dc77c539f9e6dd9ef176ee6"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNjQwNw==", "bodyText": "Seems an odd place to break this method. Can it really not fit on one line?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r505136407", "createdAt": "2020-10-15T03:02:25Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/rest/RestBackendImplTest.java", "diffHunk": "@@ -334,10 +411,86 @@ private void setupScanCache() {\n     config = configSupport.createDomainConfig();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  public static <T> T getValue(Object object, String fieldName) throws IllegalAccessException {\n+    return (T) getValue(object, getField(object.getClass(), fieldName));\n+  }\n+\n+  private static Object getValue(Object object, Field field) throws IllegalAccessException {\n+    boolean wasAccessible = field.isAccessible();\n+    try {\n+      field.setAccessible(true);\n+      return field.get(object);\n+    } finally {\n+      field.setAccessible(wasAccessible);\n+    }\n+  }\n+\n+  private static Field getField(Class<?> aaClass, String fieldName) {\n+    assert aaClass != null : \"No such field '\" + fieldName + \"'\";\n+\n+    try {\n+      return aaClass.getDeclaredField(fieldName);\n+    } catch (NoSuchFieldException e) {\n+      return getField(aaClass.getSuperclass(), fieldName);\n+    }\n+  }\n+\n   private class TopologyRetrieverStub implements TopologyRetriever {\n     @Override\n     public WlsDomainConfig getWlsDomainConfig(String ns, String domainUid) {\n       return config;\n     }\n   }\n+\n+  private class RestBackEndStub extends RestBackendImpl {\n+\n+    /**\n+     * Construct a RestBackendImpl that is used to handle one WebLogic operator REST request.\n+     *\n+     * @param principal        is the name of the Kubernetes user to use when calling the Kubernetes\n+     *                         REST api.\n+     * @param accessToken      is the access token of the Kubernetes service account of the client\n+     *                         calling the WebLogic operator REST api.\n+     * @param domainNamespaces a list of Kubernetes namepaces that contain domains that the WebLogic\n+     */\n+    RestBackEndStub(String principal, String accessToken,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43c8e0ef1369599d9dc77c539f9e6dd9ef176ee6"}, "originalPosition": 159}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODQ5OTYy", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#pullrequestreview-509849962", "createdAt": "2020-10-15T22:23:35Z", "commit": {"oid": "43c8e0ef1369599d9dc77c539f9e6dd9ef176ee6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjoyMzozNVrOHidj5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjoyMzozNVrOHidj5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg5Nzk1Ng==", "bodyText": "We are adding a required role verb (this seems correct), but reminds me that we need to document this requirement in the scaling and/or RBAC documentation. Similarly, we need to document how to create the correct roles and role bindings so that the service account used with the scaling API has the necessary permissions.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r505897956", "createdAt": "2020-10-15T22:23:35Z", "author": {"login": "rjeberhard"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/Domain.java", "diffHunk": "@@ -534,6 +534,7 @@ private static boolean createRbacApiObjectsForWLDFScript(String domainNamespace,\n               .addResourcesItem(\"domains\")\n               .addVerbsItem(\"get\")\n               .addVerbsItem(\"list\")\n+              .addVerbsItem(\"patch\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43c8e0ef1369599d9dc77c539f9e6dd9ef176ee6"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23294dafcd9fccd9f4caea6717c226b95a66dcf0", "author": {"user": {"login": "lennyphan", "name": "Lenny Phan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/23294dafcd9fccd9f4caea6717c226b95a66dcf0", "committedDate": "2020-10-16T18:36:07Z", "message": "Changes from initial code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7f774a7489106831f0fc5d7b73b2cf220817394", "author": {"user": {"login": "lennyphan", "name": "Lenny Phan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d7f774a7489106831f0fc5d7b73b2cf220817394", "committedDate": "2020-10-16T18:41:21Z", "message": "Merge remote-tracking branch 'origin/develop' into OWLS-84741\n\nMerge latest from develop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba8a35ae74ecf3aec77229a361dbd04d88ccab1d", "author": {"user": {"login": "lennyphan", "name": "Lenny Phan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ba8a35ae74ecf3aec77229a361dbd04d88ccab1d", "committedDate": "2020-10-16T21:55:58Z", "message": "Use TuningParameters to acccess property to control Operator's REST API authentiction and authorization implementation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNzQ2Mzc2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#pullrequestreview-511746376", "createdAt": "2020-10-19T13:15:16Z", "commit": {"oid": "ba8a35ae74ecf3aec77229a361dbd04d88ccab1d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzoxNToxNlrOHkNt5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzoxNToxNlrOHkNt5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzczNTUyNw==", "bodyText": "\"The default value is false.\" would be a good thing to note.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r507735527", "createdAt": "2020-10-19T13:15:16Z", "author": {"login": "russgold"}, "path": "kubernetes/charts/weblogic-operator/values.yaml", "diffHunk": "@@ -191,3 +191,9 @@ externalServiceNameSuffix: \"-ext\"\n # cluster size.\n # The default value is true.\n clusterSizePaddingValidationEnabled: true\n+\n+# tokenReviewAuthentication specifies whether the the operator's REST API should use\n+#   1. Kubernetes token review API for authenticating users, and\n+#   2. Kubernetes subject access review API for authorizing a user's operation (get, list,\n+#      patch, etc) on a resource.\n+#tokenReviewAuthentication: false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8a35ae74ecf3aec77229a361dbd04d88ccab1d"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNzgzMDA0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#pullrequestreview-511783004", "createdAt": "2020-10-19T13:51:54Z", "commit": {"oid": "ba8a35ae74ecf3aec77229a361dbd04d88ccab1d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzo1MTo1NFrOHkPZ5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzo1MTo1NFrOHkPZ5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc2MzE3Mg==", "bodyText": "We've been using the Guava method\nStrings.isNullOrEmpty()\n\nfor cases like this.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r507763172", "createdAt": "2020-10-19T13:51:54Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CallBuilder.java", "diffHunk": "@@ -1907,4 +1910,31 @@ private Call readPodLogAsync(\n   private CancellableCall wrap(Call call) {\n     return new CallWrapper(call);\n   }\n+\n+  public ClientPool getClientPool() {\n+    return this.helper;\n+  }\n+\n+  /**\n+   * Create AccessTokenAuthentication component for authenticating user represented by\n+   * the given token.\n+   * @param accessToken - User's Bearer token\n+   * @return - this CallBuilder instance\n+   */\n+  public CallBuilder withAuthentication(String accessToken) {\n+    if (accessToken != null && !accessToken.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8a35ae74ecf3aec77229a361dbd04d88ccab1d"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNzk4NDc0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#pullrequestreview-511798474", "createdAt": "2020-10-19T14:04:51Z", "commit": {"oid": "ba8a35ae74ecf3aec77229a361dbd04d88ccab1d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDowNDo1MlrOHkQGcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDowNDo1MlrOHkQGcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc3NDU3Nw==", "bodyText": "typo: \"when\" rather than \"vwhen\"", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r507774577", "createdAt": "2020-10-19T14:04:52Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/rest/RestBackendImplTest.java", "diffHunk": "@@ -336,66 +335,52 @@ public void verify_getWlsDomainConfig_doesNotReturnNull_whenScanIsNull() {\n   }\n \n   @Test\n-  public void verify_initializeCallBuilder_withAccessToken_userInfoIsNull() {\n-    RestBackendImpl restBackendImpl = new RestBackendImpl(\"\", \"\", Collections.singletonList(NS));\n-    assertThat(restBackendImpl.getUserInfo(), nullValue());\n+  public void vwhenUsingAccessToken_userInfoIsNull() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8a35ae74ecf3aec77229a361dbd04d88ccab1d"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODAxMTQz", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#pullrequestreview-511801143", "createdAt": "2020-10-19T14:07:00Z", "commit": {"oid": "ba8a35ae74ecf3aec77229a361dbd04d88ccab1d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a8dad53070fe3190a43747f5a0f324729d5bf6a", "author": {"user": {"login": "lennyphan", "name": "Lenny Phan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8a8dad53070fe3190a43747f5a0f324729d5bf6a", "committedDate": "2020-10-19T21:43:32Z", "message": "Code review changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMTM3MjI2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#pullrequestreview-513137226", "createdAt": "2020-10-20T21:11:42Z", "commit": {"oid": "8a8dad53070fe3190a43747f5a0f324729d5bf6a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e1df5a5a2f398b8487d00b72b6938e720b131a8", "author": {"user": {"login": "lennyphan", "name": "Lenny Phan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6e1df5a5a2f398b8487d00b72b6938e720b131a8", "committedDate": "2020-10-21T17:15:56Z", "message": "merge latest from develop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "086f1679215656995a753d1e431b9376f35cae38", "author": {"user": {"login": "lennyphan", "name": "Lenny Phan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/086f1679215656995a753d1e431b9376f35cae38", "committedDate": "2020-10-21T22:09:19Z", "message": "documentation updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf48df15fbc6c5ba9b80596ff53bec882ee57324", "author": {"user": {"login": "lennyphan", "name": "Lenny Phan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/bf48df15fbc6c5ba9b80596ff53bec882ee57324", "committedDate": "2020-10-22T02:50:19Z", "message": "document patch verb"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0NjQ2NzM3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#pullrequestreview-514646737", "createdAt": "2020-10-22T12:00:18Z", "commit": {"oid": "bf48df15fbc6c5ba9b80596ff53bec882ee57324"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMjowMDoxOVrOHmeNvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMjoyOTozOFrOHmfStA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwMjk3NA==", "bodyText": "associated to -> associated with\nresource, you'll -> resource, then you'll", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r510102974", "createdAt": "2020-10-22T12:00:19Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/userguide/managing-domains/domain-lifecycle/scaling.md", "diffHunk": "@@ -87,8 +87,27 @@ For example, when using `curl`:\n curl -v -k -H X-Requested-By:MyClient -H Content-Type:application/json -H Accept:application/json -H \"Authorization:Bearer ...\" -d '{ \"managedServerCount\": 3 }' https://.../scaling\n ```\n \n-If you omit the header, you'll get a `400 (bad request)` response. If you omit the Bearer Authentication header, then you'll get a `401 (Unauthorized)` response.\n+If you omit the header, you'll get a `400 (bad request)` response. If you omit the Bearer Authentication header, then you'll get a `401 (Unauthorized)` response.  If the service account or user associated to the `Bearer` token does not have permission to `patch` the WebLogic domain resource, you'll get a `403 (Forbidden)` response.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf48df15fbc6c5ba9b80596ff53bec882ee57324"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwMzQwMA==", "bodyText": "associated to -> associated with", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r510103400", "createdAt": "2020-10-22T12:01:05Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/userguide/managing-domains/domain-lifecycle/scaling.md", "diffHunk": "@@ -87,8 +87,27 @@ For example, when using `curl`:\n curl -v -k -H X-Requested-By:MyClient -H Content-Type:application/json -H Accept:application/json -H \"Authorization:Bearer ...\" -d '{ \"managedServerCount\": 3 }' https://.../scaling\n ```\n \n-If you omit the header, you'll get a `400 (bad request)` response. If you omit the Bearer Authentication header, then you'll get a `401 (Unauthorized)` response.\n+If you omit the header, you'll get a `400 (bad request)` response. If you omit the Bearer Authentication header, then you'll get a `401 (Unauthorized)` response.  If the service account or user associated to the `Bearer` token does not have permission to `patch` the WebLogic domain resource, you'll get a `403 (Forbidden)` response.\n \n+{{% notice note %}}\n+To resolve a `403 (Forbidden)` response, when calling the operator's REST scaling API, you may need to add the `patch` request verb to the cluster role associated to the WebLogic `domains` resource.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf48df15fbc6c5ba9b80596ff53bec882ee57324"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwNjM0OQ==", "bodyText": "operator would perform ->operator performed\nAPI's -> APIs, (no apostrophe, add a comma)\nand then update -> and then updated\nNow the operator will, by default, use -> Now, by default, the operator will use\nCaller's bearer token -> caller's bearer token\nCaller's privileges -> caller's privileges", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r510106349", "createdAt": "2020-10-22T12:06:13Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/userguide/managing-operators/using-the-operator/the-rest-api.md", "diffHunk": "@@ -14,7 +14,12 @@ You can access most of the REST services using `GET`, for example:\n * To obtain a list of domains, send a `GET` request to the URL `/operator/latest/domains`\n * To obtain a list of clusters in a domain, send a `GET` request to the URL `/operator/latest/domains/<domainUID>/clusters`\n \n-All of the REST services require authentication.  Callers must pass in a valid token header and a CA certificate file.  Callers should pass in the `Accept:/application/json` header.\n+All of the REST services require authentication.  Callers must pass in a valid token header and a CA certificate file.  In previous operator versions, the operator would perform authentication and authorization checks using the Kubernetes token review and subject access review API's and then update the Domain resource using the operator's privileges.  Now the operator will, by default, use the Caller's bearer token to perform the underlying update to the Domain resource using the Caller's privileges and thus delegating authentication and authorization checks directly to the Kubernetes API Server (see [REST interface configuration]({{< relref \"/userguide/managing-operators/using-the-operator/using-helm.md#rest-interface-configuration\" >}})).  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf48df15fbc6c5ba9b80596ff53bec882ee57324"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDExMzY0OA==", "bodyText": "When scaling up or scaling down a WebLogic cluster, through the operator's REST services, -> When using the operator's REST services to scale up or down a WebLogic cluster,\nCaller's bearer token -> caller's bearer token (is there a reason that Caller is capitalized?)", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r510113648", "createdAt": "2020-10-22T12:18:45Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/userguide/managing-operators/using-the-operator/the-rest-api.md", "diffHunk": "@@ -14,7 +14,12 @@ You can access most of the REST services using `GET`, for example:\n * To obtain a list of domains, send a `GET` request to the URL `/operator/latest/domains`\n * To obtain a list of clusters in a domain, send a `GET` request to the URL `/operator/latest/domains/<domainUID>/clusters`\n \n-All of the REST services require authentication.  Callers must pass in a valid token header and a CA certificate file.  Callers should pass in the `Accept:/application/json` header.\n+All of the REST services require authentication.  Callers must pass in a valid token header and a CA certificate file.  In previous operator versions, the operator would perform authentication and authorization checks using the Kubernetes token review and subject access review API's and then update the Domain resource using the operator's privileges.  Now the operator will, by default, use the Caller's bearer token to perform the underlying update to the Domain resource using the Caller's privileges and thus delegating authentication and authorization checks directly to the Kubernetes API Server (see [REST interface configuration]({{< relref \"/userguide/managing-operators/using-the-operator/using-helm.md#rest-interface-configuration\" >}})).  \n+{{% notice note %}}\n+When scaling up or scaling down a WebLogic cluster, through the operator's REST services, you may need to grant `patch` access to the user or service account associated with the Caller's bearer token. This can be done with an RBAC ClusterRoleBinding between the user or service account and the ClusterRole that defines the permissions for the WebLogic `domains` resource.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf48df15fbc6c5ba9b80596ff53bec882ee57324"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDExNTIwMw==", "bodyText": "tokenReviewAuthentication, if set to true, specifies -> If set to true, tokenReviewAuthentication specifies\nshould use -> should use:\n@lennyphan Is the following meant to be a numbered list, in other words, does tokenReviewAuthentication do each step in order? If so, keep it numbered. If not, then change it to a bulleted list.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r510115203", "createdAt": "2020-10-22T12:21:11Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/userguide/managing-operators/using-the-operator/using-helm.md", "diffHunk": "@@ -468,7 +468,21 @@ Example:\n ```\n externalOperatorKey: QmFnIEF0dHJpYnV0ZXMKICAgIGZyaWVuZGx5TmFtZTogd2VibG9naWMtb3B ...\n ```\n-\n+##### `tokenReviewAuthentication`\n+tokenReviewAuthentication, if set to `true`, specifies whether the the operator's REST API should use", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf48df15fbc6c5ba9b80596ff53bec882ee57324"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDExOTQzMQ==", "bodyText": "Remove this from the sentence: (comma), and", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r510119431", "createdAt": "2020-10-22T12:27:46Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/userguide/managing-operators/using-the-operator/using-helm.md", "diffHunk": "@@ -468,7 +468,21 @@ Example:\n ```\n externalOperatorKey: QmFnIEF0dHJpYnV0ZXMKICAgIGZyaWVuZGx5TmFtZTogd2VibG9naWMtb3B ...\n ```\n-\n+##### `tokenReviewAuthentication`\n+tokenReviewAuthentication, if set to `true`, specifies whether the the operator's REST API should use\n+   1. Kubernetes token review API for authenticating users, and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf48df15fbc6c5ba9b80596ff53bec882ee57324"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEyMDA1Nw==", "bodyText": "get, list, patch, etc -> get, list, patch, and such (code font, surround with back ticks)", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r510120057", "createdAt": "2020-10-22T12:28:43Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/userguide/managing-operators/using-the-operator/using-helm.md", "diffHunk": "@@ -468,7 +468,21 @@ Example:\n ```\n externalOperatorKey: QmFnIEF0dHJpYnV0ZXMKICAgIGZyaWVuZGx5TmFtZTogd2VibG9naWMtb3B ...\n ```\n-\n+##### `tokenReviewAuthentication`\n+tokenReviewAuthentication, if set to `true`, specifies whether the the operator's REST API should use\n+   1. Kubernetes token review API for authenticating users, and\n+   2. Kubernetes subject access review API for authorizing a user's operation (get, list,\n+      patch, etc) on a resource.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf48df15fbc6c5ba9b80596ff53bec882ee57324"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEyMDYyOA==", "bodyText": "This parameter, if set to false, will use -> If set to false, this parameter will use", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r510120628", "createdAt": "2020-10-22T12:29:38Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/userguide/managing-operators/using-the-operator/using-helm.md", "diffHunk": "@@ -468,7 +468,21 @@ Example:\n ```\n externalOperatorKey: QmFnIEF0dHJpYnV0ZXMKICAgIGZyaWVuZGx5TmFtZTogd2VibG9naWMtb3B ...\n ```\n-\n+##### `tokenReviewAuthentication`\n+tokenReviewAuthentication, if set to `true`, specifies whether the the operator's REST API should use\n+   1. Kubernetes token review API for authenticating users, and\n+   2. Kubernetes subject access review API for authorizing a user's operation (get, list,\n+      patch, etc) on a resource.\n+   3. Update the Domain resource using the operator's privileges.\n+ This parameter, if set to `false`, will use the caller's bearer token for any update", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf48df15fbc6c5ba9b80596ff53bec882ee57324"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67d85006a5d024349f7c22dd973356bec2384c32", "author": {"user": {"login": "lennyphan", "name": "Lenny Phan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/67d85006a5d024349f7c22dd973356bec2384c32", "committedDate": "2020-10-22T17:20:14Z", "message": "documentation changes based on review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MDM1Mzc0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#pullrequestreview-515035374", "createdAt": "2020-10-22T19:06:06Z", "commit": {"oid": "67d85006a5d024349f7c22dd973356bec2384c32"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxOTowNjowNlrOHmv5_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxOTowNzoyMFrOHmv9Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM5MjgzMQ==", "bodyText": "tokenReviewAuthentication specifies -> tokenReviewAuthentication (code font) specifies", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r510392831", "createdAt": "2020-10-22T19:06:06Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/userguide/managing-operators/using-the-operator/using-helm.md", "diffHunk": "@@ -469,12 +469,13 @@ Example:\n externalOperatorKey: QmFnIEF0dHJpYnV0ZXMKICAgIGZyaWVuZGx5TmFtZTogd2VibG9naWMtb3B ...\n ```\n ##### `tokenReviewAuthentication`\n-tokenReviewAuthentication, if set to `true`, specifies whether the the operator's REST API should use\n-   1. Kubernetes token review API for authenticating users, and\n-   2. Kubernetes subject access review API for authorizing a user's operation (get, list,\n-      patch, etc) on a resource.\n-   3. Update the Domain resource using the operator's privileges.\n- This parameter, if set to `false`, will use the caller's bearer token for any update\n+If set to `true`, tokenReviewAuthentication specifies whether the the operator's REST API should use:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67d85006a5d024349f7c22dd973356bec2384c32"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM5MzY0Mg==", "bodyText": "get, list, patch, -> get, list, patch, (code font, surround with back ticks)", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#discussion_r510393642", "createdAt": "2020-10-22T19:07:20Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/userguide/managing-operators/using-the-operator/using-helm.md", "diffHunk": "@@ -469,12 +469,13 @@ Example:\n externalOperatorKey: QmFnIEF0dHJpYnV0ZXMKICAgIGZyaWVuZGx5TmFtZTogd2VibG9naWMtb3B ...\n ```\n ##### `tokenReviewAuthentication`\n-tokenReviewAuthentication, if set to `true`, specifies whether the the operator's REST API should use\n-   1. Kubernetes token review API for authenticating users, and\n-   2. Kubernetes subject access review API for authorizing a user's operation (get, list,\n-      patch, etc) on a resource.\n-   3. Update the Domain resource using the operator's privileges.\n- This parameter, if set to `false`, will use the caller's bearer token for any update\n+If set to `true`, tokenReviewAuthentication specifies whether the the operator's REST API should use:\n+   * Kubernetes token review API for authenticating users and\n+   * Kubernetes subject access review API for authorizing a user's operation (get, list,\n+      patch, and such) on a resource.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67d85006a5d024349f7c22dd973356bec2384c32"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "245e0fc451450831d04741f3afe6a0b5c077a720", "author": {"user": {"login": "lennyphan", "name": "Lenny Phan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/245e0fc451450831d04741f3afe6a0b5c077a720", "committedDate": "2020-10-22T19:19:56Z", "message": "use code font for appropriate parameters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NjAyMjY0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#pullrequestreview-515602264", "createdAt": "2020-10-23T12:04:17Z", "commit": {"oid": "245e0fc451450831d04741f3afe6a0b5c077a720"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MDA5MDc5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1990#pullrequestreview-516009079", "createdAt": "2020-10-23T21:03:20Z", "commit": {"oid": "245e0fc451450831d04741f3afe6a0b5c077a720"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4246, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}