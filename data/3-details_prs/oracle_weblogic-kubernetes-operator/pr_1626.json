{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNzg1MjMx", "number": 1626, "title": "Script to run new integration tests against a \"kind\" cluster", "bodyText": "This PR introduces a ./kindtest.sh that creates a Kubernetes cluster running in Docker containers and then runs the new integration tests against that cluster.\nPresently, the cluster has a master and one worker node and both are running Kubernetes 1.15.7.  It would be fairly straightforward to make the Kubernetes version configurable.\nThe worker node is configured with \"volume mounts\" that I know from experiments with the original integration test suite are such that they will work for domain-on-pv or logs-on-pv use cases.\nThe K8S_NODEPORT_HOST variable is set to the address of the worker node.  From the Kind documentation, this should consistently work on Linux, but I've not tested on MacOS.\nNodes in a Kind cluster do not have access to the Docker daemon on the host machine, but I've been able to find a pattern that works.  The script starts a Docker repository in another container and connects this to the network of the Kubernetes nodes.  This is an insecure registry (doesn't require credentials to push or pull).  Then I've adjusted the tests to use this repository name.  Since the tests are consistently using the TestConstants this was, thankfully, a small change to the test base.", "createdAt": "2020-05-05T22:30:11Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1626", "merged": true, "mergeCommit": {"oid": "2e263139b2ac8291b5227556a8665a410a7f2fed"}, "closed": true, "closedAt": "2020-05-07T23:59:52Z", "author": {"login": "rjeberhard"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceZWC7gH2gAyNDEzNzg1MjMxOjYzOTA1MjMyNTZlNTgxOWNlOTZkOGYzYTY2MTg2NDEyNTI3M2M2ZTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfRxPJAFqTQwODIzMjAzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6390523256e5819ce96d8f3a661864125273c6e1", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6390523256e5819ce96d8f3a661864125273c6e1", "committedDate": "2020-05-05T19:35:31Z", "message": "Run new integration tests with Kind"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e2cc4f052dddd1a0211e6edccc9e8a6d8a162a7", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8e2cc4f052dddd1a0211e6edccc9e8a6d8a162a7", "committedDate": "2020-05-05T19:40:46Z", "message": "Mark as executable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d7bd9a39c27fdd8d2943c37c4f3ec9ec24c6d78", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8d7bd9a39c27fdd8d2943c37c4f3ec9ec24c6d78", "committedDate": "2020-05-05T19:51:48Z", "message": "Fix typos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01dbda974123c14d89ce9cbfc033840e32852dfa", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/01dbda974123c14d89ce9cbfc033840e32852dfa", "committedDate": "2020-05-05T20:57:38Z", "message": "Work in progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "339149dcce6c9455bece59f704d17727676c512b", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/339149dcce6c9455bece59f704d17727676c512b", "committedDate": "2020-05-05T21:02:21Z", "message": "Improved Docker registry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e19d58619db577d87f9b63d6eef6dac18607bf5", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7e19d58619db577d87f9b63d6eef6dac18607bf5", "committedDate": "2020-05-05T21:09:55Z", "message": "Restory worker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1d38fb879847135216a4cc759ade67bd82f0d34", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d1d38fb879847135216a4cc759ade67bd82f0d34", "committedDate": "2020-05-05T22:16:01Z", "message": "Set JAVA_HOME variable if missing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MjYxNjgz", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1626#pullrequestreview-406261683", "createdAt": "2020-05-06T01:47:18Z", "commit": {"oid": "d1d38fb879847135216a4cc759ade67bd82f0d34"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo0NzoxOFrOGRBiCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo1MToyNlrOGRBliQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNDA3Mw==", "bodyText": "copyright notice", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1626#discussion_r420504073", "createdAt": "2020-05-06T01:47:18Z", "author": {"login": "markxnelson"}, "path": "kindtest.sh", "diffHunk": "@@ -0,0 +1,102 @@\n+#!/bin/bash", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d38fb879847135216a4cc759ade67bd82f0d34"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNDI5NA==", "bodyText": "maybe we could print a usage message and stop, rather than arbitrarily chose this location?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1626#discussion_r420504294", "createdAt": "2020-05-06T01:48:26Z", "author": {"login": "markxnelson"}, "path": "kindtest.sh", "diffHunk": "@@ -0,0 +1,102 @@\n+#!/bin/bash\n+set -o errexit\n+\n+if [[ -z \"$WORKSPACE\" ]]; then\n+  kinddir=\"/scratch/$USER/kindtest\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d38fb879847135216a4cc759ade67bd82f0d34"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNDM2Mg==", "bodyText": "does it matter it is was already there?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1626#discussion_r420504362", "createdAt": "2020-05-06T01:48:49Z", "author": {"login": "markxnelson"}, "path": "kindtest.sh", "diffHunk": "@@ -0,0 +1,102 @@\n+#!/bin/bash\n+set -o errexit\n+\n+if [[ -z \"$WORKSPACE\" ]]; then\n+  kinddir=\"/scratch/$USER/kindtest\"\n+else\n+  kinddir=\"${WORKSPACE}/logdir/${BUILD_TAG}\"\n+fi\n+mkdir -m777 -p \"${kinddir}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d38fb879847135216a4cc759ade67bd82f0d34"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNDU2OA==", "bodyText": "should this have --name ${KIND_CLUSTER_NAME}?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1626#discussion_r420504568", "createdAt": "2020-05-06T01:49:38Z", "author": {"login": "markxnelson"}, "path": "kindtest.sh", "diffHunk": "@@ -0,0 +1,102 @@\n+#!/bin/bash\n+set -o errexit\n+\n+if [[ -z \"$WORKSPACE\" ]]; then\n+  kinddir=\"/scratch/$USER/kindtest\"\n+else\n+  kinddir=\"${WORKSPACE}/logdir/${BUILD_TAG}\"\n+fi\n+mkdir -m777 -p \"${kinddir}\"\n+export RESULT_ROOT=\"${kinddir}/wl_k8s_test_results\"\n+if [ -d \"$RESULT_ROOT\" ]; then\n+  rm -Rf \"$RESULT_ROOT/*\"\n+else\n+  mkdir -m777 \"$RESULT_ROOT\"\n+fi\n+\n+export PV_ROOT=\"${kinddir}/k8s-pvroot\"\n+if [ -d \"$PV_ROOT\" ]; then\n+  rm -Rf \"$PV_ROOT/*\"\n+else\n+  mkdir -m777 \"$PV_ROOT\"\n+fi\n+\n+echo 'Remove old cluster (if any)...'\n+kind delete cluster", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d38fb879847135216a4cc759ade67bd82f0d34"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNDc5Nw==", "bodyText": "make this a param? from a list of \"approved\" ones?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1626#discussion_r420504797", "createdAt": "2020-05-06T01:50:32Z", "author": {"login": "markxnelson"}, "path": "kindtest.sh", "diffHunk": "@@ -0,0 +1,102 @@\n+#!/bin/bash\n+set -o errexit\n+\n+if [[ -z \"$WORKSPACE\" ]]; then\n+  kinddir=\"/scratch/$USER/kindtest\"\n+else\n+  kinddir=\"${WORKSPACE}/logdir/${BUILD_TAG}\"\n+fi\n+mkdir -m777 -p \"${kinddir}\"\n+export RESULT_ROOT=\"${kinddir}/wl_k8s_test_results\"\n+if [ -d \"$RESULT_ROOT\" ]; then\n+  rm -Rf \"$RESULT_ROOT/*\"\n+else\n+  mkdir -m777 \"$RESULT_ROOT\"\n+fi\n+\n+export PV_ROOT=\"${kinddir}/k8s-pvroot\"\n+if [ -d \"$PV_ROOT\" ]; then\n+  rm -Rf \"$PV_ROOT/*\"\n+else\n+  mkdir -m777 \"$PV_ROOT\"\n+fi\n+\n+echo 'Remove old cluster (if any)...'\n+kind delete cluster\n+\n+# desired cluster name; default is \"kind\"\n+KIND_CLUSTER_NAME=\"${KIND_CLUSTER_NAME:-kind}\"\n+\n+kind_version=$(kind version)\n+kind_network='kind'\n+reg_name='kind-registry'\n+reg_port='5000'\n+case \"${kind_version}\" in\n+  \"kind v0.7.\"* | \"kind v0.6.\"* | \"kind v0.5.\"*)\n+    kind_network='bridge'\n+    ;;\n+esac\n+\n+echo 'Create registry container unless it already exists'\n+running=\"$(docker inspect -f '{{.State.Running}}' \"${reg_name}\" 2>/dev/null || true)\"\n+if [ \"${running}\" != 'true' ]; then\n+  docker run \\\n+    -d --restart=always -p \"${reg_port}:5000\" --name \"${reg_name}\" \\\n+    registry:2\n+fi\n+\n+reg_host=\"${reg_name}\"\n+if [ \"${kind_network}\" = \"bridge\" ]; then\n+    reg_host=\"$(docker inspect -f '{{.NetworkSettings.IPAddress}}' \"${reg_name}\")\"\n+fi\n+echo \"Registry Host: ${reg_host}\"\n+\n+echo 'Create a cluster with the local registry enabled in containerd'\n+kind_version='v1.15.7@sha256:e2df133f80ef633c53c0200114fce2ed5e1f6947477dbc83261a6a921169488d'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d38fb879847135216a4cc759ade67bd82f0d34"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNDg4NA==", "bodyText": "do we need to expose 6443 or any node ports?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1626#discussion_r420504884", "createdAt": "2020-05-06T01:50:58Z", "author": {"login": "markxnelson"}, "path": "kindtest.sh", "diffHunk": "@@ -0,0 +1,102 @@\n+#!/bin/bash\n+set -o errexit\n+\n+if [[ -z \"$WORKSPACE\" ]]; then\n+  kinddir=\"/scratch/$USER/kindtest\"\n+else\n+  kinddir=\"${WORKSPACE}/logdir/${BUILD_TAG}\"\n+fi\n+mkdir -m777 -p \"${kinddir}\"\n+export RESULT_ROOT=\"${kinddir}/wl_k8s_test_results\"\n+if [ -d \"$RESULT_ROOT\" ]; then\n+  rm -Rf \"$RESULT_ROOT/*\"\n+else\n+  mkdir -m777 \"$RESULT_ROOT\"\n+fi\n+\n+export PV_ROOT=\"${kinddir}/k8s-pvroot\"\n+if [ -d \"$PV_ROOT\" ]; then\n+  rm -Rf \"$PV_ROOT/*\"\n+else\n+  mkdir -m777 \"$PV_ROOT\"\n+fi\n+\n+echo 'Remove old cluster (if any)...'\n+kind delete cluster\n+\n+# desired cluster name; default is \"kind\"\n+KIND_CLUSTER_NAME=\"${KIND_CLUSTER_NAME:-kind}\"\n+\n+kind_version=$(kind version)\n+kind_network='kind'\n+reg_name='kind-registry'\n+reg_port='5000'\n+case \"${kind_version}\" in\n+  \"kind v0.7.\"* | \"kind v0.6.\"* | \"kind v0.5.\"*)\n+    kind_network='bridge'\n+    ;;\n+esac\n+\n+echo 'Create registry container unless it already exists'\n+running=\"$(docker inspect -f '{{.State.Running}}' \"${reg_name}\" 2>/dev/null || true)\"\n+if [ \"${running}\" != 'true' ]; then\n+  docker run \\\n+    -d --restart=always -p \"${reg_port}:5000\" --name \"${reg_name}\" \\\n+    registry:2\n+fi\n+\n+reg_host=\"${reg_name}\"\n+if [ \"${kind_network}\" = \"bridge\" ]; then\n+    reg_host=\"$(docker inspect -f '{{.NetworkSettings.IPAddress}}' \"${reg_name}\")\"\n+fi\n+echo \"Registry Host: ${reg_host}\"\n+\n+echo 'Create a cluster with the local registry enabled in containerd'\n+kind_version='v1.15.7@sha256:e2df133f80ef633c53c0200114fce2ed5e1f6947477dbc83261a6a921169488d'\n+cat <<EOF | kind create cluster --name \"${KIND_CLUSTER_NAME}\" --config=-\n+kind: Cluster\n+apiVersion: kind.x-k8s.io/v1alpha4\n+containerdConfigPatches:\n+- |-\n+  [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"localhost:${reg_port}\"]\n+    endpoint = [\"http://${reg_host}:${reg_port}\"]\n+nodes:\n+  - role: control-plane\n+    image: kindest/node:${kind_version}\n+  - role: worker\n+    image: kindest/node:${kind_version}\n+    extraMounts:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d38fb879847135216a4cc759ade67bd82f0d34"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNDk2OQ==", "bodyText": "shouldn't this use your cluster name var?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1626#discussion_r420504969", "createdAt": "2020-05-06T01:51:26Z", "author": {"login": "markxnelson"}, "path": "kindtest.sh", "diffHunk": "@@ -0,0 +1,102 @@\n+#!/bin/bash\n+set -o errexit\n+\n+if [[ -z \"$WORKSPACE\" ]]; then\n+  kinddir=\"/scratch/$USER/kindtest\"\n+else\n+  kinddir=\"${WORKSPACE}/logdir/${BUILD_TAG}\"\n+fi\n+mkdir -m777 -p \"${kinddir}\"\n+export RESULT_ROOT=\"${kinddir}/wl_k8s_test_results\"\n+if [ -d \"$RESULT_ROOT\" ]; then\n+  rm -Rf \"$RESULT_ROOT/*\"\n+else\n+  mkdir -m777 \"$RESULT_ROOT\"\n+fi\n+\n+export PV_ROOT=\"${kinddir}/k8s-pvroot\"\n+if [ -d \"$PV_ROOT\" ]; then\n+  rm -Rf \"$PV_ROOT/*\"\n+else\n+  mkdir -m777 \"$PV_ROOT\"\n+fi\n+\n+echo 'Remove old cluster (if any)...'\n+kind delete cluster\n+\n+# desired cluster name; default is \"kind\"\n+KIND_CLUSTER_NAME=\"${KIND_CLUSTER_NAME:-kind}\"\n+\n+kind_version=$(kind version)\n+kind_network='kind'\n+reg_name='kind-registry'\n+reg_port='5000'\n+case \"${kind_version}\" in\n+  \"kind v0.7.\"* | \"kind v0.6.\"* | \"kind v0.5.\"*)\n+    kind_network='bridge'\n+    ;;\n+esac\n+\n+echo 'Create registry container unless it already exists'\n+running=\"$(docker inspect -f '{{.State.Running}}' \"${reg_name}\" 2>/dev/null || true)\"\n+if [ \"${running}\" != 'true' ]; then\n+  docker run \\\n+    -d --restart=always -p \"${reg_port}:5000\" --name \"${reg_name}\" \\\n+    registry:2\n+fi\n+\n+reg_host=\"${reg_name}\"\n+if [ \"${kind_network}\" = \"bridge\" ]; then\n+    reg_host=\"$(docker inspect -f '{{.NetworkSettings.IPAddress}}' \"${reg_name}\")\"\n+fi\n+echo \"Registry Host: ${reg_host}\"\n+\n+echo 'Create a cluster with the local registry enabled in containerd'\n+kind_version='v1.15.7@sha256:e2df133f80ef633c53c0200114fce2ed5e1f6947477dbc83261a6a921169488d'\n+cat <<EOF | kind create cluster --name \"${KIND_CLUSTER_NAME}\" --config=-\n+kind: Cluster\n+apiVersion: kind.x-k8s.io/v1alpha4\n+containerdConfigPatches:\n+- |-\n+  [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"localhost:${reg_port}\"]\n+    endpoint = [\"http://${reg_host}:${reg_port}\"]\n+nodes:\n+  - role: control-plane\n+    image: kindest/node:${kind_version}\n+  - role: worker\n+    image: kindest/node:${kind_version}\n+    extraMounts:\n+      - hostPath: ${PV_ROOT}\n+        containerPath: ${PV_ROOT}\n+EOF\n+\n+kubectl cluster-info --context kind-kind", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d38fb879847135216a4cc759ade67bd82f0d34"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a6dd427e75f12f64ae56b2908800be932e0727f", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9a6dd427e75f12f64ae56b2908800be932e0727f", "committedDate": "2020-05-06T13:03:45Z", "message": "Support WIT specific JAVA_HOME"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "349504f2bd599e310d088193d3a6a8967328943b", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/349504f2bd599e310d088193d3a6a8967328943b", "committedDate": "2020-05-06T14:14:15Z", "message": "Support different versions and review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bf04d2d3e85f563164e89d24203baaf75d2445c", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7bf04d2d3e85f563164e89d24203baaf75d2445c", "committedDate": "2020-05-06T14:22:51Z", "message": "Update other file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90d2290d3e17dae90646fa5ab41f29409a197d25", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/90d2290d3e17dae90646fa5ab41f29409a197d25", "committedDate": "2020-05-06T14:23:22Z", "message": "Fix grep"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2Njg5NzQy", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1626#pullrequestreview-406689742", "createdAt": "2020-05-06T14:48:27Z", "commit": {"oid": "90d2290d3e17dae90646fa5ab41f29409a197d25"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNDo0ODoyN1rOGRWwxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNDo0ODoyN1rOGRWwxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg1MTkwOQ==", "bodyText": "This one is supposed to get the nodes from kind cluster or localhost kubernetes cluster ?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1626#discussion_r420851909", "createdAt": "2020-05-06T14:48:27Z", "author": {"login": "sankarpn"}, "path": "kindtest.sh", "diffHunk": "@@ -0,0 +1,143 @@\n+#!/bin/bash\n+# Copyright (c) 2019, 2020, Oracle Corporation and/or its affiliates.\n+# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+set -o errexit\n+\n+script=\"${BASH_SOURCE[0]}\"\n+scriptDir=\"$( cd \"$( dirname \"${script}\" )\" && pwd )\"\n+\n+function usage {\n+  echo \"usage: ${script} [-v <version>] [-n <name>] [-o <directory>] [-h]\"\n+  echo \"  -v Kubernetes version (optional) \"\n+  echo \"      (default: 1.15.11, supported values: 1.18, 1.18.2, 1.17, 1.17.5, 1.16, 1.16.9, 1.15, 1.15.11, 1.14, 1.14.10) \"\n+  echo \"  -n Kind cluster name (optional) \"\n+  echo \"      (default: kind) \"\n+  echo \"  -o Output directory (optional) \"\n+  echo \"      (default: \\${WORKSPACE}/logdir/\\${BUILD_TAG}, if \\${WORKSPACE} defined, else /scratch/\\$USER/kindtest) \"\n+  echo \"  -h Help\"\n+  exit $1\n+}\n+\n+k8s_version=\"1.15.11\"\n+kind_name=\"kind\"\n+if [[ -z \"$WORKSPACE\" ]]; then\n+  outdir=\"/scratch/$USER/kindtest\"\n+else\n+  outdir=\"${WORKSPACE}/logdir/${BUILD_TAG}\"\n+fi\n+\n+while getopts \":h:n:o:v:\" opt; do\n+  case $opt in\n+    v) k8s_version=\"${OPTARG}\"\n+    ;;\n+    n) kind_name=\"${OPTARG}\"\n+    ;;\n+    o) outdir=\"${OPTARG}\"\n+    ;;\n+    h) usage 0\n+    ;;\n+    *) usage 1\n+    ;;\n+  esac\n+done\n+\n+function versionprop {\n+  grep \"${1}=\" \"${scriptDir}/kindversions.properties\"|cut -d'=' -f2\n+}\n+\n+kind_image=$(versionprop \"${k8s_version}\")\n+if [ -z \"$kind_image\" ]; then\n+  echo \"Unsupported Kubernetes version: ${k8s_version}\"\n+  exit 1\n+fi\n+\n+mkdir -m777 -p \"${outdir}\"\n+export RESULT_ROOT=\"${outdir}/wl_k8s_test_results\"\n+if [ -d \"$RESULT_ROOT\" ]; then\n+  rm -Rf \"$RESULT_ROOT/*\"\n+else\n+  mkdir -m777 \"$RESULT_ROOT\"\n+fi\n+\n+export PV_ROOT=\"${outdir}/k8s-pvroot\"\n+if [ -d \"$PV_ROOT\" ]; then\n+  rm -Rf \"$PV_ROOT/*\"\n+else\n+  mkdir -m777 \"$PV_ROOT\"\n+fi\n+\n+echo 'Remove old cluster (if any)...'\n+kind delete cluster --name ${kind_name}\n+\n+kind_version=$(kind version)\n+kind_network='kind'\n+reg_name='kind-registry'\n+reg_port='5000'\n+case \"${kind_version}\" in\n+  \"kind v0.7.\"* | \"kind v0.6.\"* | \"kind v0.5.\"*)\n+    kind_network='bridge'\n+    ;;\n+esac\n+\n+echo 'Create registry container unless it already exists'\n+running=\"$(docker inspect -f '{{.State.Running}}' \"${reg_name}\" 2>/dev/null || true)\"\n+if [ \"${running}\" != 'true' ]; then\n+  docker run \\\n+    -d --restart=always -p \"${reg_port}:5000\" --name \"${reg_name}\" \\\n+    registry:2\n+fi\n+\n+reg_host=\"${reg_name}\"\n+if [ \"${kind_network}\" = \"bridge\" ]; then\n+    reg_host=\"$(docker inspect -f '{{.NetworkSettings.IPAddress}}' \"${reg_name}\")\"\n+fi\n+echo \"Registry Host: ${reg_host}\"\n+\n+echo 'Create a cluster with the local registry enabled in containerd'\n+cat <<EOF | kind create cluster --name \"${kind_name}\" --config=-\n+kind: Cluster\n+apiVersion: kind.x-k8s.io/v1alpha4\n+containerdConfigPatches:\n+- |-\n+  [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"localhost:${reg_port}\"]\n+    endpoint = [\"http://${reg_host}:${reg_port}\"]\n+nodes:\n+  - role: control-plane\n+    image: ${kind_image}\n+  - role: worker\n+    image: ${kind_image}\n+    extraMounts:\n+      - hostPath: ${PV_ROOT}\n+        containerPath: ${PV_ROOT}\n+EOF\n+\n+kubectl cluster-info --context \"kind-${kind_name}\"\n+kubectl get node -o wide", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90d2290d3e17dae90646fa5ab41f29409a197d25"}, "originalPosition": 115}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c56a58319a81b501d347c54d867674309b9d55bc", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c56a58319a81b501d347c54d867674309b9d55bc", "committedDate": "2020-05-06T16:19:27Z", "message": "Review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b644631d3e6a4f4db58dca730b07d4486c7d17d", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5b644631d3e6a4f4db58dca730b07d4486c7d17d", "committedDate": "2020-05-06T16:19:35Z", "message": "Merge branch 'newkindtest' of https://github.com/oracle/weblogic-kubernetes-operator into newkindtest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "021f75ba8e51677a16d032bb8958fc5fd4dd27a6", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/021f75ba8e51677a16d032bb8958fc5fd4dd27a6", "committedDate": "2020-05-06T16:26:49Z", "message": "Show how to install"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "206c7959edeba8c1e3d19b64037be43c26b58064", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/206c7959edeba8c1e3d19b64037be43c26b58064", "committedDate": "2020-05-06T19:50:06Z", "message": "Use kubeconfig option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e31b10ddd1dbff8581030e1c029969630cccafe1", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e31b10ddd1dbff8581030e1c029969630cccafe1", "committedDate": "2020-05-06T20:13:05Z", "message": "Clarify how to access cluster"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "464565c470588f64b1c0d2c0e42bab31a866d823", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/464565c470588f64b1c0d2c0e42bab31a866d823", "committedDate": "2020-05-06T20:55:40Z", "message": "Use kubeconfig option for delete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a96dd8bb844e2875d35e2e9e1446073fb7406d8", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0a96dd8bb844e2875d35e2e9e1446073fb7406d8", "committedDate": "2020-05-07T11:37:55Z", "message": "Merge remote-tracking branch 'origin/develop' into newkindtest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9c42075242226999b9e9999db26b44b744e051d", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b9c42075242226999b9e9999db26b44b744e051d", "committedDate": "2020-05-07T20:51:19Z", "message": "Merge remote-tracking branch 'origin/develop' into newkindtest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d91c444a7f862ed1eab6283a4ff6b91b82cc737c", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d91c444a7f862ed1eab6283a4ff6b91b82cc737c", "committedDate": "2020-05-07T20:57:44Z", "message": "Fix up NGINX test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f0023c3823c58279fa5059fb9174b6414a2537a", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3f0023c3823c58279fa5059fb9174b6414a2537a", "committedDate": "2020-05-07T21:49:22Z", "message": "Add test filter option"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODY1NDUw", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1626#pullrequestreview-407865450", "createdAt": "2020-05-07T21:55:40Z", "commit": {"oid": "3f0023c3823c58279fa5059fb9174b6414a2537a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf9e4f704246f9c8ca30dbddb352289bd2e7f95b", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/cf9e4f704246f9c8ca30dbddb352289bd2e7f95b", "committedDate": "2020-05-07T22:36:20Z", "message": "Remove unnecessary directories"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODkyMjIx", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1626#pullrequestreview-407892221", "createdAt": "2020-05-07T22:57:44Z", "commit": {"oid": "cf9e4f704246f9c8ca30dbddb352289bd2e7f95b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MjMyMDM0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1626#pullrequestreview-408232034", "createdAt": "2020-05-08T13:19:53Z", "commit": {"oid": "cf9e4f704246f9c8ca30dbddb352289bd2e7f95b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzoxOTo1M1rOGSlRLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzoxOTo1M1rOGSlRLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEzODE1Nw==", "bodyText": "RESULT_ROOT is set just above,  but never-the-less an rm -rf $ENV/* of env var looks a bit like playing with fire to me.  A \"set -u\" would make it a little safer maybe.  Putting the 'wl_k8s_test_results' string directly  in the rm expression makes it even safer IMO.  Ditto for PV_ROOT below.  This reduces chance that a future change  to the env var logic could leave a crater in the file system.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1626#discussion_r422138157", "createdAt": "2020-05-08T13:19:53Z", "author": {"login": "tbarnes-us"}, "path": "kindtest.sh", "diffHunk": "@@ -0,0 +1,187 @@\n+#!/bin/bash\n+# Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+#\n+# This script provisions a Kubernetes cluster using Kind (https://kind.sigs.k8s.io/) and runs the new\n+# integration test suite against that cluster.\n+#\n+# To install Kind:\n+#    curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.8.0/kind-$(uname)-amd64\n+#    chmod +x ./kind\n+#    mv ./kind /some-dir-in-your-PATH/kind\n+#\n+# Kind creates Kubernetes nodes on your local box by running each node as a Docker container. This\n+# makes it very easy to setup and tear down clusters. Presently, this script creates a cluster with a\n+# master node and a worker node. Each node will run the same Kubernetes version. Future enhancements to\n+# this script could allow for the configuration of a different number of nodes or for nodes to run a\n+# differing set of Kubernetes versions.\n+#\n+# Kind nodes do not have access to the Docker repository on the local machine. Therefore this script works\n+# around this limitation by running a Docker registry in a Docker container and connecting the networks so\n+# that the Kubernetes nodes have visibility to the registry. When you run tests, you will see that Docker\n+# images are pushed to this local registry and then are pulled to the Kubernetes nodes as needed.\n+# You can see the images on a node by running: \"docker exec -it kind-worker crictl images\" where kind-worker\n+# is the name of the Docker container.\n+#\n+# As of May 6, 2020, the tests are clean on Kubernetes 1.16 with the following JDK workarounds:\n+# 1. Maven must be run with OpenJDK 11.0.7, available here: https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/download/jdk-11.0.7%2B10/OpenJDK11U-jdk_x64_linux_11.0.7_10.tar.gz\n+#    This is because of a critical bug fix. Unfortunately, the Oracle JDK 11.0.7 release was based on an earlier build and doesn't have the fix.\n+# 2. The WebLogic Image Tool will not accept an OpenJDK JDK. Set WIT_JAVA_HOME to an Oracle JDK Java Home.\n+#    For example, \"export WIT_JAVA_HOME=/usr/java/jdk-11.0.7\" before running this script.\n+#\n+# If you want to access the cluster, use \"kubectl cluster-info --context kind-kind\" where the trailing \"kind\" is the value of the \"-n\" argument.\n+set -o errexit\n+\n+script=\"${BASH_SOURCE[0]}\"\n+scriptDir=\"$( cd \"$( dirname \"${script}\" )\" && pwd )\"\n+\n+function usage {\n+  echo \"usage: ${script} [-v <version>] [-n <name>] [-o <directory>] [-t <tests>] [-h]\"\n+  echo \"  -v Kubernetes version (optional) \"\n+  echo \"      (default: 1.15.11, supported values: 1.18, 1.18.2, 1.17, 1.17.5, 1.16, 1.16.9, 1.15, 1.15.11, 1.14, 1.14.10) \"\n+  echo \"  -n Kind cluster name (optional) \"\n+  echo \"      (default: kind) \"\n+  echo \"  -o Output directory (optional) \"\n+  echo \"      (default: \\${WORKSPACE}/logdir/\\${BUILD_TAG}, if \\${WORKSPACE} defined, else /scratch/\\${USER}/kindtest) \"\n+  echo \"  -t Test filter (optional) \"\n+  echo \"      (default: **/It*) \"\n+  echo \"  -h Help\"\n+  exit $1\n+}\n+\n+k8s_version=\"1.15.11\"\n+kind_name=\"kind\"\n+if [[ -z \"${WORKSPACE}\" ]]; then\n+  outdir=\"/scratch/${USER}/kindtest\"\n+else\n+  outdir=\"${WORKSPACE}/logdir/${BUILD_TAG}\"\n+fi\n+test_filter=\"**/It*\"\n+\n+while getopts \":h:n:o:t:v:\" opt; do\n+  case $opt in\n+    v) k8s_version=\"${OPTARG}\"\n+    ;;\n+    n) kind_name=\"${OPTARG}\"\n+    ;;\n+    o) outdir=\"${OPTARG}\"\n+    ;;\n+    t) test_filter=\"${OPTARG}\"\n+    ;;\n+    h) usage 0\n+    ;;\n+    *) usage 1\n+    ;;\n+  esac\n+done\n+\n+function versionprop {\n+  grep \"${1}=\" \"${scriptDir}/kindversions.properties\"|cut -d'=' -f2\n+}\n+\n+kind_image=$(versionprop \"${k8s_version}\")\n+if [ -z \"${kind_image}\" ]; then\n+  echo \"Unsupported Kubernetes version: ${k8s_version}\"\n+  exit 1\n+fi\n+\n+echo \"Using Kubernetes version: ${k8s_version}\"\n+\n+mkdir -m777 -p \"${outdir}\"\n+export RESULT_ROOT=\"${outdir}/wl_k8s_test_results\"\n+if [ -d \"${RESULT_ROOT}\" ]; then\n+  rm -Rf \"${RESULT_ROOT}/*\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf9e4f704246f9c8ca30dbddb352289bd2e7f95b"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4753, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}