{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MTgyNjk1", "number": 1530, "reviewThreads": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzo1MTowM1rODuYs0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMDoyMDoyOFrODvWhwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTY1Nzc3OnYy", "diffSide": "RIGHT", "path": "operator/src/main/resources/scripts/modelInImage.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzo1MTowM1rOGAWW7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDo1NDo0M1rOGAZEPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxOTUwMA==", "bodyText": "why sleep?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403019500", "createdAt": "2020-04-03T13:51:03Z", "author": {"login": "markxnelson"}, "path": "operator/src/main/resources/scripts/modelInImage.sh", "diffHunk": "@@ -576,6 +576,8 @@ function generateMergedModel() {\n   ${WDT_BINDIR}/validateModel.sh -oracle_home ${ORACLE_HOME} ${model_list} \\\n     ${archive_list} ${variable_list}  -domain_type ${WDT_DOMAIN_TYPE}  > ${WDT_OUTPUT}\n   ret=$?\n+  trace \"RETURNING $ret\"\n+  sleep 5", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2Mzg2OQ==", "bodyText": "Oops, removing it", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403063869", "createdAt": "2020-04-03T14:54:43Z", "author": {"login": "jshum2479"}, "path": "operator/src/main/resources/scripts/modelInImage.sh", "diffHunk": "@@ -576,6 +576,8 @@ function generateMergedModel() {\n   ${WDT_BINDIR}/validateModel.sh -oracle_home ${ORACLE_HOME} ${model_list} \\\n     ${archive_list} ${variable_list}  -domain_type ${WDT_DOMAIN_TYPE}  > ${WDT_OUTPUT}\n   ret=$?\n+  trace \"RETURNING $ret\"\n+  sleep 5", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxOTUwMA=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTY1ODQwOnYy", "diffSide": "RIGHT", "path": "src/integration-tests/bash/cleanup.sh", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzo1MToxM1rOGAWXUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxODoxNToyNVrOGAiMnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxOTYwMQ==", "bodyText": "copyright wrong", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403019601", "createdAt": "2020-04-03T13:51:13Z", "author": {"login": "markxnelson"}, "path": "src/integration-tests/bash/cleanup.sh", "diffHunk": "@@ -1,5 +1,5 @@\n #!/bin/bash\n-# Copyright (c) 2018, 2020, Oracle Corporation and/or its affiliates.\n+# Copyright (c) 2018, 2019, Oracle Corporation and/or its affiliates. All rights reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4NjM1Mg==", "bodyText": "changing it", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403086352", "createdAt": "2020-04-03T15:28:01Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/bash/cleanup.sh", "diffHunk": "@@ -1,5 +1,5 @@\n #!/bin/bash\n-# Copyright (c) 2018, 2020, Oracle Corporation and/or its affiliates.\n+# Copyright (c) 2018, 2019, Oracle Corporation and/or its affiliates. All rights reserved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxOTYwMQ=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIxMzQ3MQ==", "bodyText": "I am not getting it.  Why the PR view changes on cleanup.sh claiming as big differences. But when  https://github.com/oracle/weblogic-kubernetes-operator/compare/model-in-image...mii-introspect-test only show few lines of change (not sure how those spaces leaked in) and I am not seeing the 'Dry Run' anywhere.   Where it comes from ?  Should I close the PR and reopen?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403213471", "createdAt": "2020-04-03T18:15:25Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/bash/cleanup.sh", "diffHunk": "@@ -1,5 +1,5 @@\n #!/bin/bash\n-# Copyright (c) 2018, 2020, Oracle Corporation and/or its affiliates.\n+# Copyright (c) 2018, 2019, Oracle Corporation and/or its affiliates. All rights reserved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxOTYwMQ=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTY2MTQxOnYy", "diffSide": "RIGHT", "path": "src/integration-tests/bash/cleanup.sh", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzo1MTo1OVrOGAWZTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTowMzoyN1rOGAZcZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAyMDEwOQ==", "bodyText": "why a hashbang line?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403020109", "createdAt": "2020-04-03T13:51:59Z", "author": {"login": "markxnelson"}, "path": "src/integration-tests/bash/cleanup.sh", "diffHunk": "@@ -77,282 +60,128 @@ RESULT_DIR=\"$RESULT_ROOT/acceptance_test_tmp\"\n USER_PROJECTS_DIR=\"$RESULT_DIR/user-projects\"\n TMP_DIR=\"$RESULT_DIR/cleanup_tmp\"\n JOB_NAME=\"weblogic-command-job\"\n-DRY_RUN=\"false\"\n-[ \"$1\" = \"-dryrun\" ] && DRY_RUN=\"true\"\n-\n-echo @@ `timestamp` Starting cleanup.\n-script=\"${BASH_SOURCE[0]}\"\n-scriptDir=\"$( cd \"$(dirname \"${script}\")\" > /dev/null 2>&1 ; pwd -P)\"\n-source $PROJECT_ROOT/kubernetes/internal/utility.sh\n \n-if [ ! \"$1\" = \"\" ] && [ ! \"$1\" = \"-dryrun\" ]; then\n-  echo \"@@ `timestamp` Usage: '$(basename $0) [-dryrun]'. Pass -dryrun to skip deletes.\"\n-  exit 1  \n-fi\n \n function fail {\n-  echo @@ `timestamp` cleanup.sh: Error \"$@\"\n+  echo @@ cleanup.sh: Error \"$@\"\n   exit 1\n }\n \n-# use for kubectl delete of a specific name, exits silently if nothing found via 'get'\n-# usage: doDeleteByName [-n foobar] kind name\n-function doDeleteByName {\n-\n-  local tmpfile=\"/tmp/$(basename $0).doDeleteByName.$PPID.$SECONDS\"\n-\n-  kubectl get \"$@\" -o=jsonpath='{.items[*]}{.kind}{\" \"}{.metadata.name}{\" -n \"}{.metadata.namespace}{\"\\n\"}' > $tmpfile\n-\n-  # exit silently if nothing to delete\n-  [ `cat $tmpfile | wc -l` -eq 0 ] && return\n+#!/bin/bash", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA0OTc5MA==", "bodyText": "is this a bad merge?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403049790", "createdAt": "2020-04-03T14:34:44Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/bash/cleanup.sh", "diffHunk": "@@ -77,282 +60,128 @@ RESULT_DIR=\"$RESULT_ROOT/acceptance_test_tmp\"\n USER_PROJECTS_DIR=\"$RESULT_DIR/user-projects\"\n TMP_DIR=\"$RESULT_DIR/cleanup_tmp\"\n JOB_NAME=\"weblogic-command-job\"\n-DRY_RUN=\"false\"\n-[ \"$1\" = \"-dryrun\" ] && DRY_RUN=\"true\"\n-\n-echo @@ `timestamp` Starting cleanup.\n-script=\"${BASH_SOURCE[0]}\"\n-scriptDir=\"$( cd \"$(dirname \"${script}\")\" > /dev/null 2>&1 ; pwd -P)\"\n-source $PROJECT_ROOT/kubernetes/internal/utility.sh\n \n-if [ ! \"$1\" = \"\" ] && [ ! \"$1\" = \"-dryrun\" ]; then\n-  echo \"@@ `timestamp` Usage: '$(basename $0) [-dryrun]'. Pass -dryrun to skip deletes.\"\n-  exit 1  \n-fi\n \n function fail {\n-  echo @@ `timestamp` cleanup.sh: Error \"$@\"\n+  echo @@ cleanup.sh: Error \"$@\"\n   exit 1\n }\n \n-# use for kubectl delete of a specific name, exits silently if nothing found via 'get'\n-# usage: doDeleteByName [-n foobar] kind name\n-function doDeleteByName {\n-\n-  local tmpfile=\"/tmp/$(basename $0).doDeleteByName.$PPID.$SECONDS\"\n-\n-  kubectl get \"$@\" -o=jsonpath='{.items[*]}{.kind}{\" \"}{.metadata.name}{\" -n \"}{.metadata.namespace}{\"\\n\"}' > $tmpfile\n-\n-  # exit silently if nothing to delete\n-  [ `cat $tmpfile | wc -l` -eq 0 ] && return\n+#!/bin/bash", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAyMDEwOQ=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3MDA1Mg==", "bodyText": "actually, it's in the model-in-image branch, but removing it now.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403070052", "createdAt": "2020-04-03T15:03:27Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/bash/cleanup.sh", "diffHunk": "@@ -77,282 +60,128 @@ RESULT_DIR=\"$RESULT_ROOT/acceptance_test_tmp\"\n USER_PROJECTS_DIR=\"$RESULT_DIR/user-projects\"\n TMP_DIR=\"$RESULT_DIR/cleanup_tmp\"\n JOB_NAME=\"weblogic-command-job\"\n-DRY_RUN=\"false\"\n-[ \"$1\" = \"-dryrun\" ] && DRY_RUN=\"true\"\n-\n-echo @@ `timestamp` Starting cleanup.\n-script=\"${BASH_SOURCE[0]}\"\n-scriptDir=\"$( cd \"$(dirname \"${script}\")\" > /dev/null 2>&1 ; pwd -P)\"\n-source $PROJECT_ROOT/kubernetes/internal/utility.sh\n \n-if [ ! \"$1\" = \"\" ] && [ ! \"$1\" = \"-dryrun\" ]; then\n-  echo \"@@ `timestamp` Usage: '$(basename $0) [-dryrun]'. Pass -dryrun to skip deletes.\"\n-  exit 1  \n-fi\n \n function fail {\n-  echo @@ `timestamp` cleanup.sh: Error \"$@\"\n+  echo @@ cleanup.sh: Error \"$@\"\n   exit 1\n }\n \n-# use for kubectl delete of a specific name, exits silently if nothing found via 'get'\n-# usage: doDeleteByName [-n foobar] kind name\n-function doDeleteByName {\n-\n-  local tmpfile=\"/tmp/$(basename $0).doDeleteByName.$PPID.$SECONDS\"\n-\n-  kubectl get \"$@\" -o=jsonpath='{.items[*]}{.kind}{\" \"}{.metadata.name}{\" -n \"}{.metadata.namespace}{\"\\n\"}' > $tmpfile\n-\n-  # exit silently if nothing to delete\n-  [ `cat $tmpfile | wc -l` -eq 0 ] && return\n+#!/bin/bash", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAyMDEwOQ=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTg4NDg4OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDo0MzowN1rOGAYkhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTowMTowN1rOGAZWMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA1NTc0OA==", "bodyText": "This should use ${test_home}/mii/workdir throughout - same location as the rest of the test's temp files...", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403055748", "createdAt": "2020-04-03T14:43:07Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -123,7 +138,7 @@ function cleanupMajor() {\n \n   rm -fr /tmp/introspect\n   mkdir -p $test_home || exit 1\n-\n+  rm -fr ${SCRIPTPATH}/mii/workdir", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2ODQ2NA==", "bodyText": "changed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403068464", "createdAt": "2020-04-03T15:01:07Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -123,7 +138,7 @@ function cleanupMajor() {\n \n   rm -fr /tmp/introspect\n   mkdir -p $test_home || exit 1\n-\n+  rm -fr ${SCRIPTPATH}/mii/workdir", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA1NTc0OA=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTk0NzkwOnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDo1NzoxOVrOGAZLpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDo1NzoxOVrOGAZLpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2NTc2Ng==", "bodyText": "This should be 'PersistentVolume'.  It's interesting that 'Image' works.  The test does not create an Image in its default path.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403065766", "createdAt": "2020-04-03T14:57:19Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -99,6 +99,21 @@ export ALLOW_DYNAMIC_CLUSTER_IN_FMW=${ALLOW_DYNAMIC_CLUSTER_IN_FMW:-false}\n # whether this test run is expecting a domain validation error\n export EXPECT_INVALID_DOMAIN=${EXPECT_INVALID_DOMAIN:-false}\n \n+DOMAIN_SOURCE_TYPE=${DOMAIN_SOURCE_TYPE:-Image}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTk1Nzk4OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDo1OToyOFrOGAZR1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxOTo1ODo1MVrOGAmslg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2NzM1MA==", "bodyText": "WDT_DOMAIN_TYPE only needed for FromModel path.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403067350", "createdAt": "2020-04-03T14:59:28Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -99,6 +99,21 @@ export ALLOW_DYNAMIC_CLUSTER_IN_FMW=${ALLOW_DYNAMIC_CLUSTER_IN_FMW:-false}\n # whether this test run is expecting a domain validation error\n export EXPECT_INVALID_DOMAIN=${EXPECT_INVALID_DOMAIN:-false}\n \n+DOMAIN_SOURCE_TYPE=${DOMAIN_SOURCE_TYPE:-Image}\n+export DOMAIN_SOURCE_TYPE=${DOMAIN_SOURCE_TYPE}\n+WDT_DOMAIN_TYPE=${WDT_DOMAIN_TYPE:-WLS}\n+export WDT_DOMAIN_TYPE=${WDT_DOMAIN_TYPE}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3MjI3Mw==", "bodyText": "I changed the yaml template file to have the environment variable", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403072273", "createdAt": "2020-04-03T15:06:51Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -99,6 +99,21 @@ export ALLOW_DYNAMIC_CLUSTER_IN_FMW=${ALLOW_DYNAMIC_CLUSTER_IN_FMW:-false}\n # whether this test run is expecting a domain validation error\n export EXPECT_INVALID_DOMAIN=${EXPECT_INVALID_DOMAIN:-false}\n \n+DOMAIN_SOURCE_TYPE=${DOMAIN_SOURCE_TYPE:-Image}\n+export DOMAIN_SOURCE_TYPE=${DOMAIN_SOURCE_TYPE}\n+WDT_DOMAIN_TYPE=${WDT_DOMAIN_TYPE:-WLS}\n+export WDT_DOMAIN_TYPE=${WDT_DOMAIN_TYPE}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2NzM1MA=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEyNDc4Mg==", "bodyText": "Note that the yamlt template files can handle default macros - you can modify them so that ${WDT_DOMAIN_TYPE} becomes ${WDT_DOMAIN_TYPE:-WLS}.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403124782", "createdAt": "2020-04-03T16:23:24Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -99,6 +99,21 @@ export ALLOW_DYNAMIC_CLUSTER_IN_FMW=${ALLOW_DYNAMIC_CLUSTER_IN_FMW:-false}\n # whether this test run is expecting a domain validation error\n export EXPECT_INVALID_DOMAIN=${EXPECT_INVALID_DOMAIN:-false}\n \n+DOMAIN_SOURCE_TYPE=${DOMAIN_SOURCE_TYPE:-Image}\n+export DOMAIN_SOURCE_TYPE=${DOMAIN_SOURCE_TYPE}\n+WDT_DOMAIN_TYPE=${WDT_DOMAIN_TYPE:-WLS}\n+export WDT_DOMAIN_TYPE=${WDT_DOMAIN_TYPE}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2NzM1MA=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE2MzE4MA==", "bodyText": "Once you do that, you don't need to set WDT_DOMAIN_TYPE globally to something else unless going through the MII path...", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403163180", "createdAt": "2020-04-03T17:17:31Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -99,6 +99,21 @@ export ALLOW_DYNAMIC_CLUSTER_IN_FMW=${ALLOW_DYNAMIC_CLUSTER_IN_FMW:-false}\n # whether this test run is expecting a domain validation error\n export EXPECT_INVALID_DOMAIN=${EXPECT_INVALID_DOMAIN:-false}\n \n+DOMAIN_SOURCE_TYPE=${DOMAIN_SOURCE_TYPE:-Image}\n+export DOMAIN_SOURCE_TYPE=${DOMAIN_SOURCE_TYPE}\n+WDT_DOMAIN_TYPE=${WDT_DOMAIN_TYPE:-WLS}\n+export WDT_DOMAIN_TYPE=${WDT_DOMAIN_TYPE}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2NzM1MA=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI4NzE5MA==", "bodyText": "done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403287190", "createdAt": "2020-04-03T19:58:51Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -99,6 +99,21 @@ export ALLOW_DYNAMIC_CLUSTER_IN_FMW=${ALLOW_DYNAMIC_CLUSTER_IN_FMW:-false}\n # whether this test run is expecting a domain validation error\n export EXPECT_INVALID_DOMAIN=${EXPECT_INVALID_DOMAIN:-false}\n \n+DOMAIN_SOURCE_TYPE=${DOMAIN_SOURCE_TYPE:-Image}\n+export DOMAIN_SOURCE_TYPE=${DOMAIN_SOURCE_TYPE}\n+WDT_DOMAIN_TYPE=${WDT_DOMAIN_TYPE:-WLS}\n+export WDT_DOMAIN_TYPE=${WDT_DOMAIN_TYPE}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2NzM1MA=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTk4ODMyOnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTowNjo0NlrOGAZk2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNzoyMzowNVrOGAfa9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3MjIxNw==", "bodyText": "If we don't use custom overrides for mii, than this function should never be called in the first place when mii is in the picture.  Minimally, it should exit right at the beginning.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403072217", "createdAt": "2020-04-03T15:06:46Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -304,6 +320,11 @@ function deployCustomOverridesConfigMap() {\n      ${SCRIPTPATH}/util_subst.sh -g ${filname} ${cmdir}/${bfilname}  || exit 1\n   done\n \n+  # We don't use overrides for MII", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3NTA3MA==", "bodyText": "It won't work if it is not called. The operator has default config overrides which requires version.txt.  That's why I only clean up others to avoid duplicating the block and if conditions ..", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403075070", "createdAt": "2020-04-03T15:11:00Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -304,6 +320,11 @@ function deployCustomOverridesConfigMap() {\n      ${SCRIPTPATH}/util_subst.sh -g ${filname} ${cmdir}/${bfilname}  || exit 1\n   done\n \n+  # We don't use overrides for MII", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3MjIxNw=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEwMTU2NQ==", "bodyText": "i don't understand.  The operator's 'internal overrides' have no version.txt.  The custom overrides config map has that file, and custom overrides config map should not be set up for the MII path.  In fact, if you add that to the MII domain resource, the domain deployment is expected to fail (since custom overrides aren't supported with MII).", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403101565", "createdAt": "2020-04-03T15:51:19Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -304,6 +320,11 @@ function deployCustomOverridesConfigMap() {\n      ${SCRIPTPATH}/util_subst.sh -g ${filname} ${cmdir}/${bfilname}  || exit 1\n   done\n \n+  # We don't use overrides for MII", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3MjIxNw=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEyOTc1Nw==", "bodyText": "Yes, we do override--version.txtt  If I don't call this it won't creates it in the location and the introspect failed.\n[2020-04-03T16:27:43.390 UTC][][SEVERE] Error: Exiting test due to domainValid from introspecting domain is false!\n@[2020-04-03T16:27:39.862 UTC][introspectDomain.py:277][FINE] Printing file /tmp/introspect/domain1/topology.yaml\n\n\n\n/tmp/introspect/domain1/topology.yaml\ndomainValid: false\nvalidationErrors:\n\n\n\n\n\"Error, Required file, '/weblogic-operator/config-overrides/version.txt', does not exist\"\n\n\n\n\nEOF", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403129757", "createdAt": "2020-04-03T16:30:51Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -304,6 +320,11 @@ function deployCustomOverridesConfigMap() {\n      ${SCRIPTPATH}/util_subst.sh -g ${filname} ${cmdir}/${bfilname}  || exit 1\n   done\n \n+  # We don't use overrides for MII", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3MjIxNw=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE2NzkwMw==", "bodyText": "OK. It turns out the test always mounts the config map even though it isn't used, and the introspector takes a different action when it sees this mount.  This is a side effect of the fact that the test doesn't actually run the operator.  I guess this is a fine work-around - we're not trying to emulate the operator perfectly.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403167903", "createdAt": "2020-04-03T17:22:57Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -304,6 +320,11 @@ function deployCustomOverridesConfigMap() {\n      ${SCRIPTPATH}/util_subst.sh -g ${filname} ${cmdir}/${bfilname}  || exit 1\n   done\n \n+  # We don't use overrides for MII", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3MjIxNw=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE2Nzk5MQ==", "bodyText": "Resolving.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403167991", "createdAt": "2020-04-03T17:23:05Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -304,6 +320,11 @@ function deployCustomOverridesConfigMap() {\n      ${SCRIPTPATH}/util_subst.sh -g ${filname} ${cmdir}/${bfilname}  || exit 1\n   done\n \n+  # We don't use overrides for MII", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3MjIxNw=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTk5ODM0OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTowODo1OFrOGAZqxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwMDoxMTowOVrOGA5Jtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3MzczNQ==", "bodyText": "If this fails, cat the output to stdout, and then exit after that.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403073735", "createdAt": "2020-04-03T15:08:58Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -393,6 +420,48 @@ function deployCreateDomainJobPod() {\n   waitForPod $pod_name\n }\n \n+#\n+# Create the model in image docker image\n+#\n+function createMII_Image() {\n+  trace \"Info: Create MII Image\"\n+\n+  mkdir -p ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cp ${SCRIPTPATH}/mii/models/*  ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cd ${SCRIPTPATH}/mii/workdir || exit 1\n+  export WORKDIR=${SCRIPTPATH}/mii/workdir || exit 1\n+  export MODEL_IMAGE_TAG=it || exit 1\n+  export MODEL_IMAGE_NAME=model-in-image || exit 1\n+\n+  docker rmi ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG} --force > /dev/null 2>&1\n+\n+  trace \"Info: Downloading WDT and WIT...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_download.sh \\\n+   > ${test_home}/miibuild_download.out 2>&1 || exit 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3NzgxNg==", "bodyText": "done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403077816", "createdAt": "2020-04-03T15:15:13Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -393,6 +420,48 @@ function deployCreateDomainJobPod() {\n   waitForPod $pod_name\n }\n \n+#\n+# Create the model in image docker image\n+#\n+function createMII_Image() {\n+  trace \"Info: Create MII Image\"\n+\n+  mkdir -p ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cp ${SCRIPTPATH}/mii/models/*  ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cd ${SCRIPTPATH}/mii/workdir || exit 1\n+  export WORKDIR=${SCRIPTPATH}/mii/workdir || exit 1\n+  export MODEL_IMAGE_TAG=it || exit 1\n+  export MODEL_IMAGE_NAME=model-in-image || exit 1\n+\n+  docker rmi ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG} --force > /dev/null 2>&1\n+\n+  trace \"Info: Downloading WDT and WIT...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_download.sh \\\n+   > ${test_home}/miibuild_download.out 2>&1 || exit 1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3MzczNQ=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU4OTU1OA==", "bodyText": "I don't see any cat after the failure.  It looks like it just exits immediately without a cat of miibuild_download.out", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403589558", "createdAt": "2020-04-05T00:11:09Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -393,6 +420,48 @@ function deployCreateDomainJobPod() {\n   waitForPod $pod_name\n }\n \n+#\n+# Create the model in image docker image\n+#\n+function createMII_Image() {\n+  trace \"Info: Create MII Image\"\n+\n+  mkdir -p ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cp ${SCRIPTPATH}/mii/models/*  ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cd ${SCRIPTPATH}/mii/workdir || exit 1\n+  export WORKDIR=${SCRIPTPATH}/mii/workdir || exit 1\n+  export MODEL_IMAGE_TAG=it || exit 1\n+  export MODEL_IMAGE_NAME=model-in-image || exit 1\n+\n+  docker rmi ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG} --force > /dev/null 2>&1\n+\n+  trace \"Info: Downloading WDT and WIT...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_download.sh \\\n+   > ${test_home}/miibuild_download.out 2>&1 || exit 1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3MzczNQ=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDAwMDc4OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTowOTozM1rOGAZsUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToxNDo0MFrOGAZ5Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3NDEzMQ==", "bodyText": "If this fails, cat the output to stdout, and then exit after that.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403074131", "createdAt": "2020-04-03T15:09:33Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -393,6 +420,48 @@ function deployCreateDomainJobPod() {\n   waitForPod $pod_name\n }\n \n+#\n+# Create the model in image docker image\n+#\n+function createMII_Image() {\n+  trace \"Info: Create MII Image\"\n+\n+  mkdir -p ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cp ${SCRIPTPATH}/mii/models/*  ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cd ${SCRIPTPATH}/mii/workdir || exit 1\n+  export WORKDIR=${SCRIPTPATH}/mii/workdir || exit 1\n+  export MODEL_IMAGE_TAG=it || exit 1\n+  export MODEL_IMAGE_NAME=model-in-image || exit 1\n+\n+  docker rmi ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG} --force > /dev/null 2>&1\n+\n+  trace \"Info: Downloading WDT and WIT...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_download.sh \\\n+   > ${test_home}/miibuild_download.out 2>&1 || exit 1\n+\n+  trace \"Info: Launching WIT to build the image...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_image_model.sh \\\n+   > ${test_home}/miibuild_image.out  2>&1  || exit 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3NzQ2Mg==", "bodyText": "done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403077462", "createdAt": "2020-04-03T15:14:40Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -393,6 +420,48 @@ function deployCreateDomainJobPod() {\n   waitForPod $pod_name\n }\n \n+#\n+# Create the model in image docker image\n+#\n+function createMII_Image() {\n+  trace \"Info: Create MII Image\"\n+\n+  mkdir -p ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cp ${SCRIPTPATH}/mii/models/*  ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cd ${SCRIPTPATH}/mii/workdir || exit 1\n+  export WORKDIR=${SCRIPTPATH}/mii/workdir || exit 1\n+  export MODEL_IMAGE_TAG=it || exit 1\n+  export MODEL_IMAGE_NAME=model-in-image || exit 1\n+\n+  docker rmi ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG} --force > /dev/null 2>&1\n+\n+  trace \"Info: Downloading WDT and WIT...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_download.sh \\\n+   > ${test_home}/miibuild_download.out 2>&1 || exit 1\n+\n+  trace \"Info: Launching WIT to build the image...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_image_model.sh \\\n+   > ${test_home}/miibuild_image.out  2>&1  || exit 1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3NDEzMQ=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDAzODIwOnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToxODo1MlrOGAaECw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODoxNzozOFrOGBkKWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4MDIwMw==", "bodyText": "Several of the tested overrides are internal overrides - all of the 'ListenAddress' and 'Log' related ones.\nMaybe we should test those on the model path?\nIf so, the test needs to be made a little smarter so that internal overrides are tested whilst custom overrides are not.    Perhaps split them into two different \"inputt\" files - one for internal and one for external.  The combine the files into a temporary file for the PV path, and only copy one of the files over for the Model path.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403080203", "createdAt": "2020-04-03T15:18:52Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -955,7 +1030,9 @@ checkWLVersionChecks\n # Check admin-server pod log and also call on-line WLST to check if\n # automatic and custom overrides are taking effect in the bean tree:\n \n-checkOverrides\n+if [ \"${DOMAIN_SOURCE_TYPE}\" != \"FromModel\" ] ; then\n+  checkOverrides", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5MTAzNQ==", "bodyText": "This will take a little bit more time, I need to take a look of what it is being tested first.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403091035", "createdAt": "2020-04-03T15:34:40Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -955,7 +1030,9 @@ checkWLVersionChecks\n # Check admin-server pod log and also call on-line WLST to check if\n # automatic and custom overrides are taking effect in the bean tree:\n \n-checkOverrides\n+if [ \"${DOMAIN_SOURCE_TYPE}\" != \"FromModel\" ] ; then\n+  checkOverrides", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4MDIwMw=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5OTU3Ng==", "bodyText": "More on this.  It looks like the test is not testing 'model updates'.   E.g. the custom overrides from the test  should be passed in as config map updates and tested to make sure that they actually occurred.   So one alternative would be:\n\nModify the check bean program's 'inputt' file format so that fields that are from internal overrides are tagged to indicate they always come from an internal override.\nModify the mbean checker so that it acts differently in FromModel mode and reacts to the tag differently accordingly.   E.g. the tag makes no difference in PV mode, but in FromModel mode, it expects things that don't have the 'IO' internal-override tag to have the expected value in both the live and the static mbean trees, instead of just in the live tree.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403099576", "createdAt": "2020-04-03T15:47:58Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -955,7 +1030,9 @@ checkWLVersionChecks\n # Check admin-server pod log and also call on-line WLST to check if\n # automatic and custom overrides are taking effect in the bean tree:\n \n-checkOverrides\n+if [ \"${DOMAIN_SOURCE_TYPE}\" != \"FromModel\" ] ; then\n+  checkOverrides", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4MDIwMw=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEwMjIyNg==", "bodyText": "The current test is only one pass, i.e. no update test case.  This is one area that I agreed we should spend some effort into.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403102226", "createdAt": "2020-04-03T15:52:26Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -955,7 +1030,9 @@ checkWLVersionChecks\n # Check admin-server pod log and also call on-line WLST to check if\n # automatic and custom overrides are taking effect in the bean tree:\n \n-checkOverrides\n+if [ \"${DOMAIN_SOURCE_TYPE}\" != \"FromModel\" ] ; then\n+  checkOverrides", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4MDIwMw=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzExOTEyNg==", "bodyText": "I'm not advocating a second pass.  Just a single pass that includes verification that the settings from the config map took effect, and that verifies the internal overrides took effect.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403119126", "createdAt": "2020-04-03T16:16:45Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -955,7 +1030,9 @@ checkWLVersionChecks\n # Check admin-server pod log and also call on-line WLST to check if\n # automatic and custom overrides are taking effect in the bean tree:\n \n-checkOverrides\n+if [ \"${DOMAIN_SOURCE_TYPE}\" != \"FromModel\" ] ; then\n+  checkOverrides", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4MDIwMw=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI4ODA4Ng==", "bodyText": "Yes, it's already there.  The configmap is actually coded in a way that works for both non mii case", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403288086", "createdAt": "2020-04-03T19:59:58Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -955,7 +1030,9 @@ checkWLVersionChecks\n # Check admin-server pod log and also call on-line WLST to check if\n # automatic and custom overrides are taking effect in the bean tree:\n \n-checkOverrides\n+if [ \"${DOMAIN_SOURCE_TYPE}\" != \"FromModel\" ] ; then\n+  checkOverrides", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4MDIwMw=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5OTkxMA==", "bodyText": "Where's the verification that the listen address, etc, are as expected?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403299910", "createdAt": "2020-04-03T20:16:10Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -955,7 +1030,9 @@ checkWLVersionChecks\n # Check admin-server pod log and also call on-line WLST to check if\n # automatic and custom overrides are taking effect in the bean tree:\n \n-checkOverrides\n+if [ \"${DOMAIN_SOURCE_TYPE}\" != \"FromModel\" ] ; then\n+  checkOverrides", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4MDIwMw=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMwMzAyOQ==", "bodyText": "Not for listening address, but the data sources are there.  We can change the override to check the internal ones only for mii", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403303029", "createdAt": "2020-04-03T20:20:10Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -955,7 +1030,9 @@ checkWLVersionChecks\n # Check admin-server pod log and also call on-line WLST to check if\n # automatic and custom overrides are taking effect in the bean tree:\n \n-checkOverrides\n+if [ \"${DOMAIN_SOURCE_TYPE}\" != \"FromModel\" ] ; then\n+  checkOverrides", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4MDIwMw=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMwNzk3MA==", "bodyText": "Please do.  See my original suggestion at the beginning of this thread.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403307970", "createdAt": "2020-04-03T20:26:48Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -955,7 +1030,9 @@ checkWLVersionChecks\n # Check admin-server pod log and also call on-line WLST to check if\n # automatic and custom overrides are taking effect in the bean tree:\n \n-checkOverrides\n+if [ \"${DOMAIN_SOURCE_TYPE}\" != \"FromModel\" ] ; then\n+  checkOverrides", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4MDIwMw=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5NDIzNQ==", "bodyText": "Looks good now.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404294235", "createdAt": "2020-04-06T18:17:38Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -955,7 +1030,9 @@ checkWLVersionChecks\n # Check admin-server pod log and also call on-line WLST to check if\n # automatic and custom overrides are taking effect in the bean tree:\n \n-checkOverrides\n+if [ \"${DOMAIN_SOURCE_TYPE}\" != \"FromModel\" ] ; then\n+  checkOverrides", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4MDIwMw=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 151}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDA1MTUxOnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToyMjoxMVrOGAaMZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTozMTo0N1rOGAameA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4MjM0MA==", "bodyText": "When setting up env vars that are very specific to external scripts, consider encasing the entire set of calls into a \"(\" ... script calls ... \")\".  This will make it clear (self documenting) they're scoped only for the external script and will make sure they don't accidentally leak to other calls to the external script in the global scope.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403082340", "createdAt": "2020-04-03T15:22:11Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -393,6 +420,48 @@ function deployCreateDomainJobPod() {\n   waitForPod $pod_name\n }\n \n+#\n+# Create the model in image docker image\n+#\n+function createMII_Image() {\n+  trace \"Info: Create MII Image\"\n+\n+  mkdir -p ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cp ${SCRIPTPATH}/mii/models/*  ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cd ${SCRIPTPATH}/mii/workdir || exit 1\n+  export WORKDIR=${SCRIPTPATH}/mii/workdir || exit 1\n+  export MODEL_IMAGE_TAG=it || exit 1\n+  export MODEL_IMAGE_NAME=model-in-image || exit 1\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4OTAxNg==", "bodyText": "done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403089016", "createdAt": "2020-04-03T15:31:47Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -393,6 +420,48 @@ function deployCreateDomainJobPod() {\n   waitForPod $pod_name\n }\n \n+#\n+# Create the model in image docker image\n+#\n+function createMII_Image() {\n+  trace \"Info: Create MII Image\"\n+\n+  mkdir -p ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cp ${SCRIPTPATH}/mii/models/*  ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cd ${SCRIPTPATH}/mii/workdir || exit 1\n+  export WORKDIR=${SCRIPTPATH}/mii/workdir || exit 1\n+  export MODEL_IMAGE_TAG=it || exit 1\n+  export MODEL_IMAGE_NAME=model-in-image || exit 1\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4MjM0MA=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDA3NTY4OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToyNzo1MFrOGAabmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTozMToxNFrOGAalDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4NjIzNA==", "bodyText": "Right now, by default, this always builds even if a local image with the given image-name/tag already exists - it should probably set MODEL_IMAGE_BUILD to 'when-missing'.  It's my understanding this is the general directive for all tests.\nSeparately, I've been asked to change the default of this script to 'when-missing' - but I won't get to that until at least next week.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403086234", "createdAt": "2020-04-03T15:27:50Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -393,6 +420,48 @@ function deployCreateDomainJobPod() {\n   waitForPod $pod_name\n }\n \n+#\n+# Create the model in image docker image\n+#\n+function createMII_Image() {\n+  trace \"Info: Create MII Image\"\n+\n+  mkdir -p ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cp ${SCRIPTPATH}/mii/models/*  ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cd ${SCRIPTPATH}/mii/workdir || exit 1\n+  export WORKDIR=${SCRIPTPATH}/mii/workdir || exit 1\n+  export MODEL_IMAGE_TAG=it || exit 1\n+  export MODEL_IMAGE_NAME=model-in-image || exit 1\n+\n+  docker rmi ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG} --force > /dev/null 2>&1\n+\n+  trace \"Info: Downloading WDT and WIT...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_download.sh \\\n+   > ${test_home}/miibuild_download.out 2>&1 || exit 1\n+\n+  trace \"Info: Launching WIT to build the image...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_image_model.sh \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4ODY1NA==", "bodyText": "no problem, added now.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403088654", "createdAt": "2020-04-03T15:31:14Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -393,6 +420,48 @@ function deployCreateDomainJobPod() {\n   waitForPod $pod_name\n }\n \n+#\n+# Create the model in image docker image\n+#\n+function createMII_Image() {\n+  trace \"Info: Create MII Image\"\n+\n+  mkdir -p ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cp ${SCRIPTPATH}/mii/models/*  ${SCRIPTPATH}/mii/workdir/models || exit 1\n+  cd ${SCRIPTPATH}/mii/workdir || exit 1\n+  export WORKDIR=${SCRIPTPATH}/mii/workdir || exit 1\n+  export MODEL_IMAGE_TAG=it || exit 1\n+  export MODEL_IMAGE_NAME=model-in-image || exit 1\n+\n+  docker rmi ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG} --force > /dev/null 2>&1\n+\n+  trace \"Info: Downloading WDT and WIT...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_download.sh \\\n+   > ${test_home}/miibuild_download.out 2>&1 || exit 1\n+\n+  trace \"Info: Launching WIT to build the image...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_image_model.sh \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4NjIzNA=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDEyOTMxOnYy", "diffSide": "RIGHT", "path": "src/integration-tests/bash/cleanup.sh", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTo0MDoxOVrOGAa9Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNzoxNjoyMlrOGAfD7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5NDc5MQ==", "bodyText": "Definitely looks like a bad merge or some other git issue.   It looks like your diff here is vs. develop instead of MII.    Develop has  the 'Dry run' stuff - it's the latest and newer than what's in MII.  Where-as the version you changed does not.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403094791", "createdAt": "2020-04-03T15:40:19Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/bash/cleanup.sh", "diffHunk": "@@ -20,34 +20,21 @@\n #                   given lease on a failure.\n #\n #   SHARED_CLUSTER  Set this to true if you want cleanup to delete tiller\n-#                   TBD tiller delete is disabled \n #\n #   DELETE_FILES    Delete local test files, and launch a job to delete PV\n #                   hosted test files (default true).\n #\n #   FAST_DELETE     Set to \"--grace-period=1 --timeout=1\" to speedup\n #                   deletes and skip phase 2.\n #\n-# Dry run option: \n-#\n-#   To show what the script would do without actually doing\n-#   any deletes pass \"-dryrun\" as the first parameter.\n-#\n # --------------------", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEwMjkwMw==", "bodyText": "Not sure why, it shouldn't have those now.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403102903", "createdAt": "2020-04-03T15:53:31Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/bash/cleanup.sh", "diffHunk": "@@ -20,34 +20,21 @@\n #                   given lease on a failure.\n #\n #   SHARED_CLUSTER  Set this to true if you want cleanup to delete tiller\n-#                   TBD tiller delete is disabled \n #\n #   DELETE_FILES    Delete local test files, and launch a job to delete PV\n #                   hosted test files (default true).\n #\n #   FAST_DELETE     Set to \"--grace-period=1 --timeout=1\" to speedup\n #                   deletes and skip phase 2.\n #\n-# Dry run option: \n-#\n-#   To show what the script would do without actually doing\n-#   any deletes pass \"-dryrun\" as the first parameter.\n-#\n # --------------------", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5NDc5MQ=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEyMTUwMw==", "bodyText": "The diff still looks bad.   'Dry run' should not have been removed.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403121503", "createdAt": "2020-04-03T16:19:31Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/bash/cleanup.sh", "diffHunk": "@@ -20,34 +20,21 @@\n #                   given lease on a failure.\n #\n #   SHARED_CLUSTER  Set this to true if you want cleanup to delete tiller\n-#                   TBD tiller delete is disabled \n #\n #   DELETE_FILES    Delete local test files, and launch a job to delete PV\n #                   hosted test files (default true).\n #\n #   FAST_DELETE     Set to \"--grace-period=1 --timeout=1\" to speedup\n #                   deletes and skip phase 2.\n #\n-# Dry run option: \n-#\n-#   To show what the script would do without actually doing\n-#   any deletes pass \"-dryrun\" as the first parameter.\n-#\n # --------------------", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5NDc5MQ=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzNDEzMw==", "bodyText": "I am comparing with origin/model-in-image and I don't see Dry Run", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403134133", "createdAt": "2020-04-03T16:37:55Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/bash/cleanup.sh", "diffHunk": "@@ -20,34 +20,21 @@\n #                   given lease on a failure.\n #\n #   SHARED_CLUSTER  Set this to true if you want cleanup to delete tiller\n-#                   TBD tiller delete is disabled \n #\n #   DELETE_FILES    Delete local test files, and launch a job to delete PV\n #                   hosted test files (default true).\n #\n #   FAST_DELETE     Set to \"--grace-period=1 --timeout=1\" to speedup\n #                   deletes and skip phase 2.\n #\n-# Dry run option: \n-#\n-#   To show what the script would do without actually doing\n-#   any deletes pass \"-dryrun\" as the first parameter.\n-#\n # --------------------", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5NDc5MQ=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE2MjA5Mw==", "bodyText": "But the diff is showing dryRun - so something is definitely wrong.   This is somehow comparing to the develop branch version instead of the MII version.   Note that the develop branch version is newer.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403162093", "createdAt": "2020-04-03T17:16:22Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/bash/cleanup.sh", "diffHunk": "@@ -20,34 +20,21 @@\n #                   given lease on a failure.\n #\n #   SHARED_CLUSTER  Set this to true if you want cleanup to delete tiller\n-#                   TBD tiller delete is disabled \n #\n #   DELETE_FILES    Delete local test files, and launch a job to delete PV\n #                   hosted test files (default true).\n #\n #   FAST_DELETE     Set to \"--grace-period=1 --timeout=1\" to speedup\n #                   deletes and skip phase 2.\n #\n-# Dry run option: \n-#\n-#   To show what the script would do without actually doing\n-#   any deletes pass \"-dryrun\" as the first parameter.\n-#\n # --------------------", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5NDc5MQ=="}, "originalCommit": {"oid": "ab2f420385db2bbbb27452ab35586e3299ccabc6"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDI4NTI5OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/bash/cleanup.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoxNzowMVrOGAcc8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoxNzowMVrOGAcc8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzExOTM0NA==", "bodyText": "still wrong :) remove \"All rights reserved.\"", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403119344", "createdAt": "2020-04-03T16:17:01Z", "author": {"login": "markxnelson"}, "path": "src/integration-tests/bash/cleanup.sh", "diffHunk": "@@ -1,5 +1,5 @@\n #!/bin/bash\n-# Copyright (c) 2018, 2020, Oracle Corporation and/or its affiliates.\n+# Copyright (c) 2018, 2020, Oracle Corporation and/or its affiliates. All rights reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "386cdcb06438a7bceeda12fde3a18541e66a19de"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDU5NjQ5OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNzoxOTo0MFrOGAfPfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNzoxOTo0MFrOGAfPfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE2NTA1NA==", "bodyText": "You don't need this line now because test_home is /tmp/introspect, and /tmp/introspect is removed two lines above.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403165054", "createdAt": "2020-04-03T17:19:40Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -123,7 +138,7 @@ function cleanupMajor() {\n \n   rm -fr /tmp/introspect\n   mkdir -p $test_home || exit 1\n-\n+  rm -fr ${test_home}/mii/workdir", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37008692f204477a57d8f692b38ac15ca4b9a51e"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMzgxNzg0OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/mii/models/domain1.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMzo1OToxOFrOGA42ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODo0Njo0OVrOGBlN4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU4NDYzNQ==", "bodyText": "you need copyright and license statements in yaml files\nunless there is some technical reason they cannot be here\n@ddsharpe i assume WDT can handle comments, right? i believe i have WDT models with comments in them", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403584635", "createdAt": "2020-04-04T23:59:18Z", "author": {"login": "markxnelson"}, "path": "src/integration-tests/introspector/mii/models/domain1.yaml", "diffHunk": "@@ -0,0 +1,105 @@\n+domainInfo:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a5cb386b566436e17126766a9328e67d7feda4b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxMTUyMQ==", "bodyText": "Fixed missing copyrights", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404311521", "createdAt": "2020-04-06T18:46:49Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/mii/models/domain1.yaml", "diffHunk": "@@ -0,0 +1,105 @@\n+domainInfo:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU4NDYzNQ=="}, "originalCommit": {"oid": "2a5cb386b566436e17126766a9328e67d7feda4b"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMzgxODg5OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/mii/wdtconfigmap/domain1.10.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMzo1OTozN1rOGA42-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODo0Njo1OVrOGBlORw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU4NDc2Mg==", "bodyText": "need copyright", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403584762", "createdAt": "2020-04-04T23:59:37Z", "author": {"login": "markxnelson"}, "path": "src/integration-tests/introspector/mii/wdtconfigmap/domain1.10.yaml", "diffHunk": "@@ -0,0 +1,9 @@\n+resources:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a5cb386b566436e17126766a9328e67d7feda4b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxMTYyMw==", "bodyText": "Fixed missing copyrights", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404311623", "createdAt": "2020-04-06T18:46:59Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/mii/wdtconfigmap/domain1.10.yaml", "diffHunk": "@@ -0,0 +1,9 @@\n+resources:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU4NDc2Mg=="}, "originalCommit": {"oid": "2a5cb386b566436e17126766a9328e67d7feda4b"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDk0NDI4OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNTo1Mjo1M1rOGBBHig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTowNTozNFrOGBl4QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcyMDA3NA==", "bodyText": "Forgot to tell you to add an '|| exit 1' after the close paren. (An exit in a paren scope only exits the paren scope.)", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403720074", "createdAt": "2020-04-05T15:52:53Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -393,6 +418,65 @@ function deployCreateDomainJobPod() {\n   waitForPod $pod_name\n }\n \n+#\n+# Create the model in image docker image\n+#\n+function createMII_Image() {\n+  trace \"Info: Create MII Image\"\n+\n+  mkdir -p ${test_home}/mii/workdir/models || exit 1\n+  cp ${SCRIPTPATH}/mii/models/*  ${test_home}/mii/workdir/models || exit 1\n+  cd ${test_home}/mii/workdir  || exit 1\n+  echo \"place holder\" > dummy.txt || exit 1\n+  zip ${test_home}/mii/workdir/models/archive.zip dummy.txt > /dev/null 2>&1 || exit 1\n+\n+  (\n+  export WORKDIR=${test_home}/mii/workdir  || exit 1\n+  export MODEL_IMAGE_TAG=it || exit 1\n+  export MODEL_IMAGE_NAME=model-in-image || exit 1\n+  export MODEL_IMAGE_BUILD=\"when-missing\"\n+\n+  docker rmi ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG} --force > /dev/null 2>&1\n+\n+  trace \"Info: Downloading WDT and WIT...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_download.sh \\\n+   > ${test_home}/miibuild_download.out 2>&1\n+\n+  if [ $? -ne 0 ] ; then\n+    trace \"Error: createMII_Image: download tools failed\"\n+    cat ${test_home}/miibuild_download.out\n+    exit 1\n+  fi\n+\n+  trace \"Info: Launching WIT to build the image...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_image_model.sh \\\n+   > ${test_home}/miibuild_image.out  2>&1\n+\n+  if [ $? -ne 0 ] ; then\n+    trace \"Error: createMII_Image: build image failed\"\n+    cat ${test_home}/miibuild_image.out\n+    exit 1\n+  fi\n+  )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a5cb386b566436e17126766a9328e67d7feda4b"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyMjM2OA==", "bodyText": "done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404322368", "createdAt": "2020-04-06T19:05:34Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -393,6 +418,65 @@ function deployCreateDomainJobPod() {\n   waitForPod $pod_name\n }\n \n+#\n+# Create the model in image docker image\n+#\n+function createMII_Image() {\n+  trace \"Info: Create MII Image\"\n+\n+  mkdir -p ${test_home}/mii/workdir/models || exit 1\n+  cp ${SCRIPTPATH}/mii/models/*  ${test_home}/mii/workdir/models || exit 1\n+  cd ${test_home}/mii/workdir  || exit 1\n+  echo \"place holder\" > dummy.txt || exit 1\n+  zip ${test_home}/mii/workdir/models/archive.zip dummy.txt > /dev/null 2>&1 || exit 1\n+\n+  (\n+  export WORKDIR=${test_home}/mii/workdir  || exit 1\n+  export MODEL_IMAGE_TAG=it || exit 1\n+  export MODEL_IMAGE_NAME=model-in-image || exit 1\n+  export MODEL_IMAGE_BUILD=\"when-missing\"\n+\n+  docker rmi ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG} --force > /dev/null 2>&1\n+\n+  trace \"Info: Downloading WDT and WIT...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_download.sh \\\n+   > ${test_home}/miibuild_download.out 2>&1\n+\n+  if [ $? -ne 0 ] ; then\n+    trace \"Error: createMII_Image: download tools failed\"\n+    cat ${test_home}/miibuild_download.out\n+    exit 1\n+  fi\n+\n+  trace \"Info: Launching WIT to build the image...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_image_model.sh \\\n+   > ${test_home}/miibuild_image.out  2>&1\n+\n+  if [ $? -ne 0 ] ; then\n+    trace \"Error: createMII_Image: build image failed\"\n+    cat ${test_home}/miibuild_image.out\n+    exit 1\n+  fi\n+  )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcyMDA3NA=="}, "originalCommit": {"oid": "2a5cb386b566436e17126766a9328e67d7feda4b"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDk0OTMwOnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNTo1ODoyOVrOGBBKBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzo1Mjo1OVrOGBYxUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcyMDcxMA==", "bodyText": "Please change \")\" to \") || exit 1\" at line 646 - this is an old bug unrelated to your current change. Otherwise, if the yaml template substitution fails, then the script will keep on truckin' and fail later rather than at the point of the original failure...\ne.g. change:\n  ( # Generate svc yaml from template\n    export SERVER_NAME=\"${server_name}\"\n    export SERVICE_INTERNAL_PORT=\"${internal_port}\"\n    export SERVICE_EXTERNAL_PORT=\"${external_port}\"\n    export SERVICE_NAME=${service_name}\n    ${SCRIPTPATH}/util_subst.sh -g wl-nodeport-svc.yamlt ${target_yaml} || exit 1\n  )\n\n\nto\n  ( # Generate svc yaml from template\n    export SERVER_NAME=\"${server_name}\"\n    export SERVICE_INTERNAL_PORT=\"${internal_port}\"\n    export SERVICE_EXTERNAL_PORT=\"${external_port}\"\n    export SERVICE_NAME=${service_name}\n    ${SCRIPTPATH}/util_subst.sh -g wl-nodeport-svc.yamlt ${target_yaml} || exit 1\n  ) || exit 1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r403720710", "createdAt": "2020-04-05T15:58:29Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -393,6 +418,65 @@ function deployCreateDomainJobPod() {\n   waitForPod $pod_name\n }\n \n+#\n+# Create the model in image docker image\n+#\n+function createMII_Image() {\n+  trace \"Info: Create MII Image\"\n+\n+  mkdir -p ${test_home}/mii/workdir/models || exit 1\n+  cp ${SCRIPTPATH}/mii/models/*  ${test_home}/mii/workdir/models || exit 1\n+  cd ${test_home}/mii/workdir  || exit 1\n+  echo \"place holder\" > dummy.txt || exit 1\n+  zip ${test_home}/mii/workdir/models/archive.zip dummy.txt > /dev/null 2>&1 || exit 1\n+\n+  (\n+  export WORKDIR=${test_home}/mii/workdir  || exit 1\n+  export MODEL_IMAGE_TAG=it || exit 1\n+  export MODEL_IMAGE_NAME=model-in-image || exit 1\n+  export MODEL_IMAGE_BUILD=\"when-missing\"\n+\n+  docker rmi ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG} --force > /dev/null 2>&1\n+\n+  trace \"Info: Downloading WDT and WIT...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_download.sh \\\n+   > ${test_home}/miibuild_download.out 2>&1\n+\n+  if [ $? -ne 0 ] ; then\n+    trace \"Error: createMII_Image: download tools failed\"\n+    cat ${test_home}/miibuild_download.out\n+    exit 1\n+  fi\n+\n+  trace \"Info: Launching WIT to build the image...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_image_model.sh \\\n+   > ${test_home}/miibuild_image.out  2>&1\n+\n+  if [ $? -ne 0 ] ; then\n+    trace \"Error: createMII_Image: build image failed\"\n+    cat ${test_home}/miibuild_image.out\n+    exit 1\n+  fi\n+  )\n+  export WEBLOGIC_IMAGE_NAME=model-in-image || exit 1\n+  export WEBLOGIC_IMAGE_TAG=it || exit 1\n+\n+  kubectl -n $NAMESPACE delete configmap ${DOMAIN_UID}-wdt-config-map --ignore-not-found || exit 1\n+  kubectl -n $NAMESPACE create configmap  ${DOMAIN_UID}-wdt-config-map \\\n+        --from-file=${SCRIPTPATH}/mii/wdtconfigmap | tracePipe \"Info: kubectl output: \"\n+\n+  kubectl -n $NAMESPACE label  configmap ${DOMAIN_UID}-wdt-config-map  weblogic.domainUID=$DOMAIN_UID || exit 1\n+\n+  kubectl -n $NAMESPACE delete secret ${DOMAIN_UID}-runtime-encryption-secret --ignore-not-found || exit 1\n+  kubectl -n $NAMESPACE create secret generic  ${DOMAIN_UID}-runtime-encryption-secret \\\n+        --from-literal=password=welcome1 | tracePipe \"Info: kubectl output: \"\n+\n+  kubectl -n $NAMESPACE label secret ${DOMAIN_UID}-runtime-encryption-secret weblogic.domainUID=$DOMAIN_UID || exit 1\n+\n+}\n+\n #############################################################################\n #\n # Run introspection \"JobPod\", parse its output to files, and put files in a cm", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a5cb386b566436e17126766a9328e67d7feda4b"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEwNzYwMg==", "bodyText": "Thanks for doing that.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404107602", "createdAt": "2020-04-06T13:52:59Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -393,6 +418,65 @@ function deployCreateDomainJobPod() {\n   waitForPod $pod_name\n }\n \n+#\n+# Create the model in image docker image\n+#\n+function createMII_Image() {\n+  trace \"Info: Create MII Image\"\n+\n+  mkdir -p ${test_home}/mii/workdir/models || exit 1\n+  cp ${SCRIPTPATH}/mii/models/*  ${test_home}/mii/workdir/models || exit 1\n+  cd ${test_home}/mii/workdir  || exit 1\n+  echo \"place holder\" > dummy.txt || exit 1\n+  zip ${test_home}/mii/workdir/models/archive.zip dummy.txt > /dev/null 2>&1 || exit 1\n+\n+  (\n+  export WORKDIR=${test_home}/mii/workdir  || exit 1\n+  export MODEL_IMAGE_TAG=it || exit 1\n+  export MODEL_IMAGE_NAME=model-in-image || exit 1\n+  export MODEL_IMAGE_BUILD=\"when-missing\"\n+\n+  docker rmi ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG} --force > /dev/null 2>&1\n+\n+  trace \"Info: Downloading WDT and WIT...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_download.sh \\\n+   > ${test_home}/miibuild_download.out 2>&1\n+\n+  if [ $? -ne 0 ] ; then\n+    trace \"Error: createMII_Image: download tools failed\"\n+    cat ${test_home}/miibuild_download.out\n+    exit 1\n+  fi\n+\n+  trace \"Info: Launching WIT to build the image...\"\n+\n+  ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_image_model.sh \\\n+   > ${test_home}/miibuild_image.out  2>&1\n+\n+  if [ $? -ne 0 ] ; then\n+    trace \"Error: createMII_Image: build image failed\"\n+    cat ${test_home}/miibuild_image.out\n+    exit 1\n+  fi\n+  )\n+  export WEBLOGIC_IMAGE_NAME=model-in-image || exit 1\n+  export WEBLOGIC_IMAGE_TAG=it || exit 1\n+\n+  kubectl -n $NAMESPACE delete configmap ${DOMAIN_UID}-wdt-config-map --ignore-not-found || exit 1\n+  kubectl -n $NAMESPACE create configmap  ${DOMAIN_UID}-wdt-config-map \\\n+        --from-file=${SCRIPTPATH}/mii/wdtconfigmap | tracePipe \"Info: kubectl output: \"\n+\n+  kubectl -n $NAMESPACE label  configmap ${DOMAIN_UID}-wdt-config-map  weblogic.domainUID=$DOMAIN_UID || exit 1\n+\n+  kubectl -n $NAMESPACE delete secret ${DOMAIN_UID}-runtime-encryption-secret --ignore-not-found || exit 1\n+  kubectl -n $NAMESPACE create secret generic  ${DOMAIN_UID}-runtime-encryption-secret \\\n+        --from-literal=password=welcome1 | tracePipe \"Info: kubectl output: \"\n+\n+  kubectl -n $NAMESPACE label secret ${DOMAIN_UID}-runtime-encryption-secret weblogic.domainUID=$DOMAIN_UID || exit 1\n+\n+}\n+\n #############################################################################\n #\n # Run introspection \"JobPod\", parse its output to files, and put files in a cm", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcyMDcxMA=="}, "originalCommit": {"oid": "2a5cb386b566436e17126766a9328e67d7feda4b"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODY4NDQ3OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODoxMTowMlrOGBj7sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODoxMTowMlrOGBj7sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5MDQ4MA==", "bodyText": "typo - introspectTest.sh", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404290480", "createdAt": "2020-04-06T18:11:02Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -26,7 +26,16 @@\n #   IMAGE_NAME, etc, all have defaults, or can be passed in.  See the 'export'\n #   calls in the implementation below for the complete list.\n #\n-\n+# Usage:\n+#     For non Model In Image test\n+#\n+#         introspectTest.sh\n+#\n+#     For Model In Image test\n+#\n+#         export DOMAIN_SOURCE_TYPE=FromModel\n+#         intropsectTest.sh", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46b87450639f562a74bc716cc1fdcd1d766869cb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODY4NTk2OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODoxMTozMVrOGBj8tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODo1Nzo1NVrOGBlnfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5MDc0MQ==", "bodyText": "trace --> tracen", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404290741", "createdAt": "2020-04-06T18:11:31Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -439,23 +448,27 @@ function createMII_Image() {\n \n   docker rmi ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG} --force > /dev/null 2>&1\n \n-  trace \"Info: Downloading WDT and WIT...\"\n-\n+  trace \"Info: Downloading WDT and WIT\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46b87450639f562a74bc716cc1fdcd1d766869cb"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxODA3OQ==", "bodyText": "changed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404318079", "createdAt": "2020-04-06T18:57:55Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -439,23 +448,27 @@ function createMII_Image() {\n \n   docker rmi ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG} --force > /dev/null 2>&1\n \n-  trace \"Info: Downloading WDT and WIT...\"\n-\n+  trace \"Info: Downloading WDT and WIT\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5MDc0MQ=="}, "originalCommit": {"oid": "46b87450639f562a74bc716cc1fdcd1d766869cb"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODY4NzI1OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODoxMTo1MlrOGBj9gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODo1ODowOFrOGBln8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5MDk0NQ==", "bodyText": "trace -> tracen", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404290945", "createdAt": "2020-04-06T18:11:52Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -439,23 +448,27 @@ function createMII_Image() {\n \n   docker rmi ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG} --force > /dev/null 2>&1\n \n-  trace \"Info: Downloading WDT and WIT...\"\n-\n+  trace \"Info: Downloading WDT and WIT\"\n+  printdots_start\n   ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_download.sh \\\n    > ${test_home}/miibuild_download.out 2>&1\n-\n-  if [ $? -ne 0 ] ; then\n+  local rc=$?\n+  printdots_end\n+  if [ $rc -ne 0 ] ; then\n     trace \"Error: createMII_Image: download tools failed\"\n     cat ${test_home}/miibuild_download.out\n     exit 1\n   fi\n \n-  trace \"Info: Launching WIT to build the image...\"\n+  trace \"Info: Launching WIT to build the image\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46b87450639f562a74bc716cc1fdcd1d766869cb"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxODE5Mw==", "bodyText": "changed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404318193", "createdAt": "2020-04-06T18:58:08Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -439,23 +448,27 @@ function createMII_Image() {\n \n   docker rmi ${MODEL_IMAGE_NAME}:${MODEL_IMAGE_TAG} --force > /dev/null 2>&1\n \n-  trace \"Info: Downloading WDT and WIT...\"\n-\n+  trace \"Info: Downloading WDT and WIT\"\n+  printdots_start\n   ${SOURCEPATH}/kubernetes/samples/scripts/create-weblogic-domain/model-in-image/build_download.sh \\\n    > ${test_home}/miibuild_download.out 2>&1\n-\n-  if [ $? -ne 0 ] ; then\n+  local rc=$?\n+  printdots_end\n+  if [ $rc -ne 0 ] ; then\n     trace \"Error: createMII_Image: download tools failed\"\n     cat ${test_home}/miibuild_download.out\n     exit 1\n   fi\n \n-  trace \"Info: Launching WIT to build the image...\"\n+  trace \"Info: Launching WIT to build the image\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5MDk0NQ=="}, "originalCommit": {"oid": "46b87450639f562a74bc716cc1fdcd1d766869cb"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODcwMjM1OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/introspectTest.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODoxNjowM1rOGBkG8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODo1ODoxNlrOGBloNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5MzM2MA==", "bodyText": "Please update README file with this information too.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404293360", "createdAt": "2020-04-06T18:16:03Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -26,7 +26,16 @@\n #   IMAGE_NAME, etc, all have defaults, or can be passed in.  See the 'export'\n #   calls in the implementation below for the complete list.\n #\n-\n+# Usage:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46b87450639f562a74bc716cc1fdcd1d766869cb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxODI2MQ==", "bodyText": "done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404318261", "createdAt": "2020-04-06T18:58:16Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/introspectTest.sh", "diffHunk": "@@ -26,7 +26,16 @@\n #   IMAGE_NAME, etc, all have defaults, or can be passed in.  See the 'export'\n #   calls in the implementation below for the complete list.\n #\n-\n+# Usage:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5MzM2MA=="}, "originalCommit": {"oid": "46b87450639f562a74bc716cc1fdcd1d766869cb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODg2MDM4OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/README", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODo1OToxN1rOGBlqug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOTowNjowN1rOGBl5cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxODkwNg==", "bodyText": "Indent lines 25 and 26 four more spaces.  Right now they line up right under 'For Model'.   Change 'type.' to 'type:'.   Change 'For ' to 'For a '.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404318906", "createdAt": "2020-04-06T18:59:17Z", "author": {"login": "tbarnes-us"}, "path": "src/integration-tests/introspector/README", "diffHunk": "@@ -19,8 +19,11 @@ Usage:\n     One way to do this when running locally is to run the integration tests.\n     (Note that this test doesn't depend on Operator image as of 2018/10/16, but may in the future.)\n (2) Optionally specify values for input env vars (see introspectTest.sh for the list).\n-(3) Run introspectTest.sh\n-\n+(3) For non Model In Image domain type.\n+        Run introspectTest.sh\n+    For Model In Image domain type.\n+    export DOMAIN_SOURCE_TYPE=FromModel\n+    Run introspectTest.sh", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ede13261a709d63ca4a76351359bf79e1d633864"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyMjY3Mw==", "bodyText": "done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404322673", "createdAt": "2020-04-06T19:06:07Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/README", "diffHunk": "@@ -19,8 +19,11 @@ Usage:\n     One way to do this when running locally is to run the integration tests.\n     (Note that this test doesn't depend on Operator image as of 2018/10/16, but may in the future.)\n (2) Optionally specify values for input env vars (see introspectTest.sh for the list).\n-(3) Run introspectTest.sh\n-\n+(3) For non Model In Image domain type.\n+        Run introspectTest.sh\n+    For Model In Image domain type.\n+    export DOMAIN_SOURCE_TYPE=FromModel\n+    Run introspectTest.sh", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxODkwNg=="}, "originalCommit": {"oid": "ede13261a709d63ca4a76351359bf79e1d633864"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTc4Mjg4OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/checkMIIBeans.inputt", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMDoxNzo1NFrOGBuh7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzo1MDo1OVrOGCwO3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDExMA==", "bodyText": "is this file able to have a copyright notice added?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404464110", "createdAt": "2020-04-07T00:17:54Z", "author": {"login": "markxnelson"}, "path": "src/integration-tests/introspector/checkMIIBeans.inputt", "diffHunk": "@@ -0,0 +1,27 @@\n+/Log/base_domain,FileName,logs/base_domain.log,/shared/logs/base_domain.log", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7a6cb6bde10f01293ccf230a0e695a66e91932"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc3MDUwMQ==", "bodyText": "This one is  not same as the checkBeans.inputt", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404770501", "createdAt": "2020-04-07T12:31:33Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/checkMIIBeans.inputt", "diffHunk": "@@ -0,0 +1,27 @@\n+/Log/base_domain,FileName,logs/base_domain.log,/shared/logs/base_domain.log", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDExMA=="}, "originalCommit": {"oid": "2a7a6cb6bde10f01293ccf230a0e695a66e91932"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3NzY4MA==", "bodyText": "sorry, i don't understand, can it have a copyright notice added please? if not, why not?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r405177680", "createdAt": "2020-04-07T23:45:45Z", "author": {"login": "markxnelson"}, "path": "src/integration-tests/introspector/checkMIIBeans.inputt", "diffHunk": "@@ -0,0 +1,27 @@\n+/Log/base_domain,FileName,logs/base_domain.log,/shared/logs/base_domain.log", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDExMA=="}, "originalCommit": {"oid": "2a7a6cb6bde10f01293ccf230a0e695a66e91932"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0MDU3NA==", "bodyText": "This data file is a copy of the original one (also without copyrights) but looking at the checkBeans.py actually it can take comments, so I am adding copyrights to both", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r405540574", "createdAt": "2020-04-08T13:50:59Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/checkMIIBeans.inputt", "diffHunk": "@@ -0,0 +1,27 @@\n+/Log/base_domain,FileName,logs/base_domain.log,/shared/logs/base_domain.log", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDExMA=="}, "originalCommit": {"oid": "2a7a6cb6bde10f01293ccf230a0e695a66e91932"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTc4NzE1OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/mii/wdtconfigmap/domain1.10.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMDoyMDoxN1rOGBukmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMjozMDo1NFrOGCBNTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDc5Mg==", "bodyText": "is this a new file? if so, just 2020", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404464792", "createdAt": "2020-04-07T00:20:17Z", "author": {"login": "markxnelson"}, "path": "src/integration-tests/introspector/mii/wdtconfigmap/domain1.10.yaml", "diffHunk": "@@ -0,0 +1,32 @@\n+# Copyright (c) 2018, 2020, Oracle Corporation and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7a6cb6bde10f01293ccf230a0e695a66e91932"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc3MDEyNA==", "bodyText": "updated", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404770124", "createdAt": "2020-04-07T12:30:54Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/mii/wdtconfigmap/domain1.10.yaml", "diffHunk": "@@ -0,0 +1,32 @@\n+# Copyright (c) 2018, 2020, Oracle Corporation and/or its affiliates.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDc5Mg=="}, "originalCommit": {"oid": "2a7a6cb6bde10f01293ccf230a0e695a66e91932"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTc4NzI4OnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/mii/models/model1.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMDoyMDoyMVrOGBukrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMjozMTowMFrOGCBNiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDgxNQ==", "bodyText": "is this a new file? if so, just 2020", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404464815", "createdAt": "2020-04-07T00:20:21Z", "author": {"login": "markxnelson"}, "path": "src/integration-tests/introspector/mii/models/model1.properties", "diffHunk": "@@ -0,0 +1,9 @@\n+# Copyright (c) 2018, 2020, Oracle Corporation and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7a6cb6bde10f01293ccf230a0e695a66e91932"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc3MDE4Nw==", "bodyText": "updated", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404770187", "createdAt": "2020-04-07T12:31:00Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/mii/models/model1.properties", "diffHunk": "@@ -0,0 +1,9 @@\n+# Copyright (c) 2018, 2020, Oracle Corporation and/or its affiliates.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDgxNQ=="}, "originalCommit": {"oid": "2a7a6cb6bde10f01293ccf230a0e695a66e91932"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTc4NzUyOnYy", "diffSide": "RIGHT", "path": "src/integration-tests/introspector/mii/models/domain1.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMDoyMDoyOFrOGBuk1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMjozMTowOFrOGCBN2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDg1NA==", "bodyText": "is this a new file? if so, just 2020", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404464854", "createdAt": "2020-04-07T00:20:28Z", "author": {"login": "markxnelson"}, "path": "src/integration-tests/introspector/mii/models/domain1.yaml", "diffHunk": "@@ -0,0 +1,108 @@\n+# Copyright (c) 2018, 2020, Oracle Corporation and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7a6cb6bde10f01293ccf230a0e695a66e91932"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc3MDI2Nw==", "bodyText": "updated", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1530#discussion_r404770267", "createdAt": "2020-04-07T12:31:08Z", "author": {"login": "jshum2479"}, "path": "src/integration-tests/introspector/mii/models/domain1.yaml", "diffHunk": "@@ -0,0 +1,108 @@\n+# Copyright (c) 2018, 2020, Oracle Corporation and/or its affiliates.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2NDg1NA=="}, "originalCommit": {"oid": "2a7a6cb6bde10f01293ccf230a0e695a66e91932"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4717, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}