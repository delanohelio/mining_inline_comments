{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMjkwODc4", "number": 1494, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMTo0OTozMVrODrCPlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMzowOTozMFrODrbrkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDUyMTE4OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMTo0OTozMVrOF7JZYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMTo0OTozMVrOF7JZYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NDI1OA==", "bodyText": "typo", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r397564258", "createdAt": "2020-03-25T01:49:31Z", "author": {"login": "markxnelson"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "diffHunk": "@@ -228,6 +243,12 @@ private void createDomainAndDeployApp(Map<String, Object> domainMap, String doma\n     domain = null;\n     domain = TestUtils.createDomain(domainMap);\n     domain.verifyDomainCreated();\n+ \n+    // The above command only tests that the pod from the 1st cluster is Running (1/1)\n+    // So, checking the MS pod of the other cluster inidvidually here.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDUyMTg4OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMTo0OTo1NVrOF7JZxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTozNjoxN1rOF7rQMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NDM1Nw==", "bodyText": "does this need to be in a try/catch @rjeberhard ?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r397564357", "createdAt": "2020-03-25T01:49:55Z", "author": {"login": "markxnelson"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "diffHunk": "@@ -238,6 +259,13 @@ private void createDomainAndDeployApp(Map<String, Object> domainMap, String doma\n       domainUid + \"-new-managed-server2\",\n     };\n     verifyServersStatus(domain, pods, domainUid);\n+    Thread.sleep(60 * 1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4MzY3OA==", "bodyText": "There must be a try/catch at a higher level... yes, the method signature throws Exception.  This is okay if on InterruptedException it's correct that the test should fail.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r397883678", "createdAt": "2020-03-25T14:10:40Z", "author": {"login": "rjeberhard"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "diffHunk": "@@ -238,6 +259,13 @@ private void createDomainAndDeployApp(Map<String, Object> domainMap, String doma\n       domainUid + \"-new-managed-server2\",\n     };\n     verifyServersStatus(domain, pods, domainUid);\n+    Thread.sleep(60 * 1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NDM1Nw=="}, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4ODc0NA==", "bodyText": "Is the sleep really needed here? If not remove or reduce? we usually don't put hard sleep's like this in test, instead wait for a condition in a loop with small sleep time.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r397888744", "createdAt": "2020-03-25T14:17:39Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "diffHunk": "@@ -238,6 +259,13 @@ private void createDomainAndDeployApp(Map<String, Object> domainMap, String doma\n       domainUid + \"-new-managed-server2\",\n     };\n     verifyServersStatus(domain, pods, domainUid);\n+    Thread.sleep(60 * 1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NDM1Nw=="}, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODExODk2Mw==", "bodyText": "Will remove the sleep. Will not add try/catch. reason - what Ryan said.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r398118963", "createdAt": "2020-03-25T19:36:17Z", "author": {"login": "bhavaniravichandran"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "diffHunk": "@@ -238,6 +259,13 @@ private void createDomainAndDeployApp(Map<String, Object> domainMap, String doma\n       domainUid + \"-new-managed-server2\",\n     };\n     verifyServersStatus(domain, pods, domainUid);\n+    Thread.sleep(60 * 1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NDM1Nw=="}, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDUyNjIxOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMTo1MjoxOFrOF7JcXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTozNzoyOFrOF7rSqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NTAyMQ==", "bodyText": "feels like we should be checking the returned values in this block of code, not just printing them out", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r397565021", "createdAt": "2020-03-25T01:52:18Z", "author": {"login": "markxnelson"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "diffHunk": "@@ -373,4 +405,62 @@ private ExecResult clearCache() throws Exception {\n     return result;\n   }\n \n+  private void restartCluster(String domainUid) throws Exception {\n+    String podName = domainUid + \"-new-managed-server1\";\n+\n+    String restartTmpDir = getResultDir() + \"/restarttemp\";\n+    Files.createDirectories(Paths.get(restartTmpDir));\n+    \n+    LoggerHelper.getLocal().log(Level.INFO, \"created restart temp dir\");\n+\n+    String originalYaml =\n+            getUserProjectsDir()\n+                + \"/weblogic-domains/\"\n+                + domain.getDomainUid()\n+                + \"/domain.yaml\";\n+    \n+    // Modify the original domain yaml to include restartVersion in admin server node\n+    DomainCrd crd = new DomainCrd(originalYaml);\n+    Map<String, Object> cluster = new HashMap();\n+    cluster.put(\"restartVersion\", \"v1.1\");\n+    crd.addObjectNodeToCluster(\"dataCluster\", cluster);\n+    String modYaml = crd.getYamlTree();\n+    LoggerHelper.getLocal().log(Level.INFO, modYaml);\n+\n+    // Write the modified yaml to a new file\n+    Path path = Paths.get(restartTmpDir, \"restart.cluster.yaml\");\n+    LoggerHelper.getLocal().log(Level.INFO, \"Path of the modified domain.yaml :{0}\", path.toString());\n+    Charset charset = StandardCharsets.UTF_8;\n+    Files.write(path, modYaml.getBytes(charset));\n+\n+    // Apply the new yaml to update the domain crd\n+    LoggerHelper.getLocal().log(Level.INFO, \"kubectl apply -f {0}\", path.toString());\n+    ExecResult exec = TestUtils.exec(\"kubectl apply -f \" + path.toString());\n+    LoggerHelper.getLocal().log(Level.INFO, exec.stdout());\n+    LoggerHelper.getLocal().log(Level.INFO, \"Verifying if the cluster is restarted\");\n+\n+    TestUtils.checkPodReady(domainUid + \"-new-managed-server1\", domainNS1);\n+    TestUtils.checkPodReady(domainUid + \"-new-managed-server2\", domainNS1);\n+\n+  }\n+\n+  private void verifyServersIngressRunning() throws Exception {\n+    LoggerHelper.getLocal().log(Level.INFO, \"Verifying server status\");\n+    domain.verifyServersReady();\n+    LoggerHelper.getLocal().log(Level.INFO, \"Verifying traefik and ingress created for the domain\");\n+    LoggerHelper.getLocal().log(Level.INFO,\n+        TestUtils.exec(\"helm status traefik-operator\").stdout(), true);\n+    LoggerHelper.getLocal().log(Level.INFO,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4NDg1Mg==", "bodyText": "Does TestUtils.exec check the return value?  I agree that it's not obvious how the test code handles a failed helm command.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r397884852", "createdAt": "2020-03-25T14:12:22Z", "author": {"login": "rjeberhard"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "diffHunk": "@@ -373,4 +405,62 @@ private ExecResult clearCache() throws Exception {\n     return result;\n   }\n \n+  private void restartCluster(String domainUid) throws Exception {\n+    String podName = domainUid + \"-new-managed-server1\";\n+\n+    String restartTmpDir = getResultDir() + \"/restarttemp\";\n+    Files.createDirectories(Paths.get(restartTmpDir));\n+    \n+    LoggerHelper.getLocal().log(Level.INFO, \"created restart temp dir\");\n+\n+    String originalYaml =\n+            getUserProjectsDir()\n+                + \"/weblogic-domains/\"\n+                + domain.getDomainUid()\n+                + \"/domain.yaml\";\n+    \n+    // Modify the original domain yaml to include restartVersion in admin server node\n+    DomainCrd crd = new DomainCrd(originalYaml);\n+    Map<String, Object> cluster = new HashMap();\n+    cluster.put(\"restartVersion\", \"v1.1\");\n+    crd.addObjectNodeToCluster(\"dataCluster\", cluster);\n+    String modYaml = crd.getYamlTree();\n+    LoggerHelper.getLocal().log(Level.INFO, modYaml);\n+\n+    // Write the modified yaml to a new file\n+    Path path = Paths.get(restartTmpDir, \"restart.cluster.yaml\");\n+    LoggerHelper.getLocal().log(Level.INFO, \"Path of the modified domain.yaml :{0}\", path.toString());\n+    Charset charset = StandardCharsets.UTF_8;\n+    Files.write(path, modYaml.getBytes(charset));\n+\n+    // Apply the new yaml to update the domain crd\n+    LoggerHelper.getLocal().log(Level.INFO, \"kubectl apply -f {0}\", path.toString());\n+    ExecResult exec = TestUtils.exec(\"kubectl apply -f \" + path.toString());\n+    LoggerHelper.getLocal().log(Level.INFO, exec.stdout());\n+    LoggerHelper.getLocal().log(Level.INFO, \"Verifying if the cluster is restarted\");\n+\n+    TestUtils.checkPodReady(domainUid + \"-new-managed-server1\", domainNS1);\n+    TestUtils.checkPodReady(domainUid + \"-new-managed-server2\", domainNS1);\n+\n+  }\n+\n+  private void verifyServersIngressRunning() throws Exception {\n+    LoggerHelper.getLocal().log(Level.INFO, \"Verifying server status\");\n+    domain.verifyServersReady();\n+    LoggerHelper.getLocal().log(Level.INFO, \"Verifying traefik and ingress created for the domain\");\n+    LoggerHelper.getLocal().log(Level.INFO,\n+        TestUtils.exec(\"helm status traefik-operator\").stdout(), true);\n+    LoggerHelper.getLocal().log(Level.INFO,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NTAyMQ=="}, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg5NjMxNg==", "bodyText": "This method was added while I was debugging the test failure initially, later Bhavani took over the branch. It was not meant to get it merged as is.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r397896316", "createdAt": "2020-03-25T14:26:55Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "diffHunk": "@@ -373,4 +405,62 @@ private ExecResult clearCache() throws Exception {\n     return result;\n   }\n \n+  private void restartCluster(String domainUid) throws Exception {\n+    String podName = domainUid + \"-new-managed-server1\";\n+\n+    String restartTmpDir = getResultDir() + \"/restarttemp\";\n+    Files.createDirectories(Paths.get(restartTmpDir));\n+    \n+    LoggerHelper.getLocal().log(Level.INFO, \"created restart temp dir\");\n+\n+    String originalYaml =\n+            getUserProjectsDir()\n+                + \"/weblogic-domains/\"\n+                + domain.getDomainUid()\n+                + \"/domain.yaml\";\n+    \n+    // Modify the original domain yaml to include restartVersion in admin server node\n+    DomainCrd crd = new DomainCrd(originalYaml);\n+    Map<String, Object> cluster = new HashMap();\n+    cluster.put(\"restartVersion\", \"v1.1\");\n+    crd.addObjectNodeToCluster(\"dataCluster\", cluster);\n+    String modYaml = crd.getYamlTree();\n+    LoggerHelper.getLocal().log(Level.INFO, modYaml);\n+\n+    // Write the modified yaml to a new file\n+    Path path = Paths.get(restartTmpDir, \"restart.cluster.yaml\");\n+    LoggerHelper.getLocal().log(Level.INFO, \"Path of the modified domain.yaml :{0}\", path.toString());\n+    Charset charset = StandardCharsets.UTF_8;\n+    Files.write(path, modYaml.getBytes(charset));\n+\n+    // Apply the new yaml to update the domain crd\n+    LoggerHelper.getLocal().log(Level.INFO, \"kubectl apply -f {0}\", path.toString());\n+    ExecResult exec = TestUtils.exec(\"kubectl apply -f \" + path.toString());\n+    LoggerHelper.getLocal().log(Level.INFO, exec.stdout());\n+    LoggerHelper.getLocal().log(Level.INFO, \"Verifying if the cluster is restarted\");\n+\n+    TestUtils.checkPodReady(domainUid + \"-new-managed-server1\", domainNS1);\n+    TestUtils.checkPodReady(domainUid + \"-new-managed-server2\", domainNS1);\n+\n+  }\n+\n+  private void verifyServersIngressRunning() throws Exception {\n+    LoggerHelper.getLocal().log(Level.INFO, \"Verifying server status\");\n+    domain.verifyServersReady();\n+    LoggerHelper.getLocal().log(Level.INFO, \"Verifying traefik and ingress created for the domain\");\n+    LoggerHelper.getLocal().log(Level.INFO,\n+        TestUtils.exec(\"helm status traefik-operator\").stdout(), true);\n+    LoggerHelper.getLocal().log(Level.INFO,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NTAyMQ=="}, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAzNjYyMQ==", "bodyText": "I left it there thinking that more debug is good. Was going to delete this when I edit this file to remove the debug flags after we finally resolve the issue. I will remove it now.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r398036621", "createdAt": "2020-03-25T17:26:20Z", "author": {"login": "bhavaniravichandran"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "diffHunk": "@@ -373,4 +405,62 @@ private ExecResult clearCache() throws Exception {\n     return result;\n   }\n \n+  private void restartCluster(String domainUid) throws Exception {\n+    String podName = domainUid + \"-new-managed-server1\";\n+\n+    String restartTmpDir = getResultDir() + \"/restarttemp\";\n+    Files.createDirectories(Paths.get(restartTmpDir));\n+    \n+    LoggerHelper.getLocal().log(Level.INFO, \"created restart temp dir\");\n+\n+    String originalYaml =\n+            getUserProjectsDir()\n+                + \"/weblogic-domains/\"\n+                + domain.getDomainUid()\n+                + \"/domain.yaml\";\n+    \n+    // Modify the original domain yaml to include restartVersion in admin server node\n+    DomainCrd crd = new DomainCrd(originalYaml);\n+    Map<String, Object> cluster = new HashMap();\n+    cluster.put(\"restartVersion\", \"v1.1\");\n+    crd.addObjectNodeToCluster(\"dataCluster\", cluster);\n+    String modYaml = crd.getYamlTree();\n+    LoggerHelper.getLocal().log(Level.INFO, modYaml);\n+\n+    // Write the modified yaml to a new file\n+    Path path = Paths.get(restartTmpDir, \"restart.cluster.yaml\");\n+    LoggerHelper.getLocal().log(Level.INFO, \"Path of the modified domain.yaml :{0}\", path.toString());\n+    Charset charset = StandardCharsets.UTF_8;\n+    Files.write(path, modYaml.getBytes(charset));\n+\n+    // Apply the new yaml to update the domain crd\n+    LoggerHelper.getLocal().log(Level.INFO, \"kubectl apply -f {0}\", path.toString());\n+    ExecResult exec = TestUtils.exec(\"kubectl apply -f \" + path.toString());\n+    LoggerHelper.getLocal().log(Level.INFO, exec.stdout());\n+    LoggerHelper.getLocal().log(Level.INFO, \"Verifying if the cluster is restarted\");\n+\n+    TestUtils.checkPodReady(domainUid + \"-new-managed-server1\", domainNS1);\n+    TestUtils.checkPodReady(domainUid + \"-new-managed-server2\", domainNS1);\n+\n+  }\n+\n+  private void verifyServersIngressRunning() throws Exception {\n+    LoggerHelper.getLocal().log(Level.INFO, \"Verifying server status\");\n+    domain.verifyServersReady();\n+    LoggerHelper.getLocal().log(Level.INFO, \"Verifying traefik and ingress created for the domain\");\n+    LoggerHelper.getLocal().log(Level.INFO,\n+        TestUtils.exec(\"helm status traefik-operator\").stdout(), true);\n+    LoggerHelper.getLocal().log(Level.INFO,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NTAyMQ=="}, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODExOTU5Mw==", "bodyText": "Already checking the status of all the servers before trying to deploy the app.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r398119593", "createdAt": "2020-03-25T19:37:28Z", "author": {"login": "bhavaniravichandran"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "diffHunk": "@@ -373,4 +405,62 @@ private ExecResult clearCache() throws Exception {\n     return result;\n   }\n \n+  private void restartCluster(String domainUid) throws Exception {\n+    String podName = domainUid + \"-new-managed-server1\";\n+\n+    String restartTmpDir = getResultDir() + \"/restarttemp\";\n+    Files.createDirectories(Paths.get(restartTmpDir));\n+    \n+    LoggerHelper.getLocal().log(Level.INFO, \"created restart temp dir\");\n+\n+    String originalYaml =\n+            getUserProjectsDir()\n+                + \"/weblogic-domains/\"\n+                + domain.getDomainUid()\n+                + \"/domain.yaml\";\n+    \n+    // Modify the original domain yaml to include restartVersion in admin server node\n+    DomainCrd crd = new DomainCrd(originalYaml);\n+    Map<String, Object> cluster = new HashMap();\n+    cluster.put(\"restartVersion\", \"v1.1\");\n+    crd.addObjectNodeToCluster(\"dataCluster\", cluster);\n+    String modYaml = crd.getYamlTree();\n+    LoggerHelper.getLocal().log(Level.INFO, modYaml);\n+\n+    // Write the modified yaml to a new file\n+    Path path = Paths.get(restartTmpDir, \"restart.cluster.yaml\");\n+    LoggerHelper.getLocal().log(Level.INFO, \"Path of the modified domain.yaml :{0}\", path.toString());\n+    Charset charset = StandardCharsets.UTF_8;\n+    Files.write(path, modYaml.getBytes(charset));\n+\n+    // Apply the new yaml to update the domain crd\n+    LoggerHelper.getLocal().log(Level.INFO, \"kubectl apply -f {0}\", path.toString());\n+    ExecResult exec = TestUtils.exec(\"kubectl apply -f \" + path.toString());\n+    LoggerHelper.getLocal().log(Level.INFO, exec.stdout());\n+    LoggerHelper.getLocal().log(Level.INFO, \"Verifying if the cluster is restarted\");\n+\n+    TestUtils.checkPodReady(domainUid + \"-new-managed-server1\", domainNS1);\n+    TestUtils.checkPodReady(domainUid + \"-new-managed-server2\", domainNS1);\n+\n+  }\n+\n+  private void verifyServersIngressRunning() throws Exception {\n+    LoggerHelper.getLocal().log(Level.INFO, \"Verifying server status\");\n+    domain.verifyServersReady();\n+    LoggerHelper.getLocal().log(Level.INFO, \"Verifying traefik and ingress created for the domain\");\n+    LoggerHelper.getLocal().log(Level.INFO,\n+        TestUtils.exec(\"helm status traefik-operator\").stdout(), true);\n+    LoggerHelper.getLocal().log(Level.INFO,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NTAyMQ=="}, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 170}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDUyOTI0OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/resources/apps/buildDeployCoherenceAppInPod.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMTo1Mzo1OVrOF7JeHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzo0Njo0OFrOF7nE9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NTQ3MA==", "bodyText": "ok, but do you need to rename the others by one number less?? or are you just ignoring that value altogether, not removing it from the call?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r397565470", "createdAt": "2020-03-25T01:53:59Z", "author": {"login": "markxnelson"}, "path": "integration-tests/src/test/resources/apps/buildDeployCoherenceAppInPod.sh", "diffHunk": "@@ -25,7 +25,7 @@ PORT=$2\n USER=${3:-weblogic}\n PASSWORD=${4:-welcome1}\n APP_DIR_INPOD=$5\n-//APP_NAME=$6 - ignore this for coherence since the dir name and the app name are different.\n+#APP_NAME=$6 - ignore this for coherence since the dir name and the app name are different.\n EAR_DEPLOY_TARGET=$7", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA1MDU0OQ==", "bodyText": "The script is being called from a utility method. Other tests are also using the same method to call their shell scripts to build and deploy. This argument is not needed for my script, so I just ignore it.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r398050549", "createdAt": "2020-03-25T17:46:48Z", "author": {"login": "bhavaniravichandran"}, "path": "integration-tests/src/test/resources/apps/buildDeployCoherenceAppInPod.sh", "diffHunk": "@@ -25,7 +25,7 @@ PORT=$2\n USER=${3:-weblogic}\n PASSWORD=${4:-welcome1}\n APP_DIR_INPOD=$5\n-//APP_NAME=$6 - ignore this for coherence since the dir name and the app name are different.\n+#APP_NAME=$6 - ignore this for coherence since the dir name and the app name are different.\n EAR_DEPLOY_TARGET=$7", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NTQ3MA=="}, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDUzMTM2OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/resources/apps/buildDeployCoherenceAppInPod.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMTo1NTowM1rOF7JfVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMTo1NTowM1rOF7JfVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NTc4MA==", "bodyText": "the command printed out and the command being run are not the same - seems it would be better to put the command in a variable, print it and then exec it, to avoid this issue", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r397565780", "createdAt": "2020-03-25T01:55:03Z", "author": {"login": "markxnelson"}, "path": "integration-tests/src/test/resources/apps/buildDeployCoherenceAppInPod.sh", "diffHunk": "@@ -62,24 +62,28 @@ cp ${APP_DIR_INPOD}/builddir/${APP_NAME}.gar ${APP_DIR_INPOD}/.\n cp ${APP_DIR_INPOD}/builddir/${APP_NAME}.ear ${APP_DIR_INPOD}/.\n \n echo \"Deploy ${APP_NAME} gar using curl:\"\n-echo -e \"curl --noproxy '*' --silent  --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:multipart/form-data -F \\\"model={ name: '${APP_NAME}GAR', targets: [ { identity: [ clusters, '${GAR_DEPLOY_TARGET}' ] } ] }\\\" -F \\\"sourcePath=@${ARCHIVE_FILE_GAR}\\\"  -H \\\"Prefer:respond-async\\\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployGAR.out\\n\"\n-curl --noproxy '*' --silent  --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:multipart/form-data -F \"model={ name: '${APP_NAME}GAR', targets: [ { identity: [ clusters, '${GAR_DEPLOY_TARGET}' ] } ] }\" -F \"sourcePath=@${ARCHIVE_FILE_GAR}\" -H \"Prefer:respond-async\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployGAR.out\n+\n+echo -e \"curl --noproxy '*' -v --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:multipart/form-data -F \\\"model={ name: '${APP_NAME}GAR', targets: [ { identity: [ clusters, '${GAR_DEPLOY_TARGET}' ] } ] }\\\" -F \\\"sourcePath=@${ARCHIVE_FILE_GAR}\\\"  -H \\\"Prefer:respond-async\\\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployGAR.out\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDUzMzA2OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/resources/apps/buildDeployCoherenceAppInPod.sh", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMTo1NTo1OVrOF7JgTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOToyODoxOFrOF7q-zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NjAyOA==", "bodyText": "feels like a loop might be needed here instead of only checking once? unless we are sure it cannot possibly take more than 10 sec", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r397566028", "createdAt": "2020-03-25T01:55:59Z", "author": {"login": "markxnelson"}, "path": "integration-tests/src/test/resources/apps/buildDeployCoherenceAppInPod.sh", "diffHunk": "@@ -62,24 +62,28 @@ cp ${APP_DIR_INPOD}/builddir/${APP_NAME}.gar ${APP_DIR_INPOD}/.\n cp ${APP_DIR_INPOD}/builddir/${APP_NAME}.ear ${APP_DIR_INPOD}/.\n \n echo \"Deploy ${APP_NAME} gar using curl:\"\n-echo -e \"curl --noproxy '*' --silent  --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:multipart/form-data -F \\\"model={ name: '${APP_NAME}GAR', targets: [ { identity: [ clusters, '${GAR_DEPLOY_TARGET}' ] } ] }\\\" -F \\\"sourcePath=@${ARCHIVE_FILE_GAR}\\\"  -H \\\"Prefer:respond-async\\\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployGAR.out\\n\"\n-curl --noproxy '*' --silent  --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:multipart/form-data -F \"model={ name: '${APP_NAME}GAR', targets: [ { identity: [ clusters, '${GAR_DEPLOY_TARGET}' ] } ] }\" -F \"sourcePath=@${ARCHIVE_FILE_GAR}\" -H \"Prefer:respond-async\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployGAR.out\n+\n+echo -e \"curl --noproxy '*' -v --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:multipart/form-data -F \\\"model={ name: '${APP_NAME}GAR', targets: [ { identity: [ clusters, '${GAR_DEPLOY_TARGET}' ] } ] }\\\" -F \\\"sourcePath=@${ARCHIVE_FILE_GAR}\\\"  -H \\\"Prefer:respond-async\\\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployGAR.out\\n\"\n+\n+curl --noproxy '*' -v --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:application/json -d \"{name: '${APP_NAME}GAR', sourcePath='${ARCHIVE_FILE_GAR}', targets: [ { identity: [ 'clusters', '${GAR_DEPLOY_TARGET}' ] } ] }\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployGAR.out\n sleep 10\n-grep -q \"STATE_RUNNING\" ${APP_DIR_INPOD}/deployGAR.out\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODExNDUxMQ==", "bodyText": "I don't need a sleep here since it is a synchronous call. I will change the other curl command to a synchronous call as well and remove sleep from it as well.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r398114511", "createdAt": "2020-03-25T19:28:18Z", "author": {"login": "bhavaniravichandran"}, "path": "integration-tests/src/test/resources/apps/buildDeployCoherenceAppInPod.sh", "diffHunk": "@@ -62,24 +62,28 @@ cp ${APP_DIR_INPOD}/builddir/${APP_NAME}.gar ${APP_DIR_INPOD}/.\n cp ${APP_DIR_INPOD}/builddir/${APP_NAME}.ear ${APP_DIR_INPOD}/.\n \n echo \"Deploy ${APP_NAME} gar using curl:\"\n-echo -e \"curl --noproxy '*' --silent  --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:multipart/form-data -F \\\"model={ name: '${APP_NAME}GAR', targets: [ { identity: [ clusters, '${GAR_DEPLOY_TARGET}' ] } ] }\\\" -F \\\"sourcePath=@${ARCHIVE_FILE_GAR}\\\"  -H \\\"Prefer:respond-async\\\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployGAR.out\\n\"\n-curl --noproxy '*' --silent  --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:multipart/form-data -F \"model={ name: '${APP_NAME}GAR', targets: [ { identity: [ clusters, '${GAR_DEPLOY_TARGET}' ] } ] }\" -F \"sourcePath=@${ARCHIVE_FILE_GAR}\" -H \"Prefer:respond-async\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployGAR.out\n+\n+echo -e \"curl --noproxy '*' -v --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:multipart/form-data -F \\\"model={ name: '${APP_NAME}GAR', targets: [ { identity: [ clusters, '${GAR_DEPLOY_TARGET}' ] } ] }\\\" -F \\\"sourcePath=@${ARCHIVE_FILE_GAR}\\\"  -H \\\"Prefer:respond-async\\\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployGAR.out\\n\"\n+\n+curl --noproxy '*' -v --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:application/json -d \"{name: '${APP_NAME}GAR', sourcePath='${ARCHIVE_FILE_GAR}', targets: [ { identity: [ 'clusters', '${GAR_DEPLOY_TARGET}' ] } ] }\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployGAR.out\n sleep 10\n-grep -q \"STATE_RUNNING\" ${APP_DIR_INPOD}/deployGAR.out\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NjAyOA=="}, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjU4MzA3OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/LoadBalancer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxMzoxOFrOF7dAVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTozNDoyNVrOF7rL8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4NTUyNg==", "bodyText": "You could just make the list a set.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r397885526", "createdAt": "2020-03-25T14:13:18Z", "author": {"login": "rjeberhard"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/LoadBalancer.java", "diffHunk": "@@ -190,7 +190,12 @@ private String getKubernetesNamespaceToUpdate(String domainNamespace) throws Exc\n         String trimmed = debracketed.replaceAll(\"\\\\s+\", \"\");\n         // now have an ArrayList containing \"foo\", \"bar\" and \"baz\"\n         ArrayList<String> list = new ArrayList<String>(Arrays.asList(trimmed.split(\",\")));\n-        list.add(domainNamespace);\n+        if (!list.contains(domainNamespace)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODExNzg3NA==", "bodyText": "This file was not part of my PR. I don't want to make changes to this file without running all the tests as it is a common file used by all the tests - worried about breaking tests. I can maybe take it up as separate work to fix this after discussing with Vanaja.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r398117874", "createdAt": "2020-03-25T19:34:25Z", "author": {"login": "bhavaniravichandran"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/LoadBalancer.java", "diffHunk": "@@ -190,7 +190,12 @@ private String getKubernetesNamespaceToUpdate(String domainNamespace) throws Exc\n         String trimmed = debracketed.replaceAll(\"\\\\s+\", \"\");\n         // now have an ArrayList containing \"foo\", \"bar\" and \"baz\"\n         ArrayList<String> list = new ArrayList<String>(Arrays.asList(trimmed.split(\",\")));\n-        list.add(domainNamespace);\n+        if (!list.contains(domainNamespace)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4NTUyNg=="}, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjYxNjgyOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoyMDoyMFrOF7dVTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTozNjo0OVrOF7vTnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg5MDg5NA==", "bodyText": "can you make this method generic, so that if we have to use from other test classes it can be used? does the other multi cluster test you are debugging needs to restart the cluster as well?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r397890894", "createdAt": "2020-03-25T14:20:20Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "diffHunk": "@@ -373,4 +405,62 @@ private ExecResult clearCache() throws Exception {\n     return result;\n   }\n \n+  private void restartCluster(String domainUid) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAzOTQwMA==", "bodyText": "restarting the cluster resolves the issue, but not sure it is the right solution. Not calling this method now, but did not want to delete it in case we decide that is what needs to be done.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r398039400", "createdAt": "2020-03-25T17:30:20Z", "author": {"login": "bhavaniravichandran"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "diffHunk": "@@ -373,4 +405,62 @@ private ExecResult clearCache() throws Exception {\n     return result;\n   }\n \n+  private void restartCluster(String domainUid) throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg5MDg5NA=="}, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE4NTM3Mg==", "bodyText": "Deleted the method. Will add it later if need to.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r398185372", "createdAt": "2020-03-25T21:36:49Z", "author": {"login": "bhavaniravichandran"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "diffHunk": "@@ -373,4 +405,62 @@ private ExecResult clearCache() throws Exception {\n     return result;\n   }\n \n+  private void restartCluster(String domainUid) throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg5MDg5NA=="}, "originalCommit": {"oid": "85218205dbe569ab66947fcce3596ac00514a0ff"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODY4ODgwOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/resources/apps/buildDeployCoherenceAppInPod.sh", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMzowOTozMFrOF7xvyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMzoxOToyNVrOF7x8uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIyNTM1Mg==", "bodyText": "it is my strong preference that you do not duplicate this string (the command to be run) -- it will just lead to future mistakes or difficulty understanding the intent", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r398225352", "createdAt": "2020-03-25T23:09:30Z", "author": {"login": "markxnelson"}, "path": "integration-tests/src/test/resources/apps/buildDeployCoherenceAppInPod.sh", "diffHunk": "@@ -75,11 +74,11 @@ cres=$?\n \n echo \"Deploy ${APP_NAME} ear using curl:\"\n \n-echo -e \"curl --noproxy '*' --silent  --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:multipart/form-data -F \\\"model={ name: '${APP_NAME}', targets: [ { identity: [ clusters, '${EAR_DEPLOY_TARGET}' ] } ] }\\\" -F \\\"sourcePath=@${ARCHIVE_FILE_EAR}\\\" -H \\\"Prefer:respond-async\\\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployear.out\\n\"\n+echo -e \"curl --noproxy '*' -v --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:application/json -d \"{name: '${APP_NAME}', sourcePath='${ARCHIVE_FILE_EAR}', targets: [ { identity: [ 'clusters', '${EAR_DEPLOY_TARGET}' ] } ] }\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployear.out\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f2f1063b4ee91ee90b5fd79e4dc26912543173"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIyNzI3OQ==", "bodyText": "you would like me to remove the echo statements?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r398227279", "createdAt": "2020-03-25T23:15:22Z", "author": {"login": "bhavaniravichandran"}, "path": "integration-tests/src/test/resources/apps/buildDeployCoherenceAppInPod.sh", "diffHunk": "@@ -75,11 +74,11 @@ cres=$?\n \n echo \"Deploy ${APP_NAME} ear using curl:\"\n \n-echo -e \"curl --noproxy '*' --silent  --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:multipart/form-data -F \\\"model={ name: '${APP_NAME}', targets: [ { identity: [ clusters, '${EAR_DEPLOY_TARGET}' ] } ] }\\\" -F \\\"sourcePath=@${ARCHIVE_FILE_EAR}\\\" -H \\\"Prefer:respond-async\\\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployear.out\\n\"\n+echo -e \"curl --noproxy '*' -v --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:application/json -d \"{name: '${APP_NAME}', sourcePath='${ARCHIVE_FILE_EAR}', targets: [ { identity: [ 'clusters', '${EAR_DEPLOY_TARGET}' ] } ] }\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployear.out\\n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIyNTM1Mg=="}, "originalCommit": {"oid": "b5f2f1063b4ee91ee90b5fd79e4dc26912543173"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIyODIzMA==", "bodyText": "no, those are useful, i just want you to do something like this pseudocode:\nCOMMAND=\"whatever the command is with all its arguments and stuff\"\necho \"Executing $COMMAND\"\n$COMMAND", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r398228230", "createdAt": "2020-03-25T23:18:07Z", "author": {"login": "markxnelson"}, "path": "integration-tests/src/test/resources/apps/buildDeployCoherenceAppInPod.sh", "diffHunk": "@@ -75,11 +74,11 @@ cres=$?\n \n echo \"Deploy ${APP_NAME} ear using curl:\"\n \n-echo -e \"curl --noproxy '*' --silent  --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:multipart/form-data -F \\\"model={ name: '${APP_NAME}', targets: [ { identity: [ clusters, '${EAR_DEPLOY_TARGET}' ] } ] }\\\" -F \\\"sourcePath=@${ARCHIVE_FILE_EAR}\\\" -H \\\"Prefer:respond-async\\\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployear.out\\n\"\n+echo -e \"curl --noproxy '*' -v --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:application/json -d \"{name: '${APP_NAME}', sourcePath='${ARCHIVE_FILE_EAR}', targets: [ { identity: [ 'clusters', '${EAR_DEPLOY_TARGET}' ] } ] }\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployear.out\\n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIyNTM1Mg=="}, "originalCommit": {"oid": "b5f2f1063b4ee91ee90b5fd79e4dc26912543173"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIyODY2NA==", "bodyText": "got it. Will fix it.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1494#discussion_r398228664", "createdAt": "2020-03-25T23:19:25Z", "author": {"login": "bhavaniravichandran"}, "path": "integration-tests/src/test/resources/apps/buildDeployCoherenceAppInPod.sh", "diffHunk": "@@ -75,11 +74,11 @@ cres=$?\n \n echo \"Deploy ${APP_NAME} ear using curl:\"\n \n-echo -e \"curl --noproxy '*' --silent  --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:multipart/form-data -F \\\"model={ name: '${APP_NAME}', targets: [ { identity: [ clusters, '${EAR_DEPLOY_TARGET}' ] } ] }\\\" -F \\\"sourcePath=@${ARCHIVE_FILE_EAR}\\\" -H \\\"Prefer:respond-async\\\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployear.out\\n\"\n+echo -e \"curl --noproxy '*' -v --user ${USER}:${PASSWORD} -H X-Requested-By:MyClient -H Accept:application/json -H Content-Type:application/json -d \"{name: '${APP_NAME}', sourcePath='${ARCHIVE_FILE_EAR}', targets: [ { identity: [ 'clusters', '${EAR_DEPLOY_TARGET}' ] } ] }\" -X POST http://${HOST}:${PORT}/management/weblogic/latest/edit/appDeployments -o ${APP_DIR_INPOD}/deployear.out\\n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIyNTM1Mg=="}, "originalCommit": {"oid": "b5f2f1063b4ee91ee90b5fd79e4dc26912543173"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4648, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}