{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwODAxMzMx", "number": 1976, "title": "Added automation to test StickySession using latest Traefik Version", "bodyText": "Passed Jenkins Jobs:\n\nparallel\n\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/2308/\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/2368/\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/2378/\n\nsequential\n\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/2384", "createdAt": "2020-10-09T20:19:53Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1976", "merged": true, "mergeCommit": {"oid": "213fb6db0fd1156b072e5a1d27031ba8dd4c13ce"}, "closed": true, "closedAt": "2020-10-15T14:01:47Z", "author": {"login": "hzhao-github"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQ8AMEAH2gAyNTAwODAxMzMxOmJlMWMzY2MyZTA4NTA1MDZkNjU3YmVkNWExNWJlNzQ4NzE2OGE2Zjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSlfPcgFqTUwODgzMjEwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "be1c3cc2e0850506d657bed5a15be7487168a6f9", "author": {"user": {"login": "hzhao-github", "name": "Huiling Zhao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/be1c3cc2e0850506d657bed5a15be7487168a6f9", "committedDate": "2020-10-09T20:14:32Z", "message": "Added automation for StickySession using latest Traefik Version jenkins-ignore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2OTUwODYz", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1976#pullrequestreview-506950863", "createdAt": "2020-10-12T22:19:27Z", "commit": {"oid": "be1c3cc2e0850506d657bed5a15be7487168a6f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMjoxOToyN1rOHgPA7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMjoxOToyN1rOHgPA7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU2MjQ3OQ==", "bodyText": "typo teh->the", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1976#discussion_r503562479", "createdAt": "2020-10-12T22:19:27Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItStickySession.java", "diffHunk": "@@ -481,4 +463,101 @@ private static String getHttpResponseAttribute(String httpResponseString, String\n \n     return httpAttribute;\n   }\n+\n+  private boolean createTraefikIngressRoutingRules() {\n+    logger.info(\"Creating ingress resource\");\n+\n+    // prepare Traefik ingress resource file\n+    final String ingressResourceFileName = \"traefik/traefik-ingress-rules-stickysession.yaml\";\n+    Path srcFile =\n+        Paths.get(ActionConstants.RESOURCE_DIR, ingressResourceFileName);\n+    Path dstFile =\n+        Paths.get(TestConstants.RESULTS_ROOT, ingressResourceFileName);\n+    assertDoesNotThrow(() -> {\n+      Files.deleteIfExists(dstFile);\n+      Files.createDirectories(dstFile.getParent());\n+      Files.write(dstFile, Files.readString(srcFile).replaceAll(\"@NS@\", domainNamespace)\n+          .replaceAll(\"@domain1uid@\", domainUid)\n+          .getBytes(StandardCharsets.UTF_8));\n+    });\n+\n+    // create Traefik ingress resource\n+    String createIngressCmd = \"kubectl create -f \" + dstFile;\n+    logger.info(\"Command to create Traefik ingress routing rules \" + createIngressCmd);\n+    ExecResult result = assertDoesNotThrow(() -> ExecCommand.exec(createIngressCmd, true),\n+        String.format(\"Failed to create Traefik ingress routing rules %s\", createIngressCmd));\n+    assertEquals(0, result.exitValue(),\n+        String.format(\"Failed to create Traefik ingress routing rules. Error is %s \", result.stderr()));\n+\n+    // get Traefik ingress service name\n+    String  getServiceName = \"kubectl get services -n \" + traefikNamespace + \" -o name\";\n+    logger.info(\"Command to get Traefik ingress service name \" + getServiceName);\n+    result = assertDoesNotThrow(() -> ExecCommand.exec(getServiceName, true),\n+        String.format(\"Failed to get Traefik ingress service name %s\", getServiceName));\n+    assertEquals(0, result.exitValue(),\n+        String.format(\"Failed to Traefik ingress service name . Error is %s \", result.stderr()));\n+    String traefikServiceName = result.stdout().trim().split(\"/\")[1];\n+\n+    // check that Traefik service exists in the Traefik namespace\n+    logger.info(\"Checking that Traefik service {0} exists in namespace {1}\",\n+        traefikServiceName, traefikNamespace);\n+    checkServiceExists(traefikServiceName, traefikNamespace);\n+\n+    return true;\n+  }\n+\n+  private int getIngressServiceNodePort(String nameSpace, String ingressServiceName, String channelName) {\n+    // get ingress service Nodeport\n+    int ingressServiceNodePort = assertDoesNotThrow(() ->\n+        getServiceNodePort(nameSpace, ingressServiceName, channelName),\n+          \"Getting web node port for Traefik loadbalancer failed\");\n+    logger.info(\"Node port for {0} is: {1} :\", ingressServiceName, ingressServiceNodePort);\n+\n+    return ingressServiceNodePort;\n+  }\n+\n+  private void sendHttpRequestsToTestSessionStickinessAndVerify(String hostname, int ingressServiceNodePort) {\n+    final int counterNum = 4;\n+    final String webServiceSetUrl = SESSMIGR_APP_WAR_NAME + \"/?setCounter=\" + counterNum;\n+    final String webServiceGetUrl = SESSMIGR_APP_WAR_NAME + \"/?getCounter\";\n+    final String serverNameAttr = \"servername\";\n+    final String sessionIdAttr = \"sessionid\";\n+    final String countAttr = \"count\";\n+\n+    // send a HTTP request to set http session state(count number) and save HTTP session info\n+    Map<String, String> httpDataInfo =\n+        getServerAndSessionInfoAndVerify(hostname,\n+          ingressServiceNodePort, webServiceSetUrl, \" -D \");\n+    // get server and session info from web service deployed on the cluster\n+    String serverName1 = httpDataInfo.get(serverNameAttr);\n+    String sessionId1 = httpDataInfo.get(sessionIdAttr);\n+    logger.info(\"Got the server {0} and session ID {1} from the first HTTP connection\",\n+        serverName1, sessionId1);\n+\n+    // send a HTTP request again to get server and session info\n+    httpDataInfo =\n+      getServerAndSessionInfoAndVerify(hostname,\n+        ingressServiceNodePort, webServiceGetUrl, \" -b \");\n+    // get server and session info from web service deployed on the cluster\n+    String serverName2 = httpDataInfo.get(serverNameAttr);\n+    String sessionId2 = httpDataInfo.get(sessionIdAttr);\n+    String countStr = httpDataInfo.get(countAttr);\n+    int count = Optional.ofNullable(countStr).map(Ints::tryParse).orElse(0);\n+    logger.info(\"Got the server {0}, session ID {1} and session state {2} \"\n+        + \"from the second HTTP connection\", serverName2, sessionId2, count);\n+\n+    // verify that two HTTP connections are sticky to the same server\n+    assertAll(\"Check that teh sticky session is supported\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be1c3cc2e0850506d657bed5a15be7487168a6f9"}, "originalPosition": 395}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4Mzg4NTk1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1976#pullrequestreview-508388595", "createdAt": "2020-10-14T14:10:02Z", "commit": {"oid": "be1c3cc2e0850506d657bed5a15be7487168a6f9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0cc436b9e69e1d2bf2cf1bad94b6200bd7141ce", "author": {"user": {"login": "hzhao-github", "name": "Huiling Zhao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b0cc436b9e69e1d2bf2cf1bad94b6200bd7141ce", "committedDate": "2020-10-14T20:10:27Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into stickysession-traefik-tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2afed3f0374db77a2c9e843bf86d214f9a514495", "author": {"user": {"login": "hzhao-github", "name": "Huiling Zhao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2afed3f0374db77a2c9e843bf86d214f9a514495", "committedDate": "2020-10-14T22:55:30Z", "message": "Corrected a typo jenkins-ignore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4ODMyMTA3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1976#pullrequestreview-508832107", "createdAt": "2020-10-14T23:08:29Z", "commit": {"oid": "2afed3f0374db77a2c9e843bf86d214f9a514495"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4227, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}