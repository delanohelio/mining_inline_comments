{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MzIxMzI0", "number": 2093, "title": "OWLS-86407 - Fixed the logic to start clustered managed server pods when admin server pod not running", "bodyText": "Fixed the logic to start clustered managed server pods when admin server pod is not running. The previous logic was assuming that admin server pod is scheduled and ready when starting managed server pods.   Added a unit test for the new behavior.\nIntegration test results at - https://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/3305", "createdAt": "2020-12-09T16:56:38Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2093", "merged": true, "mergeCommit": {"oid": "9005e908bb605a1a67cf9ea36d01955481630127"}, "closed": true, "closedAt": "2020-12-11T18:41:33Z", "author": {"login": "ankedia"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkNzjVgH2gAyNTM1MzIxMzI0OmExZjhhYThkMzQ1NzdjZDI1NDM0MjEzN2MyM2U3MDdjMDhjNWE3ZjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlJrICgFqTU1MDE5ODczMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a1f8aa8d34577cd254342137c23e707c08c5a7f2", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a1f8aa8d34577cd254342137c23e707c08c5a7f2", "committedDate": "2020-12-08T17:43:35Z", "message": "OWLS-86407 - Fixed logic to start clustered managed server pods when admin server pod is not running"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "848221cf90236ff3a50ada3e1be7b8b2f727c63c", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/848221cf90236ff3a50ada3e1be7b8b2f727c63c", "committedDate": "2020-12-08T21:04:30Z", "message": "minor change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1214a384ebe9d829456d17ffa4a675c19441fb5", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b1214a384ebe9d829456d17ffa4a675c19441fb5", "committedDate": "2020-12-09T16:49:50Z", "message": "Add a unit test case for OWLS-86407"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NTI3ODM0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2093#pullrequestreview-548527834", "createdAt": "2020-12-09T19:18:17Z", "commit": {"oid": "b1214a384ebe9d829456d17ffa4a675c19441fb5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NjkwNTE2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2093#pullrequestreview-548690516", "createdAt": "2020-12-09T23:10:31Z", "commit": {"oid": "b1214a384ebe9d829456d17ffa4a675c19441fb5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMzoxMDozMVrOICttfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwMDoyOTozN1rOICv0nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcxNjk5MA==", "bodyText": "Please get in the habit of writing your unit tests before you make production code changes. It not only guides what you then implement, it also leads to writing better tests.\nStart with the name. It should explain what is going on, and this doesn't, as it is simply not the case that we always want to start a managed server pod when there is no admin server. The case, based on the JIRA, is that if we scale up a cluster, we will start a managed server even if the admin server is not running, and the test should reflect that. So maybe something like 'whileAdminServerStopped_canStartManagedServer' would be better.\nIn the body of the test the first call is to createDomainPresenceInfoWithServers(). It is really hard to tell what that is doing here. In the current test class, it was called exactly once: passing the name of the admin server, to indicate that was already running. Remember Robert Martin's admonition on names, I would probably create a new method that does what this call does, but is named createDomainPresenceInfoWithNoAdminServer. Perhaps we need, then, another call named createDomainPresenceInfoWithAdminServer to make it clearer. Since there are no invocations that actually pass in more servers, that should suffice.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2093#discussion_r539716990", "createdAt": "2020-12-09T23:10:31Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/steps/ManagedServerUpIteratorStepTest.java", "diffHunk": "@@ -249,6 +248,19 @@ public void whenConcurrencyLimitIs1_secondClusteredServerDoesNotStartIfFirstIsNo\n     assertThat(getStartedManagedServers(), hasSize(1));\n   }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1214a384ebe9d829456d17ffa4a675c19441fb5"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc0Nzg0Mg==", "bodyText": "This is really unclear. The old call seemed to indicate that we were getting the number of managed servers in the specified cluster. Why do we also pass in \"admin-server\"? The interface is problematic.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2093#discussion_r539747842", "createdAt": "2020-12-10T00:20:28Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/DomainPresenceInfoTest.java", "diffHunk": "@@ -128,9 +128,9 @@ public void countScheduledServers() {\n     addServer(\"MS5\", null);\n     addScheduledServer(\"MS6\", null);\n \n-    assertThat(info.getNumScheduledServers(\"cluster1\"), equalTo(2L));\n-    assertThat(info.getNumScheduledServers(\"cluster2\"), equalTo(2L));\n-    assertThat(info.getNumScheduledServers(null), equalTo(1L));\n+    assertThat(info.getNumScheduledManagedServers(\"cluster1\", \"admin-server\"), equalTo(2L));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1214a384ebe9d829456d17ffa4a675c19441fb5"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc1MTMzOQ==", "bodyText": "This would be a good time to do some refactoring. The expression is not so easy to read and understand.\nI would start by extracting maxConcurrency == 0 into a method named 'ignoreConcurrencyLimits' and list that first in the expression, not last. Then you don't really need this.maxConcurrency > 0 as that is implied (unless there is some support for negative values).\nThe remaining part is still too complex and not obvious. So extract numStarted.get() into its own method, getNumServersStarted as there is no reason for all of the callers to know that there is an Atomic backing the value. Then can you explain what the rest of the logic is?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2093#discussion_r539751339", "createdAt": "2020-12-10T00:29:00Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/steps/ManagedServerUpIteratorStep.java", "diffHunk": "@@ -168,21 +171,23 @@ public NextAction apply(Packet packet) {\n \n       if (startDetailsQueue.isEmpty()) {\n         return doNext(new ManagedServerUpAfterStep(getNext()), packet);\n-      } else if (hasServerAvailableToStart(packet.getSpi(DomainPresenceInfo.class))) {\n+      } else if (hasServerAvailableToStart(packet)) {\n         numStarted.getAndIncrement();\n         return doForkJoin(this, packet, Collections.singletonList(startDetailsQueue.poll()));\n       } else {\n         return doDelay(this, packet, SCHEDULING_DETECTION_DELAY, TimeUnit.MILLISECONDS);\n       }\n     }\n \n-    private boolean hasServerAvailableToStart(DomainPresenceInfo info) {\n-      return ((numStarted.get() < info.getNumScheduledServers(clusterName))\n-              && (canStartConcurrently(info.getNumReadyServers(clusterName))));\n+    private boolean hasServerAvailableToStart(Packet packet) {\n+      DomainPresenceInfo info = packet.getSpi(DomainPresenceInfo.class);\n+      String adminServerName = ((WlsDomainConfig) packet.get(DOMAIN_TOPOLOGY)).getAdminServerName();\n+      return ((numStarted.get() <= info.getNumScheduledManagedServers(clusterName, adminServerName)\n+              && (canStartConcurrently(info.getNumReadyManagedServers(clusterName, adminServerName)))));\n     }\n \n     private boolean canStartConcurrently(long numReady) {\n-      return ((this.maxConcurrency > 0) && (numStarted.get() < (this.maxConcurrency + numReady - 1)))\n+      return ((this.maxConcurrency > 0) && (numStarted.get() < (this.maxConcurrency + numReady)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1214a384ebe9d829456d17ffa4a675c19441fb5"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc1MTU4MQ==", "bodyText": "good change. There was no need to expose the implementation as it had been.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2093#discussion_r539751581", "createdAt": "2020-12-10T00:29:37Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/steps/ManagedServerUpIteratorStep.java", "diffHunk": "@@ -168,21 +171,23 @@ public NextAction apply(Packet packet) {\n \n       if (startDetailsQueue.isEmpty()) {\n         return doNext(new ManagedServerUpAfterStep(getNext()), packet);\n-      } else if (hasServerAvailableToStart(packet.getSpi(DomainPresenceInfo.class))) {\n+      } else if (hasServerAvailableToStart(packet)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1214a384ebe9d829456d17ffa4a675c19441fb5"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MzEzMjIx", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2093#pullrequestreview-549313221", "createdAt": "2020-12-10T15:27:44Z", "commit": {"oid": "b1214a384ebe9d829456d17ffa4a675c19441fb5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6821af45f0b617c6300edcf65d349fc7a568540", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d6821af45f0b617c6300edcf65d349fc7a568540", "committedDate": "2020-12-10T16:16:04Z", "message": "changes to address PR review comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cffde403c130da401fac101e168dbd8207a7d6f7", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/cffde403c130da401fac101e168dbd8207a7d6f7", "committedDate": "2020-12-10T16:31:46Z", "message": "PR review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NDEwOTU4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2093#pullrequestreview-549410958", "createdAt": "2020-12-10T17:00:57Z", "commit": {"oid": "cffde403c130da401fac101e168dbd8207a7d6f7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNzowMDo1N1rOIDTpxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNzowMDo1N1rOIDTpxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMzODYyOQ==", "bodyText": "You should no longer need (this.maxConcurrency > 0) here, as you cannot reach this condition when it is 0.\nCan you explain the logic in the rest of the expression? Why can you start a new server when the number of servers started is less than the concurrency limit added to the number ready?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2093#discussion_r540338629", "createdAt": "2020-12-10T17:00:57Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/steps/ManagedServerUpIteratorStep.java", "diffHunk": "@@ -182,13 +182,21 @@ public NextAction apply(Packet packet) {\n     private boolean hasServerAvailableToStart(Packet packet) {\n       DomainPresenceInfo info = packet.getSpi(DomainPresenceInfo.class);\n       String adminServerName = ((WlsDomainConfig) packet.get(DOMAIN_TOPOLOGY)).getAdminServerName();\n-      return ((numStarted.get() <= info.getNumScheduledManagedServers(clusterName, adminServerName)\n+      return ((getNumServersStarted() <= info.getNumScheduledManagedServers(clusterName, adminServerName)\n               && (canStartConcurrently(info.getNumReadyManagedServers(clusterName, adminServerName)))));\n     }\n \n     private boolean canStartConcurrently(long numReady) {\n-      return ((this.maxConcurrency > 0) && (numStarted.get() < (this.maxConcurrency + numReady)))\n-          || (this.maxConcurrency == 0);\n+      return (ignoreConcurrencyLimits() ||\n+              (this.maxConcurrency > 0) && (getNumServersStarted() < (this.maxConcurrency + numReady)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cffde403c130da401fac101e168dbd8207a7d6f7"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94a59670a1640c927131559e62550e2991bfc26b", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/94a59670a1640c927131559e62550e2991bfc26b", "committedDate": "2020-12-10T19:00:37Z", "message": "Remove redundant condition."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cc07198104c0563d8d622ce1de72128a09c62b4", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6cc07198104c0563d8d622ce1de72128a09c62b4", "committedDate": "2020-12-11T15:15:30Z", "message": "Refactoring change as per the review comment."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "482dc9ac0f455251a19690afb9b18b74717d72d7", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/482dc9ac0f455251a19690afb9b18b74717d72d7", "committedDate": "2020-12-11T15:19:53Z", "message": "Chnaged method name to be consistent."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMTkxMTE1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2093#pullrequestreview-550191115", "createdAt": "2020-12-11T15:20:06Z", "commit": {"oid": "6cc07198104c0563d8d622ce1de72128a09c62b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNToyMDowN1rOID9W7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNToyMDowN1rOID9W7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyMTkzNA==", "bodyText": "Shouldn't the parentheses be around the expression on the right, not the entire condition? Does Intellij not highlight it for you?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2093#discussion_r541021934", "createdAt": "2020-12-11T15:20:07Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/steps/ManagedServerUpIteratorStep.java", "diffHunk": "@@ -168,22 +171,35 @@ public NextAction apply(Packet packet) {\n \n       if (startDetailsQueue.isEmpty()) {\n         return doNext(new ManagedServerUpAfterStep(getNext()), packet);\n-      } else if (hasServerAvailableToStart(packet.getSpi(DomainPresenceInfo.class))) {\n+      } else if (hasServerAvailableToStart(packet)) {\n         numStarted.getAndIncrement();\n         return doForkJoin(this, packet, Collections.singletonList(startDetailsQueue.poll()));\n       } else {\n         return doDelay(this, packet, SCHEDULING_DETECTION_DELAY, TimeUnit.MILLISECONDS);\n       }\n     }\n \n-    private boolean hasServerAvailableToStart(DomainPresenceInfo info) {\n-      return ((numStarted.get() < info.getNumScheduledServers(clusterName))\n-              && (canStartConcurrently(info.getNumReadyServers(clusterName))));\n+    private boolean hasServerAvailableToStart(Packet packet) {\n+      DomainPresenceInfo info = packet.getSpi(DomainPresenceInfo.class);\n+      String adminServerName = ((WlsDomainConfig) packet.get(DOMAIN_TOPOLOGY)).getAdminServerName();\n+      return ((getNumServersStarted() <= info.getNumScheduledManagedServers(clusterName, adminServerName)\n+              && (canStartConcurrently(info.getNumReadyManagedServers(clusterName, adminServerName)))));\n     }\n \n     private boolean canStartConcurrently(long numReady) {\n-      return ((this.maxConcurrency > 0) && (numStarted.get() < (this.maxConcurrency + numReady - 1)))\n-          || (this.maxConcurrency == 0);\n+      return (ignoreConcurrencyLimits() || numPodsNotReady(numReady) < this.maxConcurrency);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc07198104c0563d8d622ce1de72128a09c62b4"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMTk4NzMz", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2093#pullrequestreview-550198733", "createdAt": "2020-12-11T15:28:41Z", "commit": {"oid": "6cc07198104c0563d8d622ce1de72128a09c62b4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3974, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}