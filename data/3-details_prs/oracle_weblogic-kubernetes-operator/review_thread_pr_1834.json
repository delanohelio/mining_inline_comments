{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NDI0Mzcw", "number": 1834, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODo1ODoxN1rOER7sJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxOTowMzozOVrOER7x9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjM5MjA0OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Application.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODo1ODoxN1rOG26bXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzowMzoyNlrOG2_5gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzMzU2NQ==", "bodyText": "The podName can differ from the service name.  Should the second 'podName' be converted to DNS 1123?  Alternatively, it could  be changed to \"$SERVICE_NAME\" as I assume the bash command will have access to the pod's env vars...", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1834#discussion_r460233565", "createdAt": "2020-07-24T18:58:17Z", "author": {"login": "tbarnes-us"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Application.java", "diffHunk": "@@ -78,6 +80,42 @@ public static boolean appAccessibleInPod(\n       getLogger().warning(String.format(\"Failed to find pod %s to check the app\", podName));\n       return false;\n     }\n-  } \n+  }\n+\n+  /**\n+   * Check if an application is accessible inside a WebLogic server pod.\n+   *\n+   * @param namespace Kubernetes namespace where the WebLogic server pod is running\n+   * @param podName name of the WebLogic server pod\n+   * @param port internal port of the managed server running in the pod\n+   * @param appPath path to access the application\n+   * @param expectedResponse expected response from the app\n+   * @return true if the command succeeds\n+   */\n+  public static boolean appAccessibleInPodKubectl(\n+      String namespace,\n+      String podName,\n+      String port,\n+      String appPath,\n+      String expectedResponse\n+  ) {\n+\n+    // calling \"kubectl exec\" command to access the app inside a pod\n+    String cmd = String.format(\n+        \"kubectl -n %s exec -it %s -- /bin/bash -c 'curl http://%s:%s/%s'\",\n+        namespace,\n+        podName,\n+        podName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ee4961affc415bda1d87595eb39cfa1f5680644"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzMzc2OQ==", "bodyText": "(DNS 1123 == podName all lower case with \"_\" converted to \"-\")", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1834#discussion_r460233769", "createdAt": "2020-07-24T18:58:48Z", "author": {"login": "tbarnes-us"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Application.java", "diffHunk": "@@ -78,6 +80,42 @@ public static boolean appAccessibleInPod(\n       getLogger().warning(String.format(\"Failed to find pod %s to check the app\", podName));\n       return false;\n     }\n-  } \n+  }\n+\n+  /**\n+   * Check if an application is accessible inside a WebLogic server pod.\n+   *\n+   * @param namespace Kubernetes namespace where the WebLogic server pod is running\n+   * @param podName name of the WebLogic server pod\n+   * @param port internal port of the managed server running in the pod\n+   * @param appPath path to access the application\n+   * @param expectedResponse expected response from the app\n+   * @return true if the command succeeds\n+   */\n+  public static boolean appAccessibleInPodKubectl(\n+      String namespace,\n+      String podName,\n+      String port,\n+      String appPath,\n+      String expectedResponse\n+  ) {\n+\n+    // calling \"kubectl exec\" command to access the app inside a pod\n+    String cmd = String.format(\n+        \"kubectl -n %s exec -it %s -- /bin/bash -c 'curl http://%s:%s/%s'\",\n+        namespace,\n+        podName,\n+        podName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzMzU2NQ=="}, "originalCommit": {"oid": "1ee4961affc415bda1d87595eb39cfa1f5680644"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI3Mzc5MA==", "bodyText": "I totally agree that the code should convert the podName to a legal DNS1123 name. But this pattern is used everywhere in the integration test cases; the assumption is that the test code will not use any non-legal-1123 name as the domainUID, clusterName, managedServerPrefix and etc.  I know this assumption may not be true once more engineers start to write integration test cases.\nDo you want to have a task to do a global fix?  We need to get this change in to fix the hanging issue that impacts everyone that run Jenkins jobs to verify their changes.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1834#discussion_r460273790", "createdAt": "2020-07-24T20:31:06Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Application.java", "diffHunk": "@@ -78,6 +80,42 @@ public static boolean appAccessibleInPod(\n       getLogger().warning(String.format(\"Failed to find pod %s to check the app\", podName));\n       return false;\n     }\n-  } \n+  }\n+\n+  /**\n+   * Check if an application is accessible inside a WebLogic server pod.\n+   *\n+   * @param namespace Kubernetes namespace where the WebLogic server pod is running\n+   * @param podName name of the WebLogic server pod\n+   * @param port internal port of the managed server running in the pod\n+   * @param appPath path to access the application\n+   * @param expectedResponse expected response from the app\n+   * @return true if the command succeeds\n+   */\n+  public static boolean appAccessibleInPodKubectl(\n+      String namespace,\n+      String podName,\n+      String port,\n+      String appPath,\n+      String expectedResponse\n+  ) {\n+\n+    // calling \"kubectl exec\" command to access the app inside a pod\n+    String cmd = String.format(\n+        \"kubectl -n %s exec -it %s -- /bin/bash -c 'curl http://%s:%s/%s'\",\n+        namespace,\n+        podName,\n+        podName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzMzU2NQ=="}, "originalCommit": {"oid": "1ee4961affc415bda1d87595eb39cfa1f5680644"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMzIwMQ==", "bodyText": "Didn't know that.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1834#discussion_r460323201", "createdAt": "2020-07-24T23:03:26Z", "author": {"login": "tbarnes-us"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Application.java", "diffHunk": "@@ -78,6 +80,42 @@ public static boolean appAccessibleInPod(\n       getLogger().warning(String.format(\"Failed to find pod %s to check the app\", podName));\n       return false;\n     }\n-  } \n+  }\n+\n+  /**\n+   * Check if an application is accessible inside a WebLogic server pod.\n+   *\n+   * @param namespace Kubernetes namespace where the WebLogic server pod is running\n+   * @param podName name of the WebLogic server pod\n+   * @param port internal port of the managed server running in the pod\n+   * @param appPath path to access the application\n+   * @param expectedResponse expected response from the app\n+   * @return true if the command succeeds\n+   */\n+  public static boolean appAccessibleInPodKubectl(\n+      String namespace,\n+      String podName,\n+      String port,\n+      String appPath,\n+      String expectedResponse\n+  ) {\n+\n+    // calling \"kubectl exec\" command to access the app inside a pod\n+    String cmd = String.format(\n+        \"kubectl -n %s exec -it %s -- /bin/bash -c 'curl http://%s:%s/%s'\",\n+        namespace,\n+        podName,\n+        podName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzMzU2NQ=="}, "originalCommit": {"oid": "1ee4961affc415bda1d87595eb39cfa1f5680644"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjQwNjk1OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Application.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxOTowMzozOVrOG26kyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxOTo1OTo0MVrOG28GNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzNTk3OQ==", "bodyText": "For other tests, we've needed to have multiple retries for initial curl attempts as tests can sometimes try access an app before it or the service is fully deployed; in addition, it's been helpful to tune the curl command's connection and overall timeouts.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1834#discussion_r460235979", "createdAt": "2020-07-24T19:03:39Z", "author": {"login": "tbarnes-us"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Application.java", "diffHunk": "@@ -78,6 +80,42 @@ public static boolean appAccessibleInPod(\n       getLogger().warning(String.format(\"Failed to find pod %s to check the app\", podName));\n       return false;\n     }\n-  } \n+  }\n+\n+  /**\n+   * Check if an application is accessible inside a WebLogic server pod.\n+   *\n+   * @param namespace Kubernetes namespace where the WebLogic server pod is running\n+   * @param podName name of the WebLogic server pod\n+   * @param port internal port of the managed server running in the pod\n+   * @param appPath path to access the application\n+   * @param expectedResponse expected response from the app\n+   * @return true if the command succeeds\n+   */\n+  public static boolean appAccessibleInPodKubectl(\n+      String namespace,\n+      String podName,\n+      String port,\n+      String appPath,\n+      String expectedResponse\n+  ) {\n+\n+    // calling \"kubectl exec\" command to access the app inside a pod\n+    String cmd = String.format(\n+        \"kubectl -n %s exec -it %s -- /bin/bash -c 'curl http://%s:%s/%s'\",\n+        namespace,\n+        podName,\n+        podName,\n+        port,\n+        appPath);\n+\n+    CommandParams params = Command\n+        .defaultCommandParams()\n+        .command(cmd)\n+        .saveResults(true)\n+        .redirect(false)\n+        .verbose(false);\n+    return Command.withParams(params).executeAndVerify(expectedResponse);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ee4961affc415bda1d87595eb39cfa1f5680644"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0MzU2NQ==", "bodyText": "For MII sample testing, we use \"--connect-timeout 5 --max-time 20\" and loop the curl command up to 15 times on a failure (5 seconds between each try).", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1834#discussion_r460243565", "createdAt": "2020-07-24T19:20:36Z", "author": {"login": "tbarnes-us"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Application.java", "diffHunk": "@@ -78,6 +80,42 @@ public static boolean appAccessibleInPod(\n       getLogger().warning(String.format(\"Failed to find pod %s to check the app\", podName));\n       return false;\n     }\n-  } \n+  }\n+\n+  /**\n+   * Check if an application is accessible inside a WebLogic server pod.\n+   *\n+   * @param namespace Kubernetes namespace where the WebLogic server pod is running\n+   * @param podName name of the WebLogic server pod\n+   * @param port internal port of the managed server running in the pod\n+   * @param appPath path to access the application\n+   * @param expectedResponse expected response from the app\n+   * @return true if the command succeeds\n+   */\n+  public static boolean appAccessibleInPodKubectl(\n+      String namespace,\n+      String podName,\n+      String port,\n+      String appPath,\n+      String expectedResponse\n+  ) {\n+\n+    // calling \"kubectl exec\" command to access the app inside a pod\n+    String cmd = String.format(\n+        \"kubectl -n %s exec -it %s -- /bin/bash -c 'curl http://%s:%s/%s'\",\n+        namespace,\n+        podName,\n+        podName,\n+        port,\n+        appPath);\n+\n+    CommandParams params = Command\n+        .defaultCommandParams()\n+        .command(cmd)\n+        .saveResults(true)\n+        .redirect(false)\n+        .verbose(false);\n+    return Command.withParams(params).executeAndVerify(expectedResponse);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzNTk3OQ=="}, "originalCommit": {"oid": "1ee4961affc415bda1d87595eb39cfa1f5680644"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI2MDkxNw==", "bodyText": "The test that uses this assertion has a retry logic at the higher level; this is the pattern used in the Juni5 integration tests.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1834#discussion_r460260917", "createdAt": "2020-07-24T19:59:41Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Application.java", "diffHunk": "@@ -78,6 +80,42 @@ public static boolean appAccessibleInPod(\n       getLogger().warning(String.format(\"Failed to find pod %s to check the app\", podName));\n       return false;\n     }\n-  } \n+  }\n+\n+  /**\n+   * Check if an application is accessible inside a WebLogic server pod.\n+   *\n+   * @param namespace Kubernetes namespace where the WebLogic server pod is running\n+   * @param podName name of the WebLogic server pod\n+   * @param port internal port of the managed server running in the pod\n+   * @param appPath path to access the application\n+   * @param expectedResponse expected response from the app\n+   * @return true if the command succeeds\n+   */\n+  public static boolean appAccessibleInPodKubectl(\n+      String namespace,\n+      String podName,\n+      String port,\n+      String appPath,\n+      String expectedResponse\n+  ) {\n+\n+    // calling \"kubectl exec\" command to access the app inside a pod\n+    String cmd = String.format(\n+        \"kubectl -n %s exec -it %s -- /bin/bash -c 'curl http://%s:%s/%s'\",\n+        namespace,\n+        podName,\n+        podName,\n+        port,\n+        appPath);\n+\n+    CommandParams params = Command\n+        .defaultCommandParams()\n+        .command(cmd)\n+        .saveResults(true)\n+        .redirect(false)\n+        .verbose(false);\n+    return Command.withParams(params).executeAndVerify(expectedResponse);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzNTk3OQ=="}, "originalCommit": {"oid": "1ee4961affc415bda1d87595eb39cfa1f5680644"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4143, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}