{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNzExNzg1", "number": 1723, "title": "changes for OWLS-82320 - Recieve API error and operator restarts when namespaces is removed", "bodyText": "This PR addresses the periodic restart of operator pod when operator's target namespace contains a non-existent namespace during initial startup. The second issue of API exception being received and logged is because of permission error or missing namespace (403 or 404 status code). This might be expected behavior.", "createdAt": "2020-06-10T21:25:59Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1723", "merged": true, "mergeCommit": {"oid": "9b85b7a25730ca105d9333628184c4677a37be31"}, "closed": true, "closedAt": "2020-06-16T19:33:29Z", "author": {"login": "ankedia"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp_BIfAH2gAyNDMyNzExNzg1OjhhNWY0YzU3ZTMzZDQyMmY2MGVmYzI1ZWVjMGIxZWYwYTdhMjViODk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcr6dmXgH2gAyNDMyNzExNzg1OjFhY2Q3ZThjNmEzNzQ3ZGYwODcxZjM5ZWRiOWFiNzk0YzY0NGU1ZmY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8a5f4c57e33d422f60efc25eec0b1ef0a7a25b89", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8a5f4c57e33d422f60efc25eec0b1ef0a7a25b89", "committedDate": "2020-06-10T19:42:14Z", "message": "changes for OWLS-82320 - Recieve API error and operator restarts when namespaces is removed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7144add48458d0cf2b7521c02056ae73d318eaa5", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7144add48458d0cf2b7521c02056ae73d318eaa5", "committedDate": "2020-06-10T21:06:41Z", "message": "change to execute start namespaces step in async call failure case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4OTY2NzMz", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1723#pullrequestreview-428966733", "createdAt": "2020-06-11T14:26:21Z", "commit": {"oid": "7144add48458d0cf2b7521c02056ae73d318eaa5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDoyNjoyMlrOGif3Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDoyNjoyMlrOGif3Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyNjc5NQ==", "bodyText": "If I understand the change correctly, domain CRD creation and  start namespaces logic are associated with readExistingNamespaces(), which is skipped in the dedicated mode. Does that mean in dedicated mode, CRD and domains will not be created? I may have missed something. Have you tested dedicated mode use cases?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1723#discussion_r438826795", "createdAt": "2020-06-11T14:26:22Z", "author": {"login": "doxiao"}, "path": "operator/src/main/java/oracle/kubernetes/operator/Main.java", "diffHunk": "@@ -191,11 +192,9 @@ private static void begin() {\n \n       Step strategy = Step.chain(\n           new InitializeNamespacesSecurityStep(targetNamespaces),\n-          new NamespaceRulesReviewStep(),\n-          CrdHelper.createDomainCrdStep(version,\n-              new StartNamespacesStep(targetNamespaces, false)));\n+          new NamespaceRulesReviewStep());\n       if (!isDedicated()) {\n-        strategy = Step.chain(strategy, readExistingNamespaces());\n+        strategy = Step.chain(strategy, readExistingNamespaces(targetNamespaces));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7144add48458d0cf2b7521c02056ae73d318eaa5"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6e63b68245e07a8e0fd431363aad619c1e579cc", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e6e63b68245e07a8e0fd431363aad619c1e579cc", "committedDate": "2020-06-11T16:15:03Z", "message": "changes for dedicated mode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MjA1MDA5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1723#pullrequestreview-429205009", "createdAt": "2020-06-11T19:05:09Z", "commit": {"oid": "e6e63b68245e07a8e0fd431363aad619c1e579cc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTowNTowOVrOGiq58A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTowNTowOVrOGiq58A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAwNzcyOA==", "bodyText": "recheckDomains method also has similar filtering logic. Can yon double check and see if the logic there takes care of non-existent namespaces correctly as well?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1723#discussion_r439007728", "createdAt": "2020-06-11T19:05:09Z", "author": {"login": "doxiao"}, "path": "operator/src/main/java/oracle/kubernetes/operator/Main.java", "diffHunk": "@@ -858,24 +866,63 @@ public NextAction onFailure(Packet packet, CallResponse<V1NamespaceList> callRes\n     @Override\n     protected NextAction onFailureNoRetry(Packet packet, CallResponse<V1NamespaceList> callResponse) {\n       return isNotAuthorizedOrForbidden(callResponse)\n-          ? doNext(packet) : super.onFailureNoRetry(packet, callResponse);\n+          ? doNext(createDomainCrdAndStartNamespaces(targetNamespaces), packet) : \n+            super.onFailureNoRetry(packet, callResponse);\n     }\n \n     @Override\n     public NextAction onSuccess(Packet packet, CallResponse<V1NamespaceList> callResponse) {\n       V1NamespaceList result = callResponse.getResult();\n       // don't bother processing pre-existing events\n-\n-      if (namespaceWatcher == null) {\n-        namespaceWatcher = createNamespaceWatcher(getInitialResourceVersion(result));\n+      String intialResourceVersion = getInitialResourceVersion(result);\n+      List<String> nsList = getExistingNamespaces(result);\n+      \n+      Set<String> namespacesToStart = new TreeSet<>(targetNamespaces);\n+      for (String ns : targetNamespaces) {\n+        if (!nsList.contains(ns)) {\n+          namespacesToStart.remove(ns);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6e63b68245e07a8e0fd431363aad619c1e579cc"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b937cf262bf2cbc21a480aed900b240417eacb2f", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b937cf262bf2cbc21a480aed900b240417eacb2f", "committedDate": "2020-06-12T00:25:31Z", "message": "Handle empty list for namespaces to start"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NjMwMzE4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1723#pullrequestreview-429630318", "createdAt": "2020-06-12T10:24:07Z", "commit": {"oid": "b937cf262bf2cbc21a480aed900b240417eacb2f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeb38ccc753c5ddaef2d3d0c7d05f6eba2cfb874", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/aeb38ccc753c5ddaef2d3d0c7d05f6eba2cfb874", "committedDate": "2020-06-12T17:32:39Z", "message": "changes to log a warning when namespace is target namespace and doesn't exist and a minor fix."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5OTQ4NjMw", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1723#pullrequestreview-429948630", "createdAt": "2020-06-12T18:18:53Z", "commit": {"oid": "aeb38ccc753c5ddaef2d3d0c7d05f6eba2cfb874"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODoxODo1M1rOGjNieA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODoxODo1M1rOGjNieA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU3NTE2MA==", "bodyText": "Sorry, I did not notice this earlier.\nI am not sure what this change is for. It tries to create domain CRD and start the namespaces if isNotAuthorizedOrForbidden() returns true. Not sure this is correct. in addition, this change does not seem to relate to non-existing namespaces.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1723#discussion_r439575160", "createdAt": "2020-06-12T18:18:53Z", "author": {"login": "doxiao"}, "path": "operator/src/main/java/oracle/kubernetes/operator/Main.java", "diffHunk": "@@ -858,24 +866,70 @@ public NextAction onFailure(Packet packet, CallResponse<V1NamespaceList> callRes\n     @Override\n     protected NextAction onFailureNoRetry(Packet packet, CallResponse<V1NamespaceList> callResponse) {\n       return isNotAuthorizedOrForbidden(callResponse)\n-          ? doNext(packet) : super.onFailureNoRetry(packet, callResponse);\n+          ? doNext(createDomainCrdAndStartNamespaces(targetNamespaces), packet) : ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb38ccc753c5ddaef2d3d0c7d05f6eba2cfb874"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMDQwODYz", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1723#pullrequestreview-430040863", "createdAt": "2020-06-12T21:13:20Z", "commit": {"oid": "aeb38ccc753c5ddaef2d3d0c7d05f6eba2cfb874"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1acd7e8c6a3747df0871f39edb9ab794c644e5ff", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1acd7e8c6a3747df0871f39edb9ab794c644e5ff", "committedDate": "2020-06-16T19:31:39Z", "message": "Merge remote-tracking branch 'origin/develop' into OWLS-82320"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4511, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}