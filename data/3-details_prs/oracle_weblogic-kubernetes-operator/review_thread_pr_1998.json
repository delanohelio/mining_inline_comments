{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2Mzk3Mzcx", "number": 1998, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTo0OToyNFrOEv2thA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDowNDoyMlrOEwdDfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjE0OTE2OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Docker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTo0OToyNFrOHlEo1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNTozMzo0M1rOHlytRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODYzNTM1MA==", "bodyText": "Can you check if the command is executed successfully or not by asserting the exit code or not null return string from exec command", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1998#discussion_r508635350", "createdAt": "2020-10-20T15:49:24Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Docker.java", "diffHunk": "@@ -121,4 +125,26 @@ public static JsonObject createDockerConfigJson(String username, String password\n     configJsonObject.add(\"auths\", registryObject);\n     return configJsonObject;\n   }\n+\n+  /**\n+   * Get environment variable from docker image.\n+   * @param imageName image name\n+   * @param envVarName environment variable name\n+   * @return environment variable in the image\n+   */\n+  public static String getImageEnvVar(String imageName, String envVarName) {\n+    LoggingFacade logger = getLogger();\n+    String cmdToExecute = String.format(\"docker run %s /bin/bash -c 'echo \\\"$%s\\\"'\", imageName, envVarName);\n+    logger.info(\"getImageEnvVar with imageName: {0}, envVarName: {1}\", imageName, envVarName);\n+    ExecResult result = Command.withParams(\n+                              new CommandParams()\n+                                .command(cmdToExecute)\n+                                .saveResults(true)\n+                                .redirect(true)\n+                            ).executeAndReturnResult();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7fff0c63252a23bac20e24e2c082dbbb2ddbfd"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5MDE1MA==", "bodyText": "Done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1998#discussion_r509390150", "createdAt": "2020-10-21T15:33:43Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Docker.java", "diffHunk": "@@ -121,4 +125,26 @@ public static JsonObject createDockerConfigJson(String username, String password\n     configJsonObject.add(\"auths\", registryObject);\n     return configJsonObject;\n   }\n+\n+  /**\n+   * Get environment variable from docker image.\n+   * @param imageName image name\n+   * @param envVarName environment variable name\n+   * @return environment variable in the image\n+   */\n+  public static String getImageEnvVar(String imageName, String envVarName) {\n+    LoggingFacade logger = getLogger();\n+    String cmdToExecute = String.format(\"docker run %s /bin/bash -c 'echo \\\"$%s\\\"'\", imageName, envVarName);\n+    logger.info(\"getImageEnvVar with imageName: {0}, envVarName: {1}\", imageName, envVarName);\n+    ExecResult result = Command.withParams(\n+                              new CommandParams()\n+                                .command(cmdToExecute)\n+                                .saveResults(true)\n+                                .redirect(true)\n+                            ).executeAndReturnResult();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODYzNTM1MA=="}, "originalCommit": {"oid": "2a7fff0c63252a23bac20e24e2c082dbbb2ddbfd"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MjAxOTM1OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfDomainInPV.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxODo0NDoxOVrOHl9rWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOToyNjo1OVrOHmAAVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU2OTg4MQ==", "bodyText": "you can assert for null", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1998#discussion_r509569881", "createdAt": "2020-10-21T18:44:19Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfDomainInPV.java", "diffHunk": "@@ -173,9 +176,16 @@ public void testJrfDomainInPvUsingWlst() {\n     File domainPropertiesFile = assertDoesNotThrow(() ->\n             File.createTempFile(\"domain\", \"properties\"),\n         \"Failed to create domain properties file\");\n+\n+    //get ENV variable from the image\n+    oracle_home = getImageEnvVar(FMWINFRA_IMAGE_TO_USE_IN_SPEC, \"ORACLE_HOME\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28ffbc4c9a6a7f2b5b9d3cf5da25f0e0f2546510"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYwODAyMQ==", "bodyText": "Done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1998#discussion_r509608021", "createdAt": "2020-10-21T19:26:59Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfDomainInPV.java", "diffHunk": "@@ -173,9 +176,16 @@ public void testJrfDomainInPvUsingWlst() {\n     File domainPropertiesFile = assertDoesNotThrow(() ->\n             File.createTempFile(\"domain\", \"properties\"),\n         \"Failed to create domain properties file\");\n+\n+    //get ENV variable from the image\n+    oracle_home = getImageEnvVar(FMWINFRA_IMAGE_TO_USE_IN_SPEC, \"ORACLE_HOME\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU2OTg4MQ=="}, "originalCommit": {"oid": "28ffbc4c9a6a7f2b5b9d3cf5da25f0e0f2546510"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MjAyMDM0OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfDomainInPV.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxODo0NDozMFrOHl9sAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOToyNzowNVrOHmAAlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU3MDA0OQ==", "bodyText": "add assert for null", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1998#discussion_r509570049", "createdAt": "2020-10-21T18:44:30Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfDomainInPV.java", "diffHunk": "@@ -173,9 +176,16 @@ public void testJrfDomainInPvUsingWlst() {\n     File domainPropertiesFile = assertDoesNotThrow(() ->\n             File.createTempFile(\"domain\", \"properties\"),\n         \"Failed to create domain properties file\");\n+\n+    //get ENV variable from the image\n+    oracle_home = getImageEnvVar(FMWINFRA_IMAGE_TO_USE_IN_SPEC, \"ORACLE_HOME\");\n+    logger.info(\"ORACLE_HOME in image {0} is: {1}\", FMWINFRA_IMAGE_TO_USE_IN_SPEC, oracle_home);\n+    java_home = getImageEnvVar(FMWINFRA_IMAGE_TO_USE_IN_SPEC, \"JAVA_HOME\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28ffbc4c9a6a7f2b5b9d3cf5da25f0e0f2546510"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYwODA4Nw==", "bodyText": "Done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1998#discussion_r509608087", "createdAt": "2020-10-21T19:27:05Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfDomainInPV.java", "diffHunk": "@@ -173,9 +176,16 @@ public void testJrfDomainInPvUsingWlst() {\n     File domainPropertiesFile = assertDoesNotThrow(() ->\n             File.createTempFile(\"domain\", \"properties\"),\n         \"Failed to create domain properties file\");\n+\n+    //get ENV variable from the image\n+    oracle_home = getImageEnvVar(FMWINFRA_IMAGE_TO_USE_IN_SPEC, \"ORACLE_HOME\");\n+    logger.info(\"ORACLE_HOME in image {0} is: {1}\", FMWINFRA_IMAGE_TO_USE_IN_SPEC, oracle_home);\n+    java_home = getImageEnvVar(FMWINFRA_IMAGE_TO_USE_IN_SPEC, \"JAVA_HOME\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU3MDA0OQ=="}, "originalCommit": {"oid": "28ffbc4c9a6a7f2b5b9d3cf5da25f0e0f2546510"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MjQyODEwOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfDomainInPV.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDowMzo1NFrOHmB8Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDoxNToyM1rOHmC2_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzOTY4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"envVar from image is null\");\n          \n          \n            \n                    \"envVar ORACLE_HOME from image is null\");", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1998#discussion_r509639682", "createdAt": "2020-10-21T20:03:54Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfDomainInPV.java", "diffHunk": "@@ -173,9 +176,20 @@ public void testJrfDomainInPvUsingWlst() {\n     File domainPropertiesFile = assertDoesNotThrow(() ->\n             File.createTempFile(\"domain\", \"properties\"),\n         \"Failed to create domain properties file\");\n+\n+    //get ENV variable from the image\n+    assertNotNull(getImageEnvVar(FMWINFRA_IMAGE_TO_USE_IN_SPEC, \"ORACLE_HOME\"),\n+        \"envVar from image is null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "857f2415386631dfcf07520c34b4273bfa366ef6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY1NDc4Mw==", "bodyText": "Done. Thanks!", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1998#discussion_r509654783", "createdAt": "2020-10-21T20:15:23Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfDomainInPV.java", "diffHunk": "@@ -173,9 +176,20 @@ public void testJrfDomainInPvUsingWlst() {\n     File domainPropertiesFile = assertDoesNotThrow(() ->\n             File.createTempFile(\"domain\", \"properties\"),\n         \"Failed to create domain properties file\");\n+\n+    //get ENV variable from the image\n+    assertNotNull(getImageEnvVar(FMWINFRA_IMAGE_TO_USE_IN_SPEC, \"ORACLE_HOME\"),\n+        \"envVar from image is null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzOTY4Mg=="}, "originalCommit": {"oid": "857f2415386631dfcf07520c34b4273bfa366ef6"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MjQzMTMzOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfDomainInPV.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDowNDoyMlrOHmB-TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDoxNToxMVrOHmC1rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY0MDI2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"envVar from image is null\");\n          \n          \n            \n                    \"envVar JAVA_HOME from image is null\");", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1998#discussion_r509640268", "createdAt": "2020-10-21T20:04:22Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfDomainInPV.java", "diffHunk": "@@ -173,9 +176,20 @@ public void testJrfDomainInPvUsingWlst() {\n     File domainPropertiesFile = assertDoesNotThrow(() ->\n             File.createTempFile(\"domain\", \"properties\"),\n         \"Failed to create domain properties file\");\n+\n+    //get ENV variable from the image\n+    assertNotNull(getImageEnvVar(FMWINFRA_IMAGE_TO_USE_IN_SPEC, \"ORACLE_HOME\"),\n+        \"envVar from image is null\");\n+    oracle_home = getImageEnvVar(FMWINFRA_IMAGE_TO_USE_IN_SPEC, \"ORACLE_HOME\");\n+    logger.info(\"ORACLE_HOME in image {0} is: {1}\", FMWINFRA_IMAGE_TO_USE_IN_SPEC, oracle_home);\n+    assertNotNull(getImageEnvVar(FMWINFRA_IMAGE_TO_USE_IN_SPEC, \"JAVA_HOME\"),\n+        \"envVar from image is null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "857f2415386631dfcf07520c34b4273bfa366ef6"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY1NDQ0NQ==", "bodyText": "Done. Thanks!", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1998#discussion_r509654445", "createdAt": "2020-10-21T20:15:11Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfDomainInPV.java", "diffHunk": "@@ -173,9 +176,20 @@ public void testJrfDomainInPvUsingWlst() {\n     File domainPropertiesFile = assertDoesNotThrow(() ->\n             File.createTempFile(\"domain\", \"properties\"),\n         \"Failed to create domain properties file\");\n+\n+    //get ENV variable from the image\n+    assertNotNull(getImageEnvVar(FMWINFRA_IMAGE_TO_USE_IN_SPEC, \"ORACLE_HOME\"),\n+        \"envVar from image is null\");\n+    oracle_home = getImageEnvVar(FMWINFRA_IMAGE_TO_USE_IN_SPEC, \"ORACLE_HOME\");\n+    logger.info(\"ORACLE_HOME in image {0} is: {1}\", FMWINFRA_IMAGE_TO_USE_IN_SPEC, oracle_home);\n+    assertNotNull(getImageEnvVar(FMWINFRA_IMAGE_TO_USE_IN_SPEC, \"JAVA_HOME\"),\n+        \"envVar from image is null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY0MDI2OA=="}, "originalCommit": {"oid": "857f2415386631dfcf07520c34b4273bfa366ef6"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3853, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}