{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MDEwMzc1", "number": 1969, "title": "re-enable ItTwoDomainsLoadBalancers.testApacheLoadBalancingCustomSample", "bodyText": "ItTwoDomainsLoadBalancers.testApacheLoadBalancingCustomSample failed recently due to the change in Apache custom sample chart.\nWhen we have custom Apache plugin configuration file custom_mod_wl_apache.conf, we used to specify the path of the file in the chart using volumePath. Couple of days ago it was changed to use persistentVolumeClaimName:\npersistentVolumeClaimName: pv-claim-name\nUpdated this in test and re-enable the test.\nJenkins run result:\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/2225/\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/2228/\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/2229/\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/2230/", "createdAt": "2020-10-02T16:25:20Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969", "merged": true, "mergeCommit": {"oid": "9dfe17bc9206764e58c08933990ac44ed0c345bf"}, "closed": true, "closedAt": "2020-10-05T16:50:05Z", "author": {"login": "xiancao"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOY28zgH2gAyNDk3MDEwMzc1OjI3NTkzNmViZTRhZWYzOGVlMjIwNWFhOTgzNmM3YzY2OTE0MmI4ZDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOtYt3AH2gAyNDk3MDEwMzc1OjA3NTI2YmExZWRjMDAzMjg3MDMyMmY5Y2YyZDQxMmZiM2MxYWVjMjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "275936ebe4aef38ee2205aa9836c7c669142b8d9", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/275936ebe4aef38ee2205aa9836c7c669142b8d9", "committedDate": "2020-10-01T22:09:55Z", "message": "initial commit for apache custom sample update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b36fe5e4df8c73d6b9cd30f164b17840abdc177", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7b36fe5e4df8c73d6b9cd30f164b17840abdc177", "committedDate": "2020-10-01T22:10:02Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84932"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e46a69417b0b7655599b778e14948ba4916eec7e", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e46a69417b0b7655599b778e14948ba4916eec7e", "committedDate": "2020-10-02T05:53:45Z", "message": "re-enable ItTwoDomainsLoadBalancers.testApacheLoadBalancingCustomSample"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/84a80347052410ae16b1a06413f76a2ac5a2b142", "committedDate": "2020-10-02T16:39:50Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84932"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMjg0Nzgx", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#pullrequestreview-501284781", "createdAt": "2020-10-02T16:36:10Z", "commit": {"oid": "e46a69417b0b7655599b778e14948ba4916eec7e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjozNjoxMFrOHb0ONw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjozOTozNVrOHb0UrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyOTIwNw==", "bodyText": "Don't we have common utility to create a generic PV/PVC. Check with Sankar", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r498929207", "createdAt": "2020-10-02T16:36:10Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -1941,4 +1946,46 @@ private void checkIngressReady(boolean isHostRouting, String ingressHost, boolea\n       assertTrue(callWebAppAndWaitTillReady(curlCmd, 60));\n     }\n   }\n+\n+  /**\n+   * Create PV and PVC for Apache custom configuration file in specified namespace.\n+   * @param apacheNamespace namespace in which to create PVC\n+   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46a69417b0b7655599b778e14948ba4916eec7e"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkzMDg2MA==", "bodyText": "Is it not available in OCR. When customer run the tests, they many not have access to OCIR.  It is an internal repository.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r498930860", "createdAt": "2020-10-02T16:39:35Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java", "diffHunk": "@@ -169,7 +169,7 @@\n \n   // Apache constants\n   public static final String APACHE_IMAGE_NAME = \"phx.ocir.io/weblogick8s/oracle/apache\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46a69417b0b7655599b778e14948ba4916eec7e"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMzk0NTc2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#pullrequestreview-501394576", "createdAt": "2020-10-02T19:29:11Z", "commit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNDIzNDUy", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#pullrequestreview-501423452", "createdAt": "2020-10-02T20:20:11Z", "commit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoyMDoxMVrOHb6hrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoyMjoxMlrOHb6kow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjQ5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static V1PersistentVolume getPersistentVolumes(String pvname) {\n          \n          \n            \n              public static V1PersistentVolume getPersistentVolume(String pvname) {", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499032493", "createdAt": "2020-10-02T20:20:11Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -649,6 +649,14 @@ public static boolean createImage(WitParams params) {\n   }\n \n   // -------------------------   pv/pvc  ---------------------------------\n+  /**\n+   * Get the V1PersistentVolume object in the Kubernetes cluster with specified Persistent Volume name.\n+   * @param pvname the name of the Persistent Volume\n+   * @return V1PersistentVolume the Persistent Volume object with specified name in Kubernetes cluster\n+   */\n+  public static V1PersistentVolume getPersistentVolumes(String pvname) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjYwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static V1PersistentVolumeClaim getPersistentVolumeClaims(String namespace, String pvcname) {\n          \n          \n            \n              public static V1PersistentVolumeClaim getPersistentVolumeClaim(String namespace, String pvcname) {", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499032606", "createdAt": "2020-10-02T20:20:31Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -672,6 +680,16 @@ public static boolean deletePersistentVolume(String name) {\n     return PersistentVolume.delete(name);\n   }\n \n+  /**\n+   * Get V1PersistentVolumeClaim object in the namespace with the specified Persistent Volume Claim name .\n+   * @param namespace namespace in which to get the Persistent Volume Claim\n+   * @param pvcname the name of Persistent Volume Claim\n+   * @return V1PersistentVolumeClaim the Persistent Volume Claims Object in specified namespace\n+   */\n+  public static V1PersistentVolumeClaim getPersistentVolumeClaims(String namespace, String pvcname) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjY5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static V1PersistentVolume getPersistentVolumes(String pvname) {\n          \n          \n            \n              public static V1PersistentVolume getPersistentVolume(String pvname) {", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499032698", "createdAt": "2020-10-02T20:20:48Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Kubernetes.java", "diffHunk": "@@ -1558,6 +1558,22 @@ public static V1PersistentVolumeList listPersistentVolumes(String labels) throws\n     return listPersistentVolume;\n   }\n \n+  /**\n+   * Get the V1PersistentVolume object in the Kubernetes cluster with specified Persistent Volume name.\n+   * @param pvname the name of the Persistent Volume\n+   * @return V1PersistentVolume the Persistent Volume object with specified name in Kubernetes cluster\n+   */\n+  public static V1PersistentVolume getPersistentVolumes(String pvname) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjc3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static V1PersistentVolumeClaim getPersistentVolumeClaims(String namespace, String pvcname) {\n          \n          \n            \n              public static V1PersistentVolumeClaim getPersistentVolumeClaim(String namespace, String pvcname) {", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499032771", "createdAt": "2020-10-02T20:21:00Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Kubernetes.java", "diffHunk": "@@ -1574,6 +1590,23 @@ public static V1PersistentVolumeClaimList listPersistentVolumeClaims(String name\n     }\n   }\n \n+  /**\n+   * Get V1PersistentVolumeClaim object in the namespace with the specified Persistent Volume Claim name .\n+   * @param namespace namespace in which to get the Persistent Volume Claim\n+   * @param pvcname the name of Persistent Volume Claim\n+   * @return V1PersistentVolumeClaim the Persistent Volume Claims Object in specified namespace\n+   */\n+  public static V1PersistentVolumeClaim getPersistentVolumeClaims(String namespace, String pvcname) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMzE0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  V1PersistentVolumeClaim v1pvc = getPersistentVolumeClaims(apacheNamespace, pvcName);\n          \n          \n            \n                  V1PersistentVolumeClaim v1pvc = getPersistentVolumeClaim(apacheNamespace, pvcName);", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499033147", "createdAt": "2020-10-02T20:21:58Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -718,22 +722,35 @@ public static HelmParams installAndVerifyApache(String apacheNamespace,\n           .httpsNodePort(httpsNodePort);\n     }\n \n-    if (volumePath != null && clusterNamePortMap != null) {\n+    if (pvcName != null && clusterNamePortMap != null) {\n       // create a custom Apache plugin configuration file named custom_mod_wl_apache.conf\n-      // and put it under the directory specified in volumePath\n+      // and put it under the directory specified in pv hostPath\n       // this file provides a custom Apache plugin configuration to fine tune the behavior of Apache\n+      V1PersistentVolumeClaim v1pvc = getPersistentVolumeClaims(apacheNamespace, pvcName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMzI1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  V1PersistentVolume v1pv = getPersistentVolumes(pvName);\n          \n          \n            \n                  V1PersistentVolume v1pv = getPersistentVolume(pvName);", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499033251", "createdAt": "2020-10-02T20:22:12Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -718,22 +722,35 @@ public static HelmParams installAndVerifyApache(String apacheNamespace,\n           .httpsNodePort(httpsNodePort);\n     }\n \n-    if (volumePath != null && clusterNamePortMap != null) {\n+    if (pvcName != null && clusterNamePortMap != null) {\n       // create a custom Apache plugin configuration file named custom_mod_wl_apache.conf\n-      // and put it under the directory specified in volumePath\n+      // and put it under the directory specified in pv hostPath\n       // this file provides a custom Apache plugin configuration to fine tune the behavior of Apache\n+      V1PersistentVolumeClaim v1pvc = getPersistentVolumeClaims(apacheNamespace, pvcName);\n+      assertNotNull(v1pvc);\n+      assertNotNull(v1pvc.getSpec());\n+      String pvName = v1pvc.getSpec().getVolumeName();\n+      logger.info(\"Got PV {0} from PVC {1} in namespace {2}\", pvName, pvcName, apacheNamespace);\n+\n+      V1PersistentVolume v1pv = getPersistentVolumes(pvName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07526ba1edc0032870322f9cf2d412fb3c1aec22", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/07526ba1edc0032870322f9cf2d412fb3c1aec22", "committedDate": "2020-10-02T22:04:54Z", "message": "address Vanaja's comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4218, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}