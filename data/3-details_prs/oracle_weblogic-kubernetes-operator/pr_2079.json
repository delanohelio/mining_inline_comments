{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NzEwMzE4", "number": 2079, "title": "Owls 72813 generate events", "bodyText": "Add code to generate Kubernetes events at the key points of the operator work flow.\nRefactor DomainProcessorImpl shouldContinue() method to reduce duplicated code.\n\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/3195/\nhttps://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-events/", "createdAt": "2020-11-30T17:49:31Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079", "merged": true, "mergeCommit": {"oid": "00689ed28e6e65bdbb09faf5df9339388714bb71"}, "closed": true, "closedAt": "2020-12-08T19:48:13Z", "author": {"login": "doxiao"}, "timelineItems": {"totalCount": 66, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeD5JhAH2gAyNTI5NzEwMzE4OjcxNjkyMDMzOWU3MTIzZWFjNDg2MTA1OGU2NDY0NDljNjJmNDdmNTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkPj6vgFqTU0NzU3MzYxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "716920339e7123eac4861058e646449c62f47f50", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/716920339e7123eac4861058e646449c62f47f50", "committedDate": "2020-11-19T14:47:06Z", "message": "generate k8s events for key domain activities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51557f8f708b1f4c4e6a0c625f5f454c5745ebe4", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/51557f8f708b1f4c4e6a0c625f5f454c5745ebe4", "committedDate": "2020-11-19T15:31:01Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17af30f2f6a5bad2cfc1dc682865f266d1565631", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/17af30f2f6a5bad2cfc1dc682865f266d1565631", "committedDate": "2020-11-19T19:47:07Z", "message": "more cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e587d944d82e40f16c525c858029185e057bbec6", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e587d944d82e40f16c525c858029185e057bbec6", "committedDate": "2020-11-19T19:49:09Z", "message": "Merge remote-tracking branch 'origin/develop' into OWLS-72813-generate-events"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2deda7286b5bd7820dc3d163e1ccf98f8804710", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e2deda7286b5bd7820dc3d163e1ccf98f8804710", "committedDate": "2020-11-19T21:39:26Z", "message": "turn on debugging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bb7d361987dfd8a4eaf6b5283c326b84c5cd358", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1bb7d361987dfd8a4eaf6b5283c326b84c5cd358", "committedDate": "2020-11-20T03:30:15Z", "message": "work in progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3a64943280d802c6fefa52aca19ae9259e41db6", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a3a64943280d802c6fefa52aca19ae9259e41db6", "committedDate": "2020-11-20T04:43:00Z", "message": "refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0558cb7399872d14d5a3e31bf4519a00a4a21312", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0558cb7399872d14d5a3e31bf4519a00a4a21312", "committedDate": "2020-11-20T05:41:29Z", "message": "temporarily disable event component instance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8f459b589a31d5a402a63548abde3233f1d52df", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d8f459b589a31d5a402a63548abde3233f1d52df", "committedDate": "2020-11-20T05:58:14Z", "message": "disable unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d45bddee05c227d7b14cd8d0229cfd1d8de7b08", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4d45bddee05c227d7b14cd8d0229cfd1d8de7b08", "committedDate": "2020-11-20T06:00:57Z", "message": "enable unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f1e45e0c8230aeaa19e042e1df26980c9eafe61", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6f1e45e0c8230aeaa19e042e1df26980c9eafe61", "committedDate": "2020-11-20T14:41:07Z", "message": "work in progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "329404a2a2c5e6eca79510bba2252980308bfaa8", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/329404a2a2c5e6eca79510bba2252980308bfaa8", "committedDate": "2020-11-20T15:53:05Z", "message": "use pod env to pass in operator pod name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37144d0b50de5e3a9c9afff7a523e01fded4ba27", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/37144d0b50de5e3a9c9afff7a523e01fded4ba27", "committedDate": "2020-11-20T16:48:32Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f23d3030952f5d83fb88aee7d162e249fd03ac2c", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f23d3030952f5d83fb88aee7d162e249fd03ac2c", "committedDate": "2020-11-20T16:52:33Z", "message": "minor fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75b86567dbd496371f240c23eef0f49d8270f29e", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/75b86567dbd496371f240c23eef0f49d8270f29e", "committedDate": "2020-11-20T18:17:22Z", "message": "add constants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "361dc1c51f247d4d34a3e82c259d8e8bdcd09e29", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/361dc1c51f247d4d34a3e82c259d8e8bdcd09e29", "committedDate": "2020-11-20T19:17:16Z", "message": "minor change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f02ab5e5415ce26942cf4a6620b4fcfef910aa5", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8f02ab5e5415ce26942cf4a6620b4fcfef910aa5", "committedDate": "2020-11-20T19:31:55Z", "message": "use HelmAccess"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf5197397115d24d83bd2081158bdd87d1617946", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/cf5197397115d24d83bd2081158bdd87d1617946", "committedDate": "2020-11-20T21:44:15Z", "message": "use operator as the involved object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a2d18350c847218c949dcf3599db95e1514f6d7", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1a2d18350c847218c949dcf3599db95e1514f6d7", "committedDate": "2020-11-20T23:13:04Z", "message": "add unit test case for involved object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4b720a801d90d4f8eba6021a05ff3f5df4fc15a", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c4b720a801d90d4f8eba6021a05ff3f5df4fc15a", "committedDate": "2020-11-22T00:35:33Z", "message": "minor change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f7f3189b1d506ab4b3783d7572417e1a3904850", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6f7f3189b1d506ab4b3783d7572417e1a3904850", "committedDate": "2020-11-23T17:26:34Z", "message": "adjust event as needed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "457eeeaea334c60177e47122ac8253c56c02ba24", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/457eeeaea334c60177e47122ac8253c56c02ba24", "committedDate": "2020-11-23T17:27:57Z", "message": "minor change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "393b1ddc007fa3340cc7585bf330b49c2fcd3530", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/393b1ddc007fa3340cc7585bf330b49c2fcd3530", "committedDate": "2020-11-23T17:28:49Z", "message": "Merge remote-tracking branch 'origin/develop' into OWLS-72813-generate-events"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43524b8c658ead9543186d491886579930107adf", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/43524b8c658ead9543186d491886579930107adf", "committedDate": "2020-11-23T18:51:06Z", "message": "make sure retry event is in place"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73ece642382a7b43e31ddda248823ae99c589e20", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/73ece642382a7b43e31ddda248823ae99c589e20", "committedDate": "2020-11-23T20:31:08Z", "message": "fine tune falure retry event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a72d6532b4f5f93cba3fd74529f1d7d0e45208e", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6a72d6532b4f5f93cba3fd74529f1d7d0e45208e", "committedDate": "2020-11-23T20:44:45Z", "message": "minor fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b15183084547a0d73628c914bab300bd943bde04", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b15183084547a0d73628c914bab300bd943bde04", "committedDate": "2020-11-23T22:57:51Z", "message": "refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75a74f8cfa26fa6b0ab5b0b348e3b758b289a113", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/75a74f8cfa26fa6b0ab5b0b348e3b758b289a113", "committedDate": "2020-11-24T00:16:41Z", "message": "minor fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36ccbd5e048db620828fe9abed90504cdc023a3a", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/36ccbd5e048db620828fe9abed90504cdc023a3a", "committedDate": "2020-11-24T00:31:11Z", "message": "add unit test for action"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa8c3305c70a7473f3b88233966c4cd4ed360f0e", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/fa8c3305c70a7473f3b88233966c4cd4ed360f0e", "committedDate": "2020-11-24T00:37:03Z", "message": "turn off debugging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e6738ebacaa4b0733a5f08d3109b010ffd978af", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5e6738ebacaa4b0733a5f08d3109b010ffd978af", "committedDate": "2020-11-24T03:29:28Z", "message": "cleanup unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb7f9eb791c607dc1eedbcad9985de0c75340504", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/bb7f9eb791c607dc1eedbcad9985de0c75340504", "committedDate": "2020-11-24T22:42:55Z", "message": "rename method and minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d769e1e704a2df6bd2c99ca91b9bf82e3a53483", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4d769e1e704a2df6bd2c99ca91b9bf82e3a53483", "committedDate": "2020-11-25T22:07:31Z", "message": "more refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0486f5483c31bb9927765b7458295e6abb298a55", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0486f5483c31bb9927765b7458295e6abb298a55", "committedDate": "2020-11-26T02:23:49Z", "message": "minor fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "516e53eddc1a40f002622a30caff9078417dc6a6", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/516e53eddc1a40f002622a30caff9078417dc6a6", "committedDate": "2020-11-30T15:43:42Z", "message": "change the event names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "536aee5ee82fe67bdb89c3dc6bd5b7794296c599", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/536aee5ee82fe67bdb89c3dc6bd5b7794296c599", "committedDate": "2020-11-30T15:55:58Z", "message": "Merge remote-tracking branch 'origin/develop' into OWLS-72813-generate-events"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ad38be0d011b2ba591b4022bbccf922f7ecbad8", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5ad38be0d011b2ba591b4022bbccf922f7ecbad8", "committedDate": "2020-12-01T03:59:32Z", "message": "add more info to the involved object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a409205f2d4164d9cc5a4515a93e3429f255585", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0a409205f2d4164d9cc5a4515a93e3429f255585", "committedDate": "2020-12-01T15:26:35Z", "message": "minor cleanup and refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99ccc4096b0ce116995e51b813f2fee8e51a44ad", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/99ccc4096b0ce116995e51b813f2fee8e51a44ad", "committedDate": "2020-12-01T19:30:34Z", "message": "minor change to event name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a8f6e03fe9e579979518c69c979eefb7670d858", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4a8f6e03fe9e579979518c69c979eefb7670d858", "committedDate": "2020-12-01T20:04:11Z", "message": "minor fix to the retry count"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "190d42bab3c920b9572fa906661081a9e88448db", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/190d42bab3c920b9572fa906661081a9e88448db", "committedDate": "2020-12-02T19:19:29Z", "message": "add initial version of the doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f641de34bbddfb4eccc7ab9e776fc407ae5e680c", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f641de34bbddfb4eccc7ab9e776fc407ae5e680c", "committedDate": "2020-12-03T17:56:10Z", "message": "fine tune the behavior"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd2ff925556b86c9077769186fbe5bdda614c04d", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/fd2ff925556b86c9077769186fbe5bdda614c04d", "committedDate": "2020-12-04T19:16:39Z", "message": "adjustment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5343dd9fc5896c8bf3766dfe2d100b1a4003164d", "committedDate": "2020-12-06T21:51:29Z", "message": "adjust handling of introspector fatal errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MjQxMzcz", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#pullrequestreview-546241373", "createdAt": "2020-12-07T15:10:00Z", "commit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNToxMDowMFrOIArZBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNToxMDowMFrOIArZBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU4MTgyOA==", "bodyText": "Does the event have details about the domain and namespace?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r537581828", "createdAt": "2020-12-07T15:10:00Z", "author": {"login": "jshum2479"}, "path": "operator/src/main/resources/Operator.properties", "diffHunk": "@@ -189,6 +189,7 @@ WLSKO-0176=Job {1} in namespace {0} failed, job details are {2}\n WLSKO-0177=Pod {0} in namespace {1} failed, the pod status is {2}\n WLSKO-0178=Operator cannot proceed, as the Custom Resource Definition for ''domains.weblogic.oracle'' is not installed.\n WLSKO-0179=Pod {0} in namespace {1} detected as stuck, and force-deleted\n+WLSKO-0180=Creating event: {0}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MjkzNzQ3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#pullrequestreview-546293747", "createdAt": "2020-12-07T16:03:43Z", "commit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjowMzo0M1rOIAt_jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjowMzo0M1rOIAt_jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYyNDQ2MA==", "bodyText": "Looks like a typo -> EXCEEDE.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r537624460", "createdAt": "2020-12-07T16:03:43Z", "author": {"login": "ankedia"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainStatusUpdater.java", "diffHunk": "@@ -51,10 +53,15 @@\n \n import static oracle.kubernetes.operator.LabelConstants.CLUSTERNAME_LABEL;\n import static oracle.kubernetes.operator.ProcessingConstants.DOMAIN_TOPOLOGY;\n+import static oracle.kubernetes.operator.ProcessingConstants.EXCEEDE_INTROSPECTOR_MAX_RETRY_COUNT_ERROR_MSG;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MzAyMTE1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#pullrequestreview-546302115", "createdAt": "2020-12-07T16:12:15Z", "commit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjoxMjoxNVrOIAuaoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjoxMjoxNVrOIAuaoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzMTM5Mg==", "bodyText": "Minor nitpick- The and word is repeated in comment.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r537631392", "createdAt": "2020-12-07T16:12:15Z", "author": {"login": "ankedia"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainStatusUpdater.java", "diffHunk": "@@ -139,13 +174,14 @@ public static Step createAvailableStep(String reason, Step next) {\n   }\n \n   /**\n-   * Asynchronous step to set Domain condition to Failed after an asynchronous call failure.\n+   * Asynchronous step to set Domain condition to Failed after an asynchronous call failure and\n+   * and to generate DOMAIN_PROCESSING_FAILED event.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b7d95c5d157f9293bd1876054eda0732e94e242", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1b7d95c5d157f9293bd1876054eda0732e94e242", "committedDate": "2020-12-07T16:25:40Z", "message": "fix a typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MjgyOTE3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#pullrequestreview-546282917", "createdAt": "2020-12-07T15:52:53Z", "commit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTo1Mjo1M1rOIAtdJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjozMDoxN1rOIAvR5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYxNTY1NQ==", "bodyText": "should be \"lets\" (no apostrophe), as it is singular.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r537615655", "createdAt": "2020-12-07T15:52:53Z", "author": {"login": "russgold"}, "path": "docs-source/content/userguide/managing-domains/_index.md", "diffHunk": "@@ -146,13 +147,18 @@ See [Starting and stopping]({{< relref \"/userguide/managing-domains/domain-lifec\n \n ### Scaling clusters\n \n-The operator let's you initiate scaling of clusters in various ways:\n+The operator let you initiate scaling of clusters in various ways:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYyMDI3MA==", "bodyText": "Every call to withEventData appears to create a new EventData instance, using an EventItem. Why not simply pass the event Item and let the withEventData call create the EventData in one place?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r537620270", "createdAt": "2020-12-07T15:58:21Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -414,17 +420,26 @@ public void dispatchDomainWatch(Watch.Response<Domain> item) {\n \n   private void handleAddedDomain(Domain domain) {\n     LOGGER.info(MessageKeys.WATCH_DOMAIN, domain.getDomainUid());\n-    createMakeRightOperation(new DomainPresenceInfo(domain)).interrupt().withExplicitRecheck().execute();\n+    createMakeRightOperation(new DomainPresenceInfo(domain))\n+        .interrupt()\n+        .withExplicitRecheck()\n+        .withEventData(new EventData(EventItem.DOMAIN_CREATED))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYyMjA3MA==", "bodyText": "good rename. shouldContinue reads more easily.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r537622070", "createdAt": "2020-12-07T16:00:39Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -631,51 +655,30 @@ public boolean wasInspectionRun() {\n       return inspectionRun;\n     }\n \n-    private boolean isShouldContinue() {\n+    private boolean shouldContinue() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYyMzQ4NQ==", "bodyText": "For consistency with similar methods, please use shouldReportAbortedEvent", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r537623485", "createdAt": "2020-12-07T16:02:27Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -631,51 +655,30 @@ public boolean wasInspectionRun() {\n       return inspectionRun;\n     }\n \n-    private boolean isShouldContinue() {\n+    private boolean shouldContinue() {\n       DomainPresenceInfo cachedInfo = getExistingDomainPresenceInfo(getNamespace(), getDomainUid());\n-      int currentIntrospectFailureRetryCount = Optional.ofNullable(liveInfo)\n-          .map(DomainPresenceInfo::getDomain)\n-          .map(Domain::getStatus)\n-          .map(DomainStatus::getIntrospectJobFailureCount)\n-          .orElse(0);\n-\n-      String existingError = Optional.ofNullable(liveInfo)\n-          .map(DomainPresenceInfo::getDomain)\n-          .map(Domain::getStatus)\n-          .map(DomainStatus::getMessage)\n-          .orElse(null);\n \n-      boolean exceededFailureRetryCount = (currentIntrospectFailureRetryCount\n-          >= DomainPresence.getDomainPresenceFailureRetryMaxCount());\n+      String existingError = getExistingError();\n \n-      boolean isVersionsChanged = isImgRestartIntrospectVerChanged(liveInfo, cachedInfo);\n-\n-      if (cachedInfo == null || cachedInfo.getDomain() == null) {\n+      if (isNewDomain(cachedInfo)) {\n+        return true;\n+      } else if (needReportAbortedEvent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYyOTkwMw==", "bodyText": "There is no need to create step as a local variable, here. You could more cleanly simply return the created object. IntelliJ should have made this recommendation (look for the yellow bars on the right margin).\nYou might also consider using Optional. In this case, the entire method would be something like:\nprivate Step getEventStep(final Step next) {\n  return Optional.ofNullable(eventData).map(ed -> Step.chain(createEventStep(ed), next)).orElse(next);\n}", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r537629903", "createdAt": "2020-12-07T16:10:23Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -706,9 +769,24 @@ private void internalMakeRightDomainPresence() {\n     }\n \n     private StepAndPacket createDomainPlanSteps(Packet packet) {\n+      if (containsAbortedEventData()) {\n+        return new StepAndPacket(Step.chain(createEventStep(eventData), new TailStep()), packet);\n+      }\n+\n       return new StepAndPacket(\n-          createPopulatePacketServerMapsStep(createSteps()),\n-          packet);\n+          getEventStep(Step.chain(createPopulatePacketServerMapsStep(),  createSteps())), packet);\n+    }\n+\n+    private Step getEventStep(Step next) {\n+      if (eventData != null) {\n+        Step step = Step.chain(createEventStep(eventData), next);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "originalPosition": 259}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzMjQyOA==", "bodyText": "Here, too, Optional is designed for cases like this. You could write:\n    return Optional.ofNullable(eventData).map(EventData::isDomainProcessingAborted).orElse(false);\n\nif you added the appropriate method to EventData.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r537632428", "createdAt": "2020-12-07T16:13:39Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -706,9 +769,24 @@ private void internalMakeRightDomainPresence() {\n     }\n \n     private StepAndPacket createDomainPlanSteps(Packet packet) {\n+      if (containsAbortedEventData()) {\n+        return new StepAndPacket(Step.chain(createEventStep(eventData), new TailStep()), packet);\n+      }\n+\n       return new StepAndPacket(\n-          createPopulatePacketServerMapsStep(createSteps()),\n-          packet);\n+          getEventStep(Step.chain(createPopulatePacketServerMapsStep(),  createSteps())), packet);\n+    }\n+\n+    private Step getEventStep(Step next) {\n+      if (eventData != null) {\n+        Step step = Step.chain(createEventStep(eventData), next);\n+        return step;\n+      }\n+      return next;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "originalPosition": 264}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzMzI1NQ==", "bodyText": "missing 'I' in the method name.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r537633255", "createdAt": "2020-12-07T16:14:44Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -747,53 +825,32 @@ private static boolean isSpecChanged(DomainPresenceInfo liveInfo, DomainPresence\n   }\n \n   private static boolean isImgRestartIntrospectVerChanged(DomainPresenceInfo liveInfo, DomainPresenceInfo cachedInfo) {\n-    String liveIntrospectVersion = Optional.ofNullable(liveInfo)\n-        .map(DomainPresenceInfo::getDomain)\n-        .map(Domain::getSpec)\n-        .map(DomainSpec::getIntrospectVersion)\n-        .orElse(null);\n+    return !Objects.equals(getIntrospectVersion(liveInfo), getIntrospectVersion(cachedInfo))\n+        || !Objects.equals(getRestartVersion(liveInfo), getRestartVersion(cachedInfo))\n+        || !Objects.equals(getntrospectImage(liveInfo), getntrospectImage(cachedInfo));\n+  }\n \n-    String cachedIntropectVersion = Optional.ofNullable(cachedInfo)\n+  private static String getntrospectImage(DomainPresenceInfo info) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "originalPosition": 285}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzNjEyNA==", "bodyText": "The name is a bit confusing as \"Failed\" is an adjective and \"EventStep\" is a modified noun. The two are not parallel and should not be connected with \"and.\" I cannot tell the intent. Is it creating a step to report a failure event? If so, perhaps createFailureEventStep would be a better name.\nOr is it necessarily creating two steps? If so, \"Step\" should be plural, assuming that they are closely related.\nIn general, \"and\" in a method name is a warning that the method is doing two things, not just one.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r537636124", "createdAt": "2020-12-07T16:18:32Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainStatusUpdater.java", "diffHunk": "@@ -139,13 +174,14 @@ public static Step createAvailableStep(String reason, Step next) {\n   }\n \n   /**\n-   * Asynchronous step to set Domain condition to Failed after an asynchronous call failure.\n+   * Asynchronous step to set Domain condition to Failed after an asynchronous call failure and\n+   * and to generate DOMAIN_PROCESSING_FAILED event.\n    *\n    * @param callResponse the response from an unrecoverable call\n    * @param next Next step\n    * @return Step\n    */\n-  public static Step createFailedStep(CallResponse<?> callResponse, Step next) {\n+  public static Step createFailedAndEventStep(CallResponse<?> callResponse, Step next) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY0MTE5Mw==", "bodyText": "Good use of enums", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r537641193", "createdAt": "2020-12-07T16:24:54Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/EventHelper.java", "diffHunk": "@@ -0,0 +1,328 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.kubernetes.operator.helpers;\n+\n+import java.util.Optional;\n+\n+import io.kubernetes.client.openapi.models.V1Event;\n+import io.kubernetes.client.openapi.models.V1ObjectMeta;\n+import io.kubernetes.client.openapi.models.V1ObjectReference;\n+import oracle.kubernetes.operator.KubernetesConstants;\n+import oracle.kubernetes.operator.LabelConstants;\n+import oracle.kubernetes.operator.ProcessingConstants;\n+import oracle.kubernetes.operator.logging.LoggingFacade;\n+import oracle.kubernetes.operator.logging.LoggingFactory;\n+import oracle.kubernetes.operator.logging.MessageKeys;\n+import oracle.kubernetes.operator.steps.DefaultResponseStep;\n+import oracle.kubernetes.operator.work.NextAction;\n+import oracle.kubernetes.operator.work.Packet;\n+import oracle.kubernetes.operator.work.Step;\n+import org.joda.time.DateTime;\n+\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_CHANGED_EVENT;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_CHANGED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_CREATED_EVENT;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_CREATED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_DELETED_EVENT;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_DELETED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_ABORTED_EVENT;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_ABORTED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_COMPLETED_EVENT;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_COMPLETED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_FAILED_EVENT;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_FAILED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_RETRYING_EVENT;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_RETRYING_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_STARTING_EVENT;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_STARTING_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.EVENT_NORMAL;\n+import static oracle.kubernetes.operator.EventConstants.EVENT_WARNING;\n+import static oracle.kubernetes.operator.EventConstants.WEBLOGIC_OPERATOR_COMPONENT;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_PROCESSING_ABORTED;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_PROCESSING_COMPLETED;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_PROCESSING_STARTING;\n+import static oracle.kubernetes.operator.helpers.NamespaceHelper.getOperatorPodName;\n+\n+/** A Helper Class for the operator to create Kubernetes Events at the key points in the operator's workflow. */\n+public class EventHelper {\n+  private static final LoggingFacade LOGGER = LoggingFactory.getLogger(\"Operator\", \"Operator\");\n+\n+  /**\n+   * Factory for {@link Step} that asynchronously create an event.\n+   *\n+   * @param eventData event item\n+   * @return Step for creating an event\n+   */\n+  public static Step createEventStep(\n+      EventData eventData) {\n+    return new CreateEventStep(eventData);\n+  }\n+\n+  public static class CreateEventStep extends Step {\n+    private final EventData eventData;\n+\n+    CreateEventStep(EventData eventData) {\n+      this.eventData = eventData;\n+    }\n+\n+    @Override\n+    public NextAction apply(Packet packet) {\n+      if (hasProcessingNotStarted(packet) && (eventData.eventItem == DOMAIN_PROCESSING_COMPLETED)) {\n+        return doNext(packet);\n+      }\n+\n+      if (isDuplicatedStartedEvent(packet)) {\n+        return doNext(packet);\n+      }\n+\n+      LOGGER.fine(MessageKeys.CREATING_EVENT, eventData.eventItem);\n+\n+      packet.put(ProcessingConstants.EVENT_TYPE, eventData.eventItem);\n+\n+      V1Event event = createEvent(packet, eventData);\n+      return doNext(new CallBuilder()\n+              .createEventAsync(\n+                  event.getMetadata().getNamespace(),\n+                  event,\n+                  new DefaultResponseStep<>(getNext())),\n+          packet);\n+\n+    }\n+\n+    private boolean hasNotFailedOrRetried(Packet packet) {\n+      return packet.get(ProcessingConstants.EVENT_TYPE) != EventItem.DOMAIN_PROCESSING_FAILED\n+          && packet.get(ProcessingConstants.EVENT_TYPE) != EventItem.DOMAIN_PROCESSING_RETRYING;\n+    }\n+\n+    private boolean isDuplicatedStartedEvent(Packet packet) {\n+      return eventData.eventItem == EventItem.DOMAIN_PROCESSING_STARTING\n+          && packet.get(ProcessingConstants.EVENT_TYPE) == EventItem.DOMAIN_PROCESSING_STARTING;\n+    }\n+\n+    private boolean hasProcessingNotStarted(Packet packet) {\n+      return packet.get(ProcessingConstants.EVENT_TYPE) != DOMAIN_PROCESSING_STARTING;\n+    }\n+\n+  }\n+\n+  private static V1Event createEvent(\n+      Packet packet,\n+      EventData eventData) {\n+    DomainPresenceInfo info = packet.getSpi(DomainPresenceInfo.class);\n+    return new V1Event()\n+        .metadata(createMetadata(info, eventData.eventItem.getReason()))\n+        .reportingComponent(WEBLOGIC_OPERATOR_COMPONENT)\n+        .reportingInstance(getOperatorPodName())\n+        .lastTimestamp(eventData.eventItem.getLastTimestamp())\n+        .type(eventData.eventItem.getType())\n+        .reason(eventData.eventItem.getReason())\n+        .message(eventData.eventItem.getMessage(info, eventData))\n+        .involvedObject(createInvolvedObject(info));\n+  }\n+\n+  private static V1ObjectReference createInvolvedObject(DomainPresenceInfo info) {\n+    return new V1ObjectReference()\n+        .name(info.getDomainUid())\n+        .namespace(info.getNamespace())\n+        .kind(KubernetesConstants.DOMAIN)\n+        .apiVersion(KubernetesConstants.API_VERSION_WEBLOGIC_ORACLE);\n+  }\n+\n+  private static V1ObjectMeta createMetadata(\n+      DomainPresenceInfo info,\n+      String reason) {\n+    final V1ObjectMeta metadata =\n+        new V1ObjectMeta()\n+            .name(String.format(\"%s.%s.%s\", info.getDomainUid(), reason, System.currentTimeMillis()))\n+            .namespace(info.getNamespace());\n+\n+    metadata\n+        .putLabelsItem(LabelConstants.DOMAINUID_LABEL, info.getDomainUid())\n+        .putLabelsItem(LabelConstants.CREATEDBYOPERATOR_LABEL, \"true\");\n+\n+    return metadata;\n+  }\n+\n+  public enum EventItem {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY0Mjg5MA==", "bodyText": "you can simply use is(true) here. The compiler will do the necessary unboxing.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r537642890", "createdAt": "2020-12-07T16:26:59Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/EventHelperTest.java", "diffHunk": "@@ -0,0 +1,408 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.kubernetes.operator.helpers;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import com.meterware.simplestub.Memento;\n+import com.meterware.simplestub.StaticStubSupport;\n+import io.kubernetes.client.openapi.models.V1Event;\n+import io.kubernetes.client.openapi.models.V1ObjectMeta;\n+import io.kubernetes.client.openapi.models.V1ObjectReference;\n+import oracle.kubernetes.operator.DomainProcessorDelegateStub;\n+import oracle.kubernetes.operator.DomainProcessorImpl;\n+import oracle.kubernetes.operator.DomainProcessorTestSetup;\n+import oracle.kubernetes.operator.EventConstants;\n+import oracle.kubernetes.operator.MakeRightDomainOperation;\n+import oracle.kubernetes.operator.helpers.EventHelper.EventData;\n+import oracle.kubernetes.operator.work.Step;\n+import oracle.kubernetes.operator.work.TerminalStep;\n+import oracle.kubernetes.utils.TestUtils;\n+import oracle.kubernetes.weblogic.domain.DomainConfigurator;\n+import oracle.kubernetes.weblogic.domain.DomainConfiguratorFactory;\n+import oracle.kubernetes.weblogic.domain.model.Domain;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static oracle.kubernetes.operator.DomainProcessorTestSetup.NS;\n+import static oracle.kubernetes.operator.DomainProcessorTestSetup.UID;\n+import static oracle.kubernetes.operator.DomainStatusUpdater.createFailedAndEventStep;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_CHANGED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_CREATED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_DELETED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_ABORTED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_COMPLETED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_FAILED_EVENT;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_FAILED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_RETRYING_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_STARTING_EVENT;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_STARTING_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.WEBLOGIC_OPERATOR_COMPONENT;\n+import static oracle.kubernetes.operator.KubernetesConstants.OPERATOR_NAMESPACE_ENV;\n+import static oracle.kubernetes.operator.KubernetesConstants.OPERATOR_POD_NAME_ENV;\n+import static oracle.kubernetes.operator.ProcessingConstants.JOB_POD_NAME;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_CHANGED;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_CREATED;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_DELETED;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_PROCESSING_ABORTED;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_PROCESSING_COMPLETED;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_PROCESSING_FAILED;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_PROCESSING_RETRYING;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_PROCESSING_STARTING;\n+import static org.hamcrest.CoreMatchers.equalTo;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+\n+public class EventHelperTest {\n+  private static final String OPERATOR_POD_NAME = \"my-weblogic-operator-1234\";\n+  private static final String OP_NS = \"operator-namespace\";\n+\n+  private final List<Memento> mementos = new ArrayList<>();\n+  private final KubernetesTestSupport testSupport = new KubernetesTestSupport();\n+  private final DomainProcessorDelegateStub processorDelegate = DomainProcessorDelegateStub.createDelegate(testSupport);\n+  private final DomainProcessorImpl processor = new DomainProcessorImpl(processorDelegate);\n+  private final Domain domain = DomainProcessorTestSetup.createTestDomain();\n+  private final Map<String, Map<String, DomainPresenceInfo>> presenceInfoMap = new HashMap<>();\n+  private final DomainPresenceInfo info = new DomainPresenceInfo(domain);\n+  private final MakeRightDomainOperation makeRightOperation\n+      = processor.createMakeRightOperation(info);\n+  private final String jobPodName = LegalNames.toJobIntrospectorName(UID);\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    mementos.add(TestUtils.silenceOperatorLogger());\n+    mementos.add(testSupport.install());\n+    mementos.add(StaticStubSupport.install(DomainProcessorImpl.class, \"DOMAINS\", presenceInfoMap));\n+    mementos.add(TuningParametersStub.install());\n+    mementos.add(HelmAccessStub.install());\n+\n+    testSupport.addToPacket(JOB_POD_NAME, jobPodName);\n+    testSupport.addDomainPresenceInfo(info);\n+    testSupport.defineResources(domain);\n+    DomainProcessorTestSetup.defineRequiredResources(testSupport);\n+    HelmAccessStub.defineVariable(OPERATOR_NAMESPACE_ENV, OP_NS);\n+    HelmAccessStub.defineVariable(OPERATOR_POD_NAME_ENV, OPERATOR_POD_NAME);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    mementos.forEach(Memento::revert);\n+  }\n+\n+  @Test\n+  public void whenDomainMakeRightCalled_domainProcessingStartedEventCreated() {\n+    makeRightOperation.execute();\n+\n+    assertThat(\"Event DOMAIN_PROCESSING_STARTED\",\n+        containsEvent(getEvents(), DOMAIN_PROCESSING_STARTING_EVENT), is(Boolean.TRUE));\n+  }\n+\n+  @Test\n+  public void whenDomainMakeRightCalled_domainProcessingStartedEventCreatedWithExpectedNamespace() {\n+    makeRightOperation.execute();\n+\n+    assertThat(\"Event DOMAIN_PROCESSING_STARTED message\",\n+        containsEventWithNamespace(getEvents(),\n+            DOMAIN_PROCESSING_STARTING_EVENT),\n+        is(Boolean.TRUE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY0NTU0Mg==", "bodyText": "Intellij should be warning you here that you are accessing static methods using an instance. Pay attention to its warnings. Once you have changed this to use the preferred syntax for static methods, you can combine some lines to make the method shorter.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r537645542", "createdAt": "2020-12-07T16:30:17Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/EventHelperTest.java", "diffHunk": "@@ -0,0 +1,408 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.kubernetes.operator.helpers;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import com.meterware.simplestub.Memento;\n+import com.meterware.simplestub.StaticStubSupport;\n+import io.kubernetes.client.openapi.models.V1Event;\n+import io.kubernetes.client.openapi.models.V1ObjectMeta;\n+import io.kubernetes.client.openapi.models.V1ObjectReference;\n+import oracle.kubernetes.operator.DomainProcessorDelegateStub;\n+import oracle.kubernetes.operator.DomainProcessorImpl;\n+import oracle.kubernetes.operator.DomainProcessorTestSetup;\n+import oracle.kubernetes.operator.EventConstants;\n+import oracle.kubernetes.operator.MakeRightDomainOperation;\n+import oracle.kubernetes.operator.helpers.EventHelper.EventData;\n+import oracle.kubernetes.operator.work.Step;\n+import oracle.kubernetes.operator.work.TerminalStep;\n+import oracle.kubernetes.utils.TestUtils;\n+import oracle.kubernetes.weblogic.domain.DomainConfigurator;\n+import oracle.kubernetes.weblogic.domain.DomainConfiguratorFactory;\n+import oracle.kubernetes.weblogic.domain.model.Domain;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static oracle.kubernetes.operator.DomainProcessorTestSetup.NS;\n+import static oracle.kubernetes.operator.DomainProcessorTestSetup.UID;\n+import static oracle.kubernetes.operator.DomainStatusUpdater.createFailedAndEventStep;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_CHANGED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_CREATED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_DELETED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_ABORTED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_COMPLETED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_FAILED_EVENT;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_FAILED_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_RETRYING_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_STARTING_EVENT;\n+import static oracle.kubernetes.operator.EventConstants.DOMAIN_PROCESSING_STARTING_PATTERN;\n+import static oracle.kubernetes.operator.EventConstants.WEBLOGIC_OPERATOR_COMPONENT;\n+import static oracle.kubernetes.operator.KubernetesConstants.OPERATOR_NAMESPACE_ENV;\n+import static oracle.kubernetes.operator.KubernetesConstants.OPERATOR_POD_NAME_ENV;\n+import static oracle.kubernetes.operator.ProcessingConstants.JOB_POD_NAME;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_CHANGED;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_CREATED;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_DELETED;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_PROCESSING_ABORTED;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_PROCESSING_COMPLETED;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_PROCESSING_FAILED;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_PROCESSING_RETRYING;\n+import static oracle.kubernetes.operator.helpers.EventHelper.EventItem.DOMAIN_PROCESSING_STARTING;\n+import static org.hamcrest.CoreMatchers.equalTo;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+\n+public class EventHelperTest {\n+  private static final String OPERATOR_POD_NAME = \"my-weblogic-operator-1234\";\n+  private static final String OP_NS = \"operator-namespace\";\n+\n+  private final List<Memento> mementos = new ArrayList<>();\n+  private final KubernetesTestSupport testSupport = new KubernetesTestSupport();\n+  private final DomainProcessorDelegateStub processorDelegate = DomainProcessorDelegateStub.createDelegate(testSupport);\n+  private final DomainProcessorImpl processor = new DomainProcessorImpl(processorDelegate);\n+  private final Domain domain = DomainProcessorTestSetup.createTestDomain();\n+  private final Map<String, Map<String, DomainPresenceInfo>> presenceInfoMap = new HashMap<>();\n+  private final DomainPresenceInfo info = new DomainPresenceInfo(domain);\n+  private final MakeRightDomainOperation makeRightOperation\n+      = processor.createMakeRightOperation(info);\n+  private final String jobPodName = LegalNames.toJobIntrospectorName(UID);\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    mementos.add(TestUtils.silenceOperatorLogger());\n+    mementos.add(testSupport.install());\n+    mementos.add(StaticStubSupport.install(DomainProcessorImpl.class, \"DOMAINS\", presenceInfoMap));\n+    mementos.add(TuningParametersStub.install());\n+    mementos.add(HelmAccessStub.install());\n+\n+    testSupport.addToPacket(JOB_POD_NAME, jobPodName);\n+    testSupport.addDomainPresenceInfo(info);\n+    testSupport.defineResources(domain);\n+    DomainProcessorTestSetup.defineRequiredResources(testSupport);\n+    HelmAccessStub.defineVariable(OPERATOR_NAMESPACE_ENV, OP_NS);\n+    HelmAccessStub.defineVariable(OPERATOR_POD_NAME_ENV, OPERATOR_POD_NAME);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    mementos.forEach(Memento::revert);\n+  }\n+\n+  @Test\n+  public void whenDomainMakeRightCalled_domainProcessingStartedEventCreated() {\n+    makeRightOperation.execute();\n+\n+    assertThat(\"Event DOMAIN_PROCESSING_STARTED\",\n+        containsEvent(getEvents(), DOMAIN_PROCESSING_STARTING_EVENT), is(Boolean.TRUE));\n+  }\n+\n+  @Test\n+  public void whenDomainMakeRightCalled_domainProcessingStartedEventCreatedWithExpectedNamespace() {\n+    makeRightOperation.execute();\n+\n+    assertThat(\"Event DOMAIN_PROCESSING_STARTED message\",\n+        containsEventWithNamespace(getEvents(),\n+            DOMAIN_PROCESSING_STARTING_EVENT),\n+        is(Boolean.TRUE));\n+  }\n+\n+  @Test\n+  public void whenDomainMakeRightCalled_domainProcessingStartedEventCreatedWithExpectedMessage() {\n+    makeRightOperation.execute();\n+\n+    assertThat(\"Event DOMAIN_PROCESSING_STARTED message\",\n+        containsEventWithMessage(getEvents(),\n+            DOMAIN_PROCESSING_STARTING_EVENT,\n+            String.format(DOMAIN_PROCESSING_STARTING_PATTERN, UID)),\n+            is(Boolean.TRUE));\n+  }\n+\n+  @Test\n+  public void whenDomainMakeRightCalled_domainProcessingStartedEventCreatedWithInvolvedObject()\n+      throws Exception {\n+    makeRightOperation.execute();\n+\n+    assertThat(\"Event involved object\",\n+        containsEventWithInvolvedObject(getEvents(), DOMAIN_PROCESSING_STARTING_EVENT, UID, NS),\n+        is(Boolean.TRUE));\n+  }\n+\n+  @Test\n+  public void whenDomainMakeRightCalled_domainProcessingStartedEventCreatedWithReportingComponent()\n+      throws Exception {\n+    makeRightOperation.execute();\n+\n+    assertThat(\"Event reporting component\",\n+        containsEventWithComponent(getEvents(), DOMAIN_PROCESSING_STARTING_EVENT),\n+        is(Boolean.TRUE));\n+  }\n+\n+  @Test\n+  public void whenDomainMakeRightCalled_domainProcessingStartedEventCreatedWithReportingInstance()\n+      throws Exception {\n+    String namespaceFromHelm = NamespaceHelper.getOperatorNamespace();\n+\n+    testSupport.runSteps(\n+        new EventHelper().createEventStep(\n+            new EventData(DOMAIN_PROCESSING_STARTING)\n+        ));\n+\n+    assertThat(\"Operator namespace \",\n+        namespaceFromHelm, equalTo(OP_NS));\n+\n+    assertThat(\"Event reporting instance\",\n+        containsEventWithInstance(getEvents(), DOMAIN_PROCESSING_STARTING_EVENT, OPERATOR_POD_NAME),\n+        is(Boolean.TRUE));\n+  }\n+\n+  @Test\n+  public void whenCreateEventStepCalled_domainProcessingSucceededEventCreated() {\n+    testSupport.runSteps(Step.chain(\n+        new EventHelper().createEventStep(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "originalPosition": 168}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MzQ5MzI2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#pullrequestreview-546349326", "createdAt": "2020-12-07T17:02:08Z", "commit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzowMjowOVrOIAwyaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzowMjowOVrOIAwyaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY3MDI1MQ==", "bodyText": "It looks like this is only called from getActiveDeadlineSeconds() in JobStepContext in same package and can be package protected instead of public.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r537670251", "createdAt": "2020-12-07T17:02:09Z", "author": {"login": "ankedia"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/DomainPresenceInfo.java", "diffHunk": "@@ -429,7 +429,7 @@ public int incrementAndGetFailureCount() {\n     return retryCount.incrementAndGet();\n   }\n \n-  int getRetryCount() {\n+  public int getRetryCount() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5343dd9fc5896c8bf3766dfe2d100b1a4003164d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d742016b2937f2e20caee6da7f795448598f0268", "author": {"user": {"login": "rosemarymarano", "name": "Rosemary Marano"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d742016b2937f2e20caee6da7f795448598f0268", "committedDate": "2020-12-07T17:57:30Z", "message": "edits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a90cd7b819336bda1721862aa4b87bb145b6c3fe", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a90cd7b819336bda1721862aa4b87bb145b6c3fe", "committedDate": "2020-12-07T19:50:08Z", "message": "address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52b9dd5995944044bb14d1831ecef8e6721e1885", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/52b9dd5995944044bb14d1831ecef8e6721e1885", "committedDate": "2020-12-07T19:56:51Z", "message": "merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5c3a9d2d8bb892ebda275611ba8a363fb61616b", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e5c3a9d2d8bb892ebda275611ba8a363fb61616b", "committedDate": "2020-12-07T20:43:57Z", "message": "minor fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64683dc3901791a18746b40e4ea58e323a13fc2c", "author": {"user": {"login": "tbarnes-us", "name": "Tom Barnes"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/64683dc3901791a18746b40e4ea58e323a13fc2c", "committedDate": "2020-12-08T16:50:48Z", "message": "minor doc: add reference to domain eventing in MII debugging doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb9f1fdcfa31c5bc110368204d734b252c2f0276", "author": {"user": {"login": "tbarnes-us", "name": "Tom Barnes"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/cb9f1fdcfa31c5bc110368204d734b252c2f0276", "committedDate": "2020-12-08T17:23:16Z", "message": "Minor doc update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NDcwODUz", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#pullrequestreview-547470853", "createdAt": "2020-12-08T17:37:57Z", "commit": {"oid": "e5c3a9d2d8bb892ebda275611ba8a363fb61616b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cd0c50d57f3138d706e60220f2143df51025edf", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4cd0c50d57f3138d706e60220f2143df51025edf", "committedDate": "2020-12-08T18:15:18Z", "message": "add one more command example in doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed1bc3fc997e621e47ef03d578d86575b8610b04", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ed1bc3fc997e621e47ef03d578d86575b8610b04", "committedDate": "2020-12-08T18:20:58Z", "message": "Merge pull request #2091 from oracle/OWLS-72813-minor-doc-update\n\nminor doc: add reference to domain eventing in MII debugging doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NTA3NDE2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#pullrequestreview-547507416", "createdAt": "2020-12-08T18:22:58Z", "commit": {"oid": "4cd0c50d57f3138d706e60220f2143df51025edf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODoyMjo1OVrOIBvJfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODoyMjo1OVrOIBvJfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY5MTk2NA==", "bodyText": "all events -> all the events", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#discussion_r538691964", "createdAt": "2020-12-08T18:22:59Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/userguide/managing-domains/domain-events.md", "diffHunk": "@@ -97,6 +97,14 @@ To get all events that are generated by the operator, run:\n  $ kubectl get events -n [namespace] --selector=weblogic.createdByOperator=true\n ```\n \n+```\n+\n+To get all events that are generated by the operator for a particular domain resource, for example `sample-domain1`, run:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cd0c50d57f3138d706e60220f2143df51025edf"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67bf58b2f53c0979d251016e12cadfd48c735372", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/67bf58b2f53c0979d251016e12cadfd48c735372", "committedDate": "2020-12-08T18:30:55Z", "message": "minor doc fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84215a523e54f23ad83037fabb7943aee3cb4c5a", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/84215a523e54f23ad83037fabb7943aee3cb4c5a", "committedDate": "2020-12-08T18:36:51Z", "message": "Merge branch 'OWLS-72813-generate-events' of https://github.com/oracle/weblogic-kubernetes-operator into OWLS-72813-generate-events"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NTE5ODYw", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#pullrequestreview-547519860", "createdAt": "2020-12-08T18:39:11Z", "commit": {"oid": "84215a523e54f23ad83037fabb7943aee3cb4c5a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NTUxNTcy", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#pullrequestreview-547551572", "createdAt": "2020-12-08T19:16:14Z", "commit": {"oid": "84215a523e54f23ad83037fabb7943aee3cb4c5a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NTYzNjgw", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#pullrequestreview-547563680", "createdAt": "2020-12-08T19:32:35Z", "commit": {"oid": "84215a523e54f23ad83037fabb7943aee3cb4c5a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NTczNjE4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2079#pullrequestreview-547573618", "createdAt": "2020-12-08T19:46:19Z", "commit": {"oid": "84215a523e54f23ad83037fabb7943aee3cb4c5a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3959, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}