{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMTk4Mzk1", "number": 1389, "title": "Upgrade Kubernetes Java client to 7.0.0", "bodyText": "This new version of the client introduces several API changes, including changing packages and accounting for new parameters in some calls.\nThe bigging implementation change is the upgrade to OkHttp 3 (from 2).  Now, the HTTP client maintains its own connection pool and we don't need to separately pool connections.  I've decided to leave as much code as possible alone and simply have the ClientPool return the same instance each time.", "createdAt": "2020-01-15T15:33:22Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1389", "merged": true, "mergeCommit": {"oid": "de2eab6b0556e240bedf50447b64f7d6bb8e6ac5"}, "closed": true, "closedAt": "2020-01-15T21:19:55Z", "author": {"login": "rjeberhard"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABbuxMZWAH2gAyMzYzMTk4Mzk1OmI3ZWY1M2RjYTdjNjU1YjRkNDE1MjhmNzg0YTgyZDE3NGRiYWViNjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6ry_agH2gAyMzYzMTk4Mzk1OmI5NDAwNWIwYzE0OGIwY2JiMjVhOGIxM2UzOTEzZTNkY2FkODY0NzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b7ef53dca7c655b4d41528f784a82d174dbaeb69", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b7ef53dca7c655b4d41528f784a82d174dbaeb69", "committedDate": "2019-12-09T20:14:20Z", "message": "Move to client version 7.0.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ba24d27d5c0eb4773c62be7a4ebe323ca468f6b", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7ba24d27d5c0eb4773c62be7a4ebe323ca468f6b", "committedDate": "2020-01-07T22:52:17Z", "message": "Merge remote-tracking branch 'origin/develop' into client-7.0.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1be1ba218419c0ac9e35d2821f4916c32b0b1424", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1be1ba218419c0ac9e35d2821f4916c32b0b1424", "committedDate": "2020-01-14T00:46:44Z", "message": "Kubernetes java-client version 7.0.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dacfea581189dd4e44400fa1366142ddb8a22e0f", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/dacfea581189dd4e44400fa1366142ddb8a22e0f", "committedDate": "2020-01-14T21:42:30Z", "message": "Correct parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e07b1c7aea4c0aa3b663ed7cfa3dcc29a4a10d0", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5e07b1c7aea4c0aa3b663ed7cfa3dcc29a4a10d0", "committedDate": "2020-01-15T14:16:05Z", "message": "Missing copyrights"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bd69c8ff069302c126e3f6799c8219bc8cb50f7", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3bd69c8ff069302c126e3f6799c8219bc8cb50f7", "committedDate": "2020-01-15T14:36:23Z", "message": "Disable unnecessary API client pooling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMzE2MTU0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1389#pullrequestreview-343316154", "createdAt": "2020-01-15T15:44:12Z", "commit": {"oid": "3bd69c8ff069302c126e3f6799c8219bc8cb50f7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMzE4OTU1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1389#pullrequestreview-343318955", "createdAt": "2020-01-15T15:47:35Z", "commit": {"oid": "3bd69c8ff069302c126e3f6799c8219bc8cb50f7"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTo0NzozNVrOFd865A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTo1MzoyOVrOFd9I-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk1MTE0MA==", "bodyText": "I don't support spurious changes like this", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1389#discussion_r366951140", "createdAt": "2020-01-15T15:47:35Z", "author": {"login": "markxnelson"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "diffHunk": "@@ -221,20 +221,20 @@ public void testCreateCoherenceDomainInImageUsingWlst() throws Exception {\n     LoggerHelper.getLocal().log(Level.INFO, \"SUCCESS - \" + testMethodName);\n   }\n \n-  private void createDomainAndDeployApp(Map<String, Object> domainMap, String domainUID) throws Exception {\n+  private void createDomainAndDeployApp(Map<String, Object> domainMap, String domainUid) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bd69c8ff069302c126e3f6799c8219bc8cb50f7"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk1MTI3Ng==", "bodyText": "spurious", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1389#discussion_r366951276", "createdAt": "2020-01-15T15:47:49Z", "author": {"login": "markxnelson"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItOperator.java", "diffHunk": "@@ -355,10 +355,10 @@ public void testOperatorRestUsingCertificateChain() throws Exception {\n     LoggerHelper.getLocal().log(Level.INFO, \"Creating operatorForBackwardCompatibility\");\n     Map<String, Object> operatorMap = createOperatorMap(getNewSuffixCount(),\n               true, testClassName);\n-    Operator operatorForRESTCertChain =\n+    Operator operatorForRestCertChain =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bd69c8ff069302c126e3f6799c8219bc8cb50f7"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk1MTg3Ng==", "bodyText": "this documentation does not tell me anything more that the variable name did", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1389#discussion_r366951876", "createdAt": "2020-01-15T15:48:44Z", "author": {"login": "markxnelson"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/PersistentVolume.java", "diffHunk": "@@ -19,11 +18,11 @@\n   private String dirPath;\n \n   /**\n-   * Create PV directory and k8s pv and pvc for the domain\n+   * Create PV directory and k8s pv and pvc for the domain.\n    *\n-   * @param dirPath\n-   * @param pvMap\n-   * @throws Exception\n+   * @param dirPath directory path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bd69c8ff069302c126e3f6799c8219bc8cb50f7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk1MzE1Nw==", "bodyText": "this makes me nervous - can you explain more about why we do this?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1389#discussion_r366953157", "createdAt": "2020-01-15T15:50:50Z", "author": {"login": "markxnelson"}, "path": "operator/src/main/java/oracle/kubernetes/operator/builders/WatchBuilder.java", "diffHunk": "@@ -234,21 +237,24 @@ public WatchBuilder withTimeoutSeconds(Integer timeoutSeconds) {\n     @Override\n     public Call apply(ApiClient client, CallParams callParams) {\n       // Ensure that client doesn't time out before call or watch\n-      client.getHttpClient().setReadTimeout(getSocketTimeout(callParams), TimeUnit.SECONDS);\n+      // infinite timeout", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bd69c8ff069302c126e3f6799c8219bc8cb50f7"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk1MzM3NA==", "bodyText": "this seems to repeat a lot - can this not be refactored?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1389#discussion_r366953374", "createdAt": "2020-01-15T15:51:13Z", "author": {"login": "markxnelson"}, "path": "operator/src/main/java/oracle/kubernetes/operator/builders/WatchBuilder.java", "diffHunk": "@@ -394,21 +411,24 @@ public Call apply(ApiClient client, CallParams callParams) {\n     @Override\n     public Call apply(ApiClient client, CallParams callParams) {\n       // Ensure that client doesn't time out before call or watch\n-      client.getHttpClient().setReadTimeout(getSocketTimeout(callParams), TimeUnit.SECONDS);\n+      // infinite timeout", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bd69c8ff069302c126e3f6799c8219bc8cb50f7"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk1NDM5Mw==", "bodyText": "i would like to see a comment here explaining why - for future generations of developers", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1389#discussion_r366954393", "createdAt": "2020-01-15T15:52:54Z", "author": {"login": "markxnelson"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/ClientPool.java", "diffHunk": "@@ -53,7 +58,10 @@ public static ClientPool getInstance() {\n \n   @Override\n   protected ApiClient create() {\n-    return getApiClient();\n+    // disable pooling and always return the same instance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bd69c8ff069302c126e3f6799c8219bc8cb50f7"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk1NDc0NQ==", "bodyText": "spurious", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1389#discussion_r366954745", "createdAt": "2020-01-15T15:53:29Z", "author": {"login": "markxnelson"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/LegalNames.java", "diffHunk": "@@ -125,7 +130,7 @@ public static String toDns1123LegalName(String value) {\n    * @param fieldName Name of the field to be checked\n    * @return true if the value needs to be DNS1123 legal, false otherwise\n    */\n-  public static boolean isDNS1123Required(String fieldName) {\n+  public static boolean isDns1123Required(String fieldName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bd69c8ff069302c126e3f6799c8219bc8cb50f7"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMzQzMzU2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1389#pullrequestreview-343343356", "createdAt": "2020-01-15T16:18:33Z", "commit": {"oid": "3bd69c8ff069302c126e3f6799c8219bc8cb50f7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNjoxODozM1rOFd-EDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNjoxODozM1rOFd-EDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk2OTg2OQ==", "bodyText": "We're generally using String.isNullOrEmpty rather than this combination", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1389#discussion_r366969869", "createdAt": "2020-01-15T16:18:33Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/LegalNames.java", "diffHunk": "@@ -99,6 +99,11 @@ public static String toDns1123LegalName(String value) {\n       return null;\n     }\n \n+    configuredValue = configuredValue.trim();\n+    if (configuredValue == null || configuredValue.isEmpty()) {\n+      return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bd69c8ff069302c126e3f6799c8219bc8cb50f7"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNDI0NjE3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1389#pullrequestreview-343424617", "createdAt": "2020-01-15T18:20:48Z", "commit": {"oid": "3bd69c8ff069302c126e3f6799c8219bc8cb50f7"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxODoyMDo0OFrOFeB4_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxODoyMToxNVrOFeB54w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAzMjU3Mw==", "bodyText": "I fully support changes like this.  This is technical debt resolution.  The original code did not meet our coding standard, and is therefore technical debt.  The code was originally allowed in because nobody caught it, and the checkstyle implementation was flawed.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1389#discussion_r367032573", "createdAt": "2020-01-15T18:20:48Z", "author": {"login": "ddsharpe"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItManagedCoherence.java", "diffHunk": "@@ -221,20 +221,20 @@ public void testCreateCoherenceDomainInImageUsingWlst() throws Exception {\n     LoggerHelper.getLocal().log(Level.INFO, \"SUCCESS - \" + testMethodName);\n   }\n \n-  private void createDomainAndDeployApp(Map<String, Object> domainMap, String domainUID) throws Exception {\n+  private void createDomainAndDeployApp(Map<String, Object> domainMap, String domainUid) throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk1MTE0MA=="}, "originalCommit": {"oid": "3bd69c8ff069302c126e3f6799c8219bc8cb50f7"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAzMjgwMw==", "bodyText": "Same, technical debt resolution.  Ok by me.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1389#discussion_r367032803", "createdAt": "2020-01-15T18:21:15Z", "author": {"login": "ddsharpe"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItOperator.java", "diffHunk": "@@ -355,10 +355,10 @@ public void testOperatorRestUsingCertificateChain() throws Exception {\n     LoggerHelper.getLocal().log(Level.INFO, \"Creating operatorForBackwardCompatibility\");\n     Map<String, Object> operatorMap = createOperatorMap(getNewSuffixCount(),\n               true, testClassName);\n-    Operator operatorForRESTCertChain =\n+    Operator operatorForRestCertChain =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk1MTI3Ng=="}, "originalCommit": {"oid": "3bd69c8ff069302c126e3f6799c8219bc8cb50f7"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b94005b0c148b0cbb25a8b13e3913e3dcad86470", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b94005b0c148b0cbb25a8b13e3913e3dcad86470", "committedDate": "2020-01-15T20:44:09Z", "message": "Review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 53, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}