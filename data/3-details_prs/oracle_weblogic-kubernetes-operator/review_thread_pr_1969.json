{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MDEwMzc1", "number": 1969, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjozNjoxMFrOEp4KMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoyMjoxMlrOEp8EWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzQ3MTg3OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjozNjoxMFrOHb0ONw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjo0NjozMFrOHb0hog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyOTIwNw==", "bodyText": "Don't we have common utility to create a generic PV/PVC. Check with Sankar", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r498929207", "createdAt": "2020-10-02T16:36:10Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -1941,4 +1946,46 @@ private void checkIngressReady(boolean isHostRouting, String ingressHost, boolea\n       assertTrue(callWebAppAndWaitTillReady(curlCmd, 60));\n     }\n   }\n+\n+  /**\n+   * Create PV and PVC for Apache custom configuration file in specified namespace.\n+   * @param apacheNamespace namespace in which to create PVC\n+   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46a69417b0b7655599b778e14948ba4916eec7e"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkzNDE3OA==", "bodyText": "I used the common utility to create PV/PVC:\ncreatePVPVCAndVerify(v1pv, v1pvc, labelSelector, apacheNamespace);\nWe need to pass the V1PersistentVolume and V1PersistentVolumeClaim objects to that method.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r498934178", "createdAt": "2020-10-02T16:46:30Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -1941,4 +1946,46 @@ private void checkIngressReady(boolean isHostRouting, String ingressHost, boolea\n       assertTrue(callWebAppAndWaitTillReady(curlCmd, 60));\n     }\n   }\n+\n+  /**\n+   * Create PV and PVC for Apache custom configuration file in specified namespace.\n+   * @param apacheNamespace namespace in which to create PVC\n+   */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyOTIwNw=="}, "originalCommit": {"oid": "e46a69417b0b7655599b778e14948ba4916eec7e"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzQ4MTk4OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjozOTozNVrOHb0UrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjo0ODoyOVrOHb0lGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkzMDg2MA==", "bodyText": "Is it not available in OCR. When customer run the tests, they many not have access to OCIR.  It is an internal repository.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r498930860", "createdAt": "2020-10-02T16:39:35Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java", "diffHunk": "@@ -169,7 +169,7 @@\n \n   // Apache constants\n   public static final String APACHE_IMAGE_NAME = \"phx.ocir.io/weblogick8s/oracle/apache\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46a69417b0b7655599b778e14948ba4916eec7e"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkzNTA2NA==", "bodyText": "The apache image is not in OCR. I built the image myself. I can ask Monica again whether we have official Apache image.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r498935064", "createdAt": "2020-10-02T16:48:29Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java", "diffHunk": "@@ -169,7 +169,7 @@\n \n   // Apache constants\n   public static final String APACHE_IMAGE_NAME = \"phx.ocir.io/weblogick8s/oracle/apache\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkzMDg2MA=="}, "originalCommit": {"oid": "e46a69417b0b7655599b778e14948ba4916eec7e"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDEwNzYxOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoyMDoxMVrOHb6hrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMjowNzoyNFrOHb8zZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjQ5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static V1PersistentVolume getPersistentVolumes(String pvname) {\n          \n          \n            \n              public static V1PersistentVolume getPersistentVolume(String pvname) {", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499032493", "createdAt": "2020-10-02T20:20:11Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -649,6 +649,14 @@ public static boolean createImage(WitParams params) {\n   }\n \n   // -------------------------   pv/pvc  ---------------------------------\n+  /**\n+   * Get the V1PersistentVolume object in the Kubernetes cluster with specified Persistent Volume name.\n+   * @param pvname the name of the Persistent Volume\n+   * @return V1PersistentVolume the Persistent Volume object with specified name in Kubernetes cluster\n+   */\n+  public static V1PersistentVolume getPersistentVolumes(String pvname) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2OTc5OQ==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499069799", "createdAt": "2020-10-02T22:07:24Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -649,6 +649,14 @@ public static boolean createImage(WitParams params) {\n   }\n \n   // -------------------------   pv/pvc  ---------------------------------\n+  /**\n+   * Get the V1PersistentVolume object in the Kubernetes cluster with specified Persistent Volume name.\n+   * @param pvname the name of the Persistent Volume\n+   * @return V1PersistentVolume the Persistent Volume object with specified name in Kubernetes cluster\n+   */\n+  public static V1PersistentVolume getPersistentVolumes(String pvname) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjQ5Mw=="}, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDEwODIxOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoyMDozMVrOHb6iHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMjowNzozMVrOHb8zkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjYwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static V1PersistentVolumeClaim getPersistentVolumeClaims(String namespace, String pvcname) {\n          \n          \n            \n              public static V1PersistentVolumeClaim getPersistentVolumeClaim(String namespace, String pvcname) {", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499032606", "createdAt": "2020-10-02T20:20:31Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -672,6 +680,16 @@ public static boolean deletePersistentVolume(String name) {\n     return PersistentVolume.delete(name);\n   }\n \n+  /**\n+   * Get V1PersistentVolumeClaim object in the namespace with the specified Persistent Volume Claim name .\n+   * @param namespace namespace in which to get the Persistent Volume Claim\n+   * @param pvcname the name of Persistent Volume Claim\n+   * @return V1PersistentVolumeClaim the Persistent Volume Claims Object in specified namespace\n+   */\n+  public static V1PersistentVolumeClaim getPersistentVolumeClaims(String namespace, String pvcname) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2OTg0MA==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499069840", "createdAt": "2020-10-02T22:07:31Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -672,6 +680,16 @@ public static boolean deletePersistentVolume(String name) {\n     return PersistentVolume.delete(name);\n   }\n \n+  /**\n+   * Get V1PersistentVolumeClaim object in the namespace with the specified Persistent Volume Claim name .\n+   * @param namespace namespace in which to get the Persistent Volume Claim\n+   * @param pvcname the name of Persistent Volume Claim\n+   * @return V1PersistentVolumeClaim the Persistent Volume Claims Object in specified namespace\n+   */\n+  public static V1PersistentVolumeClaim getPersistentVolumeClaims(String namespace, String pvcname) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjYwNg=="}, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDEwODc5OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Kubernetes.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoyMDo0OFrOHb6ieg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMjowNzozOFrOHb8zpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjY5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static V1PersistentVolume getPersistentVolumes(String pvname) {\n          \n          \n            \n              public static V1PersistentVolume getPersistentVolume(String pvname) {", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499032698", "createdAt": "2020-10-02T20:20:48Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Kubernetes.java", "diffHunk": "@@ -1558,6 +1558,22 @@ public static V1PersistentVolumeList listPersistentVolumes(String labels) throws\n     return listPersistentVolume;\n   }\n \n+  /**\n+   * Get the V1PersistentVolume object in the Kubernetes cluster with specified Persistent Volume name.\n+   * @param pvname the name of the Persistent Volume\n+   * @return V1PersistentVolume the Persistent Volume object with specified name in Kubernetes cluster\n+   */\n+  public static V1PersistentVolume getPersistentVolumes(String pvname) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2OTg2MQ==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499069861", "createdAt": "2020-10-02T22:07:38Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Kubernetes.java", "diffHunk": "@@ -1558,6 +1558,22 @@ public static V1PersistentVolumeList listPersistentVolumes(String labels) throws\n     return listPersistentVolume;\n   }\n \n+  /**\n+   * Get the V1PersistentVolume object in the Kubernetes cluster with specified Persistent Volume name.\n+   * @param pvname the name of the Persistent Volume\n+   * @return V1PersistentVolume the Persistent Volume object with specified name in Kubernetes cluster\n+   */\n+  public static V1PersistentVolume getPersistentVolumes(String pvname) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjY5OA=="}, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDEwOTI5OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Kubernetes.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoyMTowMFrOHb6iww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMjowNzo0NFrOHb8zwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjc3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static V1PersistentVolumeClaim getPersistentVolumeClaims(String namespace, String pvcname) {\n          \n          \n            \n              public static V1PersistentVolumeClaim getPersistentVolumeClaim(String namespace, String pvcname) {", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499032771", "createdAt": "2020-10-02T20:21:00Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Kubernetes.java", "diffHunk": "@@ -1574,6 +1590,23 @@ public static V1PersistentVolumeClaimList listPersistentVolumeClaims(String name\n     }\n   }\n \n+  /**\n+   * Get V1PersistentVolumeClaim object in the namespace with the specified Persistent Volume Claim name .\n+   * @param namespace namespace in which to get the Persistent Volume Claim\n+   * @param pvcname the name of Persistent Volume Claim\n+   * @return V1PersistentVolumeClaim the Persistent Volume Claims Object in specified namespace\n+   */\n+  public static V1PersistentVolumeClaim getPersistentVolumeClaims(String namespace, String pvcname) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2OTg4OA==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499069888", "createdAt": "2020-10-02T22:07:44Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Kubernetes.java", "diffHunk": "@@ -1574,6 +1590,23 @@ public static V1PersistentVolumeClaimList listPersistentVolumeClaims(String name\n     }\n   }\n \n+  /**\n+   * Get V1PersistentVolumeClaim object in the namespace with the specified Persistent Volume Claim name .\n+   * @param namespace namespace in which to get the Persistent Volume Claim\n+   * @param pvcname the name of Persistent Volume Claim\n+   * @return V1PersistentVolumeClaim the Persistent Volume Claims Object in specified namespace\n+   */\n+  public static V1PersistentVolumeClaim getPersistentVolumeClaims(String namespace, String pvcname) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMjc3MQ=="}, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDExMTY1OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoyMTo1OFrOHb6kOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMjowNzo1MVrOHb8z5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMzE0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  V1PersistentVolumeClaim v1pvc = getPersistentVolumeClaims(apacheNamespace, pvcName);\n          \n          \n            \n                  V1PersistentVolumeClaim v1pvc = getPersistentVolumeClaim(apacheNamespace, pvcName);", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499033147", "createdAt": "2020-10-02T20:21:58Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -718,22 +722,35 @@ public static HelmParams installAndVerifyApache(String apacheNamespace,\n           .httpsNodePort(httpsNodePort);\n     }\n \n-    if (volumePath != null && clusterNamePortMap != null) {\n+    if (pvcName != null && clusterNamePortMap != null) {\n       // create a custom Apache plugin configuration file named custom_mod_wl_apache.conf\n-      // and put it under the directory specified in volumePath\n+      // and put it under the directory specified in pv hostPath\n       // this file provides a custom Apache plugin configuration to fine tune the behavior of Apache\n+      V1PersistentVolumeClaim v1pvc = getPersistentVolumeClaims(apacheNamespace, pvcName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2OTkyNQ==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499069925", "createdAt": "2020-10-02T22:07:51Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -718,22 +722,35 @@ public static HelmParams installAndVerifyApache(String apacheNamespace,\n           .httpsNodePort(httpsNodePort);\n     }\n \n-    if (volumePath != null && clusterNamePortMap != null) {\n+    if (pvcName != null && clusterNamePortMap != null) {\n       // create a custom Apache plugin configuration file named custom_mod_wl_apache.conf\n-      // and put it under the directory specified in volumePath\n+      // and put it under the directory specified in pv hostPath\n       // this file provides a custom Apache plugin configuration to fine tune the behavior of Apache\n+      V1PersistentVolumeClaim v1pvc = getPersistentVolumeClaims(apacheNamespace, pvcName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMzE0Nw=="}, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDExMjI0OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoyMjoxMlrOHb6kow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMjowNzo1N1rOHb8z_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMzI1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  V1PersistentVolume v1pv = getPersistentVolumes(pvName);\n          \n          \n            \n                  V1PersistentVolume v1pv = getPersistentVolume(pvName);", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499033251", "createdAt": "2020-10-02T20:22:12Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -718,22 +722,35 @@ public static HelmParams installAndVerifyApache(String apacheNamespace,\n           .httpsNodePort(httpsNodePort);\n     }\n \n-    if (volumePath != null && clusterNamePortMap != null) {\n+    if (pvcName != null && clusterNamePortMap != null) {\n       // create a custom Apache plugin configuration file named custom_mod_wl_apache.conf\n-      // and put it under the directory specified in volumePath\n+      // and put it under the directory specified in pv hostPath\n       // this file provides a custom Apache plugin configuration to fine tune the behavior of Apache\n+      V1PersistentVolumeClaim v1pvc = getPersistentVolumeClaims(apacheNamespace, pvcName);\n+      assertNotNull(v1pvc);\n+      assertNotNull(v1pvc.getSpec());\n+      String pvName = v1pvc.getSpec().getVolumeName();\n+      logger.info(\"Got PV {0} from PVC {1} in namespace {2}\", pvName, pvcName, apacheNamespace);\n+\n+      V1PersistentVolume v1pv = getPersistentVolumes(pvName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2OTk0OA==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1969#discussion_r499069948", "createdAt": "2020-10-02T22:07:57Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -718,22 +722,35 @@ public static HelmParams installAndVerifyApache(String apacheNamespace,\n           .httpsNodePort(httpsNodePort);\n     }\n \n-    if (volumePath != null && clusterNamePortMap != null) {\n+    if (pvcName != null && clusterNamePortMap != null) {\n       // create a custom Apache plugin configuration file named custom_mod_wl_apache.conf\n-      // and put it under the directory specified in volumePath\n+      // and put it under the directory specified in pv hostPath\n       // this file provides a custom Apache plugin configuration to fine tune the behavior of Apache\n+      V1PersistentVolumeClaim v1pvc = getPersistentVolumeClaims(apacheNamespace, pvcName);\n+      assertNotNull(v1pvc);\n+      assertNotNull(v1pvc.getSpec());\n+      String pvName = v1pvc.getSpec().getVolumeName();\n+      logger.info(\"Got PV {0} from PVC {1} in namespace {2}\", pvName, pvcName, apacheNamespace);\n+\n+      V1PersistentVolume v1pv = getPersistentVolumes(pvName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMzI1MQ=="}, "originalCommit": {"oid": "84a80347052410ae16b1a06413f76a2ac5a2b142"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4038, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}