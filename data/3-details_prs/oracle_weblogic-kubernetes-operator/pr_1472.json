{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5Mzc2MTAy", "number": 1472, "title": "Support CRD v1 on Kubernetes 1.16", "bodyText": "Move to operator version \"3.0.0\" and eliminate temporary references to \"2.6.0\"\nOn Kubernetes 1.16, create v1 CRD, upgrading from v1beta1 if necessary\nSupport better generation of schema descriptions\nPublish CRD yamls for every product version\n\nWaiting on full test results; will update here when complete.  Manually tested on 1.16 with the additional change of running operator on a pre-release JDK because of the issue connecting with 1.16.", "createdAt": "2020-03-16T16:59:55Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1472", "merged": true, "mergeCommit": {"oid": "2fbd1c5bdd24d7324b7c9917d0017a94e145e8c6"}, "closed": true, "closedAt": "2020-03-16T19:54:15Z", "author": {"login": "rjeberhard"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFpkLwAH2gAyMzg5Mzc2MTAyOmZkNWNlYzUyYTRiNmJjMzgxMDllZjc0MTZmMGIxZjhlNjM0ZTc3YmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOSuWCAFqTM3NTQ4OTQwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fd5cec52a4b6bc38109ef7416f0b1f8e634e77bd", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/fd5cec52a4b6bc38109ef7416f0b1f8e634e77bd", "committedDate": "2020-02-18T22:21:20Z", "message": "Initial Change for Helm 2.x/3.x comptibility"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81d4ccc6f1231f221103aaa1328422ec83d254bd", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/81d4ccc6f1231f221103aaa1328422ec83d254bd", "committedDate": "2020-02-19T18:36:47Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into OWLS-79243"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "356b4a9b70207da0ac4b1aeb884afba654a6d795", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/356b4a9b70207da0ac4b1aeb884afba654a6d795", "committedDate": "2020-02-20T16:08:55Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into OWLS-79243"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c0f737dbd43c75ecdac70f1235ff00a3814d0a8", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8c0f737dbd43c75ecdac70f1235ff00a3814d0a8", "committedDate": "2020-02-20T19:48:14Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into OWLS-79243"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9e1be19e1b09078982013281c63ba9be5ac2524", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d9e1be19e1b09078982013281c63ba9be5ac2524", "committedDate": "2020-02-20T20:17:49Z", "message": "Resolve review comment on PR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fff87075faf5ea220ec908c01b4747c8ef80c0ed", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/fff87075faf5ea220ec908c01b4747c8ef80c0ed", "committedDate": "2020-02-20T23:34:02Z", "message": "Removed Helm Env varaiable dependency from the Test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a34d99e104961785edbe3606a463477c5d188a0", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3a34d99e104961785edbe3606a463477c5d188a0", "committedDate": "2020-02-21T21:50:11Z", "message": "Modified the helm scripts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35b1ac0be59ce34160b5c99e3a1e50fa80891bfc", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/35b1ac0be59ce34160b5c99e3a1e50fa80891bfc", "committedDate": "2020-02-26T01:34:05Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into OWLS-79243"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de16e10598b3903903cfce3f39334eb65cca4ee3", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/de16e10598b3903903cfce3f39334eb65cca4ee3", "committedDate": "2020-02-26T01:35:02Z", "message": "Modify helm command for Upgrade Test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6be7d21f8bf9eb3fe04bfd525d108b6b4d85d44", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d6be7d21f8bf9eb3fe04bfd525d108b6b4d85d44", "committedDate": "2020-02-26T19:41:08Z", "message": "Merge remote-tracking branch 'origin/OWLS-79243' into research-1.16"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16d1846ae5a9055a9da1f1c83ea10b5ff3fa8d08", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/16d1846ae5a9055a9da1f1c83ea10b5ff3fa8d08", "committedDate": "2020-02-27T13:00:41Z", "message": "CRD v1 initial research"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f57a29e8541f3320cacc9eb80da51226d0fc342d", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f57a29e8541f3320cacc9eb80da51226d0fc342d", "committedDate": "2020-02-27T17:55:16Z", "message": "Pull schema from k8s objects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "263499dcedf2824df9e4b938c8f7c1a68c72f1a8", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/263499dcedf2824df9e4b938c8f7c1a68c72f1a8", "committedDate": "2020-02-28T12:16:01Z", "message": "Use JDK 15 until TLS 1.3 fix backported"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c828d0eefe9a1a4a076fd2ff5101b51b691f587", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4c828d0eefe9a1a4a076fd2ff5101b51b691f587", "committedDate": "2020-03-11T15:19:34Z", "message": "Merge remote-tracking branch 'origin/develop' into research-1.16"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d09fab7bed2670932e731f8e9d0f8b3822aec8e9", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d09fab7bed2670932e731f8e9d0f8b3822aec8e9", "committedDate": "2020-03-11T16:08:23Z", "message": "Update to 8.0.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9086475c16502d7c45004669957c9bb171ae4a75", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9086475c16502d7c45004669957c9bb171ae4a75", "committedDate": "2020-03-12T16:02:48Z", "message": "Work in progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9339057931888875b67eb58b4e70daf108027d4a", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9339057931888875b67eb58b4e70daf108027d4a", "committedDate": "2020-03-13T14:21:10Z", "message": "Merge remote-tracking branch 'origin/develop' into research-1.16"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c6217e610fd6a0feb0e7b17d3dc89bb36477921", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1c6217e610fd6a0feb0e7b17d3dc89bb36477921", "committedDate": "2020-03-13T19:43:25Z", "message": "Generate v1beta1 CRD yaml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45893e7faa69f51099d1ed3e0d71cfa739b8ffcb", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/45893e7faa69f51099d1ed3e0d71cfa739b8ffcb", "committedDate": "2020-03-13T20:38:17Z", "message": "Work in progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f72ec3232bfbe1f283d890c133c540d39a46c06", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5f72ec3232bfbe1f283d890c133c540d39a46c06", "committedDate": "2020-03-13T21:23:03Z", "message": "Work in progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5726604862aba3f4118e7bfee403ce60249babd0", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5726604862aba3f4118e7bfee403ce60249babd0", "committedDate": "2020-03-14T20:15:25Z", "message": "Work in progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1038bddbea8aa0ec3da055f82d1ee129f860dbc4", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1038bddbea8aa0ec3da055f82d1ee129f860dbc4", "committedDate": "2020-03-14T23:48:38Z", "message": "Sort"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "023a484a893309660cef73e8d49a02d1e8e74e52", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/023a484a893309660cef73e8d49a02d1e8e74e52", "committedDate": "2020-03-16T15:04:38Z", "message": "Update unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f05d4ddb5d93c5d2c18564c09d4de693915e3635", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f05d4ddb5d93c5d2c18564c09d4de693915e3635", "committedDate": "2020-03-16T15:16:10Z", "message": "Merge remote-tracking branch 'origin/develop' into research-1.16"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fe69617ac8e729a380b4532a4afc0bb0dfa6fbf", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5fe69617ac8e729a380b4532a4afc0bb0dfa6fbf", "committedDate": "2020-03-16T15:37:04Z", "message": "More tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff416dee7803ef13ccede8b8ef97206462dca618", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ff416dee7803ef13ccede8b8ef97206462dca618", "committedDate": "2020-03-16T15:52:07Z", "message": "Version 3.0.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0447ba88f73eb121a91075183ebfe93fe507032", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e0447ba88f73eb121a91075183ebfe93fe507032", "committedDate": "2020-03-16T16:00:17Z", "message": "Revert JDK update for now"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "408dcb70d851f9f0ee466ecfbb195aeba6d60049", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/408dcb70d851f9f0ee466ecfbb195aeba6d60049", "committedDate": "2020-03-16T16:45:57Z", "message": "Tests check for v1 CRD"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "695c26aa876dff74813b72f55985ce446a0a54d4", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/695c26aa876dff74813b72f55985ce446a0a54d4", "committedDate": "2020-03-16T16:51:27Z", "message": "Remove duplicate pom.xml entries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NDUzODE1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1472#pullrequestreview-375453815", "createdAt": "2020-03-16T17:54:49Z", "commit": {"oid": "695c26aa876dff74813b72f55985ce446a0a54d4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NDg5NDAw", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1472#pullrequestreview-375489400", "createdAt": "2020-03-16T18:40:46Z", "commit": {"oid": "695c26aa876dff74813b72f55985ce446a0a54d4"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODo0MDo0N1rOF3BSfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODo0MjoxNlrOF3BVdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzNzExOA==", "bodyText": "wow, that really clarified that :)", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1472#discussion_r393237118", "createdAt": "2020-03-16T18:40:47Z", "author": {"login": "markxnelson"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CallBuilder.java", "diffHunk": "@@ -711,14 +731,81 @@ private Call readCustomResourceDefinitionAsync(\n    * @return Asynchronous step\n    */\n   public Step readCustomResourceDefinitionAsync(\n-      String name, ResponseStep<V1beta1CustomResourceDefinition> responseStep) {\n+      String name, ResponseStep<V1CustomResourceDefinition> responseStep) {\n     return createRequestAsync(\n         responseStep, new RequestParams(\"readCRD\", null, name, null), readCrd);\n   }\n \n-  /* Services */\n-\n   private Call createCustomResourceDefinitionAsync(\n+      ApiClient client,\n+      V1CustomResourceDefinition body,\n+      ApiCallback<V1CustomResourceDefinition> callback)\n+      throws ApiException {\n+    return new ApiextensionsV1Api(client)\n+        .createCustomResourceDefinitionAsync(body, pretty, null, null, callback);\n+  }\n+\n+  /**\n+   * Asynchronous step for creating CRD.\n+   *\n+   * @param body Body", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "695c26aa876dff74813b72f55985ce446a0a54d4"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzNzI4NQ==", "bodyText": "is this generated?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1472#discussion_r393237285", "createdAt": "2020-03-16T18:41:05Z", "author": {"login": "markxnelson"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CallBuilder.java", "diffHunk": "@@ -711,14 +731,81 @@ private Call readCustomResourceDefinitionAsync(\n    * @return Asynchronous step\n    */\n   public Step readCustomResourceDefinitionAsync(\n-      String name, ResponseStep<V1beta1CustomResourceDefinition> responseStep) {\n+      String name, ResponseStep<V1CustomResourceDefinition> responseStep) {\n     return createRequestAsync(\n         responseStep, new RequestParams(\"readCRD\", null, name, null), readCrd);\n   }\n \n-  /* Services */\n-\n   private Call createCustomResourceDefinitionAsync(\n+      ApiClient client,\n+      V1CustomResourceDefinition body,\n+      ApiCallback<V1CustomResourceDefinition> callback)\n+      throws ApiException {\n+    return new ApiextensionsV1Api(client)\n+        .createCustomResourceDefinitionAsync(body, pretty, null, null, callback);\n+  }\n+\n+  /**\n+   * Asynchronous step for creating CRD.\n+   *\n+   * @param body Body\n+   * @param responseStep Response step for when call completes\n+   * @return Asynchronous step\n+   */\n+  public Step createCustomResourceDefinitionAsync(\n+      V1CustomResourceDefinition body,\n+      ResponseStep<V1CustomResourceDefinition> responseStep) {\n+    return createRequestAsync(\n+        responseStep, new RequestParams(\"createCRD\", null, null, body), createCrd);\n+  }\n+\n+  private Call replaceCustomResourceDefinitionAsync(\n+      ApiClient client,\n+      String name,\n+      V1CustomResourceDefinition body,\n+      ApiCallback<V1CustomResourceDefinition> callback)\n+      throws ApiException {\n+    return new ApiextensionsV1Api(client)\n+        .replaceCustomResourceDefinitionAsync(name, body, pretty, null, null, callback);\n+  }\n+\n+  /**\n+   * Asynchronous step for replacing CRD.\n+   *\n+   * @param name Name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "695c26aa876dff74813b72f55985ce446a0a54d4"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzNzg3Nw==", "bodyText": "magic number", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1472#discussion_r393237877", "createdAt": "2020-03-16T18:42:16Z", "author": {"login": "markxnelson"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "diffHunk": "@@ -116,63 +151,130 @@ boolean isOutdatedCrd(\n \n     @Override\n     public NextAction apply(Packet packet) {\n-      return doNext(context.verifyCrd(getNext()), packet);\n+      if (context.version.isCrdV1Supported()) {\n+        return doNext(context.verifyCrd(getNext()), packet);\n+      } else {\n+        return doNext(context.verifyBetaCrd(getNext()), packet);\n+      }\n     }\n   }\n \n   static class CrdContext {\n     private final Step conflictStep;\n-    private final V1beta1CustomResourceDefinition model;\n+    private final V1CustomResourceDefinition model;\n+    private final V1beta1CustomResourceDefinition betaModel;\n     private final KubernetesVersion version;\n \n     CrdContext(KubernetesVersion version, Step conflictStep) {\n       this.version = version;\n       this.conflictStep = conflictStep;\n       this.model = createModel(version);\n+      this.betaModel = createBetaModel(version);\n     }\n \n-    static V1beta1CustomResourceDefinition createModel(KubernetesVersion version) {\n+    static V1CustomResourceDefinition createModel(KubernetesVersion version) {\n+      return new V1CustomResourceDefinition()\n+          .apiVersion(\"apiextensions.k8s.io/v1\")\n+          .kind(\"CustomResourceDefinition\")\n+          .metadata(createMetadata())\n+          .spec(createSpec(version));\n+    }\n+\n+    static V1beta1CustomResourceDefinition createBetaModel(KubernetesVersion version) {\n       return new V1beta1CustomResourceDefinition()\n           .apiVersion(\"apiextensions.k8s.io/v1beta1\")\n           .kind(\"CustomResourceDefinition\")\n           .metadata(createMetadata())\n-          .spec(createSpec(version));\n+          .spec(createBetaSpec(version));\n     }\n \n     static V1ObjectMeta createMetadata() {\n       return new V1ObjectMeta()\n           .name(KubernetesConstants.CRD_NAME);\n     }\n \n-    static V1beta1CustomResourceDefinitionSpec createSpec(KubernetesVersion version) {\n+    static V1CustomResourceDefinitionSpec createSpec(KubernetesVersion version) {\n+      V1CustomResourceDefinitionSpec spec =\n+          new V1CustomResourceDefinitionSpec()\n+              .group(KubernetesConstants.DOMAIN_GROUP)\n+              .versions(getCrdVersions())\n+              .scope(\"Namespaced\")\n+              .names(getCrdNames());\n+      return spec;\n+    }\n+\n+    static V1beta1CustomResourceDefinitionSpec createBetaSpec(KubernetesVersion version) {\n       V1beta1CustomResourceDefinitionSpec spec =\n           new V1beta1CustomResourceDefinitionSpec()\n               .group(KubernetesConstants.DOMAIN_GROUP)\n-              .version(KubernetesConstants.DOMAIN_VERSION)\n-              .versions(getCrdVersions())\n+              .versions(getBetaCrdVersions())\n+              .validation(createBetaSchemaValidation())\n+              .subresources(createBetaSubresources())\n               .scope(\"Namespaced\")\n-              .names(getCrdNames())\n-              .validation(createSchemaValidation());\n-      if (version == null || version.isCrdSubresourcesSupported()) {\n-        spec.setSubresources(\n-            new V1beta1CustomResourceSubresources()\n-                .scale(\n-                    new V1beta1CustomResourceSubresourceScale()\n-                        .specReplicasPath(\".spec.replicas\")\n-                        .statusReplicasPath(\".status.replicas\")));\n-        // Remove status for now because seeing status not updated on some k8s environments\n-        // Consider adding this only for K8s version 1.13+\n-        // See the note in KubernetesVersion\n-        // .status(new HashMap<String, Object>()));\n-      }\n+              .names(getBetaCrdNames());\n       return spec;\n     }\n \n-    static List<V1beta1CustomResourceDefinitionVersion> getCrdVersions() {\n-      List<V1beta1CustomResourceDefinitionVersion> versions =\n-          Arrays.stream(KubernetesConstants.DOMAIN_ALTERNATE_VERSIONS)\n-              .map(e -> new V1beta1CustomResourceDefinitionVersion().name(e).served(true).storage(false))\n-              .collect(Collectors.toList());\n+    static String getVersionFromCrdSchemaFileName(String name) {\n+      // names will be like \"domain-crd-schemav2-201.yaml\"\n+      // want \"v2\"\n+      String end = name.substring(17);\n+      return end.substring(0, end.indexOf('-'));\n+    }\n+\n+    static V1CustomResourceValidation getValidationFromCrdSchemaFile(String fileContents) {\n+      return Yaml.getSnakeYaml().loadAs(new StringReader(fileContents), V1CustomResourceValidation.class);\n+    }\n+\n+    static V1CustomResourceSubresources createSubresources() {\n+      return new V1CustomResourceSubresources()\n+          .scale(\n+              new V1CustomResourceSubresourceScale()\n+                  .specReplicasPath(\".spec.replicas\")\n+                  .statusReplicasPath(\".status.replicas\"));\n+    }\n+\n+    static V1beta1CustomResourceSubresources createBetaSubresources() {\n+      return new V1beta1CustomResourceSubresources()\n+          .scale(\n+              new V1beta1CustomResourceSubresourceScale()\n+                  .specReplicasPath(\".spec.replicas\")\n+                  .statusReplicasPath(\".status.replicas\"));\n+    }\n+\n+    static List<V1CustomResourceDefinitionVersion> getCrdVersions() {\n+      Map<String, String> schemas = schemaReader.loadFilesFromClasspath();\n+      List<V1CustomResourceDefinitionVersion> versions = schemas.entrySet().stream()\n+          .sorted(Comparator.comparing(Map.Entry::getKey))\n+          .map(entry -> new V1CustomResourceDefinitionVersion()\n+              .name(getVersionFromCrdSchemaFileName(entry.getKey()))\n+              .schema(getValidationFromCrdSchemaFile(entry.getValue()))\n+              .subresources(createSubresources())\n+              .served(true)\n+              .storage(false))\n+          .collect(Collectors.toList());\n+\n+      versions.add(\n+          0, // must be first", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "695c26aa876dff74813b72f55985ce446a0a54d4"}, "originalPosition": 255}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4854, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}