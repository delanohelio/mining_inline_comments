{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NDE3MjI1", "number": 1740, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxMjoyOVrOEGHFHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxMzoyM1rOEGHGDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODQyOTA4OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItScaleMiiDomainNginx.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxMjoyOVrOGktXMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxMjoyOVrOGktXMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NTEzNg==", "bodyText": "createIngressForDomainAndVerify() can call checkIngressReady()", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1740#discussion_r441145136", "createdAt": "2020-06-16T21:12:29Z", "author": {"login": "vanajamukkara"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItScaleMiiDomainNginx.java", "diffHunk": "@@ -133,7 +134,10 @@ public static void initAll(@Namespaces(3) List<String> namespaces) {\n       clusterNameMsPortMap.put(CLUSTER_NAME_PREFIX + i, MANAGED_SERVER_PORT);\n     }\n     logger.info(\"Creating ingress for domain {0} in namespace {1}\", domainUid, domainNamespace);\n-    createIngressForDomainAndVerify(domainUid, domainNamespace, clusterNameMsPortMap);\n+    List<String> ingressHostList = createIngressForDomainAndVerify(domainUid, domainNamespace, clusterNameMsPortMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea110c4cfd5f7a50fb846deb6df3f547fb2e8f18"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODQzMTQ5OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/TestUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxMzoyM1rOGktYzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMToxMzoyM1rOGktYzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NTU1MQ==", "bodyText": "log stdout and stderr as well", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1740#discussion_r441145551", "createdAt": "2020-06-16T21:13:23Z", "author": {"login": "vanajamukkara"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/TestUtils.java", "diffHunk": "@@ -179,6 +179,51 @@ public static String getDateAndTimeStamp() {\n     return dateFormat.format(date) + \"-\" + System.currentTimeMillis();\n   }\n \n+  /**\n+   * Call a web app and wait for the response code 200.\n+   * @param curlCmd curl command to call the web app\n+   * @param maxIterations max iterations to call the curl command\n+   * @return true if 200 response code is returned, false otherwise\n+   */\n+  public static boolean callWebAppAndWaitTillReady(String curlCmd, int maxIterations)  {\n+\n+    ExecResult result = null;\n+    String responseCode = \"\";\n+\n+    for (int i = 0; i < maxIterations; i++) {\n+      try {\n+        result = ExecCommand.exec(curlCmd);\n+        responseCode = result.stdout().trim();\n+\n+        if (result.exitValue() != 0 || !responseCode.equals(\"200\")) {\n+          logger.info(\"callWebApp did not return 200 response code, got {0}, iteration {1} of {2}\",\n+                  responseCode, i, maxIterations);\n+\n+          try {\n+            Thread.sleep(1000);\n+          } catch (InterruptedException ignore) {\n+            // ignore\n+          }\n+        } else if (responseCode.equals(\"200\")) {\n+          logger.info(\"callWebApp returned 200 response code, iteration {0}\", i);\n+          return true;\n+        }\n+      } catch (Exception e) {\n+        logger.info(\"Got exception while running command: {0}\", curlCmd);\n+        logger.info(e.toString());\n+        if (result != null) {\n+          logger.info(\"result.stdout: \\n{0}\", result.stdout());\n+          logger.info(\"result.stderr: \\n{0}\", result.stderr());\n+        }\n+        return false;\n+      }\n+    }\n+\n+    logger.info(\"FAILURE: callWebApp did not return 200 response code, got {0}\", responseCode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea110c4cfd5f7a50fb846deb6df3f547fb2e8f18"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4351, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}