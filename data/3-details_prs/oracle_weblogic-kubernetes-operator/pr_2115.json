{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNzg0MzM1", "number": 2115, "title": "Kubernetes events generation for domain resource changes", "bodyText": "The PR adds the integration tests to check the domain events logged by the operator for changes in domain custom resource.\nThe test verifies the events for DomainCreated, DomainChanged,  DomainDeleted, DomainProcessingStarting, DomainProcessingCompleted, DomainProcessingRetrying, and DomainProcessingAborted events.\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/3433/", "createdAt": "2020-12-21T23:47:20Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2115", "merged": true, "mergeCommit": {"oid": "8a9c18d0a90975658819f05d2962225638549671"}, "closed": true, "closedAt": "2020-12-23T22:06:04Z", "author": {"login": "sankarpn"}, "timelineItems": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmeL7IAH2gAyNTQzNzg0MzM1OmNjZGEyMzRkMTI0YjI3OWYxYTNhYjZkNzM5YjZiYmJhY2FmNTgzMjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdpGjIaAFqTU1ODI0ODAwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ccda234d124b279f1a3ab6d739b6bbbacaf58321", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ccda234d124b279f1a3ab6d739b6bbbacaf58321", "committedDate": "2020-12-15T17:56:32Z", "message": "adding k8s events tests first cut"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5e339aa782be10de959030fb3a468842155afc0", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c5e339aa782be10de959030fb3a468842155afc0", "committedDate": "2020-12-16T22:06:02Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into k8seventstests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af515821b0f2212011df1ac992f1988d8156702b", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/af515821b0f2212011df1ac992f1988d8156702b", "committedDate": "2020-12-16T22:06:16Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4da941996dfa3a9d4393299304857260f215bb1", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d4da941996dfa3a9d4393299304857260f215bb1", "committedDate": "2020-12-16T22:12:18Z", "message": "adding k8sevents util class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86a3634eb5e3e273c44c82e1e17ad9eef9b27b77", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/86a3634eb5e3e273c44c82e1e17ad9eef9b27b77", "committedDate": "2020-12-16T22:35:28Z", "message": "log all events"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22025c6330dff463903cc7a4fa83afd21818b596", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/22025c6330dff463903cc7a4fa83afd21818b596", "committedDate": "2020-12-16T23:00:44Z", "message": "log debug messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60300beed9a2591f96ee569d1e9a1047497c56dc", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/60300beed9a2591f96ee569d1e9a1047497c56dc", "committedDate": "2020-12-17T18:22:56Z", "message": "fix the reporting component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "771c20ccdecffb8a5a7d606d6bfeade936ba5d27", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/771c20ccdecffb8a5a7d606d6bfeade936ba5d27", "committedDate": "2020-12-17T18:47:22Z", "message": "fix event message for domain created"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c6a87baeb6054cfe7a4410247ca214ef8746bde", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3c6a87baeb6054cfe7a4410247ca214ef8746bde", "committedDate": "2020-12-17T20:31:49Z", "message": "remove check for 3rd ms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a53fac6d394a02773e87b450df24e36609acbf55", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a53fac6d394a02773e87b450df24e36609acbf55", "committedDate": "2020-12-18T17:53:13Z", "message": "add timestamp to compare"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d78187a166d6abd1cb28c538b968ab09e4bb9040", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d78187a166d6abd1cb28c538b968ab09e4bb9040", "committedDate": "2020-12-18T18:02:43Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a011224b3c83b54d72e8406478aa050ae6a43fd", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1a011224b3c83b54d72e8406478aa050ae6a43fd", "committedDate": "2020-12-18T18:08:18Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d43c74cfd52e88a89af9bde54e5d60a910e9fcb4", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d43c74cfd52e88a89af9bde54e5d60a910e9fcb4", "committedDate": "2020-12-18T18:22:58Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf15a90f061be79f15edafec5d09f09eed2ddef3", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/cf15a90f061be79f15edafec5d09f09eed2ddef3", "committedDate": "2020-12-18T18:33:29Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb8c8ed7a97fa8f2ba0b9aae082f3b55a6488ed9", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/bb8c8ed7a97fa8f2ba0b9aae082f3b55a6488ed9", "committedDate": "2020-12-18T18:50:23Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "701ffa88282df36045636e1153219d0c4fb66cc8", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/701ffa88282df36045636e1153219d0c4fb66cc8", "committedDate": "2020-12-18T20:47:25Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf00016744563b5e2eed80eac8daf2b7bed45698", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/bf00016744563b5e2eed80eac8daf2b7bed45698", "committedDate": "2020-12-18T20:47:53Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f589dd3e4c4a511a3098f4574191cd744de14148", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f589dd3e4c4a511a3098f4574191cd744de14148", "committedDate": "2020-12-18T21:00:12Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d8ef2c7037d58d8e8f191c949425949e3cde8ec", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5d8ef2c7037d58d8e8f191c949425949e3cde8ec", "committedDate": "2020-12-18T23:12:30Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8011ab3d682d980ff9b0877aac4d1ce4e1d6e5be", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8011ab3d682d980ff9b0877aac4d1ce4e1d6e5be", "committedDate": "2020-12-18T23:20:50Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4970787687765e5ac35ee64463531e5e3ee1510", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b4970787687765e5ac35ee64463531e5e3ee1510", "committedDate": "2020-12-18T23:29:34Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17df11891213b593ef29e5b63ad3714bd6fff349", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/17df11891213b593ef29e5b63ad3714bd6fff349", "committedDate": "2020-12-18T23:30:45Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2237cfe6797750a2f7972e9f538a242ce39d3131", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2237cfe6797750a2f7972e9f538a242ce39d3131", "committedDate": "2020-12-18T23:47:09Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35f9c83968851cf3b5cef3b7655fa9b3bd218645", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/35f9c83968851cf3b5cef3b7655fa9b3bd218645", "committedDate": "2020-12-18T23:48:44Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d27e1de27a6b24af87e1059bec94864e4e19ad4", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8d27e1de27a6b24af87e1059bec94864e4e19ad4", "committedDate": "2020-12-19T01:04:54Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0014bfa33c45ede605ca0d5170f8911227d3610d", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0014bfa33c45ede605ca0d5170f8911227d3610d", "committedDate": "2020-12-19T01:27:47Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baa55a8f6622ecf9183a5d3585d9be3742571522", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/baa55a8f6622ecf9183a5d3585d9be3742571522", "committedDate": "2020-12-19T01:51:11Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29f4e6c4d3ec83c8296fa3320b06e717a15fae6a", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/29f4e6c4d3ec83c8296fa3320b06e717a15fae6a", "committedDate": "2020-12-19T02:21:25Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c2dbb75a93c34150be45bafdff2bb379254247d", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6c2dbb75a93c34150be45bafdff2bb379254247d", "committedDate": "2020-12-19T04:30:08Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15c83e2e7b8df790696b0fa7ca885f7379b522e2", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/15c83e2e7b8df790696b0fa7ca885f7379b522e2", "committedDate": "2020-12-19T04:38:23Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4a255f77b8760a73d26c3efca57ad95c76b8d53", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c4a255f77b8760a73d26c3efca57ad95c76b8d53", "committedDate": "2020-12-21T17:10:14Z", "message": "Merge branch 'develop' into k8seventstests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "697be1a9aaab5762c5b419a78ef8e5228bec71d5", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/697be1a9aaab5762c5b419a78ef8e5228bec71d5", "committedDate": "2020-12-21T22:14:21Z", "message": "cleanup javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b029290089ee206b20fd71ddcfc52d9ad2bd352", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8b029290089ee206b20fd71ddcfc52d9ad2bd352", "committedDate": "2020-12-21T23:01:33Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bbae2d95be33b03ddfee89e790162bd844cc573", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4bbae2d95be33b03ddfee89e790162bd844cc573", "committedDate": "2020-12-21T23:43:32Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12df03b1349af0b7acf2379da651bcd9884c6e56", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/12df03b1349af0b7acf2379da651bcd9884c6e56", "committedDate": "2020-12-21T23:49:10Z", "message": "restore imagebuilds"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MTc5ODU5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2115#pullrequestreview-558179859", "createdAt": "2020-12-23T19:04:35Z", "commit": {"oid": "12df03b1349af0b7acf2379da651bcd9884c6e56"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxOTowNDozNVrOIKwQNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxOTowNDozNVrOIKwQNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE0NzI1Mg==", "bodyText": "I'm concerned about having the integration test look for a specific message text. This seems too tightly coupled. What do others think? Would it be enough to have the test look for a reason code?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2115#discussion_r548147252", "createdAt": "2020-12-23T19:04:35Z", "author": {"login": "rjeberhard"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/K8sEvents.java", "diffHunk": "@@ -0,0 +1,145 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.utils;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.Callable;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import io.kubernetes.client.openapi.ApiException;\n+import io.kubernetes.client.openapi.models.V1Event;\n+import io.kubernetes.client.util.Yaml;\n+import oracle.weblogic.kubernetes.ItKubernetesEvents;\n+import oracle.weblogic.kubernetes.TestConstants;\n+import oracle.weblogic.kubernetes.actions.TestActions;\n+import oracle.weblogic.kubernetes.actions.impl.primitive.Kubernetes;\n+import oracle.weblogic.kubernetes.logging.LoggingFacade;\n+import org.joda.time.DateTime;\n+\n+import static oracle.weblogic.kubernetes.TestConstants.OPERATOR_RELEASE_NAME;\n+import static oracle.weblogic.kubernetes.utils.ThreadSafeLogger.getLogger;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * Helper class for Kubernetes Events checking.\n+ */\n+public class K8sEvents {\n+\n+  private static final LoggingFacade logger = getLogger();\n+\n+  /**\n+   * Check if a given event is logged by the operator.\n+   *\n+   * @param opNamespace namespace in which the operator is running\n+   * @param domainNamespace namespace in which the domain exists\n+   * @param domainUid UID of the domain\n+   * @param reason event to check for Created, Changed, deleted, processing etc\n+   * @param type type of event, Normal of Warning\n+   * @param timestamp the timestamp after which to see events\n+   */\n+  public static Callable<Boolean> checkDomainEvent(\n+      String opNamespace, String domainNamespace, String domainUid, String reason, String type, DateTime timestamp) {\n+    return () -> {\n+      logger.info(\"Verifying {0} event is logged by the operator in domain namespace {1}\", reason, domainNamespace);\n+      try {\n+        List<V1Event> events = Kubernetes.listNamespacedEvents(domainNamespace);\n+        for (V1Event event : events) {\n+          if (event.getReason().contains(reason)\n+              && event.getMetadata().getCreationTimestamp().isAfter(timestamp.getMillis())) {\n+            logger.info(Yaml.dump(event));\n+            verifyOperatorDetails(event, opNamespace, domainUid);\n+            //verify reason\n+            logger.info(\"Verifying domain event {0}\", reason);\n+            assertTrue(event.getReason().equals(reason));\n+            //verify messages\n+            logger.info(\"Verifying domain event message {0}\", getDomainEventMessage(reason, domainUid));\n+            assertTrue(event.getMessage().contains(getDomainEventMessage(reason, domainUid)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12df03b1349af0b7acf2379da651bcd9884c6e56"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MTc5OTUz", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2115#pullrequestreview-558179953", "createdAt": "2020-12-23T19:04:47Z", "commit": {"oid": "12df03b1349af0b7acf2379da651bcd9884c6e56"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxOTowNDo0N1rOIKwRZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxOTowNTozM1rOIKwUvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE0NzU1Ng==", "bodyText": "We need to test DomainProcessingFailed event as well.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2115#discussion_r548147556", "createdAt": "2020-12-23T19:04:47Z", "author": {"login": "doxiao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItKubernetesEvents.java", "diffHunk": "@@ -0,0 +1,385 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes;\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Properties;\n+\n+import io.kubernetes.client.custom.V1Patch;\n+import io.kubernetes.client.openapi.models.V1Container;\n+import io.kubernetes.client.openapi.models.V1EnvVar;\n+import io.kubernetes.client.openapi.models.V1LocalObjectReference;\n+import io.kubernetes.client.openapi.models.V1ObjectMeta;\n+import io.kubernetes.client.openapi.models.V1PersistentVolumeClaimVolumeSource;\n+import io.kubernetes.client.openapi.models.V1SecretReference;\n+import io.kubernetes.client.openapi.models.V1Volume;\n+import io.kubernetes.client.openapi.models.V1VolumeMount;\n+import oracle.weblogic.domain.AdminServer;\n+import oracle.weblogic.domain.AdminService;\n+import oracle.weblogic.domain.Channel;\n+import oracle.weblogic.domain.Cluster;\n+import oracle.weblogic.domain.Domain;\n+import oracle.weblogic.domain.DomainSpec;\n+import oracle.weblogic.domain.ServerPod;\n+import oracle.weblogic.kubernetes.annotations.IntegrationTest;\n+import oracle.weblogic.kubernetes.annotations.Namespaces;\n+import oracle.weblogic.kubernetes.logging.LoggingFacade;\n+import org.awaitility.core.ConditionFactory;\n+import org.joda.time.DateTime;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+import static java.util.concurrent.TimeUnit.MINUTES;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+import static oracle.weblogic.kubernetes.TestConstants.ADMIN_PASSWORD_DEFAULT;\n+import static oracle.weblogic.kubernetes.TestConstants.ADMIN_USERNAME_DEFAULT;\n+import static oracle.weblogic.kubernetes.TestConstants.BASE_IMAGES_REPO_SECRET;\n+import static oracle.weblogic.kubernetes.TestConstants.DOMAIN_API_VERSION;\n+import static oracle.weblogic.kubernetes.TestConstants.K8S_NODEPORT_HOST;\n+import static oracle.weblogic.kubernetes.TestConstants.WEBLOGIC_IMAGE_TO_USE_IN_SPEC;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.RESOURCE_DIR;\n+import static oracle.weblogic.kubernetes.actions.TestActions.deleteDomainCustomResource;\n+import static oracle.weblogic.kubernetes.actions.impl.Domain.patchDomainCustomResource;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.checkPodDoesNotExist;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.checkPodReadyAndServiceExists;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.createConfigMapForDomainCreation;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.createDomainAndVerify;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.createDomainJob;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.createPV;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.createPVC;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.createSecretForBaseImages;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.createSecretWithUsernamePassword;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.installAndVerifyOperator;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.setPodAntiAffinity;\n+import static oracle.weblogic.kubernetes.utils.K8sEvents.DOMAIN_CHANGED;\n+import static oracle.weblogic.kubernetes.utils.K8sEvents.DOMAIN_CREATED;\n+import static oracle.weblogic.kubernetes.utils.K8sEvents.DOMAIN_DELETED;\n+import static oracle.weblogic.kubernetes.utils.K8sEvents.DOMAIN_PROCESSING_ABORTED;\n+import static oracle.weblogic.kubernetes.utils.K8sEvents.DOMAIN_PROCESSING_COMPLETED;\n+import static oracle.weblogic.kubernetes.utils.K8sEvents.DOMAIN_PROCESSING_RETRYING;\n+import static oracle.weblogic.kubernetes.utils.K8sEvents.DOMAIN_PROCESSING_STARTING;\n+import static oracle.weblogic.kubernetes.utils.K8sEvents.checkDomainEvent;\n+import static oracle.weblogic.kubernetes.utils.ThreadSafeLogger.getLogger;\n+import static org.awaitility.Awaitility.with;\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * Tests related to Domain events logged by operator.\n+ */\n+@DisplayName(\"Verify the Kubernetes events for domain lifecycle\")\n+@IntegrationTest\n+public class ItKubernetesEvents {\n+\n+  private static String opNamespace = null;\n+  private static String domainNamespace = null;\n+\n+  final String clusterName = \"mycluster\";\n+  final String adminServerName = \"admin-server\";\n+  final String adminServerPodName = domainUid + \"-\" + adminServerName;\n+  final String managedServerNameBase = \"ms-\";\n+  String managedServerPodNamePrefix = domainUid + \"-\" + managedServerNameBase;\n+  final int managedServerPort = 8001;\n+  int replicaCount = 2;\n+\n+  private static final String domainUid = \"k8seventsdomain\";\n+  private final String wlSecretName = \"weblogic-credentials\";\n+\n+  // create standard, reusable retry/backoff policy\n+  private static final ConditionFactory withStandardRetryPolicy\n+      = with().pollDelay(2, SECONDS)\n+          .and().with().pollInterval(10, SECONDS)\n+          .atMost(10, MINUTES).await();\n+\n+  private static LoggingFacade logger = null;\n+\n+  /**\n+   * Assigns unique namespaces for operator and domains. Pull WebLogic image if running tests in Kind cluster. Installs\n+   * operator.\n+   *\n+   * @param namespaces injected by JUnit\n+   */\n+  @BeforeAll\n+  public static void initAll(@Namespaces(2) List<String> namespaces) {\n+    logger = getLogger();\n+    logger.info(\"Assign a unique namespace for operator\");\n+    assertNotNull(namespaces.get(0), \"Namespace is null\");\n+    opNamespace = namespaces.get(0);\n+    logger.info(\"Assign a unique namespace for WebLogic domain\");\n+    assertNotNull(namespaces.get(1), \"Namespace is null\");\n+    domainNamespace = namespaces.get(1);\n+\n+    // install operator and verify its running in ready state\n+    installAndVerifyOperator(opNamespace, domainNamespace);\n+    // create pull secrets for WebLogic image when running in non Kind Kubernetes cluster\n+    // this secret is used only for non-kind cluster\n+    createSecretForBaseImages(domainNamespace);\n+\n+  }\n+\n+  /**\n+   * Test domain events are logged when domain resource goes through various life cycle stages.\n+   * Verifies DomainCreated is logged when domain resource is created.\n+   * Verifies DomainProcessingStarting is logged when operator processes the domain resource.\n+   * Verifies DomainProcessingCompleted is logged when operator done processes the domain resource.\n+   * Verifies DomainChanged is logged when operator processes the domain resource changes.\n+   * Verifies DomainProcessingRetrying is logged when operator retries the failed domain resource changes.\n+   * Verifies DomainProcessingAborted is logged when operator exceeds the maximum retries.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12df03b1349af0b7acf2379da651bcd9884c6e56"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE0ODQxMg==", "bodyText": "The xxxx in the message needs to be replace with the real error message.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2115#discussion_r548148412", "createdAt": "2020-12-23T19:05:33Z", "author": {"login": "doxiao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/K8sEvents.java", "diffHunk": "@@ -0,0 +1,145 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.utils;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.Callable;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import io.kubernetes.client.openapi.ApiException;\n+import io.kubernetes.client.openapi.models.V1Event;\n+import io.kubernetes.client.util.Yaml;\n+import oracle.weblogic.kubernetes.ItKubernetesEvents;\n+import oracle.weblogic.kubernetes.TestConstants;\n+import oracle.weblogic.kubernetes.actions.TestActions;\n+import oracle.weblogic.kubernetes.actions.impl.primitive.Kubernetes;\n+import oracle.weblogic.kubernetes.logging.LoggingFacade;\n+import org.joda.time.DateTime;\n+\n+import static oracle.weblogic.kubernetes.TestConstants.OPERATOR_RELEASE_NAME;\n+import static oracle.weblogic.kubernetes.utils.ThreadSafeLogger.getLogger;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * Helper class for Kubernetes Events checking.\n+ */\n+public class K8sEvents {\n+\n+  private static final LoggingFacade logger = getLogger();\n+\n+  /**\n+   * Check if a given event is logged by the operator.\n+   *\n+   * @param opNamespace namespace in which the operator is running\n+   * @param domainNamespace namespace in which the domain exists\n+   * @param domainUid UID of the domain\n+   * @param reason event to check for Created, Changed, deleted, processing etc\n+   * @param type type of event, Normal of Warning\n+   * @param timestamp the timestamp after which to see events\n+   */\n+  public static Callable<Boolean> checkDomainEvent(\n+      String opNamespace, String domainNamespace, String domainUid, String reason, String type, DateTime timestamp) {\n+    return () -> {\n+      logger.info(\"Verifying {0} event is logged by the operator in domain namespace {1}\", reason, domainNamespace);\n+      try {\n+        List<V1Event> events = Kubernetes.listNamespacedEvents(domainNamespace);\n+        for (V1Event event : events) {\n+          if (event.getReason().contains(reason)\n+              && event.getMetadata().getCreationTimestamp().isAfter(timestamp.getMillis())) {\n+            logger.info(Yaml.dump(event));\n+            verifyOperatorDetails(event, opNamespace, domainUid);\n+            //verify reason\n+            logger.info(\"Verifying domain event {0}\", reason);\n+            assertTrue(event.getReason().equals(reason));\n+            //verify messages\n+            logger.info(\"Verifying domain event message {0}\", getDomainEventMessage(reason, domainUid));\n+            assertTrue(event.getMessage().contains(getDomainEventMessage(reason, domainUid)));\n+            //verify type\n+            logger.info(\"Verifying domain event type {0}\", type);\n+            assertTrue(event.getType().equals(type));\n+            return true;\n+          }\n+        }\n+      } catch (ApiException ex) {\n+        Logger.getLogger(ItKubernetesEvents.class.getName()).log(Level.SEVERE, null, ex);\n+      }\n+      return false;\n+    };\n+  }\n+\n+  // Verify the operator instance details are correct\n+  private static void verifyOperatorDetails(V1Event event, String opNamespace, String domainUid) throws ApiException {\n+    logger.info(\"Verifying operator details\");\n+    String operatorPodName = TestActions.getOperatorPodName(OPERATOR_RELEASE_NAME, opNamespace);\n+    //verify DOMAIN_API_VERSION\n+    assertTrue(event.getInvolvedObject().getApiVersion().equals(TestConstants.DOMAIN_API_VERSION),\n+        \"Expected \" + TestConstants.DOMAIN_API_VERSION + \" ,Got \" + event.getInvolvedObject().getApiVersion());\n+    //verify reporting component to be operator release\n+    assertTrue(event.getReportingComponent().equals(\"weblogic.operator\"),\n+        \"Didn't get reporting component as \" + \"weblogic.operator\");\n+    //verify reporting instance to be operator instance\n+    assertTrue(event.getReportingInstance().equals(operatorPodName),\n+        \"Didn't get reporting instance as \" + operatorPodName);\n+    //verify the event was created by operator\n+    Map<String, String> labels = event.getMetadata().getLabels();\n+    assertTrue(labels.containsKey(\"weblogic.createdByOperator\")\n+        && labels.get(\"weblogic.createdByOperator\").equals(\"true\"));\n+    //verify the domainUID matches\n+    assertTrue(labels.containsKey(\"weblogic.domainUID\")\n+        && labels.get(\"weblogic.domainUID\").equals(domainUid));\n+  }\n+\n+  /**\n+   * Returns the description for different event types.\n+   *\n+   * @param reason event to check for Created, Changed, deleted, processing etc\n+   * @param domainUid UID of the domain\n+   * @return String containing the complete description\n+   */\n+  public static String getDomainEventMessage(String reason, String domainUid) {\n+    String message = \"\";\n+    switch (reason) {\n+      case DOMAIN_CREATED:\n+        message = \"Domain resource \" + domainUid + \" was created\";\n+        break;\n+      case DOMAIN_DELETED:\n+        message = \"Domain resource \" + domainUid + \" was deleted\";\n+        break;\n+      case DOMAIN_CHANGED:\n+        message = \"Domain resource \" + domainUid + \" was changed\";\n+        break;\n+      case DOMAIN_PROCESSING_STARTING:\n+        message = \"Creating or updating Kubernetes presence for WebLogic Domain with UID \" + domainUid;\n+        break;\n+      case DOMAIN_PROCESSING_COMPLETED:\n+        message = \"Successfully completed processing domain resource \" + domainUid;\n+        break;\n+      case DOMAIN_PROCESSING_FAILED:\n+        message = \"Failed to process domain resource \" + domainUid\n+            + \" due to xxxx, the processing  will be retried if required\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12df03b1349af0b7acf2379da651bcd9884c6e56"}, "originalPosition": 122}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3d34566105f6da6dfd08704a3665612e3f741e3", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f3d34566105f6da6dfd08704a3665612e3f741e3", "committedDate": "2020-12-23T19:36:43Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into k8seventstests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdc4a1e11f22e86f8e4b5f1d83005eb310ac55f8", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/fdc4a1e11f22e86f8e4b5f1d83005eb310ac55f8", "committedDate": "2020-12-23T19:36:55Z", "message": "check error messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ee73cf363635a3424df44b92e32e24cf65cf78a", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8ee73cf363635a3424df44b92e32e24cf65cf78a", "committedDate": "2020-12-23T20:32:15Z", "message": "revert message checking"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MjIzOTUy", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2115#pullrequestreview-558223952", "createdAt": "2020-12-23T20:53:17Z", "commit": {"oid": "8ee73cf363635a3424df44b92e32e24cf65cf78a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMDo1MzoxN1rOIK1MZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMDo1MzoxN1rOIK1MZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIyODE5Ng==", "bodyText": "now that we don't check event messages anymore, do we still need this method?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2115#discussion_r548228196", "createdAt": "2020-12-23T20:53:17Z", "author": {"login": "doxiao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/K8sEvents.java", "diffHunk": "@@ -0,0 +1,142 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.utils;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.Callable;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import io.kubernetes.client.openapi.ApiException;\n+import io.kubernetes.client.openapi.models.V1Event;\n+import io.kubernetes.client.util.Yaml;\n+import oracle.weblogic.kubernetes.ItKubernetesEvents;\n+import oracle.weblogic.kubernetes.TestConstants;\n+import oracle.weblogic.kubernetes.actions.TestActions;\n+import oracle.weblogic.kubernetes.actions.impl.primitive.Kubernetes;\n+import oracle.weblogic.kubernetes.logging.LoggingFacade;\n+import org.joda.time.DateTime;\n+\n+import static oracle.weblogic.kubernetes.TestConstants.OPERATOR_RELEASE_NAME;\n+import static oracle.weblogic.kubernetes.utils.ThreadSafeLogger.getLogger;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * Helper class for Kubernetes Events checking.\n+ */\n+public class K8sEvents {\n+\n+  private static final LoggingFacade logger = getLogger();\n+\n+  /**\n+   * Check if a given event is logged by the operator.\n+   *\n+   * @param opNamespace namespace in which the operator is running\n+   * @param domainNamespace namespace in which the domain exists\n+   * @param domainUid UID of the domain\n+   * @param reason event to check for Created, Changed, deleted, processing etc\n+   * @param type type of event, Normal of Warning\n+   * @param timestamp the timestamp after which to see events\n+   */\n+  public static Callable<Boolean> checkDomainEvent(\n+      String opNamespace, String domainNamespace, String domainUid, String reason, String type, DateTime timestamp) {\n+    return () -> {\n+      logger.info(\"Verifying {0} event is logged by the operator in domain namespace {1}\", reason, domainNamespace);\n+      try {\n+        List<V1Event> events = Kubernetes.listNamespacedEvents(domainNamespace);\n+        for (V1Event event : events) {\n+          if (event.getReason().contains(reason)\n+              && event.getMetadata().getCreationTimestamp().isAfter(timestamp.getMillis())) {\n+            logger.info(Yaml.dump(event));\n+            verifyOperatorDetails(event, opNamespace, domainUid);\n+            //verify reason\n+            logger.info(\"Verifying domain event {0}\", reason);\n+            assertTrue(event.getReason().equals(reason));\n+            //verify type\n+            logger.info(\"Verifying domain event type {0}\", type);\n+            assertTrue(event.getType().equals(type));\n+            return true;\n+          }\n+        }\n+      } catch (ApiException ex) {\n+        Logger.getLogger(ItKubernetesEvents.class.getName()).log(Level.SEVERE, null, ex);\n+      }\n+      return false;\n+    };\n+  }\n+\n+  // Verify the operator instance details are correct\n+  private static void verifyOperatorDetails(V1Event event, String opNamespace, String domainUid) throws ApiException {\n+    logger.info(\"Verifying operator details\");\n+    String operatorPodName = TestActions.getOperatorPodName(OPERATOR_RELEASE_NAME, opNamespace);\n+    //verify DOMAIN_API_VERSION\n+    assertTrue(event.getInvolvedObject().getApiVersion().equals(TestConstants.DOMAIN_API_VERSION),\n+        \"Expected \" + TestConstants.DOMAIN_API_VERSION + \" ,Got \" + event.getInvolvedObject().getApiVersion());\n+    //verify reporting component to be operator release\n+    assertTrue(event.getReportingComponent().equals(\"weblogic.operator\"),\n+        \"Didn't get reporting component as \" + \"weblogic.operator\");\n+    //verify reporting instance to be operator instance\n+    assertTrue(event.getReportingInstance().equals(operatorPodName),\n+        \"Didn't get reporting instance as \" + operatorPodName);\n+    //verify the event was created by operator\n+    Map<String, String> labels = event.getMetadata().getLabels();\n+    assertTrue(labels.containsKey(\"weblogic.createdByOperator\")\n+        && labels.get(\"weblogic.createdByOperator\").equals(\"true\"));\n+    //verify the domainUID matches\n+    assertTrue(labels.containsKey(\"weblogic.domainUID\")\n+        && labels.get(\"weblogic.domainUID\").equals(domainUid));\n+  }\n+\n+  /**\n+   * Returns the description for different event types.\n+   *\n+   * @param reason event to check for Created, Changed, deleted, processing etc\n+   * @param domainUid UID of the domain\n+   * @return String containing the complete description\n+   */\n+  public static String getDomainEventMessage(String reason, String domainUid) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ee73cf363635a3424df44b92e32e24cf65cf78a"}, "originalPosition": 99}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02443ba0112fd4476800e980fcccaf660078d952", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/02443ba0112fd4476800e980fcccaf660078d952", "committedDate": "2020-12-23T21:19:02Z", "message": "remove message checking"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MjQyMDk0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2115#pullrequestreview-558242094", "createdAt": "2020-12-23T21:46:46Z", "commit": {"oid": "02443ba0112fd4476800e980fcccaf660078d952"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MjQ4MDA1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2115#pullrequestreview-558248005", "createdAt": "2020-12-23T22:05:56Z", "commit": {"oid": "02443ba0112fd4476800e980fcccaf660078d952"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4015, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}