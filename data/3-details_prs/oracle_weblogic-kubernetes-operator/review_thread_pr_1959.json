{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MTMzMTQx", "number": 1959, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMjoxOTowNVrOEoxyLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMjoyNDoyM1rOEox3yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTk0MTU3OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMjoxOTowNVrOHaELrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjo1MzoyNlrOHamwIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5MzU0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Verify the admin server is accessible and cluster member is healthy\n          \n          \n            \n               * Verify the admin server is accessible and cluster members are healthy", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1959#discussion_r497093548", "createdAt": "2020-09-29T22:19:05Z", "author": {"login": "sankarpn"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -848,6 +858,83 @@ public void testCreateNewCluster() {\n \n   }\n \n+  /**\n+   * Modify the domain scope property\n+   * From: \"image: container-registry.oracle.com/middleware/weblogic:12.2.1.4\" to\n+   * To: \"image: container-registry.oracle.com/middleware/weblogic:14.1.1.0-11\"\n+   * Verify all the pods are restarted and back to ready state\n+   * Verify the admin server is accessible and cluster member is healthy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53cc9efc8d0c916c3de450986e0971f3e8d5b570"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY1OTkzNg==", "bodyText": "Done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1959#discussion_r497659936", "createdAt": "2020-09-30T16:53:26Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -848,6 +858,83 @@ public void testCreateNewCluster() {\n \n   }\n \n+  /**\n+   * Modify the domain scope property\n+   * From: \"image: container-registry.oracle.com/middleware/weblogic:12.2.1.4\" to\n+   * To: \"image: container-registry.oracle.com/middleware/weblogic:14.1.1.0-11\"\n+   * Verify all the pods are restarted and back to ready state\n+   * Verify the admin server is accessible and cluster member is healthy", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5MzU0OA=="}, "originalCommit": {"oid": "53cc9efc8d0c916c3de450986e0971f3e8d5b570"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTk0NTM5OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMjoyMDoyNFrOHaEN0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjo1Mzo0MlrOHamwyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5NDA5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertNotNull(domain1.getSpec(), domain1 + \"/spec is null\");\n          \n          \n            \n                assertNotNull(domain1.getSpec(), domain1 + \" /spec is null\");", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1959#discussion_r497094097", "createdAt": "2020-09-29T22:20:24Z", "author": {"login": "sankarpn"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -848,6 +858,83 @@ public void testCreateNewCluster() {\n \n   }\n \n+  /**\n+   * Modify the domain scope property\n+   * From: \"image: container-registry.oracle.com/middleware/weblogic:12.2.1.4\" to\n+   * To: \"image: container-registry.oracle.com/middleware/weblogic:14.1.1.0-11\"\n+   * Verify all the pods are restarted and back to ready state\n+   * Verify the admin server is accessible and cluster member is healthy\n+   */\n+  @Order(5)\n+  @Test\n+  @DisplayName(\"Verify server pods are restarted by updating image name\")\n+  @Slow\n+  public void testUpdateImageName() {\n+\n+    final String domainNamespace = introDomainNamespace;\n+\n+    final String adminServerName = \"admin-server\";\n+    final String adminServerPodName = domainUid + \"-\" + adminServerName;\n+    final String managedServerNameBase = \"cl2-ms-\";\n+    String managedServerPodNamePrefix = domainUid + \"-\" + managedServerNameBase;\n+\n+    final int replicaCount = 2;\n+\n+    List<String> managedServerNames = new ArrayList<String>();\n+    for (int i = 1; i <= replicaCount; i++) {\n+      managedServerNames.add(managedServerNameBase + i);\n+    }\n+\n+    // get the original domain resource before update\n+    Domain domain1 = assertDoesNotThrow(() -> getDomainCustomResource(domainUid, domainNamespace),\n+        String.format(\"getDomainCustomResource failed with ApiException when tried to get domain %s in namespace %s\",\n+            domainUid, domainNamespace));\n+    assertNotNull(domain1, \"Got null domain resource\");\n+    assertNotNull(domain1.getSpec(), domain1 + \"/spec is null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53cc9efc8d0c916c3de450986e0971f3e8d5b570"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY2MDEwNg==", "bodyText": "Done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1959#discussion_r497660106", "createdAt": "2020-09-30T16:53:42Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -848,6 +858,83 @@ public void testCreateNewCluster() {\n \n   }\n \n+  /**\n+   * Modify the domain scope property\n+   * From: \"image: container-registry.oracle.com/middleware/weblogic:12.2.1.4\" to\n+   * To: \"image: container-registry.oracle.com/middleware/weblogic:14.1.1.0-11\"\n+   * Verify all the pods are restarted and back to ready state\n+   * Verify the admin server is accessible and cluster member is healthy\n+   */\n+  @Order(5)\n+  @Test\n+  @DisplayName(\"Verify server pods are restarted by updating image name\")\n+  @Slow\n+  public void testUpdateImageName() {\n+\n+    final String domainNamespace = introDomainNamespace;\n+\n+    final String adminServerName = \"admin-server\";\n+    final String adminServerPodName = domainUid + \"-\" + adminServerName;\n+    final String managedServerNameBase = \"cl2-ms-\";\n+    String managedServerPodNamePrefix = domainUid + \"-\" + managedServerNameBase;\n+\n+    final int replicaCount = 2;\n+\n+    List<String> managedServerNames = new ArrayList<String>();\n+    for (int i = 1; i <= replicaCount; i++) {\n+      managedServerNames.add(managedServerNameBase + i);\n+    }\n+\n+    // get the original domain resource before update\n+    Domain domain1 = assertDoesNotThrow(() -> getDomainCustomResource(domainUid, domainNamespace),\n+        String.format(\"getDomainCustomResource failed with ApiException when tried to get domain %s in namespace %s\",\n+            domainUid, domainNamespace));\n+    assertNotNull(domain1, \"Got null domain resource\");\n+    assertNotNull(domain1.getSpec(), domain1 + \"/spec is null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5NDA5Nw=="}, "originalCommit": {"oid": "53cc9efc8d0c916c3de450986e0971f3e8d5b570"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTk0Nzk0OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMjoyMToxNVrOHaEPPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjo1NDoxNVrOHamyHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5NDQ2Mg==", "bodyText": "Remove this tag @slow. It is not being used", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1959#discussion_r497094462", "createdAt": "2020-09-29T22:21:15Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -848,6 +858,83 @@ public void testCreateNewCluster() {\n \n   }\n \n+  /**\n+   * Modify the domain scope property\n+   * From: \"image: container-registry.oracle.com/middleware/weblogic:12.2.1.4\" to\n+   * To: \"image: container-registry.oracle.com/middleware/weblogic:14.1.1.0-11\"\n+   * Verify all the pods are restarted and back to ready state\n+   * Verify the admin server is accessible and cluster member is healthy\n+   */\n+  @Order(5)\n+  @Test\n+  @DisplayName(\"Verify server pods are restarted by updating image name\")\n+  @Slow", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53cc9efc8d0c916c3de450986e0971f3e8d5b570"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY2MDQ0NA==", "bodyText": "Done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1959#discussion_r497660444", "createdAt": "2020-09-30T16:54:15Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -848,6 +858,83 @@ public void testCreateNewCluster() {\n \n   }\n \n+  /**\n+   * Modify the domain scope property\n+   * From: \"image: container-registry.oracle.com/middleware/weblogic:12.2.1.4\" to\n+   * To: \"image: container-registry.oracle.com/middleware/weblogic:14.1.1.0-11\"\n+   * Verify all the pods are restarted and back to ready state\n+   * Verify the admin server is accessible and cluster member is healthy\n+   */\n+  @Order(5)\n+  @Test\n+  @DisplayName(\"Verify server pods are restarted by updating image name\")\n+  @Slow", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5NDQ2Mg=="}, "originalCommit": {"oid": "53cc9efc8d0c916c3de450986e0971f3e8d5b570"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTk0Nzk5OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMjoyMToxNVrOHaEPRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjo1Mzo1MFrOHamxJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5NDQ2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                logger.info(\"Original domain image name is: {0}\", imageName);\n          \n          \n            \n                logger.info(\"Currently used domain image name is: {0}\", imageName);", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1959#discussion_r497094469", "createdAt": "2020-09-29T22:21:15Z", "author": {"login": "sankarpn"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -848,6 +858,83 @@ public void testCreateNewCluster() {\n \n   }\n \n+  /**\n+   * Modify the domain scope property\n+   * From: \"image: container-registry.oracle.com/middleware/weblogic:12.2.1.4\" to\n+   * To: \"image: container-registry.oracle.com/middleware/weblogic:14.1.1.0-11\"\n+   * Verify all the pods are restarted and back to ready state\n+   * Verify the admin server is accessible and cluster member is healthy\n+   */\n+  @Order(5)\n+  @Test\n+  @DisplayName(\"Verify server pods are restarted by updating image name\")\n+  @Slow\n+  public void testUpdateImageName() {\n+\n+    final String domainNamespace = introDomainNamespace;\n+\n+    final String adminServerName = \"admin-server\";\n+    final String adminServerPodName = domainUid + \"-\" + adminServerName;\n+    final String managedServerNameBase = \"cl2-ms-\";\n+    String managedServerPodNamePrefix = domainUid + \"-\" + managedServerNameBase;\n+\n+    final int replicaCount = 2;\n+\n+    List<String> managedServerNames = new ArrayList<String>();\n+    for (int i = 1; i <= replicaCount; i++) {\n+      managedServerNames.add(managedServerNameBase + i);\n+    }\n+\n+    // get the original domain resource before update\n+    Domain domain1 = assertDoesNotThrow(() -> getDomainCustomResource(domainUid, domainNamespace),\n+        String.format(\"getDomainCustomResource failed with ApiException when tried to get domain %s in namespace %s\",\n+            domainUid, domainNamespace));\n+    assertNotNull(domain1, \"Got null domain resource\");\n+    assertNotNull(domain1.getSpec(), domain1 + \"/spec is null\");\n+\n+    // get the map with server pods and their original creation timestamps\n+    podsWithTimeStamps = getPodsWithTimeStamps(domainNamespace, adminServerPodName, managedServerPodNamePrefix,\n+        replicaCount);\n+\n+    //print out the original image name\n+    String imageName = domain1.getSpec().getImage();\n+    logger.info(\"Original domain image name is: {0}\", imageName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53cc9efc8d0c916c3de450986e0971f3e8d5b570"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY2MDE5OQ==", "bodyText": "Done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1959#discussion_r497660199", "createdAt": "2020-09-30T16:53:50Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -848,6 +858,83 @@ public void testCreateNewCluster() {\n \n   }\n \n+  /**\n+   * Modify the domain scope property\n+   * From: \"image: container-registry.oracle.com/middleware/weblogic:12.2.1.4\" to\n+   * To: \"image: container-registry.oracle.com/middleware/weblogic:14.1.1.0-11\"\n+   * Verify all the pods are restarted and back to ready state\n+   * Verify the admin server is accessible and cluster member is healthy\n+   */\n+  @Order(5)\n+  @Test\n+  @DisplayName(\"Verify server pods are restarted by updating image name\")\n+  @Slow\n+  public void testUpdateImageName() {\n+\n+    final String domainNamespace = introDomainNamespace;\n+\n+    final String adminServerName = \"admin-server\";\n+    final String adminServerPodName = domainUid + \"-\" + adminServerName;\n+    final String managedServerNameBase = \"cl2-ms-\";\n+    String managedServerPodNamePrefix = domainUid + \"-\" + managedServerNameBase;\n+\n+    final int replicaCount = 2;\n+\n+    List<String> managedServerNames = new ArrayList<String>();\n+    for (int i = 1; i <= replicaCount; i++) {\n+      managedServerNames.add(managedServerNameBase + i);\n+    }\n+\n+    // get the original domain resource before update\n+    Domain domain1 = assertDoesNotThrow(() -> getDomainCustomResource(domainUid, domainNamespace),\n+        String.format(\"getDomainCustomResource failed with ApiException when tried to get domain %s in namespace %s\",\n+            domainUid, domainNamespace));\n+    assertNotNull(domain1, \"Got null domain resource\");\n+    assertNotNull(domain1.getSpec(), domain1 + \"/spec is null\");\n+\n+    // get the map with server pods and their original creation timestamps\n+    podsWithTimeStamps = getPodsWithTimeStamps(domainNamespace, adminServerPodName, managedServerPodNamePrefix,\n+        replicaCount);\n+\n+    //print out the original image name\n+    String imageName = domain1.getSpec().getImage();\n+    logger.info(\"Original domain image name is: {0}\", imageName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5NDQ2OQ=="}, "originalCommit": {"oid": "53cc9efc8d0c916c3de450986e0971f3e8d5b570"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTk1MDc5OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMjoyMjoyNVrOHaEQ5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjo1Mzo1N1rOHamxdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5NDg4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertTrue(cmPatched, \"patchDomainCustomResource(imageUpdate) failed\");\n          \n          \n            \n                assertTrue(patchDomainResource(domainUid, domainNamespace, patchStr), \"patchDomainCustomResource(imageUpdate) failed\");", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1959#discussion_r497094884", "createdAt": "2020-09-29T22:22:25Z", "author": {"login": "sankarpn"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -848,6 +858,83 @@ public void testCreateNewCluster() {\n \n   }\n \n+  /**\n+   * Modify the domain scope property\n+   * From: \"image: container-registry.oracle.com/middleware/weblogic:12.2.1.4\" to\n+   * To: \"image: container-registry.oracle.com/middleware/weblogic:14.1.1.0-11\"\n+   * Verify all the pods are restarted and back to ready state\n+   * Verify the admin server is accessible and cluster member is healthy\n+   */\n+  @Order(5)\n+  @Test\n+  @DisplayName(\"Verify server pods are restarted by updating image name\")\n+  @Slow\n+  public void testUpdateImageName() {\n+\n+    final String domainNamespace = introDomainNamespace;\n+\n+    final String adminServerName = \"admin-server\";\n+    final String adminServerPodName = domainUid + \"-\" + adminServerName;\n+    final String managedServerNameBase = \"cl2-ms-\";\n+    String managedServerPodNamePrefix = domainUid + \"-\" + managedServerNameBase;\n+\n+    final int replicaCount = 2;\n+\n+    List<String> managedServerNames = new ArrayList<String>();\n+    for (int i = 1; i <= replicaCount; i++) {\n+      managedServerNames.add(managedServerNameBase + i);\n+    }\n+\n+    // get the original domain resource before update\n+    Domain domain1 = assertDoesNotThrow(() -> getDomainCustomResource(domainUid, domainNamespace),\n+        String.format(\"getDomainCustomResource failed with ApiException when tried to get domain %s in namespace %s\",\n+            domainUid, domainNamespace));\n+    assertNotNull(domain1, \"Got null domain resource\");\n+    assertNotNull(domain1.getSpec(), domain1 + \"/spec is null\");\n+\n+    // get the map with server pods and their original creation timestamps\n+    podsWithTimeStamps = getPodsWithTimeStamps(domainNamespace, adminServerPodName, managedServerPodNamePrefix,\n+        replicaCount);\n+\n+    //print out the original image name\n+    String imageName = domain1.getSpec().getImage();\n+    logger.info(\"Original domain image name is: {0}\", imageName);\n+\n+    //change image name to imageUpdate\n+    StringBuffer patchStr = null;\n+    patchStr = new StringBuffer(\"[{\");\n+    patchStr.append(\"\\\"op\\\": \\\"replace\\\",\")\n+        .append(\" \\\"path\\\": \\\"/spec/image\\\",\")\n+        .append(\"\\\"value\\\": \\\"\")\n+        .append(imageUpdate)\n+        .append(\"\\\"}]\");\n+    logger.info(\"PatchStr for imageUpdate: {0}\", patchStr.toString());\n+\n+    boolean cmPatched = patchDomainResource(domainUid, domainNamespace, patchStr);\n+    assertTrue(cmPatched, \"patchDomainCustomResource(imageUpdate) failed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53cc9efc8d0c916c3de450986e0971f3e8d5b570"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY2MDI3Ng==", "bodyText": "Done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1959#discussion_r497660276", "createdAt": "2020-09-30T16:53:57Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -848,6 +858,83 @@ public void testCreateNewCluster() {\n \n   }\n \n+  /**\n+   * Modify the domain scope property\n+   * From: \"image: container-registry.oracle.com/middleware/weblogic:12.2.1.4\" to\n+   * To: \"image: container-registry.oracle.com/middleware/weblogic:14.1.1.0-11\"\n+   * Verify all the pods are restarted and back to ready state\n+   * Verify the admin server is accessible and cluster member is healthy\n+   */\n+  @Order(5)\n+  @Test\n+  @DisplayName(\"Verify server pods are restarted by updating image name\")\n+  @Slow\n+  public void testUpdateImageName() {\n+\n+    final String domainNamespace = introDomainNamespace;\n+\n+    final String adminServerName = \"admin-server\";\n+    final String adminServerPodName = domainUid + \"-\" + adminServerName;\n+    final String managedServerNameBase = \"cl2-ms-\";\n+    String managedServerPodNamePrefix = domainUid + \"-\" + managedServerNameBase;\n+\n+    final int replicaCount = 2;\n+\n+    List<String> managedServerNames = new ArrayList<String>();\n+    for (int i = 1; i <= replicaCount; i++) {\n+      managedServerNames.add(managedServerNameBase + i);\n+    }\n+\n+    // get the original domain resource before update\n+    Domain domain1 = assertDoesNotThrow(() -> getDomainCustomResource(domainUid, domainNamespace),\n+        String.format(\"getDomainCustomResource failed with ApiException when tried to get domain %s in namespace %s\",\n+            domainUid, domainNamespace));\n+    assertNotNull(domain1, \"Got null domain resource\");\n+    assertNotNull(domain1.getSpec(), domain1 + \"/spec is null\");\n+\n+    // get the map with server pods and their original creation timestamps\n+    podsWithTimeStamps = getPodsWithTimeStamps(domainNamespace, adminServerPodName, managedServerPodNamePrefix,\n+        replicaCount);\n+\n+    //print out the original image name\n+    String imageName = domain1.getSpec().getImage();\n+    logger.info(\"Original domain image name is: {0}\", imageName);\n+\n+    //change image name to imageUpdate\n+    StringBuffer patchStr = null;\n+    patchStr = new StringBuffer(\"[{\");\n+    patchStr.append(\"\\\"op\\\": \\\"replace\\\",\")\n+        .append(\" \\\"path\\\": \\\"/spec/image\\\",\")\n+        .append(\"\\\"value\\\": \\\"\")\n+        .append(imageUpdate)\n+        .append(\"\\\"}]\");\n+    logger.info(\"PatchStr for imageUpdate: {0}\", patchStr.toString());\n+\n+    boolean cmPatched = patchDomainResource(domainUid, domainNamespace, patchStr);\n+    assertTrue(cmPatched, \"patchDomainCustomResource(imageUpdate) failed\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5NDg4NA=="}, "originalCommit": {"oid": "53cc9efc8d0c916c3de450986e0971f3e8d5b570"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTk1MTc3OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMjoyMjo0OVrOHaERfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjo1NDowN1rOHamxzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5NTAzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertNotNull(domain1.getSpec(), domain1 + \"/spec is null\");\n          \n          \n            \n                assertNotNull(domain1.getSpec(), domain1 + \" /spec is null\");", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1959#discussion_r497095037", "createdAt": "2020-09-29T22:22:49Z", "author": {"login": "sankarpn"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -848,6 +858,83 @@ public void testCreateNewCluster() {\n \n   }\n \n+  /**\n+   * Modify the domain scope property\n+   * From: \"image: container-registry.oracle.com/middleware/weblogic:12.2.1.4\" to\n+   * To: \"image: container-registry.oracle.com/middleware/weblogic:14.1.1.0-11\"\n+   * Verify all the pods are restarted and back to ready state\n+   * Verify the admin server is accessible and cluster member is healthy\n+   */\n+  @Order(5)\n+  @Test\n+  @DisplayName(\"Verify server pods are restarted by updating image name\")\n+  @Slow\n+  public void testUpdateImageName() {\n+\n+    final String domainNamespace = introDomainNamespace;\n+\n+    final String adminServerName = \"admin-server\";\n+    final String adminServerPodName = domainUid + \"-\" + adminServerName;\n+    final String managedServerNameBase = \"cl2-ms-\";\n+    String managedServerPodNamePrefix = domainUid + \"-\" + managedServerNameBase;\n+\n+    final int replicaCount = 2;\n+\n+    List<String> managedServerNames = new ArrayList<String>();\n+    for (int i = 1; i <= replicaCount; i++) {\n+      managedServerNames.add(managedServerNameBase + i);\n+    }\n+\n+    // get the original domain resource before update\n+    Domain domain1 = assertDoesNotThrow(() -> getDomainCustomResource(domainUid, domainNamespace),\n+        String.format(\"getDomainCustomResource failed with ApiException when tried to get domain %s in namespace %s\",\n+            domainUid, domainNamespace));\n+    assertNotNull(domain1, \"Got null domain resource\");\n+    assertNotNull(domain1.getSpec(), domain1 + \"/spec is null\");\n+\n+    // get the map with server pods and their original creation timestamps\n+    podsWithTimeStamps = getPodsWithTimeStamps(domainNamespace, adminServerPodName, managedServerPodNamePrefix,\n+        replicaCount);\n+\n+    //print out the original image name\n+    String imageName = domain1.getSpec().getImage();\n+    logger.info(\"Original domain image name is: {0}\", imageName);\n+\n+    //change image name to imageUpdate\n+    StringBuffer patchStr = null;\n+    patchStr = new StringBuffer(\"[{\");\n+    patchStr.append(\"\\\"op\\\": \\\"replace\\\",\")\n+        .append(\" \\\"path\\\": \\\"/spec/image\\\",\")\n+        .append(\"\\\"value\\\": \\\"\")\n+        .append(imageUpdate)\n+        .append(\"\\\"}]\");\n+    logger.info(\"PatchStr for imageUpdate: {0}\", patchStr.toString());\n+\n+    boolean cmPatched = patchDomainResource(domainUid, domainNamespace, patchStr);\n+    assertTrue(cmPatched, \"patchDomainCustomResource(imageUpdate) failed\");\n+\n+    domain1 = assertDoesNotThrow(() -> getDomainCustomResource(domainUid, domainNamespace),\n+        String.format(\"getDomainCustomResource failed with ApiException when tried to get domain %s in namespace %s\",\n+            domainUid, domainNamespace));\n+    assertNotNull(domain1, \"Got null domain resource after patching\");\n+    assertNotNull(domain1.getSpec(), domain1 + \"/spec is null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53cc9efc8d0c916c3de450986e0971f3e8d5b570"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY2MDM2Nw==", "bodyText": "Done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1959#discussion_r497660367", "createdAt": "2020-09-30T16:54:07Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -848,6 +858,83 @@ public void testCreateNewCluster() {\n \n   }\n \n+  /**\n+   * Modify the domain scope property\n+   * From: \"image: container-registry.oracle.com/middleware/weblogic:12.2.1.4\" to\n+   * To: \"image: container-registry.oracle.com/middleware/weblogic:14.1.1.0-11\"\n+   * Verify all the pods are restarted and back to ready state\n+   * Verify the admin server is accessible and cluster member is healthy\n+   */\n+  @Order(5)\n+  @Test\n+  @DisplayName(\"Verify server pods are restarted by updating image name\")\n+  @Slow\n+  public void testUpdateImageName() {\n+\n+    final String domainNamespace = introDomainNamespace;\n+\n+    final String adminServerName = \"admin-server\";\n+    final String adminServerPodName = domainUid + \"-\" + adminServerName;\n+    final String managedServerNameBase = \"cl2-ms-\";\n+    String managedServerPodNamePrefix = domainUid + \"-\" + managedServerNameBase;\n+\n+    final int replicaCount = 2;\n+\n+    List<String> managedServerNames = new ArrayList<String>();\n+    for (int i = 1; i <= replicaCount; i++) {\n+      managedServerNames.add(managedServerNameBase + i);\n+    }\n+\n+    // get the original domain resource before update\n+    Domain domain1 = assertDoesNotThrow(() -> getDomainCustomResource(domainUid, domainNamespace),\n+        String.format(\"getDomainCustomResource failed with ApiException when tried to get domain %s in namespace %s\",\n+            domainUid, domainNamespace));\n+    assertNotNull(domain1, \"Got null domain resource\");\n+    assertNotNull(domain1.getSpec(), domain1 + \"/spec is null\");\n+\n+    // get the map with server pods and their original creation timestamps\n+    podsWithTimeStamps = getPodsWithTimeStamps(domainNamespace, adminServerPodName, managedServerPodNamePrefix,\n+        replicaCount);\n+\n+    //print out the original image name\n+    String imageName = domain1.getSpec().getImage();\n+    logger.info(\"Original domain image name is: {0}\", imageName);\n+\n+    //change image name to imageUpdate\n+    StringBuffer patchStr = null;\n+    patchStr = new StringBuffer(\"[{\");\n+    patchStr.append(\"\\\"op\\\": \\\"replace\\\",\")\n+        .append(\" \\\"path\\\": \\\"/spec/image\\\",\")\n+        .append(\"\\\"value\\\": \\\"\")\n+        .append(imageUpdate)\n+        .append(\"\\\"}]\");\n+    logger.info(\"PatchStr for imageUpdate: {0}\", patchStr.toString());\n+\n+    boolean cmPatched = patchDomainResource(domainUid, domainNamespace, patchStr);\n+    assertTrue(cmPatched, \"patchDomainCustomResource(imageUpdate) failed\");\n+\n+    domain1 = assertDoesNotThrow(() -> getDomainCustomResource(domainUid, domainNamespace),\n+        String.format(\"getDomainCustomResource failed with ApiException when tried to get domain %s in namespace %s\",\n+            domainUid, domainNamespace));\n+    assertNotNull(domain1, \"Got null domain resource after patching\");\n+    assertNotNull(domain1.getSpec(), domain1 + \"/spec is null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5NTAzNw=="}, "originalCommit": {"oid": "53cc9efc8d0c916c3de450986e0971f3e8d5b570"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTk1NTk0OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMjoyNDoyM1rOHaET4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjo1NDoyMlrOHamyYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5NTY1MA==", "bodyText": "Can it be moved to utility class. This is being used in many tests when we verify a domain restart.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1959#discussion_r497095650", "createdAt": "2020-09-29T22:24:23Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -944,6 +1031,26 @@ private static void verifyMemberHealth(String adminServerPodName, List<String> m\n         });\n   }\n \n+  private Map getPodsWithTimeStamps(String domainNamespace, String adminServerPodName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53cc9efc8d0c916c3de450986e0971f3e8d5b570"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY2MDUxNA==", "bodyText": "Done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1959#discussion_r497660514", "createdAt": "2020-09-30T16:54:22Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -944,6 +1031,26 @@ private static void verifyMemberHealth(String adminServerPodName, List<String> m\n         });\n   }\n \n+  private Map getPodsWithTimeStamps(String domainNamespace, String adminServerPodName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA5NTY1MA=="}, "originalCommit": {"oid": "53cc9efc8d0c916c3de450986e0971f3e8d5b570"}, "originalPosition": 143}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4025, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}