{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyOTAzMzk4", "number": 1988, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMjoyNDowNFrOEtSiUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMjoyNToyN1rOEtSjUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTI1MDczOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMjoyNDowNFrOHg_yyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMjoyNDowNFrOHg_yyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM2MTY3NA==", "bodyText": "Use the method checkPodReadyAndServiceExists(adminServerPodName, domainUid, domainNamespace)\nto combine  checkServiceExists() and checkPodReady()", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1988#discussion_r504361674", "createdAt": "2020-10-14T02:24:04Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -906,6 +906,26 @@ public void testUpdateImageName() {\n     assertTrue(verifyRollingRestartOccurred(podsWithTimeStamps, 1, domainNamespace),\n         String.format(\"Rolling restart failed for domain %s in namespace %s\", domainUid, domainNamespace));\n \n+    // verify the admin server service created\n+    checkServiceExists(adminServerPodName, domainNamespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "393a85048f74b7daab4a384aa202a1d9c8558631"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTI1MzMwOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMjoyNToyN1rOHg_0Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMjoyNToyN1rOHg_0Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM2MjA0Ng==", "bodyText": "Use the method checkPodReadyAndServiceExists()  to combine checkServiceExists() and checkPodReady()", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1988#discussion_r504362046", "createdAt": "2020-10-14T02:25:27Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -906,6 +906,26 @@ public void testUpdateImageName() {\n     assertTrue(verifyRollingRestartOccurred(podsWithTimeStamps, 1, domainNamespace),\n         String.format(\"Rolling restart failed for domain %s in namespace %s\", domainUid, domainNamespace));\n \n+    // verify the admin server service created\n+    checkServiceExists(adminServerPodName, domainNamespace);\n+\n+    // verify admin server pod is ready\n+    checkPodReady(adminServerPodName, domainUid, domainNamespace);\n+\n+    // verify new cluster managed server services created\n+    for (int i = 1; i <= replicaCount; i++) {\n+      logger.info(\"Checking managed server service {0} is created in namespace {1}\",\n+          managedServerPodNamePrefix + i, domainNamespace);\n+      checkServiceExists(managedServerPodNamePrefix + i, domainNamespace);\n+    }\n+\n+    // verify cluster managed server pods are ready\n+    for (int i = 1; i <= replicaCount; i++) {\n+      logger.info(\"Waiting for managed server pod {0} to be ready in namespace {1}\",\n+          managedServerPodNamePrefix + i, domainNamespace);\n+      checkPodReady(managedServerPodNamePrefix + i, domainUid, domainNamespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "393a85048f74b7daab4a384aa202a1d9c8558631"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4056, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}