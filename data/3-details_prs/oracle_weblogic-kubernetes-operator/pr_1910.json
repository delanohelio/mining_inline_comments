{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MzIzODAy", "number": 1910, "title": "Add TLS and Path Routing Tests for Nginx, Voyager and Traefik", "bodyText": "Add TLS and Path routing tests for Nginx, Voyager and Traefik. Also add the two domains routing test for Nginx.\nJenkins run:\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/2098/\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/2102/\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/2142/", "createdAt": "2020-09-10T20:59:49Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910", "merged": true, "mergeCommit": {"oid": "ef46b65234755054215eb0dc90b1906d0eebc569"}, "closed": true, "closedAt": "2020-09-28T19:40:29Z", "author": {"login": "xiancao"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFzJmXAH2gAyNDg0MzIzODAyOjI0ZTBmNGNkNTE0YTZjOTM1MzBiMTYxMmE1YjkzN2Q1NGRlYjFkNDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNXY10AFqTQ5Nzc2NjA0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "24e0f4cd514a6c93530b1612a5b937d54deb1d44", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/24e0f4cd514a6c93530b1612a5b937d54deb1d44", "committedDate": "2020-09-05T05:42:30Z", "message": "add NGINX tls and two domains tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51fee8f529c1963dc3ef5d94b699caf80b33cf1c", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/51fee8f529c1963dc3ef5d94b699caf80b33cf1c", "committedDate": "2020-09-05T05:42:40Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac0ba796c41496bceb917ae53038b87f43ca3855", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ac0ba796c41496bceb917ae53038b87f43ca3855", "committedDate": "2020-09-09T15:48:31Z", "message": "add tls ingress for Voyager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8f6432c713f2bb4cc5fa1a4af5673b7edb77376", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f8f6432c713f2bb4cc5fa1a4af5673b7edb77376", "committedDate": "2020-09-09T15:48:42Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a8c0955e73825ac11f009792fa0b1409ffcb3ab", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4a8c0955e73825ac11f009792fa0b1409ffcb3ab", "committedDate": "2020-09-10T03:09:56Z", "message": "add path routing for three lbs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0730692dbdb70742b51e377a6399386d4cc0170e", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0730692dbdb70742b51e377a6399386d4cc0170e", "committedDate": "2020-09-10T18:02:54Z", "message": "fix nginx service name in other tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89740c1079852fc8ccae10bed04684bd0b860183", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/89740c1079852fc8ccae10bed04684bd0b860183", "committedDate": "2020-09-10T18:03:05Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0667b57306a1fdcbf1b2171bdb51f749da3d21ea", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0667b57306a1fdcbf1b2171bdb51f749da3d21ea", "committedDate": "2020-09-10T19:21:11Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e586e0bb9a35700efca2695b66cf525c67cd825a", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/e586e0bb9a35700efca2695b66cf525c67cd825a", "committedDate": "2020-09-10T20:49:35Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c6b0f514d99aea2e96e8fc84f9bd0ff76782980", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1c6b0f514d99aea2e96e8fc84f9bd0ff76782980", "committedDate": "2020-09-21T16:12:03Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyODM5MDg1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#pullrequestreview-492839085", "createdAt": "2020-09-21T17:37:48Z", "commit": {"oid": "1c6b0f514d99aea2e96e8fc84f9bd0ff76782980"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b13b57cf2664bb8c585ef975cc67c489c82ec297", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b13b57cf2664bb8c585ef975cc67c489c82ec297", "committedDate": "2020-09-21T23:54:35Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fcc8525f4d1ef3eacf77a8b19bc7810236b5ea1", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7fcc8525f4d1ef3eacf77a8b19bc7810236b5ea1", "committedDate": "2020-09-22T15:54:46Z", "message": "use NGINX chart version 2.16.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c8366140cdb4395e153bc59806fb791b6d7a1b8", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6c8366140cdb4395e153bc59806fb791b6d7a1b8", "committedDate": "2020-09-22T15:54:53Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ebc483e717992967025995c98443ec9b9bb9710", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1ebc483e717992967025995c98443ec9b9bb9710", "committedDate": "2020-09-22T23:28:46Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f3897821af3107f00fc5e7ecf826e8199b288d6", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9f3897821af3107f00fc5e7ecf826e8199b288d6", "committedDate": "2020-09-23T18:34:37Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17e02bab484a15eb6637bfb1e0f98522b5deba16", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/17e02bab484a15eb6637bfb1e0f98522b5deba16", "committedDate": "2020-09-23T21:53:23Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e33b831098b655336d28944b18e2ffe8959bfc6", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9e33b831098b655336d28944b18e2ffe8959bfc6", "committedDate": "2020-09-23T22:47:31Z", "message": "uninstall nginx first in AfterAll"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a9631d852bbad1b6ea7120004e8f0ad13d1d8a9", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/4a9631d852bbad1b6ea7120004e8f0ad13d1d8a9", "committedDate": "2020-09-24T06:11:01Z", "message": "add stable repo for Prometheus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d", "committedDate": "2020-09-24T17:06:46Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2ODQ2NTMx", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#pullrequestreview-496846531", "createdAt": "2020-09-25T20:50:54Z", "commit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "state": "COMMENTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMDo1MDo1NFrOHYSG9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMToyOToxNlrOHYTUgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNDU2NA==", "bodyText": "Be specific which CHART you are downloading from this helm repository. Modify the variable name to PROMTHEUS_REPO_NAME", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495224564", "createdAt": "2020-09-25T20:50:54Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java", "diffHunk": "@@ -166,6 +167,9 @@\n       .orElse(\"11.1.5\");\n   public static final String GRAFANA_CHART_VERSION = Optional.ofNullable(System.getenv(\"GRAFANA_CHART_VERSION\"))\n       .orElse(\"5.0.20\");\n+  public static final String STABLE_REPO_NAME = \"stable\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNDY2Mg==", "bodyText": "Be specific which CHART you are downloading from this helm repository url.  Looks like you are using it for Prometheus.  Change the variable name to PROMTHEUS_REPO_URL", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495224662", "createdAt": "2020-09-25T20:51:11Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java", "diffHunk": "@@ -166,6 +167,9 @@\n       .orElse(\"11.1.5\");\n   public static final String GRAFANA_CHART_VERSION = Optional.ofNullable(System.getenv(\"GRAFANA_CHART_VERSION\"))\n       .orElse(\"5.0.20\");\n+  public static final String STABLE_REPO_NAME = \"stable\";\n+  public static final String GOOGLE_REPO_URL = \"https://kubernetes-charts.storage.googleapis.com/\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNzQyNw==", "bodyText": "createNginxIngressHostRouting4TwoDomains --> createNginxIngressHostRoutingForTwoDomains", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495227427", "createdAt": "2020-09-25T20:58:33Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -384,21 +401,32 @@ public void testDeployAppAndInstallIngressControllers() {\n \n     // create TLS secret for https traffic\n     for (String domainUid : domainUids) {\n-      createCertKeyFiles(domainUid);\n+      createCertKeyFiles(domainUid + \".\" + defaultNamespace + \".cluster-1.test\");\n       assertDoesNotThrow(() -> createSecretWithTLSCertKey(domainUid + \"-tls-secret\",\n           defaultNamespace, tlsKeyFile, tlsCertFile));\n     }\n-    // create loadbalancing rules for Traefik\n+    // create loadbalancing rules for Traefik, Voyager and NGINX\n     createTraefikIngressRoutingRules();\n-    createVoyagerIngressRoutingRules();\n+\n+    // create ingress with non-tls host routing\n+    createVoyagerIngressHostRoutingRules(false);\n+    createNginxIngressHostRouting4TwoDomains(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNzU4NQ==", "bodyText": "createNginxIngressPathRouting4TwoDomains --> createNginxIngressPathRoutingForTwoDomains", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495227585", "createdAt": "2020-09-25T20:59:02Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -384,21 +401,32 @@ public void testDeployAppAndInstallIngressControllers() {\n \n     // create TLS secret for https traffic\n     for (String domainUid : domainUids) {\n-      createCertKeyFiles(domainUid);\n+      createCertKeyFiles(domainUid + \".\" + defaultNamespace + \".cluster-1.test\");\n       assertDoesNotThrow(() -> createSecretWithTLSCertKey(domainUid + \"-tls-secret\",\n           defaultNamespace, tlsKeyFile, tlsCertFile));\n     }\n-    // create loadbalancing rules for Traefik\n+    // create loadbalancing rules for Traefik, Voyager and NGINX\n     createTraefikIngressRoutingRules();\n-    createVoyagerIngressRoutingRules();\n+\n+    // create ingress with non-tls host routing\n+    createVoyagerIngressHostRoutingRules(false);\n+    createNginxIngressHostRouting4TwoDomains(false);\n+\n+    // create ingress with tls host routing\n+    createVoyagerIngressHostRoutingRules(true);\n+    createNginxIngressHostRouting4TwoDomains(true);\n+\n+    // create ingress with path routing\n+    createVoyagerIngressPathRoutingRules();\n+    createNginxIngressPathRouting4TwoDomains();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyODUwMA==", "bodyText": "Do we need to provide  host header for path routing", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495228500", "createdAt": "2020-09-25T21:01:12Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -460,36 +503,76 @@ public void testTraefikHostHttpsRoutingAcrossDomains() {\n    * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n    * is correctly routed to the specific domain cluster identified by the -H host header.\n    */\n-  @Order(7)\n+  @Order(8)\n   @Test\n-  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer tcp channel\")\n+  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer host routing\")\n   public void testVoyagerHostHttpRoutingAcrossDomains() {\n \n     // verify load balancing works when 2 domains are running in the same namespace\n-    logger.info(\"Verifying http traffic\");\n+    logger.info(\"Verifying Voyager http routing\");\n+    for (String domainUid : domainUids) {\n+      String ingressName = domainUid + \"-voyager-host-routing\";\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".voyager.nonssl.test\",\n+          \"http\", getVoyagerLbNodePort(ingressName, \"tcp-80\"),\n+          replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by Voyager loadbalancer with tls based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n+   * is correctly routed to the specific domain cluster identified by the -H host header.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 236}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyOTM0MQ==", "bodyText": "Modify Test name to testApacheLoadBalancingDefaultSample()", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495229341", "createdAt": "2020-09-25T21:03:32Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -460,36 +503,76 @@ public void testTraefikHostHttpsRoutingAcrossDomains() {\n    * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n    * is correctly routed to the specific domain cluster identified by the -H host header.\n    */\n-  @Order(7)\n+  @Order(8)\n   @Test\n-  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer tcp channel\")\n+  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer host routing\")\n   public void testVoyagerHostHttpRoutingAcrossDomains() {\n \n     // verify load balancing works when 2 domains are running in the same namespace\n-    logger.info(\"Verifying http traffic\");\n+    logger.info(\"Verifying Voyager http routing\");\n+    for (String domainUid : domainUids) {\n+      String ingressName = domainUid + \"-voyager-host-routing\";\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".voyager.nonssl.test\",\n+          \"http\", getVoyagerLbNodePort(ingressName, \"tcp-80\"),\n+          replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by Voyager loadbalancer with tls based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n+   * is correctly routed to the specific domain cluster identified by the -H host header.\n+   */\n+  @Order(9)\n+  @Test\n+  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer tls host routing\")\n+  public void testVoyagerHostHttpsRoutingAcrossDomains() {\n+\n+    // verify load balancing works when 2 domains are running in the same namespace\n+    logger.info(\"Verifying Voyager tls host routing\");\n     for (String domainUid : domainUids) {\n-      String ingressName = domainUid + \"-ingress-host-routing\";\n-      verifyClusterLoadbalancing(domainUid, defaultNamespace, \"http\", getVoyagerLbNodePort(ingressName),\n+      String ingressName = domainUid + \"-voyager-tls\";\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".voyager.ssl.test\",\n+          \"https\", getVoyagerLbNodePort(ingressName, \"tcp-443\"),\n           replicaCount, true, \"\");\n     }\n   }\n \n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by Voyager loadbalancer with path routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n+   * is correctly routed to the specific domain cluster.\n+   */\n+  @Order(10)\n+  @Test\n+  @DisplayName(\"Load balance WebLogic cluster traffic through Voyager load balancer path routing\")\n+  public void testVoyagerPathRoutingAcrossDomains() {\n+\n+    // verify load balancing works when 2 domains are running in the same namespace\n+    logger.info(\"Verifying Voyager path routing\");\n+    for (String domainUid : domainUids) {\n+      String ingressName = \"voyager-path-routing\";\n+      verifyClusterLoadbalancing(domainUid, \"\", \"http\", getVoyagerLbNodePort(ingressName, \"tcp-80\"),\n+          replicaCount, false, \"/\" + domainUid.substring(6));\n+    }\n+  }\n+\n   /**\n    * Verify Apache load balancer default sample through HTTP channel.\n    * Configure the Apache webtier as a load balancer for a WebLogic domain using the default configuration.\n    * It only support HTTP protocol.\n    * For details, please see\n    * https://github.com/oracle/weblogic-kubernetes-operator/tree/master/kubernetes/samples/charts/apache-samples/default-sample\n    */\n-  @Order(8)\n+  @Order(11)\n   @Test\n   @DisplayName(\"verify Apache load balancer default sample through HTTP channel\")\n   public void testApacheDefaultSample() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 285}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyOTQ3Mg==", "bodyText": "Modify Test name to testApacheLoadBalancingCutomSample()", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495229472", "createdAt": "2020-09-25T21:03:56Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -500,7 +583,7 @@ public void testApacheDefaultSample() {\n    * For more details, please check:\n    * https://github.com/oracle/weblogic-kubernetes-operator/tree/master/kubernetes/samples/charts/apache-samples/custom-sample\n    */\n-  @Order(9)\n+  @Order(12)\n   @Test\n   @DisplayName(\"verify Apache load balancer custom sample through HTTP and HTTPS channel\")\n   public void testApacheCustomSample() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 303}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyOTgzMw==", "bodyText": "verify NGINX host routing with HTTP protocol across two domains", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495229833", "createdAt": "2020-09-25T21:04:56Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -509,15 +592,71 @@ public void testApacheCustomSample() {\n     logger.info(\"Verifying Apache custom sample\");\n     for (int i = 1; i <= numberOfDomains; i++) {\n       int httpNodePort = getApacheNodePort(defaultNamespace, \"http\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"http\", httpNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"http\", httpNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n \n       int httpsNodePort = getApacheNodePort(defaultNamespace, \"https\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"https\", httpsNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"https\", httpsNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n     }\n   }\n \n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with host based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX host routing\n+   * and verifies it is correctly routed to the specific domain cluster identified by the -H host header.\n+   *\n+   */\n+  @Order(13)\n+  @Test\n+  @DisplayName(\"verify NGINX host routing with HTTP across two domains\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 327}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIzMTg3Mg==", "bodyText": "Provide consistent description for both host/path routing test methods as follows ...\n@DisplayName(\"verify NGINX path routing with HTTP protocol across two domains\")", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495231872", "createdAt": "2020-09-25T21:08:51Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -509,15 +592,71 @@ public void testApacheCustomSample() {\n     logger.info(\"Verifying Apache custom sample\");\n     for (int i = 1; i <= numberOfDomains; i++) {\n       int httpNodePort = getApacheNodePort(defaultNamespace, \"http\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"http\", httpNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"http\", httpNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n \n       int httpsNodePort = getApacheNodePort(defaultNamespace, \"https\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"https\", httpsNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"https\", httpsNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n     }\n   }\n \n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with host based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX host routing\n+   * and verifies it is correctly routed to the specific domain cluster identified by the -H host header.\n+   *\n+   */\n+  @Order(13)\n+  @Test\n+  @DisplayName(\"verify NGINX host routing with HTTP across two domains\")\n+  public void testNginxHttpHostRoutingAcrossDomains() {\n+\n+    // verify load balancing works when 2 domains are running in the same namespace\n+    logger.info(\"Verifying NGINX load balancer host routing\");\n+    for (String domainUid : domainUids) {\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".nginx.nonssl.test\",\n+          \"http\", getNginxLbNodePort(\"http\"), replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with host based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX tls host routing\n+   * and verifies it is correctly routed to the specific domain cluster identified by the -H host header.\n+   *\n+   */\n+  @Order(14)\n+  @Test\n+  @DisplayName(\"verify NGINX tls host routing across two domains\")\n+  public void testNginxHttpsHostRoutingAcrossDomains() {\n+\n+    // verify load balancing works when 2 domains are running in the same namespace\n+    logger.info(\"Verifying NGINX tls host routing\");\n+    for (String domainUid : domainUids) {\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".nginx.ssl.test\",\n+          \"https\", getNginxLbNodePort(\"https\"), replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with path routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX loadbalancer and verifies it\n+   * is correctly routed to the specific domain cluster.\n+   */\n+  @Order(15)\n+  @Test\n+  @DisplayName(\"Load balance WebLogic cluster traffic through NGINX load balancer path routing\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 364}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI0MDQ2NQ==", "bodyText": "Modify the description\nTest deploy applications and install ingress controllers Traefik. NGINX and Voyager.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495240465", "createdAt": "2020-09-25T21:22:06Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -363,6 +377,9 @@ public void testDeployAppAndInstallIngressControllers() {\n     voyagerHelmParams =\n         installAndVerifyVoyager(voyagerNamespace, cloudProvider, enableValidatingWebhook);\n \n+    // install and verify Nginx", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI0NDQxOQ==", "bodyText": "Modify -- > logger.info(\"Verifying Path Routing using http protocol\");", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495244419", "createdAt": "2020-09-25T21:29:16Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -450,8 +478,23 @@ public void testTraefikHostHttpsRoutingAcrossDomains() {\n \n     logger.info(\"Verifying https traffic\");\n     for (String domainUid : domainUids) {\n-      verifyClusterLoadbalancing(domainUid, defaultNamespace, \"https\", getTraefikLbNodePort(true),\n-          replicaCount, true, \"\");\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".cluster-1.test\",\n+          \"https\", getTraefikLbNodePort(true), replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by Traefik loadbalancer with path routing rules.\n+   */\n+  @Order(7)\n+  @Test\n+  @DisplayName(\"Loadbalance WebLogic cluster traffic through Traefik loadbalancer path routing\")\n+  public void testTraefikPathRoutingAcrossDomains() {\n+\n+    logger.info(\"Verifying https traffic\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 204}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "522b635ea1b8ac238431312152fc87db798f70c9", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/522b635ea1b8ac238431312152fc87db798f70c9", "committedDate": "2020-09-26T06:06:55Z", "message": "address Pani's comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "322460eb324883e1fb513068a915107edb00d243", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/322460eb324883e1fb513068a915107edb00d243", "committedDate": "2020-09-26T06:07:03Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7f6147585c8c631b1589bc1a409c07cd82d296b", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a7f6147585c8c631b1589bc1a409c07cd82d296b", "committedDate": "2020-09-28T16:32:18Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into xc-owls84383"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzY2MDQ5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#pullrequestreview-497766049", "createdAt": "2020-09-28T17:53:12Z", "commit": {"oid": "a7f6147585c8c631b1589bc1a409c07cd82d296b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4129, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}