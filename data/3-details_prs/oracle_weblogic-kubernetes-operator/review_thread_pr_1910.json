{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MzIzODAy", "number": 1910, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMDo1MDo1NFrOEnmW5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMToyOToxNlrOEnnHVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTU4Mzc1OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMDo1MDo1NFrOHYSG9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNjowODo0MlrOHYeGJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNDU2NA==", "bodyText": "Be specific which CHART you are downloading from this helm repository. Modify the variable name to PROMTHEUS_REPO_NAME", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495224564", "createdAt": "2020-09-25T20:50:54Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java", "diffHunk": "@@ -166,6 +167,9 @@\n       .orElse(\"11.1.5\");\n   public static final String GRAFANA_CHART_VERSION = Optional.ofNullable(System.getenv(\"GRAFANA_CHART_VERSION\"))\n       .orElse(\"5.0.20\");\n+  public static final String STABLE_REPO_NAME = \"stable\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMDk2NA==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495420964", "createdAt": "2020-09-26T06:08:42Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java", "diffHunk": "@@ -166,6 +167,9 @@\n       .orElse(\"11.1.5\");\n   public static final String GRAFANA_CHART_VERSION = Optional.ofNullable(System.getenv(\"GRAFANA_CHART_VERSION\"))\n       .orElse(\"5.0.20\");\n+  public static final String STABLE_REPO_NAME = \"stable\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNDU2NA=="}, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTU4NDM4OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMDo1MToxMVrOHYSHVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNjowODo1MlrOHYeGKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNDY2Mg==", "bodyText": "Be specific which CHART you are downloading from this helm repository url.  Looks like you are using it for Prometheus.  Change the variable name to PROMTHEUS_REPO_URL", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495224662", "createdAt": "2020-09-25T20:51:11Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java", "diffHunk": "@@ -166,6 +167,9 @@\n       .orElse(\"11.1.5\");\n   public static final String GRAFANA_CHART_VERSION = Optional.ofNullable(System.getenv(\"GRAFANA_CHART_VERSION\"))\n       .orElse(\"5.0.20\");\n+  public static final String STABLE_REPO_NAME = \"stable\";\n+  public static final String GOOGLE_REPO_URL = \"https://kubernetes-charts.storage.googleapis.com/\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMDk3MQ==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495420971", "createdAt": "2020-09-26T06:08:52Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/TestConstants.java", "diffHunk": "@@ -166,6 +167,9 @@\n       .orElse(\"11.1.5\");\n   public static final String GRAFANA_CHART_VERSION = Optional.ofNullable(System.getenv(\"GRAFANA_CHART_VERSION\"))\n       .orElse(\"5.0.20\");\n+  public static final String STABLE_REPO_NAME = \"stable\";\n+  public static final String GOOGLE_REPO_URL = \"https://kubernetes-charts.storage.googleapis.com/\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNDY2Mg=="}, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTYwMTkxOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMDo1ODozM1rOHYSSIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNjowODo1OVrOHYeGLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNzQyNw==", "bodyText": "createNginxIngressHostRouting4TwoDomains --> createNginxIngressHostRoutingForTwoDomains", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495227427", "createdAt": "2020-09-25T20:58:33Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -384,21 +401,32 @@ public void testDeployAppAndInstallIngressControllers() {\n \n     // create TLS secret for https traffic\n     for (String domainUid : domainUids) {\n-      createCertKeyFiles(domainUid);\n+      createCertKeyFiles(domainUid + \".\" + defaultNamespace + \".cluster-1.test\");\n       assertDoesNotThrow(() -> createSecretWithTLSCertKey(domainUid + \"-tls-secret\",\n           defaultNamespace, tlsKeyFile, tlsCertFile));\n     }\n-    // create loadbalancing rules for Traefik\n+    // create loadbalancing rules for Traefik, Voyager and NGINX\n     createTraefikIngressRoutingRules();\n-    createVoyagerIngressRoutingRules();\n+\n+    // create ingress with non-tls host routing\n+    createVoyagerIngressHostRoutingRules(false);\n+    createNginxIngressHostRouting4TwoDomains(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMDk3NQ==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495420975", "createdAt": "2020-09-26T06:08:59Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -384,21 +401,32 @@ public void testDeployAppAndInstallIngressControllers() {\n \n     // create TLS secret for https traffic\n     for (String domainUid : domainUids) {\n-      createCertKeyFiles(domainUid);\n+      createCertKeyFiles(domainUid + \".\" + defaultNamespace + \".cluster-1.test\");\n       assertDoesNotThrow(() -> createSecretWithTLSCertKey(domainUid + \"-tls-secret\",\n           defaultNamespace, tlsKeyFile, tlsCertFile));\n     }\n-    // create loadbalancing rules for Traefik\n+    // create loadbalancing rules for Traefik, Voyager and NGINX\n     createTraefikIngressRoutingRules();\n-    createVoyagerIngressRoutingRules();\n+\n+    // create ingress with non-tls host routing\n+    createVoyagerIngressHostRoutingRules(false);\n+    createNginxIngressHostRouting4TwoDomains(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNzQyNw=="}, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 153}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTYwMjk4OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMDo1OTowMlrOHYSSwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNjowOTowN1rOHYeGQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNzU4NQ==", "bodyText": "createNginxIngressPathRouting4TwoDomains --> createNginxIngressPathRoutingForTwoDomains", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495227585", "createdAt": "2020-09-25T20:59:02Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -384,21 +401,32 @@ public void testDeployAppAndInstallIngressControllers() {\n \n     // create TLS secret for https traffic\n     for (String domainUid : domainUids) {\n-      createCertKeyFiles(domainUid);\n+      createCertKeyFiles(domainUid + \".\" + defaultNamespace + \".cluster-1.test\");\n       assertDoesNotThrow(() -> createSecretWithTLSCertKey(domainUid + \"-tls-secret\",\n           defaultNamespace, tlsKeyFile, tlsCertFile));\n     }\n-    // create loadbalancing rules for Traefik\n+    // create loadbalancing rules for Traefik, Voyager and NGINX\n     createTraefikIngressRoutingRules();\n-    createVoyagerIngressRoutingRules();\n+\n+    // create ingress with non-tls host routing\n+    createVoyagerIngressHostRoutingRules(false);\n+    createNginxIngressHostRouting4TwoDomains(false);\n+\n+    // create ingress with tls host routing\n+    createVoyagerIngressHostRoutingRules(true);\n+    createNginxIngressHostRouting4TwoDomains(true);\n+\n+    // create ingress with path routing\n+    createVoyagerIngressPathRoutingRules();\n+    createNginxIngressPathRouting4TwoDomains();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMDk5Mg==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495420992", "createdAt": "2020-09-26T06:09:07Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -384,21 +401,32 @@ public void testDeployAppAndInstallIngressControllers() {\n \n     // create TLS secret for https traffic\n     for (String domainUid : domainUids) {\n-      createCertKeyFiles(domainUid);\n+      createCertKeyFiles(domainUid + \".\" + defaultNamespace + \".cluster-1.test\");\n       assertDoesNotThrow(() -> createSecretWithTLSCertKey(domainUid + \"-tls-secret\",\n           defaultNamespace, tlsKeyFile, tlsCertFile));\n     }\n-    // create loadbalancing rules for Traefik\n+    // create loadbalancing rules for Traefik, Voyager and NGINX\n     createTraefikIngressRoutingRules();\n-    createVoyagerIngressRoutingRules();\n+\n+    // create ingress with non-tls host routing\n+    createVoyagerIngressHostRoutingRules(false);\n+    createNginxIngressHostRouting4TwoDomains(false);\n+\n+    // create ingress with tls host routing\n+    createVoyagerIngressHostRoutingRules(true);\n+    createNginxIngressHostRouting4TwoDomains(true);\n+\n+    // create ingress with path routing\n+    createVoyagerIngressPathRoutingRules();\n+    createNginxIngressPathRouting4TwoDomains();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyNzU4NQ=="}, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 161}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTYwOTA3OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMTowMToxMlrOHYSWVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMzo1ODoyOFrOHYYfQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyODUwMA==", "bodyText": "Do we need to provide  host header for path routing", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495228500", "createdAt": "2020-09-25T21:01:12Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -460,36 +503,76 @@ public void testTraefikHostHttpsRoutingAcrossDomains() {\n    * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n    * is correctly routed to the specific domain cluster identified by the -H host header.\n    */\n-  @Order(7)\n+  @Order(8)\n   @Test\n-  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer tcp channel\")\n+  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer host routing\")\n   public void testVoyagerHostHttpRoutingAcrossDomains() {\n \n     // verify load balancing works when 2 domains are running in the same namespace\n-    logger.info(\"Verifying http traffic\");\n+    logger.info(\"Verifying Voyager http routing\");\n+    for (String domainUid : domainUids) {\n+      String ingressName = domainUid + \"-voyager-host-routing\";\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".voyager.nonssl.test\",\n+          \"http\", getVoyagerLbNodePort(ingressName, \"tcp-80\"),\n+          replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by Voyager loadbalancer with tls based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n+   * is correctly routed to the specific domain cluster identified by the -H host header.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 236}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTMyOTA5MA==", "bodyText": "Those are for host https routing.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495329090", "createdAt": "2020-09-25T23:58:28Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -460,36 +503,76 @@ public void testTraefikHostHttpsRoutingAcrossDomains() {\n    * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n    * is correctly routed to the specific domain cluster identified by the -H host header.\n    */\n-  @Order(7)\n+  @Order(8)\n   @Test\n-  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer tcp channel\")\n+  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer host routing\")\n   public void testVoyagerHostHttpRoutingAcrossDomains() {\n \n     // verify load balancing works when 2 domains are running in the same namespace\n-    logger.info(\"Verifying http traffic\");\n+    logger.info(\"Verifying Voyager http routing\");\n+    for (String domainUid : domainUids) {\n+      String ingressName = domainUid + \"-voyager-host-routing\";\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".voyager.nonssl.test\",\n+          \"http\", getVoyagerLbNodePort(ingressName, \"tcp-80\"),\n+          replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by Voyager loadbalancer with tls based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n+   * is correctly routed to the specific domain cluster identified by the -H host header.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyODUwMA=="}, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 236}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTYxNDI2OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMTowMzozMlrOHYSZnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMTowMzozMlrOHYSZnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyOTM0MQ==", "bodyText": "Modify Test name to testApacheLoadBalancingDefaultSample()", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495229341", "createdAt": "2020-09-25T21:03:32Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -460,36 +503,76 @@ public void testTraefikHostHttpsRoutingAcrossDomains() {\n    * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n    * is correctly routed to the specific domain cluster identified by the -H host header.\n    */\n-  @Order(7)\n+  @Order(8)\n   @Test\n-  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer tcp channel\")\n+  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer host routing\")\n   public void testVoyagerHostHttpRoutingAcrossDomains() {\n \n     // verify load balancing works when 2 domains are running in the same namespace\n-    logger.info(\"Verifying http traffic\");\n+    logger.info(\"Verifying Voyager http routing\");\n+    for (String domainUid : domainUids) {\n+      String ingressName = domainUid + \"-voyager-host-routing\";\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".voyager.nonssl.test\",\n+          \"http\", getVoyagerLbNodePort(ingressName, \"tcp-80\"),\n+          replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by Voyager loadbalancer with tls based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n+   * is correctly routed to the specific domain cluster identified by the -H host header.\n+   */\n+  @Order(9)\n+  @Test\n+  @DisplayName(\"Loadbalance WebLogic cluster traffic through Voyager loadbalancer tls host routing\")\n+  public void testVoyagerHostHttpsRoutingAcrossDomains() {\n+\n+    // verify load balancing works when 2 domains are running in the same namespace\n+    logger.info(\"Verifying Voyager tls host routing\");\n     for (String domainUid : domainUids) {\n-      String ingressName = domainUid + \"-ingress-host-routing\";\n-      verifyClusterLoadbalancing(domainUid, defaultNamespace, \"http\", getVoyagerLbNodePort(ingressName),\n+      String ingressName = domainUid + \"-voyager-tls\";\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".voyager.ssl.test\",\n+          \"https\", getVoyagerLbNodePort(ingressName, \"tcp-443\"),\n           replicaCount, true, \"\");\n     }\n   }\n \n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by Voyager loadbalancer with path routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through Voyager loadbalancer and verifies it\n+   * is correctly routed to the specific domain cluster.\n+   */\n+  @Order(10)\n+  @Test\n+  @DisplayName(\"Load balance WebLogic cluster traffic through Voyager load balancer path routing\")\n+  public void testVoyagerPathRoutingAcrossDomains() {\n+\n+    // verify load balancing works when 2 domains are running in the same namespace\n+    logger.info(\"Verifying Voyager path routing\");\n+    for (String domainUid : domainUids) {\n+      String ingressName = \"voyager-path-routing\";\n+      verifyClusterLoadbalancing(domainUid, \"\", \"http\", getVoyagerLbNodePort(ingressName, \"tcp-80\"),\n+          replicaCount, false, \"/\" + domainUid.substring(6));\n+    }\n+  }\n+\n   /**\n    * Verify Apache load balancer default sample through HTTP channel.\n    * Configure the Apache webtier as a load balancer for a WebLogic domain using the default configuration.\n    * It only support HTTP protocol.\n    * For details, please see\n    * https://github.com/oracle/weblogic-kubernetes-operator/tree/master/kubernetes/samples/charts/apache-samples/default-sample\n    */\n-  @Order(8)\n+  @Order(11)\n   @Test\n   @DisplayName(\"verify Apache load balancer default sample through HTTP channel\")\n   public void testApacheDefaultSample() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 285}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTYxNTExOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMTowMzo1NlrOHYSaIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNjowOToyMVrOHYeGag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyOTQ3Mg==", "bodyText": "Modify Test name to testApacheLoadBalancingCutomSample()", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495229472", "createdAt": "2020-09-25T21:03:56Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -500,7 +583,7 @@ public void testApacheDefaultSample() {\n    * For more details, please check:\n    * https://github.com/oracle/weblogic-kubernetes-operator/tree/master/kubernetes/samples/charts/apache-samples/custom-sample\n    */\n-  @Order(9)\n+  @Order(12)\n   @Test\n   @DisplayName(\"verify Apache load balancer custom sample through HTTP and HTTPS channel\")\n   public void testApacheCustomSample() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 303}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMTAzNA==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495421034", "createdAt": "2020-09-26T06:09:21Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -500,7 +583,7 @@ public void testApacheDefaultSample() {\n    * For more details, please check:\n    * https://github.com/oracle/weblogic-kubernetes-operator/tree/master/kubernetes/samples/charts/apache-samples/custom-sample\n    */\n-  @Order(9)\n+  @Order(12)\n   @Test\n   @DisplayName(\"verify Apache load balancer custom sample through HTTP and HTTPS channel\")\n   public void testApacheCustomSample() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyOTQ3Mg=="}, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 303}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTYxNzI3OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMTowNDo1NlrOHYSbiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNjoxMDoyMFrOHYeGyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyOTgzMw==", "bodyText": "verify NGINX host routing with HTTP protocol across two domains", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495229833", "createdAt": "2020-09-25T21:04:56Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -509,15 +592,71 @@ public void testApacheCustomSample() {\n     logger.info(\"Verifying Apache custom sample\");\n     for (int i = 1; i <= numberOfDomains; i++) {\n       int httpNodePort = getApacheNodePort(defaultNamespace, \"http\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"http\", httpNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"http\", httpNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n \n       int httpsNodePort = getApacheNodePort(defaultNamespace, \"https\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"https\", httpsNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"https\", httpsNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n     }\n   }\n \n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with host based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX host routing\n+   * and verifies it is correctly routed to the specific domain cluster identified by the -H host header.\n+   *\n+   */\n+  @Order(13)\n+  @Test\n+  @DisplayName(\"verify NGINX host routing with HTTP across two domains\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 327}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMTEyOA==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495421128", "createdAt": "2020-09-26T06:10:20Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -509,15 +592,71 @@ public void testApacheCustomSample() {\n     logger.info(\"Verifying Apache custom sample\");\n     for (int i = 1; i <= numberOfDomains; i++) {\n       int httpNodePort = getApacheNodePort(defaultNamespace, \"http\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"http\", httpNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"http\", httpNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n \n       int httpsNodePort = getApacheNodePort(defaultNamespace, \"https\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"https\", httpsNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"https\", httpsNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n     }\n   }\n \n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with host based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX host routing\n+   * and verifies it is correctly routed to the specific domain cluster identified by the -H host header.\n+   *\n+   */\n+  @Order(13)\n+  @Test\n+  @DisplayName(\"verify NGINX host routing with HTTP across two domains\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyOTgzMw=="}, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 327}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTYzMDM5OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMTowODo1MVrOHYSjgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNjoxMDoyOFrOHYeG1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIzMTg3Mg==", "bodyText": "Provide consistent description for both host/path routing test methods as follows ...\n@DisplayName(\"verify NGINX path routing with HTTP protocol across two domains\")", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495231872", "createdAt": "2020-09-25T21:08:51Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -509,15 +592,71 @@ public void testApacheCustomSample() {\n     logger.info(\"Verifying Apache custom sample\");\n     for (int i = 1; i <= numberOfDomains; i++) {\n       int httpNodePort = getApacheNodePort(defaultNamespace, \"http\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"http\", httpNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"http\", httpNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n \n       int httpsNodePort = getApacheNodePort(defaultNamespace, \"https\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"https\", httpsNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"https\", httpsNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n     }\n   }\n \n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with host based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX host routing\n+   * and verifies it is correctly routed to the specific domain cluster identified by the -H host header.\n+   *\n+   */\n+  @Order(13)\n+  @Test\n+  @DisplayName(\"verify NGINX host routing with HTTP across two domains\")\n+  public void testNginxHttpHostRoutingAcrossDomains() {\n+\n+    // verify load balancing works when 2 domains are running in the same namespace\n+    logger.info(\"Verifying NGINX load balancer host routing\");\n+    for (String domainUid : domainUids) {\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".nginx.nonssl.test\",\n+          \"http\", getNginxLbNodePort(\"http\"), replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with host based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX tls host routing\n+   * and verifies it is correctly routed to the specific domain cluster identified by the -H host header.\n+   *\n+   */\n+  @Order(14)\n+  @Test\n+  @DisplayName(\"verify NGINX tls host routing across two domains\")\n+  public void testNginxHttpsHostRoutingAcrossDomains() {\n+\n+    // verify load balancing works when 2 domains are running in the same namespace\n+    logger.info(\"Verifying NGINX tls host routing\");\n+    for (String domainUid : domainUids) {\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".nginx.ssl.test\",\n+          \"https\", getNginxLbNodePort(\"https\"), replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with path routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX loadbalancer and verifies it\n+   * is correctly routed to the specific domain cluster.\n+   */\n+  @Order(15)\n+  @Test\n+  @DisplayName(\"Load balance WebLogic cluster traffic through NGINX load balancer path routing\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 364}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMTE0Mg==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495421142", "createdAt": "2020-09-26T06:10:28Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -509,15 +592,71 @@ public void testApacheCustomSample() {\n     logger.info(\"Verifying Apache custom sample\");\n     for (int i = 1; i <= numberOfDomains; i++) {\n       int httpNodePort = getApacheNodePort(defaultNamespace, \"http\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"http\", httpNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"http\", httpNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n \n       int httpsNodePort = getApacheNodePort(defaultNamespace, \"https\");\n-      verifyClusterLoadbalancing(domainUids.get(i - 1), defaultNamespace, \"https\", httpsNodePort, replicaCount,\n+      verifyClusterLoadbalancing(domainUids.get(i - 1), \"\", \"https\", httpsNodePort, replicaCount,\n           false, \"/weblogic\" + i);\n     }\n   }\n \n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with host based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX host routing\n+   * and verifies it is correctly routed to the specific domain cluster identified by the -H host header.\n+   *\n+   */\n+  @Order(13)\n+  @Test\n+  @DisplayName(\"verify NGINX host routing with HTTP across two domains\")\n+  public void testNginxHttpHostRoutingAcrossDomains() {\n+\n+    // verify load balancing works when 2 domains are running in the same namespace\n+    logger.info(\"Verifying NGINX load balancer host routing\");\n+    for (String domainUid : domainUids) {\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".nginx.nonssl.test\",\n+          \"http\", getNginxLbNodePort(\"http\"), replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with host based routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX tls host routing\n+   * and verifies it is correctly routed to the specific domain cluster identified by the -H host header.\n+   *\n+   */\n+  @Order(14)\n+  @Test\n+  @DisplayName(\"verify NGINX tls host routing across two domains\")\n+  public void testNginxHttpsHostRoutingAcrossDomains() {\n+\n+    // verify load balancing works when 2 domains are running in the same namespace\n+    logger.info(\"Verifying NGINX tls host routing\");\n+    for (String domainUid : domainUids) {\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".nginx.ssl.test\",\n+          \"https\", getNginxLbNodePort(\"https\"), replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by NGINX loadbalancer with path routing rules.\n+   * Accesses the clusterview application deployed in the WebLogic cluster through NGINX loadbalancer and verifies it\n+   * is correctly routed to the specific domain cluster.\n+   */\n+  @Order(15)\n+  @Test\n+  @DisplayName(\"Load balance WebLogic cluster traffic through NGINX load balancer path routing\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIzMTg3Mg=="}, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 364}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTY4MzEyOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMToyMjowNlrOHYTFEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNjoxMDozN1rOHYeG4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI0MDQ2NQ==", "bodyText": "Modify the description\nTest deploy applications and install ingress controllers Traefik. NGINX and Voyager.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495240465", "createdAt": "2020-09-25T21:22:06Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -363,6 +377,9 @@ public void testDeployAppAndInstallIngressControllers() {\n     voyagerHelmParams =\n         installAndVerifyVoyager(voyagerNamespace, cloudProvider, enableValidatingWebhook);\n \n+    // install and verify Nginx", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMTE1NQ==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495421155", "createdAt": "2020-09-26T06:10:37Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -363,6 +377,9 @@ public void testDeployAppAndInstallIngressControllers() {\n     voyagerHelmParams =\n         installAndVerifyVoyager(voyagerNamespace, cloudProvider, enableValidatingWebhook);\n \n+    // install and verify Nginx", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI0MDQ2NQ=="}, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTcwNzcyOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMToyOToxNlrOHYTUgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNjoxMDo0NVrOHYeG8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI0NDQxOQ==", "bodyText": "Modify -- > logger.info(\"Verifying Path Routing using http protocol\");", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495244419", "createdAt": "2020-09-25T21:29:16Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -450,8 +478,23 @@ public void testTraefikHostHttpsRoutingAcrossDomains() {\n \n     logger.info(\"Verifying https traffic\");\n     for (String domainUid : domainUids) {\n-      verifyClusterLoadbalancing(domainUid, defaultNamespace, \"https\", getTraefikLbNodePort(true),\n-          replicaCount, true, \"\");\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".cluster-1.test\",\n+          \"https\", getTraefikLbNodePort(true), replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by Traefik loadbalancer with path routing rules.\n+   */\n+  @Order(7)\n+  @Test\n+  @DisplayName(\"Loadbalance WebLogic cluster traffic through Traefik loadbalancer path routing\")\n+  public void testTraefikPathRoutingAcrossDomains() {\n+\n+    logger.info(\"Verifying https traffic\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 204}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMTE3MA==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1910#discussion_r495421170", "createdAt": "2020-09-26T06:10:45Z", "author": {"login": "xiancao"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItTwoDomainsLoadBalancers.java", "diffHunk": "@@ -450,8 +478,23 @@ public void testTraefikHostHttpsRoutingAcrossDomains() {\n \n     logger.info(\"Verifying https traffic\");\n     for (String domainUid : domainUids) {\n-      verifyClusterLoadbalancing(domainUid, defaultNamespace, \"https\", getTraefikLbNodePort(true),\n-          replicaCount, true, \"\");\n+      verifyClusterLoadbalancing(domainUid, domainUid + \".\" + defaultNamespace + \".cluster-1.test\",\n+          \"https\", getTraefikLbNodePort(true), replicaCount, true, \"\");\n+    }\n+  }\n+\n+  /**\n+   * Test verifies multiple WebLogic domains can be loadbalanced by Traefik loadbalancer with path routing rules.\n+   */\n+  @Order(7)\n+  @Test\n+  @DisplayName(\"Loadbalance WebLogic cluster traffic through Traefik loadbalancer path routing\")\n+  public void testTraefikPathRoutingAcrossDomains() {\n+\n+    logger.info(\"Verifying https traffic\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI0NDQxOQ=="}, "originalCommit": {"oid": "b621a925e0e3878d021ed20ffeb8dd6bfdad1e4d"}, "originalPosition": 204}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3952, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}