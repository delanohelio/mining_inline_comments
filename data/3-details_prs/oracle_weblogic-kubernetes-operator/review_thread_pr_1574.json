{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MTg1NDE3", "number": 1574, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjo1ODo1NlrODzEVvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzowNDozMFrODzEZBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODc1MDY4OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Command.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjo1ODo1NlrOGHfW6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNDo1MTowN1rOGIYbgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwNjk4NA==", "bodyText": "Dongbo, can you give details of when WIT returned a 0 exit code even though image creation failed?  Our tests should not work around bugs in the product.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1574#discussion_r410506984", "createdAt": "2020-04-17T22:58:56Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Command.java", "diffHunk": "@@ -46,12 +46,24 @@ public boolean execute() {\n           params.command(), \n           params.redirect(),\n           params.env());\n-      if (result.exitValue() != 0) {\n-        logger.warning(\"The command execution failed with the result: {0}\", result);\n+      if (params.saveStdOut()) {\n+        params.stdOut(result.stdout());\n+      }\n+\n+      // check both exitValue and stderr since sometimes the exitValue was 0 even when\n+      // the test execution failed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c02cc41b844df77aca1e323945e5e03f5823ecf"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA1MTM3Mg==", "bodyText": "This is not only applicable to the WIT commands This method is used for all command execution such as running a curl command to download the tool, or creating a zip file. I tested a couple of error conditions such as wrong download url, and somehow the exitValue was zero. So I added the additional checks to make sure the code catches the error condition. I myself found this behavior strange/unexpected. Let me test those error conditions one more time tomorrow and see if I did something wrong last week when I did the testing.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1574#discussion_r411051372", "createdAt": "2020-04-20T02:19:04Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Command.java", "diffHunk": "@@ -46,12 +46,24 @@ public boolean execute() {\n           params.command(), \n           params.redirect(),\n           params.env());\n-      if (result.exitValue() != 0) {\n-        logger.warning(\"The command execution failed with the result: {0}\", result);\n+      if (params.saveStdOut()) {\n+        params.stdOut(result.stdout());\n+      }\n+\n+      // check both exitValue and stderr since sometimes the exitValue was 0 even when\n+      // the test execution failed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwNjk4NA=="}, "originalCommit": {"oid": "1c02cc41b844df77aca1e323945e5e03f5823ecf"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM2MzU3MA==", "bodyText": "Jus to be clear - I have not seen that a WIT command returned zero exitValue when there was a problem in command execution.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1574#discussion_r411363570", "createdAt": "2020-04-20T13:10:08Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Command.java", "diffHunk": "@@ -46,12 +46,24 @@ public boolean execute() {\n           params.command(), \n           params.redirect(),\n           params.env());\n-      if (result.exitValue() != 0) {\n-        logger.warning(\"The command execution failed with the result: {0}\", result);\n+      if (params.saveStdOut()) {\n+        params.stdOut(result.stdout());\n+      }\n+\n+      // check both exitValue and stderr since sometimes the exitValue was 0 even when\n+      // the test execution failed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwNjk4NA=="}, "originalCommit": {"oid": "1c02cc41b844df77aca1e323945e5e03f5823ecf"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ0MjA0OA==", "bodyText": "I did more testing. In the most of the cases, the exitValue does reflect the execution status. Only in the new getRealVersionIfNeeded method, there were cases that the exitValue is still zero when there was a problem in one of the commands that pipelined together. In those cases, the later check in Installer.java line#99 will catch it and log a severe message. I'll change the code back to only check exitValue.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1574#discussion_r411442048", "createdAt": "2020-04-20T14:51:07Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Command.java", "diffHunk": "@@ -46,12 +46,24 @@ public boolean execute() {\n           params.command(), \n           params.redirect(),\n           params.env());\n-      if (result.exitValue() != 0) {\n-        logger.warning(\"The command execution failed with the result: {0}\", result);\n+      if (params.saveStdOut()) {\n+        params.stdOut(result.stdout());\n+      }\n+\n+      // check both exitValue and stderr since sometimes the exitValue was 0 even when\n+      // the test execution failed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwNjk4NA=="}, "originalCommit": {"oid": "1c02cc41b844df77aca1e323945e5e03f5823ecf"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODc1NDEwOnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzowMToxMVrOGHfZBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMjoyODozMlrOGIAulA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwNzUyNg==", "bodyText": "I don't understand what this check is ensuring.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1574#discussion_r410507526", "createdAt": "2020-04-17T23:01:11Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -80,13 +85,23 @@ private Installer params(InstallParams params) {\n    * @return true if the command succeeds \n    */\n   public boolean download() {\n+ \n     boolean downloadSucceeded = true;\n     boolean unzipSucceeded = true;\n     if (params.verify()\n         && new File(DOWNLOAD_DIR, params.fileName()).exists()) {\n       logger.info(\"File {0} already exists.\", params.fileName());\n     } else {\n+      // check and make sure DOWNLOAD_DIR exists; will create it if it is missing\n       checkDirectory(DOWNLOAD_DIR);\n+      \n+      // we check if we get the version of the tool correctly first\n+      if (params.version() == null \n+          || params.version().length() == 0\n+          || params.version().equalsIgnoreCase(\"latest\")) {\n+        logger.severe(\"Failed to get the latest version of {0}\", params.type());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c02cc41b844df77aca1e323945e5e03f5823ecf"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA1MzcxNg==", "bodyText": "When the params.version() method is called the first time,  it (unexpectedly, as you indicated below) performs some additional operations to find out the release number of the \"latest\" by calling getRealVersionIfNeeded(). Method getRealVersionIfNeeded may return null. This checks ensure that we did get the real version, and the code returns false to indicate a failure if finding the real version somehow failed.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1574#discussion_r411053716", "createdAt": "2020-04-20T02:28:32Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -80,13 +85,23 @@ private Installer params(InstallParams params) {\n    * @return true if the command succeeds \n    */\n   public boolean download() {\n+ \n     boolean downloadSucceeded = true;\n     boolean unzipSucceeded = true;\n     if (params.verify()\n         && new File(DOWNLOAD_DIR, params.fileName()).exists()) {\n       logger.info(\"File {0} already exists.\", params.fileName());\n     } else {\n+      // check and make sure DOWNLOAD_DIR exists; will create it if it is missing\n       checkDirectory(DOWNLOAD_DIR);\n+      \n+      // we check if we get the version of the tool correctly first\n+      if (params.version() == null \n+          || params.version().length() == 0\n+          || params.version().equalsIgnoreCase(\"latest\")) {\n+        logger.severe(\"Failed to get the latest version of {0}\", params.type());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwNzUyNg=="}, "originalCommit": {"oid": "1c02cc41b844df77aca1e323945e5e03f5823ecf"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODc1NTYwOnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/InstallParams.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzowMjoyN1rOGHfZ_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMjoyOTozNVrOGIAvoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwNzc3Mg==", "bodyText": "This looks like a simple fluent getter but is doing a lot more.  Let's make the method more descriptive of what is going on.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1574#discussion_r410507772", "createdAt": "2020-04-17T23:02:27Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/InstallParams.java", "diffHunk": "@@ -49,6 +49,7 @@ public InstallParams version(String version) {\n   }\n \n   public String version() {\n+    version = Installer.getActualVersionIfNeeded(location, type, version);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c02cc41b844df77aca1e323945e5e03f5823ecf"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA1Mzk4NA==", "bodyText": "Okay", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1574#discussion_r411053984", "createdAt": "2020-04-20T02:29:35Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/InstallParams.java", "diffHunk": "@@ -49,6 +49,7 @@ public InstallParams version(String version) {\n   }\n \n   public String version() {\n+    version = Installer.getActualVersionIfNeeded(location, type, version);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwNzc3Mg=="}, "originalCommit": {"oid": "1c02cc41b844df77aca1e323945e5e03f5823ecf"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODc1NTk0OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzowMjo0MlrOGHfaNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzowMjo0MlrOGHfaNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwNzgyOA==", "bodyText": "javadoc", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1574#discussion_r410507828", "createdAt": "2020-04-17T23:02:42Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -122,4 +137,45 @@ private String buildDownloadCommand() {\n         params.fileName());\n     return command;\n   }\n+\n+  // Figure out the actual release number of the latest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c02cc41b844df77aca1e323945e5e03f5823ecf"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODc1ODY1OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzowNDoxNFrOGHfbtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjozODo0MVrOGIdj2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwODIxNA==", "bodyText": "What does it mean to return null here?  If the command fails isn't that a bigger issue?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1574#discussion_r410508214", "createdAt": "2020-04-17T23:04:14Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -122,4 +137,45 @@ private String buildDownloadCommand() {\n         params.fileName());\n     return command;\n   }\n+\n+  // Figure out the actual release number of the latest\n+  static String getActualVersionIfNeeded(\n+      String location,\n+      String type,\n+      String version\n+  ) {\n+    if (version == null || version.equalsIgnoreCase(\"latest\")) {\n+      String command = String.format(\n+          \"curl -fL %s/releases/latest -o %s/%s-%s\", \n+          location,\n+          DOWNLOAD_DIR,\n+          type,\n+          TMP_FILE_NAME);\n+      \n+      if (!Command.withParams(defaultCommandParams().command(command)).execute()) {\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c02cc41b844df77aca1e323945e5e03f5823ecf"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA1NTEyNQ==", "bodyText": "As I mentioned in the earlier responses, returning null is a way to tell the caller that this failed and I don't have a real version to give you. The caller will log a severe message, and return false to indicate a failure condition (see Installer.java line #99). The failure usually does not accompanied by an exception. We could manufacture an exception and throw here, but I am not sure what exception to throw other than a RuntimeException.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1574#discussion_r411055125", "createdAt": "2020-04-20T02:33:47Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -122,4 +137,45 @@ private String buildDownloadCommand() {\n         params.fileName());\n     return command;\n   }\n+\n+  // Figure out the actual release number of the latest\n+  static String getActualVersionIfNeeded(\n+      String location,\n+      String type,\n+      String version\n+  ) {\n+    if (version == null || version.equalsIgnoreCase(\"latest\")) {\n+      String command = String.format(\n+          \"curl -fL %s/releases/latest -o %s/%s-%s\", \n+          location,\n+          DOWNLOAD_DIR,\n+          type,\n+          TMP_FILE_NAME);\n+      \n+      if (!Command.withParams(defaultCommandParams().command(command)).execute()) {\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwODIxNA=="}, "originalCommit": {"oid": "1c02cc41b844df77aca1e323945e5e03f5823ecf"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ0MzYxMA==", "bodyText": "Keep in mind we are trying to make it clear for the \"next\" person.  If I understand this correctly, I think throwing an exception is clearer that \"things are not working as expected\".  Create a new exception class if it helps make things more clear.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1574#discussion_r411443610", "createdAt": "2020-04-20T14:53:03Z", "author": {"login": "ddsharpe"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -122,4 +137,45 @@ private String buildDownloadCommand() {\n         params.fileName());\n     return command;\n   }\n+\n+  // Figure out the actual release number of the latest\n+  static String getActualVersionIfNeeded(\n+      String location,\n+      String type,\n+      String version\n+  ) {\n+    if (version == null || version.equalsIgnoreCase(\"latest\")) {\n+      String command = String.format(\n+          \"curl -fL %s/releases/latest -o %s/%s-%s\", \n+          location,\n+          DOWNLOAD_DIR,\n+          type,\n+          TMP_FILE_NAME);\n+      \n+      if (!Command.withParams(defaultCommandParams().command(command)).execute()) {\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwODIxNA=="}, "originalCommit": {"oid": "1c02cc41b844df77aca1e323945e5e03f5823ecf"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUyNjEwNw==", "bodyText": "Agreed. working on a change.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1574#discussion_r411526107", "createdAt": "2020-04-20T16:38:41Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -122,4 +137,45 @@ private String buildDownloadCommand() {\n         params.fileName());\n     return command;\n   }\n+\n+  // Figure out the actual release number of the latest\n+  static String getActualVersionIfNeeded(\n+      String location,\n+      String type,\n+      String version\n+  ) {\n+    if (version == null || version.equalsIgnoreCase(\"latest\")) {\n+      String command = String.format(\n+          \"curl -fL %s/releases/latest -o %s/%s-%s\", \n+          location,\n+          DOWNLOAD_DIR,\n+          type,\n+          TMP_FILE_NAME);\n+      \n+      if (!Command.withParams(defaultCommandParams().command(command)).execute()) {\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwODIxNA=="}, "originalCommit": {"oid": "1c02cc41b844df77aca1e323945e5e03f5823ecf"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODc1OTA5OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzowNDozMFrOGHfb-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNToxOTo0OVrOGJLiIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwODI4MQ==", "bodyText": "Same comment", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1574#discussion_r410508281", "createdAt": "2020-04-17T23:04:30Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -122,4 +137,45 @@ private String buildDownloadCommand() {\n         params.fileName());\n     return command;\n   }\n+\n+  // Figure out the actual release number of the latest\n+  static String getActualVersionIfNeeded(\n+      String location,\n+      String type,\n+      String version\n+  ) {\n+    if (version == null || version.equalsIgnoreCase(\"latest\")) {\n+      String command = String.format(\n+          \"curl -fL %s/releases/latest -o %s/%s-%s\", \n+          location,\n+          DOWNLOAD_DIR,\n+          type,\n+          TMP_FILE_NAME);\n+      \n+      if (!Command.withParams(defaultCommandParams().command(command)).execute()) {\n+        return null;\n+      }\n+\n+      command = String.format(\n+          \"cat %s/%s-%s | grep 'releases/download' | awk '{ split($0,a,/href=\\\"/);%s | %s\", \n+          DOWNLOAD_DIR, \n+          type, \n+          TMP_FILE_NAME, \n+          \" print a[2] }'\", \n+          \" cut -d/ -f 6\"); \n+    \n+      CommandParams params = \n+          defaultCommandParams()\n+          .command(command)\n+          .saveStdOut(true)\n+          .redirect(true);\n+\n+      if (Command.withParams(params).execute()) {\n+        return params.stdOut();\n+      } else {\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c02cc41b844df77aca1e323945e5e03f5823ecf"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI3OTMzMQ==", "bodyText": "fixed with a severe log message and throwing a RuntimeException. The caller catches the exception and returns false to fail the test case.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1574#discussion_r412279331", "createdAt": "2020-04-21T15:19:49Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -122,4 +137,45 @@ private String buildDownloadCommand() {\n         params.fileName());\n     return command;\n   }\n+\n+  // Figure out the actual release number of the latest\n+  static String getActualVersionIfNeeded(\n+      String location,\n+      String type,\n+      String version\n+  ) {\n+    if (version == null || version.equalsIgnoreCase(\"latest\")) {\n+      String command = String.format(\n+          \"curl -fL %s/releases/latest -o %s/%s-%s\", \n+          location,\n+          DOWNLOAD_DIR,\n+          type,\n+          TMP_FILE_NAME);\n+      \n+      if (!Command.withParams(defaultCommandParams().command(command)).execute()) {\n+        return null;\n+      }\n+\n+      command = String.format(\n+          \"cat %s/%s-%s | grep 'releases/download' | awk '{ split($0,a,/href=\\\"/);%s | %s\", \n+          DOWNLOAD_DIR, \n+          type, \n+          TMP_FILE_NAME, \n+          \" print a[2] }'\", \n+          \" cut -d/ -f 6\"); \n+    \n+      CommandParams params = \n+          defaultCommandParams()\n+          .command(command)\n+          .saveStdOut(true)\n+          .redirect(true);\n+\n+      if (Command.withParams(params).execute()) {\n+        return params.stdOut();\n+      } else {\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwODI4MQ=="}, "originalCommit": {"oid": "1c02cc41b844df77aca1e323945e5e03f5823ecf"}, "originalPosition": 92}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4446, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}