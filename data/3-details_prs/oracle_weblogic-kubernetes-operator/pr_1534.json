{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MzEzMDg0", "number": 1534, "title": "Add more contents into MII image plus cleanup", "bodyText": "Add WDT binary and a WDT model into the first test MII image, and tested the generated image using the sample.\nMoved the constants in the install and WIT actions into a new constants class ; the impl class static import them.", "createdAt": "2020-04-03T18:05:48Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534", "merged": true, "mergeCommit": {"oid": "0faa9839110dd7a93e8a8162a69b1717cde9bfa6"}, "closed": true, "closedAt": "2020-04-07T15:01:17Z", "author": {"login": "doxiao"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTyvNsAH2gAyMzk4MzEzMDg0OmJlZjk5ZDYzOWRjYjgyMGQyMzYzNGQzMDMzMTY2NTc1ZTVjYjM1NTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVUoxyAFqTM4OTIwNjEzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bef99d639dcb820d23634d3033166575e5cb3551", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/bef99d639dcb820d23634d3033166575e5cb3551", "committedDate": "2020-04-02T20:57:28Z", "message": "Add model to wit test\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54a20730f1694a0db8844e4081a63f97b89147d3", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/54a20730f1694a0db8844e4081a63f97b89147d3", "committedDate": "2020-04-02T22:25:38Z", "message": "More impl\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b99fc4650895fb57914155a4c7a3d68d6ed63ed", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1b99fc4650895fb57914155a4c7a3d68d6ed63ed", "committedDate": "2020-04-02T23:44:44Z", "message": "Merge remote-tracking branch 'origin/mii-new-integration-tests' into wit-action-test\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>\n\nConflicts:\n\tnew-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/InstallWITCommon.java\n\tnew-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/WebLogicImageTool.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c97c3056a6ff3cd83fa4dfc48a70809d07efaa03", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c97c3056a6ff3cd83fa4dfc48a70809d07efaa03", "committedDate": "2020-04-03T16:55:44Z", "message": "Restruct the code and move constants into ActionConstants\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9300291fd5a34b48e17c9a4451e51f98d0efd50c", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9300291fd5a34b48e17c9a4451e51f98d0efd50c", "committedDate": "2020-04-03T17:01:36Z", "message": "Revert an unintended change\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/04301515cb86b18975f062fc4fbced6f5621f3c7", "committedDate": "2020-04-03T17:53:36Z", "message": "Minor cleanup\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NjUzNjQ3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#pullrequestreview-387653647", "createdAt": "2020-04-04T01:36:02Z", "commit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "state": "COMMENTED", "comments": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwMTozNjowM1rOGAt8yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwMTo1NDozMlrOGAuFPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjAyNQ==", "bodyText": "@ddsharpe is this a WDT thing, that it needs to be a forward slash, or should this be File.separator ?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406025", "createdAt": "2020-04-04T01:36:03Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItWITValidation.java", "diffHunk": "@@ -3,24 +3,45 @@\n \n package oracle.weblogic.kubernetes;\n \n+import java.util.Arrays;\n+import java.util.List;\n+\n import oracle.weblogic.kubernetes.actions.TestActions;\n+import oracle.weblogic.kubernetes.assertions.TestAssertions;\n import oracle.weblogic.kubernetes.extensions.LoggedTest;\n import org.junit.jupiter.api.DisplayName;\n import org.junit.jupiter.api.Test;\n \n+import static oracle.weblogic.kubernetes.actions.ActionConstants.MODEL_DIR;\n import static oracle.weblogic.kubernetes.actions.TestActions.withWITParams;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n \n @DisplayName(\"Simple validation of basic WIT functions\")\n class ItWITValidation implements LoggedTest {\n+  private static final String WDT_MODEL_FILE = \"model1-wls.yaml\";\n+  private static final String IMAGE_NAME = \"test-mii-image-2\";\n+  private static final String IMAGE_TAG = \"v1\";\n+  \n   @Test\n   @DisplayName(\"Create a MII image\")\n   public void testCreatingMIIImage() {\n \n-    // create the MII image\n-    // TODO add model files and other contents to the image once we have those resources\n-    boolean success = TestActions.createMIIImage(withWITParams());\n+    logger.info(\"WDT model directory is \" + MODEL_DIR);\n+\n+    // build the model file list\n+    List<String> modelList = Arrays.asList(MODEL_DIR + \"/\" + WDT_MODEL_FILE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjEwMQ==", "bodyText": "please static import TestActions so you can just say createMIIImage() instead of TestActions.createMIIImage()", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406101", "createdAt": "2020-04-04T01:36:42Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItWITValidation.java", "diffHunk": "@@ -3,24 +3,45 @@\n \n package oracle.weblogic.kubernetes;\n \n+import java.util.Arrays;\n+import java.util.List;\n+\n import oracle.weblogic.kubernetes.actions.TestActions;\n+import oracle.weblogic.kubernetes.assertions.TestAssertions;\n import oracle.weblogic.kubernetes.extensions.LoggedTest;\n import org.junit.jupiter.api.DisplayName;\n import org.junit.jupiter.api.Test;\n \n+import static oracle.weblogic.kubernetes.actions.ActionConstants.MODEL_DIR;\n import static oracle.weblogic.kubernetes.actions.TestActions.withWITParams;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n \n @DisplayName(\"Simple validation of basic WIT functions\")\n class ItWITValidation implements LoggedTest {\n+  private static final String WDT_MODEL_FILE = \"model1-wls.yaml\";\n+  private static final String IMAGE_NAME = \"test-mii-image-2\";\n+  private static final String IMAGE_TAG = \"v1\";\n+  \n   @Test\n   @DisplayName(\"Create a MII image\")\n   public void testCreatingMIIImage() {\n \n-    // create the MII image\n-    // TODO add model files and other contents to the image once we have those resources\n-    boolean success = TestActions.createMIIImage(withWITParams());\n+    logger.info(\"WDT model directory is \" + MODEL_DIR);\n+\n+    // build the model file list\n+    List<String> modelList = Arrays.asList(MODEL_DIR + \"/\" + WDT_MODEL_FILE);\n \n+    // build an image using WebLogic Image Tool\n+    boolean success = TestActions.createMIIImage(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjIwMQ==", "bodyText": "pleas static import so you don't need TestAssertions. here", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406201", "createdAt": "2020-04-04T01:37:18Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItWITValidation.java", "diffHunk": "@@ -3,24 +3,45 @@\n \n package oracle.weblogic.kubernetes;\n \n+import java.util.Arrays;\n+import java.util.List;\n+\n import oracle.weblogic.kubernetes.actions.TestActions;\n+import oracle.weblogic.kubernetes.assertions.TestAssertions;\n import oracle.weblogic.kubernetes.extensions.LoggedTest;\n import org.junit.jupiter.api.DisplayName;\n import org.junit.jupiter.api.Test;\n \n+import static oracle.weblogic.kubernetes.actions.ActionConstants.MODEL_DIR;\n import static oracle.weblogic.kubernetes.actions.TestActions.withWITParams;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n \n @DisplayName(\"Simple validation of basic WIT functions\")\n class ItWITValidation implements LoggedTest {\n+  private static final String WDT_MODEL_FILE = \"model1-wls.yaml\";\n+  private static final String IMAGE_NAME = \"test-mii-image-2\";\n+  private static final String IMAGE_TAG = \"v1\";\n+  \n   @Test\n   @DisplayName(\"Create a MII image\")\n   public void testCreatingMIIImage() {\n \n-    // create the MII image\n-    // TODO add model files and other contents to the image once we have those resources\n-    boolean success = TestActions.createMIIImage(withWITParams());\n+    logger.info(\"WDT model directory is \" + MODEL_DIR);\n+\n+    // build the model file list\n+    List<String> modelList = Arrays.asList(MODEL_DIR + \"/\" + WDT_MODEL_FILE);\n \n+    // build an image using WebLogic Image Tool\n+    boolean success = TestActions.createMIIImage(\n+        withWITParams()\n+            .modelImageName(IMAGE_NAME)\n+            .modelImageTag(IMAGE_TAG)\n+            .modelFiles(modelList)\n+            .wdtVersion(\"latest\")\n+            .redirect(false));\n+ \n     assertEquals(true, success, \"Failed to create the image using WebLogic Deploy Tool\");\n+    TestAssertions.imageExists(IMAGE_NAME, IMAGE_TAG);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjMwMQ==", "bodyText": "imageExists() could probably use a better name too - maybe assertImageExists", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406301", "createdAt": "2020-04-04T01:37:59Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItWITValidation.java", "diffHunk": "@@ -3,24 +3,45 @@\n \n package oracle.weblogic.kubernetes;\n \n+import java.util.Arrays;\n+import java.util.List;\n+\n import oracle.weblogic.kubernetes.actions.TestActions;\n+import oracle.weblogic.kubernetes.assertions.TestAssertions;\n import oracle.weblogic.kubernetes.extensions.LoggedTest;\n import org.junit.jupiter.api.DisplayName;\n import org.junit.jupiter.api.Test;\n \n+import static oracle.weblogic.kubernetes.actions.ActionConstants.MODEL_DIR;\n import static oracle.weblogic.kubernetes.actions.TestActions.withWITParams;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n \n @DisplayName(\"Simple validation of basic WIT functions\")\n class ItWITValidation implements LoggedTest {\n+  private static final String WDT_MODEL_FILE = \"model1-wls.yaml\";\n+  private static final String IMAGE_NAME = \"test-mii-image-2\";\n+  private static final String IMAGE_TAG = \"v1\";\n+  \n   @Test\n   @DisplayName(\"Create a MII image\")\n   public void testCreatingMIIImage() {\n \n-    // create the MII image\n-    // TODO add model files and other contents to the image once we have those resources\n-    boolean success = TestActions.createMIIImage(withWITParams());\n+    logger.info(\"WDT model directory is \" + MODEL_DIR);\n+\n+    // build the model file list\n+    List<String> modelList = Arrays.asList(MODEL_DIR + \"/\" + WDT_MODEL_FILE);\n \n+    // build an image using WebLogic Image Tool\n+    boolean success = TestActions.createMIIImage(\n+        withWITParams()\n+            .modelImageName(IMAGE_NAME)\n+            .modelImageTag(IMAGE_TAG)\n+            .modelFiles(modelList)\n+            .wdtVersion(\"latest\")\n+            .redirect(false));\n+ \n     assertEquals(true, success, \"Failed to create the image using WebLogic Deploy Tool\");\n+    TestAssertions.imageExists(IMAGE_NAME, IMAGE_TAG);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjIwMQ=="}, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjMyNw==", "bodyText": "needs a null check", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406327", "createdAt": "2020-04-04T01:38:15Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/ActionConstants.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.actions;\n+\n+public interface ActionConstants {\n+\n+  // Work directory for the integration test suite\n+  public static final String WORK_DIR \n+      = System.getProperty(\"java.io.tmpdir\") + \"/it-results\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjQwNg==", "bodyText": "typo - two slashes", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406406", "createdAt": "2020-04-04T01:38:56Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/ActionConstants.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.actions;\n+\n+public interface ActionConstants {\n+\n+  // Work directory for the integration test suite\n+  public static final String WORK_DIR \n+      = System.getProperty(\"java.io.tmpdir\") + \"/it-results\";\n+  // Directory for resources\n+  public static final String RESOURCE_DIR \n+      = System.getProperty(\"user.dir\") + \"/src/test/resources\"; \n+  // Directory for all WDT models\n+  public static final String MODEL_DIR = RESOURCE_DIR + \"/wdt-models\"; \n+  // Directory for download items\n+  public static final String DOWNLOAD_DIR = WORK_DIR + \"/download\";\n+  \n+  // ------------ WebLogicImageTool action constants -------------\n+  public static final String WLS = \"WLS\";\n+  public static final String JRF = \"JRF\";\n+  public static final String RJRF = \"RestrictedJRF\";\n+  public static final String WLS_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/weblogic\";\n+  public static final String JRF_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/fmw-infrastructure\";\n+  public static final String WLS_BASE_IMAGE_TAG = \"12.2.1.4\";\n+\n+  public static final String DEFAULT_MODEL_IMAGE_NAME = \"test-mii-image\";\n+  public static final String DEFAULT_MODEL_IMAGE_TAG  = \"v1\";\n+  \n+  // ------------ WebLogic Image Tool constants----------------------------\n+  public static final String WIT = \"WIT\";\n+  public static final String WDT = \"WDT\";\n+\n+  public static final String WIT_DOWNLOAD_URL \n+      = \"https://github.com//oracle/weblogic-image-tool\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjQzMQ==", "bodyText": "typo", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406431", "createdAt": "2020-04-04T01:39:06Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/ActionConstants.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.actions;\n+\n+public interface ActionConstants {\n+\n+  // Work directory for the integration test suite\n+  public static final String WORK_DIR \n+      = System.getProperty(\"java.io.tmpdir\") + \"/it-results\";\n+  // Directory for resources\n+  public static final String RESOURCE_DIR \n+      = System.getProperty(\"user.dir\") + \"/src/test/resources\"; \n+  // Directory for all WDT models\n+  public static final String MODEL_DIR = RESOURCE_DIR + \"/wdt-models\"; \n+  // Directory for download items\n+  public static final String DOWNLOAD_DIR = WORK_DIR + \"/download\";\n+  \n+  // ------------ WebLogicImageTool action constants -------------\n+  public static final String WLS = \"WLS\";\n+  public static final String JRF = \"JRF\";\n+  public static final String RJRF = \"RestrictedJRF\";\n+  public static final String WLS_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/weblogic\";\n+  public static final String JRF_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/fmw-infrastructure\";\n+  public static final String WLS_BASE_IMAGE_TAG = \"12.2.1.4\";\n+\n+  public static final String DEFAULT_MODEL_IMAGE_NAME = \"test-mii-image\";\n+  public static final String DEFAULT_MODEL_IMAGE_TAG  = \"v1\";\n+  \n+  // ------------ WebLogic Image Tool constants----------------------------\n+  public static final String WIT = \"WIT\";\n+  public static final String WDT = \"WDT\";\n+\n+  public static final String WIT_DOWNLOAD_URL \n+      = \"https://github.com//oracle/weblogic-image-tool\";\n+  public static final String WIT_VERSION    = \"release-1.8.3\";\n+  public static final String WIT_FILE_NAME  = \"imagetool.zip\";\n+\n+  public static final String WDT_DOWNLOAD_URL \n+      = \"https://github.com//oracle/weblogic-deploy-tooling\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjY0OA==", "bodyText": "this is ok, but i had to stop and think to work out what you meant here.\ni know this is uglier:\nif (type == WIT) {\n  return WIT_VERSION;\n} else if (type == WDT) {\n  return WDT_VERSION;\n} else {\n // do something!!!\n}\n\nbut it is much easier to read and immediately understand what you meant, plus it is more explicit about what do to if type is not WIT or WDT ..", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406648", "createdAt": "2020-04-04T01:41:29Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/InstallParams.java", "diffHunk": "@@ -53,7 +51,7 @@ public InstallParams version(String version) {\n \n   public String version() {\n     if (version == null) {\n-      return WIT_TYPE.equals(type) ? DEFAULT_WIT_VERSION : DEFAULT_WDT_VERSION;\n+      return WIT.equals(type) ? WIT_VERSION : WDT_VERSION;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjgzMA==", "bodyText": "the code does not appear to create any directories?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406830", "createdAt": "2020-04-04T01:42:57Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/InstallWITCommon.java", "diffHunk": "@@ -42,17 +36,17 @@ protected void checkDirectory(String dir) {\n   }\n \n   /**\n-   * Check if the required directoies exist.\n-   * Currently the directies will be created if missing. We may remove this function\n-   * once we have all required working directies pre-created.\n+   * Check if the required directories exist.\n+   * Currently the directories will be created if missing. We may remove this function", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjg2OQ==", "bodyText": "do we need to check that it is a file, not a directory or something else?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406869", "createdAt": "2020-04-04T01:43:20Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/InstallWITCommon.java", "diffHunk": "@@ -42,17 +36,17 @@ protected void checkDirectory(String dir) {\n   }\n \n   /**\n-   * Check if the required directoies exist.\n-   * Currently the directies will be created if missing. We may remove this function\n-   * once we have all required working directies pre-created.\n+   * Check if the required directories exist.\n+   * Currently the directories will be created if missing. We may remove this function\n+   * once we have all required working directories pre-created.\n    *\n    * @param dir the directory that needs to be checked\n    */\n   protected void checkFile(String fileName) throws FileNotFoundException {\n     File file = new File(fileName);\n     if (!file.exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjkwMw==", "bodyText": "\"was not found\"", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403406903", "createdAt": "2020-04-04T01:43:32Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/InstallWITCommon.java", "diffHunk": "@@ -42,17 +36,17 @@ protected void checkDirectory(String dir) {\n   }\n \n   /**\n-   * Check if the required directoies exist.\n-   * Currently the directies will be created if missing. We may remove this function\n-   * once we have all required working directies pre-created.\n+   * Check if the required directories exist.\n+   * Currently the directories will be created if missing. We may remove this function\n+   * once we have all required working directories pre-created.\n    *\n    * @param dir the directory that needs to be checked\n    */\n   protected void checkFile(String fileName) throws FileNotFoundException {\n     File file = new File(fileName);\n     if (!file.exists()) {\n-      logger.warning(\"The expected file \\\" + fileName + \\\" not found.\");\n-      throw new FileNotFoundException(\"The expected file \\\" + fileName + \\\" not found.\");\n+      logger.warning(\"The expected file \" + fileName + \" not found.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzAzOA==", "bodyText": "i think we should try to avoid inheritance as much as possible", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407038", "createdAt": "2020-04-04T01:44:08Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -5,17 +5,19 @@\n \n import java.io.File;\n \n+import static oracle.weblogic.kubernetes.actions.ActionConstants.DOWNLOAD_DIR;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.IMAGE_TOOL;\n import static oracle.weblogic.kubernetes.extensions.LoggedTest.logger;\n \n+\n /**\n  *  Implementation of actions that download/install tools for the uses to use.\n  *  NOTE: This class is a temporary solution, and may go away once we eventually\n  *  install everything before the Java test starts to run.\n  */\n \n public class Installer extends InstallWITCommon {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzIxMg==", "bodyText": "i am not sure what this is meant to do.\nare you trying to say - if the file DOES exist, then unzip it?\nor if it DOES NOT exist, and you asked me to unzip, then unzip it?\nseems we could write this with code that is longer, but much clearer", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407212", "createdAt": "2020-04-04T01:46:03Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -35,25 +37,25 @@ public boolean download() {\n     boolean downloadResult = true;\n     boolean unzipResult = true;\n     if (params.verify()\n-        && new File(downloadDir, params.fileName()).exists()) {\n+        && new File(DOWNLOAD_DIR, params.fileName()).exists()) {\n       logger.info(\"File \" + params.fileName() + \" already exists.\");\n     } else {\n       checkDirectory(WORK_DIR);\n       downloadResult = executeAndVerify(buildDownloadCommand(), params.direct());\n     }\n-    if (!(new File(downloadDir + \"../imagetool/imagetool.sh\").exists()) \n+    if (!(new File(IMAGE_TOOL).exists()) ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzI4Mg==", "bodyText": "I think String.format() would make this easier to read", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407282", "createdAt": "2020-04-04T01:46:42Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -35,25 +37,25 @@ public boolean download() {\n     boolean downloadResult = true;\n     boolean unzipResult = true;\n     if (params.verify()\n-        && new File(downloadDir, params.fileName()).exists()) {\n+        && new File(DOWNLOAD_DIR, params.fileName()).exists()) {\n       logger.info(\"File \" + params.fileName() + \" already exists.\");\n     } else {\n       checkDirectory(WORK_DIR);\n       downloadResult = executeAndVerify(buildDownloadCommand(), params.direct());\n     }\n-    if (!(new File(downloadDir + \"../imagetool/imagetool.sh\").exists()) \n+    if (!(new File(IMAGE_TOOL).exists()) \n         && params.unzip()) {\n-      unzipResult = unzip(downloadDir, params.fileName(), downloadDir + \"/..\");\n+      unzipResult = unzip();\n     }\n     return downloadResult && unzipResult;\n   }\n \n-  private boolean unzip(String path, String fileName, String targetDir) {\n+  private boolean unzip() {\n     String command = ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzQyOQ==", "bodyText": "i think this whole method could be better written as\nString command = String.format(\"...\", a, b, c, d);\nreturn command;", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407429", "createdAt": "2020-04-04T01:48:15Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -67,6 +69,6 @@ private String buildDownloadCommand() {\n     \n     return \"curl -fL \" ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzYwMw==", "bodyText": "didn't you literally just download it and check it was there a few lines ago?\ndo we need another check?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407603", "createdAt": "2020-04-04T01:49:29Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/WebLogicImageTool.java", "diffHunk": "@@ -55,7 +59,21 @@ public boolean updateImage() {\n     } \n \n     try {\n+      // check if the WIT binary exists, throws FileNotFoundException if the file does not exist", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzczMg==", "bodyText": "much better to build the string first, then return it - easier to debug", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407732", "createdAt": "2020-04-04T01:50:31Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/WebLogicImageTool.java", "diffHunk": "@@ -124,4 +142,35 @@ private String buildList(List<String> list) {\n     }\n     return strList;\n   }\n+  \n+  /**\n+   * Add WDT installer to the WebLogic Image Tool cache\n+   * @return true if the command succeeds \n+   */\n+  public boolean addInstaller() throws FileNotFoundException {\n+    try {\n+      checkFile(WDT_ZIP_PATH);\n+    } catch (FileNotFoundException fnfe) {\n+      logger.warning(\"Failed to create an image due to Exception: \" + fnfe.getMessage());\n+      throw fnfe;\n+    }\n+    return executeAndVerify(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzc3Ng==", "bodyText": "same", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407776", "createdAt": "2020-04-04T01:50:58Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/WebLogicImageTool.java", "diffHunk": "@@ -124,4 +142,35 @@ private String buildList(List<String> list) {\n     }\n     return strList;\n   }\n+  \n+  /**\n+   * Add WDT installer to the WebLogic Image Tool cache\n+   * @return true if the command succeeds \n+   */\n+  public boolean addInstaller() throws FileNotFoundException {\n+    try {\n+      checkFile(WDT_ZIP_PATH);\n+    } catch (FileNotFoundException fnfe) {\n+      logger.warning(\"Failed to create an image due to Exception: \" + fnfe.getMessage());\n+      throw fnfe;\n+    }\n+    return executeAndVerify(\n+        IMAGE_TOOL \n+        + \" cache addInstaller \"\n+        + \" --type wdt\"\n+        + \" --version \" + params.wdtVersion()\n+        + \" --path \" + WDT_ZIP_PATH);\n+  }\n+  \n+  /**\n+   * Delete the WDT installer cache entry from the WebLogic Image Tool\n+   * @return true if the command succeeds\n+   */\n+  public boolean deleteEntry() {\n+    return executeAndVerify(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzgyMA==", "bodyText": "maybe call this doesDockerImageExist so it is clearer what it does", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407820", "createdAt": "2020-04-04T01:51:28Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/TestAssertions.java", "diffHunk": "@@ -112,5 +113,15 @@ public static boolean adminT3ChannelAccessible(String domainUID, String namespac\n   public static boolean adminNodePortAccessible(String domainUID, String namespace) {\n     return Domain.adminNodePortAccessible(domainUID, namespace);\n   }\n+  \n+  /**\n+   * Check if a Docker image exists.\n+   * @param imageName - the name of the image to be checked\n+   * @param imageTag  - the tag of the image to be checked\n+   * @return true if the image does exist, false otherwise\n+   */\n+  public static boolean imageExists(String imageName, String imageTag) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzkxOA==", "bodyText": "imageTag is a variable right? not a string literal?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403407918", "createdAt": "2020-04-04T01:52:22Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/WITAssertion.java", "diffHunk": "@@ -0,0 +1,47 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.assertions.impl;\n+\n+import oracle.weblogic.kubernetes.utils.ExecCommand;\n+import oracle.weblogic.kubernetes.utils.ExecResult;\n+\n+import static oracle.weblogic.kubernetes.extensions.LoggedTest.logger;\n+\n+/**\n+ * Assertions for the results of WebLogic Image Tool operations\n+ */\n+\n+public class WITAssertion {\n+\n+  /**\n+   * Check if a Docker image exists.\n+   * @param imageName - the name of the image to be checked\n+   * @param imageTag  - the tag of the image to be checked\n+   * @return true if the image does exist, false otherwise\n+   */\n+  public static boolean imageExists(String imageName, String imageTag) {\n+    logger.info(\"Checking if image \" + imageName + \":\" + imageTag + \" exists.\");\n+    // verify the docker image is created\n+    try {\n+      ExecResult result = ExecCommand.exec(\n+          \"docker images | grep \" \n+          + imageName\n+          + \" | grep imageTag \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwODAwNg==", "bodyText": "why not grep for imageName + \":\" + imageTag", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403408006", "createdAt": "2020-04-04T01:52:59Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/WITAssertion.java", "diffHunk": "@@ -0,0 +1,47 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.assertions.impl;\n+\n+import oracle.weblogic.kubernetes.utils.ExecCommand;\n+import oracle.weblogic.kubernetes.utils.ExecResult;\n+\n+import static oracle.weblogic.kubernetes.extensions.LoggedTest.logger;\n+\n+/**\n+ * Assertions for the results of WebLogic Image Tool operations\n+ */\n+\n+public class WITAssertion {\n+\n+  /**\n+   * Check if a Docker image exists.\n+   * @param imageName - the name of the image to be checked\n+   * @param imageTag  - the tag of the image to be checked\n+   * @return true if the image does exist, false otherwise\n+   */\n+  public static boolean imageExists(String imageName, String imageTag) {\n+    logger.info(\"Checking if image \" + imageName + \":\" + imageTag + \" exists.\");\n+    // verify the docker image is created\n+    try {\n+      ExecResult result = ExecCommand.exec(\n+          \"docker images | grep \" \n+          + imageName\n+          + \" | grep imageTag \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzkxOA=="}, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwODE5MQ==", "bodyText": "or even better:\ndocker images -q imageName:imageTag which will return a single line with the image hash tag if it exists - no nothing if the image does not exist", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r403408191", "createdAt": "2020-04-04T01:54:32Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/WITAssertion.java", "diffHunk": "@@ -0,0 +1,47 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.assertions.impl;\n+\n+import oracle.weblogic.kubernetes.utils.ExecCommand;\n+import oracle.weblogic.kubernetes.utils.ExecResult;\n+\n+import static oracle.weblogic.kubernetes.extensions.LoggedTest.logger;\n+\n+/**\n+ * Assertions for the results of WebLogic Image Tool operations\n+ */\n+\n+public class WITAssertion {\n+\n+  /**\n+   * Check if a Docker image exists.\n+   * @param imageName - the name of the image to be checked\n+   * @param imageTag  - the tag of the image to be checked\n+   * @return true if the image does exist, false otherwise\n+   */\n+  public static boolean imageExists(String imageName, String imageTag) {\n+    logger.info(\"Checking if image \" + imageName + \":\" + imageTag + \" exists.\");\n+    // verify the docker image is created\n+    try {\n+      ExecResult result = ExecCommand.exec(\n+          \"docker images | grep \" \n+          + imageName\n+          + \" | grep imageTag \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNzkxOA=="}, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b01ad868593aeee9e4fbb79e190657d5dd392fc7", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b01ad868593aeee9e4fbb79e190657d5dd392fc7", "committedDate": "2020-04-05T14:51:58Z", "message": "Address review comments\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc13629589ff22e47b22e45cb2a15a5f5de8d146", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/fc13629589ff22e47b22e45cb2a15a5f5de8d146", "committedDate": "2020-04-06T00:19:57Z", "message": "Get rid of inheritance - move command methods to Command action/params and FileUtils\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5592e63fbd6732ee578d6a1e6d852d48e35fa1e7", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5592e63fbd6732ee578d6a1e6d852d48e35fa1e7", "committedDate": "2020-04-06T00:29:41Z", "message": "Minor java doc change\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8988531dc5a40cf58c8199d99f465dc1bfb2a1d8", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8988531dc5a40cf58c8199d99f465dc1bfb2a1d8", "committedDate": "2020-04-06T00:31:29Z", "message": "Merge remote-tracking branch 'origin/mii-new-integration-tests' into wit-action-test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e716caa8e06a35ecde2d28b8c52a55da409c6e3", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5e716caa8e06a35ecde2d28b8c52a55da409c6e3", "committedDate": "2020-04-06T00:35:41Z", "message": "Remove unused code\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6935b796b05337912ec05e3500bbe5a81320ee06", "committedDate": "2020-04-06T15:27:49Z", "message": "Minor style changes\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDQ1OTE2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#pullrequestreview-388445916", "createdAt": "2020-04-06T17:02:14Z", "commit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzowMjoxNFrOGBhWqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzoxMjozOVrOGBhv6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0ODIzMw==", "bodyText": "Line 32 doesn't seem correct.  string concatenation (so one string), wrapped with Arrays.asList(), why?  If its just one model and not a list, wouldn't you prefer to use Collections.singletonList()?  And yes, this slash should be File.separator.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404248233", "createdAt": "2020-04-06T17:02:14Z", "author": {"login": "ddsharpe"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItWITValidation.java", "diffHunk": "@@ -3,24 +3,45 @@\n \n package oracle.weblogic.kubernetes;\n \n+import java.util.Arrays;\n+import java.util.List;\n+\n import oracle.weblogic.kubernetes.actions.TestActions;\n+import oracle.weblogic.kubernetes.assertions.TestAssertions;\n import oracle.weblogic.kubernetes.extensions.LoggedTest;\n import org.junit.jupiter.api.DisplayName;\n import org.junit.jupiter.api.Test;\n \n+import static oracle.weblogic.kubernetes.actions.ActionConstants.MODEL_DIR;\n import static oracle.weblogic.kubernetes.actions.TestActions.withWITParams;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n \n @DisplayName(\"Simple validation of basic WIT functions\")\n class ItWITValidation implements LoggedTest {\n+  private static final String WDT_MODEL_FILE = \"model1-wls.yaml\";\n+  private static final String IMAGE_NAME = \"test-mii-image-2\";\n+  private static final String IMAGE_TAG = \"v1\";\n+  \n   @Test\n   @DisplayName(\"Create a MII image\")\n   public void testCreatingMIIImage() {\n \n-    // create the MII image\n-    // TODO add model files and other contents to the image once we have those resources\n-    boolean success = TestActions.createMIIImage(withWITParams());\n+    logger.info(\"WDT model directory is \" + MODEL_DIR);\n+\n+    // build the model file list\n+    List<String> modelList = Arrays.asList(MODEL_DIR + \"/\" + WDT_MODEL_FILE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjAyNQ=="}, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0OTg3OQ==", "bodyText": "I am okay without having a null check here.  If this fails, the build should fail.  Because this is in the test code, the NPE stacktrace is sufficient to debug it, in my opinion.  Shouldn't this \"/\" be File.separator also?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404249879", "createdAt": "2020-04-06T17:04:43Z", "author": {"login": "ddsharpe"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/ActionConstants.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.actions;\n+\n+public interface ActionConstants {\n+\n+  // Work directory for the integration test suite\n+  public static final String WORK_DIR \n+      = System.getProperty(\"java.io.tmpdir\") + \"/it-results\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjMyNw=="}, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI1MTY2Ng==", "bodyText": "I am okay to leave this here for now, but I think it would be easier to manage these versions from a property in the maven pom.xml.  Like  release-1.8.3  in the pom.xml for this test module.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404251666", "createdAt": "2020-04-06T17:07:39Z", "author": {"login": "ddsharpe"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/ActionConstants.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.actions;\n+\n+public interface ActionConstants {\n+\n+  // Work directory for the integration test suite\n+  public static final String WORK_DIR \n+      = System.getProperty(\"java.io.tmpdir\") + \"/it-results\";\n+  // Directory for resources\n+  public static final String RESOURCE_DIR \n+      = System.getProperty(\"user.dir\") + \"/src/test/resources\"; \n+  // Directory for all WDT models\n+  public static final String MODEL_DIR = RESOURCE_DIR + \"/wdt-models\"; \n+  // Directory for download items\n+  public static final String DOWNLOAD_DIR = WORK_DIR + \"/download\";\n+  \n+  // ------------ WebLogicImageTool action constants -------------\n+  public static final String WLS = \"WLS\";\n+  public static final String JRF = \"JRF\";\n+  public static final String RJRF = \"RestrictedJRF\";\n+  public static final String WLS_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/weblogic\";\n+  public static final String JRF_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/fmw-infrastructure\";\n+  public static final String WLS_BASE_IMAGE_TAG = \"12.2.1.4\";\n+\n+  public static final String DEFAULT_MODEL_IMAGE_NAME = \"test-mii-image\";\n+  public static final String DEFAULT_MODEL_IMAGE_TAG  = \"v1\";\n+  \n+  // ------------ WebLogic Image Tool constants----------------------------\n+  public static final String WIT = \"WIT\";\n+  public static final String WDT = \"WDT\";\n+\n+  public static final String WIT_DOWNLOAD_URL \n+      = \"https://github.com/oracle/weblogic-image-tool\";\n+  public static final String WIT_VERSION    = \"release-1.8.3\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI1MTg2Mw==", "bodyText": "same comment as wit version (above)", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404251863", "createdAt": "2020-04-06T17:07:56Z", "author": {"login": "ddsharpe"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/ActionConstants.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.actions;\n+\n+public interface ActionConstants {\n+\n+  // Work directory for the integration test suite\n+  public static final String WORK_DIR \n+      = System.getProperty(\"java.io.tmpdir\") + \"/it-results\";\n+  // Directory for resources\n+  public static final String RESOURCE_DIR \n+      = System.getProperty(\"user.dir\") + \"/src/test/resources\"; \n+  // Directory for all WDT models\n+  public static final String MODEL_DIR = RESOURCE_DIR + \"/wdt-models\"; \n+  // Directory for download items\n+  public static final String DOWNLOAD_DIR = WORK_DIR + \"/download\";\n+  \n+  // ------------ WebLogicImageTool action constants -------------\n+  public static final String WLS = \"WLS\";\n+  public static final String JRF = \"JRF\";\n+  public static final String RJRF = \"RestrictedJRF\";\n+  public static final String WLS_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/weblogic\";\n+  public static final String JRF_BASE_IMAGE_NAME \n+      = \"container-registry.oracle.com/middleware/fmw-infrastructure\";\n+  public static final String WLS_BASE_IMAGE_TAG = \"12.2.1.4\";\n+\n+  public static final String DEFAULT_MODEL_IMAGE_NAME = \"test-mii-image\";\n+  public static final String DEFAULT_MODEL_IMAGE_TAG  = \"v1\";\n+  \n+  // ------------ WebLogic Image Tool constants----------------------------\n+  public static final String WIT = \"WIT\";\n+  public static final String WDT = \"WDT\";\n+\n+  public static final String WIT_DOWNLOAD_URL \n+      = \"https://github.com/oracle/weblogic-image-tool\";\n+  public static final String WIT_VERSION    = \"release-1.8.3\";\n+  public static final String WIT_FILE_NAME  = \"imagetool.zip\";\n+\n+  public static final String WDT_DOWNLOAD_URL \n+      = \"https://github.com/oracle/weblogic-deploy-tooling\";\n+  public static final String WDT_VERSION    = \"weblogic-deploy-tooling-1.7.2\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI1NDY5Nw==", "bodyText": "Where there are this many \"if\" checks on type, it makes me think this should be two separate classes (that could extend the same base/interface).  It would also make it easier to read :)", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404254697", "createdAt": "2020-04-06T17:12:39Z", "author": {"login": "ddsharpe"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/InstallParams.java", "diffHunk": "@@ -53,7 +51,7 @@ public InstallParams version(String version) {\n \n   public String version() {\n     if (version == null) {\n-      return WIT_TYPE.equals(type) ? DEFAULT_WIT_VERSION : DEFAULT_WDT_VERSION;\n+      return WIT.equals(type) ? WIT_VERSION : WDT_VERSION;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNjY0OA=="}, "originalCommit": {"oid": "04301515cb86b18975f062fc4fbced6f5621f3c7"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDc0NjA0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#pullrequestreview-388474604", "createdAt": "2020-04-06T17:39:22Z", "commit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzozOToyMlrOGBixTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzozOToyMlrOGBixTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MTQzOA==", "bodyText": "Can you please remove commented out imports?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404271438", "createdAt": "2020-04-06T17:39:22Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/ActionImplCommon.java", "diffHunk": "@@ -4,9 +4,8 @@\n package oracle.weblogic.kubernetes.actions.impl;\n \n // import java.io.BufferedReader;\n-\n-import java.io.IOException;\n // import java.io.InputStreamReader;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDc2MDg0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#pullrequestreview-388476084", "createdAt": "2020-04-06T17:41:24Z", "commit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo0MToyNFrOGBi17A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo0MToyNFrOGBi17A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MjYyMA==", "bodyText": "Fluent style would have this method just be named params", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404272620", "createdAt": "2020-04-06T17:41:24Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/Installer.java", "diffHunk": "@@ -5,24 +5,42 @@\n \n import java.io.File;\n \n+import static oracle.weblogic.kubernetes.actions.ActionConstants.DOWNLOAD_DIR;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.IMAGE_TOOL;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.WORK_DIR;\n+import static oracle.weblogic.kubernetes.actions.impl.primitive.Command.defaultCommandParams;\n import static oracle.weblogic.kubernetes.extensions.LoggedTest.logger;\n+import static oracle.weblogic.kubernetes.utils.FileUtils.checkDirectory;\n+import static oracle.weblogic.kubernetes.utils.FileUtils.doesFileExist;\n+\n \n /**\n  *  Implementation of actions that download/install tools for the uses to use.\n  *  NOTE: This class is a temporary solution, and may go away once we eventually\n  *  install everything before the Java test starts to run.\n  */\n \n-public class Installer extends InstallWITCommon {\n-  // temporary dir, will fix this once we decide on the\n-  private static final String downloadDir = WORK_DIR + \"/download\";\n+public class Installer {\n+\n   private InstallParams params;\n+  \n+  /**\n+   * Set up the installer with default values\n+   * @return the installer instance \n+   */\n+  public static InstallParams defaultInstallParams() {\n+    return new InstallParams().defaults();\n+  }\n \n   /**\n    * Set up the installer with given parameters\n    * @return the installer instance \n    */\n-  public Installer with(InstallParams params) {\n+  public static Installer withParams(InstallParams params) {\n+    return new Installer().with(params);\n+  }\n+  \n+  private Installer with(InstallParams params) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDc2ODYw", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#pullrequestreview-388476860", "createdAt": "2020-04-06T17:42:30Z", "commit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo0MjozMFrOGBi4bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo0MjozMFrOGBi4bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3MzI2MA==", "bodyText": "Why warnings?  These should either be asserts that fail the test or they aren't important.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404273260", "createdAt": "2020-04-06T17:42:30Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/WebLogicImageTool.java", "diffHunk": "@@ -55,30 +65,45 @@ public boolean updateImage() {\n     } \n \n     try {\n-      checkFile(IMAGE_TOOL);\n+      // delete the old cache entry for the WDT installer\n+      if (!deleteEntry()) {\n+        logger.warning(\"Failed to delete cache entry in WebLogic Image Tool\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDc3NDc5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#pullrequestreview-388477479", "createdAt": "2020-04-06T17:43:20Z", "commit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo0MzoyMVrOGBi6gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo0MzoyMVrOGBi6gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3Mzc5Mg==", "bodyText": "Same.  If the file isn't found then this should fail the test.  I don't want to have to search the test logs for warnings to figure out why something later failed.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404273792", "createdAt": "2020-04-06T17:43:21Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/primitive/WebLogicImageTool.java", "diffHunk": "@@ -124,4 +149,46 @@ private String buildList(List<String> list) {\n     }\n     return strList;\n   }\n+  \n+  /**\n+   * Add WDT installer to the WebLogic Image Tool cache\n+   * @return true if the command succeeds \n+   */\n+  public boolean addInstaller() throws FileNotFoundException {\n+    try {\n+      checkFile(WDT_ZIP_PATH);\n+    } catch (FileNotFoundException fnfe) {\n+      logger.warning(\"Failed to create an image due to Exception: \" + fnfe.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "originalPosition": 110}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDc3ODE2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#pullrequestreview-388477816", "createdAt": "2020-04-06T17:43:46Z", "commit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo0Mzo0NlrOGBi7kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo0Mzo0NlrOGBi7kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NDA2NA==", "bodyText": "Don't need dashes in javadoc.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404274064", "createdAt": "2020-04-06T17:43:46Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/TestAssertions.java", "diffHunk": "@@ -152,5 +153,15 @@ public static boolean adminT3ChannelAccessible(String domainUID, String namespac\n   public static boolean adminNodePortAccessible(String domainUID, String namespace) {\n     return Domain.adminNodePortAccessible(domainUID, namespace);\n   }\n+  \n+  /**\n+   * Check if a Docker image exists.\n+   * @param imageName - the name of the image to be checked", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDc4NDg1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#pullrequestreview-388478485", "createdAt": "2020-04-06T17:44:41Z", "commit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo0NDo0MVrOGBi9_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo0NDo0MVrOGBi9_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NDY4NA==", "bodyText": "Don't need \"assert\" in name.  This can just be doesDockerImageExist()", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404274684", "createdAt": "2020-04-06T17:44:41Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/TestAssertions.java", "diffHunk": "@@ -152,5 +153,15 @@ public static boolean adminT3ChannelAccessible(String domainUID, String namespac\n   public static boolean adminNodePortAccessible(String domainUID, String namespace) {\n     return Domain.adminNodePortAccessible(domainUID, namespace);\n   }\n+  \n+  /**\n+   * Check if a Docker image exists.\n+   * @param imageName - the name of the image to be checked\n+   * @param imageTag  - the tag of the image to be checked\n+   * @return true if the image does exist, false otherwise\n+   */\n+  public static boolean assertDockerImageExists(String imageName, String imageTag) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDc5NDY1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#pullrequestreview-388479465", "createdAt": "2020-04-06T17:46:05Z", "commit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo0NjowNVrOGBjBWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo0NjowNVrOGBjBWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NTU0Nw==", "bodyText": "This loses the stack trace. @ddsharpe, do we have a pattern for this?  That should at least include using the variant of warning() that takes the exception and not just the message.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#discussion_r404275547", "createdAt": "2020-04-06T17:46:05Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/WITAssertion.java", "diffHunk": "@@ -0,0 +1,48 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes.assertions.impl;\n+\n+import oracle.weblogic.kubernetes.utils.ExecCommand;\n+import oracle.weblogic.kubernetes.utils.ExecResult;\n+\n+import static oracle.weblogic.kubernetes.extensions.LoggedTest.logger;\n+\n+/**\n+ * Assertions for the results of WebLogic Image Tool operations\n+ */\n+\n+public class WITAssertion {\n+\n+  /**\n+   * Check if a Docker image exists.\n+   * @param imageName - the name of the image to be checked\n+   * @param imageTag  - the tag of the image to be checked\n+   * @return true if the image does exist, false otherwise\n+   */\n+  public static boolean doesImageExist(String imageName, String imageTag) {\n+    logger.info(\"Checking if image \" + imageName + \":\" + imageTag + \" exists.\");\n+    // verify the docker image is created\n+    try {\n+      ExecResult result = ExecCommand.exec(\n+          \"docker images -q \" \n+          + imageName\n+          + \":\"\n+          + imageTag\n+          + \"| wc -l\");\n+          \n+      if (Integer.parseInt(result.stdout().trim()) != 1) {\n+        return false;\n+      }\n+    } catch (Exception e) {\n+      logger.warning(\"Failed to check if Docker image \" \n+          + imageName \n+          + \":\" \n+          + imageTag\n+          + \"exists due to Exception: \" \n+          + e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDgwMTQ0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#pullrequestreview-388480144", "createdAt": "2020-04-06T17:47:04Z", "commit": {"oid": "6935b796b05337912ec05e3500bbe5a81320ee06"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c2f98dd3e347d327c152e090dec920992715491", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1c2f98dd3e347d327c152e090dec920992715491", "committedDate": "2020-04-06T18:09:01Z", "message": "Remove imports and code that have been commented out\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51e39d99542da4cdbd52433ded619f659899abd9", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/51e39d99542da4cdbd52433ded619f659899abd9", "committedDate": "2020-04-06T18:27:50Z", "message": "Rename assertion method name and fix javadoc\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f58a3c93a7e779796cd82888a033763fb5293939", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f58a3c93a7e779796cd82888a033763fb5293939", "committedDate": "2020-04-06T20:30:00Z", "message": "Address review comment\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddcb723eda98fb9124a41ecb18cfa2ae83f07385", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ddcb723eda98fb9124a41ecb18cfa2ae83f07385", "committedDate": "2020-04-06T20:39:44Z", "message": "Change with() to params()\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e384c04b635ed7ac56347d4dabf33e9a06986c1", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2e384c04b635ed7ac56347d4dabf33e9a06986c1", "committedDate": "2020-04-06T21:34:25Z", "message": "Add assertions\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bbc7d9510a89378f94da464367aeedc8fd560ab", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6bbc7d9510a89378f94da464367aeedc8fd560ab", "committedDate": "2020-04-06T21:42:04Z", "message": "Merge remote-tracking branch 'origin/mii-new-integration-tests' into wit-action-test\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>\n\nConflicts:\n\tnew-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32b7b810a806f02a05b3a49247d618396e5c648a", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/32b7b810a806f02a05b3a49247d618396e5c648a", "committedDate": "2020-04-06T23:05:03Z", "message": "Avoid type checks\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51fc7c807b7c2999490d107d854525e35e705a7b", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/51fc7c807b7c2999490d107d854525e35e705a7b", "committedDate": "2020-04-06T23:12:43Z", "message": "move WIT/WDT versions to pom.xml\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c730b5a4e452c6ac2543937636c49453329a72a", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5c730b5a4e452c6ac2543937636c49453329a72a", "committedDate": "2020-04-07T13:24:10Z", "message": "Remove a class that is no longer needed\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "671327934f2efd6a4263c08313db734bbdb3eadb", "author": {"user": {"login": "doxiao", "name": "Dongbo Xiao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/671327934f2efd6a4263c08313db734bbdb3eadb", "committedDate": "2020-04-07T13:38:20Z", "message": "Minor cleanup\n\nSigned-off-by: doxiao <dongbo.xiao@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MjAyNjE3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#pullrequestreview-389202617", "createdAt": "2020-04-07T14:57:52Z", "commit": {"oid": "671327934f2efd6a4263c08313db734bbdb3eadb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MjA2MTM5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1534#pullrequestreview-389206139", "createdAt": "2020-04-07T15:01:08Z", "commit": {"oid": "671327934f2efd6a4263c08313db734bbdb3eadb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4979, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}