{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMTM4NTYy", "number": 1767, "title": "Adding JRF domain into ItJrfDomainInPV ", "bodyText": "This PR is to 1) add JRF domain on PV into test class ItJrfDomainInPV and verify the servers startup and services are created; 2) fix intermittent DB pod creation failure on the remote cluster\nJenkins cluster test result:\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-model-in-image-tests-1/43/testReport/\nKind cluster test result:\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/506/testReport/oracle.weblogic.kubernetes/", "createdAt": "2020-06-25T16:42:23Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1767", "merged": true, "mergeCommit": {"oid": "29f22ffa8a923a8b9029dc4d1cacc888ad5eb253"}, "closed": true, "closedAt": "2020-06-29T19:41:51Z", "author": {"login": "maggiehe00"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpUzbTgH2gAyNDQwMTM4NTYyOjg0MzFmZTY2NzAxYjE2ZWY2OTkwODc3YTUwZGQwOGE3MzJkMzY0ODM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwFJeHgFqTQzOTM4NzMxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8431fe66701b16ef6990877a50dd08a732d36483", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8431fe66701b16ef6990877a50dd08a732d36483", "committedDate": "2020-06-08T18:31:15Z", "message": "first cut for junit5 JRF"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dc8de3be05fb8e3f358dc5ac28dbba0302b93c7", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0dc8de3be05fb8e3f358dc5ac28dbba0302b93c7", "committedDate": "2020-06-10T21:01:48Z", "message": "first working version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3dde26beb1135bebe0382d97807349dcdc85dabf", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3dde26beb1135bebe0382d97807349dcdc85dabf", "committedDate": "2020-06-11T14:14:54Z", "message": "add the missing files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac18848d688a50219d80d758a6429fc93056c696", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ac18848d688a50219d80d758a6429fc93056c696", "committedDate": "2020-06-11T21:09:22Z", "message": "fix SSL connection closed issue and Kind image pull issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8ad23e518f9460b24f32d6913b5ab571e27b879", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f8ad23e518f9460b24f32d6913b5ab571e27b879", "committedDate": "2020-06-12T02:14:27Z", "message": "increase retry time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66151869f9ecec705fb35a2fd4a9f15bec75ed7a", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/66151869f9ecec705fb35a2fd4a9f15bec75ed7a", "committedDate": "2020-06-12T16:02:22Z", "message": "ignore SSLProtocolException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1962c85a2e1b1a1ec6d5c6b6bb8e4b781e423bf", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d1962c85a2e1b1a1ec6d5c6b6bb8e4b781e423bf", "committedDate": "2020-06-12T18:02:25Z", "message": "minor change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d3cee06b6539bdef3ef6aea3aaa75227e4e741d", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2d3cee06b6539bdef3ef6aea3aaa75227e4e741d", "committedDate": "2020-06-12T20:59:56Z", "message": "merge to the latest devlop branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b938abd359aa3d42b62dc71f546b2ec3285fc07e", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b938abd359aa3d42b62dc71f546b2ec3285fc07e", "committedDate": "2020-06-15T20:53:41Z", "message": "cleanup the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "553d1701be4ec7ef7870eaf9d823d7e8cfac065a", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/553d1701be4ec7ef7870eaf9d823d7e8cfac065a", "committedDate": "2020-06-15T21:42:44Z", "message": "minor cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f9a150a686116c93d2ae84f0c3d60ae100d6d78", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6f9a150a686116c93d2ae84f0c3d60ae100d6d78", "committedDate": "2020-06-15T21:47:39Z", "message": "Merge remote-tracking branch 'origin/develop' into junit5-jrf1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bc96a8cfe106880530cf0607d3e435b110fd127", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3bc96a8cfe106880530cf0607d3e435b110fd127", "committedDate": "2020-06-16T20:51:29Z", "message": "address the review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d83a70dcd91fdfaafd8abe8b3adfa4b149718558", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d83a70dcd91fdfaafd8abe8b3adfa4b149718558", "committedDate": "2020-06-17T15:22:00Z", "message": "Merge remote-tracking branch 'origin/develop' into junit5-jrf1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33bdbc27bd7eef51be1932b67d7e30adcde450ee", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/33bdbc27bd7eef51be1932b67d7e30adcde450ee", "committedDate": "2020-06-17T18:32:29Z", "message": "addressed more review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b362155fc7f3a2bffe01e0a18262720648046420", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b362155fc7f3a2bffe01e0a18262720648046420", "committedDate": "2020-06-21T19:44:41Z", "message": "first cut of ItJrfDomainInPV"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9c4be9511e700597fbd11ee060fbd642479944a", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c9c4be9511e700597fbd11ee060fbd642479944a", "committedDate": "2020-06-22T21:53:19Z", "message": "merge to the latest develop branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62347c4c7d6d0d44fa76eaef80e987da10e2fafe", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/62347c4c7d6d0d44fa76eaef80e987da10e2fafe", "committedDate": "2020-06-23T01:06:18Z", "message": "minor change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6d682f17e94534ffbb5112070bc8df2b6cb304a", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d6d682f17e94534ffbb5112070bc8df2b6cb304a", "committedDate": "2020-06-24T20:22:51Z", "message": "increase RCU pooling time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "823086047ee30ee822926664efe8289df6bd745d", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/823086047ee30ee822926664efe8289df6bd745d", "committedDate": "2020-06-24T20:41:59Z", "message": "move DB/RCU to initAll"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32e9a624f409e56dd89c7a4e656ffda9983f4856", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/32e9a624f409e56dd89c7a4e656ffda9983f4856", "committedDate": "2020-06-24T21:25:37Z", "message": "merge to the latest develop branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c97125d101994bf52db3ee6d7b2afb20e8c5c5e2", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c97125d101994bf52db3ee6d7b2afb20e8c5c5e2", "committedDate": "2020-06-24T22:23:18Z", "message": "cleanup the code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MDAwMTAz", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1767#pullrequestreview-438000103", "createdAt": "2020-06-26T04:06:35Z", "commit": {"oid": "c97125d101994bf52db3ee6d7b2afb20e8c5c5e2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNDowNjozNlrOGpTBOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNDoxOTowNFrOGpTLJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1NjQwOA==", "bodyText": "Do not evaluate and assign this until you are ready to use it.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1767#discussion_r445956408", "createdAt": "2020-06-26T04:06:36Z", "author": {"login": "sankarpn"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfDomainInPV.java", "diffHunk": "@@ -41,7 +79,10 @@\n   private static final String RCUSCHEMAPREFIX = \"jrfdomainpv\";\n   private static final String ORACLEDBURLPREFIX = \"oracledb.\";\n   private static final String ORACLEDBSUFFIX = \".svc.cluster.local:1521/devpdb.k8s\";\n-\n+  private static final String RCUSYSUSERNAME = \"sys\";\n+  private static final String RCUSYSPASSWORD = \"Oradoc_db1\";\n+  private static final String RCUSCHEMAUSERNAME = \"myrcuuser\";\n+  private static final String RCUSCHEMAPASSWORD = \"Oradoc_db1\";\n \n   private static String dbUrl = null;\n   private static int dbPort = getNextFreePort(30000, 32767);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c97125d101994bf52db3ee6d7b2afb20e8c5c5e2"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1NjkyOA==", "bodyText": "Now you need to initialize the logger in this method and remove the implements LoggedTest.\nSee #1765", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1767#discussion_r445956928", "createdAt": "2020-06-26T04:09:11Z", "author": {"login": "sankarpn"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfDomainInPV.java", "diffHunk": "@@ -65,38 +110,31 @@\n    * @param namespaces injected by JUnit\n    */\n   @BeforeAll\n-  public static void initAll(@Namespaces(1) List<String> namespaces) {\n+  public static void initAll(@Namespaces(3) List<String> namespaces) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c97125d101994bf52db3ee6d7b2afb20e8c5c5e2"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1NzkxOQ==", "bodyText": "Move the checkServiceExists before checkPodReady for both admin and managed server pods.\nThere are instances where when service creation fails, the pods never become ready and the error log messages will be misleading", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1767#discussion_r445957919", "createdAt": "2020-06-26T04:13:57Z", "author": {"login": "sankarpn"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfDomainInPV.java", "diffHunk": "@@ -114,21 +152,196 @@ public static void initAll(@Namespaces(1) List<String> namespaces) {\n    * Create a JRF domain using WLST in a persistent volume.\n    * Create a domain custom resource with domainHomeSourceType as PersistentVolume.\n    * Verify domain pods runs in ready state and services are created.\n-   * Verify login to WebLogic console is successful.\n    */\n   @Test\n   @DisplayName(\"Create JRF domain in PV using WLST script\")\n   public void testJrfDomainInPvUsingWlst() {\n+    final String clusterName = \"cluster-jrfdomain-inpv\";\n+    final String adminServerName = \"wlst-admin-server\";\n+    final String adminServerPodName = domainUid + \"-\" + adminServerName;\n+    final String managedServerNameBase = \"wlst-ms-\";\n+    final int managedServerPort = 8001;\n+    final String managedServerPodNamePrefix = domainUid + \"-\" + managedServerNameBase;\n+    final int replicaCount = 2;\n+    final int t3ChannelPort = getNextFreePort(30000, 32767);\n+\n+    final String pvName = domainUid + \"-pv\";\n+    final String pvcName = domainUid + \"-pvc\";\n+\n+    // create pull secrets for jrfDomainNamespace when running in non Kind Kubernetes cluster\n+    if (isUseSecret) {\n+      createDockerRegistrySecret(OCR_USERNAME, OCR_PASSWORD,\n+          OCR_EMAIL, OCR_REGISTRY, OCR_SECRET_NAME, jrfDomainNamespace);\n+    }\n+\n+    // create JRF domain credential secret\n+    createSecretWithUsernamePassword(wlSecretName, jrfDomainNamespace,\n+        ADMIN_USERNAME_DEFAULT, ADMIN_PASSWORD_DEFAULT);\n+\n+    // create RCU credential secret\n+    CommonTestUtils.createRcuSecretWithUsernamePassword(rcuSecretName, jrfDomainNamespace,\n+        RCUSCHEMAUSERNAME, RCUSCHEMAPASSWORD, RCUSYSUSERNAME, RCUSYSPASSWORD);\n+\n+    // create persistent volume and persistent volume claim for domain\n+    CommonTestUtils.createPV(pvName, domainUid, this.getClass().getSimpleName());\n+    CommonTestUtils.createPVC(pvName, pvcName, domainUid, jrfDomainNamespace);\n+\n+    // create a temporary WebLogic domain property file\n+    File domainPropertiesFile = assertDoesNotThrow(() ->\n+            File.createTempFile(\"domain\", \"properties\"),\n+        \"Failed to create domain properties file\");\n+    Properties p = new Properties();\n+    p.setProperty(\"oracleHome\", \"/u01/oracle\"); //default $ORACLE_HOME\n+    p.setProperty(\"javaHome\", \"/u01/jdk\"); //default $JAVA_HOME\n+    p.setProperty(\"domainParentDir\", \"/shared/domains/\");\n+    p.setProperty(\"domainName\", domainUid);\n+    p.setProperty(\"domainUser\", ADMIN_USERNAME_DEFAULT);\n+    p.setProperty(\"domainPassword\", ADMIN_PASSWORD_DEFAULT);\n+    p.setProperty(\"rcuDb\", dbUrl);\n+    p.setProperty(\"rcuSchemaPrefix\", RCUSCHEMAPREFIX);\n+    p.setProperty(\"rcuSchemaPassword\", RCUSCHEMAPASSWORD);\n+    p.setProperty(\"adminListenPort\", \"7001\");\n+    p.setProperty(\"adminName\", adminServerName);\n+    p.setProperty(\"managedNameBase\", managedServerNameBase);\n+    p.setProperty(\"managedServerPort\",Integer.toString(managedServerPort));\n+    p.setProperty(\"prodMode\", \"true\");\n+    p.setProperty(\"managedCount\", \"4\");\n+    p.setProperty(\"clusterName\", clusterName);\n+    p.setProperty(\"t3ChannelPublicAddress\", K8S_NODEPORT_HOST);\n+    p.setProperty(\"t3ChannelPort\", Integer.toString(t3ChannelPort));\n+    p.setProperty(\"exposeAdminT3Channel\", \"true\");\n+\n+    assertDoesNotThrow(() ->\n+            p.store(new FileOutputStream(domainPropertiesFile), \"jrf wlst properties file\"),\n+        \"Failed to write domain properties file\");\n+\n+    // WLST script for creating domain\n+    Path wlstScript = Paths.get(RESOURCE_DIR, \"python-scripts\", \"jrf-wlst-create-domain-onpv.py\");\n+\n+    // create configmap and domain on persistent volume using the WLST script and property file\n+    createDomainOnPVUsingWlst(wlstScript, domainPropertiesFile.toPath(),\n+        pvName, pvcName, jrfDomainNamespace);\n+\n+    // create a domain custom resource configuration object\n+    logger.info(\"Creating domain custom resource\");\n+    Domain domain = new Domain()\n+        .apiVersion(DOMAIN_API_VERSION)\n+        .kind(\"Domain\")\n+        .metadata(new V1ObjectMeta()\n+            .name(domainUid)\n+            .namespace(jrfDomainNamespace))\n+        .spec(new DomainSpec()\n+            .domainUid(domainUid)\n+            .domainHome(\"/shared/domains/\" + domainUid)  // point to domain home in pv\n+            .domainHomeSourceType(\"PersistentVolume\") // set the domain home source type as pv\n+            .image(fmwImage)\n+            .imagePullPolicy(\"IfNotPresent\")\n+            .imagePullSecrets(isUseSecret ? Arrays.asList(\n+                new V1LocalObjectReference()\n+                    .name(OCR_SECRET_NAME))\n+                : null)\n+            .webLogicCredentialsSecret(new V1SecretReference()\n+                .name(wlSecretName)\n+                .namespace(jrfDomainNamespace))\n+            .includeServerOutInPodLog(true)\n+            .logHomeEnabled(Boolean.TRUE)\n+            .logHome(\"/shared/logs/\" + domainUid)\n+            .dataHome(\"\")\n+            .serverStartPolicy(\"IF_NEEDED\")\n+            .serverPod(new ServerPod() //serverpod\n+                .addEnvItem(new V1EnvVar()\n+                    .name(\"JAVA_OPTIONS\")\n+                    .value(\"-Dweblogic.StdoutDebugEnabled=false\"))\n+                .addEnvItem(new V1EnvVar()\n+                    .name(\"USER_MEM_ARGS\")\n+                    .value(\"-Djava.security.egd=file:/dev/./urandom \"))\n+                .addVolumesItem(new V1Volume()\n+                    .name(pvName)\n+                    .persistentVolumeClaim(new V1PersistentVolumeClaimVolumeSource()\n+                        .claimName(pvcName)))\n+                .addVolumeMountsItem(new V1VolumeMount()\n+                    .mountPath(\"/shared\")\n+                    .name(pvName)))\n+            .adminServer(new AdminServer() //admin server\n+                .serverStartState(\"RUNNING\")\n+                .adminService(new AdminService()\n+                    .addChannelsItem(new Channel()\n+                        .channelName(\"default\")\n+                        .nodePort(0))\n+                    .addChannelsItem(new Channel()\n+                        .channelName(\"T3Channel\")\n+                        .nodePort(t3ChannelPort))))\n+            .addClustersItem(new Cluster() //cluster\n+                .clusterName(clusterName)\n+                .replicas(replicaCount)\n+                .serverStartState(\"RUNNING\")));\n+\n+    // verify the domain custom resource is created\n+    createDomainAndVerify(domain, jrfDomainNamespace);\n+\n+    // verify admin server pod is ready\n+    checkPodReady(adminServerPodName, domainUid, jrfDomainNamespace);\n+\n+    // verify the admin server service created\n+    checkServiceExists(adminServerPodName, jrfDomainNamespace);\n+\n+    // verify managed server pods are ready\n+    for (int i = 1; i <= replicaCount; i++) {\n+      logger.info(\"Waiting for managed server pod {0} to be ready in namespace {1}\",\n+          managedServerPodNamePrefix + i, jrfDomainNamespace);\n+      checkPodReady(managedServerPodNamePrefix + i, domainUid, jrfDomainNamespace);\n+    }\n+\n+    // verify managed server services created\n+    for (int i = 1; i <= replicaCount; i++) {\n+      logger.info(\"Checking managed server service {0} is created in namespace {1}\",\n+          managedServerPodNamePrefix + i, jrfDomainNamespace);\n+      checkServiceExists(managedServerPodNamePrefix + i, jrfDomainNamespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c97125d101994bf52db3ee6d7b2afb20e8c5c5e2"}, "originalPosition": 282}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1ODM4NA==", "bodyText": "missing params sysUsername and sysPassword in javadoc", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1767#discussion_r445958384", "createdAt": "2020-06-26T04:16:05Z", "author": {"login": "sankarpn"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -1080,6 +1105,31 @@ public static void createSecretWithUsernamePassword(String secretName,\n     assertTrue(secretCreated, String.format(\"create secret failed for %s\", secretName));\n   }\n \n+  /**\n+   * Create a RCU secret with username, password and sys_username, sys_password in the specified namespace.\n+   *\n+   * @param secretName secret name to create\n+   * @param namespace namespace in which the secret will be created\n+   * @param username username in the secret\n+   * @param password passowrd in the secret\n+   */\n+  public static void createRcuSecretWithUsernamePassword(String secretName, String namespace,\n+      String username, String password, String sysUsername, String sysPassword) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c97125d101994bf52db3ee6d7b2afb20e8c5c5e2"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1ODgwNw==", "bodyText": "You need to get logger in each method it looks like.\nLoggingFacade logger = getLogger();", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1767#discussion_r445958807", "createdAt": "2020-06-26T04:18:15Z", "author": {"login": "sankarpn"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -1660,8 +1710,223 @@ public static Path generateFileFromTemplate(\n     String out = targetFile.toString();\n     for (Map.Entry<String, String> entry : templateMap.entrySet()) {\n       logger.info(\"Replacing String {0} with the value {1}\", entry.getKey(), entry.getValue());\n-      replaceStringInFile(out, entry.getKey(), entry.getValue()); \n+      replaceStringInFile(out, entry.getKey(), entry.getValue());\n     }\n     return targetFile;\n   }\n+\n+  /**\n+  * Create a persistent volume.\n+   *\n+   * @param pvName name of the persistent volume to create\n+   * @param domainUid domain UID\n+   * @param className name of the class to call this method\n+   */\n+  public static void createPV(String pvName, String domainUid, String className) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c97125d101994bf52db3ee6d7b2afb20e8c5c5e2"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1ODk0OQ==", "bodyText": "create logger, same applies for methods you are adding.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1767#discussion_r445958949", "createdAt": "2020-06-26T04:19:04Z", "author": {"login": "sankarpn"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -1660,8 +1710,223 @@ public static Path generateFileFromTemplate(\n     String out = targetFile.toString();\n     for (Map.Entry<String, String> entry : templateMap.entrySet()) {\n       logger.info(\"Replacing String {0} with the value {1}\", entry.getKey(), entry.getValue());\n-      replaceStringInFile(out, entry.getKey(), entry.getValue()); \n+      replaceStringInFile(out, entry.getKey(), entry.getValue());\n     }\n     return targetFile;\n   }\n+\n+  /**\n+  * Create a persistent volume.\n+   *\n+   * @param pvName name of the persistent volume to create\n+   * @param domainUid domain UID\n+   * @param className name of the class to call this method\n+   */\n+  public static void createPV(String pvName, String domainUid, String className) {\n+    logger.info(\"creating persistent volume for pvName {0}, domainUid: {1}, className: {2}\",\n+        pvName, domainUid, className);\n+    Path pvHostPath = null;\n+    try {\n+      pvHostPath = Files.createDirectories(Paths.get(\n+          PV_ROOT, className, pvName));\n+      logger.info(\"Creating PV directory host path {0}\", pvHostPath);\n+      org.apache.commons.io.FileUtils.deleteDirectory(pvHostPath.toFile());\n+      Files.createDirectories(pvHostPath);\n+    } catch (IOException ioex) {\n+      logger.severe(ioex.getMessage());\n+      fail(\"Create persistent volume host path failed\");\n+    }\n+\n+    V1PersistentVolume v1pv = new V1PersistentVolume()\n+        .spec(new V1PersistentVolumeSpec()\n+            .addAccessModesItem(\"ReadWriteMany\")\n+            .storageClassName(\"weblogic-domain-storage-class\")\n+            .volumeMode(\"Filesystem\")\n+            .putCapacityItem(\"storage\", Quantity.fromString(\"5Gi\"))\n+            .persistentVolumeReclaimPolicy(\"Recycle\")\n+            .accessModes(Arrays.asList(\"ReadWriteMany\"))\n+            .hostPath(new V1HostPathVolumeSource()\n+                .path(pvHostPath.toString())))\n+        .metadata(new V1ObjectMeta()\n+            .name(pvName)\n+            .putLabelsItem(\"weblogic.resourceVersion\", \"domain-v2\")\n+            .putLabelsItem(\"weblogic.domainUid\", domainUid));\n+    boolean success = assertDoesNotThrow(() -> createPersistentVolume(v1pv),\n+        \"Failed to create persistent volume\");\n+    assertTrue(success, \"PersistentVolume creation failed\");\n+  }\n+\n+  /**\n+   * Create a persistent volume claim.\n+   *\n+   * @param pvName name of the persistent volume\n+   * @param pvcName name of the persistent volume claim to create\n+   * @param domainUid UID of the WebLogic domain\n+   * @param namespace name of the namespace in which to create the persistent volume claim\n+   */\n+  public static void createPVC(String pvName, String pvcName, String domainUid, String namespace) {\n+    logger.info(\"creating persistent volume claim for pvName {0}, pvcName {1}, \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c97125d101994bf52db3ee6d7b2afb20e8c5c5e2"}, "originalPosition": 181}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eee31d281693988d9ec350334c0573b99e8807f1", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/eee31d281693988d9ec350334c0573b99e8807f1", "committedDate": "2020-06-26T18:13:31Z", "message": "merge to the latest develop branch and address the review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c97caba477625a54226d70002c49fc60f09be218", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c97caba477625a54226d70002c49fc60f09be218", "committedDate": "2020-06-26T18:38:06Z", "message": "move verify managed server service before checkcheckPodReady"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NTM4MDE5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1767#pullrequestreview-438538019", "createdAt": "2020-06-26T19:17:46Z", "commit": {"oid": "c97caba477625a54226d70002c49fc60f09be218"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa0edfe6502d2280a2e26fd0bfde9eff3d49527f", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/aa0edfe6502d2280a2e26fd0bfde9eff3d49527f", "committedDate": "2020-06-29T15:02:36Z", "message": "minor change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4fa21e3bad106442443d7a26db2717bb053f7a9", "author": {"user": {"login": "maggiehe00", "name": "Maggie He"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c4fa21e3bad106442443d7a26db2717bb053f7a9", "committedDate": "2020-06-29T15:50:52Z", "message": "Merge remote-tracking branch 'origin/develop' into junit5-jrf2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MzgxNzcz", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1767#pullrequestreview-439381773", "createdAt": "2020-06-29T18:05:55Z", "commit": {"oid": "c4fa21e3bad106442443d7a26db2717bb053f7a9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5Mzg3MzE5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1767#pullrequestreview-439387319", "createdAt": "2020-06-29T18:14:19Z", "commit": {"oid": "c4fa21e3bad106442443d7a26db2717bb053f7a9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4597, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}