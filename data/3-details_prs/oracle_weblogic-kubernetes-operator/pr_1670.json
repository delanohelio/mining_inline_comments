{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNjU2ODcz", "number": 1670, "title": "Add new rolling re-start assertion to ItClasses", "bodyText": "Add the new rolling restart assertion (verifyRollingRestartOccurred) to following ItClasses  ItMiiConfigMapOverride, ItMiiAddCluster and ItMiiChangeAdminCredentials\nAdded following utility method(s) to utils/CommonTestUtils.java\ngetPodCreationTime()\nRemoved local methods checkPodCreated/checkServiceCreated to replace with methods from\nutils/CommonTestUtils.java\nAdded a new action method patchDomainResourceWithNewRestartVersion() to restart a domain with new Restart Version.\nExternal Jenkin Runs\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/182/  ( all passed)\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-model-in-image-tests-10/181/    ( all passed )", "createdAt": "2020-05-22T00:48:16Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1670", "merged": true, "mergeCommit": {"oid": "59bdf1102f4ed97ef2e597cb7ea0b2eba6465cc9"}, "closed": true, "closedAt": "2020-05-27T12:59:28Z", "author": {"login": "anpanigr"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjnT9mAH2gAyNDIxNjU2ODczOmY1NDE4NWExODI1ZDdjNjJmYzJjMzQ0NGVkYTFhMDYwZWNiMmU1YmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclY3RBAFqTQxOTE3OTIyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f54185a1825d7c62fc2c3444eda1a060ecb2e5be", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f54185a1825d7c62fc2c3444eda1a060ecb2e5be", "committedDate": "2020-05-22T00:41:32Z", "message": "Add new rolling re-start assertion to ItClass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63e82c0f92357b31efa4e0ae944de7d6b79820cc", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/63e82c0f92357b31efa4e0ae944de7d6b79820cc", "committedDate": "2020-05-22T00:52:18Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into mii-rolrestart"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c017f1cb6d70b9f4f786be34732e9fd6f60e6cb", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2c017f1cb6d70b9f4f786be34732e9fd6f60e6cb", "committedDate": "2020-05-22T01:36:58Z", "message": "Fixed few INFO statements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2OTQ0Njg5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1670#pullrequestreview-416944689", "createdAt": "2020-05-22T14:14:36Z", "commit": {"oid": "2c017f1cb6d70b9f4f786be34732e9fd6f60e6cb"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDoxNDozNlrOGZYrmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDoyMToyNlrOGZY7lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI3MTk2Mg==", "bodyText": "This method is duplicated in multiple test classes now. Shall we make it a test action?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1670#discussion_r429271962", "createdAt": "2020-05-22T14:14:36Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiAddCluster.java", "diffHunk": "@@ -767,37 +712,57 @@ private void createClusterConfigMap(String configMapName, String modelFile) {\n     assertTrue(cmCreated, String.format(\"createConfigMap failed while creating ConfigMap %s\", configMapName));\n   }     \n \n-  private String getadminPodCreationTime() {\n-\n-    String adminPodCreationTime =\n-        assertDoesNotThrow(() -> getPodCreationTimestamp(domainNamespace, \"\", adminServerPodName),\n-            String.format(\"Couldn't get PodCreationTime for pod %s\", adminServerPodName));\n-    assertNotNull(adminPodCreationTime, \"adminPodCreationTime returned null\");\n-    logger.info(\"Domain {0} in namespace {1}, admin server pod {2} creationTimestamp before patching is {3}\",\n-        domainUid,\n-        domainNamespace,\n-        adminServerPodName,\n-        adminPodCreationTime);\n-    return adminPodCreationTime;\n+  /**\n+   * Get the PodCreationTimestamp of a pod in a namespace.\n+   * \n+   * @param namespace Kubernetes namespace that the domain is hosted\n+   * @param podName name of the pod \n+   * @return PodCreationTimestamp of the pod\n+   */\n+  private String getPodCreationTime(String namespace, String podName) {\n+    String podCreationTime =\n+        assertDoesNotThrow(() -> getPodCreationTimestamp(namespace, \"\", podName),\n+            String.format(\"Couldn't get PodCreationTime for pod %s\", podName));\n+    assertNotNull(podCreationTime, \"Got null PodCreationTimestamp\");\n+    logger.info(\"PodCreationTimestamp for pod ${0} in namespace ${1} is {2}\",\n+        namespace,\n+        podName,\n+        podCreationTime);\n+    return podCreationTime;\n   }\n \n-  private List<String> getManagedServerPodTimestampList() {\n-    List<String> managedServerPodTimestampList = new ArrayList<>();\n-    assertDoesNotThrow(\n-        () -> { \n-          for (int i = 1; i <= replicaCount; i++) {\n-            String managedServerPodName = managedServerPrefix + i;\n-            String creationTime = getPodCreationTimestamp(domainNamespace,\"\", managedServerPodName);\n-            managedServerPodTimestampList.add(creationTime);\n-            logger.info(\"Domain {0} in namespace {1}, managed server pod {2} creationTimestamp before patching is {3}\",\n-                domainUid,\n-                domainNamespace,\n-                managedServerPodName,\n-                creationTime);\n-          } \n-        },\n-        String.format(\"Failed to get creationTimestamp for managed server pods\"));\n-    return managedServerPodTimestampList;\n+  /**\n+   * Patch the domain resource with a new restartVersion.\n+   * \n+   * @param domainResourceName name of the domain resource\n+   * @param namespace Kubernetes namespace that the domain is hosted\n+   * @return restartVersion new restartVersion of the domain resource\n+   */\n+  private String patchDomainResourceWithNewRestartVersion(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c017f1cb6d70b9f4f786be34732e9fd6f60e6cb"}, "originalPosition": 308}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI3NTUyNw==", "bodyText": "The code that get the creation timestamp of all servers and add it to a map is duplicated in the test cases.\nConsider make it a common test util method?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1670#discussion_r429275527", "createdAt": "2020-05-22T14:20:33Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiAddCluster.java", "diffHunk": "@@ -473,12 +448,15 @@ public void testAddMiiConfiguredCluster() {\n     String configMapName = \"configclusterconfigmap\";\n     createClusterConfigMap(configMapName, \"model.config.cluster.yaml\");\n \n-    // get the creation time of the admin server pod before patching\n-    String adminPodCreationTime = getadminPodCreationTime();\n+    LinkedHashMap<String, String> pods = new LinkedHashMap<>();\n \n+    // get the creation time of the admin server pod before patching\n+    String adminPodCreationTime = getPodCreationTime(domainNamespace, adminServerPodName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c017f1cb6d70b9f4f786be34732e9fd6f60e6cb"}, "originalPosition": 164}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI3NjA1Mw==", "bodyText": "This method is also duplicated in test classes now. Make it a test action or common test util method?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1670#discussion_r429276053", "createdAt": "2020-05-22T14:21:26Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiAddCluster.java", "diffHunk": "@@ -767,37 +712,57 @@ private void createClusterConfigMap(String configMapName, String modelFile) {\n     assertTrue(cmCreated, String.format(\"createConfigMap failed while creating ConfigMap %s\", configMapName));\n   }     \n \n-  private String getadminPodCreationTime() {\n-\n-    String adminPodCreationTime =\n-        assertDoesNotThrow(() -> getPodCreationTimestamp(domainNamespace, \"\", adminServerPodName),\n-            String.format(\"Couldn't get PodCreationTime for pod %s\", adminServerPodName));\n-    assertNotNull(adminPodCreationTime, \"adminPodCreationTime returned null\");\n-    logger.info(\"Domain {0} in namespace {1}, admin server pod {2} creationTimestamp before patching is {3}\",\n-        domainUid,\n-        domainNamespace,\n-        adminServerPodName,\n-        adminPodCreationTime);\n-    return adminPodCreationTime;\n+  /**\n+   * Get the PodCreationTimestamp of a pod in a namespace.\n+   * \n+   * @param namespace Kubernetes namespace that the domain is hosted\n+   * @param podName name of the pod \n+   * @return PodCreationTimestamp of the pod\n+   */\n+  private String getPodCreationTime(String namespace, String podName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c017f1cb6d70b9f4f786be34732e9fd6f60e6cb"}, "originalPosition": 272}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7fa5166328cc2410111235d724d6b6958a5eefc", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a7fa5166328cc2410111235d724d6b6958a5eefc", "committedDate": "2020-05-22T19:55:05Z", "message": "Added common utility methods into CommonTestUtils class, refactored the test classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MTc4MDA4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1670#pullrequestreview-417178008", "createdAt": "2020-05-22T20:54:24Z", "commit": {"oid": "a7fa5166328cc2410111235d724d6b6958a5eefc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3OTM0Njcw", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1670#pullrequestreview-417934670", "createdAt": "2020-05-26T02:30:38Z", "commit": {"oid": "a7fa5166328cc2410111235d724d6b6958a5eefc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMjozMDozOVrOGaM2ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMjozMDozOVrOGaM2ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEyNjcxNQ==", "bodyText": "Please add this method in TestActions.java class.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1670#discussion_r430126715", "createdAt": "2020-05-26T02:30:39Z", "author": {"login": "vanajamukkara"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -751,4 +755,58 @@ public static void scaleAndVerifyCluster(String clusterName,\n       }\n     }\n   }\n+\n+  /**\n+   * Get the PodCreationTimestamp of a pod in a namespace.\n+   * \n+   * @param namespace Kubernetes namespace that the domain is hosted\n+   * @param podName name of the pod \n+   * @return PodCreationTimestamp of the pod\n+   */\n+  public static String getPodCreationTime(String namespace, String podName) {\n+    String podCreationTime =\n+        assertDoesNotThrow(() -> getPodCreationTimestamp(namespace, \"\", podName),\n+            String.format(\"Couldn't get PodCreationTimestamp for pod %s\", podName));\n+    assertNotNull(podCreationTime, \"Got null PodCreationTimestamp\");\n+    logger.info(\"PodCreationTimestamp for pod ${0} in namespace ${1} is {2}\",\n+        namespace,\n+        podName,\n+        podCreationTime);\n+    return podCreationTime;\n+  }\n+\n+  /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7fa5166328cc2410111235d724d6b6958a5eefc"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NDkwNTcy", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1670#pullrequestreview-418490572", "createdAt": "2020-05-26T16:48:56Z", "commit": {"oid": "a7fa5166328cc2410111235d724d6b6958a5eefc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NTI1ODEx", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1670#pullrequestreview-418525811", "createdAt": "2020-05-26T17:35:21Z", "commit": {"oid": "a7fa5166328cc2410111235d724d6b6958a5eefc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNzozNToyMVrOGapBGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNzozOTo1M1rOGapLmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU4ODE4NQ==", "bodyText": "This has to be done right after checkPodReady(adminServerPodName, domainUid, domainNamespace);", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1670#discussion_r430588185", "createdAt": "2020-05-26T17:35:21Z", "author": {"login": "sankarpn"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItDomainOnPV.java", "diffHunk": "@@ -283,24 +283,24 @@ public void testDomainOnPvUsingWlst() throws IOException {\n     // check admin server pod is ready\n     logger.info(\"Waiting for admin server pod {0} to be ready in namespace {1}\",\n         adminServerPodName, domainNamespace);\n-    checkPodReady(adminServerPodName);\n+    checkPodReady(adminServerPodName, domainUid, domainNamespace);\n \n     // check managed server pods are ready\n     for (int i = 1; i <= replicaCount; i++) {\n       logger.info(\"Wait for managed server pod {0} to be ready in namespace {1}\",\n           managedServerPodNamePrefix + i, domainNamespace);\n-      checkPodReady(managedServerPodNamePrefix + i);\n+      checkPodReady(managedServerPodNamePrefix + i, domainUid, domainNamespace);\n     }\n \n     logger.info(\"Check admin service {0} is created in namespace {1}\",\n         adminServerPodName, domainNamespace);\n-    checkServiceCreated(adminServerPodName);\n+    checkServiceExists(adminServerPodName, domainNamespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7fa5166328cc2410111235d724d6b6958a5eefc"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU4ODg0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // get the creation time of the admin server pod before patching\n          \n          \n            \n                // get the creation time of the server pods before patching", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1670#discussion_r430588849", "createdAt": "2020-05-26T17:36:31Z", "author": {"login": "sankarpn"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiAddCluster.java", "diffHunk": "@@ -302,12 +303,14 @@ public void testAddMiiClusteriWithNoReplica() {\n     String configMapName = \"noreplicaconfigmap\";\n     createClusterConfigMap(configMapName, \"model.config.cluster.yaml\");\n \n-    // get the creation time of the admin server pod before patching\n-    String adminPodCreationTime = getadminPodCreationTime();\n+    LinkedHashMap<String, String> pods = new LinkedHashMap<>();\n \n-    // get the creation time of the managed server pods before patching\n-    List<String> managedServerPodOriginalTimestampList = new ArrayList<>();\n-    managedServerPodOriginalTimestampList = getManagedServerPodTimestampList();\n+    // get the creation time of the admin server pod before patching", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7fa5166328cc2410111235d724d6b6958a5eefc"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU5MDg3NA==", "bodyText": "In all It classes, the service existence check should be done right after admin pod ready check. Otherwise  if there are errors in creating the service the assertion will fail at waiting for managed server to come up when the actual problem was in the service creation of admin server pod.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1670#discussion_r430590874", "createdAt": "2020-05-26T17:39:53Z", "author": {"login": "sankarpn"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiConfigMap.java", "diffHunk": "@@ -332,13 +331,13 @@ public void testCreateMiiConfigMapDomain() {\n \n     logger.info(\"Check admin service {0} is created in namespace {1}\",\n         adminServerPodName, domainNamespace);\n-    checkServiceCreated(adminServerPodName, domainNamespace);\n+    checkServiceExists(adminServerPodName, domainNamespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7fa5166328cc2410111235d724d6b6958a5eefc"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0093d60cdb34725e822606f576a4913658cb3aa", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d0093d60cdb34725e822606f576a4913658cb3aa", "committedDate": "2020-05-26T18:33:45Z", "message": "Resolved PR review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NjA0MDE4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1670#pullrequestreview-418604018", "createdAt": "2020-05-26T19:21:32Z", "commit": {"oid": "d0093d60cdb34725e822606f576a4913658cb3aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "422f6850c006fbd7e2b2b52e379b979d80ce7c3e", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/422f6850c006fbd7e2b2b52e379b979d80ce7c3e", "committedDate": "2020-05-26T20:14:08Z", "message": "Moved patchDomainResourceWithNewRestartVersion to TestAction classs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e548aed683f9a9666418abd0429c7a06ea150c9", "author": {"user": null}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6e548aed683f9a9666418abd0429c7a06ea150c9", "committedDate": "2020-05-26T20:14:24Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into mii-rolrestart"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MTc5MjIx", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1670#pullrequestreview-419179221", "createdAt": "2020-05-27T12:59:22Z", "commit": {"oid": "6e548aed683f9a9666418abd0429c7a06ea150c9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4838, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}