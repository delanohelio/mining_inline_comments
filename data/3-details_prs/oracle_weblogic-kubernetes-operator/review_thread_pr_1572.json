{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0ODcyNDM4", "number": 1572, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjoyNTozNFrODzEAXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjozNDoxOVrODzEGTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODY5NTk5OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItUsabilityOperatorHelmChart.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjoyNTozNFrOGHe1lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNTo0NDo1OFrOGIbD1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5ODQ1Mg==", "bodyText": "I don't understand this and it seems brittle.  If the Helm install is supposed to fail, I would expect a non-zero exit code from invoking the helm binary and that the list of installed Helm charts does not include the release we just tried to install.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r410498452", "createdAt": "2020-04-17T22:25:34Z", "author": {"login": "rjeberhard"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItUsabilityOperatorHelmChart.java", "diffHunk": "@@ -151,50 +160,32 @@ public void testCreateSecondOperatorUsingSameOperatorNsNegativeInstall() throws\n     Operator secondoperator = new Operator(operatorMap, false, true, true, RestCertType.SELF_SIGNED);\n     String oprelease = (String)(secondoperator.getOperatorMap()).get(\"releaseName\");\n     String opnamespace = (String)(secondoperator.getOperatorMap()).get(\"namespace\");\n+    boolean installFailed = true;\n+    boolean gotExpectedInfo = true;\n     try {\n       secondoperator.callHelmInstall();\n-      throw new RuntimeException(\n-          \"FAILURE: Helm installs second operator with same namespace as the first one\");\n-\n+      installFailed = false;\n     } catch (Exception ex) {\n       if (!ex.getMessage()\n-          .contains(\n-              \"Error: release \"\n-                  + oprelease\n-                  + \" failed: secrets \\\"weblogic-operator-secrets\\\" already exists\")) {\n-        throw new RuntimeException(\n-            \"FAILURE: Helm installs second operator with same namespace as the first one \"\n-                + \"does not report expected message \"\n-                + ex.getMessage());\n-      }\n-      String cmdLb = \"\";\n-      if (BaseTest.HELM_VERSION.equals(\"V2\")) {\n-        cmdLb = \"helm list --failed \" + \"  | grep \" + oprelease;\n-      }\n-      if (BaseTest.HELM_VERSION.equals(\"V3\")) {\n-        cmdLb = \"helm list --failed --namespace \" + opnamespace + \"  | grep \" + oprelease;\n-      }\n-      LoggerHelper.getLocal().log(Level.INFO, \"Executing cmd \" + cmdLb);\n-      ExecResult result = ExecCommand.exec(cmdLb);\n-      if (result.exitValue() != 0) {\n-        throw new RuntimeException(\n-            \"FAILURE: Helm installs second operator with same namespace as the first one \");\n+          .contains(\"weblogic-operator-secrets\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ4NTE0MQ==", "bodyText": "Here the callHelmInstall() expects to fail with a proper exception with the following message\nError: rendered manifests contain a resource that already exists. Unable to continue with install: existing resource conflict: kind: Secret, namespace: ons, name: weblogic-operator-secrets", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r411485141", "createdAt": "2020-04-20T15:44:58Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItUsabilityOperatorHelmChart.java", "diffHunk": "@@ -151,50 +160,32 @@ public void testCreateSecondOperatorUsingSameOperatorNsNegativeInstall() throws\n     Operator secondoperator = new Operator(operatorMap, false, true, true, RestCertType.SELF_SIGNED);\n     String oprelease = (String)(secondoperator.getOperatorMap()).get(\"releaseName\");\n     String opnamespace = (String)(secondoperator.getOperatorMap()).get(\"namespace\");\n+    boolean installFailed = true;\n+    boolean gotExpectedInfo = true;\n     try {\n       secondoperator.callHelmInstall();\n-      throw new RuntimeException(\n-          \"FAILURE: Helm installs second operator with same namespace as the first one\");\n-\n+      installFailed = false;\n     } catch (Exception ex) {\n       if (!ex.getMessage()\n-          .contains(\n-              \"Error: release \"\n-                  + oprelease\n-                  + \" failed: secrets \\\"weblogic-operator-secrets\\\" already exists\")) {\n-        throw new RuntimeException(\n-            \"FAILURE: Helm installs second operator with same namespace as the first one \"\n-                + \"does not report expected message \"\n-                + ex.getMessage());\n-      }\n-      String cmdLb = \"\";\n-      if (BaseTest.HELM_VERSION.equals(\"V2\")) {\n-        cmdLb = \"helm list --failed \" + \"  | grep \" + oprelease;\n-      }\n-      if (BaseTest.HELM_VERSION.equals(\"V3\")) {\n-        cmdLb = \"helm list --failed --namespace \" + opnamespace + \"  | grep \" + oprelease;\n-      }\n-      LoggerHelper.getLocal().log(Level.INFO, \"Executing cmd \" + cmdLb);\n-      ExecResult result = ExecCommand.exec(cmdLb);\n-      if (result.exitValue() != 0) {\n-        throw new RuntimeException(\n-            \"FAILURE: Helm installs second operator with same namespace as the first one \");\n+          .contains(\"weblogic-operator-secrets\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5ODQ1Mg=="}, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODY5ODA1OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItUsabilityOperatorHelmChart.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjoyNjo0NVrOGHe20A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMTo1NjoxMVrOGHiAhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5ODc2OA==", "bodyText": "pre-existing", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r410498768", "createdAt": "2020-04-17T22:26:45Z", "author": {"login": "rjeberhard"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItUsabilityOperatorHelmChart.java", "diffHunk": "@@ -215,7 +206,7 @@ public void testNotPreCreatedOpNsCreateOperatorNegativeInstall() throws Exceptio\n     TestUtils.exec(command);\n     try {\n       operator.callHelmInstall();\n-      throw new RuntimeException(\"FAILURE: Helm install operator with not preexisted namespace \");\n+      throw new Exception(\"FAILURE: Helm install operator with not preexisted namespace \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU1MDQwNQ==", "bodyText": "done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r410550405", "createdAt": "2020-04-18T01:56:11Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItUsabilityOperatorHelmChart.java", "diffHunk": "@@ -215,7 +206,7 @@ public void testNotPreCreatedOpNsCreateOperatorNegativeInstall() throws Exceptio\n     TestUtils.exec(command);\n     try {\n       operator.callHelmInstall();\n-      throw new RuntimeException(\"FAILURE: Helm install operator with not preexisted namespace \");\n+      throw new Exception(\"FAILURE: Helm install operator with not preexisted namespace \");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5ODc2OA=="}, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODY5OTExOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItUsabilityOperatorHelmChart.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjoyNzoxNVrOGHe3Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMTo1NzozNVrOGHiCww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5ODkxNA==", "bodyText": "\"not existing\" or \"non pre-existing\"", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r410498914", "createdAt": "2020-04-17T22:27:15Z", "author": {"login": "rjeberhard"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItUsabilityOperatorHelmChart.java", "diffHunk": "@@ -224,10 +215,12 @@ public void testNotPreCreatedOpNsCreateOperatorNegativeInstall() throws Exceptio\n   }\n \n   /**\n-   * Negative test : Helm will install the operator with not preexisted operator service account,\n-   * deployment will not start until service account will be created.\n+   * Install the operator with non existing operator service account.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU1MDk3OQ==", "bodyText": "done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r410550979", "createdAt": "2020-04-18T01:57:35Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItUsabilityOperatorHelmChart.java", "diffHunk": "@@ -224,10 +215,12 @@ public void testNotPreCreatedOpNsCreateOperatorNegativeInstall() throws Exceptio\n   }\n \n   /**\n-   * Negative test : Helm will install the operator with not preexisted operator service account,\n-   * deployment will not start until service account will be created.\n+   * Install the operator with non existing operator service account.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5ODkxNA=="}, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 156}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODcwMTk5OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItUsabilityOperatorHelmChart.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjoyODo1M1rOGHe5OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMjowMTo0M1rOGHiJiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5OTM4NQ==", "bodyText": "Same comment... I'm less concerned with the fact that Helm failed with a certain message than that the Helm install failed and that the release was not installed.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r410499385", "createdAt": "2020-04-17T22:28:53Z", "author": {"login": "rjeberhard"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItUsabilityOperatorHelmChart.java", "diffHunk": "@@ -292,10 +285,15 @@ public void testNotPreexistedOpServiceAccountCreateOperatorNegativeInstall() thr\n   }\n \n   /**\n-   * Negative test : Helm will install the second operator with same target domain namespace as the\n-   * first operator.\n+   * Install operator usab-1 with target DomainNameSpace [usab-domainns-1].\n+   * Install operator usab-2 with same target DomainNamesapce [usab-domainns-1].\n+   * Second operator should fail to install with following exception ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 201}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU1MjcxMg==", "bodyText": "I removed the Helm version check", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r410552712", "createdAt": "2020-04-18T02:01:43Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/ItUsabilityOperatorHelmChart.java", "diffHunk": "@@ -292,10 +285,15 @@ public void testNotPreexistedOpServiceAccountCreateOperatorNegativeInstall() thr\n   }\n \n   /**\n-   * Negative test : Helm will install the second operator with same target domain namespace as the\n-   * first operator.\n+   * Install operator usab-1 with target DomainNameSpace [usab-domainns-1].\n+   * Install operator usab-2 with same target DomainNamesapce [usab-domainns-1].\n+   * Second operator should fail to install with following exception ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5OTM4NQ=="}, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 201}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODcwNTM1OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/LoadBalancer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjozMDo1M1rOGHe7Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMTo1ODoyNVrOGHiEYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5OTkzNA==", "bodyText": "Remove support for Helm 2.x", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r410499934", "createdAt": "2020-04-17T22:30:53Z", "author": {"login": "rjeberhard"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/LoadBalancer.java", "diffHunk": "@@ -37,7 +37,7 @@ public LoadBalancer(Map lbMap) throws Exception {\n \n     if (lbMap.get(\"loadBalancer\").equals(\"TRAEFIK\")) {\n       String cmdLb = \"\";\n-      if (! BaseTest.HELM_VERSION.equals(\"V2\")) {\n+      if (BaseTest.HELM_VERSION.equals(\"V2\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU1MTM5NQ==", "bodyText": "done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r410551395", "createdAt": "2020-04-18T01:58:25Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/LoadBalancer.java", "diffHunk": "@@ -37,7 +37,7 @@ public LoadBalancer(Map lbMap) throws Exception {\n \n     if (lbMap.get(\"loadBalancer\").equals(\"TRAEFIK\")) {\n       String cmdLb = \"\";\n-      if (! BaseTest.HELM_VERSION.equals(\"V2\")) {\n+      if (BaseTest.HELM_VERSION.equals(\"V2\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5OTkzNA=="}, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODcwNjQzOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/LoadBalancer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjozMTo0MVrOGHe8EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjozNDowMVrOGHe-iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMDExMw==", "bodyText": "Why are you adding the \"--debug\" flag here?  Is it because we are going to assert on debug output?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r410500113", "createdAt": "2020-04-17T22:31:41Z", "author": {"login": "rjeberhard"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/LoadBalancer.java", "diffHunk": "@@ -146,6 +146,7 @@ private void upgradeTraefikNamespace() throws Exception {\n     StringBuffer cmd = new StringBuffer(\"helm upgrade \");\n     cmd.append(\" traefik-operator\")\n        .append(\" stable/traefik \")\n+       .append(\" --debug \")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMDc0Nw==", "bodyText": "I want to know the reason if the helm command fails so that it will be easier to debug when the test fails", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r410500747", "createdAt": "2020-04-17T22:34:01Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/LoadBalancer.java", "diffHunk": "@@ -146,6 +146,7 @@ private void upgradeTraefikNamespace() throws Exception {\n     StringBuffer cmd = new StringBuffer(\"helm upgrade \");\n     cmd.append(\" traefik-operator\")\n        .append(\" stable/traefik \")\n+       .append(\" --debug \")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMDExMw=="}, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODcwNzMzOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/resources/setupenv.sh", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjozMjoyM1rOGHe8tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMTo1ODo1MlrOGHiFDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMDI3OQ==", "bodyText": "I'd recommend failing the test if you find Helm 2.x.  This will help us upgrade the clusters quickly.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r410500279", "createdAt": "2020-04-17T22:32:23Z", "author": {"login": "rjeberhard"}, "path": "integration-tests/src/test/resources/setupenv.sh", "diffHunk": "@@ -179,7 +179,15 @@ if [ \"$SHARED_CLUSTER\" = \"true\" ]; then\n \tfi\n     \t\n   #fi\n-  setup_shared_cluster\n+  helm version --short --client | grep v2\n+  [[ $? == 0 ]] && HELM_VERSION=V2\n+  [[ $? == 1 ]] && HELM_VERSION=V3\n+  if [ \"$HELM_VERSION\" == \"V2\" ]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU1MTU2Ng==", "bodyText": "done. Now the script will exit when V2 is detected", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r410551566", "createdAt": "2020-04-18T01:58:52Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/resources/setupenv.sh", "diffHunk": "@@ -179,7 +179,15 @@ if [ \"$SHARED_CLUSTER\" = \"true\" ]; then\n \tfi\n     \t\n   #fi\n-  setup_shared_cluster\n+  helm version --short --client | grep v2\n+  [[ $? == 0 ]] && HELM_VERSION=V2\n+  [[ $? == 1 ]] && HELM_VERSION=V3\n+  if [ \"$HELM_VERSION\" == \"V2\" ]; then", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMDI3OQ=="}, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODcxMTE3OnYy", "diffSide": "RIGHT", "path": "kubernetes/samples/charts/util/setup.sh", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjozNDoxOVrOGHe-5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMTo1OTo0N1rOGHiGnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMDgzOA==", "bodyText": "Detect Helm 2 and fail", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r410500838", "createdAt": "2020-04-17T22:34:19Z", "author": {"login": "rjeberhard"}, "path": "kubernetes/samples/charts/util/setup.sh", "diffHunk": "@@ -2,19 +2,20 @@\n # Copyright (c) 2018, 2020, Oracle Corporation and/or its affiliates.\n # Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n \n-#  This script is to create or delete Ingress controllers. We support two ingress controllers: traefik and voyager.\n+# This script is to create or delete Ingress controllers. \n+# We support two ingress controllers: traefik and voyager.\n \n-MYDIR=\"$(dirname \"$(readlink -f \"$0\")\")\"\n-VNAME=voyager-operator  # release name of Voyager\n-TNAME=traefik-operator  # release name of Traefik\n+UTILDIR=\"$(dirname \"$(readlink -f \"$0\")\")\"\n+VNAME=voyager-operator  # release name for Voyager\n+TNAME=traefik-operator  # release name for Traefik\n VSPACE=voyager # NameSpace for Voyager\n TSPACE=traefik   # NameSpace for Traefik\n DefaultVoyagerVersion=10.0.0\n \n HELM_VERSION=$(helm version --short --client)\n \n if [[ \"$HELM_VERSION\" =~ \"v2\" ]]; then\n-   echo \"Detected Helm Version [${HELM_VERSION}]\"\n+   echo \"Detected helm version [${HELM_VERSION}]\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU1MTk2NQ==", "bodyText": "done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1572#discussion_r410551965", "createdAt": "2020-04-18T01:59:47Z", "author": {"login": "anpanigr"}, "path": "kubernetes/samples/charts/util/setup.sh", "diffHunk": "@@ -2,19 +2,20 @@\n # Copyright (c) 2018, 2020, Oracle Corporation and/or its affiliates.\n # Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n \n-#  This script is to create or delete Ingress controllers. We support two ingress controllers: traefik and voyager.\n+# This script is to create or delete Ingress controllers. \n+# We support two ingress controllers: traefik and voyager.\n \n-MYDIR=\"$(dirname \"$(readlink -f \"$0\")\")\"\n-VNAME=voyager-operator  # release name of Voyager\n-TNAME=traefik-operator  # release name of Traefik\n+UTILDIR=\"$(dirname \"$(readlink -f \"$0\")\")\"\n+VNAME=voyager-operator  # release name for Voyager\n+TNAME=traefik-operator  # release name for Traefik\n VSPACE=voyager # NameSpace for Voyager\n TSPACE=traefik   # NameSpace for Traefik\n DefaultVoyagerVersion=10.0.0\n \n HELM_VERSION=$(helm version --short --client)\n \n if [[ \"$HELM_VERSION\" =~ \"v2\" ]]; then\n-   echo \"Detected Helm Version [${HELM_VERSION}]\"\n+   echo \"Detected helm version [${HELM_VERSION}]\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMDgzOA=="}, "originalCommit": {"oid": "6d2416d3c6cb992df4df806043adc4ea1cce14cc"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4443, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}