{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MTM3NzU5", "number": 1996, "title": "Automate domain in pv samples", "bodyText": "Automating the domain in pv samples using the wlst and wdt method of creating domains in pv.\nTest Results\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/2578/testReport/", "createdAt": "2020-10-16T22:54:21Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1996", "merged": true, "mergeCommit": {"oid": "a056280ccbd9ac39af608838d4a73d15ca92ee84"}, "closed": true, "closedAt": "2020-10-21T18:14:32Z", "author": {"login": "sankarpn"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdR5eunAH2gAyNTA1MTM3NzU5OmFmZjhkMThiZDE0MWM2YzljZmM1OWMzNWM2NmViMTY5YmRkNTEwODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUwhU_AFqTUxMzk3OTk5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "aff8d18bd141c6c9cfc59c35c66eb169bdd51082", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/aff8d18bd141c6c9cfc59c35c66eb169bdd51082", "committedDate": "2020-10-12T19:52:06Z", "message": "Adding samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2d2e800b779fd0c7afca5e889a12e7d4fd6850b", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c2d2e800b779fd0c7afca5e889a12e7d4fd6850b", "committedDate": "2020-10-14T15:28:55Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into it-samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fe6ba74540f3fdb070ddf782ea4865b600cbe2e", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0fe6ba74540f3fdb070ddf782ea4865b600cbe2e", "committedDate": "2020-10-14T15:29:06Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87ce9b886dc5f8d2c6e0e5229e90ecde158c5adf", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/87ce9b886dc5f8d2c6e0e5229e90ecde158c5adf", "committedDate": "2020-10-14T17:49:41Z", "message": "fix file paths"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75cb62748490affaae076d495e438b34931541f0", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/75cb62748490affaae076d495e438b34931541f0", "committedDate": "2020-10-14T17:55:59Z", "message": "correct pv pvc name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dafdaed9e1216341b6561d0d9f99f441b4311c2d", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/dafdaed9e1216341b6561d0d9f99f441b4311c2d", "committedDate": "2020-10-14T17:59:32Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aed2b1b239c6d8075915a3c1e2398430432a98a0", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/aed2b1b239c6d8075915a3c1e2398430432a98a0", "committedDate": "2020-10-14T18:18:43Z", "message": "fix managed server namebase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf52ae8514ec787a9d8f2bad5d975b70eb0e42df", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/bf52ae8514ec787a9d8f2bad5d975b70eb0e42df", "committedDate": "2020-10-14T18:24:15Z", "message": "delete pvc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2214f9390cd8cf09f5a81699513868f9cd8e5906", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2214f9390cd8cf09f5a81699513868f9cd8e5906", "committedDate": "2020-10-14T18:28:49Z", "message": "change the pv reclaim policy to recycle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c7d23ddfae96cd73b508b82d48de91037544c91", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6c7d23ddfae96cd73b508b82d48de91037544c91", "committedDate": "2020-10-14T18:36:44Z", "message": "fix ms base name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aec2099556d72c66136913b77ddcc3ff110d3ea2", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/aec2099556d72c66136913b77ddcc3ff110d3ea2", "committedDate": "2020-10-14T18:42:57Z", "message": "fix domain namespace in service check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6716f1546ab3365259ea498c9bb63ecdd7a5bb8c", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/6716f1546ab3365259ea498c9bb63ecdd7a5bb8c", "committedDate": "2020-10-16T16:09:02Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into it-samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df86bcda2330f5705bada26f185ef7e763fccd29", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/df86bcda2330f5705bada26f185ef7e763fccd29", "committedDate": "2020-10-16T16:10:22Z", "message": "parameterize test to use wlst and wdt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "225dfbddf5c064aaa954d5f44f118ecb579dc033", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/225dfbddf5c064aaa954d5f44f118ecb579dc033", "committedDate": "2020-10-16T16:24:37Z", "message": "fix test type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8855f57b64b86f28835dd959644e9bbb9ea9381b", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8855f57b64b86f28835dd959644e9bbb9ea9381b", "committedDate": "2020-10-16T16:36:41Z", "message": "add javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d5e9967cffa3cafb73ee9abc070444ca1a4174c", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5d5e9967cffa3cafb73ee9abc070444ca1a4174c", "committedDate": "2020-10-16T16:56:58Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58371889e7dac4b065689c331ec3f95201fe1fc8", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/58371889e7dac4b065689c331ec3f95201fe1fc8", "committedDate": "2020-10-16T17:38:43Z", "message": "delete domain and verify it is removed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee52945a05f1be569258e72c33ae5ca286299c3b", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ee52945a05f1be569258e72c33ae5ca286299c3b", "committedDate": "2020-10-16T17:57:22Z", "message": "change domain name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9adccfa4ebce988489e7d07034421069dd728fc", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/a9adccfa4ebce988489e7d07034421069dd728fc", "committedDate": "2020-10-16T18:09:21Z", "message": "create credentials secret for each domain"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b1d3aea91d9c3888a662880e3793cc3f964b50d", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3b1d3aea91d9c3888a662880e3793cc3f964b50d", "committedDate": "2020-10-16T19:32:13Z", "message": "add t3publicaddress in input file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ac957dc83c79fd69a284a5acb56bca4838a25f3", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/3ac957dc83c79fd69a284a5acb56bca4838a25f3", "committedDate": "2020-10-16T20:01:22Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f42994d3800cd79ddd24b621b7b51bdbf75a338", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0f42994d3800cd79ddd24b621b7b51bdbf75a338", "committedDate": "2020-10-16T20:35:38Z", "message": "Fix javadocs and comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8220fd32ff0d61f4118b5949dfedf3ef1f2c47a5", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8220fd32ff0d61f4118b5949dfedf3ef1f2c47a5", "committedDate": "2020-10-16T21:04:35Z", "message": "delete pv and pvc and wait for it to terminate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b96ec25135453f68fac8e9d22787c80771e06e65", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b96ec25135453f68fac8e9d22787c80771e06e65", "committedDate": "2020-10-16T21:47:23Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "872a0e09bb2f5db1f6168b1a73709d2fd43f647d", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/872a0e09bb2f5db1f6168b1a73709d2fd43f647d", "committedDate": "2020-10-16T22:40:25Z", "message": "wip"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTE0NzA4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1996#pullrequestreview-512114708", "createdAt": "2020-10-19T20:01:12Z", "commit": {"oid": "872a0e09bb2f5db1f6168b1a73709d2fd43f647d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDowMToxMlrOHkfiCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDoyMjozN1rOHkgPoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyNzQwMA==", "bodyText": "fix description", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1996#discussion_r508027400", "createdAt": "2020-10-19T20:01:12Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItSamples.java", "diffHunk": "@@ -0,0 +1,305 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import oracle.weblogic.kubernetes.actions.impl.primitive.Command;\n+import oracle.weblogic.kubernetes.actions.impl.primitive.CommandParams;\n+import oracle.weblogic.kubernetes.annotations.IntegrationTest;\n+import oracle.weblogic.kubernetes.annotations.Namespaces;\n+import oracle.weblogic.kubernetes.logging.LoggingFacade;\n+import org.awaitility.core.ConditionFactory;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import static java.util.concurrent.TimeUnit.MINUTES;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+import static oracle.weblogic.kubernetes.TestConstants.ADMIN_PASSWORD_DEFAULT;\n+import static oracle.weblogic.kubernetes.TestConstants.ADMIN_USERNAME_DEFAULT;\n+import static oracle.weblogic.kubernetes.TestConstants.DOMAIN_VERSION;\n+import static oracle.weblogic.kubernetes.TestConstants.K8S_NODEPORT_HOST;\n+import static oracle.weblogic.kubernetes.TestConstants.PV_ROOT;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.ITTESTS_DIR;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.WORK_DIR;\n+import static oracle.weblogic.kubernetes.actions.TestActions.deletePersistentVolume;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.domainDoesNotExist;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.domainExists;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.pvExists;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.pvcExists;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.checkPodReadyAndServiceExists;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.createSecretWithUsernamePassword;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.installAndVerifyOperator;\n+import static oracle.weblogic.kubernetes.utils.FileUtils.replaceStringInFile;\n+import static oracle.weblogic.kubernetes.utils.ThreadSafeLogger.getLogger;\n+import static org.apache.commons.io.FileUtils.copyDirectory;\n+import static org.apache.commons.io.FileUtils.deleteDirectory;\n+import static org.awaitility.Awaitility.with;\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * Tests related to introspectVersion attribute.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "872a0e09bb2f5db1f6168b1a73709d2fd43f647d"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyNzg0MQ==", "bodyText": "fix log message", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1996#discussion_r508027841", "createdAt": "2020-10-19T20:01:58Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItSamples.java", "diffHunk": "@@ -0,0 +1,305 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import oracle.weblogic.kubernetes.actions.impl.primitive.Command;\n+import oracle.weblogic.kubernetes.actions.impl.primitive.CommandParams;\n+import oracle.weblogic.kubernetes.annotations.IntegrationTest;\n+import oracle.weblogic.kubernetes.annotations.Namespaces;\n+import oracle.weblogic.kubernetes.logging.LoggingFacade;\n+import org.awaitility.core.ConditionFactory;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import static java.util.concurrent.TimeUnit.MINUTES;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+import static oracle.weblogic.kubernetes.TestConstants.ADMIN_PASSWORD_DEFAULT;\n+import static oracle.weblogic.kubernetes.TestConstants.ADMIN_USERNAME_DEFAULT;\n+import static oracle.weblogic.kubernetes.TestConstants.DOMAIN_VERSION;\n+import static oracle.weblogic.kubernetes.TestConstants.K8S_NODEPORT_HOST;\n+import static oracle.weblogic.kubernetes.TestConstants.PV_ROOT;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.ITTESTS_DIR;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.WORK_DIR;\n+import static oracle.weblogic.kubernetes.actions.TestActions.deletePersistentVolume;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.domainDoesNotExist;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.domainExists;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.pvExists;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.pvcExists;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.checkPodReadyAndServiceExists;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.createSecretWithUsernamePassword;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.installAndVerifyOperator;\n+import static oracle.weblogic.kubernetes.utils.FileUtils.replaceStringInFile;\n+import static oracle.weblogic.kubernetes.utils.ThreadSafeLogger.getLogger;\n+import static org.apache.commons.io.FileUtils.copyDirectory;\n+import static org.apache.commons.io.FileUtils.deleteDirectory;\n+import static org.awaitility.Awaitility.with;\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * Tests related to introspectVersion attribute.\n+ */\n+@DisplayName(\"Verify the domain on pv samples using wlst and wdt\")\n+@IntegrationTest\n+public class ItSamples {\n+\n+  private static String opNamespace = null;\n+  private static String domainNamespace = null;\n+\n+  private final Path samplePath = Paths.get(ITTESTS_DIR, \"../kubernetes/samples\");\n+  private final Path tempSamplePath = Paths.get(WORK_DIR, \"sample-testing\");\n+\n+  private static final String[] params = {\"wlst:domain1\", \"wdt:domain2\"};\n+\n+  // create standard, reusable retry/backoff policy\n+  private static final ConditionFactory withStandardRetryPolicy\n+      = with().pollDelay(2, SECONDS)\n+          .and().with().pollInterval(10, SECONDS)\n+          .atMost(10, MINUTES).await();\n+\n+  private static LoggingFacade logger = null;\n+\n+  /**\n+   * Assigns unique namespaces for operator and domains and installs operator.\n+   *\n+   * @param namespaces injected by JUnit\n+   */\n+  @BeforeAll\n+  public static void initAll(@Namespaces(2) List<String> namespaces) {\n+    logger = getLogger();\n+\n+    logger.info(\"Assign a unique namespace for operator\");\n+    assertNotNull(namespaces.get(0), \"Namespace is null\");\n+    opNamespace = namespaces.get(0);\n+    logger.info(\"Assign a unique namespace for Introspect Version WebLogic domain\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "872a0e09bb2f5db1f6168b1a73709d2fd43f647d"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAzODAyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertTrue(result, \"Failed to create domain\");\n          \n          \n            \n                assertTrue(result, \"Failed to create domain custom resource\");", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1996#discussion_r508038026", "createdAt": "2020-10-19T20:20:48Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItSamples.java", "diffHunk": "@@ -0,0 +1,305 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import oracle.weblogic.kubernetes.actions.impl.primitive.Command;\n+import oracle.weblogic.kubernetes.actions.impl.primitive.CommandParams;\n+import oracle.weblogic.kubernetes.annotations.IntegrationTest;\n+import oracle.weblogic.kubernetes.annotations.Namespaces;\n+import oracle.weblogic.kubernetes.logging.LoggingFacade;\n+import org.awaitility.core.ConditionFactory;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import static java.util.concurrent.TimeUnit.MINUTES;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+import static oracle.weblogic.kubernetes.TestConstants.ADMIN_PASSWORD_DEFAULT;\n+import static oracle.weblogic.kubernetes.TestConstants.ADMIN_USERNAME_DEFAULT;\n+import static oracle.weblogic.kubernetes.TestConstants.DOMAIN_VERSION;\n+import static oracle.weblogic.kubernetes.TestConstants.K8S_NODEPORT_HOST;\n+import static oracle.weblogic.kubernetes.TestConstants.PV_ROOT;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.ITTESTS_DIR;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.WORK_DIR;\n+import static oracle.weblogic.kubernetes.actions.TestActions.deletePersistentVolume;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.domainDoesNotExist;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.domainExists;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.pvExists;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.pvcExists;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.checkPodReadyAndServiceExists;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.createSecretWithUsernamePassword;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.installAndVerifyOperator;\n+import static oracle.weblogic.kubernetes.utils.FileUtils.replaceStringInFile;\n+import static oracle.weblogic.kubernetes.utils.ThreadSafeLogger.getLogger;\n+import static org.apache.commons.io.FileUtils.copyDirectory;\n+import static org.apache.commons.io.FileUtils.deleteDirectory;\n+import static org.awaitility.Awaitility.with;\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * Tests related to introspectVersion attribute.\n+ */\n+@DisplayName(\"Verify the domain on pv samples using wlst and wdt\")\n+@IntegrationTest\n+public class ItSamples {\n+\n+  private static String opNamespace = null;\n+  private static String domainNamespace = null;\n+\n+  private final Path samplePath = Paths.get(ITTESTS_DIR, \"../kubernetes/samples\");\n+  private final Path tempSamplePath = Paths.get(WORK_DIR, \"sample-testing\");\n+\n+  private static final String[] params = {\"wlst:domain1\", \"wdt:domain2\"};\n+\n+  // create standard, reusable retry/backoff policy\n+  private static final ConditionFactory withStandardRetryPolicy\n+      = with().pollDelay(2, SECONDS)\n+          .and().with().pollInterval(10, SECONDS)\n+          .atMost(10, MINUTES).await();\n+\n+  private static LoggingFacade logger = null;\n+\n+  /**\n+   * Assigns unique namespaces for operator and domains and installs operator.\n+   *\n+   * @param namespaces injected by JUnit\n+   */\n+  @BeforeAll\n+  public static void initAll(@Namespaces(2) List<String> namespaces) {\n+    logger = getLogger();\n+\n+    logger.info(\"Assign a unique namespace for operator\");\n+    assertNotNull(namespaces.get(0), \"Namespace is null\");\n+    opNamespace = namespaces.get(0);\n+    logger.info(\"Assign a unique namespace for Introspect Version WebLogic domain\");\n+    assertNotNull(namespaces.get(1), \"Namespace is null\");\n+    domainNamespace = namespaces.get(1);\n+\n+    // install operator and verify its running in ready state\n+    installAndVerifyOperator(opNamespace, domainNamespace);\n+  }\n+\n+  /**\n+   * Test domain in pv samples using domains created by wlst and wdt.\n+   *\n+   * @param model domain name and script type to create domain\n+   */\n+  @ParameterizedTest\n+  @MethodSource(\"paramProvider\")\n+  @DisplayName(\"Test samples using domain in pv\")\n+  public void testSampleDomainInPv(String model) {\n+\n+    String domainName = model.split(\":\")[1];\n+    String script = model.split(\":\")[0];\n+\n+    //copy the samples directory to a temporary location\n+    setupSample();\n+    //create PV and PVC used by the domain\n+    createPvPvc(domainName);\n+\n+    //create WebLogic secrets for the domain\n+    createSecretWithUsernamePassword(domainName + \"-weblogic-credentials\", domainNamespace,\n+        ADMIN_USERNAME_DEFAULT, ADMIN_PASSWORD_DEFAULT);\n+\n+    Path sampleBase = Paths.get(tempSamplePath.toString(), \"scripts/create-weblogic-domain/domain-home-on-pv\");\n+\n+    // change namespace from default to custom, set wlst or wdt, domain name, and t3PublicAddress\n+    assertDoesNotThrow(() -> {\n+      replaceStringInFile(Paths.get(sampleBase.toString(), \"create-domain-inputs.yaml\").toString(),\n+          \"namespace: default\", \"namespace: \" + domainNamespace);\n+      replaceStringInFile(Paths.get(sampleBase.toString(), \"create-domain-inputs.yaml\").toString(),\n+          \"createDomainFilesDir: wlst\", \"createDomainFilesDir: \" + script);\n+      replaceStringInFile(Paths.get(sampleBase.toString(), \"create-domain-inputs.yaml\").toString(),\n+          \"domain1\", domainName);\n+      replaceStringInFile(Paths.get(sampleBase.toString(), \"create-domain-inputs.yaml\").toString(),\n+          \"#t3PublicAddress:\", \"t3PublicAddress: \" + K8S_NODEPORT_HOST);\n+    });\n+\n+    // run create-domain.sh to create domain.yaml file\n+    CommandParams params = new CommandParams().defaults();\n+    params.command(\"sh \"\n+        + Paths.get(sampleBase.toString(), \"create-domain.sh\").toString()\n+        + \" -i \" + Paths.get(sampleBase.toString(), \"create-domain-inputs.yaml\").toString()\n+        + \" -o \"\n+        + Paths.get(sampleBase.toString()));\n+\n+    boolean result = Command.withParams(params).execute();\n+    assertTrue(result, \"Failed to create domain.yaml\");\n+\n+    // run kubectl to create the domain\n+    params = new CommandParams().defaults();\n+    params.command(\"kubectl apply -f \"\n+        + Paths.get(sampleBase.toString(), \"weblogic-domains/\" + domainName + \"/domain.yaml\").toString());\n+\n+    result = Command.withParams(params).execute();\n+    assertTrue(result, \"Failed to create domain\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "872a0e09bb2f5db1f6168b1a73709d2fd43f647d"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAzOTA3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertTrue(result, \"Failed to delete domain\");\n          \n          \n            \n                assertTrue(result, \"Failed to delete domain custom resource\");", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1996#discussion_r508039073", "createdAt": "2020-10-19T20:22:37Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItSamples.java", "diffHunk": "@@ -0,0 +1,305 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import oracle.weblogic.kubernetes.actions.impl.primitive.Command;\n+import oracle.weblogic.kubernetes.actions.impl.primitive.CommandParams;\n+import oracle.weblogic.kubernetes.annotations.IntegrationTest;\n+import oracle.weblogic.kubernetes.annotations.Namespaces;\n+import oracle.weblogic.kubernetes.logging.LoggingFacade;\n+import org.awaitility.core.ConditionFactory;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import static java.util.concurrent.TimeUnit.MINUTES;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+import static oracle.weblogic.kubernetes.TestConstants.ADMIN_PASSWORD_DEFAULT;\n+import static oracle.weblogic.kubernetes.TestConstants.ADMIN_USERNAME_DEFAULT;\n+import static oracle.weblogic.kubernetes.TestConstants.DOMAIN_VERSION;\n+import static oracle.weblogic.kubernetes.TestConstants.K8S_NODEPORT_HOST;\n+import static oracle.weblogic.kubernetes.TestConstants.PV_ROOT;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.ITTESTS_DIR;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.WORK_DIR;\n+import static oracle.weblogic.kubernetes.actions.TestActions.deletePersistentVolume;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.domainDoesNotExist;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.domainExists;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.pvExists;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.pvcExists;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.checkPodReadyAndServiceExists;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.createSecretWithUsernamePassword;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.installAndVerifyOperator;\n+import static oracle.weblogic.kubernetes.utils.FileUtils.replaceStringInFile;\n+import static oracle.weblogic.kubernetes.utils.ThreadSafeLogger.getLogger;\n+import static org.apache.commons.io.FileUtils.copyDirectory;\n+import static org.apache.commons.io.FileUtils.deleteDirectory;\n+import static org.awaitility.Awaitility.with;\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * Tests related to introspectVersion attribute.\n+ */\n+@DisplayName(\"Verify the domain on pv samples using wlst and wdt\")\n+@IntegrationTest\n+public class ItSamples {\n+\n+  private static String opNamespace = null;\n+  private static String domainNamespace = null;\n+\n+  private final Path samplePath = Paths.get(ITTESTS_DIR, \"../kubernetes/samples\");\n+  private final Path tempSamplePath = Paths.get(WORK_DIR, \"sample-testing\");\n+\n+  private static final String[] params = {\"wlst:domain1\", \"wdt:domain2\"};\n+\n+  // create standard, reusable retry/backoff policy\n+  private static final ConditionFactory withStandardRetryPolicy\n+      = with().pollDelay(2, SECONDS)\n+          .and().with().pollInterval(10, SECONDS)\n+          .atMost(10, MINUTES).await();\n+\n+  private static LoggingFacade logger = null;\n+\n+  /**\n+   * Assigns unique namespaces for operator and domains and installs operator.\n+   *\n+   * @param namespaces injected by JUnit\n+   */\n+  @BeforeAll\n+  public static void initAll(@Namespaces(2) List<String> namespaces) {\n+    logger = getLogger();\n+\n+    logger.info(\"Assign a unique namespace for operator\");\n+    assertNotNull(namespaces.get(0), \"Namespace is null\");\n+    opNamespace = namespaces.get(0);\n+    logger.info(\"Assign a unique namespace for Introspect Version WebLogic domain\");\n+    assertNotNull(namespaces.get(1), \"Namespace is null\");\n+    domainNamespace = namespaces.get(1);\n+\n+    // install operator and verify its running in ready state\n+    installAndVerifyOperator(opNamespace, domainNamespace);\n+  }\n+\n+  /**\n+   * Test domain in pv samples using domains created by wlst and wdt.\n+   *\n+   * @param model domain name and script type to create domain\n+   */\n+  @ParameterizedTest\n+  @MethodSource(\"paramProvider\")\n+  @DisplayName(\"Test samples using domain in pv\")\n+  public void testSampleDomainInPv(String model) {\n+\n+    String domainName = model.split(\":\")[1];\n+    String script = model.split(\":\")[0];\n+\n+    //copy the samples directory to a temporary location\n+    setupSample();\n+    //create PV and PVC used by the domain\n+    createPvPvc(domainName);\n+\n+    //create WebLogic secrets for the domain\n+    createSecretWithUsernamePassword(domainName + \"-weblogic-credentials\", domainNamespace,\n+        ADMIN_USERNAME_DEFAULT, ADMIN_PASSWORD_DEFAULT);\n+\n+    Path sampleBase = Paths.get(tempSamplePath.toString(), \"scripts/create-weblogic-domain/domain-home-on-pv\");\n+\n+    // change namespace from default to custom, set wlst or wdt, domain name, and t3PublicAddress\n+    assertDoesNotThrow(() -> {\n+      replaceStringInFile(Paths.get(sampleBase.toString(), \"create-domain-inputs.yaml\").toString(),\n+          \"namespace: default\", \"namespace: \" + domainNamespace);\n+      replaceStringInFile(Paths.get(sampleBase.toString(), \"create-domain-inputs.yaml\").toString(),\n+          \"createDomainFilesDir: wlst\", \"createDomainFilesDir: \" + script);\n+      replaceStringInFile(Paths.get(sampleBase.toString(), \"create-domain-inputs.yaml\").toString(),\n+          \"domain1\", domainName);\n+      replaceStringInFile(Paths.get(sampleBase.toString(), \"create-domain-inputs.yaml\").toString(),\n+          \"#t3PublicAddress:\", \"t3PublicAddress: \" + K8S_NODEPORT_HOST);\n+    });\n+\n+    // run create-domain.sh to create domain.yaml file\n+    CommandParams params = new CommandParams().defaults();\n+    params.command(\"sh \"\n+        + Paths.get(sampleBase.toString(), \"create-domain.sh\").toString()\n+        + \" -i \" + Paths.get(sampleBase.toString(), \"create-domain-inputs.yaml\").toString()\n+        + \" -o \"\n+        + Paths.get(sampleBase.toString()));\n+\n+    boolean result = Command.withParams(params).execute();\n+    assertTrue(result, \"Failed to create domain.yaml\");\n+\n+    // run kubectl to create the domain\n+    params = new CommandParams().defaults();\n+    params.command(\"kubectl apply -f \"\n+        + Paths.get(sampleBase.toString(), \"weblogic-domains/\" + domainName + \"/domain.yaml\").toString());\n+\n+    result = Command.withParams(params).execute();\n+    assertTrue(result, \"Failed to create domain\");\n+\n+    // wait for the domain to exist\n+    logger.info(\"Checking for domain custom resource in namespace {0}\", domainNamespace);\n+    withStandardRetryPolicy\n+        .conditionEvaluationListener(\n+            condition -> logger.info(\"Waiting for domain {0} to be created in namespace {1} \"\n+                + \"(elapsed time {2}ms, remaining time {3}ms)\",\n+                domainName,\n+                domainNamespace,\n+                condition.getElapsedTimeInMS(),\n+                condition.getRemainingTimeInMS()))\n+        .until(domainExists(domainName, DOMAIN_VERSION, domainNamespace));\n+\n+    final String adminServerName = \"admin-server\";\n+    final String adminServerPodName = domainName + \"-\" + adminServerName;\n+\n+    final String managedServerNameBase = \"managed-server\";\n+    String managedServerPodNamePrefix = domainName + \"-\" + managedServerNameBase;\n+    int replicaCount = 2;\n+\n+    // verify the admin server service and pod is created\n+    checkPodReadyAndServiceExists(adminServerPodName, domainName, domainNamespace);\n+\n+    // verify managed server services created and pods are ready\n+    for (int i = 1; i <= replicaCount; i++) {\n+      checkPodReadyAndServiceExists(managedServerPodNamePrefix + i, domainName, domainNamespace);\n+    }\n+\n+    //delete the domain resource\n+    params = new CommandParams().defaults();\n+    params.command(\"kubectl delete -f \"\n+        + Paths.get(sampleBase.toString(), \"weblogic-domains/\" + domainName + \"/domain.yaml\").toString());\n+    result = Command.withParams(params).execute();\n+    assertTrue(result, \"Failed to delete domain\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "872a0e09bb2f5db1f6168b1a73709d2fd43f647d"}, "originalPosition": 181}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b85ac8178887b7128c8fb42d2c22e300c4f8d7ac", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b85ac8178887b7128c8fb42d2c22e300c4f8d7ac", "committedDate": "2020-10-20T15:51:54Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into it-samples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyOTA2OTUz", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1996#pullrequestreview-512906953", "createdAt": "2020-10-20T16:13:02Z", "commit": {"oid": "872a0e09bb2f5db1f6168b1a73709d2fd43f647d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjoxMzowMlrOHlGJnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjoxNTo0MFrOHlGU5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY2MDEyNw==", "bodyText": "What are the possible values for paramProvider ? Put on the description", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1996#discussion_r508660127", "createdAt": "2020-10-20T16:13:02Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItSamples.java", "diffHunk": "@@ -0,0 +1,305 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import oracle.weblogic.kubernetes.actions.impl.primitive.Command;\n+import oracle.weblogic.kubernetes.actions.impl.primitive.CommandParams;\n+import oracle.weblogic.kubernetes.annotations.IntegrationTest;\n+import oracle.weblogic.kubernetes.annotations.Namespaces;\n+import oracle.weblogic.kubernetes.logging.LoggingFacade;\n+import org.awaitility.core.ConditionFactory;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import static java.util.concurrent.TimeUnit.MINUTES;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+import static oracle.weblogic.kubernetes.TestConstants.ADMIN_PASSWORD_DEFAULT;\n+import static oracle.weblogic.kubernetes.TestConstants.ADMIN_USERNAME_DEFAULT;\n+import static oracle.weblogic.kubernetes.TestConstants.DOMAIN_VERSION;\n+import static oracle.weblogic.kubernetes.TestConstants.K8S_NODEPORT_HOST;\n+import static oracle.weblogic.kubernetes.TestConstants.PV_ROOT;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.ITTESTS_DIR;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.WORK_DIR;\n+import static oracle.weblogic.kubernetes.actions.TestActions.deletePersistentVolume;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.domainDoesNotExist;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.domainExists;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.pvExists;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.pvcExists;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.checkPodReadyAndServiceExists;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.createSecretWithUsernamePassword;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.installAndVerifyOperator;\n+import static oracle.weblogic.kubernetes.utils.FileUtils.replaceStringInFile;\n+import static oracle.weblogic.kubernetes.utils.ThreadSafeLogger.getLogger;\n+import static org.apache.commons.io.FileUtils.copyDirectory;\n+import static org.apache.commons.io.FileUtils.deleteDirectory;\n+import static org.awaitility.Awaitility.with;\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * Tests related to introspectVersion attribute.\n+ */\n+@DisplayName(\"Verify the domain on pv samples using wlst and wdt\")\n+@IntegrationTest\n+public class ItSamples {\n+\n+  private static String opNamespace = null;\n+  private static String domainNamespace = null;\n+\n+  private final Path samplePath = Paths.get(ITTESTS_DIR, \"../kubernetes/samples\");\n+  private final Path tempSamplePath = Paths.get(WORK_DIR, \"sample-testing\");\n+\n+  private static final String[] params = {\"wlst:domain1\", \"wdt:domain2\"};\n+\n+  // create standard, reusable retry/backoff policy\n+  private static final ConditionFactory withStandardRetryPolicy\n+      = with().pollDelay(2, SECONDS)\n+          .and().with().pollInterval(10, SECONDS)\n+          .atMost(10, MINUTES).await();\n+\n+  private static LoggingFacade logger = null;\n+\n+  /**\n+   * Assigns unique namespaces for operator and domains and installs operator.\n+   *\n+   * @param namespaces injected by JUnit\n+   */\n+  @BeforeAll\n+  public static void initAll(@Namespaces(2) List<String> namespaces) {\n+    logger = getLogger();\n+\n+    logger.info(\"Assign a unique namespace for operator\");\n+    assertNotNull(namespaces.get(0), \"Namespace is null\");\n+    opNamespace = namespaces.get(0);\n+    logger.info(\"Assign a unique namespace for Introspect Version WebLogic domain\");\n+    assertNotNull(namespaces.get(1), \"Namespace is null\");\n+    domainNamespace = namespaces.get(1);\n+\n+    // install operator and verify its running in ready state\n+    installAndVerifyOperator(opNamespace, domainNamespace);\n+  }\n+\n+  /**\n+   * Test domain in pv samples using domains created by wlst and wdt.\n+   *\n+   * @param model domain name and script type to create domain\n+   */\n+  @ParameterizedTest\n+  @MethodSource(\"paramProvider\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "872a0e09bb2f5db1f6168b1a73709d2fd43f647d"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY2MzAxMg==", "bodyText": "Can you modify the name of the Class to ItDomainOnPvSample.java", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1996#discussion_r508663012", "createdAt": "2020-10-20T16:15:40Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItSamples.java", "diffHunk": "@@ -0,0 +1,305 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.kubernetes;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import oracle.weblogic.kubernetes.actions.impl.primitive.Command;\n+import oracle.weblogic.kubernetes.actions.impl.primitive.CommandParams;\n+import oracle.weblogic.kubernetes.annotations.IntegrationTest;\n+import oracle.weblogic.kubernetes.annotations.Namespaces;\n+import oracle.weblogic.kubernetes.logging.LoggingFacade;\n+import org.awaitility.core.ConditionFactory;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import static java.util.concurrent.TimeUnit.MINUTES;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+import static oracle.weblogic.kubernetes.TestConstants.ADMIN_PASSWORD_DEFAULT;\n+import static oracle.weblogic.kubernetes.TestConstants.ADMIN_USERNAME_DEFAULT;\n+import static oracle.weblogic.kubernetes.TestConstants.DOMAIN_VERSION;\n+import static oracle.weblogic.kubernetes.TestConstants.K8S_NODEPORT_HOST;\n+import static oracle.weblogic.kubernetes.TestConstants.PV_ROOT;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.ITTESTS_DIR;\n+import static oracle.weblogic.kubernetes.actions.ActionConstants.WORK_DIR;\n+import static oracle.weblogic.kubernetes.actions.TestActions.deletePersistentVolume;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.domainDoesNotExist;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.domainExists;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.pvExists;\n+import static oracle.weblogic.kubernetes.assertions.TestAssertions.pvcExists;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.checkPodReadyAndServiceExists;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.createSecretWithUsernamePassword;\n+import static oracle.weblogic.kubernetes.utils.CommonTestUtils.installAndVerifyOperator;\n+import static oracle.weblogic.kubernetes.utils.FileUtils.replaceStringInFile;\n+import static oracle.weblogic.kubernetes.utils.ThreadSafeLogger.getLogger;\n+import static org.apache.commons.io.FileUtils.copyDirectory;\n+import static org.apache.commons.io.FileUtils.deleteDirectory;\n+import static org.awaitility.Awaitility.with;\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * Tests related to introspectVersion attribute.\n+ */\n+@DisplayName(\"Verify the domain on pv samples using wlst and wdt\")\n+@IntegrationTest\n+public class ItSamples {\n+\n+  private static String opNamespace = null;\n+  private static String domainNamespace = null;\n+\n+  private final Path samplePath = Paths.get(ITTESTS_DIR, \"../kubernetes/samples\");\n+  private final Path tempSamplePath = Paths.get(WORK_DIR, \"sample-testing\");\n+\n+  private static final String[] params = {\"wlst:domain1\", \"wdt:domain2\"};\n+\n+  // create standard, reusable retry/backoff policy\n+  private static final ConditionFactory withStandardRetryPolicy\n+      = with().pollDelay(2, SECONDS)\n+          .and().with().pollInterval(10, SECONDS)\n+          .atMost(10, MINUTES).await();\n+\n+  private static LoggingFacade logger = null;\n+\n+  /**\n+   * Assigns unique namespaces for operator and domains and installs operator.\n+   *\n+   * @param namespaces injected by JUnit\n+   */\n+  @BeforeAll\n+  public static void initAll(@Namespaces(2) List<String> namespaces) {\n+    logger = getLogger();\n+\n+    logger.info(\"Assign a unique namespace for operator\");\n+    assertNotNull(namespaces.get(0), \"Namespace is null\");\n+    opNamespace = namespaces.get(0);\n+    logger.info(\"Assign a unique namespace for Introspect Version WebLogic domain\");\n+    assertNotNull(namespaces.get(1), \"Namespace is null\");\n+    domainNamespace = namespaces.get(1);\n+\n+    // install operator and verify its running in ready state\n+    installAndVerifyOperator(opNamespace, domainNamespace);\n+  }\n+\n+  /**\n+   * Test domain in pv samples using domains created by wlst and wdt.\n+   *\n+   * @param model domain name and script type to create domain\n+   */\n+  @ParameterizedTest\n+  @MethodSource(\"paramProvider\")\n+  @DisplayName(\"Test samples using domain in pv\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "872a0e09bb2f5db1f6168b1a73709d2fd43f647d"}, "originalPosition": 101}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f9ff6f9a93a88819cd742921e2f4a53825876ce", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/1f9ff6f9a93a88819cd742921e2f4a53825876ce", "committedDate": "2020-10-20T17:57:39Z", "message": "address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa23b9cc02bae48b992756afdd8b5bc341989464", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/aa23b9cc02bae48b992756afdd8b5bc341989464", "committedDate": "2020-10-21T04:30:30Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into it-samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "958a7cb111bc17104047ee45b4e6fd4dc20ac745", "author": {"user": {"login": "sankarpn", "name": "Sankar Periyathambi Neelakandan"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/958a7cb111bc17104047ee45b4e6fd4dc20ac745", "committedDate": "2020-10-21T04:52:24Z", "message": "Add image secrets"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzOTI4MTU4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1996#pullrequestreview-513928158", "createdAt": "2020-10-21T16:42:12Z", "commit": {"oid": "958a7cb111bc17104047ee45b4e6fd4dc20ac745"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzOTc5OTk5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1996#pullrequestreview-513979999", "createdAt": "2020-10-21T17:07:34Z", "commit": {"oid": "958a7cb111bc17104047ee45b4e6fd4dc20ac745"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4255, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}