{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MTg4ODkx", "number": 1854, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzoxNTozOFrOEXnzlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTozMDoxM1rOEily7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjA0ODg1OnYy", "diffSide": "RIGHT", "path": "docs/domains/Domain.json", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzoxNTozOFrOG_gxJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNToxMToxOVrOHQi61Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1MDM0MA==", "bodyText": "This description isn't clear enough. Is this the number of attempts that have failed? What kind of failures does it include? When is it reset?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r469250340", "createdAt": "2020-08-12T13:15:38Z", "author": {"login": "rjeberhard"}, "path": "docs/domains/Domain.json", "diffHunk": "@@ -421,6 +421,11 @@\n             \"$ref\": \"#/definitions/ServerStatus\"\n           }\n         },\n+        \"retryCount\": {\n+          \"description\": \"Number of retries.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fcfc9bf03159407fb8f8f82e541850dde03ba2a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyNTM3Nw==", "bodyText": "To save time on the back-and-forth, can you start a slack discussion for this?\nMore questions:\nWhat is the interval between retries?  If greater than 0, is the interval configurable?\nHow does this interact with the operator 'domainPresenceFailureRetryMaxCount and domainPresenceFailureRetrySeconds' settings?\nWhat's the default?\nHow do you force the system to try again?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r469325377", "createdAt": "2020-08-12T15:00:20Z", "author": {"login": "tbarnes-us"}, "path": "docs/domains/Domain.json", "diffHunk": "@@ -421,6 +421,11 @@\n             \"$ref\": \"#/definitions/ServerStatus\"\n           }\n         },\n+        \"retryCount\": {\n+          \"description\": \"Number of retries.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1MDM0MA=="}, "originalCommit": {"oid": "5fcfc9bf03159407fb8f8f82e541850dde03ba2a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM5NTUzMA==", "bodyText": "It only works with domainPresenceFailureRetryMaxCount (default is 5), I don't see domainPresenceFailureRetrySeconds used anymore.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r472395530", "createdAt": "2020-08-18T18:24:11Z", "author": {"login": "jshum2479"}, "path": "docs/domains/Domain.json", "diffHunk": "@@ -421,6 +421,11 @@\n             \"$ref\": \"#/definitions/ServerStatus\"\n           }\n         },\n+        \"retryCount\": {\n+          \"description\": \"Number of retries.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1MDM0MA=="}, "originalCommit": {"oid": "5fcfc9bf03159407fb8f8f82e541850dde03ba2a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM5Njg5MQ==", "bodyText": "We can force retry before the 2 minute interval by changing restart/introspect/image name in the spec (or after it exceeded the limit).   Other changes can happen in between the intervals (e.g. configmap, image with same name/tag)", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r472396891", "createdAt": "2020-08-18T18:26:31Z", "author": {"login": "jshum2479"}, "path": "docs/domains/Domain.json", "diffHunk": "@@ -421,6 +421,11 @@\n             \"$ref\": \"#/definitions/ServerStatus\"\n           }\n         },\n+        \"retryCount\": {\n+          \"description\": \"Number of retries.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1MDM0MA=="}, "originalCommit": {"oid": "5fcfc9bf03159407fb8f8f82e541850dde03ba2a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzExMTM4MQ==", "bodyText": "Description has been changed. Whenever the spec changed that forces introspection, the count is reset", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r487111381", "createdAt": "2020-09-11T15:11:19Z", "author": {"login": "jshum2479"}, "path": "docs/domains/Domain.json", "diffHunk": "@@ -421,6 +421,11 @@\n             \"$ref\": \"#/definitions/ServerStatus\"\n           }\n         },\n+        \"retryCount\": {\n+          \"description\": \"Number of retries.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1MDM0MA=="}, "originalCommit": {"oid": "5fcfc9bf03159407fb8f8f82e541850dde03ba2a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjA1NTI0OnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzoxNzoxOVrOG_g1MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMDoxNDozNlrOHCkjlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1MTM3Ng==", "bodyText": "Is there a way we can return a fatal error more clearly? It seems brittle to rely on a specific string like this.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r469251376", "createdAt": "2020-08-12T13:17:19Z", "author": {"login": "rjeberhard"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -630,10 +631,31 @@ public boolean wasInspectionRun() {\n \n     private boolean isShouldContinue() {\n       DomainPresenceInfo cachedInfo = getExistingDomainPresenceInfo(getNamespace(), getDomainUid());\n+      int currentRetryCount = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getRetryCount)\n+          .orElse(0);\n+\n+      String existingError = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getMessage)\n+          .orElse(null);\n+\n       if (cachedInfo == null || cachedInfo.getDomain() == null) {\n         return true;\n+      } else if (currentRetryCount > DomainPresence.getDomainPresenceFailureRetryMaxCount()) {\n+        LOGGER.fine(\"Stop introspection retry - exceeded configured domainPresenceFailureRetryMaxCount: \"\n+            + DomainPresence.getDomainPresenceFailureRetryMaxCount());\n+        return false;\n       } else if (isCachedInfoNewer(liveInfo, cachedInfo)) {\n         return false;  // we have already cached this\n+      } else if (existingError != null && existingError.startsWith(\"MII Fatal Error\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fcfc9bf03159407fb8f8f82e541850dde03ba2a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyMzUzMA==", "bodyText": "I don't see how to eliminate dependence on string parsing, but to make it less specific to MII and maybe a bit less brittle, perhaps use 'contains' instead of 'starts' and look for a string like 'FatalIntrospectorError'?  What do you think @rjeberhard ?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r469323530", "createdAt": "2020-08-12T14:57:57Z", "author": {"login": "tbarnes-us"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -630,10 +631,31 @@ public boolean wasInspectionRun() {\n \n     private boolean isShouldContinue() {\n       DomainPresenceInfo cachedInfo = getExistingDomainPresenceInfo(getNamespace(), getDomainUid());\n+      int currentRetryCount = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getRetryCount)\n+          .orElse(0);\n+\n+      String existingError = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getMessage)\n+          .orElse(null);\n+\n       if (cachedInfo == null || cachedInfo.getDomain() == null) {\n         return true;\n+      } else if (currentRetryCount > DomainPresence.getDomainPresenceFailureRetryMaxCount()) {\n+        LOGGER.fine(\"Stop introspection retry - exceeded configured domainPresenceFailureRetryMaxCount: \"\n+            + DomainPresence.getDomainPresenceFailureRetryMaxCount());\n+        return false;\n       } else if (isCachedInfoNewer(liveInfo, cachedInfo)) {\n         return false;  // we have already cached this\n+      } else if (existingError != null && existingError.startsWith(\"MII Fatal Error\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1MTM3Ng=="}, "originalCommit": {"oid": "5fcfc9bf03159407fb8f8f82e541850dde03ba2a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzMTA4NA==", "bodyText": "That would be okay, but my expectation is that the introspector is returning structured data, of which the error message is one value. The least brittle would be if there was a value for \"isFatalError\" or \"isPermanentFailure\". However, I'm okay with something like what you propose.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r469331084", "createdAt": "2020-08-12T15:08:07Z", "author": {"login": "rjeberhard"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -630,10 +631,31 @@ public boolean wasInspectionRun() {\n \n     private boolean isShouldContinue() {\n       DomainPresenceInfo cachedInfo = getExistingDomainPresenceInfo(getNamespace(), getDomainUid());\n+      int currentRetryCount = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getRetryCount)\n+          .orElse(0);\n+\n+      String existingError = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getMessage)\n+          .orElse(null);\n+\n       if (cachedInfo == null || cachedInfo.getDomain() == null) {\n         return true;\n+      } else if (currentRetryCount > DomainPresence.getDomainPresenceFailureRetryMaxCount()) {\n+        LOGGER.fine(\"Stop introspection retry - exceeded configured domainPresenceFailureRetryMaxCount: \"\n+            + DomainPresence.getDomainPresenceFailureRetryMaxCount());\n+        return false;\n       } else if (isCachedInfoNewer(liveInfo, cachedInfo)) {\n         return false;  // we have already cached this\n+      } else if (existingError != null && existingError.startsWith(\"MII Fatal Error\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1MTM3Ng=="}, "originalCommit": {"oid": "5fcfc9bf03159407fb8f8f82e541850dde03ba2a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ1ODEzMw==", "bodyText": "I changed it to contains \"FatalIntrospectorError\". Eventually If we can change the introspect job and operator java code has a more flexible way to communicate other than just a return code, then we can experiment the idea of always return 0 but have some text that gives more structured data.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r472458133", "createdAt": "2020-08-18T20:14:36Z", "author": {"login": "jshum2479"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -630,10 +631,31 @@ public boolean wasInspectionRun() {\n \n     private boolean isShouldContinue() {\n       DomainPresenceInfo cachedInfo = getExistingDomainPresenceInfo(getNamespace(), getDomainUid());\n+      int currentRetryCount = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getRetryCount)\n+          .orElse(0);\n+\n+      String existingError = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getMessage)\n+          .orElse(null);\n+\n       if (cachedInfo == null || cachedInfo.getDomain() == null) {\n         return true;\n+      } else if (currentRetryCount > DomainPresence.getDomainPresenceFailureRetryMaxCount()) {\n+        LOGGER.fine(\"Stop introspection retry - exceeded configured domainPresenceFailureRetryMaxCount: \"\n+            + DomainPresence.getDomainPresenceFailureRetryMaxCount());\n+        return false;\n       } else if (isCachedInfoNewer(liveInfo, cachedInfo)) {\n         return false;  // we have already cached this\n+      } else if (existingError != null && existingError.startsWith(\"MII Fatal Error\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1MTM3Ng=="}, "originalCommit": {"oid": "5fcfc9bf03159407fb8f8f82e541850dde03ba2a"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjA3MTIyOnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzoyMDo1N1rOG_g-tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODoyNzozOVrOHCg2qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1MzgxMw==", "bodyText": "This PR is missing behavior that resets the retry count on introspectVersion or other changes.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r469253813", "createdAt": "2020-08-12T13:20:57Z", "author": {"login": "rjeberhard"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -630,10 +631,31 @@ public boolean wasInspectionRun() {\n \n     private boolean isShouldContinue() {\n       DomainPresenceInfo cachedInfo = getExistingDomainPresenceInfo(getNamespace(), getDomainUid());\n+      int currentRetryCount = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getRetryCount)\n+          .orElse(0);\n+\n+      String existingError = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getMessage)\n+          .orElse(null);\n+\n       if (cachedInfo == null || cachedInfo.getDomain() == null) {\n         return true;\n+      } else if (currentRetryCount > DomainPresence.getDomainPresenceFailureRetryMaxCount()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fcfc9bf03159407fb8f8f82e541850dde03ba2a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM5NzQ4MA==", "bodyText": "There is a reset now", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r472397480", "createdAt": "2020-08-18T18:27:39Z", "author": {"login": "jshum2479"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -630,10 +631,31 @@ public boolean wasInspectionRun() {\n \n     private boolean isShouldContinue() {\n       DomainPresenceInfo cachedInfo = getExistingDomainPresenceInfo(getNamespace(), getDomainUid());\n+      int currentRetryCount = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getRetryCount)\n+          .orElse(0);\n+\n+      String existingError = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getMessage)\n+          .orElse(null);\n+\n       if (cachedInfo == null || cachedInfo.getDomain() == null) {\n         return true;\n+      } else if (currentRetryCount > DomainPresence.getDomainPresenceFailureRetryMaxCount()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1MzgxMw=="}, "originalCommit": {"oid": "5fcfc9bf03159407fb8f8f82e541850dde03ba2a"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjU3MzE0OnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNToxMjowNFrOG_l3dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo1MjoyOVrOHChp4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzMzg3OA==", "bodyText": "Is it only introspection failures that cause a limited number of retries, or there other types of validation failures?  If so, then the wording is misleading.\nShould the text say 'domain.spec.retryCount' instead of 'domainPresenceFailureRetryMaxCount'?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r469333878", "createdAt": "2020-08-12T15:12:04Z", "author": {"login": "tbarnes-us"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -630,10 +631,31 @@ public boolean wasInspectionRun() {\n \n     private boolean isShouldContinue() {\n       DomainPresenceInfo cachedInfo = getExistingDomainPresenceInfo(getNamespace(), getDomainUid());\n+      int currentRetryCount = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getRetryCount)\n+          .orElse(0);\n+\n+      String existingError = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getMessage)\n+          .orElse(null);\n+\n       if (cachedInfo == null || cachedInfo.getDomain() == null) {\n         return true;\n+      } else if (currentRetryCount > DomainPresence.getDomainPresenceFailureRetryMaxCount()) {\n+        LOGGER.fine(\"Stop introspection retry - exceeded configured domainPresenceFailureRetryMaxCount: \"\n+            + DomainPresence.getDomainPresenceFailureRetryMaxCount());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fcfc9bf03159407fb8f8f82e541850dde03ba2a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxMDU5NQ==", "bodyText": "The max count actually is an operator tuning parameter not in domain spec", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r472410595", "createdAt": "2020-08-18T18:52:29Z", "author": {"login": "jshum2479"}, "path": "operator/src/main/java/oracle/kubernetes/operator/DomainProcessorImpl.java", "diffHunk": "@@ -630,10 +631,31 @@ public boolean wasInspectionRun() {\n \n     private boolean isShouldContinue() {\n       DomainPresenceInfo cachedInfo = getExistingDomainPresenceInfo(getNamespace(), getDomainUid());\n+      int currentRetryCount = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getRetryCount)\n+          .orElse(0);\n+\n+      String existingError = Optional.ofNullable(liveInfo)\n+          .map(DomainPresenceInfo::getDomain)\n+          .map(Domain::getStatus)\n+          .map(DomainStatus::getMessage)\n+          .orElse(null);\n+\n       if (cachedInfo == null || cachedInfo.getDomain() == null) {\n         return true;\n+      } else if (currentRetryCount > DomainPresence.getDomainPresenceFailureRetryMaxCount()) {\n+        LOGGER.fine(\"Stop introspection retry - exceeded configured domainPresenceFailureRetryMaxCount: \"\n+            + DomainPresence.getDomainPresenceFailureRetryMaxCount());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzMzg3OA=="}, "originalCommit": {"oid": "5fcfc9bf03159407fb8f8f82e541850dde03ba2a"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDU1NDQzOnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/DomainStatus.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjoxMzoyOFrOHMt7vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNToxMDowNlrOHQi4Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA5NzUzNQ==", "bodyText": "(1) Rename to: IntrospectorJobFailureCount\n(2) Change text to:  \"The IntrospectorJobFailureCount is non-zero if introspector has failed.  Configure the maximum retry count using operator tuning parameter XXX.\"  (Look in our documentation to get the official name for 'operator tuning parameter'.)\n(3) Modify the documentation for operator tuning parameters if needed.  For example, remove documentation for the (ignored) interval setting.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r483097535", "createdAt": "2020-09-03T16:13:28Z", "author": {"login": "tbarnes-us"}, "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/DomainStatus.java", "diffHunk": "@@ -276,6 +284,45 @@ public DomainStatus withReplicas(Integer replicas) {\n     return this;\n   }\n \n+  /**\n+   * The number of retries for an introspect job that fails.\n+   *\n+   * @return introspectJobFailureRetryCount\n+   */\n+  public Integer getIntrospectJobFailureRetryCount() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd31afa4f4c0c8b995f2a80e10cf96471d03915c"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzExMDY2Ng==", "bodyText": "done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r487110666", "createdAt": "2020-09-11T15:10:06Z", "author": {"login": "jshum2479"}, "path": "operator/src/main/java/oracle/kubernetes/weblogic/domain/model/DomainStatus.java", "diffHunk": "@@ -276,6 +284,45 @@ public DomainStatus withReplicas(Integer replicas) {\n     return this;\n   }\n \n+  /**\n+   * The number of retries for an introspect job that fails.\n+   *\n+   * @return introspectJobFailureRetryCount\n+   */\n+  public Integer getIntrospectJobFailureRetryCount() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA5NzUzNQ=="}, "originalCommit": {"oid": "cd31afa4f4c0c8b995f2a80e10cf96471d03915c"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzk1NzIwOnYy", "diffSide": "RIGHT", "path": "operator/src/main/resources/Operator.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNToxNToxMVrOHPMXRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzoxODowMlrOHPSLJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY5MzI1Mw==", "bodyText": "(1) Suggested new text:  Retrying failed domain {0} introspect job, retry {1} of a maximum of {2}.\n(2) Can you add a new 'Retrying' INFO for the 'infinite' retry case?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r485693253", "createdAt": "2020-09-09T15:15:11Z", "author": {"login": "tbarnes-us"}, "path": "operator/src/main/resources/Operator.properties", "diffHunk": "@@ -205,7 +205,8 @@ WLSDO-0012=Managed Server ''{0}'' specified in the domain resource does not exis\n WLSDO-0013=Istio is enabled and the domain resource specified to expose channel {0} in the adminServices section. The channel name default, \\\n default-admin, default-secure are internal to the WebLogic Kubernetes Operator. Please create the network channel with a different name in the WebLogic Domain before \\\n exposing it.\n-WLSDO-0014=\"The introspect job had failed, retrying introspection job. Current failure count: {0}.\"\n+WLSDO-0014=\"The domain {0} introspect job failed, it will automatically retry in {1} seconds.\"\n+WLSDO-0015=\"Retrying failed domain {0} introspect job {1} of {2}.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9394b89633d08666d701708eb41a1dcb5b860c70"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc4ODQ1NA==", "bodyText": "1 is done.\n2 has a severe message\nWLSKO-0157=Domain {0} is not valid: {1}", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r485788454", "createdAt": "2020-09-09T17:18:02Z", "author": {"login": "jshum2479"}, "path": "operator/src/main/resources/Operator.properties", "diffHunk": "@@ -205,7 +205,8 @@ WLSDO-0012=Managed Server ''{0}'' specified in the domain resource does not exis\n WLSDO-0013=Istio is enabled and the domain resource specified to expose channel {0} in the adminServices section. The channel name default, \\\n default-admin, default-secure are internal to the WebLogic Kubernetes Operator. Please create the network channel with a different name in the WebLogic Domain before \\\n exposing it.\n-WLSDO-0014=\"The introspect job had failed, retrying introspection job. Current failure count: {0}.\"\n+WLSDO-0014=\"The domain {0} introspect job failed, it will automatically retry in {1} seconds.\"\n+WLSDO-0015=\"Retrying failed domain {0} introspect job {1} of {2}.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY5MzI1Mw=="}, "originalCommit": {"oid": "9394b89633d08666d701708eb41a1dcb5b860c70"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzk2ODY2OnYy", "diffSide": "RIGHT", "path": "operator/src/main/resources/Operator.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNToxNzozN1rOHPMeaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzoxODoxMFrOHPSLYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY5NTA4MA==", "bodyText": "Can you add \", current number of retries = {2}\" or \", total number of attempts = {2}\" (where the latter == retries + 1)?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r485695080", "createdAt": "2020-09-09T15:17:37Z", "author": {"login": "tbarnes-us"}, "path": "operator/src/main/resources/Operator.properties", "diffHunk": "@@ -205,7 +205,8 @@ WLSDO-0012=Managed Server ''{0}'' specified in the domain resource does not exis\n WLSDO-0013=Istio is enabled and the domain resource specified to expose channel {0} in the adminServices section. The channel name default, \\\n default-admin, default-secure are internal to the WebLogic Kubernetes Operator. Please create the network channel with a different name in the WebLogic Domain before \\\n exposing it.\n-WLSDO-0014=\"The introspect job had failed, retrying introspection job. Current failure count: {0}.\"\n+WLSDO-0014=\"The domain {0} introspect job failed, it will automatically retry in {1} seconds.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9394b89633d08666d701708eb41a1dcb5b860c70"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc4ODUxMw==", "bodyText": "done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r485788513", "createdAt": "2020-09-09T17:18:10Z", "author": {"login": "jshum2479"}, "path": "operator/src/main/resources/Operator.properties", "diffHunk": "@@ -205,7 +205,8 @@ WLSDO-0012=Managed Server ''{0}'' specified in the domain resource does not exis\n WLSDO-0013=Istio is enabled and the domain resource specified to expose channel {0} in the adminServices section. The channel name default, \\\n default-admin, default-secure are internal to the WebLogic Kubernetes Operator. Please create the network channel with a different name in the WebLogic Domain before \\\n exposing it.\n-WLSDO-0014=\"The introspect job had failed, retrying introspection job. Current failure count: {0}.\"\n+WLSDO-0014=\"The domain {0} introspect job failed, it will automatically retry in {1} seconds.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY5NTA4MA=="}, "originalCommit": {"oid": "9394b89633d08666d701708eb41a1dcb5b860c70"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzA2Mjg0OnYy", "diffSide": "RIGHT", "path": "operator/src/main/resources/Operator.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTozMDoxM1rOHQjoYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMjo0NzoyNFrOHQvziQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEyMzA0MQ==", "bodyText": "The maximum doesn't always apply - so maybe the easiest thing to do is remove it?  Sorry if I suggested including it.  Or maybe change maximum --> \"potential maximum {2} (the retry limit does not apply to all types of failures).", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r487123041", "createdAt": "2020-09-11T15:30:13Z", "author": {"login": "tbarnes-us"}, "path": "operator/src/main/resources/Operator.properties", "diffHunk": "@@ -205,6 +205,9 @@ WLSDO-0012=Managed Server ''{0}'' specified in the domain resource does not exis\n WLSDO-0013=Istio is enabled and the domain resource specified to expose channel {0} in the adminServices section. The channel name default, \\\n default-admin, default-secure are internal to the WebLogic Kubernetes Operator. Please create the network channel with a different name in the WebLogic Domain before \\\n exposing it.\n+WLSDO-0014=The domain {0} introspect job failed, it will automatically retry in {1} seconds. Current number of  \\\n+  retries = {2}\n+WLSDO-0015=\"Retrying failed domain {0} introspect job, retry {1} of a maximum {2}.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2903e077c08b8fbb78d3c908d864bef85da69a1e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI5Mzc3MQ==", "bodyText": "I think it applies.  The domain validation fail case is not in the same code path, it spill out message in the log\nWLSKO-0157=Domain {0} is not valid: {1}", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r487293771", "createdAt": "2020-09-11T21:14:21Z", "author": {"login": "jshum2479"}, "path": "operator/src/main/resources/Operator.properties", "diffHunk": "@@ -205,6 +205,9 @@ WLSDO-0012=Managed Server ''{0}'' specified in the domain resource does not exis\n WLSDO-0013=Istio is enabled and the domain resource specified to expose channel {0} in the adminServices section. The channel name default, \\\n default-admin, default-secure are internal to the WebLogic Kubernetes Operator. Please create the network channel with a different name in the WebLogic Domain before \\\n exposing it.\n+WLSDO-0014=The domain {0} introspect job failed, it will automatically retry in {1} seconds. Current number of  \\\n+  retries = {2}\n+WLSDO-0015=\"Retrying failed domain {0} introspect job, retry {1} of a maximum {2}.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEyMzA0MQ=="}, "originalCommit": {"oid": "2903e077c08b8fbb78d3c908d864bef85da69a1e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMyMjUwNQ==", "bodyText": "Ok.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1854#discussion_r487322505", "createdAt": "2020-09-11T22:47:24Z", "author": {"login": "tbarnes-us"}, "path": "operator/src/main/resources/Operator.properties", "diffHunk": "@@ -205,6 +205,9 @@ WLSDO-0012=Managed Server ''{0}'' specified in the domain resource does not exis\n WLSDO-0013=Istio is enabled and the domain resource specified to expose channel {0} in the adminServices section. The channel name default, \\\n default-admin, default-secure are internal to the WebLogic Kubernetes Operator. Please create the network channel with a different name in the WebLogic Domain before \\\n exposing it.\n+WLSDO-0014=The domain {0} introspect job failed, it will automatically retry in {1} seconds. Current number of  \\\n+  retries = {2}\n+WLSDO-0015=\"Retrying failed domain {0} introspect job, retry {1} of a maximum {2}.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEyMzA0MQ=="}, "originalCommit": {"oid": "2903e077c08b8fbb78d3c908d864bef85da69a1e"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4176, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}