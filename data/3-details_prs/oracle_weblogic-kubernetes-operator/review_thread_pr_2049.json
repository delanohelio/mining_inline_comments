{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwMTUwNjQ2", "number": 2049, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzozMTo1M1rOE4w1Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODozOTo1MFrOE5n-MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3OTU1NzUxOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzozMTo1M1rOHy4PNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDoxNTowOVrOHy9kOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzExMjI0NA==", "bodyText": "Change the method name to verifyIntrospectVersionLabelInPod()  to represent the action.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2049#discussion_r523112244", "createdAt": "2020-11-13T17:31:53Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -1008,6 +1062,46 @@ private static void verifyMemberHealth(String adminServerPodName, List<String> m\n         });\n   }\n \n+  private void verifyWebLogicVersioninPod(int replicaCount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a423221866465f5242095ea83fa3b52b06241e96"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEyMTMzNA==", "bodyText": "Do we set the IntrospectVersion explicitly on domain resource using  spec.introspectVersion syntax  while creating the domain ?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2049#discussion_r523121334", "createdAt": "2020-11-13T17:45:52Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -1008,6 +1062,46 @@ private static void verifyMemberHealth(String adminServerPodName, List<String> m\n         });\n   }\n \n+  private void verifyWebLogicVersioninPod(int replicaCount) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzExMjI0NA=="}, "originalCommit": {"oid": "a423221866465f5242095ea83fa3b52b06241e96"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE5OTA0NQ==", "bodyText": "changed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2049#discussion_r523199045", "createdAt": "2020-11-13T20:14:13Z", "author": {"login": "hzhao-github"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -1008,6 +1062,46 @@ private static void verifyMemberHealth(String adminServerPodName, List<String> m\n         });\n   }\n \n+  private void verifyWebLogicVersioninPod(int replicaCount) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzExMjI0NA=="}, "originalCommit": {"oid": "a423221866465f5242095ea83fa3b52b06241e96"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE5OTU0NQ==", "bodyText": "yes", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2049#discussion_r523199545", "createdAt": "2020-11-13T20:15:09Z", "author": {"login": "hzhao-github"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -1008,6 +1062,46 @@ private static void verifyMemberHealth(String adminServerPodName, List<String> m\n         });\n   }\n \n+  private void verifyWebLogicVersioninPod(int replicaCount) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzExMjI0NA=="}, "originalCommit": {"oid": "a423221866465f5242095ea83fa3b52b06241e96"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3OTU2MjU3OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzozMjo0NVrOHy4SGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDoxNDo0NlrOHy9jfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzExMjk4NQ==", "bodyText": "Change the method name to verifyIntrospectVersionLabelValue() to represent the action", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2049#discussion_r523112985", "createdAt": "2020-11-13T17:32:45Z", "author": {"login": "anpanigr"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -1008,6 +1062,46 @@ private static void verifyMemberHealth(String adminServerPodName, List<String> m\n         });\n   }\n \n+  private void verifyWebLogicVersioninPod(int replicaCount) {\n+    final String adminServerName = \"admin-server\";\n+    final String managedServerNameBase = \"ms-\";\n+    final String adminServerPodName = domainUid + \"-\" + adminServerName;\n+    String managedServerPodNamePrefix = domainUid + \"-\" + managedServerNameBase;\n+\n+    String introspectVersion =\n+        assertDoesNotThrow(() -> getCurrentIntrospectVersion(domainUid, introDomainNamespace));\n+\n+    // verify admin server pods\n+    logger.info(\"Verify weblogic.introspectVersion in admin server pod {0}\", adminServerPodName);\n+    verifyWebLogicVersionValue(adminServerPodName, introspectVersion);\n+\n+    // verify managed server pods\n+    for (int i = 1; i <= replicaCount; i++) {\n+      logger.info(\"Verify weblogic.introspectVersion in managed server pod {0}\",\n+          managedServerPodNamePrefix + i);\n+      verifyWebLogicVersionValue(managedServerPodNamePrefix + i, introspectVersion);\n+    }\n+  }\n+\n+  private void verifyWebLogicVersionValue(String podName, String introspectVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a423221866465f5242095ea83fa3b52b06241e96"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE5OTM1Ng==", "bodyText": "changed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2049#discussion_r523199356", "createdAt": "2020-11-13T20:14:46Z", "author": {"login": "hzhao-github"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItIntrospectVersion.java", "diffHunk": "@@ -1008,6 +1062,46 @@ private static void verifyMemberHealth(String adminServerPodName, List<String> m\n         });\n   }\n \n+  private void verifyWebLogicVersioninPod(int replicaCount) {\n+    final String adminServerName = \"admin-server\";\n+    final String managedServerNameBase = \"ms-\";\n+    final String adminServerPodName = domainUid + \"-\" + adminServerName;\n+    String managedServerPodNamePrefix = domainUid + \"-\" + managedServerNameBase;\n+\n+    String introspectVersion =\n+        assertDoesNotThrow(() -> getCurrentIntrospectVersion(domainUid, introDomainNamespace));\n+\n+    // verify admin server pods\n+    logger.info(\"Verify weblogic.introspectVersion in admin server pod {0}\", adminServerPodName);\n+    verifyWebLogicVersionValue(adminServerPodName, introspectVersion);\n+\n+    // verify managed server pods\n+    for (int i = 1; i <= replicaCount; i++) {\n+      logger.info(\"Verify weblogic.introspectVersion in managed server pod {0}\",\n+          managedServerPodNamePrefix + i);\n+      verifyWebLogicVersionValue(managedServerPodNamePrefix + i, introspectVersion);\n+    }\n+  }\n+\n+  private void verifyWebLogicVersionValue(String podName, String introspectVersion) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzExMjk4NQ=="}, "originalCommit": {"oid": "a423221866465f5242095ea83fa3b52b06241e96"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODU5MTg0OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODozOTo1MFrOH0MWdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMTowOTozN1rOH0SCgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ5MDM1OQ==", "bodyText": "no implementation in TestActions.java. create a method in Domain class and call that from here.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2049#discussion_r524490359", "createdAt": "2020-11-16T18:39:50Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -263,6 +263,22 @@ public static boolean patchDomainResourceWithNewIntrospectVersion(\n     return Domain.patchDomainResourceWithNewIntrospectVersion(domainUid, namespace);\n   }\n \n+  /**\n+   * Get current introspectVersion for a given domain.\n+   *\n+   * @param domainUid domain id\n+   * @param namespace namespace in which the domain resource exists\n+   * @return String containing current introspectVersion\n+   * @throws ApiException when getting domain resource fails\n+   */\n+  public static String getCurrentIntrospectVersion(String domainUid, String namespace) throws ApiException {\n+    LoggingFacade logger = getLogger();\n+    oracle.weblogic.domain.Domain domain = Domain.getDomainCustomResource(domainUid, namespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb31d7330ea94a3398e8890e535b69ce4a422bea"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU4MzU1NQ==", "bodyText": "changed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2049#discussion_r524583555", "createdAt": "2020-11-16T21:09:37Z", "author": {"login": "hzhao-github"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -263,6 +263,22 @@ public static boolean patchDomainResourceWithNewIntrospectVersion(\n     return Domain.patchDomainResourceWithNewIntrospectVersion(domainUid, namespace);\n   }\n \n+  /**\n+   * Get current introspectVersion for a given domain.\n+   *\n+   * @param domainUid domain id\n+   * @param namespace namespace in which the domain resource exists\n+   * @return String containing current introspectVersion\n+   * @throws ApiException when getting domain resource fails\n+   */\n+  public static String getCurrentIntrospectVersion(String domainUid, String namespace) throws ApiException {\n+    LoggingFacade logger = getLogger();\n+    oracle.weblogic.domain.Domain domain = Domain.getDomainCustomResource(domainUid, namespace);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ5MDM1OQ=="}, "originalCommit": {"oid": "eb31d7330ea94a3398e8890e535b69ce4a422bea"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3741, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}