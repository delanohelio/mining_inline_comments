{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MTI2MTAx", "number": 1639, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNToxMTowNVrOD7sq_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwMjoxNzoyNFrOD9IRsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzOTI0NDc4OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/DbUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNToxMTowNVrOGULg0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwNToyODozMVrOGWeWKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgxMzMzMQ==", "bodyText": "Delete commented out code.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1639#discussion_r423813331", "createdAt": "2020-05-12T15:11:05Z", "author": {"login": "rjeberhard"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/DbUtils.java", "diffHunk": "@@ -230,16 +217,84 @@ public static void deleteNamespace(String namespace) throws Exception {\n   }\n \n   /**\n-   * create a namespace.\n-   *\n-   * @param namespace - namespace to create\n-   * @throws Exception - if any error occurs\n+   * Create a namespace.\n+   * \n+   * @param namespace namespace to create\n+   * @throws Exception if any error occurs\n    */\n   public static void createNamespace(String namespace) throws Exception {\n     if (!namespace.equalsIgnoreCase(\"default\")) {\n-      String command = \"kubectl create ns \" + namespace;\n-      logger.info(\"Running \" + command);\n-      TestUtils.execOrAbortProcess(command);\n+      String cmd1 = \"kubectl delete ns \" + namespace + \" --ignore-not-found\";\n+      logger.info(\"Running \" + cmd1);\n+      TestUtils.execOrAbortProcess(cmd1, true);\n+      String cmd2 = \"kubectl create ns \" + namespace;\n+      logger.info(\"Running \" + cmd2);\n+      TestUtils.execOrAbortProcess(cmd2, true);\n+    }\n+  }\n+  \n+  /**\n+   * Start DB instance, create Oracle rcu pod and load database schema in the specified namespace.\n+   * \n+   * @param scriptsDir directory of scripts\n+   * @param dbPort NodePort of DB\n+   * @param dbUrl URL of DB\n+   * @param rcuSchemaPrefix rcu SchemaPrefixe\n+   * @param namespace namespace where DB and RCU schema are going to start\n+   * @throws Exception if any error occurs when setting up RCU database\n+   */\n+  public static void setupRcuDatabase(String scriptsDir, int dbPort, String dbUrl, \n+      String rcuSchemaPrefix, String namespace) throws Exception {  \n+    \n+    createNamespace(namespace);\n+    createDockerRegistrySecret(namespace);\n+    /*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c4522c445d8dc1e996131bfdc0d3c1c1d93869e"}, "originalPosition": 365}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIxOTA1MQ==", "bodyText": "Done.\n(Sorry, I just saw this review comment.  Since I don't know if we are going to need this kind of change in the old integration test  I just created a draft PR without code cleanup.)", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1639#discussion_r426219051", "createdAt": "2020-05-17T05:28:31Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/DbUtils.java", "diffHunk": "@@ -230,16 +217,84 @@ public static void deleteNamespace(String namespace) throws Exception {\n   }\n \n   /**\n-   * create a namespace.\n-   *\n-   * @param namespace - namespace to create\n-   * @throws Exception - if any error occurs\n+   * Create a namespace.\n+   * \n+   * @param namespace namespace to create\n+   * @throws Exception if any error occurs\n    */\n   public static void createNamespace(String namespace) throws Exception {\n     if (!namespace.equalsIgnoreCase(\"default\")) {\n-      String command = \"kubectl create ns \" + namespace;\n-      logger.info(\"Running \" + command);\n-      TestUtils.execOrAbortProcess(command);\n+      String cmd1 = \"kubectl delete ns \" + namespace + \" --ignore-not-found\";\n+      logger.info(\"Running \" + cmd1);\n+      TestUtils.execOrAbortProcess(cmd1, true);\n+      String cmd2 = \"kubectl create ns \" + namespace;\n+      logger.info(\"Running \" + cmd2);\n+      TestUtils.execOrAbortProcess(cmd2, true);\n+    }\n+  }\n+  \n+  /**\n+   * Start DB instance, create Oracle rcu pod and load database schema in the specified namespace.\n+   * \n+   * @param scriptsDir directory of scripts\n+   * @param dbPort NodePort of DB\n+   * @param dbUrl URL of DB\n+   * @param rcuSchemaPrefix rcu SchemaPrefixe\n+   * @param namespace namespace where DB and RCU schema are going to start\n+   * @throws Exception if any error occurs when setting up RCU database\n+   */\n+  public static void setupRcuDatabase(String scriptsDir, int dbPort, String dbUrl, \n+      String rcuSchemaPrefix, String namespace) throws Exception {  \n+    \n+    createNamespace(namespace);\n+    createDockerRegistrySecret(namespace);\n+    /*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgxMzMzMQ=="}, "originalCommit": {"oid": "1c4522c445d8dc1e996131bfdc0d3c1c1d93869e"}, "originalPosition": 365}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzOTI0NjgxOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/DbUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNToxMTozNFrOGULiJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwNToyODo0MlrOGWeWNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgxMzY2OQ==", "bodyText": "Describe what must still be done if you are leaving a TODO.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1639#discussion_r423813669", "createdAt": "2020-05-12T15:11:34Z", "author": {"login": "rjeberhard"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/DbUtils.java", "diffHunk": "@@ -230,16 +217,84 @@ public static void deleteNamespace(String namespace) throws Exception {\n   }\n \n   /**\n-   * create a namespace.\n-   *\n-   * @param namespace - namespace to create\n-   * @throws Exception - if any error occurs\n+   * Create a namespace.\n+   * \n+   * @param namespace namespace to create\n+   * @throws Exception if any error occurs\n    */\n   public static void createNamespace(String namespace) throws Exception {\n     if (!namespace.equalsIgnoreCase(\"default\")) {\n-      String command = \"kubectl create ns \" + namespace;\n-      logger.info(\"Running \" + command);\n-      TestUtils.execOrAbortProcess(command);\n+      String cmd1 = \"kubectl delete ns \" + namespace + \" --ignore-not-found\";\n+      logger.info(\"Running \" + cmd1);\n+      TestUtils.execOrAbortProcess(cmd1, true);\n+      String cmd2 = \"kubectl create ns \" + namespace;\n+      logger.info(\"Running \" + cmd2);\n+      TestUtils.execOrAbortProcess(cmd2, true);\n+    }\n+  }\n+  \n+  /**\n+   * Start DB instance, create Oracle rcu pod and load database schema in the specified namespace.\n+   * \n+   * @param scriptsDir directory of scripts\n+   * @param dbPort NodePort of DB\n+   * @param dbUrl URL of DB\n+   * @param rcuSchemaPrefix rcu SchemaPrefixe\n+   * @param namespace namespace where DB and RCU schema are going to start\n+   * @throws Exception if any error occurs when setting up RCU database\n+   */\n+  public static void setupRcuDatabase(String scriptsDir, int dbPort, String dbUrl, \n+      String rcuSchemaPrefix, String namespace) throws Exception {  \n+    \n+    createNamespace(namespace);\n+    createDockerRegistrySecret(namespace);\n+    /*\n+    //delete leftover pods caused by test being aborted\n+    deleteRcuPod(scriptsDir);\n+    deleteDbPod(scriptsDir);\n+    \n+    startOracleDB(scriptsDir, String.valueOf(dbPort), namespace);\n+    createRcuSchema(scriptsDir,rcuSchemaPrefix, dbUrl, namespace);\n+    */\n+    String cmd1 = \"mkdir -p \" + scriptsDir\n+        + \"/scripts/create-rcu-schema/rcuoutput\";\n+    TestUtils.execOrAbortProcess(cmd1);\n+    String cmd2 = \"cp \" \n+        + scriptsDir\n+        + \"/scripts/create-rcu-schema/common/rcu.yaml \"\n+        + scriptsDir\n+        + \"/scripts/create-rcu-schema/rcuoutput/\";\n+    TestUtils.execOrAbortProcess(cmd2);\n+    createDBandRCUschema(scriptsDir, dbPort, dbUrl, rcuSchemaPrefix, namespace);\n+    LoggerHelper.getLocal().log(Level.INFO,\"RCU schema is going to create for:\" \n+        + \" namespace: \" + namespace \n+        + \" dbUrl:\" + dbUrl \n+        + \" dbPort: \" + dbPort\n+        + \" rcuSchemaPrefix: \" + rcuSchemaPrefix); \n+    \n+  }\n+  \n+  private static void createDBandRCUschema(String scriptsDir, int dbPort, String dbUrl, \n+      String rcuSchemaPrefix, String namespace) throws Exception {\n+    count++;\n+    if (count < 2) {\n+      deleteRcuPod(scriptsDir);\n+      deleteDbPod(scriptsDir);\n+      try {\n+        startOracleDB(scriptsDir, String.valueOf(dbPort), namespace);\n+        createRcuSchema(scriptsDir,rcuSchemaPrefix, dbUrl, namespace);\n+        LoggerHelper.getLocal().log(Level.INFO,\"RCU schema is created for:\" \n+            + \" namespace: \" + namespace \n+            + \" dbUrl:\" + dbUrl \n+            + \" dbPort: \" + dbPort\n+            + \" rcuSchemaPrefix: \" + rcuSchemaPrefix);\n+        //TODO", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c4522c445d8dc1e996131bfdc0d3c1c1d93869e"}, "originalPosition": 405}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIxOTA2Mg==", "bodyText": "Done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1639#discussion_r426219062", "createdAt": "2020-05-17T05:28:42Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/DbUtils.java", "diffHunk": "@@ -230,16 +217,84 @@ public static void deleteNamespace(String namespace) throws Exception {\n   }\n \n   /**\n-   * create a namespace.\n-   *\n-   * @param namespace - namespace to create\n-   * @throws Exception - if any error occurs\n+   * Create a namespace.\n+   * \n+   * @param namespace namespace to create\n+   * @throws Exception if any error occurs\n    */\n   public static void createNamespace(String namespace) throws Exception {\n     if (!namespace.equalsIgnoreCase(\"default\")) {\n-      String command = \"kubectl create ns \" + namespace;\n-      logger.info(\"Running \" + command);\n-      TestUtils.execOrAbortProcess(command);\n+      String cmd1 = \"kubectl delete ns \" + namespace + \" --ignore-not-found\";\n+      logger.info(\"Running \" + cmd1);\n+      TestUtils.execOrAbortProcess(cmd1, true);\n+      String cmd2 = \"kubectl create ns \" + namespace;\n+      logger.info(\"Running \" + cmd2);\n+      TestUtils.execOrAbortProcess(cmd2, true);\n+    }\n+  }\n+  \n+  /**\n+   * Start DB instance, create Oracle rcu pod and load database schema in the specified namespace.\n+   * \n+   * @param scriptsDir directory of scripts\n+   * @param dbPort NodePort of DB\n+   * @param dbUrl URL of DB\n+   * @param rcuSchemaPrefix rcu SchemaPrefixe\n+   * @param namespace namespace where DB and RCU schema are going to start\n+   * @throws Exception if any error occurs when setting up RCU database\n+   */\n+  public static void setupRcuDatabase(String scriptsDir, int dbPort, String dbUrl, \n+      String rcuSchemaPrefix, String namespace) throws Exception {  \n+    \n+    createNamespace(namespace);\n+    createDockerRegistrySecret(namespace);\n+    /*\n+    //delete leftover pods caused by test being aborted\n+    deleteRcuPod(scriptsDir);\n+    deleteDbPod(scriptsDir);\n+    \n+    startOracleDB(scriptsDir, String.valueOf(dbPort), namespace);\n+    createRcuSchema(scriptsDir,rcuSchemaPrefix, dbUrl, namespace);\n+    */\n+    String cmd1 = \"mkdir -p \" + scriptsDir\n+        + \"/scripts/create-rcu-schema/rcuoutput\";\n+    TestUtils.execOrAbortProcess(cmd1);\n+    String cmd2 = \"cp \" \n+        + scriptsDir\n+        + \"/scripts/create-rcu-schema/common/rcu.yaml \"\n+        + scriptsDir\n+        + \"/scripts/create-rcu-schema/rcuoutput/\";\n+    TestUtils.execOrAbortProcess(cmd2);\n+    createDBandRCUschema(scriptsDir, dbPort, dbUrl, rcuSchemaPrefix, namespace);\n+    LoggerHelper.getLocal().log(Level.INFO,\"RCU schema is going to create for:\" \n+        + \" namespace: \" + namespace \n+        + \" dbUrl:\" + dbUrl \n+        + \" dbPort: \" + dbPort\n+        + \" rcuSchemaPrefix: \" + rcuSchemaPrefix); \n+    \n+  }\n+  \n+  private static void createDBandRCUschema(String scriptsDir, int dbPort, String dbUrl, \n+      String rcuSchemaPrefix, String namespace) throws Exception {\n+    count++;\n+    if (count < 2) {\n+      deleteRcuPod(scriptsDir);\n+      deleteDbPod(scriptsDir);\n+      try {\n+        startOracleDB(scriptsDir, String.valueOf(dbPort), namespace);\n+        createRcuSchema(scriptsDir,rcuSchemaPrefix, dbUrl, namespace);\n+        LoggerHelper.getLocal().log(Level.INFO,\"RCU schema is created for:\" \n+            + \" namespace: \" + namespace \n+            + \" dbUrl:\" + dbUrl \n+            + \" dbPort: \" + dbPort\n+            + \" rcuSchemaPrefix: \" + rcuSchemaPrefix);\n+        //TODO", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgxMzY2OQ=="}, "originalCommit": {"oid": "1c4522c445d8dc1e996131bfdc0d3c1c1d93869e"}, "originalPosition": 405}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDI1MzI4OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/DbUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwMjoxNzoyNFrOGWdvmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwNToyODo1MlrOGWeWPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIwOTE3Ng==", "bodyText": "Oracle DB - be consistent, and Oracle has to have a capital O", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1639#discussion_r426209176", "createdAt": "2020-05-17T02:17:24Z", "author": {"login": "markxnelson"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/DbUtils.java", "diffHunk": "@@ -17,14 +17,17 @@\n   public static final String DEFAULT_RCU_SYS_USERNAME = \"sys\";\n   public static final String DEFAULT_RCU_SYS_PASSWORD = \"Oradoc_db1\";\n   public static final String DEFAULT_RCU_NAMESPACE = \"rcu\";\n+  public static final String DEFAULT_ImagePullSecret = \"docker-store\";\n+  public static final String DEFAULT_ImagePullPolicy = \"Always\";\n+  private static int count = 0;\n   private static final Logger logger = Logger.getLogger(\"OperatorIT\", \"OperatorIT\");\n \n   /**\n-   * create oracle db pod in the k8s cluster.\n+   * Create oracle db pod in the k8s cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c4522c445d8dc1e996131bfdc0d3c1c1d93869e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIxOTA3MQ==", "bodyText": "Done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1639#discussion_r426219071", "createdAt": "2020-05-17T05:28:52Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/kubernetes/operator/utils/DbUtils.java", "diffHunk": "@@ -17,14 +17,17 @@\n   public static final String DEFAULT_RCU_SYS_USERNAME = \"sys\";\n   public static final String DEFAULT_RCU_SYS_PASSWORD = \"Oradoc_db1\";\n   public static final String DEFAULT_RCU_NAMESPACE = \"rcu\";\n+  public static final String DEFAULT_ImagePullSecret = \"docker-store\";\n+  public static final String DEFAULT_ImagePullPolicy = \"Always\";\n+  private static int count = 0;\n   private static final Logger logger = Logger.getLogger(\"OperatorIT\", \"OperatorIT\");\n \n   /**\n-   * create oracle db pod in the k8s cluster.\n+   * Create oracle db pod in the k8s cluster.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIwOTE3Ng=="}, "originalCommit": {"oid": "1c4522c445d8dc1e996131bfdc0d3c1c1d93869e"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4541, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}