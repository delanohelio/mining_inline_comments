{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNTQ3NTk1", "number": 1885, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDo0MjoxOFrOEcm85Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDo0MjoxOFrOEcm85Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NDMzNzY1OnYy", "diffSide": "LEFT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/extensions/ImageBuilders.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDo0MjoxOFrOHHPfWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNTo1ODozOVrOHHS6nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1NTg2NQ==", "bodyText": "removing this condition, test will fail when SKIP_BASIC_IMAGE_BUILD is set", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1885#discussion_r477355865", "createdAt": "2020-08-26T14:42:18Z", "author": {"login": "vanajamukkara"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/extensions/ImageBuilders.java", "diffHunk": "@@ -154,20 +172,33 @@ public void beforeAll(ExtensionContext context) {\n \n           if (!REPO_USERNAME.equals(REPO_DUMMY_VALUE)) {\n             logger.info(\"docker login\");\n-            assertTrue(dockerLogin(REPO_REGISTRY, REPO_USERNAME, REPO_PASSWORD), \"docker login failed\");\n+            withStandardRetryPolicy\n+                .conditionEvaluationListener(\n+                    condition -> logger.info(\"Waiting for docker login to be successful\"\n+                        + \"(elapsed time {0} ms, remaining time {1} ms)\",\n+                        condition.getElapsedTimeInMS(),\n+                        condition.getRemainingTimeInMS()))\n+                .until(() -> dockerLogin(OCR_REGISTRY, OCR_USERNAME, OCR_PASSWORD));\n           }\n         }\n-        // push the image\n+        // push the images to repo\n         if (!REPO_NAME.isEmpty()) {\n-          logger.info(\"docker push image {0} to {1}\", operatorImage, REPO_NAME);\n-          assertTrue(dockerPush(operatorImage), String.format(\"docker push failed for image %s\", operatorImage));\n \n-          if (System.getenv(\"SKIP_BASIC_IMAGE_BUILD\") == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "488b0e7fd55a6082afc9825905ba3551fa40d087"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQxMTkwNw==", "bodyText": "Good catch, that was removed by mistake.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1885#discussion_r477411907", "createdAt": "2020-08-26T15:58:32Z", "author": {"login": "sankarpn"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/extensions/ImageBuilders.java", "diffHunk": "@@ -154,20 +172,33 @@ public void beforeAll(ExtensionContext context) {\n \n           if (!REPO_USERNAME.equals(REPO_DUMMY_VALUE)) {\n             logger.info(\"docker login\");\n-            assertTrue(dockerLogin(REPO_REGISTRY, REPO_USERNAME, REPO_PASSWORD), \"docker login failed\");\n+            withStandardRetryPolicy\n+                .conditionEvaluationListener(\n+                    condition -> logger.info(\"Waiting for docker login to be successful\"\n+                        + \"(elapsed time {0} ms, remaining time {1} ms)\",\n+                        condition.getElapsedTimeInMS(),\n+                        condition.getRemainingTimeInMS()))\n+                .until(() -> dockerLogin(OCR_REGISTRY, OCR_USERNAME, OCR_PASSWORD));\n           }\n         }\n-        // push the image\n+        // push the images to repo\n         if (!REPO_NAME.isEmpty()) {\n-          logger.info(\"docker push image {0} to {1}\", operatorImage, REPO_NAME);\n-          assertTrue(dockerPush(operatorImage), String.format(\"docker push failed for image %s\", operatorImage));\n \n-          if (System.getenv(\"SKIP_BASIC_IMAGE_BUILD\") == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1NTg2NQ=="}, "originalCommit": {"oid": "488b0e7fd55a6082afc9825905ba3551fa40d087"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQxMTk5Ng==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1885#discussion_r477411996", "createdAt": "2020-08-26T15:58:39Z", "author": {"login": "sankarpn"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/extensions/ImageBuilders.java", "diffHunk": "@@ -154,20 +172,33 @@ public void beforeAll(ExtensionContext context) {\n \n           if (!REPO_USERNAME.equals(REPO_DUMMY_VALUE)) {\n             logger.info(\"docker login\");\n-            assertTrue(dockerLogin(REPO_REGISTRY, REPO_USERNAME, REPO_PASSWORD), \"docker login failed\");\n+            withStandardRetryPolicy\n+                .conditionEvaluationListener(\n+                    condition -> logger.info(\"Waiting for docker login to be successful\"\n+                        + \"(elapsed time {0} ms, remaining time {1} ms)\",\n+                        condition.getElapsedTimeInMS(),\n+                        condition.getRemainingTimeInMS()))\n+                .until(() -> dockerLogin(OCR_REGISTRY, OCR_USERNAME, OCR_PASSWORD));\n           }\n         }\n-        // push the image\n+        // push the images to repo\n         if (!REPO_NAME.isEmpty()) {\n-          logger.info(\"docker push image {0} to {1}\", operatorImage, REPO_NAME);\n-          assertTrue(dockerPush(operatorImage), String.format(\"docker push failed for image %s\", operatorImage));\n \n-          if (System.getenv(\"SKIP_BASIC_IMAGE_BUILD\") == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1NTg2NQ=="}, "originalCommit": {"oid": "488b0e7fd55a6082afc9825905ba3551fa40d087"}, "originalPosition": 115}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4230, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}