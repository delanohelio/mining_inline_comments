{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMDU5MzA2", "number": 1381, "title": "add FAQs for mapping PVC and ConfigMap to instances", "bodyText": "Added FAQ entries to explain how to add per-server persistent volume claims and config maps.\nI could not find information on what is actually required to get the new entries added to the index page, or the reason for the headers on other such pages that include dates and weight. Is that documented somewhere?\nNote: this requires creating both a volume and a volumeMount entry. If we aren't attempting to support the full range of persistent volumes, but only these two, we might consider simplifying to a single entry. As it is, we should add some validations, including the existing of a matching volume for every volume mount, and possibly also some validation that the specified resource (PVC or ConfigMap) actually exists.", "createdAt": "2020-01-07T16:07:46Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381", "merged": true, "mergeCommit": {"oid": "9c8af0015339fb6f5a65f799d82010bdb2884e15"}, "closed": true, "closedAt": "2020-01-08T22:34:14Z", "author": {"login": "russgold"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4C51SAH2gAyMzYwMDU5MzA2OmVkZGU0ZDRiMDU5MjVlODcwZjE5MmJkMmUzYzU2ODIyYjJkMjZkM2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4dLD6gFqTM0MDE4ODkzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b", "author": {"user": {"login": "russgold", "name": "Russell Gold"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/edde4d4b05925e870f192bd2e3c56822b2d26d3b", "committedDate": "2020-01-07T15:57:40Z", "message": "add FAQs for mapping PVC and ConfigMap to instances"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MzYzMjE0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#pullrequestreview-339363214", "createdAt": "2020-01-07T16:46:34Z", "commit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjo0NjozNFrOFa_LnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjo0NjozNFrOFa_LnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0MjQ2MA==", "bodyText": "specify --> specify the following in your domain resource:", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#discussion_r363842460", "createdAt": "2020-01-07T16:46:34Z", "author": {"login": "tbarnes-us"}, "path": "docs-source/content/faq/volumes.md", "diffHunk": "@@ -0,0 +1,49 @@\n+> I need to provide an instance with access to a Persistent Volume Claim\n+\n+Some applications need access to a file, either to read data or to provide additional logging beyond what is \n+built into the operator. One common way of doing that within Kubernetes is to create a \n+[PersistentVolumeClaim](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims) (PVC) and map\n+it to a file. The domain configuration can then be used to provide access to the claim across the domain, \n+within a single cluster, or for a single server.\n+In each case, the access is configured within the ``ServerPod`` element of the configuration. For example, here is\n+a read-only PersistentVolumeClaim specification. Note that its name is `myclaim`.\n+\n+```\n+apiVersion: v1\n+kind: PersistentVolumeClaim\n+metadata:\n+  name: myclaim\n+spec:\n+  accessModes:\n+    - ReadOnlyMany\n+  volumeMode: Filesystem\n+  resources:\n+    requests:\n+      storage: 8Gi\n+  storageClassName: slow\n+```\n+\n+To provide access to this claim within the `cluster-1` cluster, specify ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MzY2MDM4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#pullrequestreview-339366038", "createdAt": "2020-01-07T16:50:55Z", "commit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjo1MDo1NlrOFa_UDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjo1MDo1NlrOFa_UDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0NDYyMA==", "bodyText": "\"In each case, the access is configured within the ServerPod element of the configuration.\"\nlooks incorrect.  (1) Element name is 'serverPod' not 'ServerPod'., (2) The cluster configuration is in 'clusters', not 'ServerPod', as per your example below.\nHow about \"Access is configured within a domain resource using its 'serverPod', 'adminServer', 'managedServers', or 'clusters' elements.   (I'm not sure if all 4 have access - please confirm.)\nAlso, please turn 'domain resource' into a link that references the \"Domain resource\" doc page.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#discussion_r363844620", "createdAt": "2020-01-07T16:50:56Z", "author": {"login": "tbarnes-us"}, "path": "docs-source/content/faq/volumes.md", "diffHunk": "@@ -0,0 +1,49 @@\n+> I need to provide an instance with access to a Persistent Volume Claim\n+\n+Some applications need access to a file, either to read data or to provide additional logging beyond what is \n+built into the operator. One common way of doing that within Kubernetes is to create a \n+[PersistentVolumeClaim](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims) (PVC) and map\n+it to a file. The domain configuration can then be used to provide access to the claim across the domain, \n+within a single cluster, or for a single server.\n+In each case, the access is configured within the ``ServerPod`` element of the configuration. For example, here is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MzY2MzA0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#pullrequestreview-339366304", "createdAt": "2020-01-07T16:51:20Z", "commit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjo1MToyMVrOFa_Uzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjo1MToyMVrOFa_Uzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0NDgxNQ==", "bodyText": "Consider moving \"For example, ...\" to it's own new paragraph.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#discussion_r363844815", "createdAt": "2020-01-07T16:51:21Z", "author": {"login": "tbarnes-us"}, "path": "docs-source/content/faq/volumes.md", "diffHunk": "@@ -0,0 +1,49 @@\n+> I need to provide an instance with access to a Persistent Volume Claim\n+\n+Some applications need access to a file, either to read data or to provide additional logging beyond what is \n+built into the operator. One common way of doing that within Kubernetes is to create a \n+[PersistentVolumeClaim](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims) (PVC) and map\n+it to a file. The domain configuration can then be used to provide access to the claim across the domain, \n+within a single cluster, or for a single server.\n+In each case, the access is configured within the ``ServerPod`` element of the configuration. For example, here is\n+a read-only PersistentVolumeClaim specification. Note that its name is `myclaim`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MzY3NTA3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#pullrequestreview-339367507", "createdAt": "2020-01-07T16:53:11Z", "commit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjo1MzoxMVrOFa_YyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjo1MzoxMVrOFa_YyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0NTgzMw==", "bodyText": "Back-quote all occurrences of volume, volumeMount.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#discussion_r363845833", "createdAt": "2020-01-07T16:53:11Z", "author": {"login": "tbarnes-us"}, "path": "docs-source/content/faq/volumes.md", "diffHunk": "@@ -0,0 +1,49 @@\n+> I need to provide an instance with access to a Persistent Volume Claim\n+\n+Some applications need access to a file, either to read data or to provide additional logging beyond what is \n+built into the operator. One common way of doing that within Kubernetes is to create a \n+[PersistentVolumeClaim](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims) (PVC) and map\n+it to a file. The domain configuration can then be used to provide access to the claim across the domain, \n+within a single cluster, or for a single server.\n+In each case, the access is configured within the ``ServerPod`` element of the configuration. For example, here is\n+a read-only PersistentVolumeClaim specification. Note that its name is `myclaim`.\n+\n+```\n+apiVersion: v1\n+kind: PersistentVolumeClaim\n+metadata:\n+  name: myclaim\n+spec:\n+  accessModes:\n+    - ReadOnlyMany\n+  volumeMode: Filesystem\n+  resources:\n+    requests:\n+      storage: 8Gi\n+  storageClassName: slow\n+```\n+\n+To provide access to this claim within the `cluster-1` cluster, specify \n+\n+```\n+  clusters:\n+  - clusterName: cluster-1\n+    serverPod:\n+      volumes:\n+      - name: my-volume-1\n+        persistentVolumeClaim:\n+          claimName: myclaim\n+      volumeMounts:\n+      - name: my-volume-1\n+        mountPath: /weblogic-operator/my/volume1\n+\n+``` \n+Note the use of the claim name in the `claimName` field of the `volume` entry. Both a volume and a \n+volumeMount entry are required, and must have the same name. The volume entry associates that name with the claim,\n+while the volumeMount entry defines the path to it that the application can use to access the file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MzY3ODU2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#pullrequestreview-339367856", "createdAt": "2020-01-07T16:53:41Z", "commit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjo1Mzo0MVrOFa_Z4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjo1Mzo0MVrOFa_Z4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0NjExMw==", "bodyText": "This sentence looks like it its dangling.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#discussion_r363846113", "createdAt": "2020-01-07T16:53:41Z", "author": {"login": "tbarnes-us"}, "path": "docs-source/content/faq/volumes.md", "diffHunk": "@@ -0,0 +1,49 @@\n+> I need to provide an instance with access to a Persistent Volume Claim\n+\n+Some applications need access to a file, either to read data or to provide additional logging beyond what is \n+built into the operator. One common way of doing that within Kubernetes is to create a \n+[PersistentVolumeClaim](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims) (PVC) and map\n+it to a file. The domain configuration can then be used to provide access to the claim across the domain, \n+within a single cluster, or for a single server.\n+In each case, the access is configured within the ``ServerPod`` element of the configuration. For example, here is\n+a read-only PersistentVolumeClaim specification. Note that its name is `myclaim`.\n+\n+```\n+apiVersion: v1\n+kind: PersistentVolumeClaim\n+metadata:\n+  name: myclaim\n+spec:\n+  accessModes:\n+    - ReadOnlyMany\n+  volumeMode: Filesystem\n+  resources:\n+    requests:\n+      storage: 8Gi\n+  storageClassName: slow\n+```\n+\n+To provide access to this claim within the `cluster-1` cluster, specify \n+\n+```\n+  clusters:\n+  - clusterName: cluster-1\n+    serverPod:\n+      volumes:\n+      - name: my-volume-1\n+        persistentVolumeClaim:\n+          claimName: myclaim\n+      volumeMounts:\n+      - name: my-volume-1\n+        mountPath: /weblogic-operator/my/volume1\n+\n+``` \n+Note the use of the claim name in the `claimName` field of the `volume` entry. Both a volume and a \n+volumeMount entry are required, and must have the same name. The volume entry associates that name with the claim,\n+while the volumeMount entry defines the path to it that the application can use to access the file.\n+\n+NOTE: if the PVC is mapped either across the domain or to a cluster, \n+its access mode must be either `ReadOnlyMany` or `ReadWriteMany`.\n+\n+[ConfigMaps](https://kubernetes.io/docs/concepts/storage/volumes/#configmap). In both cases, all you need\n+is the name of the corresponding Kubernetes resource.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MzcxMjM2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#pullrequestreview-339371236", "createdAt": "2020-01-07T16:58:52Z", "commit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjo1ODo1MlrOFa_j_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjo1ODo1MlrOFa_j_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0ODcwMQ==", "bodyText": "It'd be more clear IMO to change\nConfiguration information in Kubernetes may be provided by a\nto\nConfiguration files can be supplied to Kubernetes pods and jobs by a", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#discussion_r363848701", "createdAt": "2020-01-07T16:58:52Z", "author": {"login": "tbarnes-us"}, "path": "docs-source/content/faq/configmaps.md", "diffHunk": "@@ -0,0 +1,33 @@\n+> I need to provide an instance with access to a Config Map\n+\n+Configuration information in Kubernetes may be provided by a ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5Mzc0ODkx", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#pullrequestreview-339374891", "createdAt": "2020-01-07T17:04:45Z", "commit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzowNDo0NVrOFa_u2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzowNDo0NVrOFa_u2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg1MTQ4Mw==", "bodyText": "\"In each case, the access is configured within the ServerPod element of the configuration.\"\nlooks incorrect. (1) Element name is 'serverPod' not 'ServerPod'., (2) The cluster configuration is in 'clusters', not 'ServerPod', as per your example below.\nHow about \"Access is configured within a domain resource using its 'serverPod', 'adminServer', 'managedServers', or 'clusters' elements. (I'm not sure if all 4 have access - please confirm.)\nAlso, please turn 'domain resource' into a link that references the \"Domain resource\" doc page.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#discussion_r363851483", "createdAt": "2020-01-07T17:04:45Z", "author": {"login": "tbarnes-us"}, "path": "docs-source/content/faq/configmaps.md", "diffHunk": "@@ -0,0 +1,33 @@\n+> I need to provide an instance with access to a Config Map\n+\n+Configuration information in Kubernetes may be provided by a \n+[ConfigMap](https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#create-a-configmap), \n+which consists of a set of key-value pairs. Each entry may be accessed by one or more operator-managed nodes\n+as a read-only text file. Access can be provided across the domain, within a single cluster, or for a single server.\n+In each case, the access is configured within the ``ServerPod`` element of the configuration. For example, given", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5Mzc1MTQy", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#pullrequestreview-339375142", "createdAt": "2020-01-07T17:05:08Z", "commit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzowNTowOFrOFa_vow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzowNTowOFrOFa_vow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg1MTY4Mw==", "bodyText": "Put 'For example ...' into its own paragraph.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#discussion_r363851683", "createdAt": "2020-01-07T17:05:08Z", "author": {"login": "tbarnes-us"}, "path": "docs-source/content/faq/configmaps.md", "diffHunk": "@@ -0,0 +1,33 @@\n+> I need to provide an instance with access to a Config Map\n+\n+Configuration information in Kubernetes may be provided by a \n+[ConfigMap](https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#create-a-configmap), \n+which consists of a set of key-value pairs. Each entry may be accessed by one or more operator-managed nodes\n+as a read-only text file. Access can be provided across the domain, within a single cluster, or for a single server.\n+In each case, the access is configured within the ``ServerPod`` element of the configuration. For example, given\n+a ConfigMap named `my-map` with entries `key-1` and `key-2`, you can provide access to both values as separate files\n+in the same directory within the `cluster-1` cluster with the following: ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5Mzc0NzY5", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#pullrequestreview-339374769", "createdAt": "2020-01-07T17:04:33Z", "commit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzowNDozM1rOFa_ueg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzoxOTo1MlrOFbAICw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg1MTM4Ng==", "bodyText": "Both FAQs need a title. The date is also required but the weight is not (unless you want to specify ordering). The FAQ are not \"added to the index page\" but appear under the category where you locate the MD files.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#discussion_r363851386", "createdAt": "2020-01-07T17:04:33Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/faq/configmaps.md", "diffHunk": "@@ -0,0 +1,33 @@\n+> I need to provide an instance with access to a Config Map", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg1NTQyMw==", "bodyText": "if -> If", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#discussion_r363855423", "createdAt": "2020-01-07T17:13:46Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/faq/volumes.md", "diffHunk": "@@ -0,0 +1,49 @@\n+> I need to provide an instance with access to a Persistent Volume Claim\n+\n+Some applications need access to a file, either to read data or to provide additional logging beyond what is \n+built into the operator. One common way of doing that within Kubernetes is to create a \n+[PersistentVolumeClaim](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims) (PVC) and map\n+it to a file. The domain configuration can then be used to provide access to the claim across the domain, \n+within a single cluster, or for a single server.\n+In each case, the access is configured within the ``ServerPod`` element of the configuration. For example, here is\n+a read-only PersistentVolumeClaim specification. Note that its name is `myclaim`.\n+\n+```\n+apiVersion: v1\n+kind: PersistentVolumeClaim\n+metadata:\n+  name: myclaim\n+spec:\n+  accessModes:\n+    - ReadOnlyMany\n+  volumeMode: Filesystem\n+  resources:\n+    requests:\n+      storage: 8Gi\n+  storageClassName: slow\n+```\n+\n+To provide access to this claim within the `cluster-1` cluster, specify \n+\n+```\n+  clusters:\n+  - clusterName: cluster-1\n+    serverPod:\n+      volumes:\n+      - name: my-volume-1\n+        persistentVolumeClaim:\n+          claimName: myclaim\n+      volumeMounts:\n+      - name: my-volume-1\n+        mountPath: /weblogic-operator/my/volume1\n+\n+``` \n+Note the use of the claim name in the `claimName` field of the `volume` entry. Both a volume and a \n+volumeMount entry are required, and must have the same name. The volume entry associates that name with the claim,\n+while the volumeMount entry defines the path to it that the application can use to access the file.\n+\n+NOTE: if the PVC is mapped either across the domain or to a cluster, ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg1NjQxMQ==", "bodyText": "PersistentVolumeClaim -> PersistentVolumeClaim (code font, place inside single back ticks)", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#discussion_r363856411", "createdAt": "2020-01-07T17:16:08Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/faq/volumes.md", "diffHunk": "@@ -0,0 +1,49 @@\n+> I need to provide an instance with access to a Persistent Volume Claim\n+\n+Some applications need access to a file, either to read data or to provide additional logging beyond what is \n+built into the operator. One common way of doing that within Kubernetes is to create a \n+[PersistentVolumeClaim](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims) (PVC) and map\n+it to a file. The domain configuration can then be used to provide access to the claim across the domain, \n+within a single cluster, or for a single server.\n+In each case, the access is configured within the ``ServerPod`` element of the configuration. For example, here is\n+a read-only PersistentVolumeClaim specification. Note that its name is `myclaim`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg1NzkzMQ==", "bodyText": "Also, the problem statements in both FAQs should end with a period. I see that we missed that detail in the Cannot Pull Image FAQ; that should be fixed, not propagated.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#discussion_r363857931", "createdAt": "2020-01-07T17:19:52Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/faq/configmaps.md", "diffHunk": "@@ -0,0 +1,33 @@\n+> I need to provide an instance with access to a Config Map", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edde4d4b05925e870f192bd2e3c56822b2d26d3b"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a3f5826f786c5a4fd1fccb67fa8bb4c16a84ca8", "author": {"user": {"login": "russgold", "name": "Russell Gold"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/8a3f5826f786c5a4fd1fccb67fa8bb4c16a84ca8", "committedDate": "2020-01-07T20:03:41Z", "message": "Address initial review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NDkxNDkz", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#pullrequestreview-339491493", "createdAt": "2020-01-07T20:35:51Z", "commit": {"oid": "8a3f5826f786c5a4fd1fccb67fa8bb4c16a84ca8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMDozNTo1MVrOFbFE3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMDozNTo1MVrOFbFE3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkzOTAzNg==", "bodyText": "quote all occurrences of volume and volumeMount (just as you did for volumes.md)", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#discussion_r363939036", "createdAt": "2020-01-07T20:35:51Z", "author": {"login": "tbarnes-us"}, "path": "docs-source/content/faq/configmaps.md", "diffHunk": "@@ -0,0 +1,43 @@\n+---\n+title: \"Providing access to a Config Map\"\n+date: 2020-01-07T15:02:28-05:00\n+draft: false\n+weight: 11\n+---\n+> I need to provide an instance with access to a Config Map.\n+\n+Configuration files can be supplied to Kubernetes pods and jobs by a \n+[ConfigMap](https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#create-a-configmap), \n+which consists of a set of key-value pairs. Each entry may be accessed by one or more operator-managed nodes\n+as a read-only text file. Access can be provided across the domain, within a single cluster, or for a single server.\n+In each case, the access is configured within the `serverPod` element of the desired scope. \n+\n+For example, given\n+a ConfigMap named `my-map` with entries `key-1` and `key-2`, you can provide access to both values as separate files\n+in the same directory within the `cluster-1` cluster with the following\n+in your [domain resource](https://github.com/oracle/weblogic-kubernetes-operator/blob/master/docs/domains/Domain.md):\n+ \n+\n+```\n+  clusters:\n+  - clusterName: cluster-1\n+    serverPod:\n+      volumes:\n+      - name: my-volume-1\n+        configMap:\n+          name: my-map\n+          items: \n+          - key: key-1\n+            path: first\n+          - key: key-2\n+            path: second\n+      volumeMounts:\n+      - name: my-volume-1\n+        mountPath: /weblogic-operator/my\n+\n+```\n+This provides access to two files, found at paths `/weblogic-operator/my/first` and `/weblogic-operator/my/second`. \n+Both a volume and a volumeMount entry are required, and must have the same name. The name of the ConfigMap is \n+specified in the `name` field under the `configMap` entry. The `items` entry is an array,\n+in which each entry maps a ConfigMap key to a file name under the directory specified as `mountPath` under a volumeMount.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a3f5826f786c5a4fd1fccb67fa8bb4c16a84ca8"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca87dfa1df9f7365b485710e59e914de44b95f37", "author": {"user": {"login": "russgold", "name": "Russell Gold"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/ca87dfa1df9f7365b485710e59e914de44b95f37", "committedDate": "2020-01-08T01:22:59Z", "message": "Quoted more names"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5ODUzMzI1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#pullrequestreview-339853325", "createdAt": "2020-01-08T13:13:29Z", "commit": {"oid": "ca87dfa1df9f7365b485710e59e914de44b95f37"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMTg4OTM3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1381#pullrequestreview-340188937", "createdAt": "2020-01-08T22:34:01Z", "commit": {"oid": "ca87dfa1df9f7365b485710e59e914de44b95f37"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 42, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}