{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MDQxNjQy", "number": 1921, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOToxNDo1N1rOEjvAeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOToxNDo1N1rOEjvAeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTA1Nzg1OnYy", "diffSide": "RIGHT", "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/AuthenticationProxyTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOToxNDo1N1rOHSQgEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOToxNDo1N1rOHSQgEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwNjc3MA==", "bodyText": "It is bad practice to leave a println in your tests. I assume you needed this for debugging and forgot to remove it?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1921#discussion_r488906770", "createdAt": "2020-09-15T19:14:57Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/AuthenticationProxyTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.kubernetes.operator.helpers;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import com.meterware.simplestub.Memento;\n+import com.meterware.simplestub.StaticStubSupport;\n+import oracle.kubernetes.operator.helpers.AuthorizationProxy.Scope;\n+import oracle.kubernetes.utils.TestUtils;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.junit.MatcherAssert.assertThat;\n+\n+public class AuthenticationProxyTest {\n+\n+  private final List<Memento> mementos = new ArrayList<>();\n+  private final KubernetesTestSupport testSupport = new KubernetesTestSupport();\n+  private final AuthorizationProxyStub authorizationProxyStub = new AuthorizationProxyStub();\n+\n+  /**\n+   * Setup test.\n+   * @throws Exception on failure\n+   */\n+  @Before\n+  public void setUp() throws Exception {\n+    mementos.add(TestUtils.silenceOperatorLogger());\n+    mementos.add(testSupport.install());\n+    mementos.add(\n+        StaticStubSupport.install(AuthenticationProxy.class, \"authorizationProxy\", authorizationProxyStub));\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    mementos.forEach(Memento::revert);\n+  }\n+\n+  @Test\n+  public void verify_authorizationScope_isCluster_whenNamespaceIsNull() {\n+    AuthenticationProxy authorizationProxy = new AuthenticationProxy();\n+    authorizationProxy.check(\"\", \"\", null);\n+    assertThat(authorizationProxyStub.scope, equalTo(Scope.cluster));\n+  }\n+\n+  @Test\n+  public void verify_authorizationScope_isNamespace_whenNamespaceIsDefined() {\n+    AuthenticationProxy authorizationProxy = new AuthenticationProxy();\n+    authorizationProxy.check(\"\", \"\", \"NS\");\n+    assertThat(authorizationProxyStub.scope, equalTo(Scope.namespace));\n+  }\n+\n+  private class AuthorizationProxyStub extends AuthorizationProxy {\n+    Scope scope;\n+\n+    public boolean check(\n+        String principal,\n+        Operation operation,\n+        Resource resource,\n+        String resourceName,\n+        Scope scope,\n+        String namespaceName) {\n+      this.scope = scope;\n+      System.out.println(\"AuthorizationProxyStub.check scope: \" + scope);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0831b7dc808c0de8fee3a45060eb03eb1e50960a"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3974, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}