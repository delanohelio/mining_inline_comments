{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMDU3ODQy", "number": 1945, "title": "Correct design philosophy to not imply that we've already implemented\u2026", "bodyText": "\u2026 automatic backups", "createdAt": "2020-09-23T21:47:15Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1945", "merged": true, "mergeCommit": {"oid": "d46b363371c2e90c505f7945859c6e243670a8c5"}, "closed": true, "closedAt": "2020-09-28T18:22:48Z", "author": {"login": "rjeberhard"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLzuqsAH2gAyNDkyMDU3ODQyOmM3NTUzNTZhYTFkNGRiYzVlMjI0ODY3OTVhZDVkZjMwYjdlOGFhOGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMCFECAH2gAyNDkyMDU3ODQyOjdlMjllZDFmYmY1MTY2NDg4M2Q2ZjZlZDJmYTIxYWU0NTI0MTQyZmU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c755356aa1d4dbc5e22486795ad5df30b7e8aa8c", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/c755356aa1d4dbc5e22486795ad5df30b7e8aa8c", "committedDate": "2020-09-23T21:46:32Z", "message": "Correct design philosophy to not imply that we've already implemented automatic backups"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NTM3OTM1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1945#pullrequestreview-495537935", "createdAt": "2020-09-24T12:53:40Z", "commit": {"oid": "c755356aa1d4dbc5e22486795ad5df30b7e8aa8c"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjo1Mzo0MVrOHXZNQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjo1NDoyMlrOHXZO_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI5MjI5MA==", "bodyText": "a patch of WebLogic -> a WebLogic Server patch", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1945#discussion_r494292290", "createdAt": "2020-09-24T12:53:41Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/userguide/introduction/design.md", "diffHunk": "@@ -8,13 +8,15 @@ description: \"The Oracle WebLogic Server Kubernetes Operator (the \u201coperator\u201d\n \n The Oracle WebLogic Server Kubernetes Operator (the \u201coperator\u201d) is designed to fulfill a similar role to that which a human operator would fill in a traditional data center deployment.  It contains a set of useful built-in knowledge about how to perform various life cycle operations on a domain correctly.\n \n-Human operators are typically responsible for starting and stopping environments, initiating backups, performing scaling operations, performing manual tasks associated with disaster recovery and high availability needs and coordinating actions with other operators in other data centers.  It is envisaged that the operator will have similar responsibilities in a Kubernetes environment.\n+Human operators are typically responsible for starting and stopping environments, performing scaling operations, performing manual tasks associated with disaster recovery and high availability needs and coordinating actions with other operators in other data centers.  It is envisaged that the operator will have similar responsibilities in a Kubernetes environment.\n \n It is important to note the distinction between an *operator* and an *administrator*.  A WebLogic Server administrator typically has different responsibilities centered around managing the detailed configuration of the WebLogic domains.  The operator has only limited interest in the domain configuration, with its main concern being the high-level topology of the domain; for example, how many clusters and servers, and information about network access points, such as channels.\n \n Human operators may manage more than one domain, and the operator is also designed to be able to manage more than one domain.  Like its human counterpart, the operator will only take actions against domains that it is told to manage, and will ignore any other domains that may be present in the same environment.\n \n-Like a human operator, the operator is designed to be event-based.  It waits for a significant event to occur, or for a scheduled time to perform some action, and then takes the appropriate action.  Examples of significant events include being made aware of a new domain that needs to be managed, receiving a request to scale up a WebLogic cluster, or receiving a request to perform a backup of a domain.\n+Like a human operator, the operator is designed to be event-based.  It waits for a significant event to occur, or for a scheduled time to perform some action, and then takes the appropriate action.  Examples of significant events include being made aware of a new domain that needs to be managed, receiving a request to scale up a WebLogic cluster, or applying a patch of WebLogic or an application while preserving cluster availability.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c755356aa1d4dbc5e22486795ad5df30b7e8aa8c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI5MjczNA==", "bodyText": "Oracle WebLogic Kubernetes Operator -> Oracle WebLogic Server Kubernetes Operator", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1945#discussion_r494292734", "createdAt": "2020-09-24T12:54:22Z", "author": {"login": "rosemarymarano"}, "path": "docs-source/content/userguide/introduction/design.md", "diffHunk": "@@ -8,13 +8,15 @@ description: \"The Oracle WebLogic Server Kubernetes Operator (the \u201coperator\u201d\n \n The Oracle WebLogic Server Kubernetes Operator (the \u201coperator\u201d) is designed to fulfill a similar role to that which a human operator would fill in a traditional data center deployment.  It contains a set of useful built-in knowledge about how to perform various life cycle operations on a domain correctly.\n \n-Human operators are typically responsible for starting and stopping environments, initiating backups, performing scaling operations, performing manual tasks associated with disaster recovery and high availability needs and coordinating actions with other operators in other data centers.  It is envisaged that the operator will have similar responsibilities in a Kubernetes environment.\n+Human operators are typically responsible for starting and stopping environments, performing scaling operations, performing manual tasks associated with disaster recovery and high availability needs and coordinating actions with other operators in other data centers.  It is envisaged that the operator will have similar responsibilities in a Kubernetes environment.\n \n It is important to note the distinction between an *operator* and an *administrator*.  A WebLogic Server administrator typically has different responsibilities centered around managing the detailed configuration of the WebLogic domains.  The operator has only limited interest in the domain configuration, with its main concern being the high-level topology of the domain; for example, how many clusters and servers, and information about network access points, such as channels.\n \n Human operators may manage more than one domain, and the operator is also designed to be able to manage more than one domain.  Like its human counterpart, the operator will only take actions against domains that it is told to manage, and will ignore any other domains that may be present in the same environment.\n \n-Like a human operator, the operator is designed to be event-based.  It waits for a significant event to occur, or for a scheduled time to perform some action, and then takes the appropriate action.  Examples of significant events include being made aware of a new domain that needs to be managed, receiving a request to scale up a WebLogic cluster, or receiving a request to perform a backup of a domain.\n+Like a human operator, the operator is designed to be event-based.  It waits for a significant event to occur, or for a scheduled time to perform some action, and then takes the appropriate action.  Examples of significant events include being made aware of a new domain that needs to be managed, receiving a request to scale up a WebLogic cluster, or applying a patch of WebLogic or an application while preserving cluster availability.\n+\n+There are some operator tasks, such as initiating backups, that are presently not implemented by the Oracle WebLogic Kubernetes Operator. We welcome any feedback or requirements as this helps us to properly create our roadmap.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c755356aa1d4dbc5e22486795ad5df30b7e8aa8c"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e29ed1fbf51664883d6f6ed2fa21ae4524142fe", "author": {"user": {"login": "rjeberhard", "name": "Ryan Eberhard"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/7e29ed1fbf51664883d6f6ed2fa21ae4524142fe", "committedDate": "2020-09-24T14:29:40Z", "message": "Review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4181, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}