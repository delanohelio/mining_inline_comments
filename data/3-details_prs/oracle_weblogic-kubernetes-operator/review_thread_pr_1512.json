{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MDAzMjQy", "number": 1512, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMzo0MzozN1rODsQcdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwMjo1MjoyNlrODsRmHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzMzMzY0OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMzo0MzozN1rOF9Euqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwMzowNTowN1rOF9YOFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NDkzOA==", "bodyText": "this is just a nit pick, i prefer to put start a new line before every dot/period", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r399584938", "createdAt": "2020-03-27T23:43:37Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()\n+                .with(new WITParams()\n+                     .baseName(baseImageName).tag(imageTag).modelFiles(modelFiles)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYwOTgzNw==", "bodyText": "I assume baseImageName/Tag will itself eventually come from an 'ImageParams' type.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r399609837", "createdAt": "2020-03-28T02:48:46Z", "author": {"login": "tbarnes-us"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()\n+                .with(new WITParams()\n+                     .baseName(baseImageName).tag(imageTag).modelFiles(modelFiles)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NDkzOA=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkwMzkwNg==", "bodyText": "@markxnelson it does make the logic clearer to start a new line before every dot.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r399903906", "createdAt": "2020-03-30T03:03:18Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()\n+                .with(new WITParams()\n+                     .baseName(baseImageName).tag(imageTag).modelFiles(modelFiles)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NDkzOA=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkwNDI3OQ==", "bodyText": "@tbarnes-us We could add an \"ImageParams\" if/when the need comes.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r399904279", "createdAt": "2020-03-30T03:05:07Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()\n+                .with(new WITParams()\n+                     .baseName(baseImageName).tag(imageTag).modelFiles(modelFiles)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NDkzOA=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzMzNTI5OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "isResolved": false, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMzo0NDo0MVrOF9EvlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzo1MTo1OVrOF9qw8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NTE3Mg==", "bodyText": "this is ok for now, but i might ask to make it statics rather than passing around objects when i see you use this in  a test", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r399585172", "createdAt": "2020-03-27T23:44:41Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxMDU4MQ==", "bodyText": "I guess I was thinking of something different.  I would have thought createMIIImage would take a WITParams() as a parameter.   It wouldn't have a signature with all of the params listed out - instead WITParams would be built in some central location, or generated from some central set of settings for the suite, and passed in.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r399610581", "createdAt": "2020-03-28T02:56:54Z", "author": {"login": "tbarnes-us"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NTE3Mg=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3MTEzMg==", "bodyText": "yes, some reusable object with a fluent api would make a nice param to this method", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r399671132", "createdAt": "2020-03-28T14:56:09Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NTE3Mg=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkwNTc1Mg==", "bodyText": "I think the problem may be the additional layer at the WebLogicImageTool level. One solution is to remove the WITParams, and use the WebLogicImageTool as the reusable object with the fluent api that is in WITParams now, as well as the updateImage method that WebLogicImageTool currently has.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r399905752", "createdAt": "2020-03-30T03:12:48Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NTE3Mg=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMTU1NA==", "bodyText": "Then the TestActions will have a with() method that takes a WebLogicImageTool object. A test code of creating a MII image would look like the following.\nWebLogicImageTool wit = new WebLogicImageTool()\n.imageName(\"xxx)\n.tag(\"yyy\")\nand etc;\nnew TestActions().with(wit).createMIIImage().", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r399911554", "createdAt": "2020-03-30T03:41:47Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NTE3Mg=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjA2OA==", "bodyText": "I can give it a try and see if it looks better.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r399912068", "createdAt": "2020-03-30T03:44:21Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NTE3Mg=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk3OTE4Mw==", "bodyText": "I think it is easier to just stick with the current approach and change the parameters into a WITParams.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r399979183", "createdAt": "2020-03-30T07:28:54Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NTE3Mg=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0NTAxNQ==", "bodyText": "no - we would not instantiate TestActions - all of the methods are statics, so you would import static TestActions and then say:\nwith(wit).createMIIImage()", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r400145015", "createdAt": "2020-03-30T12:17:36Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NTE3Mg=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE3Njk0OQ==", "bodyText": "I think what I eventually did is similar to what you suggested - TestActions does the following.\nnew WebLogicImageTool().with(wit).updateImage().", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r400176949", "createdAt": "2020-03-30T13:09:01Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NTE3Mg=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIwODExMw==", "bodyText": "if I understand correctly, you two are close.  But, I think Mark is suggesting an overloaded \"with()\" method where the argument decides the operation.  In this case \"with(WebLogicImageTool)\" finds the ImageTool with statement, and since the TestActions is a static import and all \"with()\" methods are static, it looks more like with(wit).createMIIImage().  I think you are mostly on the same page here, so approving.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r400208113", "createdAt": "2020-03-30T13:51:59Z", "author": {"login": "ddsharpe"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NTE3Mg=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzUyMjIxOnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "isResolved": false, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwMjo1MjoyNlrOF9GRRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzo0ODo0N1rOF91QVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxMDE4MA==", "bodyText": "IMO, ideally version/location would itself come from a global type - the net idea is that at the beginning of a suite, all such settings are defined once (and only once) and then passed around.  Like the 'packet' object in the operator code.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r399610180", "createdAt": "2020-03-28T02:52:26Z", "author": {"login": "tbarnes-us"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()\n+                .with(new WITParams()\n+                     .baseName(baseImageName).tag(imageTag).modelFiles(modelFiles)\n+                     .modelVariableFiles(modelVariableFiles).modelArchiveFiles(modelArchiveFiles)\n+                     .wdtVersion(wdtVersion).domainType(domainType)).updateImage();\n+    }\n+ \n+ \n+    // ------------------------ Installer  -------------------------\n+\n+    public static boolean verifyAndInstallWIT(String version, String location) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkwODEyMQ==", "bodyText": "I hope we only need to do download/install of WIT and WDT binary once for the entire integration test suite. We could make them static constants, but parameterizing them makes it a little easier for the test suite to test a newer version (when the time comes).", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r399908121", "createdAt": "2020-03-30T03:24:42Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()\n+                .with(new WITParams()\n+                     .baseName(baseImageName).tag(imageTag).modelFiles(modelFiles)\n+                     .modelVariableFiles(modelVariableFiles).modelArchiveFiles(modelArchiveFiles)\n+                     .wdtVersion(wdtVersion).domainType(domainType)).updateImage();\n+    }\n+ \n+ \n+    // ------------------------ Installer  -------------------------\n+\n+    public static boolean verifyAndInstallWIT(String version, String location) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxMDE4MA=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0NTYyNA==", "bodyText": "i think it makes sense to download all of the prereqs up front (in the jenkins job) before we start running the tests - e.g. WIT, WDT, whatever installer/patches we need, helm, kubectl, etc.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r400145624", "createdAt": "2020-03-30T12:18:36Z", "author": {"login": "markxnelson"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()\n+                .with(new WITParams()\n+                     .baseName(baseImageName).tag(imageTag).modelFiles(modelFiles)\n+                     .modelVariableFiles(modelVariableFiles).modelArchiveFiles(modelArchiveFiles)\n+                     .wdtVersion(wdtVersion).domainType(domainType)).updateImage();\n+    }\n+ \n+ \n+    // ------------------------ Installer  -------------------------\n+\n+    public static boolean verifyAndInstallWIT(String version, String location) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxMDE4MA=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIwOTcxMA==", "bodyText": "Let's put the prerequisite downloads in the Jenkins file.  I think it will be much easier to maintain.  And, if we switch to another environment like running in Docker containers with the software pre-positioned, the change is very minor.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r400209710", "createdAt": "2020-03-30T13:54:01Z", "author": {"login": "ddsharpe"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()\n+                .with(new WITParams()\n+                     .baseName(baseImageName).tag(imageTag).modelFiles(modelFiles)\n+                     .modelVariableFiles(modelVariableFiles).modelArchiveFiles(modelArchiveFiles)\n+                     .wdtVersion(wdtVersion).domainType(domainType)).updateImage();\n+    }\n+ \n+ \n+    // ------------------------ Installer  -------------------------\n+\n+    public static boolean verifyAndInstallWIT(String version, String location) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxMDE4MA=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyNTAxOQ==", "bodyText": "Agreed. We'll need to have a way for the test code to get the location of WIT and WDT binary; the MII use case needs to run WIT to generate a nee image that contains the WDT binary.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r400225019", "createdAt": "2020-03-30T14:14:12Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()\n+                .with(new WITParams()\n+                     .baseName(baseImageName).tag(imageTag).modelFiles(modelFiles)\n+                     .modelVariableFiles(modelVariableFiles).modelArchiveFiles(modelArchiveFiles)\n+                     .wdtVersion(wdtVersion).domainType(domainType)).updateImage();\n+    }\n+ \n+ \n+    // ------------------------ Installer  -------------------------\n+\n+    public static boolean verifyAndInstallWIT(String version, String location) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxMDE4MA=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI4NDk3MA==", "bodyText": "Its easy for the Jenkinsfile to download the bits, extract them, and then put the folder/path in an environment variable.  Will that work?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r400284970", "createdAt": "2020-03-30T15:29:46Z", "author": {"login": "ddsharpe"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()\n+                .with(new WITParams()\n+                     .baseName(baseImageName).tag(imageTag).modelFiles(modelFiles)\n+                     .modelVariableFiles(modelVariableFiles).modelArchiveFiles(modelArchiveFiles)\n+                     .wdtVersion(wdtVersion).domainType(domainType)).updateImage();\n+    }\n+ \n+ \n+    // ------------------------ Installer  -------------------------\n+\n+    public static boolean verifyAndInstallWIT(String version, String location) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxMDE4MA=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMyNTM4Nw==", "bodyText": "@ddsharpe I think we shjould avoid depending on Jenkins for any critical part of the flow.  It should be possible to get a test up and running, with a single mvn call, in any basic WKO env. We shouldn't need to install Jenkins to get it working IMO - unless installing Jenkins and setting it up is itself one step?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r400325387", "createdAt": "2020-03-30T16:25:09Z", "author": {"login": "tbarnes-us"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()\n+                .with(new WITParams()\n+                     .baseName(baseImageName).tag(imageTag).modelFiles(modelFiles)\n+                     .modelVariableFiles(modelVariableFiles).modelArchiveFiles(modelArchiveFiles)\n+                     .wdtVersion(wdtVersion).domainType(domainType)).updateImage();\n+    }\n+ \n+ \n+    // ------------------------ Installer  -------------------------\n+\n+    public static boolean verifyAndInstallWIT(String version, String location) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxMDE4MA=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMyNTc1OQ==", "bodyText": "So would relying on a Jenkinsfile also rely on Jenkins being installed?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r400325759", "createdAt": "2020-03-30T16:25:42Z", "author": {"login": "tbarnes-us"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()\n+                .with(new WITParams()\n+                     .baseName(baseImageName).tag(imageTag).modelFiles(modelFiles)\n+                     .modelVariableFiles(modelVariableFiles).modelArchiveFiles(modelArchiveFiles)\n+                     .wdtVersion(wdtVersion).domainType(domainType)).updateImage();\n+    }\n+ \n+ \n+    // ------------------------ Installer  -------------------------\n+\n+    public static boolean verifyAndInstallWIT(String version, String location) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxMDE4MA=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM3MjM3Ng==", "bodyText": "Derek and I have agreed to disagree off-line - and are looking for other opinions.\nEven if we end up supporting setting up WDT/WIT via a jenkinsfile.   I'd minimally also like to see (1) single or at most two places that 'own' setting up WDT/WIT, (2) target/scope install location of WDT/WIT to the the test suite (cleaned up when test suite is deleted - saved if along with test results if test suite results are saved), (3) it must be very easy to get a test running stand-alone (if missing the test infra should get it - or at least a single command for setting up prior to test suite).", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r400372376", "createdAt": "2020-03-30T17:36:50Z", "author": {"login": "tbarnes-us"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()\n+                .with(new WITParams()\n+                     .baseName(baseImageName).tag(imageTag).modelFiles(modelFiles)\n+                     .modelVariableFiles(modelVariableFiles).modelArchiveFiles(modelArchiveFiles)\n+                     .wdtVersion(wdtVersion).domainType(domainType)).updateImage();\n+    }\n+ \n+ \n+    // ------------------------ Installer  -------------------------\n+\n+    public static boolean verifyAndInstallWIT(String version, String location) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxMDE4MA=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM3OTk5MQ==", "bodyText": "If we offload the WIT/WDT download  responsibly to Jenkin Script, then to run the test locally we need to add  a similar script to the operator github project. There may be out-of-sync  issue between  Jenkin and a local copy", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1512#discussion_r400379991", "createdAt": "2020-03-30T17:48:47Z", "author": {"login": "anpanigr"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/TestActions.java", "diffHunk": "@@ -38,6 +44,37 @@ public static String createUniqueNamespace() {\n         return Namespace.createUniqueNamespace();\n     }\n \n-    // etc...\n+    // ------------------------ Docker image  -------------------------\n+\n+    public static boolean createMIIImage(\n+        String baseImageName, \n+        String imageTag,\n+        List<String> modelFiles,\n+        List<String> modelVariableFiles,\n+        List<String> modelArchiveFiles,\n+        String wdtVersion,\n+        String domainType) {\n+  \n+    \treturn \n+            new WebLogicImageTool()\n+                .with(new WITParams()\n+                     .baseName(baseImageName).tag(imageTag).modelFiles(modelFiles)\n+                     .modelVariableFiles(modelVariableFiles).modelArchiveFiles(modelArchiveFiles)\n+                     .wdtVersion(wdtVersion).domainType(domainType)).updateImage();\n+    }\n+ \n+ \n+    // ------------------------ Installer  -------------------------\n+\n+    public static boolean verifyAndInstallWIT(String version, String location) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYxMDE4MA=="}, "originalCommit": {"oid": "366b647339557c3a9bbe35448ac6899e85964f8a"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4676, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}