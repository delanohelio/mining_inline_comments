{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNTY1ODgx", "number": 1849, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzoxMTozMFrOEXnstg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzoxMTozMFrOEXnstg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjAzMTI2OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorTwoDomains.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzoxMTozMFrOG_gmvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTowODoyMlrOHEw9CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0NzY3Ng==", "bodyText": "add javadoc", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1849#discussion_r469247676", "createdAt": "2020-08-12T13:11:30Z", "author": {"login": "vanajamukkara"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorTwoDomains.java", "diffHunk": "@@ -187,26 +254,289 @@ public void testTwoDomainsManagedByTwoOperators() {\n     createTwoDomainsOnPVUsingWlstAndVerify();\n \n     // get the domain1 and domain2 pods original creation timestamps\n-    getBothDomainsPodsOriginalCreationTimestamp();\n+    getBothDomainsPodsOriginalCreationTimestamp(domainUids, domainNamespaces);\n \n     // scale cluster in domain1 from 2 to 3 servers and verify no impact on domain2\n     replicasAfterScale = 3;\n     scaleDomain1AndVerifyNoImpactOnDomain2();\n \n     // restart domain1 and verify no impact on domain2\n-    restartDomain1AndVerifyNoImpactOnDomain2();\n+    restartDomain1AndVerifyNoImpactOnDomain2(replicasAfterScale, domain1Namespace, domain2Namespace);\n \n     // shutdown both domains and verify the pods were shutdown\n-    shutdownBothDomainsAndVerify();\n+    shutdownBothDomainsAndVerify(domainNamespaces);\n+  }\n+\n+  /**\n+   * Create one operator if it is not running.\n+   * Create domain domain1 and domain2 dynamic cluster in default namespace, managed by operator1.\n+   * Both domains share one PV.\n+   * Verify scaling for domain2 cluster from 2 to 3 servers and back to 2, plus verify no impact on domain1.\n+   * Shut down domain1 and back up, plus verify no impact on domain2.\n+   * shutdown both domains\n+   */\n+  @Order(2)\n+  @Test\n+  public void testTwoDomainsManagedByOneOperatorSharingPV() {\n+    // create two domains sharing one PV in default namespace\n+    createTwoDomainsSharingPVUsingWlstAndVerify();\n+\n+    // get the domain1 and domain2 pods original creation timestamps\n+    List<String> domainNamespaces = new ArrayList<>();\n+    domainNamespaces.add(defaultNamespace);\n+    domainNamespaces.add(defaultNamespace);\n+    getBothDomainsPodsOriginalCreationTimestamp(domainUids, domainNamespaces);\n+\n+    // scale domain2 to 3 servers and back to 2 and verify no impact on domain1\n+    scaleDomain2AndVerifyNoImpactOnDomain1();\n+\n+    // restart domain1 and verify no impact on domain2\n+    restartDomain1AndVerifyNoImpactOnDomain2(replicaCount, defaultNamespace, defaultNamespace);\n+\n+    // shutdown both domains\n+    //shutdownBothDomainsAndVerify(domainNamespaces);\n+  }\n+\n+  @Order(3)\n+  @Test\n+  public void testDeployAppAndInstallIngressControllers() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2df4da5c9a5020cc968f5a51b5713beb22da32c"}, "originalPosition": 254}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0OTE1NQ==", "bodyText": "how about changing the class name to ItLoadBalancerTwoDomains or ItTwoDomainsLoadBalancer or some such to indicate that this class contains load balancer tests as well", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1849#discussion_r469249155", "createdAt": "2020-08-12T13:13:51Z", "author": {"login": "vanajamukkara"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorTwoDomains.java", "diffHunk": "@@ -187,26 +254,289 @@ public void testTwoDomainsManagedByTwoOperators() {\n     createTwoDomainsOnPVUsingWlstAndVerify();\n \n     // get the domain1 and domain2 pods original creation timestamps\n-    getBothDomainsPodsOriginalCreationTimestamp();\n+    getBothDomainsPodsOriginalCreationTimestamp(domainUids, domainNamespaces);\n \n     // scale cluster in domain1 from 2 to 3 servers and verify no impact on domain2\n     replicasAfterScale = 3;\n     scaleDomain1AndVerifyNoImpactOnDomain2();\n \n     // restart domain1 and verify no impact on domain2\n-    restartDomain1AndVerifyNoImpactOnDomain2();\n+    restartDomain1AndVerifyNoImpactOnDomain2(replicasAfterScale, domain1Namespace, domain2Namespace);\n \n     // shutdown both domains and verify the pods were shutdown\n-    shutdownBothDomainsAndVerify();\n+    shutdownBothDomainsAndVerify(domainNamespaces);\n+  }\n+\n+  /**\n+   * Create one operator if it is not running.\n+   * Create domain domain1 and domain2 dynamic cluster in default namespace, managed by operator1.\n+   * Both domains share one PV.\n+   * Verify scaling for domain2 cluster from 2 to 3 servers and back to 2, plus verify no impact on domain1.\n+   * Shut down domain1 and back up, plus verify no impact on domain2.\n+   * shutdown both domains\n+   */\n+  @Order(2)\n+  @Test\n+  public void testTwoDomainsManagedByOneOperatorSharingPV() {\n+    // create two domains sharing one PV in default namespace\n+    createTwoDomainsSharingPVUsingWlstAndVerify();\n+\n+    // get the domain1 and domain2 pods original creation timestamps\n+    List<String> domainNamespaces = new ArrayList<>();\n+    domainNamespaces.add(defaultNamespace);\n+    domainNamespaces.add(defaultNamespace);\n+    getBothDomainsPodsOriginalCreationTimestamp(domainUids, domainNamespaces);\n+\n+    // scale domain2 to 3 servers and back to 2 and verify no impact on domain1\n+    scaleDomain2AndVerifyNoImpactOnDomain1();\n+\n+    // restart domain1 and verify no impact on domain2\n+    restartDomain1AndVerifyNoImpactOnDomain2(replicaCount, defaultNamespace, defaultNamespace);\n+\n+    // shutdown both domains\n+    //shutdownBothDomainsAndVerify(domainNamespaces);\n+  }\n+\n+  @Order(3)\n+  @Test\n+  public void testDeployAppAndInstallIngressControllers() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0NzY3Ng=="}, "originalCommit": {"oid": "d2df4da5c9a5020cc968f5a51b5713beb22da32c"}, "originalPosition": 254}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc1ODQwOQ==", "bodyText": "fixed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1849#discussion_r474758409", "createdAt": "2020-08-21T15:08:22Z", "author": {"login": "xiancao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorTwoDomains.java", "diffHunk": "@@ -187,26 +254,289 @@ public void testTwoDomainsManagedByTwoOperators() {\n     createTwoDomainsOnPVUsingWlstAndVerify();\n \n     // get the domain1 and domain2 pods original creation timestamps\n-    getBothDomainsPodsOriginalCreationTimestamp();\n+    getBothDomainsPodsOriginalCreationTimestamp(domainUids, domainNamespaces);\n \n     // scale cluster in domain1 from 2 to 3 servers and verify no impact on domain2\n     replicasAfterScale = 3;\n     scaleDomain1AndVerifyNoImpactOnDomain2();\n \n     // restart domain1 and verify no impact on domain2\n-    restartDomain1AndVerifyNoImpactOnDomain2();\n+    restartDomain1AndVerifyNoImpactOnDomain2(replicasAfterScale, domain1Namespace, domain2Namespace);\n \n     // shutdown both domains and verify the pods were shutdown\n-    shutdownBothDomainsAndVerify();\n+    shutdownBothDomainsAndVerify(domainNamespaces);\n+  }\n+\n+  /**\n+   * Create one operator if it is not running.\n+   * Create domain domain1 and domain2 dynamic cluster in default namespace, managed by operator1.\n+   * Both domains share one PV.\n+   * Verify scaling for domain2 cluster from 2 to 3 servers and back to 2, plus verify no impact on domain1.\n+   * Shut down domain1 and back up, plus verify no impact on domain2.\n+   * shutdown both domains\n+   */\n+  @Order(2)\n+  @Test\n+  public void testTwoDomainsManagedByOneOperatorSharingPV() {\n+    // create two domains sharing one PV in default namespace\n+    createTwoDomainsSharingPVUsingWlstAndVerify();\n+\n+    // get the domain1 and domain2 pods original creation timestamps\n+    List<String> domainNamespaces = new ArrayList<>();\n+    domainNamespaces.add(defaultNamespace);\n+    domainNamespaces.add(defaultNamespace);\n+    getBothDomainsPodsOriginalCreationTimestamp(domainUids, domainNamespaces);\n+\n+    // scale domain2 to 3 servers and back to 2 and verify no impact on domain1\n+    scaleDomain2AndVerifyNoImpactOnDomain1();\n+\n+    // restart domain1 and verify no impact on domain2\n+    restartDomain1AndVerifyNoImpactOnDomain2(replicaCount, defaultNamespace, defaultNamespace);\n+\n+    // shutdown both domains\n+    //shutdownBothDomainsAndVerify(domainNamespaces);\n+  }\n+\n+  @Order(3)\n+  @Test\n+  public void testDeployAppAndInstallIngressControllers() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0NzY3Ng=="}, "originalCommit": {"oid": "d2df4da5c9a5020cc968f5a51b5713beb22da32c"}, "originalPosition": 254}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4165, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}