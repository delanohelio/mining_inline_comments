{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MTU0MzI3", "number": 1745, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzoyNDoyNlrOEGv7Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyNjozMlrOEG6xtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTEyMDc1OnYy", "diffSide": "LEFT", "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/CrdHelperTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzoyNDoyNlrOGlvHsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODo1MToyNVrOGl8BWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIyMjUxNA==", "bodyText": "So the functionality change is that we never retry on a create CRD failure? If so, you need to change the names of the tests you modified, since they assert that the retry will happen.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442222514", "createdAt": "2020-06-18T13:24:26Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/CrdHelperTest.java", "diffHunk": "@@ -179,9 +180,7 @@ public void whenNoCrd_retryOnFailure() {\n \n     Step scriptCrdStep = CrdHelper.createDomainCrdStep(KUBERNETES_VERSION_15, null);\n     testSupport.runSteps(scriptCrdStep);\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQzMzg4Mw==", "bodyText": "We still retry on create CRD failure. The functionality change is to log a failure message in onFailureNoRetry method when operator doesn't have permission to create CRD (status code 401) and continue to next step . Some customers want to manage their own CRD and don't want operator to fail if it doesn't have permission to create/update/patch CRD.\nI have changed the name of test method to reflect this and also added back one of the previous assertion. The only change is to assert that CRD creation failure message is logged instead of verifying throwable.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442433883", "createdAt": "2020-06-18T18:51:25Z", "author": {"login": "ankedia"}, "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/CrdHelperTest.java", "diffHunk": "@@ -179,9 +180,7 @@ public void whenNoCrd_retryOnFailure() {\n \n     Step scriptCrdStep = CrdHelper.createDomainCrdStep(KUBERNETES_VERSION_15, null);\n     testSupport.runSteps(scriptCrdStep);\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIyMjUxNA=="}, "originalCommit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTEyMzE3OnYy", "diffSide": "LEFT", "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/CrdHelperTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzoyNDo1N1rOGlvJQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODo1MzowMFrOGl8EsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIyMjkxNA==", "bodyText": "As above, the test no longer does what its name says it does.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442222914", "createdAt": "2020-06-18T13:24:57Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/CrdHelperTest.java", "diffHunk": "@@ -242,8 +241,7 @@ public void whenReplaceFails_scheduleRetry() {\n     Step scriptCrdStep = CrdHelper.createDomainCrdStep(KUBERNETES_VERSION_16, null);\n     testSupport.runSteps(scriptCrdStep);\n \n-    testSupport.verifyCompletionThrowable(FailureStatusSourceException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQzNDczNg==", "bodyText": "I have changed the name of test method to reflect current purpose and also added back one of the previous assertion. The only change is to assert that CRD replace failure message is logged instead of verifying throwable.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442434736", "createdAt": "2020-06-18T18:53:00Z", "author": {"login": "ankedia"}, "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/CrdHelperTest.java", "diffHunk": "@@ -242,8 +241,7 @@ public void whenReplaceFails_scheduleRetry() {\n     Step scriptCrdStep = CrdHelper.createDomainCrdStep(KUBERNETES_VERSION_16, null);\n     testSupport.runSteps(scriptCrdStep);\n \n-    testSupport.verifyCompletionThrowable(FailureStatusSourceException.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIyMjkxNA=="}, "originalCommit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTEyNjcyOnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/operator/calls/AsyncRequestStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzoyNTo0OFrOGlvLeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo0NTowMFrOGmCjJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIyMzQ4MQ==", "bodyText": "This is changed behavior and there is no corresponding unit test.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442223481", "createdAt": "2020-06-18T13:25:48Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/calls/AsyncRequestStep.java", "diffHunk": "@@ -377,14 +377,18 @@ public NextAction doPotentialRetry(Step conflictStep, Packet packet, int statusC\n         }\n \n         NextAction na = new NextAction();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MDgzOQ==", "bodyText": "Just to clarify - changed behavior is to fix a bug as retry logic was not working as intended. I have added unit tests multipleFailedCallbackNoRetriesLeft_verifyCompletionThrowable() and multipleFailedCallbackRetriesLeft_nextStepAppliedWithValue() in AsyncRequestStepTest to cover this changed behavior.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442540839", "createdAt": "2020-06-18T22:45:00Z", "author": {"login": "ankedia"}, "path": "operator/src/main/java/oracle/kubernetes/operator/calls/AsyncRequestStep.java", "diffHunk": "@@ -377,14 +377,18 @@ public NextAction doPotentialRetry(Step conflictStep, Packet packet, int statusC\n         }\n \n         NextAction na = new NextAction();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIyMzQ4MQ=="}, "originalCommit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTE5NjcyOnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/operator/calls/AsyncRequestStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo0MjoyMFrOGlv4kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODo1Mzo1MlrOGl8Gcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIzNTAyNA==", "bodyText": "This conditional has now become complex enough that it should probably be broken out into another method. I would recommend changing it to } else if (retriesLeft() && isRestartableConflict(conflictStep, status)) {\nwhere you also have:```\nprivate isRestartableConflict(Step conflictStep, int status) {\n  return conflictStep != null && status == 409;\n}```\n\nThis would also allow you to move the comment explain optimistic locking failures to just above the new method", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442235024", "createdAt": "2020-06-18T13:42:20Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/calls/AsyncRequestStep.java", "diffHunk": "@@ -377,14 +377,18 @@ public NextAction doPotentialRetry(Step conflictStep, Packet packet, int statusC\n         }\n \n         NextAction na = new NextAction();\n-        if (statusCode == 0 && retryCount <= maxRetryCount) {\n-          na.invoke(Optional.ofNullable(conflictStep).orElse(retryStep), packet);\n-        } else {\n-          LOGGER.finer(MessageKeys.ASYNC_RETRY, identityHash(), String.valueOf(waitTime));\n-          na.delay(retryStep, packet, waitTime, TimeUnit.MILLISECONDS);\n+        if (retryCount <= maxRetryCount) {\n+          if (statusCode == 0) {\n+            na.invoke(retryStep, packet);\n+          } else {\n+            LOGGER.finer(MessageKeys.ASYNC_RETRY, identityHash(), String.valueOf(waitTime));\n+            na.delay(retryStep, packet, waitTime, TimeUnit.MILLISECONDS);\n+          }\n+          return na;\n         }\n-        return na;\n-      } else if (statusCode == 409 /* Conflict */ && conflictStep != null) {\n+      } else if (statusCode == 409 /* Conflict */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQzNTE4Ng==", "bodyText": "I have made the suggested changes, please review, Thanks.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442435186", "createdAt": "2020-06-18T18:53:52Z", "author": {"login": "ankedia"}, "path": "operator/src/main/java/oracle/kubernetes/operator/calls/AsyncRequestStep.java", "diffHunk": "@@ -377,14 +377,18 @@ public NextAction doPotentialRetry(Step conflictStep, Packet packet, int statusC\n         }\n \n         NextAction na = new NextAction();\n-        if (statusCode == 0 && retryCount <= maxRetryCount) {\n-          na.invoke(Optional.ofNullable(conflictStep).orElse(retryStep), packet);\n-        } else {\n-          LOGGER.finer(MessageKeys.ASYNC_RETRY, identityHash(), String.valueOf(waitTime));\n-          na.delay(retryStep, packet, waitTime, TimeUnit.MILLISECONDS);\n+        if (retryCount <= maxRetryCount) {\n+          if (statusCode == 0) {\n+            na.invoke(retryStep, packet);\n+          } else {\n+            LOGGER.finer(MessageKeys.ASYNC_RETRY, identityHash(), String.valueOf(waitTime));\n+            na.delay(retryStep, packet, waitTime, TimeUnit.MILLISECONDS);\n+          }\n+          return na;\n         }\n-        return na;\n-      } else if (statusCode == 409 /* Conflict */ && conflictStep != null) {\n+      } else if (statusCode == 409 /* Conflict */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIzNTAyNA=="}, "originalCommit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTIxMTMxOnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/operator/calls/AsyncRequestStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo0NTo0NFrOGlwCBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODo1NDowNlrOGl8G-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIzNzQ0Nw==", "bodyText": "We're now testing this condition tries, so it is worth breaking it out into its own method:```\nprivate boolean retriesLeft() {\n  return retryCount <= maxRetryCount;\n};```\n\nIn addition, rather than using a nested if, negate the above condition and make it the first branch if an if-else if-else sequence, that simply returns na.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442237447", "createdAt": "2020-06-18T13:45:44Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/calls/AsyncRequestStep.java", "diffHunk": "@@ -377,14 +377,18 @@ public NextAction doPotentialRetry(Step conflictStep, Packet packet, int statusC\n         }\n \n         NextAction na = new NextAction();\n-        if (statusCode == 0 && retryCount <= maxRetryCount) {\n-          na.invoke(Optional.ofNullable(conflictStep).orElse(retryStep), packet);\n-        } else {\n-          LOGGER.finer(MessageKeys.ASYNC_RETRY, identityHash(), String.valueOf(waitTime));\n-          na.delay(retryStep, packet, waitTime, TimeUnit.MILLISECONDS);\n+        if (retryCount <= maxRetryCount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQzNTMyMA==", "bodyText": "I have made the suggested changes, please review, Thanks.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442435320", "createdAt": "2020-06-18T18:54:06Z", "author": {"login": "ankedia"}, "path": "operator/src/main/java/oracle/kubernetes/operator/calls/AsyncRequestStep.java", "diffHunk": "@@ -377,14 +377,18 @@ public NextAction doPotentialRetry(Step conflictStep, Packet packet, int statusC\n         }\n \n         NextAction na = new NextAction();\n-        if (statusCode == 0 && retryCount <= maxRetryCount) {\n-          na.invoke(Optional.ofNullable(conflictStep).orElse(retryStep), packet);\n-        } else {\n-          LOGGER.finer(MessageKeys.ASYNC_RETRY, identityHash(), String.valueOf(waitTime));\n-          na.delay(retryStep, packet, waitTime, TimeUnit.MILLISECONDS);\n+        if (retryCount <= maxRetryCount) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIzNzQ0Nw=="}, "originalCommit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Njg5NzAxOnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyNTo0OVrOGmAwzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo1NTo0NlrOGmCvwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMTU2NQ==", "bodyText": "This is new functionality without a unit test", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442511565", "createdAt": "2020-06-18T21:25:49Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "diffHunk": "@@ -559,6 +561,13 @@ public NextAction onSuccess(\n         LOGGER.info(MessageKeys.CREATING_CRD, callResponse);\n         return doNext(packet);\n       }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0NDA2Ng==", "bodyText": "I have added \"whenNoCrd_retryOnFailureAndLogFailedMessageInOnFailureNoRetry()\" test to cover this scenario. Please let me know if more unit tests needs to be added. Thanks.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442544066", "createdAt": "2020-06-18T22:55:46Z", "author": {"login": "ankedia"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "diffHunk": "@@ -559,6 +561,13 @@ public NextAction onSuccess(\n         LOGGER.info(MessageKeys.CREATING_CRD, callResponse);\n         return doNext(packet);\n       }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMTU2NQ=="}, "originalCommit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Njg5ODI2OnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyNjoxNlrOGmAxjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMTo1MTozN1rOGmiDZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMTc1OQ==", "bodyText": "New functionality without a unit test", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442511759", "createdAt": "2020-06-18T21:26:16Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "diffHunk": "@@ -597,6 +613,15 @@ public NextAction onSuccess(\n         LOGGER.info(MessageKeys.CREATING_CRD, callResponse);\n         return doNext(packet);\n       }\n+\n+      @Override\n+      protected NextAction onFailureNoRetry(Packet packet, CallResponse<V1CustomResourceDefinition> callResponse) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0NDUwOA==", "bodyText": "I have added whenReplaceFails_scheduleRetryAndLogFailedMessageInOnFailureNoRetry() unit test to cover this.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442544508", "createdAt": "2020-06-18T22:57:19Z", "author": {"login": "ankedia"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "diffHunk": "@@ -597,6 +613,15 @@ public NextAction onSuccess(\n         LOGGER.info(MessageKeys.CREATING_CRD, callResponse);\n         return doNext(packet);\n       }\n+\n+      @Override\n+      protected NextAction onFailureNoRetry(Packet packet, CallResponse<V1CustomResourceDefinition> callResponse) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMTc1OQ=="}, "originalCommit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA1Njk5OA==", "bodyText": "I have added a new unit test \"whenReplaceFailsThrowsStreamException_scheduleRetryAndLogFailedMessageInOnFailureNoRetry\"  for StreamResetException check .", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r443056998", "createdAt": "2020-06-19T21:51:37Z", "author": {"login": "ankedia"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "diffHunk": "@@ -597,6 +613,15 @@ public NextAction onSuccess(\n         LOGGER.info(MessageKeys.CREATING_CRD, callResponse);\n         return doNext(packet);\n       }\n+\n+      @Override\n+      protected NextAction onFailureNoRetry(Packet packet, CallResponse<V1CustomResourceDefinition> callResponse) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMTc1OQ=="}, "originalCommit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Njg5ODcxOnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyNjoyNFrOGmAx0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMTo1MjoxOFrOGmiEFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMTgyNg==", "bodyText": "New functionality without a unit test", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442511826", "createdAt": "2020-06-18T21:26:24Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "diffHunk": "@@ -616,6 +641,15 @@ public NextAction onSuccess(\n         LOGGER.info(MessageKeys.CREATING_CRD, callResponse);\n         return doNext(packet);\n       }\n+\n+      @Override\n+      protected NextAction onFailureNoRetry(Packet packet, CallResponse<V1beta1CustomResourceDefinition> callResponse) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0NTEwMw==", "bodyText": "I think this is covered by whenBetaCrdReplaceFails_scheduleRetryAndLogFailedMessageInOnFailureNoRetry() unit test. Please let me know if more tests needs to be added.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442545103", "createdAt": "2020-06-18T22:59:21Z", "author": {"login": "ankedia"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "diffHunk": "@@ -616,6 +641,15 @@ public NextAction onSuccess(\n         LOGGER.info(MessageKeys.CREATING_CRD, callResponse);\n         return doNext(packet);\n       }\n+\n+      @Override\n+      protected NextAction onFailureNoRetry(Packet packet, CallResponse<V1beta1CustomResourceDefinition> callResponse) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMTgyNg=="}, "originalCommit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA1NzE3Mg==", "bodyText": "I have added a new unit test whenBetaCrdReplaceThrowsStreamResetException_scheduleRetryAndLogFailedMessageInOnFailureNoRetry() for StreamResetException check.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r443057172", "createdAt": "2020-06-19T21:52:18Z", "author": {"login": "ankedia"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "diffHunk": "@@ -616,6 +641,15 @@ public NextAction onSuccess(\n         LOGGER.info(MessageKeys.CREATING_CRD, callResponse);\n         return doNext(packet);\n       }\n+\n+      @Override\n+      protected NextAction onFailureNoRetry(Packet packet, CallResponse<V1beta1CustomResourceDefinition> callResponse) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMTgyNg=="}, "originalCommit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Njg5OTA4OnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/ResponseStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyNjozMlrOGmAyEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo0MToxMlrOGmCehA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMTg5MQ==", "bodyText": "New functionality without a unit test", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442511891", "createdAt": "2020-06-18T21:26:32Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/ResponseStep.java", "diffHunk": "@@ -151,8 +151,11 @@ public NextAction onFailure(Packet packet, CallResponse<T> callResponse) {\n    * @return Next action for fiber processing, which may be a retry\n    */\n   public NextAction onFailure(Step conflictStep, Packet packet, CallResponse<T> callResponse) {\n-    return Optional.ofNullable(doPotentialRetry(conflictStep, packet, callResponse))\n-        .orElse(onFailureNoRetry(packet, callResponse));\n+    Optional<NextAction> optionalNextAction =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzOTY1Mg==", "bodyText": "This is a bug fix and not a new functionality. Previously, \"onFailureNoRetry()\" method in orElse clause was getting called even when Optional.ofNullable(doPotentialRetry()) returned a non-empty Optional. The change is to make sure that onFailureNoRetry() is called only when Optional.ofNullable(doPotentialRetry()) returns empty optional.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442539652", "createdAt": "2020-06-18T22:41:12Z", "author": {"login": "ankedia"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/ResponseStep.java", "diffHunk": "@@ -151,8 +151,11 @@ public NextAction onFailure(Packet packet, CallResponse<T> callResponse) {\n    * @return Next action for fiber processing, which may be a retry\n    */\n   public NextAction onFailure(Step conflictStep, Packet packet, CallResponse<T> callResponse) {\n-    return Optional.ofNullable(doPotentialRetry(conflictStep, packet, callResponse))\n-        .orElse(onFailureNoRetry(packet, callResponse));\n+    Optional<NextAction> optionalNextAction =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMTg5MQ=="}, "originalCommit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4359, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}