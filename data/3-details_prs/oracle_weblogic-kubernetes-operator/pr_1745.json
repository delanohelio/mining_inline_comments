{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MTU0MzI3", "number": 1745, "title": "Changes to fix retry logic and recover gracefully from lack of RBAC for CRD", "bodyText": "Fixed retry logic in AsyncRequestStep (OWLS-82761) and changed CrdHelper so operator can recover gracefully from lack of RBAC for CRD.", "createdAt": "2020-06-18T00:00:31Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745", "merged": true, "mergeCommit": {"oid": "9997cb773c061a576a5ea75cb54a44470256f3b7"}, "closed": true, "closedAt": "2020-06-23T20:06:20Z", "author": {"login": "ankedia"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsRt9QAH2gAyNDM2MTU0MzI3OmZlNGQ1ZGFlMTk0MzUwZWNlODkzNmFhY2Y0ZWU1ZDVlMmM2MDVhNDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuLJNmgFqTQzNjExNDc5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/fe4d5dae194350ece8936aacf4ee5d5e2c605a45", "committedDate": "2020-06-17T22:37:20Z", "message": "Changes to fix retry logic and recover gracefully from lack of RBAC for CRD"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMjc4NDky", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#pullrequestreview-433278492", "createdAt": "2020-06-18T13:24:26Z", "commit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzoyNDoyNlrOGlvHsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo0NTo0NFrOGlwCBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIyMjUxNA==", "bodyText": "So the functionality change is that we never retry on a create CRD failure? If so, you need to change the names of the tests you modified, since they assert that the retry will happen.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442222514", "createdAt": "2020-06-18T13:24:26Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/CrdHelperTest.java", "diffHunk": "@@ -179,9 +180,7 @@ public void whenNoCrd_retryOnFailure() {\n \n     Step scriptCrdStep = CrdHelper.createDomainCrdStep(KUBERNETES_VERSION_15, null);\n     testSupport.runSteps(scriptCrdStep);\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIyMjkxNA==", "bodyText": "As above, the test no longer does what its name says it does.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442222914", "createdAt": "2020-06-18T13:24:57Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/helpers/CrdHelperTest.java", "diffHunk": "@@ -242,8 +241,7 @@ public void whenReplaceFails_scheduleRetry() {\n     Step scriptCrdStep = CrdHelper.createDomainCrdStep(KUBERNETES_VERSION_16, null);\n     testSupport.runSteps(scriptCrdStep);\n \n-    testSupport.verifyCompletionThrowable(FailureStatusSourceException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIyMzQ4MQ==", "bodyText": "This is changed behavior and there is no corresponding unit test.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442223481", "createdAt": "2020-06-18T13:25:48Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/calls/AsyncRequestStep.java", "diffHunk": "@@ -377,14 +377,18 @@ public NextAction doPotentialRetry(Step conflictStep, Packet packet, int statusC\n         }\n \n         NextAction na = new NextAction();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIzNTAyNA==", "bodyText": "This conditional has now become complex enough that it should probably be broken out into another method. I would recommend changing it to } else if (retriesLeft() && isRestartableConflict(conflictStep, status)) {\nwhere you also have:```\nprivate isRestartableConflict(Step conflictStep, int status) {\n  return conflictStep != null && status == 409;\n}```\n\nThis would also allow you to move the comment explain optimistic locking failures to just above the new method", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442235024", "createdAt": "2020-06-18T13:42:20Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/calls/AsyncRequestStep.java", "diffHunk": "@@ -377,14 +377,18 @@ public NextAction doPotentialRetry(Step conflictStep, Packet packet, int statusC\n         }\n \n         NextAction na = new NextAction();\n-        if (statusCode == 0 && retryCount <= maxRetryCount) {\n-          na.invoke(Optional.ofNullable(conflictStep).orElse(retryStep), packet);\n-        } else {\n-          LOGGER.finer(MessageKeys.ASYNC_RETRY, identityHash(), String.valueOf(waitTime));\n-          na.delay(retryStep, packet, waitTime, TimeUnit.MILLISECONDS);\n+        if (retryCount <= maxRetryCount) {\n+          if (statusCode == 0) {\n+            na.invoke(retryStep, packet);\n+          } else {\n+            LOGGER.finer(MessageKeys.ASYNC_RETRY, identityHash(), String.valueOf(waitTime));\n+            na.delay(retryStep, packet, waitTime, TimeUnit.MILLISECONDS);\n+          }\n+          return na;\n         }\n-        return na;\n-      } else if (statusCode == 409 /* Conflict */ && conflictStep != null) {\n+      } else if (statusCode == 409 /* Conflict */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIzNzQ0Nw==", "bodyText": "We're now testing this condition tries, so it is worth breaking it out into its own method:```\nprivate boolean retriesLeft() {\n  return retryCount <= maxRetryCount;\n};```\n\nIn addition, rather than using a nested if, negate the above condition and make it the first branch if an if-else if-else sequence, that simply returns na.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442237447", "createdAt": "2020-06-18T13:45:44Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/calls/AsyncRequestStep.java", "diffHunk": "@@ -377,14 +377,18 @@ public NextAction doPotentialRetry(Step conflictStep, Packet packet, int statusC\n         }\n \n         NextAction na = new NextAction();\n-        if (statusCode == 0 && retryCount <= maxRetryCount) {\n-          na.invoke(Optional.ofNullable(conflictStep).orElse(retryStep), packet);\n-        } else {\n-          LOGGER.finer(MessageKeys.ASYNC_RETRY, identityHash(), String.valueOf(waitTime));\n-          na.delay(retryStep, packet, waitTime, TimeUnit.MILLISECONDS);\n+        if (retryCount <= maxRetryCount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4d5dae194350ece8936aacf4ee5d5e2c605a45"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/60eb0baf535335ee37cfd35cad4e2f0bb304af4f", "committedDate": "2020-06-18T18:43:05Z", "message": "Changes based on review comment and further testing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNjU4NzUz", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#pullrequestreview-433658753", "createdAt": "2020-06-18T21:25:48Z", "commit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyNTo0OVrOGmAwzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyNTo0OVrOGmAwzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMTU2NQ==", "bodyText": "This is new functionality without a unit test", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442511565", "createdAt": "2020-06-18T21:25:49Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "diffHunk": "@@ -559,6 +561,13 @@ public NextAction onSuccess(\n         LOGGER.info(MessageKeys.CREATING_CRD, callResponse);\n         return doNext(packet);\n       }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNjU5MDA0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#pullrequestreview-433659004", "createdAt": "2020-06-18T21:26:16Z", "commit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyNjoxNlrOGmAxjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyNjozMlrOGmAyEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMTc1OQ==", "bodyText": "New functionality without a unit test", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442511759", "createdAt": "2020-06-18T21:26:16Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "diffHunk": "@@ -597,6 +613,15 @@ public NextAction onSuccess(\n         LOGGER.info(MessageKeys.CREATING_CRD, callResponse);\n         return doNext(packet);\n       }\n+\n+      @Override\n+      protected NextAction onFailureNoRetry(Packet packet, CallResponse<V1CustomResourceDefinition> callResponse) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMTgyNg==", "bodyText": "New functionality without a unit test", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442511826", "createdAt": "2020-06-18T21:26:24Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/CrdHelper.java", "diffHunk": "@@ -616,6 +641,15 @@ public NextAction onSuccess(\n         LOGGER.info(MessageKeys.CREATING_CRD, callResponse);\n         return doNext(packet);\n       }\n+\n+      @Override\n+      protected NextAction onFailureNoRetry(Packet packet, CallResponse<V1beta1CustomResourceDefinition> callResponse) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMTg5MQ==", "bodyText": "New functionality without a unit test", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#discussion_r442511891", "createdAt": "2020-06-18T21:26:32Z", "author": {"login": "russgold"}, "path": "operator/src/main/java/oracle/kubernetes/operator/helpers/ResponseStep.java", "diffHunk": "@@ -151,8 +151,11 @@ public NextAction onFailure(Packet packet, CallResponse<T> callResponse) {\n    * @return Next action for fiber processing, which may be a retry\n    */\n   public NextAction onFailure(Step conflictStep, Packet packet, CallResponse<T> callResponse) {\n-    return Optional.ofNullable(doPotentialRetry(conflictStep, packet, callResponse))\n-        .orElse(onFailureNoRetry(packet, callResponse));\n+    Optional<NextAction> optionalNextAction =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60eb0baf535335ee37cfd35cad4e2f0bb304af4f"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27641171b485e82547443aef12b83599b51c17e0", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/27641171b485e82547443aef12b83599b51c17e0", "committedDate": "2020-06-18T22:35:54Z", "message": "added unit tests for changed functionality"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25621ffbad9dba47fc85634a4eeb583b3678ac31", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/25621ffbad9dba47fc85634a4eeb583b3678ac31", "committedDate": "2020-06-19T21:43:56Z", "message": "Added new unit tests for StreamResetException check in onFailureNoRetry of replace CRD in CrdHelper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78c9c4c4e3a80e50879a0cfeeea9a3d488c21408", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/78c9c4c4e3a80e50879a0cfeeea9a3d488c21408", "committedDate": "2020-06-22T14:50:06Z", "message": "remove unused dependency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53e78ec98c3cb7304b5e9a46aa1fda197ede4981", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/53e78ec98c3cb7304b5e9a46aa1fda197ede4981", "committedDate": "2020-06-23T13:44:06Z", "message": "added unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdf6ef61f22db1092253a0a6ef127e63de376199", "author": {"user": {"login": "russgold", "name": "Russell Gold"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/bdf6ef61f22db1092253a0a6ef127e63de376199", "committedDate": "2020-06-23T17:15:04Z", "message": "Support scheduled item adding to schedule"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c24feba0e8fd46fdb6f6f9a2db2764f4edd4401", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2c24feba0e8fd46fdb6f6f9a2db2764f4edd4401", "committedDate": "2020-06-23T19:15:28Z", "message": "Added unit tests for status code 504 (server timeout) and test exceeding retry count"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MDg3NzU2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#pullrequestreview-436087756", "createdAt": "2020-06-23T19:25:32Z", "commit": {"oid": "2c24feba0e8fd46fdb6f6f9a2db2764f4edd4401"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfdf794c6fa3278ac519b84b1415ce66267fdcbf", "author": {"user": {"login": "ankedia", "name": "Anil Kedia"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/dfdf794c6fa3278ac519b84b1415ce66267fdcbf", "committedDate": "2020-06-23T20:02:49Z", "message": "fix test name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MTE0Nzk2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1745#pullrequestreview-436114796", "createdAt": "2020-06-23T20:05:37Z", "commit": {"oid": "dfdf794c6fa3278ac519b84b1415ce66267fdcbf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4556, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}