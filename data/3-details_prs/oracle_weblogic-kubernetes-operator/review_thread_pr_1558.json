{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNjgzMDQy", "number": 1558, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjoyMTozMlrODxS_Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTo0MTo1M1rODyCJvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDE3ODYyOnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/operator/logging/LoggingFacade.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjoyMTozMlrOGEr7Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjozNjo1OFrOGEschw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU2NzE2Ng==", "bodyText": "There is a getFormattedMessage() method in the same class that does the same thing, but with less error checking. We can get rid of that method and replace usages with this new method instead.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1558#discussion_r407567166", "createdAt": "2020-04-13T16:21:32Z", "author": {"login": "alai8"}, "path": "operator/src/main/java/oracle/kubernetes/operator/logging/LoggingFacade.java", "diffHunk": "@@ -651,6 +652,36 @@ public String getFormattedMessage(String msg, Object... args) {\n     }\n   }\n \n+  /**\n+   * Accessor for the resource bundle backing this logger.\n+   * @return the bundle\n+   */\n+  public ResourceBundle getResourceBundle() {\n+    for (Logger l = getUnderlyingLogger(); l != null; l = l.getParent()) {\n+      ResourceBundle rb = l.getResourceBundle();\n+      if (rb != null) {\n+        return rb;\n+      }\n+    }\n+    throw new AssertionError(formatMessage(MessageKeys.RESOURCE_BUNDLE_NOT_FOUND));\n+  }\n+\n+  /**\n+   * Formats message based on string loaded from the resource bundle backing this logger.\n+   * @param msgId Message id\n+   * @param params Parameters to message formatting\n+   * @return Formatted message\n+   */\n+  public String formatMessage(String msgId, Object... params) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a9421ed1d9daf4117c9b710dac2b26613e1840"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU2NzkzMg==", "bodyText": "Oh, thanks!  I missed it.  Let me check.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1558#discussion_r407567932", "createdAt": "2020-04-13T16:22:58Z", "author": {"login": "rjeberhard"}, "path": "operator/src/main/java/oracle/kubernetes/operator/logging/LoggingFacade.java", "diffHunk": "@@ -651,6 +652,36 @@ public String getFormattedMessage(String msg, Object... args) {\n     }\n   }\n \n+  /**\n+   * Accessor for the resource bundle backing this logger.\n+   * @return the bundle\n+   */\n+  public ResourceBundle getResourceBundle() {\n+    for (Logger l = getUnderlyingLogger(); l != null; l = l.getParent()) {\n+      ResourceBundle rb = l.getResourceBundle();\n+      if (rb != null) {\n+        return rb;\n+      }\n+    }\n+    throw new AssertionError(formatMessage(MessageKeys.RESOURCE_BUNDLE_NOT_FOUND));\n+  }\n+\n+  /**\n+   * Formats message based on string loaded from the resource bundle backing this logger.\n+   * @param msgId Message id\n+   * @param params Parameters to message formatting\n+   * @return Formatted message\n+   */\n+  public String formatMessage(String msgId, Object... params) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU2NzE2Ng=="}, "originalCommit": {"oid": "26a9421ed1d9daf4117c9b710dac2b26613e1840"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU3NTY4Nw==", "bodyText": "I've decided to keep the formatMessage() method and remove the existing getFormattedMessage() method.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1558#discussion_r407575687", "createdAt": "2020-04-13T16:36:58Z", "author": {"login": "rjeberhard"}, "path": "operator/src/main/java/oracle/kubernetes/operator/logging/LoggingFacade.java", "diffHunk": "@@ -651,6 +652,36 @@ public String getFormattedMessage(String msg, Object... args) {\n     }\n   }\n \n+  /**\n+   * Accessor for the resource bundle backing this logger.\n+   * @return the bundle\n+   */\n+  public ResourceBundle getResourceBundle() {\n+    for (Logger l = getUnderlyingLogger(); l != null; l = l.getParent()) {\n+      ResourceBundle rb = l.getResourceBundle();\n+      if (rb != null) {\n+        return rb;\n+      }\n+    }\n+    throw new AssertionError(formatMessage(MessageKeys.RESOURCE_BUNDLE_NOT_FOUND));\n+  }\n+\n+  /**\n+   * Formats message based on string loaded from the resource bundle backing this logger.\n+   * @param msgId Message id\n+   * @param params Parameters to message formatting\n+   * @return Formatted message\n+   */\n+  public String formatMessage(String msgId, Object... params) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU2NzE2Ng=="}, "originalCommit": {"oid": "26a9421ed1d9daf4117c9b710dac2b26613e1840"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzkwNjU0OnYy", "diffSide": "RIGHT", "path": "operator/src/main/java/oracle/kubernetes/operator/calls/RequestParams.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTo0MTo1M1rOGF11wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTo0MTo1M1rOGF11wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc3ODE3Ng==", "bodyText": "what does this mean? which is evaluated first the or, or the elvis?\nis that what you intended?\nseems like some parens here would help future generations greatly", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1558#discussion_r408778176", "createdAt": "2020-04-15T11:41:53Z", "author": {"login": "markxnelson"}, "path": "operator/src/main/java/oracle/kubernetes/operator/calls/RequestParams.java", "diffHunk": "@@ -46,4 +51,31 @@ public RequestParams(\n   public String getLabelSelector() {\n     return callParams.getLabelSelector();\n   }\n+\n+  public String toString() {\n+    return toString(true);\n+  }\n+\n+  /**\n+   * Create readable details of request, optionally including the request body.\n+   * @param includeBody true if request body should be included\n+   * @return readable details of the request\n+   */\n+  public String toString(boolean includeBody) {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(call);\n+    if (namespace != null) {\n+      sb.append(' ');\n+      sb.append(LOGGER.formatMessage(MessageKeys.REQUEST_PARAMS_IN_NS, namespace));\n+    }\n+    if (name != null) {\n+      sb.append(namespace != null ? \", \" : \" \");\n+      sb.append(LOGGER.formatMessage(MessageKeys.REQUEST_PARAMS_FOR_NAME, name));\n+    }\n+    if (includeBody && body != null) {\n+      sb.append(namespace != null || name != null ? \", \" : \" \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "915cdd93021744a71845daf35e5a3e30c8880f1d"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4770, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}