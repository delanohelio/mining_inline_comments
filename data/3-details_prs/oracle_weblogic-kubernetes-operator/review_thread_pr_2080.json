{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNDk2MTcw", "number": 2080, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMTowNDoxNFrOE_VsvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMTowNDoxNFrOE_VsvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODUxMjYwOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMTowNDoxNFrOH8_sgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMTowNDoxNFrOH8_sgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcyMDE5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                logger.info(\"Deploying webapp {0} to admin server\", archivePath);\n          \n          \n            \n                logger.info(\"Deploying webapp {0} to admin server and cluster\", archivePath);", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2080#discussion_r533720195", "createdAt": "2020-12-01T21:04:14Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorUpgrade.java", "diffHunk": "@@ -490,65 +499,74 @@ private void checkDomainStarted(String domainUid, String domainNamespace) {\n   }\n \n   private void deployAndAccessApplication(String namespace, String externalServiceNameSuffix) {\n-    logger.info(\"Getting node port for admin server default channel\");\n-    int serviceNodePort = assertDoesNotThrow(() ->\n-            getServiceNodePort(namespace, getExternalServicePodName(adminServerPodName,\n-                externalServiceNameSuffix), \"default\"),\n-        \"Getting admin server node port failed\");\n-    assertNotEquals(-1, serviceNodePort, \"admin server default node port is not valid\");\n-\n     Path archivePath = Paths.get(ITTESTS_DIR, \"../src/integration-tests/apps/testwebapp.war\");\n     logger.info(\"Deploying application {0} to domain {1} cluster target cluster-1 in namespace {2}\",\n         archivePath, domainUid, namespace);\n-    ExecResult result = DeployUtil.deployUsingRest(K8S_NODEPORT_HOST,\n-        String.valueOf(serviceNodePort),\n-        ADMIN_USERNAME_DEFAULT, ADMIN_PASSWORD_DEFAULT,\n-        \"cluster-1\", archivePath, null, \"testwebapp\");\n-    assertNotNull(result, \"Application deployment failed\");\n-    logger.info(\"Application deployment returned {0}\", result.toString());\n-    assertEquals(\"202\", result.stdout(), \"Deployment didn't return HTTP status code 202\");\n+    logger.info(\"Deploying webapp {0} to admin server\", archivePath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e499959b74fe9b87ada0c46df80d74a89500e3c"}, "originalPosition": 109}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3791, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}