{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMTI0MDQz", "number": 1777, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODowODo0OVrOEKN-vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMzoyODo0NVrOEKT3tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTUwMjcwOnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDomain.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODowODo0OVrOGrIlFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDo0MDozNlrOGrNouw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MjUxOQ==", "bodyText": "This is an odd programming style. Why not use break?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447882519", "createdAt": "2020-06-30T18:08:49Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDomain.java", "diffHunk": "@@ -1074,6 +1075,7 @@ private static void collectAppAvaiability(\n       \n       if (count == 0) {\n         logger.info(\"XXXXXXXXXXX: application not available XXXXXXXX\");\n+        failed = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bc0b587153c8e1e7d50f4f5a42be7c7f7ebe1a8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MzE2Mw==", "bodyText": "Related question... why aren't you using our ordinary retry pattern?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447883163", "createdAt": "2020-06-30T18:09:59Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDomain.java", "diffHunk": "@@ -1074,6 +1075,7 @@ private static void collectAppAvaiability(\n       \n       if (count == 0) {\n         logger.info(\"XXXXXXXXXXX: application not available XXXXXXXX\");\n+        failed = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MjUxOQ=="}, "originalCommit": {"oid": "2bc0b587153c8e1e7d50f4f5a42be7c7f7ebe1a8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4OTUyNw==", "bodyText": "This is an odd programming style. Why not use break?\n\nYes, actually I can just exit the loop with break.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447889527", "createdAt": "2020-06-30T18:20:30Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDomain.java", "diffHunk": "@@ -1074,6 +1075,7 @@ private static void collectAppAvaiability(\n       \n       if (count == 0) {\n         logger.info(\"XXXXXXXXXXX: application not available XXXXXXXX\");\n+        failed = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MjUxOQ=="}, "originalCommit": {"oid": "2bc0b587153c8e1e7d50f4f5a42be7c7f7ebe1a8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg5MzExMA==", "bodyText": "Related question... why aren't you using our ordinary retry pattern?\n\nDid you mean using ConditionFactory?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447893110", "createdAt": "2020-06-30T18:26:38Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDomain.java", "diffHunk": "@@ -1074,6 +1075,7 @@ private static void collectAppAvaiability(\n       \n       if (count == 0) {\n         logger.info(\"XXXXXXXXXXX: application not available XXXXXXXX\");\n+        failed = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MjUxOQ=="}, "originalCommit": {"oid": "2bc0b587153c8e1e7d50f4f5a42be7c7f7ebe1a8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk2NTM3MQ==", "bodyText": "The pattern that we use in the JUnit5 test cases are easier for a simple condition retries. Here we have additional operation to perform. So I did not think that was a better pattern for this.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447965371", "createdAt": "2020-06-30T20:40:36Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDomain.java", "diffHunk": "@@ -1074,6 +1075,7 @@ private static void collectAppAvaiability(\n       \n       if (count == 0) {\n         logger.info(\"XXXXXXXXXXX: application not available XXXXXXXX\");\n+        failed = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MjUxOQ=="}, "originalCommit": {"oid": "2bc0b587153c8e1e7d50f4f5a42be7c7f7ebe1a8"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTczNjY3OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorRestartWhenPodRoll.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToxMDo1NFrOGrKyoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToyNTo1MFrOGrLRag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkxODc1Mw==", "bodyText": "you already have operator pod name in this method, you can directly call isPodRestarted(podName, namespace, timestamp)?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447918753", "createdAt": "2020-06-30T19:10:54Z", "author": {"login": "vanajamukkara"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorRestartWhenPodRoll.java", "diffHunk": "@@ -235,18 +234,14 @@ private void restartOperatorAndVerify() {\n             opNamespace,\n             condition.getElapsedTimeInMS(),\n             condition.getRemainingTimeInMS()))\n-        .until(assertDoesNotThrow(() -> operatorIsReady(opNamespace),\n-          \"operatorIsReady failed with ApiException\"));\n+        .until(assertDoesNotThrow(() -> isOperatorPodRestarted(opNamespace, opPodCreationTime),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bc0b587153c8e1e7d50f4f5a42be7c7f7ebe1a8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNTkxMg==", "bodyText": "I only have the old name, and a restarted operator pod has a different name.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447925912", "createdAt": "2020-06-30T19:24:30Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorRestartWhenPodRoll.java", "diffHunk": "@@ -235,18 +234,14 @@ private void restartOperatorAndVerify() {\n             opNamespace,\n             condition.getElapsedTimeInMS(),\n             condition.getRemainingTimeInMS()))\n-        .until(assertDoesNotThrow(() -> operatorIsReady(opNamespace),\n-          \"operatorIsReady failed with ApiException\"));\n+        .until(assertDoesNotThrow(() -> isOperatorPodRestarted(opNamespace, opPodCreationTime),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkxODc1Mw=="}, "originalCommit": {"oid": "2bc0b587153c8e1e7d50f4f5a42be7c7f7ebe1a8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNjYzNA==", "bodyText": "isOperatorPodRestarted() does not require the operator pod name because we'll only have one operator in a namespace.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r447926634", "createdAt": "2020-06-30T19:25:50Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItOperatorRestartWhenPodRoll.java", "diffHunk": "@@ -235,18 +234,14 @@ private void restartOperatorAndVerify() {\n             opNamespace,\n             condition.getElapsedTimeInMS(),\n             condition.getRemainingTimeInMS()))\n-        .until(assertDoesNotThrow(() -> operatorIsReady(opNamespace),\n-          \"operatorIsReady failed with ApiException\"));\n+        .until(assertDoesNotThrow(() -> isOperatorPodRestarted(opNamespace, opPodCreationTime),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkxODc1Mw=="}, "originalCommit": {"oid": "2bc0b587153c8e1e7d50f4f5a42be7c7f7ebe1a8"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjQ2NzcyOnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDomain.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMzoyODo0NVrOGrR1Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDowMjo0NFrOGrScKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAzNDA5OA==", "bodyText": "What are the \"XXX\" and \"YYY\"? What application is it?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r448034098", "createdAt": "2020-06-30T23:28:45Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDomain.java", "diffHunk": "@@ -1074,6 +1074,7 @@ private static void collectAppAvaiability(\n       \n       if (count == 0) {\n         logger.info(\"XXXXXXXXXXX: application not available XXXXXXXX\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31ba6083a7474c90f070160d5100d83bc0c5a7e5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0NDA3NA==", "bodyText": "Those \"XXX\" and \"YYY\" are tokens to make it easier for people to notice the failure/healthy conditions. The failure case \"XXX\" is INFO, and \"YYY\" is \"FINE\".", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1777#discussion_r448044074", "createdAt": "2020-07-01T00:02:44Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDomain.java", "diffHunk": "@@ -1074,6 +1074,7 @@ private static void collectAppAvaiability(\n       \n       if (count == 0) {\n         logger.info(\"XXXXXXXXXXX: application not available XXXXXXXX\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAzNDA5OA=="}, "originalCommit": {"oid": "31ba6083a7474c90f070160d5100d83bc0c5a7e5"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4430, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}