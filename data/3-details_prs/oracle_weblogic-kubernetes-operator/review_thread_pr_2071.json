{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NTk1MzEw", "number": 2071, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNjo0NDo0NlrOE806bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNjo0NDo0NlrOE806bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjE2OTQwOnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfMiiDomain.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNjo0NDo0NlrOH5LsQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzoxNTo1MlrOH5NBcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTcyMjQzMw==", "bodyText": "this name makes no sense.  RCU is a command line tool for setting up product schema in a database.  what are you actually reusing?  a set of schema?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2071#discussion_r529722433", "createdAt": "2020-11-24T16:44:46Z", "author": {"login": "markxnelson"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfMiiDomain.java", "diffHunk": "@@ -213,33 +224,125 @@ public void testJrfModelInImage() {\n         replicaCount,\n         jrfMiiImage);\n \n-    // create model in image domain\n     createDomainAndVerify(domain, jrfDomainNamespace);\n+    verifyDomainReady();\n+  }\n \n-    checkPodReadyAndServiceExists(adminServerPodName, domainUid, jrfDomainNamespace);\n+  /**\n+   * Save the OPSS key wallet from a running JRF domain's introspector configmap to a file\n+   * Restore the OPSS key wallet file to a Kubernetes secret.\n+   * Shutdown the domain.\n+   * Using the same RCU restart the same JRF domain with restored OPSS key wallet file secret.\n+   * Verify Pod is ready and service exists for both admin server and managed servers.\n+   * Verify EM console is accessible.\n+   */\n+  @Order(2)\n+  @Test\n+  @DisplayName(\"Reuse same RCU to restart JRF domain\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b67c43c7dad626a29ad9a0a6dd7dae3b5046c19"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc0NDI0Mg==", "bodyText": "Yes. The same RCU schema. Let me change the method name as:\n@DisplayName(\"Reuse the same RCU schema to restart JRF domain\")\npublic void testReuseRCUschemalToRestartDomain() {", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2071#discussion_r529744242", "createdAt": "2020-11-24T17:15:52Z", "author": {"login": "maggiehe00"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItJrfMiiDomain.java", "diffHunk": "@@ -213,33 +224,125 @@ public void testJrfModelInImage() {\n         replicaCount,\n         jrfMiiImage);\n \n-    // create model in image domain\n     createDomainAndVerify(domain, jrfDomainNamespace);\n+    verifyDomainReady();\n+  }\n \n-    checkPodReadyAndServiceExists(adminServerPodName, domainUid, jrfDomainNamespace);\n+  /**\n+   * Save the OPSS key wallet from a running JRF domain's introspector configmap to a file\n+   * Restore the OPSS key wallet file to a Kubernetes secret.\n+   * Shutdown the domain.\n+   * Using the same RCU restart the same JRF domain with restored OPSS key wallet file secret.\n+   * Verify Pod is ready and service exists for both admin server and managed servers.\n+   * Verify EM console is accessible.\n+   */\n+  @Order(2)\n+  @Test\n+  @DisplayName(\"Reuse same RCU to restart JRF domain\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTcyMjQzMw=="}, "originalCommit": {"oid": "4b67c43c7dad626a29ad9a0a6dd7dae3b5046c19"}, "originalPosition": 152}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3775, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}