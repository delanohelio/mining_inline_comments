{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MDg4NzY5", "number": 1877, "title": "Created infra for WLS Logging Exporter and converted related tests to use JUnit5", "bodyText": "Use case\n\nCreated unit methods in Junit 5 test framework to install WebLogic Logging Exporter\nInstall Kibana/Elasticsearch, install and start Operator with ELK Stack enabled and install WebLogic logging exporter in all WebLogic server pods\nCreate and start the WebLogic domain\nTest WebLogic Logging Exporter by verify that Using WebLogic logging exporter,\n\nWebLogic server Logs is integrated to ELK Stack in the same pod that the domain is running on\nLog hits for WebLogic servers are not empty\nFilters is applied to all the messages\n\n\n\nJenkins Job passed:\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/1516/parameters/\nJenkins job passed again with latest change\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/1542/\nJenkins job passed again\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/1558/\nlatest Jenkins job, one failure is not related to this change\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/1685/", "createdAt": "2020-08-17T22:00:24Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877", "merged": true, "mergeCommit": {"oid": "15203b590c649db60129ca783ccef856158450dd"}, "closed": true, "closedAt": "2020-08-27T21:42:13Z", "author": {"login": "hzhao-github"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_14wEAH2gAyNDY5MDg4NzY5Ojg3ODcwY2ZjNDAxMTExNzAwOTQ1YzI5YjQ4NDZmNDVkYzZlOTlhYTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDEsl0AFqTQ3Njk3Njg3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "87870cfc401111700945c29b4846f45dc6e99aa6", "author": {"user": {"login": "hzhao-github", "name": "Huiling Zhao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/87870cfc401111700945c29b4846f45dc6e99aa6", "committedDate": "2020-08-17T17:30:16Z", "message": "Created infra for WLS Logging Exporter and converted related tests to use JUnit5 jenkins-ignore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583", "author": {"user": {"login": "hzhao-github", "name": "Huiling Zhao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583", "committedDate": "2020-08-19T00:10:32Z", "message": "upgraded ELK Stack back to v7 and fixed a filter issue in RESTful API to query Elasticsearch repos jenkins-ignore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNjM2ODE2", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#pullrequestreview-472636816", "createdAt": "2020-08-21T16:41:12Z", "commit": {"oid": "2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNjo0MToxMlrOHE0BAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNjo0MToxMlrOHE0BAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwODU3Ng==", "bodyText": "Period is missing in all sentences.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r474808576", "createdAt": "2020-08-21T16:41:12Z", "author": {"login": "anpanigr"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -74,24 +81,34 @@\n  * 2. Install and start Operator with ELK Stack enabled\n  * 3. Verify that ELK Stack is ready to use by checking the index status of\n  *    Kibana and Logstash created in the Operator pod successfully\n- * 4. Create and start the WebLogic domain\n- * 5. Verify that Elasticsearch collects data from WebLogic logs and\n- *    stores them in its repository correctly.\n+ * 4. Install WebLogic logging exporter in all WebLogic server pods", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNzc4NDcx", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#pullrequestreview-472778471", "createdAt": "2020-08-21T19:46:21Z", "commit": {"oid": "2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxOTo0NjoyMVrOHE6Aqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxOTo1NToyOVrOHE6d5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkwNjc5NA==", "bodyText": "remove space between param and return", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r474906794", "createdAt": "2020-08-21T19:46:21Z", "author": {"login": "marinakog"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -713,11 +713,33 @@ public static LoggingExporterParams installAndVerifyKibana() {\n     return kibanaParams;\n   }\n \n+  /**\n+   * Install WebLogic Logging Exporter.\n+   *\n+   * @param filter the value of weblogicLoggingExporterFilters to be added to WebLogic Logging Exporter YAML file\n+   * @param wlsLoggingExporterYamlFileLoc the directory where WebLogic Logging Exporter YAML file stores\n+   * @param wlsLoggingExporterArchiveLoc the directory where WebLogic Logging Exporter jar files store\n+   *\n+   * @return true if WebLogic Logging Exporter is successfully installed, false otherwise.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkwNzM1MQ==", "bodyText": "please remove space between param and return", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r474907351", "createdAt": "2020-08-21T19:47:02Z", "author": {"login": "marinakog"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/LoggingExporter.java", "diffHunk": "@@ -283,6 +299,68 @@ public static boolean uninstallKibana(LoggingExporterParams params) {\n     return testVarMap;\n   }\n \n+  /**\n+   * Install WebLogic Logging Exporter.\n+   *\n+   * @param filter the value of weblogicLoggingExporterFilters to be added to WebLogic Logging Exporter YAML file\n+   * @param wlsLoggingExporterYamlFileLoc the directory where WebLogic Logging Exporter YAML file stores\n+   * @param wlsLoggingExporterArchiveLoc the directory where WebLogic Logging Exporter jar files store\n+   *\n+   * @return true if WebLogic Logging Exporter is successfully installed, false otherwise.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkxMTA3MQ==", "bodyText": "where do we use it? if needed please change the name of the file", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r474911071", "createdAt": "2020-08-21T19:51:31Z", "author": {"login": "marinakog"}, "path": "new-integration-tests/src/test/resources/loggingexporter/config-wls-logging-startup.py.1", "diffHunk": "@@ -0,0 +1,80 @@\n+# Copyright (c) 2020, Oracle Corporation and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkxMzMzMQ==", "bodyText": "change the comment hardcoded version", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r474913331", "createdAt": "2020-08-21T19:54:17Z", "author": {"login": "marinakog"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/LoggingExporter.java", "diffHunk": "@@ -283,6 +299,68 @@ public static boolean uninstallKibana(LoggingExporterParams params) {\n     return testVarMap;\n   }\n \n+  /**\n+   * Install WebLogic Logging Exporter.\n+   *\n+   * @param filter the value of weblogicLoggingExporterFilters to be added to WebLogic Logging Exporter YAML file\n+   * @param wlsLoggingExporterYamlFileLoc the directory where WebLogic Logging Exporter YAML file stores\n+   * @param wlsLoggingExporterArchiveLoc the directory where WebLogic Logging Exporter jar files store\n+   *\n+   * @return true if WebLogic Logging Exporter is successfully installed, false otherwise.\n+   */\n+  public static boolean installWlsLoggingExporter(String filter,\n+                                                  String wlsLoggingExporterYamlFileLoc,\n+                                                  String wlsLoggingExporterArchiveLoc) {\n+\n+    try {\n+      // Create a dir to hold downloaded WebLogic Logging Exporter archive files\n+      FileUtils.cleanupDirectory(wlsLoggingExporterArchiveLoc);\n+      FileUtils.checkDirectory(wlsLoggingExporterArchiveLoc);\n+    } catch (IOException ioe) {\n+      logger.severe(\"Failed to cleanup and re-create the download directory {0}. Error is {1} \",\n+          wlsLoggingExporterArchiveLoc, ioe.getMessage());\n+    }\n+\n+    // Copy WebLogic Logging Exporter files to WORK_DIR\n+    String[] loggingExporterFiles =\n+        {WLS_LOGGING_EXPORTER_YAML_FILE_NAME, COPY_WLS_LOGGING_EXPORTER_FILE_NAME};\n+\n+    for (String loggingFile : loggingExporterFiles) {\n+      Path srcPath = Paths.get(wlsLoggingExporterYamlFileLoc, loggingFile);\n+      Path destPath = Paths.get(WORK_DIR, loggingFile);\n+      assertDoesNotThrow(() -> FileUtils.copy(srcPath, destPath),\n+          String.format(\"Failed to copy %s to %s\", srcPath, destPath));\n+      logger.severe(\"Copied {0} to {1}}\", srcPath, destPath);\n+    }\n+\n+    // Add filter to weblogicLoggingExporterFilters in WebLogic Logging Exporter YAML file\n+    assertDoesNotThrow(() -> addFilterToElkFile(filter),\n+        \"Failed to add WebLogic Logging Exporter filter\");\n+\n+    // Download WebLogic Logging Exporter jar file, weblogic-logging-exporter-1.0.0.jar\n+    ExecResult result = assertDoesNotThrow(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkxNDI3OA==", "bodyText": "you use hardcoded version here , should be variable for version WLS_LOGGING_EXPORTER_JAR_VERSION", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r474914278", "createdAt": "2020-08-21T19:55:29Z", "author": {"login": "marinakog"}, "path": "new-integration-tests/src/test/resources/loggingexporter/copy-logging-files-cmds.txt", "diffHunk": "@@ -0,0 +1,7 @@\n+[final-build-commands]\n+\n+RUN mkdir -p /u01/domains/elk-domain1/config && chown oracle:oracle /u01/domains/elk-domain1/config\n+COPY --chown=oracle:oracle files/WebLogicLoggingExporter.yaml /u01/domains/elk-domain1/config/\n+\n+RUN mkdir -p /u01/domains/elk-domain1/lib && chown oracle:oracle /u01/domains/elk-domain1/lib", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dfb3bbc5b4ea31d31efa6929f2140ed5f60d583"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32956af3a600946567373a5d08c02c49d8d0e378", "author": {"user": {"login": "hzhao-github", "name": "Huiling Zhao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/32956af3a600946567373a5d08c02c49d8d0e378", "committedDate": "2020-08-23T01:19:02Z", "message": "Changes based on comments jenkins-ignore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNzIyODg1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#pullrequestreview-473722885", "createdAt": "2020-08-24T17:45:29Z", "commit": {"oid": "32956af3a600946567373a5d08c02c49d8d0e378"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzo0NToyOVrOHFv0EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxODowMzoxNlrOHFwbKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4ODMwNQ==", "bodyText": "missing period.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475788305", "createdAt": "2020-08-24T17:45:29Z", "author": {"login": "anpanigr"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -70,28 +78,39 @@\n \n /**\n  * To test ELK Stack used in Operator env, this Elasticsearch test does\n- * 1. Install Kibana/Elasticsearch \n- * 2. Install and start Operator with ELK Stack enabled\n+ * 1. Install Kibana/Elasticsearch.\n+ * 2. Install and start Operator with ELK Stack enabled.\n  * 3. Verify that ELK Stack is ready to use by checking the index status of\n  *    Kibana and Logstash created in the Operator pod successfully", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32956af3a600946567373a5d08c02c49d8d0e378"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4OTgyOQ==", "bodyText": "adding it to MII  --> should it add WebLogic Exporter binary to the image builder process so that it will be available  in all domain image", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475789829", "createdAt": "2020-08-24T17:48:17Z", "author": {"login": "anpanigr"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -70,28 +78,39 @@\n \n /**\n  * To test ELK Stack used in Operator env, this Elasticsearch test does\n- * 1. Install Kibana/Elasticsearch \n- * 2. Install and start Operator with ELK Stack enabled\n+ * 1. Install Kibana/Elasticsearch.\n+ * 2. Install and start Operator with ELK Stack enabled.\n  * 3. Verify that ELK Stack is ready to use by checking the index status of\n  *    Kibana and Logstash created in the Operator pod successfully\n- * 4. Create and start the WebLogic domain\n- * 5. Verify that Elasticsearch collects data from WebLogic logs and\n- *    stores them in its repository correctly.\n+ * 4. Install WebLogic logging exporter in all WebLogic server pods by\n+ *    adding it to MII via --additionalBuildCommands and --additionalBuildFiles.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32956af3a600946567373a5d08c02c49d8d0e378"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5MDk3MA==", "bodyText": "empty space before period.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475790970", "createdAt": "2020-08-24T17:50:20Z", "author": {"login": "anpanigr"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -216,14 +249,84 @@ public void testOperatorLogSearch() {\n     String regex = \".*took\\\":(\\\\d+),.*hits\\\":\\\\{(.+)\\\\}\";\n     String queryCriteria = \"/_search?q=type:weblogic-operator\";\n \n-    verifySearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n \n     logger.info(\"Query Operator log info succeeded\");\n   }\n \n-  private static void createAndVerifyDomain() {\n-    // get the pre-built image created by IntegrationTestWatcher\n-    String miiImage = MII_BASIC_IMAGE_NAME + \":\" + MII_BASIC_IMAGE_TAG;\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info.\n+   * Verify that WebLogic server status of \"RUNNING\" is found.\n+   */\n+  @Disabled(\"Disabled the test due to JIRA OWLS-83899\")\n+  @Test\n+  @DisplayName(\"Use Elasticsearch Search APIs to query Operator log info and verify\")\n+  public void testWebLogicLogSearch() {\n+    // Verify that the admin status of \"RUNNING\" is found in query return from Elasticsearch repository\n+    verifyServerRunningInSearchResults(adminServerPodName);\n+\n+    // Verify that the ms status of \"RUNNING\" is found in query return from Elasticsearch repos\n+    verifyServerRunningInSearchResults(managedServerPodPrefix + \"1\");\n+\n+    logger.info(\"Query Operator log for WebLogic server status info succeeded\");\n+  }\n+\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info pushed to Elasticsearch repository\n+   * by WebLogic logging exporter . Verify that log hits for WebLogic servers are not empty", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32956af3a600946567373a5d08c02c49d8d0e378"}, "originalPosition": 183}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5MjAyMw==", "bodyText": "Verify that log hits --> Verify the log occurrence", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475792023", "createdAt": "2020-08-24T17:52:09Z", "author": {"login": "anpanigr"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -216,14 +249,84 @@ public void testOperatorLogSearch() {\n     String regex = \".*took\\\":(\\\\d+),.*hits\\\":\\\\{(.+)\\\\}\";\n     String queryCriteria = \"/_search?q=type:weblogic-operator\";\n \n-    verifySearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n \n     logger.info(\"Query Operator log info succeeded\");\n   }\n \n-  private static void createAndVerifyDomain() {\n-    // get the pre-built image created by IntegrationTestWatcher\n-    String miiImage = MII_BASIC_IMAGE_NAME + \":\" + MII_BASIC_IMAGE_TAG;\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info.\n+   * Verify that WebLogic server status of \"RUNNING\" is found.\n+   */\n+  @Disabled(\"Disabled the test due to JIRA OWLS-83899\")\n+  @Test\n+  @DisplayName(\"Use Elasticsearch Search APIs to query Operator log info and verify\")\n+  public void testWebLogicLogSearch() {\n+    // Verify that the admin status of \"RUNNING\" is found in query return from Elasticsearch repository\n+    verifyServerRunningInSearchResults(adminServerPodName);\n+\n+    // Verify that the ms status of \"RUNNING\" is found in query return from Elasticsearch repos\n+    verifyServerRunningInSearchResults(managedServerPodPrefix + \"1\");\n+\n+    logger.info(\"Query Operator log for WebLogic server status info succeeded\");\n+  }\n+\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info pushed to Elasticsearch repository\n+   * by WebLogic logging exporter . Verify that log hits for WebLogic servers are not empty", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5MDk3MA=="}, "originalCommit": {"oid": "32956af3a600946567373a5d08c02c49d8d0e378"}, "originalPosition": 183}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5ODMxMw==", "bodyText": "Can u re-phrase the description\nInstall Elasticsearch, Kibana and Operator.\nInstall WebLogic logging exporter in all WebLogic server pods to collect WebLogic logs.\n[create a one cluster domain.  does not make sense  ]", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r475798313", "createdAt": "2020-08-24T18:03:16Z", "author": {"login": "anpanigr"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -102,8 +121,14 @@\n   private static LoggingExporterParams kibanaParams = null;\n   private static LoggingFacade logger = null;\n \n+  private static String k8sExecCmdPrefix;\n+  private static Map<String, String> testVarMap;\n+  private static final int maxIterationsPod = 10;\n+\n   /**\n-   * Install Elasticsearch, Kibana and Operator and verify, create a one cluster domain.\n+   * Install Elasticsearch, Kibana and Operator and verify,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32956af3a600946567373a5d08c02c49d8d0e378"}, "originalPosition": 105}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0e3385cbfe41008b3e885cc2a19606a54541d9d", "author": {"user": {"login": "hzhao-github", "name": "Huiling Zhao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/d0e3385cbfe41008b3e885cc2a19606a54541d9d", "committedDate": "2020-08-24T19:24:10Z", "message": "Changes based on more comments jenkins-ignore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczODUwMzMw", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#pullrequestreview-473850330", "createdAt": "2020-08-24T20:56:17Z", "commit": {"oid": "d0e3385cbfe41008b3e885cc2a19606a54541d9d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a2e152a8c127a97e96999b7cdfa782e6cd7a557", "author": {"user": {"login": "hzhao-github", "name": "Huiling Zhao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/0a2e152a8c127a97e96999b7cdfa782e6cd7a557", "committedDate": "2020-08-24T21:22:12Z", "message": "Merge branch 'develop' of https://github.com/oracle/weblogic-kubernetes-operator into junit5-wlslogging-infra-tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5386d7435072daf20837bb329809028da5018639", "author": {"user": {"login": "hzhao-github", "name": "Huiling Zhao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/5386d7435072daf20837bb329809028da5018639", "committedDate": "2020-08-24T21:37:12Z", "message": "Changes based on m comments jenkins-ignore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczOTU3MjUx", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#pullrequestreview-473957251", "createdAt": "2020-08-24T22:49:34Z", "commit": {"oid": "5386d7435072daf20837bb329809028da5018639"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODM3MTY4", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#pullrequestreview-475837168", "createdAt": "2020-08-26T20:32:36Z", "commit": {"oid": "5386d7435072daf20837bb329809028da5018639"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDozMjozNlrOHHcqvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDo0NDoyN1rOHHdDmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3MTc3NQ==", "bodyText": "variable name maxIterationsPod is not appropriate here, also use awaitility api like we do in other cases ...", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r477571775", "createdAt": "2020-08-26T20:32:36Z", "author": {"login": "vanajamukkara"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/actions/impl/LoggingExporter.java", "diffHunk": "@@ -468,4 +562,69 @@ private static String execLoggingExpStatusCheck(String namespace, String labelSe\n \n     return statusLine.stdout();\n   }\n+\n+  private static ExecResult downloadWlsLoggingExporterJarsAndVerify(String jarReposUrl,\n+                                                                    String jarFileName,\n+                                                                    String wlsLoggingExporterArchiveLoc)\n+        throws IOException, InterruptedException {\n+\n+    ExecResult result = null;\n+    File wlsLoggingExpFile =\n+        new File(wlsLoggingExporterArchiveLoc + \"/\" + jarFileName);\n+    int i = 0;\n+\n+    StringBuffer getJars = new StringBuffer();\n+    getJars\n+        .append(\" wget -P \")\n+        .append(wlsLoggingExporterArchiveLoc)\n+        .append(\" --server-response --waitretry=5 --retry-connrefused \")\n+        .append(jarReposUrl)\n+        .append(\"/\")\n+        .append(jarFileName);\n+    logger.info(\"Executing cmd \" + getJars.toString());\n+\n+    // Make sure downloading completed\n+    while (i < maxIterationsPod) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5386d7435072daf20837bb329809028da5018639"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3NjMyOQ==", "bodyText": "leave a blank line before this line for better code readability", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r477576329", "createdAt": "2020-08-26T20:41:01Z", "author": {"login": "vanajamukkara"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -200,30 +235,100 @@ public void testLogLevelSearch() {\n     String regex = \".*count\\\":(\\\\d+),.*failed\\\":(\\\\d+)\";\n     String queryCriteria = \"/_count?q=level:INFO\";\n \n-    verifySearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, true);\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, true);\n \n     logger.info(\"Query logs of level=INFO succeeded\");\n   }\n \n   /**\n-   * Use Elasticsearch Search APIs to query Operator log info. Verify that log hits for\n-   * type=weblogic-operator are not empty\n+   * Use Elasticsearch Search APIs to query Operator log info. Verify that log occurrence for\n+   * type=weblogic-operator are not empty.\n    */\n   @Test\n   @DisplayName(\"Use Elasticsearch Search APIs to query Operator log info and verify\")\n   public void testOperatorLogSearch() {\n-    // Verify that log hits for Operator are not empty\n+    // Verify that log occurrence for Operator are not empty\n     String regex = \".*took\\\":(\\\\d+),.*hits\\\":\\\\{(.+)\\\\}\";\n     String queryCriteria = \"/_search?q=type:weblogic-operator\";\n \n-    verifySearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n \n     logger.info(\"Query Operator log info succeeded\");\n   }\n \n-  private static void createAndVerifyDomain() {\n-    // get the pre-built image created by IntegrationTestWatcher\n-    String miiImage = MII_BASIC_IMAGE_NAME + \":\" + MII_BASIC_IMAGE_TAG;\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info.\n+   * Verify that WebLogic server status of \"RUNNING\" is found.\n+   */\n+  @Disabled(\"Disabled the test due to JIRA OWLS-83899\")\n+  @Test\n+  @DisplayName(\"Use Elasticsearch Search APIs to query Operator log info and verify\")\n+  public void testWebLogicLogSearch() {\n+    // Verify that the admin status of \"RUNNING\" is found in query return from Elasticsearch repository\n+    verifyServerRunningInSearchResults(adminServerPodName);\n+\n+    // Verify that the ms status of \"RUNNING\" is found in query return from Elasticsearch repos\n+    verifyServerRunningInSearchResults(managedServerPodPrefix + \"1\");\n+\n+    logger.info(\"Query Operator log for WebLogic server status info succeeded\");\n+  }\n+\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info pushed to Elasticsearch repository\n+   * by WebLogic Logging Exporter. Verify that log occurrence for WebLogic servers are not empty.\n+   */\n+  @Test\n+  @DisplayName(\"Use Elasticsearch Search APIs to query WebLogic log info in WLS server pod and verify\")\n+  public void testWlsLoggingExporter() throws Exception {\n+    Map<String, String> wlsMap = verifyLoggingExporterReady(opNamespace, null, WEBLOGIC_INDEX_KEY);\n+    // merge testVarMap and wlsMap\n+    testVarMap.putAll(wlsMap);\n+\n+    // Verify that occurrence of log level = Notice are not empty\n+    String regex = \".*took\\\":(\\\\d+),.*hits\\\":\\\\{(.+)\\\\}\";\n+    String queryCriteria = \"/_search?q=level:Notice\";\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, WEBLOGIC_INDEX_KEY, false);\n+    // Verify that occurrence of loggerName = WebLogicServer are not empty", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5386d7435072daf20837bb329809028da5018639"}, "originalPosition": 214}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3NjY4OQ==", "bodyText": "same as above", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r477576689", "createdAt": "2020-08-26T20:41:40Z", "author": {"login": "vanajamukkara"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -200,30 +235,100 @@ public void testLogLevelSearch() {\n     String regex = \".*count\\\":(\\\\d+),.*failed\\\":(\\\\d+)\";\n     String queryCriteria = \"/_count?q=level:INFO\";\n \n-    verifySearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, true);\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, true);\n \n     logger.info(\"Query logs of level=INFO succeeded\");\n   }\n \n   /**\n-   * Use Elasticsearch Search APIs to query Operator log info. Verify that log hits for\n-   * type=weblogic-operator are not empty\n+   * Use Elasticsearch Search APIs to query Operator log info. Verify that log occurrence for\n+   * type=weblogic-operator are not empty.\n    */\n   @Test\n   @DisplayName(\"Use Elasticsearch Search APIs to query Operator log info and verify\")\n   public void testOperatorLogSearch() {\n-    // Verify that log hits for Operator are not empty\n+    // Verify that log occurrence for Operator are not empty\n     String regex = \".*took\\\":(\\\\d+),.*hits\\\":\\\\{(.+)\\\\}\";\n     String queryCriteria = \"/_search?q=type:weblogic-operator\";\n \n-    verifySearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n \n     logger.info(\"Query Operator log info succeeded\");\n   }\n \n-  private static void createAndVerifyDomain() {\n-    // get the pre-built image created by IntegrationTestWatcher\n-    String miiImage = MII_BASIC_IMAGE_NAME + \":\" + MII_BASIC_IMAGE_TAG;\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info.\n+   * Verify that WebLogic server status of \"RUNNING\" is found.\n+   */\n+  @Disabled(\"Disabled the test due to JIRA OWLS-83899\")\n+  @Test\n+  @DisplayName(\"Use Elasticsearch Search APIs to query Operator log info and verify\")\n+  public void testWebLogicLogSearch() {\n+    // Verify that the admin status of \"RUNNING\" is found in query return from Elasticsearch repository\n+    verifyServerRunningInSearchResults(adminServerPodName);\n+\n+    // Verify that the ms status of \"RUNNING\" is found in query return from Elasticsearch repos\n+    verifyServerRunningInSearchResults(managedServerPodPrefix + \"1\");\n+\n+    logger.info(\"Query Operator log for WebLogic server status info succeeded\");\n+  }\n+\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info pushed to Elasticsearch repository\n+   * by WebLogic Logging Exporter. Verify that log occurrence for WebLogic servers are not empty.\n+   */\n+  @Test\n+  @DisplayName(\"Use Elasticsearch Search APIs to query WebLogic log info in WLS server pod and verify\")\n+  public void testWlsLoggingExporter() throws Exception {\n+    Map<String, String> wlsMap = verifyLoggingExporterReady(opNamespace, null, WEBLOGIC_INDEX_KEY);\n+    // merge testVarMap and wlsMap\n+    testVarMap.putAll(wlsMap);\n+\n+    // Verify that occurrence of log level = Notice are not empty\n+    String regex = \".*took\\\":(\\\\d+),.*hits\\\":\\\\{(.+)\\\\}\";\n+    String queryCriteria = \"/_search?q=level:Notice\";\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, WEBLOGIC_INDEX_KEY, false);\n+    // Verify that occurrence of loggerName = WebLogicServer are not empty\n+    queryCriteria = \"/_search?q=loggerName:WebLogicServer\";\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, WEBLOGIC_INDEX_KEY, false);\n+    // Verify that occurrence of _type:doc are not empty", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5386d7435072daf20837bb329809028da5018639"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3NjkxNw==", "bodyText": "same as above", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r477576917", "createdAt": "2020-08-26T20:42:03Z", "author": {"login": "vanajamukkara"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -200,30 +235,100 @@ public void testLogLevelSearch() {\n     String regex = \".*count\\\":(\\\\d+),.*failed\\\":(\\\\d+)\";\n     String queryCriteria = \"/_count?q=level:INFO\";\n \n-    verifySearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, true);\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, true);\n \n     logger.info(\"Query logs of level=INFO succeeded\");\n   }\n \n   /**\n-   * Use Elasticsearch Search APIs to query Operator log info. Verify that log hits for\n-   * type=weblogic-operator are not empty\n+   * Use Elasticsearch Search APIs to query Operator log info. Verify that log occurrence for\n+   * type=weblogic-operator are not empty.\n    */\n   @Test\n   @DisplayName(\"Use Elasticsearch Search APIs to query Operator log info and verify\")\n   public void testOperatorLogSearch() {\n-    // Verify that log hits for Operator are not empty\n+    // Verify that log occurrence for Operator are not empty\n     String regex = \".*took\\\":(\\\\d+),.*hits\\\":\\\\{(.+)\\\\}\";\n     String queryCriteria = \"/_search?q=type:weblogic-operator\";\n \n-    verifySearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, LOGSTASH_INDEX_KEY, false);\n \n     logger.info(\"Query Operator log info succeeded\");\n   }\n \n-  private static void createAndVerifyDomain() {\n-    // get the pre-built image created by IntegrationTestWatcher\n-    String miiImage = MII_BASIC_IMAGE_NAME + \":\" + MII_BASIC_IMAGE_TAG;\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info.\n+   * Verify that WebLogic server status of \"RUNNING\" is found.\n+   */\n+  @Disabled(\"Disabled the test due to JIRA OWLS-83899\")\n+  @Test\n+  @DisplayName(\"Use Elasticsearch Search APIs to query Operator log info and verify\")\n+  public void testWebLogicLogSearch() {\n+    // Verify that the admin status of \"RUNNING\" is found in query return from Elasticsearch repository\n+    verifyServerRunningInSearchResults(adminServerPodName);\n+\n+    // Verify that the ms status of \"RUNNING\" is found in query return from Elasticsearch repos\n+    verifyServerRunningInSearchResults(managedServerPodPrefix + \"1\");\n+\n+    logger.info(\"Query Operator log for WebLogic server status info succeeded\");\n+  }\n+\n+  /**\n+   * Use Elasticsearch Search APIs to query WebLogic log info pushed to Elasticsearch repository\n+   * by WebLogic Logging Exporter. Verify that log occurrence for WebLogic servers are not empty.\n+   */\n+  @Test\n+  @DisplayName(\"Use Elasticsearch Search APIs to query WebLogic log info in WLS server pod and verify\")\n+  public void testWlsLoggingExporter() throws Exception {\n+    Map<String, String> wlsMap = verifyLoggingExporterReady(opNamespace, null, WEBLOGIC_INDEX_KEY);\n+    // merge testVarMap and wlsMap\n+    testVarMap.putAll(wlsMap);\n+\n+    // Verify that occurrence of log level = Notice are not empty\n+    String regex = \".*took\\\":(\\\\d+),.*hits\\\":\\\\{(.+)\\\\}\";\n+    String queryCriteria = \"/_search?q=level:Notice\";\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, WEBLOGIC_INDEX_KEY, false);\n+    // Verify that occurrence of loggerName = WebLogicServer are not empty\n+    queryCriteria = \"/_search?q=loggerName:WebLogicServer\";\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, WEBLOGIC_INDEX_KEY, false);\n+    // Verify that occurrence of _type:doc are not empty\n+    queryCriteria = \"/_search?q=_type:doc\";\n+    verifyCountsHitsInSearchResults(queryCriteria, regex, WEBLOGIC_INDEX_KEY, false);\n+    // Verify that serverName:managed-server1 is filtered out", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5386d7435072daf20837bb329809028da5018639"}, "originalPosition": 220}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3ODEzOQ==", "bodyText": "variable name maxIterationsPod is not appropriate here, also use awaitility api like we do in other cases ...", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#discussion_r477578139", "createdAt": "2020-08-26T20:44:27Z", "author": {"login": "vanajamukkara"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItElasticLogging.java", "diffHunk": "@@ -329,7 +438,33 @@ private static void createDomainCrAndVerify(String adminSecretName,\n     createDomainAndVerify(domain, domainNamespace);\n   }\n \n-  private void verifySearchResults(String queryCriteria, String regex,\n+  private void verifyServerRunningInSearchResults(String serverName) {\n+    int i = 0;\n+    String queryResult = null;\n+    String queryCriteria = \"/_search?q=log:\" + serverName;\n+    while (i < maxIterationsPod) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5386d7435072daf20837bb329809028da5018639"}, "originalPosition": 289}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2dccd63ea1e20eeefab98bd85001f094ef72925", "author": {"user": {"login": "hzhao-github", "name": "Huiling Zhao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/f2dccd63ea1e20eeefab98bd85001f094ef72925", "committedDate": "2020-08-27T02:08:03Z", "message": "Change based on comments jenkins-ignore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2OTc2ODc0", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1877#pullrequestreview-476976874", "createdAt": "2020-08-27T18:27:20Z", "commit": {"oid": "f2dccd63ea1e20eeefab98bd85001f094ef72925"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4399, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}