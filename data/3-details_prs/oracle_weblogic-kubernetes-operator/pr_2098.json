{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5Njc4NjQ1", "number": 2098, "title": "negative test for changing domain name using MII dynamic update ", "bodyText": "This is a negative test for MII dynamic update - changing domain name at runtime (unsupported).\nJenkins result:\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/3337/\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/3340/\nhttps://build.weblogick8s.org:8443/job/weblogic-kubernetes-operator-kind-new/3343/", "createdAt": "2020-12-14T17:21:49Z", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098", "merged": true, "mergeCommit": {"oid": "57f1e5f11e8369c54dc2481df6b94b32ea726b42"}, "closed": true, "closedAt": "2020-12-16T18:42:35Z", "author": {"login": "xiancao"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlPnY9AH2gAyNTM5Njc4NjQ1OmI4NzczZjNhN2Q4OTk5Yjc0YWFkZTZjZGU3OTdiNzRkYjgxYzI5NTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmgrBvgH2gAyNTM5Njc4NjQ1OmFiZDFlODkyNzZmM2Y0YjMxNDRlODA2M2JlZmQyZDQxMzkxMGJlNmU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b8773f3a7d8999b74aade6cde797b74db81c2956", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b8773f3a7d8999b74aade6cde797b74db81c2956", "committedDate": "2020-12-11T22:24:02Z", "message": "dynamic update change domain name (unsupported)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "908292ff81ee8adc9a9a7812c99e67fa7f97a5e3", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/908292ff81ee8adc9a9a7812c99e67fa7f97a5e3", "committedDate": "2020-12-12T00:02:59Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb8a95d7ea92e39e89817b85277e02f798c55846", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/bb8a95d7ea92e39e89817b85277e02f798c55846", "committedDate": "2020-12-14T19:12:15Z", "message": "Merge branch 'dynamicupdate' of https://github.com/oracle/weblogic-kubernetes-operator into xc-86195"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxOTAwMjEx", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098#pullrequestreview-551900211", "createdAt": "2020-12-14T21:17:26Z", "commit": {"oid": "bb8a95d7ea92e39e89817b85277e02f798c55846"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMToxNzoyNlrOIFpyCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMToxOTowM1rOIFp4oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc5ODM0NA==", "bodyText": "Suggested change", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098#discussion_r542798344", "createdAt": "2020-12-14T21:17:26Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java", "diffHunk": "@@ -453,6 +516,65 @@ private void verifyIntrospectorRuns() {\n     checkPodDoesNotExist(introspectPodName, domainUid, domainNamespace);\n   }\n \n+  private void verifyIntrospectorFails(String expectedErrorMsg) {\n+    // verify the introspector pod is created\n+    logger.info(\"Verifying introspector pod is created\");\n+    String introspectJobName = getIntrospectJobName(domainUid);\n+    checkPodExists(introspectJobName, domainUid, domainNamespace);\n+\n+    // check whether the introspector log contains the expected error message\n+    ConditionFactory withRetryPolicy = with().pollDelay(2, SECONDS)\n+        .and().with().pollInterval(2, SECONDS)\n+        .atMost(2, MINUTES).await();\n+\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for the log of introspector pod contains the expected error msg {0}. \"\n+                        + \"Elapsed time {1}ms, remaining time {2}ms\",\n+                    expectedErrorMsg,\n+                    condition.getElapsedTimeInMS(),\n+                    condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podLogContainsExpectedErrorMsg(introspectJobName, domainNamespace, expectedErrorMsg));\n+\n+    // check the status phase of the introspector pod is failed\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for status phase of introspector pod is failed. \"\n+                        + \"Elapsed time {0}ms, remaining time {1}ms\",\n+                    condition.getElapsedTimeInMS(), condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podStatusPhaseContainsString(domainNamespace, introspectJobName, \"Failed\"));\n+  }\n+\n+  private String getPodNameFromJobName(String namespace, String jobName) {\n+    String labelSelector = String.format(\"weblogic.domainUID in (%s)\", domainUid);\n+    V1Pod introspectorPod = assertDoesNotThrow(() -> getPod(namespace, labelSelector, jobName));\n+    assertNotNull(introspectorPod);\n+    assertNotNull(introspectorPod.getMetadata());\n+    return introspectorPod.getMetadata().getName();\n+  }\n+\n+  private boolean podLogContainsExpectedErrorMsg(String introspectJobName, String namespace, String errormsg) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb8a95d7ea92e39e89817b85277e02f798c55846"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc5ODU3NA==", "bodyText": "Suggested change", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098#discussion_r542798574", "createdAt": "2020-12-14T21:17:40Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java", "diffHunk": "@@ -453,6 +516,65 @@ private void verifyIntrospectorRuns() {\n     checkPodDoesNotExist(introspectPodName, domainUid, domainNamespace);\n   }\n \n+  private void verifyIntrospectorFails(String expectedErrorMsg) {\n+    // verify the introspector pod is created\n+    logger.info(\"Verifying introspector pod is created\");\n+    String introspectJobName = getIntrospectJobName(domainUid);\n+    checkPodExists(introspectJobName, domainUid, domainNamespace);\n+\n+    // check whether the introspector log contains the expected error message\n+    ConditionFactory withRetryPolicy = with().pollDelay(2, SECONDS)\n+        .and().with().pollInterval(2, SECONDS)\n+        .atMost(2, MINUTES).await();\n+\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for the log of introspector pod contains the expected error msg {0}. \"\n+                        + \"Elapsed time {1}ms, remaining time {2}ms\",\n+                    expectedErrorMsg,\n+                    condition.getElapsedTimeInMS(),\n+                    condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podLogContainsExpectedErrorMsg(introspectJobName, domainNamespace, expectedErrorMsg));\n+\n+    // check the status phase of the introspector pod is failed\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for status phase of introspector pod is failed. \"\n+                        + \"Elapsed time {0}ms, remaining time {1}ms\",\n+                    condition.getElapsedTimeInMS(), condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podStatusPhaseContainsString(domainNamespace, introspectJobName, \"Failed\"));\n+  }\n+\n+  private String getPodNameFromJobName(String namespace, String jobName) {\n+    String labelSelector = String.format(\"weblogic.domainUID in (%s)\", domainUid);\n+    V1Pod introspectorPod = assertDoesNotThrow(() -> getPod(namespace, labelSelector, jobName));\n+    assertNotNull(introspectorPod);\n+    assertNotNull(introspectorPod.getMetadata());\n+    return introspectorPod.getMetadata().getName();\n+  }\n+\n+  private boolean podLogContainsExpectedErrorMsg(String introspectJobName, String namespace, String errormsg) {\n+\n+    String introspectPodName = getPodNameFromJobName(namespace, introspectJobName);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb8a95d7ea92e39e89817b85277e02f798c55846"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc5OTQ2Ng==", "bodyText": "add message", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098#discussion_r542799466", "createdAt": "2020-12-14T21:18:31Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java", "diffHunk": "@@ -453,6 +516,65 @@ private void verifyIntrospectorRuns() {\n     checkPodDoesNotExist(introspectPodName, domainUid, domainNamespace);\n   }\n \n+  private void verifyIntrospectorFails(String expectedErrorMsg) {\n+    // verify the introspector pod is created\n+    logger.info(\"Verifying introspector pod is created\");\n+    String introspectJobName = getIntrospectJobName(domainUid);\n+    checkPodExists(introspectJobName, domainUid, domainNamespace);\n+\n+    // check whether the introspector log contains the expected error message\n+    ConditionFactory withRetryPolicy = with().pollDelay(2, SECONDS)\n+        .and().with().pollInterval(2, SECONDS)\n+        .atMost(2, MINUTES).await();\n+\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for the log of introspector pod contains the expected error msg {0}. \"\n+                        + \"Elapsed time {1}ms, remaining time {2}ms\",\n+                    expectedErrorMsg,\n+                    condition.getElapsedTimeInMS(),\n+                    condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podLogContainsExpectedErrorMsg(introspectJobName, domainNamespace, expectedErrorMsg));\n+\n+    // check the status phase of the introspector pod is failed\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for status phase of introspector pod is failed. \"\n+                        + \"Elapsed time {0}ms, remaining time {1}ms\",\n+                    condition.getElapsedTimeInMS(), condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podStatusPhaseContainsString(domainNamespace, introspectJobName, \"Failed\"));\n+  }\n+\n+  private String getPodNameFromJobName(String namespace, String jobName) {\n+    String labelSelector = String.format(\"weblogic.domainUID in (%s)\", domainUid);\n+    V1Pod introspectorPod = assertDoesNotThrow(() -> getPod(namespace, labelSelector, jobName));\n+    assertNotNull(introspectorPod);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb8a95d7ea92e39e89817b85277e02f798c55846"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc5OTU5Ng==", "bodyText": "add message", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098#discussion_r542799596", "createdAt": "2020-12-14T21:18:40Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java", "diffHunk": "@@ -453,6 +516,65 @@ private void verifyIntrospectorRuns() {\n     checkPodDoesNotExist(introspectPodName, domainUid, domainNamespace);\n   }\n \n+  private void verifyIntrospectorFails(String expectedErrorMsg) {\n+    // verify the introspector pod is created\n+    logger.info(\"Verifying introspector pod is created\");\n+    String introspectJobName = getIntrospectJobName(domainUid);\n+    checkPodExists(introspectJobName, domainUid, domainNamespace);\n+\n+    // check whether the introspector log contains the expected error message\n+    ConditionFactory withRetryPolicy = with().pollDelay(2, SECONDS)\n+        .and().with().pollInterval(2, SECONDS)\n+        .atMost(2, MINUTES).await();\n+\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for the log of introspector pod contains the expected error msg {0}. \"\n+                        + \"Elapsed time {1}ms, remaining time {2}ms\",\n+                    expectedErrorMsg,\n+                    condition.getElapsedTimeInMS(),\n+                    condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podLogContainsExpectedErrorMsg(introspectJobName, domainNamespace, expectedErrorMsg));\n+\n+    // check the status phase of the introspector pod is failed\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for status phase of introspector pod is failed. \"\n+                        + \"Elapsed time {0}ms, remaining time {1}ms\",\n+                    condition.getElapsedTimeInMS(), condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podStatusPhaseContainsString(domainNamespace, introspectJobName, \"Failed\"));\n+  }\n+\n+  private String getPodNameFromJobName(String namespace, String jobName) {\n+    String labelSelector = String.format(\"weblogic.domainUID in (%s)\", domainUid);\n+    V1Pod introspectorPod = assertDoesNotThrow(() -> getPod(namespace, labelSelector, jobName));\n+    assertNotNull(introspectorPod);\n+    assertNotNull(introspectorPod.getMetadata());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb8a95d7ea92e39e89817b85277e02f798c55846"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjgwMDAzMg==", "bodyText": "Suggested change", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098#discussion_r542800032", "createdAt": "2020-12-14T21:19:03Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java", "diffHunk": "@@ -443,7 +452,61 @@ public void testMiiRemoveTarget() {\n \n   }\n \n+  /**\n+   * Negative test: Changing the domain name using mii dynamic update.\n+   */\n+  @Test\n+  @Order(5)\n+  @DisplayName(\"Negative test changing domain name using mii dynamic update\")\n+  public void testMiiChangeDomainName() {\n+\n+    // This test uses the WebLogic domain created in BeforeAll method\n+    // BeforeEach method ensures that the server pods are running\n+\n+    // write sparse yaml to file\n+    Path pathToChangeDomainNameYaml = Paths.get(WORK_DIR + \"/changedomainname.yaml\");\n+    String yamlToChangeDomainName = \"topology:\\n\"\n+        + \"  name: newdomainname\\n\"\n+        + \"  AdminServerName: 'admin-server'\";\n \n+    assertDoesNotThrow(() -> Files.write(pathToChangeDomainNameYaml, yamlToChangeDomainName.getBytes()));\n+\n+    // Replace contents of an existing configMap\n+    replaceConfigMapWithModelFiles(configMapName, domainUid, domainNamespace,\n+        Arrays.asList(pathToChangeDomainNameYaml.toString()), withStandardRetryPolicy);\n+\n+    // Patch a running domain with introspectVersion.\n+    patchDomainResourceWithNewIntrospectVersion(domainUid, domainNamespace);\n+\n+    // Verifying introspector pod is created and failed\n+    logger.info(\"verifying the introspector failed and the pod log contains the expected error msg\");\n+    String expectedErrorMsg = \"name is not one of the attribute names allowed in model location topology\";\n+    verifyIntrospectorFails(expectedErrorMsg);\n+\n+    // verify the domain status message contains the error msg\n+    logger.info(\"verifying the domain status message contains the expected error msg\");\n+    Domain miiDynamicUpdateDomain =\n+        assertDoesNotThrow(() -> getDomainCustomResource(domainUid, domainNamespace));\n+\n+    assertTrue(miiDynamicUpdateDomain.getStatus().getMessage().contains(expectedErrorMsg),\n+        String.format(\"failed to find the error msg %s in domain status message\", expectedErrorMsg));\n+\n+    // check the domain status condition message contains the error msg\n+    logger.info(\"verifying the domain status condition message contains the expected error msg\");\n+    assertTrue(domainStatusConditionMsgContainsErrorMsg(miiDynamicUpdateDomain, expectedErrorMsg),\n+        String.format(\"domain status condition does not contain error msg %s\", expectedErrorMsg));\n+  }\n+\n+  private boolean domainStatusConditionMsgContainsErrorMsg(Domain domain, String errorMsg) {\n+    for (DomainCondition domainCondition : domain.getStatus().getConditions()) {\n+      if (domainCondition.getType().equalsIgnoreCase(\"Failed\")\n+          && domainCondition.getMessage().contains(errorMsg)) {\n+        return true;\n+      }\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb8a95d7ea92e39e89817b85277e02f798c55846"}, "originalPosition": 93}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNTgwNzE1", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098#pullrequestreview-552580715", "createdAt": "2020-12-15T15:30:33Z", "commit": {"oid": "bb8a95d7ea92e39e89817b85277e02f798c55846"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNTozMDozM1rOIGRWtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNTozMDozM1rOIGRWtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0NjcxMQ==", "bodyText": "I don't think this is the correct message.  Are you wait for the latest WDT release 1.9.8 (not yet released but should be today).", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098#discussion_r543446711", "createdAt": "2020-12-15T15:30:33Z", "author": {"login": "jshum2479"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java", "diffHunk": "@@ -443,7 +452,61 @@ public void testMiiRemoveTarget() {\n \n   }\n \n+  /**\n+   * Negative test: Changing the domain name using mii dynamic update.\n+   */\n+  @Test\n+  @Order(5)\n+  @DisplayName(\"Negative test changing domain name using mii dynamic update\")\n+  public void testMiiChangeDomainName() {\n+\n+    // This test uses the WebLogic domain created in BeforeAll method\n+    // BeforeEach method ensures that the server pods are running\n+\n+    // write sparse yaml to file\n+    Path pathToChangeDomainNameYaml = Paths.get(WORK_DIR + \"/changedomainname.yaml\");\n+    String yamlToChangeDomainName = \"topology:\\n\"\n+        + \"  name: newdomainname\\n\"\n+        + \"  AdminServerName: 'admin-server'\";\n \n+    assertDoesNotThrow(() -> Files.write(pathToChangeDomainNameYaml, yamlToChangeDomainName.getBytes()));\n+\n+    // Replace contents of an existing configMap\n+    replaceConfigMapWithModelFiles(configMapName, domainUid, domainNamespace,\n+        Arrays.asList(pathToChangeDomainNameYaml.toString()), withStandardRetryPolicy);\n+\n+    // Patch a running domain with introspectVersion.\n+    patchDomainResourceWithNewIntrospectVersion(domainUid, domainNamespace);\n+\n+    // Verifying introspector pod is created and failed\n+    logger.info(\"verifying the introspector failed and the pod log contains the expected error msg\");\n+    String expectedErrorMsg = \"name is not one of the attribute names allowed in model location topology\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb8a95d7ea92e39e89817b85277e02f798c55846"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9db6586aed2d816eceddf1f26c3110a8b4bda41c", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9db6586aed2d816eceddf1f26c3110a8b4bda41c", "committedDate": "2020-12-15T20:49:56Z", "message": "resolve merge conflicts and address Vanaja's comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abd1e89276f3f4b3144e8063befd2d413910be6e", "author": {"user": {"login": "xiancao", "name": "Xian Cao"}}, "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/abd1e89276f3f4b3144e8063befd2d413910be6e", "committedDate": "2020-12-15T20:50:19Z", "message": "Merge branch 'dynamicupdate' of https://github.com/oracle/weblogic-kubernetes-operator into xc-86195"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3988, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}