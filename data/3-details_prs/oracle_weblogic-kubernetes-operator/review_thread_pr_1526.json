{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NzMzMDA5", "number": 1526, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOTozNzowOVrODuGdcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTozMTowNVrODubVqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjY2OTI5OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOTozNzowOVrOF_6jiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOTozNzowOVrOF_6jiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2Mzk3Nw==", "bodyText": "please use dependency management section for version numbers (like operator parent pom). Please fix the other version number in here while you are there (that slipped through reviews).", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1526#discussion_r402563977", "createdAt": "2020-04-02T19:37:09Z", "author": {"login": "ddsharpe"}, "path": "new-integration-tests/pom.xml", "diffHunk": "@@ -73,6 +75,12 @@\n             <version>2.10.3</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>io.swagger</groupId>\n+            <artifactId>swagger-annotations</artifactId>\n+            <version>1.6.0</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beb7644d1776ac3cf17e3de74e29f8b4a8bcf509"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjY4NjYwOnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/domain/ClusterStatus.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOTo0MjoyOFrOF_6uVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMTo0MTowN1rOGAR3TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2Njc0Mw==", "bodyText": "Do you want to use fluent API or not?  readyReplicas is, but setReplicas is not.  Please explain, maybe this is intended, and I am just confused.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1526#discussion_r402566743", "createdAt": "2020-04-02T19:42:28Z", "author": {"login": "ddsharpe"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/domain/ClusterStatus.java", "diffHunk": "@@ -0,0 +1,156 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.domain;\n+\n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n+\n+@ApiModel(description = \"ClusterStatus describes the current status of a specific WebLogic cluster.\")\n+public class ClusterStatus {\n+\n+  @ApiModelProperty(\"WebLogic cluster name. Required.\")\n+  private String clusterName;\n+\n+  @ApiModelProperty(value = \"The number of intended cluster members. Required.\", allowableValues = \"range[0,infinity]\")\n+  private Integer replicas;\n+\n+  @ApiModelProperty(value = \"The number of ready cluster members. Required.\", allowableValues = \"range[0,infinity]\")\n+  private Integer readyReplicas;\n+\n+  @ApiModelProperty(value = \"The maximum number of cluster members. Required.\", allowableValues = \"range[0,infinity]\")\n+  private Integer maximumReplicas;\n+\n+  @ApiModelProperty(value = \"The minimum number of cluster members.\", allowableValues = \"range[0,infinity]\")\n+  private Integer minimumReplicas;\n+\n+  @ApiModelProperty(value = \"The requested number of cluster members from the domain spec. \"\n+      + \"Cluster members will be started by the operator if this value is larger than zero.\",\n+      allowableValues = \"range[0,infinity]\")\n+  private Integer replicasGoal;\n+\n+  public ClusterStatus clusterName(String clusterName) {\n+    this.clusterName = clusterName;\n+    return this;\n+  }\n+\n+  public String getClusterName() {\n+    return clusterName;\n+  }\n+\n+  public void setClusterName(String clusterName) {\n+    this.clusterName = clusterName;\n+  }\n+\n+  public ClusterStatus replicas(Integer replicas) {\n+    this.replicas = replicas;\n+    return this;\n+  }\n+\n+  public Integer getReplicas() {\n+    return replicas;\n+  }\n+\n+  public void setReplicas(Integer replicas) {\n+    this.replicas = replicas;\n+  }\n+\n+  public ClusterStatus readyReplicas(Integer readyReplicas) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beb7644d1776ac3cf17e3de74e29f8b4a8bcf509"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk0NTg2OA==", "bodyText": "The types had both, so I kept them.  I'm happy to delete set*", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1526#discussion_r402945868", "createdAt": "2020-04-03T11:41:07Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/domain/ClusterStatus.java", "diffHunk": "@@ -0,0 +1,156 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.domain;\n+\n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n+\n+@ApiModel(description = \"ClusterStatus describes the current status of a specific WebLogic cluster.\")\n+public class ClusterStatus {\n+\n+  @ApiModelProperty(\"WebLogic cluster name. Required.\")\n+  private String clusterName;\n+\n+  @ApiModelProperty(value = \"The number of intended cluster members. Required.\", allowableValues = \"range[0,infinity]\")\n+  private Integer replicas;\n+\n+  @ApiModelProperty(value = \"The number of ready cluster members. Required.\", allowableValues = \"range[0,infinity]\")\n+  private Integer readyReplicas;\n+\n+  @ApiModelProperty(value = \"The maximum number of cluster members. Required.\", allowableValues = \"range[0,infinity]\")\n+  private Integer maximumReplicas;\n+\n+  @ApiModelProperty(value = \"The minimum number of cluster members.\", allowableValues = \"range[0,infinity]\")\n+  private Integer minimumReplicas;\n+\n+  @ApiModelProperty(value = \"The requested number of cluster members from the domain spec. \"\n+      + \"Cluster members will be started by the operator if this value is larger than zero.\",\n+      allowableValues = \"range[0,infinity]\")\n+  private Integer replicasGoal;\n+\n+  public ClusterStatus clusterName(String clusterName) {\n+    this.clusterName = clusterName;\n+    return this;\n+  }\n+\n+  public String getClusterName() {\n+    return clusterName;\n+  }\n+\n+  public void setClusterName(String clusterName) {\n+    this.clusterName = clusterName;\n+  }\n+\n+  public ClusterStatus replicas(Integer replicas) {\n+    this.replicas = replicas;\n+    return this;\n+  }\n+\n+  public Integer getReplicas() {\n+    return replicas;\n+  }\n+\n+  public void setReplicas(Integer replicas) {\n+    this.replicas = replicas;\n+  }\n+\n+  public ClusterStatus readyReplicas(Integer readyReplicas) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2Njc0Mw=="}, "originalCommit": {"oid": "beb7644d1776ac3cf17e3de74e29f8b4a8bcf509"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDA5MDAxOnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/domain/AdminServer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTozMTowNVrOGAakrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTozOToyOFrOGAa6yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4ODU1Ng==", "bodyText": "Sorry if I am off here, but I am new to the fluent API approach.  From what I read, I don't think they use \"get\" or \"set\" for fluent API.  For example, given a field \"pepper\", the getter for pepper is just pepper(), and the setter is pepper(T newValue).  So in this case, adminService(AdminService x), and adminService().", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1526#discussion_r403088556", "createdAt": "2020-04-03T15:31:05Z", "author": {"login": "ddsharpe"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/domain/AdminServer.java", "diffHunk": "@@ -0,0 +1,131 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.domain;\n+\n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n+\n+@ApiModel(description = \"AdminServer represents the operator configuration for the Administration Server.\")\n+public class AdminServer {\n+\n+  @ApiModelProperty(\n+      \"Configures which of the Administration Server's WebLogic admin channels should be exposed outside\"\n+          + \" the Kubernetes cluster via a node port service.\")\n+  private AdminService adminService;\n+\n+  @ApiModelProperty(\n+      \"The strategy for deciding whether to start a server. \"\n+          + \"Legal values are ALWAYS, NEVER, or IF_NEEDED.\")\n+  private String serverStartPolicy;\n+\n+  @ApiModelProperty(\"Configuration affecting server pods.\")\n+  private ServerPod serverPod;\n+\n+  @ApiModelProperty(\n+      \"Customization affecting ClusterIP Kubernetes services for WebLogic Server instances.\")\n+  private ServerService serverService;\n+\n+  @ApiModelProperty(\n+      \"The state in which the server is to be started. Use ADMIN if server should start \"\n+          + \"in the admin state. Defaults to RUNNING.\")\n+  private String serverStartState;\n+\n+  @ApiModelProperty(\n+      \"If present, every time this value is updated the operator will restart\"\n+          + \" the required servers.\")\n+  private String restartVersion;\n+\n+  public AdminServer adminService(AdminService adminService) {\n+    this.adminService = adminService;\n+    return this;\n+  }\n+\n+  public AdminService getAdminService() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0312a9f04547e76b32a0ab238db1581652a1031"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5NDIxNw==", "bodyText": "oh, I see... okay.  thanks.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1526#discussion_r403094217", "createdAt": "2020-04-03T15:39:28Z", "author": {"login": "rjeberhard"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/domain/AdminServer.java", "diffHunk": "@@ -0,0 +1,131 @@\n+// Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+package oracle.weblogic.domain;\n+\n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n+\n+@ApiModel(description = \"AdminServer represents the operator configuration for the Administration Server.\")\n+public class AdminServer {\n+\n+  @ApiModelProperty(\n+      \"Configures which of the Administration Server's WebLogic admin channels should be exposed outside\"\n+          + \" the Kubernetes cluster via a node port service.\")\n+  private AdminService adminService;\n+\n+  @ApiModelProperty(\n+      \"The strategy for deciding whether to start a server. \"\n+          + \"Legal values are ALWAYS, NEVER, or IF_NEEDED.\")\n+  private String serverStartPolicy;\n+\n+  @ApiModelProperty(\"Configuration affecting server pods.\")\n+  private ServerPod serverPod;\n+\n+  @ApiModelProperty(\n+      \"Customization affecting ClusterIP Kubernetes services for WebLogic Server instances.\")\n+  private ServerService serverService;\n+\n+  @ApiModelProperty(\n+      \"The state in which the server is to be started. Use ADMIN if server should start \"\n+          + \"in the admin state. Defaults to RUNNING.\")\n+  private String serverStartState;\n+\n+  @ApiModelProperty(\n+      \"If present, every time this value is updated the operator will restart\"\n+          + \" the required servers.\")\n+  private String restartVersion;\n+\n+  public AdminServer adminService(AdminService adminService) {\n+    this.adminService = adminService;\n+    return this;\n+  }\n+\n+  public AdminService getAdminService() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4ODU1Ng=="}, "originalCommit": {"oid": "c0312a9f04547e76b32a0ab238db1581652a1031"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4703, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}