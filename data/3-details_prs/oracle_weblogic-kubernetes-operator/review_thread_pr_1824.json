{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyMTg2MTUz", "number": 1824, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDoyODoxNlrOEQNvjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjoyNTo0NFrOETVMyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDM3ODM2OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/resources/wdt-models/model.monexp.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDoyODoxNlrOG0PybA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODowNToyNFrOG5ED0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQzNzgwNA==", "bodyText": "Remove commented code", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r457437804", "createdAt": "2020-07-20T14:28:16Z", "author": {"login": "anpanigr"}, "path": "new-integration-tests/src/test/resources/wdt-models/model.monexp.yaml", "diffHunk": "@@ -20,10 +20,20 @@ topology:\n   Server:\n     \"admin-server\":\n       ListenPort: 7001\n+ #   \"managed-server1\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "743dec63ac3784bc0e67cc835f01834d19662a21"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4ODUzMA==", "bodyText": "done", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r462488530", "createdAt": "2020-07-29T18:05:24Z", "author": {"login": "marinakog"}, "path": "new-integration-tests/src/test/resources/wdt-models/model.monexp.yaml", "diffHunk": "@@ -20,10 +20,20 @@ topology:\n   Server:\n     \"admin-server\":\n       ListenPort: 7001\n+ #   \"managed-server1\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQzNzgwNA=="}, "originalCommit": {"oid": "743dec63ac3784bc0e67cc835f01834d19662a21"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDUwNTQ4OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo0ODozMlrOG0Q8vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOTowOTo0N1rOG1wcww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ1NjgyOA==", "bodyText": "Do we need to hard-code the string 1.1.2  ?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r457456828", "createdAt": "2020-07-20T14:48:32Z", "author": {"login": "anpanigr"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "diffHunk": "@@ -1107,35 +1198,81 @@ private static void installMonitoringExporter() {\n     monitoringExporterEndToEndDir = monitoringTemp + \"/samples/kubernetes/end2end/\";\n     String monitoringExporterVersion = Optional.ofNullable(System.getenv(\"MONITORING_EXPORTER_VERSION\"))\n         .orElse(MONITORING_EXPORTER_VERSION);\n+\n+    //adding ability to build monitoring exporter if branch is not master or version number does not match latest 1.1.2\n+    boolean toBuildMonitoringExporter = (!monitoringExporterBranch.equalsIgnoreCase(\"1.1.2\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "743dec63ac3784bc0e67cc835f01834d19662a21"}, "originalPosition": 298}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAyMTUwNw==", "bodyText": "currently the test just use env var MONITORING_EXPORTER_VERSION to download version of exporter and run tests against it, https fix is not in released version yet, so I have added this condition to build it instead of downloading webapp based on value of release ( the latest now is 1.1.2) or value for branch, if not master it should build it.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r459021507", "createdAt": "2020-07-22T19:09:47Z", "author": {"login": "marinakog"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "diffHunk": "@@ -1107,35 +1198,81 @@ private static void installMonitoringExporter() {\n     monitoringExporterEndToEndDir = monitoringTemp + \"/samples/kubernetes/end2end/\";\n     String monitoringExporterVersion = Optional.ofNullable(System.getenv(\"MONITORING_EXPORTER_VERSION\"))\n         .orElse(MONITORING_EXPORTER_VERSION);\n+\n+    //adding ability to build monitoring exporter if branch is not master or version number does not match latest 1.1.2\n+    boolean toBuildMonitoringExporter = (!monitoringExporterBranch.equalsIgnoreCase(\"1.1.2\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ1NjgyOA=="}, "originalCommit": {"oid": "743dec63ac3784bc0e67cc835f01834d19662a21"}, "originalPosition": 298}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDUxOTgwOnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1MDo1MVrOG0RFWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOToxMDoxOFrOG1wd5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ1OTAzNA==", "bodyText": "Remove the commented code.  Do we need to set the SSL debug ?  javax.net.debug=all generate a tons of message in server logs", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r457459034", "createdAt": "2020-07-20T14:50:51Z", "author": {"login": "anpanigr"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "diffHunk": "@@ -1337,7 +1468,14 @@ private static void createDomainCrAndVerify(String adminSecretName,\n             .serverPod(new ServerPod()\n                 .addEnvItem(new V1EnvVar()\n                     .name(\"JAVA_OPTIONS\")\n-                    .value(\"-Dweblogic.StdoutDebugEnabled=false\"))\n+                    .value(\"-Dweblogic.StdoutDebugEnabled=false \"\n+                        + \"-Dweblogic.security.SSL.ignoreHostnameVerification=true -Dssl.debug=true \"\n+                        + \"-Djavax.net.debug=ssl:handshake \"\n+                        //+ \"-DUseSunHttpHandler=true -Dssl.debug=true \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "743dec63ac3784bc0e67cc835f01834d19662a21"}, "originalPosition": 465}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAyMTc5Ng==", "bodyText": "will remove, it was done for debugging purposes, now can remove", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r459021796", "createdAt": "2020-07-22T19:10:18Z", "author": {"login": "marinakog"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "diffHunk": "@@ -1337,7 +1468,14 @@ private static void createDomainCrAndVerify(String adminSecretName,\n             .serverPod(new ServerPod()\n                 .addEnvItem(new V1EnvVar()\n                     .name(\"JAVA_OPTIONS\")\n-                    .value(\"-Dweblogic.StdoutDebugEnabled=false\"))\n+                    .value(\"-Dweblogic.StdoutDebugEnabled=false \"\n+                        + \"-Dweblogic.security.SSL.ignoreHostnameVerification=true -Dssl.debug=true \"\n+                        + \"-Djavax.net.debug=ssl:handshake \"\n+                        //+ \"-DUseSunHttpHandler=true -Dssl.debug=true \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ1OTAzNA=="}, "originalCommit": {"oid": "743dec63ac3784bc0e67cc835f01834d19662a21"}, "originalPosition": 465}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDUzNjAyOnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1MzoxOFrOG0ROrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOToxMToyM1rOG1wgUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2MTQyMQ==", "bodyText": "Any other way to eliminate hard-coded 15s sleep", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r457461421", "createdAt": "2020-07-20T14:53:18Z", "author": {"login": "anpanigr"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "diffHunk": "@@ -1546,10 +1739,20 @@ private HtmlPage submitConfigureForm(\n     fileField.setContentType(\"multipart/form-data\");\n \n     // Now submit the form by clicking the button and get back the second page.\n-    HtmlPage page2 = button.click();\n-    assertNotNull(page2, \"can't reach page after submit\");\n-    assertFalse((page2.asText()).contains(\"Error 500--Internal Server Error\"),\n-            \"page returns Error 500--Internal Server Error\");\n+    HtmlPage page2 = null;\n+    try {\n+      page2 = button.click();\n+      assertNotNull(page2, \"can't reach page after submit\");\n+      assertFalse((page2.asText()).contains(\"Error 500--Internal Server Error\"),\n+          \"page returns Error 500--Internal Server Error\");\n+    } catch (ClassCastException ex) {\n+      logger.info(\" Can't generate html page, collecting the error \");\n+      TextPage page3 = button.click();\n+      assertNotNull(page3, \"can't reach page after submit\");\n+      assertTrue(page3.getContent().contains(\"Unable to contact the REST API\"),\n+          \"submit does not return html page, here is received page \"\n+          + page3.getContent());\n+    }\n     // wait time to update configuration\n     Thread.sleep(15 * 1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "743dec63ac3784bc0e67cc835f01834d19662a21"}, "originalPosition": 583}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAyMjQxOA==", "bodyText": "no, prometheus is configured to push metrics every 10 secs, so we need to wait 15 until new metric will be pushed", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r459022418", "createdAt": "2020-07-22T19:11:23Z", "author": {"login": "marinakog"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "diffHunk": "@@ -1546,10 +1739,20 @@ private HtmlPage submitConfigureForm(\n     fileField.setContentType(\"multipart/form-data\");\n \n     // Now submit the form by clicking the button and get back the second page.\n-    HtmlPage page2 = button.click();\n-    assertNotNull(page2, \"can't reach page after submit\");\n-    assertFalse((page2.asText()).contains(\"Error 500--Internal Server Error\"),\n-            \"page returns Error 500--Internal Server Error\");\n+    HtmlPage page2 = null;\n+    try {\n+      page2 = button.click();\n+      assertNotNull(page2, \"can't reach page after submit\");\n+      assertFalse((page2.asText()).contains(\"Error 500--Internal Server Error\"),\n+          \"page returns Error 500--Internal Server Error\");\n+    } catch (ClassCastException ex) {\n+      logger.info(\" Can't generate html page, collecting the error \");\n+      TextPage page3 = button.click();\n+      assertNotNull(page3, \"can't reach page after submit\");\n+      assertTrue(page3.getContent().contains(\"Unable to contact the REST API\"),\n+          \"submit does not return html page, here is received page \"\n+          + page3.getContent());\n+    }\n     // wait time to update configuration\n     Thread.sleep(15 * 1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2MTQyMQ=="}, "originalCommit": {"oid": "743dec63ac3784bc0e67cc835f01834d19662a21"}, "originalPosition": 583}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDU0MDQ3OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1NDowM1rOG0RRPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1NDowM1rOG0RRPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2MjA3Nw==", "bodyText": "eliminate  hard-coded sleep for 20s", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r457462077", "createdAt": "2020-07-20T14:54:03Z", "author": {"login": "anpanigr"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "diffHunk": "@@ -1748,6 +1953,24 @@ private void replaceMetricsNameSnakeCaseFalseConfiguration() throws Exception {\n     checkMetricsViaPrometheus(searchKey, \"sessmigr\");\n   }\n \n+  /**\n+   * Try to replace monitoring exporter configuration with configuration file with\n+   * no restPort value.\n+   *\n+   * @throws Exception if failed to apply configuration or check the expected values.\n+   */\n+  private void replaceMetricsNoRestPortConfiguration() throws Exception {\n+    HtmlPage page =\n+        submitConfigureForm(exporterUrl, \"replace\", RESOURCE_DIR + \"/exporter/norestport.yaml\");\n+    assertNotNull(page);\n+    assertFalse(page.asText().contains(\"restPort\"));\n+    Thread.sleep(20 * 1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "743dec63ac3784bc0e67cc835f01834d19662a21"}, "originalPosition": 626}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDU1ODcwOnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/resources/exporter/norestport.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1Njo1OVrOG0Rb5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOToxMjoxMlrOG1wh8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2NDgwNw==", "bodyText": "Hope the hard-coded port will not block the parallel execution in future", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r457464807", "createdAt": "2020-07-20T14:56:59Z", "author": {"login": "anpanigr"}, "path": "new-integration-tests/src/test/resources/exporter/norestport.yaml", "diffHunk": "@@ -0,0 +1,11 @@\n+# Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+query_sync:\n+  url: http://coordinator:8999/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "743dec63ac3784bc0e67cc835f01834d19662a21"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAyMjgzNA==", "bodyText": "no it is internal , running in same ns as domain", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r459022834", "createdAt": "2020-07-22T19:12:12Z", "author": {"login": "marinakog"}, "path": "new-integration-tests/src/test/resources/exporter/norestport.yaml", "diffHunk": "@@ -0,0 +1,11 @@\n+# Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+query_sync:\n+  url: http://coordinator:8999/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2NDgwNw=="}, "originalCommit": {"oid": "743dec63ac3784bc0e67cc835f01834d19662a21"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODE4MjMxOnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjo0NTozM1rOG2S8IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMDoyNjoxN1rOG28w6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4NjU5Mg==", "bodyText": "You can use oracle.weblogic.kubernetes.utils.WLSTUtils.executeWLSTScript( .. ) for this.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r459586592", "createdAt": "2020-07-23T16:45:33Z", "author": {"login": "sankarpn"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "diffHunk": "@@ -1839,4 +2062,57 @@ private void changeConfigEmptyPass() throws Exception {\n             ADMIN_USERNAME_DEFAULT,\n             \"\");\n   }\n+\n+  private boolean changeListenPort(String domainUid, String domainNS, String setListenPortEnabled) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "743dec63ac3784bc0e67cc835f01834d19662a21"}, "originalPosition": 641}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI3MTg0OA==", "bodyText": "I used model in image domain with no t3 config, so it requires extra imp also when will add support for OKE it would be no issue to convert considering that oke does not provide public ip", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r460271848", "createdAt": "2020-07-24T20:26:17Z", "author": {"login": "marinakog"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "diffHunk": "@@ -1839,4 +2062,57 @@ private void changeConfigEmptyPass() throws Exception {\n             ADMIN_USERNAME_DEFAULT,\n             \"\");\n   }\n+\n+  private boolean changeListenPort(String domainUid, String domainNS, String setListenPortEnabled) throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4NjU5Mg=="}, "originalCommit": {"oid": "743dec63ac3784bc0e67cc835f01834d19662a21"}, "originalPosition": 641}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjM0NDgzOnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzo1MDozN1rOG45ZQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMjowNDo1NFrOG5L44w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMxMzc5Mw==", "bodyText": "cun-n-paste error \" logger.info(\"Get a unique namespace for domain3\"); '  is repeated twice", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r462313793", "createdAt": "2020-07-29T13:50:37Z", "author": {"login": "anpanigr"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "diffHunk": "@@ -247,37 +260,35 @@ public static void initAll(@Namespaces(6) List<String> namespaces) {\n     assertNotNull(namespaces.get(5), \"Namespace list is null\");\n     final String nginxNamespace = namespaces.get(5);\n \n+    logger.info(\"Get a unique namespace for domain3\");\n+    assertNotNull(namespaces.get(6), \"Namespace list is null\");\n+    domain3Namespace = namespaces.get(6);\n+\n+    logger.info(\"Get a unique namespace for domain3\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f417a52e9a3693b6c9c4064bbc9122358892bca"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYxNjgwMw==", "bodyText": "corrected", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r462616803", "createdAt": "2020-07-29T22:04:54Z", "author": {"login": "marinakog"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMonitoringExporter.java", "diffHunk": "@@ -247,37 +260,35 @@ public static void initAll(@Namespaces(6) List<String> namespaces) {\n     assertNotNull(namespaces.get(5), \"Namespace list is null\");\n     final String nginxNamespace = namespaces.get(5);\n \n+    logger.info(\"Get a unique namespace for domain3\");\n+    assertNotNull(namespaces.get(6), \"Namespace list is null\");\n+    domain3Namespace = namespaces.get(6);\n+\n+    logger.info(\"Get a unique namespace for domain3\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMxMzc5Mw=="}, "originalCommit": {"oid": "3f417a52e9a3693b6c9c4064bbc9122358892bca"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzA1MDA0OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/resources/python-scripts/changeListenPort.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjoyMzo1NFrOG5ATTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTozMjozMlrOG5HFjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyNjk1OQ==", "bodyText": "Are the above imports needed?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r462426959", "createdAt": "2020-07-29T16:23:54Z", "author": {"login": "sankarpn"}, "path": "new-integration-tests/src/test/resources/python-scripts/changeListenPort.py", "diffHunk": "@@ -0,0 +1,62 @@\n+# Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+import sys\n+import os\n+import traceback\n+\n+from java.util import Base64\n+from org.apache.commons.io import FileUtils\n+from java.io import File\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d08f33dfe6a5b2baa0efa0584eae1212b5d029d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzODEyNg==", "bodyText": "cleaned", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r462538126", "createdAt": "2020-07-29T19:32:32Z", "author": {"login": "marinakog"}, "path": "new-integration-tests/src/test/resources/python-scripts/changeListenPort.py", "diffHunk": "@@ -0,0 +1,62 @@\n+# Copyright (c) 2020, Oracle Corporation and/or its affiliates.\n+# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.\n+\n+import sys\n+import os\n+import traceback\n+\n+from java.util import Base64\n+from org.apache.commons.io import FileUtils\n+from java.io import File\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyNjk1OQ=="}, "originalCommit": {"oid": "9d08f33dfe6a5b2baa0efa0584eae1212b5d029d"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzA1NzM2OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjoyNTo0NFrOG5AX8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTozMjoyOVrOG5HFbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyODE0NA==", "bodyText": "import io.kubernetes.client.openapi.models.V1SecretList", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r462428144", "createdAt": "2020-07-29T16:25:44Z", "author": {"login": "sankarpn"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -1502,8 +1503,20 @@ public static HelmParams installAndVerifyGrafana(String grafanaReleaseName,\n     GrafanaParams grafanaParams = new GrafanaParams()\n         .helmParams(grafanaHelmParams)\n         .nodePort(grafanaNodePort);\n-    //create grafana secret\n-    createSecretWithUsernamePassword(\"grafana-secret\", grafanaNamespace, \"admin\", \"12345678\");\n+    boolean secretExists = false;\n+    io.kubernetes.client.openapi.models.V1SecretList listSecrets = listSecrets(grafanaNamespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d08f33dfe6a5b2baa0efa0584eae1212b5d029d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzODA5Mg==", "bodyText": "corrected", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1824#discussion_r462538092", "createdAt": "2020-07-29T19:32:29Z", "author": {"login": "marinakog"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonTestUtils.java", "diffHunk": "@@ -1502,8 +1503,20 @@ public static HelmParams installAndVerifyGrafana(String grafanaReleaseName,\n     GrafanaParams grafanaParams = new GrafanaParams()\n         .helmParams(grafanaHelmParams)\n         .nodePort(grafanaNodePort);\n-    //create grafana secret\n-    createSecretWithUsernamePassword(\"grafana-secret\", grafanaNamespace, \"admin\", \"12345678\");\n+    boolean secretExists = false;\n+    io.kubernetes.client.openapi.models.V1SecretList listSecrets = listSecrets(grafanaNamespace);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyODE0NA=="}, "originalCommit": {"oid": "9d08f33dfe6a5b2baa0efa0584eae1212b5d029d"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4125, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}