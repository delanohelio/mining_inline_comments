{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NTM0ODg5", "number": 1685, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNToxNDowNVrOEAjg0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNToxNDowNVrOEAjg0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDE3Mjk3OnYy", "diffSide": "RIGHT", "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Kubernetes.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNToxNDowNVrOGb6DCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzo0MjoyNlrOGb_6vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkxNTc4Nw==", "bodyText": "Is this method still used any where?  Now we have verifyRollingRestartOccurred() method that performs more thorough checks for rolling-restart, and all tests have been updated to use it.  And verifyRollingRestartOccurred does not seem to use this method. So my guess is that this method is not longer needed.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1685#discussion_r431915787", "createdAt": "2020-05-28T15:14:05Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Kubernetes.java", "diffHunk": "@@ -571,16 +571,16 @@ public static boolean adminServerReady(String domainUid, String namespace) {\n    * @param domainUid the label the pod is decorated with\n    * @param namespace in which the pod is running\n    * @param timestamp the initial podCreationTimestamp\n-   * @return true if the pod's new timestamp is later than the initial PodCreationTimestamp\n+   * @return true if the pod's creation timestamp is later than the initial PodCreationTimestamp\n    * @throws ApiException when query fails\n    */\n   public static boolean isPodRestarted(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b81a4cef4f8d56d82db3ba18839451ebcad81f47"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk1NTIzMw==", "bodyText": "Loos like it is still used in the following\nCommonTestUtils.scaleAndVerifyCluster(....)\nItUsabilityOperatorHelmChart.java", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1685#discussion_r431955233", "createdAt": "2020-05-28T16:10:11Z", "author": {"login": "sankarpn"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Kubernetes.java", "diffHunk": "@@ -571,16 +571,16 @@ public static boolean adminServerReady(String domainUid, String namespace) {\n    * @param domainUid the label the pod is decorated with\n    * @param namespace in which the pod is running\n    * @param timestamp the initial podCreationTimestamp\n-   * @return true if the pod's new timestamp is later than the initial PodCreationTimestamp\n+   * @return true if the pod's creation timestamp is later than the initial PodCreationTimestamp\n    * @throws ApiException when query fails\n    */\n   public static boolean isPodRestarted(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkxNTc4Nw=="}, "originalCommit": {"oid": "b81a4cef4f8d56d82db3ba18839451ebcad81f47"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3NzAyMg==", "bodyText": "Hmm, it looks like it is only called in CommonTestUtils.checkPodRestarted(), which is not used anywhere. It you prefer, we could clean that up in a different PR.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1685#discussion_r431977022", "createdAt": "2020-05-28T16:43:22Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Kubernetes.java", "diffHunk": "@@ -571,16 +571,16 @@ public static boolean adminServerReady(String domainUid, String namespace) {\n    * @param domainUid the label the pod is decorated with\n    * @param namespace in which the pod is running\n    * @param timestamp the initial podCreationTimestamp\n-   * @return true if the pod's new timestamp is later than the initial PodCreationTimestamp\n+   * @return true if the pod's creation timestamp is later than the initial PodCreationTimestamp\n    * @throws ApiException when query fails\n    */\n   public static boolean isPodRestarted(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkxNTc4Nw=="}, "originalCommit": {"oid": "b81a4cef4f8d56d82db3ba18839451ebcad81f47"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk4MjA1MQ==", "bodyText": "It is still used in Domain.podStateNotChanged.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1685#discussion_r431982051", "createdAt": "2020-05-28T16:51:52Z", "author": {"login": "xiancao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Kubernetes.java", "diffHunk": "@@ -571,16 +571,16 @@ public static boolean adminServerReady(String domainUid, String namespace) {\n    * @param domainUid the label the pod is decorated with\n    * @param namespace in which the pod is running\n    * @param timestamp the initial podCreationTimestamp\n-   * @return true if the pod's new timestamp is later than the initial PodCreationTimestamp\n+   * @return true if the pod's creation timestamp is later than the initial PodCreationTimestamp\n    * @throws ApiException when query fails\n    */\n   public static boolean isPodRestarted(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkxNTc4Nw=="}, "originalCommit": {"oid": "b81a4cef4f8d56d82db3ba18839451ebcad81f47"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAxMTk2NA==", "bodyText": "I see. somehow my search missed that one.  thanks.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1685#discussion_r432011964", "createdAt": "2020-05-28T17:42:26Z", "author": {"login": "doxiao"}, "path": "new-integration-tests/src/test/java/oracle/weblogic/kubernetes/assertions/impl/Kubernetes.java", "diffHunk": "@@ -571,16 +571,16 @@ public static boolean adminServerReady(String domainUid, String namespace) {\n    * @param domainUid the label the pod is decorated with\n    * @param namespace in which the pod is running\n    * @param timestamp the initial podCreationTimestamp\n-   * @return true if the pod's new timestamp is later than the initial PodCreationTimestamp\n+   * @return true if the pod's creation timestamp is later than the initial PodCreationTimestamp\n    * @throws ApiException when query fails\n    */\n   public static boolean isPodRestarted(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkxNTc4Nw=="}, "originalCommit": {"oid": "b81a4cef4f8d56d82db3ba18839451ebcad81f47"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4264, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}