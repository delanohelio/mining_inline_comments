{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxOTA1MDAz", "number": 1941, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzoyODoxNFrOEmtGzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzoyODoxNFrOEmtGzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDIwMzY3OnYy", "diffSide": "RIGHT", "path": "operator/src/test/java/oracle/kubernetes/operator/steps/ManagedServerUpIteratorStepTest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzoyODoxNFrOHW5E-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMTo1ODoxMVrOHXHCTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2NTg4Mg==", "bodyText": "Since the issue we are fixing here involves addin 2 non-clustered managed servers, should we add a test case where 2 non-clustered managed servers are added and make sure that both will be started?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1941#discussion_r493765882", "createdAt": "2020-09-23T17:28:14Z", "author": {"login": "alai8"}, "path": "operator/src/test/java/oracle/kubernetes/operator/steps/ManagedServerUpIteratorStepTest.java", "diffHunk": "@@ -293,6 +293,27 @@ public void maxClusterConcurrentStartup_doesNotApplyToNonClusteredServers() {\n     assertThat(MS3 + \" pod\", domainPresenceInfo.getServerPod(MS3), notNullValue());\n   }\n \n+  @Test\n+  public void whenClusteredServersAlreadyScheduled_canStartNonclusteredServer() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7955cdcf119e0d2a9bf5477bea791e1b24ac385e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4NDU2Mg==", "bodyText": "I believe that maxClusterConcurrentStartup_doesNotApplyToNonClusteredServers covers that case.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1941#discussion_r493784562", "createdAt": "2020-09-23T17:59:15Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/steps/ManagedServerUpIteratorStepTest.java", "diffHunk": "@@ -293,6 +293,27 @@ public void maxClusterConcurrentStartup_doesNotApplyToNonClusteredServers() {\n     assertThat(MS3 + \" pod\", domainPresenceInfo.getServerPod(MS3), notNullValue());\n   }\n \n+  @Test\n+  public void whenClusteredServersAlreadyScheduled_canStartNonclusteredServer() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2NTg4Mg=="}, "originalCommit": {"oid": "7955cdcf119e0d2a9bf5477bea791e1b24ac385e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5NTUzOA==", "bodyText": "that test doesn't seem to verify MS4 will be started.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1941#discussion_r493795538", "createdAt": "2020-09-23T18:17:55Z", "author": {"login": "alai8"}, "path": "operator/src/test/java/oracle/kubernetes/operator/steps/ManagedServerUpIteratorStepTest.java", "diffHunk": "@@ -293,6 +293,27 @@ public void maxClusterConcurrentStartup_doesNotApplyToNonClusteredServers() {\n     assertThat(MS3 + \" pod\", domainPresenceInfo.getServerPod(MS3), notNullValue());\n   }\n \n+  @Test\n+  public void whenClusteredServersAlreadyScheduled_canStartNonclusteredServer() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2NTg4Mg=="}, "originalCommit": {"oid": "7955cdcf119e0d2a9bf5477bea791e1b24ac385e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg5NTI2Nw==", "bodyText": "You're correct. I am going to do some cleanup of the tests in that class. There is more going on than is obvious.", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1941#discussion_r493895267", "createdAt": "2020-09-23T21:06:26Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/steps/ManagedServerUpIteratorStepTest.java", "diffHunk": "@@ -293,6 +293,27 @@ public void maxClusterConcurrentStartup_doesNotApplyToNonClusteredServers() {\n     assertThat(MS3 + \" pod\", domainPresenceInfo.getServerPod(MS3), notNullValue());\n   }\n \n+  @Test\n+  public void whenClusteredServersAlreadyScheduled_canStartNonclusteredServer() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2NTg4Mg=="}, "originalCommit": {"oid": "7955cdcf119e0d2a9bf5477bea791e1b24ac385e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk5NDU3Mg==", "bodyText": "The revised test is nonClusteredServers_ignoreConcurrencyLimit", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/1941#discussion_r493994572", "createdAt": "2020-09-24T01:58:11Z", "author": {"login": "russgold"}, "path": "operator/src/test/java/oracle/kubernetes/operator/steps/ManagedServerUpIteratorStepTest.java", "diffHunk": "@@ -293,6 +293,27 @@ public void maxClusterConcurrentStartup_doesNotApplyToNonClusteredServers() {\n     assertThat(MS3 + \" pod\", domainPresenceInfo.getServerPod(MS3), notNullValue());\n   }\n \n+  @Test\n+  public void whenClusteredServersAlreadyScheduled_canStartNonclusteredServer() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2NTg4Mg=="}, "originalCommit": {"oid": "7955cdcf119e0d2a9bf5477bea791e1b24ac385e"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3996, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}