{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNDg3NjY2", "number": 2107, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxODo0MjoxMFrOFG2esQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxODo0Mjo0MFrOFG2fng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNzI4MzY5OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonPatchTestUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxODo0MjoxMFrOIIDj_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMDowNDozMFrOIIGs0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMxNzg4NA==", "bodyText": "Should the code in oracle.weblogic.kubernetes.actions.impl.Operator#patchReplicas() be updated to use this new method?", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2107#discussion_r545317884", "createdAt": "2020-12-17T18:42:10Z", "author": {"login": "alai8"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonPatchTestUtils.java", "diffHunk": "@@ -198,4 +198,27 @@ public static boolean patchDomainResource(String domainUid, String domainNamespa\n     V1Patch patch = new V1Patch(new String(patchStr));\n     return patchDomainCustomResource(domainUid, domainNamespace, patch, V1Patch.PATCH_FORMAT_JSON_PATCH);\n   }\n+\n+  /**\n+   * Patch replicas at spec level.\n+   *\n+   * @param domainUid unique domain identifier\n+   * @param domainNamespace the Kubernetes namespace where the domain is\n+   * @param replicaCount the replica count to patch with\n+   * @return true if successful, false otherwise\n+   */\n+  public static boolean patchReplicaCountAtSpecLevel(String domainUid, String domainNamespace, int replicaCount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5886aace97c0e5d136f77d3ff4e24076a81524ff"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTM2OTI5OA==", "bodyText": "Operator#patchReplicas() is for operator and the one here is for domain CR. I can change the method name to patchDomainResourceWithNewReplicaCountAtSpecLevel().", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2107#discussion_r545369298", "createdAt": "2020-12-17T20:04:30Z", "author": {"login": "vanajamukkara"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonPatchTestUtils.java", "diffHunk": "@@ -198,4 +198,27 @@ public static boolean patchDomainResource(String domainUid, String domainNamespa\n     V1Patch patch = new V1Patch(new String(patchStr));\n     return patchDomainCustomResource(domainUid, domainNamespace, patch, V1Patch.PATCH_FORMAT_JSON_PATCH);\n   }\n+\n+  /**\n+   * Patch replicas at spec level.\n+   *\n+   * @param domainUid unique domain identifier\n+   * @param domainNamespace the Kubernetes namespace where the domain is\n+   * @param replicaCount the replica count to patch with\n+   * @return true if successful, false otherwise\n+   */\n+  public static boolean patchReplicaCountAtSpecLevel(String domainUid, String domainNamespace, int replicaCount) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMxNzg4NA=="}, "originalCommit": {"oid": "5886aace97c0e5d136f77d3ff4e24076a81524ff"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNzI4NjA2OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonPatchTestUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxODo0Mjo0MFrOIIDlPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxODo0Mjo0MFrOIIDlPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMxODIwNQ==", "bodyText": "Consider using V1Patch.PATCH_FORMAT_JSON_PATCH constant", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2107#discussion_r545318205", "createdAt": "2020-12-17T18:42:40Z", "author": {"login": "alai8"}, "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/utils/CommonPatchTestUtils.java", "diffHunk": "@@ -198,4 +198,27 @@ public static boolean patchDomainResource(String domainUid, String domainNamespa\n     V1Patch patch = new V1Patch(new String(patchStr));\n     return patchDomainCustomResource(domainUid, domainNamespace, patch, V1Patch.PATCH_FORMAT_JSON_PATCH);\n   }\n+\n+  /**\n+   * Patch replicas at spec level.\n+   *\n+   * @param domainUid unique domain identifier\n+   * @param domainNamespace the Kubernetes namespace where the domain is\n+   * @param replicaCount the replica count to patch with\n+   * @return true if successful, false otherwise\n+   */\n+  public static boolean patchReplicaCountAtSpecLevel(String domainUid, String domainNamespace, int replicaCount) {\n+    LoggingFacade logger = getLogger();\n+    StringBuffer patchStr = new StringBuffer(\"[{\");\n+    patchStr.append(\" \\\"op\\\": \\\"replace\\\",\")\n+        .append(\" \\\"path\\\": \\\"/spec/replicas\\\",\")\n+        .append(\" \\\"value\\\": \")\n+        .append(replicaCount)\n+        .append(\" }]\");\n+    logger.info(\"Replicas patch string: {0}\", patchStr);\n+\n+    V1Patch patch = new V1Patch(new String(patchStr));\n+    return patchDomainCustomResource(domainUid, domainNamespace, patch, \"application/json-patch+json\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5886aace97c0e5d136f77d3ff4e24076a81524ff"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3833, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}