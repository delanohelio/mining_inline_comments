{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNTI3NDgy", "number": 382, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDo0Mzo0OFrODqUpyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODozNzozMlrODril7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzA1MTYzOnYy", "diffSide": "RIGHT", "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/commons/xstream/XStreamUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDo0Mzo0OFrOF5_w_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjoxMjoyN1rOF6CqRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1Nzg4Nw==", "bodyText": "I think we should not make another copy. We have already one in drools-core, be exact org.drools.core.util.XStreamUtils.\nOne more reason, most copied methods are deprecated, some also with linked CVE. I think we need to start think of some utils module used both by kogito and non kogito world..", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396357887", "createdAt": "2020-03-23T10:43:48Z", "author": {"login": "jomarko"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/commons/xstream/XStreamUtils.java", "diffHunk": "@@ -0,0 +1,252 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.soup.commons.xstream;\n+\n+import java.util.function.Function;\n+\n+import com.thoughtworks.xstream.XStream;\n+import com.thoughtworks.xstream.annotations.XStreamAlias;\n+import com.thoughtworks.xstream.converters.reflection.ReflectionProvider;\n+import com.thoughtworks.xstream.core.ClassLoaderReference;\n+import com.thoughtworks.xstream.io.HierarchicalStreamDriver;\n+import com.thoughtworks.xstream.mapper.MapperWrapper;\n+import com.thoughtworks.xstream.security.AnyTypePermission;\n+import com.thoughtworks.xstream.security.WildcardTypePermission;\n+\n+import static com.thoughtworks.xstream.XStream.setupDefaultSecurity;\n+\n+/**\n+ * Copied from kie-soup to avoid the dependency\n+ */\n+public class XStreamUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTMxOQ==", "bodyText": "The reason why I copied it instead of use the already existing copy of XStreamUtils is because of the different package: it is used by ScenarioSimulationXMLPersistence (that is in drools repo). I plan in another ticket to update ScenarioSimulationXMLPersistence to abstract over XStream instance and try to get rid of this clone but it takes time because I need to wait for a community release of 7 and then I can use it here.\nBtw I have removed all the methods I'm not using.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405319", "createdAt": "2020-03-23T12:12:27Z", "author": {"login": "danielezonca"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/commons/xstream/XStreamUtils.java", "diffHunk": "@@ -0,0 +1,252 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.soup.commons.xstream;\n+\n+import java.util.function.Function;\n+\n+import com.thoughtworks.xstream.XStream;\n+import com.thoughtworks.xstream.annotations.XStreamAlias;\n+import com.thoughtworks.xstream.converters.reflection.ReflectionProvider;\n+import com.thoughtworks.xstream.core.ClassLoaderReference;\n+import com.thoughtworks.xstream.io.HierarchicalStreamDriver;\n+import com.thoughtworks.xstream.mapper.MapperWrapper;\n+import com.thoughtworks.xstream.security.AnyTypePermission;\n+import com.thoughtworks.xstream.security.WildcardTypePermission;\n+\n+import static com.thoughtworks.xstream.XStream.setupDefaultSecurity;\n+\n+/**\n+ * Copied from kie-soup to avoid the dependency\n+ */\n+public class XStreamUtils {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1Nzg4Nw=="}, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzA1NDYxOnYy", "diffSide": "RIGHT", "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/HasImports.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDo0NDo0NFrOF5_y5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjoxMjoyMlrOF6CqFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODM3NQ==", "bodyText": "If we won't introduce general module, we should update year", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396358375", "createdAt": "2020-03-23T10:44:44Z", "author": {"login": "jomarko"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/HasImports.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTI2OQ==", "bodyText": "Done", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405269", "createdAt": "2020-03-23T12:12:22Z", "author": {"login": "danielezonca"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/HasImports.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODM3NQ=="}, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzA1NTQxOnYy", "diffSide": "RIGHT", "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Import.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDo0NDo1N1rOF5_zYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjoxMjoxOVrOF6CqCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODQ5OA==", "bodyText": "same as above", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396358498", "createdAt": "2020-03-23T10:44:57Z", "author": {"login": "jomarko"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Import.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTI1Ng==", "bodyText": "Done", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405256", "createdAt": "2020-03-23T12:12:19Z", "author": {"login": "danielezonca"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Import.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODQ5OA=="}, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzA1NzAzOnYy", "diffSide": "RIGHT", "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Import.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDo0NToyNlrOF5_0dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjoxMjoxNlrOF6Cp4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODc3Mw==", "bodyText": "return Objects.equals(type, anImport.type)", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396358773", "createdAt": "2020-03-23T10:45:26Z", "author": {"login": "jomarko"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Import.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.kie.soup.project.datamodel.imports;\n+\n+/**\n+ * Copied from kie-soup to avoid the dependency\n+ */\n+public class Import {\n+\n+    private String type;\n+\n+    public Import() {\n+\n+    }\n+\n+    public Import(String t) {\n+        this.type = t;\n+    }\n+\n+    public Import(Class<?> clazz) {\n+        this(clazz.getName());\n+    }\n+\n+    public String getType() {\n+        return this.type;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        // Must do instanceof check because there is a subtype of this class in drools-workbench-models-datamodel-api\n+        if (!(o instanceof Import)) {\n+            return false;\n+        }\n+\n+        Import anImport = (Import) o;\n+\n+        if (type != null ? !type.equals(anImport.type) : anImport.type != null) {\n+            return false;\n+        }\n+\n+        return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTIxNg==", "bodyText": "Done", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405216", "createdAt": "2020-03-23T12:12:16Z", "author": {"login": "danielezonca"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Import.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.kie.soup.project.datamodel.imports;\n+\n+/**\n+ * Copied from kie-soup to avoid the dependency\n+ */\n+public class Import {\n+\n+    private String type;\n+\n+    public Import() {\n+\n+    }\n+\n+    public Import(String t) {\n+        this.type = t;\n+    }\n+\n+    public Import(Class<?> clazz) {\n+        this(clazz.getName());\n+    }\n+\n+    public String getType() {\n+        return this.type;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        // Must do instanceof check because there is a subtype of this class in drools-workbench-models-datamodel-api\n+        if (!(o instanceof Import)) {\n+            return false;\n+        }\n+\n+        Import anImport = (Import) o;\n+\n+        if (type != null ? !type.equals(anImport.type) : anImport.type != null) {\n+            return false;\n+        }\n+\n+        return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODc3Mw=="}, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzA1Nzk3OnYy", "diffSide": "RIGHT", "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Imports.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDo0NTozOVrOF5_1DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjoxMjoxMVrOF6Cpug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODkyNQ==", "bodyText": "year", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396358925", "createdAt": "2020-03-23T10:45:39Z", "author": {"login": "jomarko"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Imports.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTE3OA==", "bodyText": "Done", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405178", "createdAt": "2020-03-23T12:12:11Z", "author": {"login": "danielezonca"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Imports.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1ODkyNQ=="}, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzA1OTcxOnYy", "diffSide": "RIGHT", "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Imports.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDo0NjowOVrOF5_2NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjoxMjowOFrOF6Cpmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1OTIyMA==", "bodyText": "@OverRide", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396359220", "createdAt": "2020-03-23T10:46:09Z", "author": {"login": "jomarko"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Imports.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.kie.soup.project.datamodel.imports;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Copied from kie-soup to avoid the dependency\n+ */\n+public class Imports {\n+\n+    private ArrayList<Import> imports = new ArrayList<Import>();\n+\n+    public Imports() {\n+    }\n+\n+    public Imports(final List<Import> imports) {\n+        this.imports = new ArrayList<>(imports);\n+    }\n+\n+    public List<Import> getImports() {\n+        return imports;\n+    }\n+\n+    public Set<String> getImportStrings() {\n+        Set<String> strings = new HashSet<>();\n+\n+        for (Import item : imports) {\n+            strings.add(item.getType());\n+        }\n+\n+        return strings;\n+    }\n+\n+    public String toString() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTE0Nw==", "bodyText": "Done", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405147", "createdAt": "2020-03-23T12:12:08Z", "author": {"login": "danielezonca"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Imports.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.kie.soup.project.datamodel.imports;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Copied from kie-soup to avoid the dependency\n+ */\n+public class Imports {\n+\n+    private ArrayList<Import> imports = new ArrayList<Import>();\n+\n+    public Imports() {\n+    }\n+\n+    public Imports(final List<Import> imports) {\n+        this.imports = new ArrayList<>(imports);\n+    }\n+\n+    public List<Import> getImports() {\n+        return imports;\n+    }\n+\n+    public Set<String> getImportStrings() {\n+        Set<String> strings = new HashSet<>();\n+\n+        for (Import item : imports) {\n+            strings.add(item.getType());\n+        }\n+\n+        return strings;\n+    }\n+\n+    public String toString() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1OTIyMA=="}, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzA2MjAxOnYy", "diffSide": "RIGHT", "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Imports.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDo0Njo1MVrOF5_3sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjoxMjowM1rOF6Cpdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1OTYwMg==", "bodyText": "Objects.equals", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396359602", "createdAt": "2020-03-23T10:46:51Z", "author": {"login": "jomarko"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Imports.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.kie.soup.project.datamodel.imports;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Copied from kie-soup to avoid the dependency\n+ */\n+public class Imports {\n+\n+    private ArrayList<Import> imports = new ArrayList<Import>();\n+\n+    public Imports() {\n+    }\n+\n+    public Imports(final List<Import> imports) {\n+        this.imports = new ArrayList<>(imports);\n+    }\n+\n+    public List<Import> getImports() {\n+        return imports;\n+    }\n+\n+    public Set<String> getImportStrings() {\n+        Set<String> strings = new HashSet<>();\n+\n+        for (Import item : imports) {\n+            strings.add(item.getType());\n+        }\n+\n+        return strings;\n+    }\n+\n+    public String toString() {\n+        final StringBuilder sb = new StringBuilder();\n+        for (final Import i : imports) {\n+            sb.append(\"import \").append(i.getType()).append(\";\\n\");\n+        }\n+\n+        return sb.toString();\n+    }\n+\n+    public void addImport(final Import item) {\n+        imports.add(item);\n+    }\n+\n+    public void removeImport(final Import item) {\n+        imports.remove(item);\n+    }\n+\n+    public boolean contains(final Import item) {\n+        return imports.contains(item);\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        Imports imports1 = (Imports) o;\n+\n+        if (imports != null ? !imports.equals(imports1.imports) : imports1.imports != null) {\n+            return false;\n+        }\n+\n+        return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTExMA==", "bodyText": "Done", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405110", "createdAt": "2020-03-23T12:12:03Z", "author": {"login": "danielezonca"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kie/soup/project/datamodel/imports/Imports.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.kie.soup.project.datamodel.imports;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Copied from kie-soup to avoid the dependency\n+ */\n+public class Imports {\n+\n+    private ArrayList<Import> imports = new ArrayList<Import>();\n+\n+    public Imports() {\n+    }\n+\n+    public Imports(final List<Import> imports) {\n+        this.imports = new ArrayList<>(imports);\n+    }\n+\n+    public List<Import> getImports() {\n+        return imports;\n+    }\n+\n+    public Set<String> getImportStrings() {\n+        Set<String> strings = new HashSet<>();\n+\n+        for (Import item : imports) {\n+            strings.add(item.getType());\n+        }\n+\n+        return strings;\n+    }\n+\n+    public String toString() {\n+        final StringBuilder sb = new StringBuilder();\n+        for (final Import i : imports) {\n+            sb.append(\"import \").append(i.getType()).append(\";\\n\");\n+        }\n+\n+        return sb.toString();\n+    }\n+\n+    public void addImport(final Import item) {\n+        imports.add(item);\n+    }\n+\n+    public void removeImport(final Import item) {\n+        imports.remove(item);\n+    }\n+\n+    public boolean contains(final Import item) {\n+        return imports.contains(item);\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        Imports imports1 = (Imports) o;\n+\n+        if (imports != null ? !imports.equals(imports1.imports) : imports1.imports != null) {\n+            return false;\n+        }\n+\n+        return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1OTYwMg=="}, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzA3MTAxOnYy", "diffSide": "RIGHT", "path": "drools/kogito-scenario-simulation/src/test/resources/sampleTest/Traffic Violation.dmn", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDo0OToyOVrOF5_9lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjoxMTo1OFrOF6CpQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM2MTExMA==", "bodyText": "Are these dmn and scesim files just for manual testing, are you going some unit tests?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396361110", "createdAt": "2020-03-23T10:49:29Z", "author": {"login": "jomarko"}, "path": "drools/kogito-scenario-simulation/src/test/resources/sampleTest/Traffic Violation.dmn", "diffHunk": "@@ -0,0 +1,230 @@\n+<?xml version='1.0' encoding='UTF-8'?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNTA1Nw==", "bodyText": "Yes, it is used (executed) during Maven test goal via KogitoScenarioJunitActivatorTest. This activator works like an integration test that load dmn, load scesim and execute it.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r396405057", "createdAt": "2020-03-23T12:11:58Z", "author": {"login": "danielezonca"}, "path": "drools/kogito-scenario-simulation/src/test/resources/sampleTest/Traffic Violation.dmn", "diffHunk": "@@ -0,0 +1,230 @@\n+<?xml version='1.0' encoding='UTF-8'?>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM2MTExMA=="}, "originalCommit": {"oid": "7c9fc5d7c449db059799722b2df32b1d39e324c4"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzA1MjgyOnYy", "diffSide": "RIGHT", "path": "drools/kogito-scenario-simulation/src/test/java/testscenario/KogitoScenarioJunitActivatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTo0ODozNFrOF7hsPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOToyNToyNlrOF798NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk2MjMwMw==", "bodyText": "Just a question. Why should that be present in this long form?\ncan we leave it just\n@RunWith and KogitoJunitActivator and use static import?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r397962303", "createdAt": "2020-03-25T15:48:34Z", "author": {"login": "dupliaka"}, "path": "drools/kogito-scenario-simulation/src/test/java/testscenario/KogitoScenarioJunitActivatorTest.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package testscenario;\n+\n+/**\n+ * Do not remove this file\n+ */\n+@org.junit.runner.RunWith(org.kogito.scenariosimulation.runner.KogitoJunitActivator.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af369373d700b9d2cf8f0cbf7f871c5a7bbd7714"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQyNTE0MQ==", "bodyText": "Short answer: it is the same :)\nLong answer: I usually prefer to use FQN for \"autogenerated\" classes. I plan to create with another ticket a Maven goal to autogenerate it in the project.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r398425141", "createdAt": "2020-03-26T09:25:26Z", "author": {"login": "danielezonca"}, "path": "drools/kogito-scenario-simulation/src/test/java/testscenario/KogitoScenarioJunitActivatorTest.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package testscenario;\n+\n+/**\n+ * Do not remove this file\n+ */\n+@org.junit.runner.RunWith(org.kogito.scenariosimulation.runner.KogitoJunitActivator.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk2MjMwMw=="}, "originalCommit": {"oid": "af369373d700b9d2cf8f0cbf7f871c5a7bbd7714"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTgyMTI1OnYy", "diffSide": "RIGHT", "path": "drools/kogito-scenario-simulation/src/test/java/testscenario/KogitoScenarioJunitActivatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODozNzozMlrOF78MdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTo0NDozMlrOF7-r-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM5NjUzMw==", "bodyText": "Could we add some comment here?\nFor example:\n/**\n\nKogitoJunitActivator is a custom extension of JUnit's\nwhich provides functionality of the Drools Scenario Simulation\nto standard JUnit tests by means of the\nDmn context and associated support classes and annotations.\n*/", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r398396533", "createdAt": "2020-03-26T08:37:32Z", "author": {"login": "dupliaka"}, "path": "drools/kogito-scenario-simulation/src/test/java/testscenario/KogitoScenarioJunitActivatorTest.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package testscenario;\n+\n+/**\n+ * Do not remove this file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af369373d700b9d2cf8f0cbf7f871c5a7bbd7714"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzNzM2OA==", "bodyText": "Done :)", "url": "https://github.com/kiegroup/kogito-runtimes/pull/382#discussion_r398437368", "createdAt": "2020-03-26T09:44:32Z", "author": {"login": "danielezonca"}, "path": "drools/kogito-scenario-simulation/src/test/java/testscenario/KogitoScenarioJunitActivatorTest.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package testscenario;\n+\n+/**\n+ * Do not remove this file", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM5NjUzMw=="}, "originalCommit": {"oid": "af369373d700b9d2cf8f0cbf7f871c5a7bbd7714"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 181, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}