{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NTE1NDU3", "number": 472, "title": "KOGITO-1985 - Add Workflow Context for serverless workflow metadata", "bodyText": "", "createdAt": "2020-04-22T20:01:35Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/472", "merged": true, "mergeCommit": {"oid": "3b9e3ca540df4da92b335e5c953397538daa4ec6"}, "closed": true, "closedAt": "2020-04-24T05:23:04Z", "author": {"login": "tsurdilo"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaN0meAH2gAyNDA3NTE1NDU3OmY3NTdkOWU4YTk1NGQ1Y2MzOTBjNTIyMTg4ZmUzODZiZjgwZWVkNjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaqjj1AFqTM5OTY0NzYyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f757d9e8a954d5cc390c522188fe386bf80eed64", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/f757d9e8a954d5cc390c522188fe386bf80eed64", "committedDate": "2020-04-22T19:54:20Z", "message": "generator context for sw"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85fa6922d3a66b4758b7d9bb63f2536d443c9471", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/85fa6922d3a66b4758b7d9bb63f2536d443c9471", "committedDate": "2020-04-22T19:55:07Z", "message": "adding tests and update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17f69263f8af64c827fdd859aaec8afed15abe60", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/17f69263f8af64c827fdd859aaec8afed15abe60", "committedDate": "2020-04-22T19:58:37Z", "message": "fix for tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NTQ3MTg2", "url": "https://github.com/kiegroup/kogito-runtimes/pull/472#pullrequestreview-398547186", "createdAt": "2020-04-22T20:11:20Z", "commit": {"oid": "17f69263f8af64c827fdd859aaec8afed15abe60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMDoxMToyMFrOGKJe5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMDoxMToyMFrOGKJe5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI5NDMwOQ==", "bodyText": "Maybe move all those strings to constants?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/472#discussion_r413294309", "createdAt": "2020-04-22T20:11:20Z", "author": {"login": "ricardozanini"}, "path": "jbpm/jbpm-serverless-workflow/src/main/java/org/jbpm/serverless/workflow/parser/core/ServerlessWorkflowFactory.java", "diffHunk": "@@ -249,13 +256,13 @@ public WorkItemNode serviceNode(long id, String name, Function function, NodeCon\n         workItemNode.setWork(work);\n \n         work.setName(\"Service Task\");\n-        work.setParameter(\"Interface\", function.getMetadata().get(\"interface\"));\n-        work.setParameter(\"Operation\", function.getMetadata().get(\"operation\"));\n-        work.setParameter(\"interfaceImplementationRef\", function.getMetadata().get(\"interface\"));\n-        work.setParameter(\"operationImplementationRef\", function.getMetadata().get(\"operation\"));\n+        work.setParameter(\"Interface\", ServerlessWorkflowUtils.resolveFunctionMetadata(function, \"interface\", workflowAppContext));\n+        work.setParameter(\"Operation\", ServerlessWorkflowUtils.resolveFunctionMetadata(function, \"operation\", workflowAppContext));\n+        work.setParameter(\"interfaceImplementationRef\", ServerlessWorkflowUtils.resolveFunctionMetadata(function, \"interface\", workflowAppContext));\n+        work.setParameter(\"operationImplementationRef\", ServerlessWorkflowUtils.resolveFunctionMetadata(function, \"operation\", workflowAppContext));\n         work.setParameter(\"ParameterType\", JSON_NODE);\n-        String metaImpl = function.getMetadata().get(\"implementation\");\n-        if(metaImpl == null) {\n+        String metaImpl = ServerlessWorkflowUtils.resolveFunctionMetadata(function, \"implementation\", workflowAppContext);\n+        if (metaImpl == null || metaImpl.isEmpty()) {\n             metaImpl = \"Java\";\n         }\n         work.setParameter(\"implementation\", metaImpl);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17f69263f8af64c827fdd859aaec8afed15abe60"}, "originalPosition": 98}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee6b5b5e22d097b829c654d02fab077f37fb50e3", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/ee6b5b5e22d097b829c654d02fab077f37fb50e3", "committedDate": "2020-04-22T20:31:37Z", "message": "externalizing strings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NTc3MjQy", "url": "https://github.com/kiegroup/kogito-runtimes/pull/472#pullrequestreview-398577242", "createdAt": "2020-04-22T20:48:27Z", "commit": {"oid": "ee6b5b5e22d097b829c654d02fab077f37fb50e3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4ODc0OTM5", "url": "https://github.com/kiegroup/kogito-runtimes/pull/472#pullrequestreview-398874939", "createdAt": "2020-04-23T08:29:55Z", "commit": {"oid": "ee6b5b5e22d097b829c654d02fab077f37fb50e3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d518bf50aeb923d4f0da5208067b2f98c45e339e", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/d518bf50aeb923d4f0da5208067b2f98c45e339e", "committedDate": "2020-04-24T03:47:30Z", "message": "returning empty string rather than null"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjQ3NjI2", "url": "https://github.com/kiegroup/kogito-runtimes/pull/472#pullrequestreview-399647626", "createdAt": "2020-04-24T05:22:58Z", "commit": {"oid": "d518bf50aeb923d4f0da5208067b2f98c45e339e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3422, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}