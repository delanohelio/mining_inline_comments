{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1ODMzMDg5", "number": 930, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMDozNzoxOFrOFDaC6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxODoxNlrOFD6mRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MTE2Nzc4OnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/prediction/PredictionCodegen.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMDozNzoxOFrOIDCmtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMzoyNjozMlrOIDJJ7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA1OTMxNg==", "bodyText": "I know that you did it to avoid repetition but I don't love that we are now logging within the constructor of this class, because now it will probably log stuff that we may not really care about (eg resources)\nOTOH: I never loved this logging; this stuff is dumped to disk sooner or later, so  it's much easier to read it from a file, rather than displayed on the console log.\nSo I am ok with the change, although it feels a bit strange (to me).", "url": "https://github.com/kiegroup/kogito-runtimes/pull/930#discussion_r540059316", "createdAt": "2020-12-10T10:37:18Z", "author": {"login": "evacchi"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/prediction/PredictionCodegen.java", "diffHunk": "@@ -234,6 +233,6 @@ private void addModels(final List<KiePMMLModel> kiepmmlModels, final PMMLResourc\n \n \n     private void storeFile(GeneratedFile.Type type, String path, String source) {\n-        generatedFiles.add(new GeneratedFile(type, path, log(source).getBytes(StandardCharsets.UTF_8)));\n+        generatedFiles.add(new GeneratedFile(type, path, source));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6740231f65f5ffb8b81ab7d5ebbabef0e2111969"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE2MzgxNw==", "bodyText": "Yes I agree that it produce a lot of noise in the logs but my goal was to centralize it for now.\nI moved the logging to generate() method of ApplicationGenerator so that it is not a side effect inside GeneratedFile constructor and it will be easier to change in the future (i.e. dump to disk instead of log).\nWdyt?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/930#discussion_r540163817", "createdAt": "2020-12-10T13:22:28Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/prediction/PredictionCodegen.java", "diffHunk": "@@ -234,6 +233,6 @@ private void addModels(final List<KiePMMLModel> kiepmmlModels, final PMMLResourc\n \n \n     private void storeFile(GeneratedFile.Type type, String path, String source) {\n-        generatedFiles.add(new GeneratedFile(type, path, log(source).getBytes(StandardCharsets.UTF_8)));\n+        generatedFiles.add(new GeneratedFile(type, path, source));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA1OTMxNg=="}, "originalCommit": {"oid": "6740231f65f5ffb8b81ab7d5ebbabef0e2111969"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE2NjYzOQ==", "bodyText": "I like it much better now!", "url": "https://github.com/kiegroup/kogito-runtimes/pull/930#discussion_r540166639", "createdAt": "2020-12-10T13:26:32Z", "author": {"login": "evacchi"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/prediction/PredictionCodegen.java", "diffHunk": "@@ -234,6 +233,6 @@ private void addModels(final List<KiePMMLModel> kiepmmlModels, final PMMLResourc\n \n \n     private void storeFile(GeneratedFile.Type type, String path, String source) {\n-        generatedFiles.add(new GeneratedFile(type, path, log(source).getBytes(StandardCharsets.UTF_8)));\n+        generatedFiles.add(new GeneratedFile(type, path, source));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA1OTMxNg=="}, "originalCommit": {"oid": "6740231f65f5ffb8b81ab7d5ebbabef0e2111969"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjQ5NDI4OnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/ApplicationGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxNjo0NFrOIDyMrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxNjo0NFrOIDyMrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgzOTA4Nw==", "bodyText": "could we put the logger as LOGGER ?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/930#discussion_r540839087", "createdAt": "2020-12-11T10:16:44Z", "author": {"login": "radtriste"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/ApplicationGenerator.java", "diffHunk": "@@ -41,7 +40,7 @@\n \n public class ApplicationGenerator {\n \n-    public static final Logger logger = LoggerFactory.getLogger(ApplicationGenerator.class);\n+    private static final Logger logger = LoggerFactory.getLogger(ApplicationGenerator.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48e49362639bb7c3a1450dc58b73a4e9f3aa5d21"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjQ5Nzk1OnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxNzozMlrOIDyOsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxNzozMlrOIDyOsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgzOTYwMg==", "bodyText": "could we rename as LOGGER ?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/930#discussion_r540839602", "createdAt": "2020-12-11T10:17:32Z", "author": {"login": "radtriste"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java", "diffHunk": "@@ -222,25 +220,25 @@ private void generateStronglyTypedInput(DMNModel model) {\n             DMNTypeSafeTypeGenerator generator = new DMNTypeSafeTypeGenerator(model, index, factory).withJacksonAnnotation();\n             boolean useMPAnnotations = isMPAnnotationsPresent();\n             if (useMPAnnotations) {\n-                logger.debug(\"useMPAnnotations\");\n+                LOG.debug(\"useMPAnnotations\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48e49362639bb7c3a1450dc58b73a4e9f3aa5d21"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjQ5OTYxOnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/rules/DeclaredTypeCodegen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxNzo1MVrOIDyPmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxNzo1MVrOIDyPmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgzOTgzMw==", "bodyText": "LOGGER", "url": "https://github.com/kiegroup/kogito-runtimes/pull/930#discussion_r540839833", "createdAt": "2020-12-11T10:17:51Z", "author": {"login": "radtriste"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/rules/DeclaredTypeCodegen.java", "diffHunk": "@@ -46,12 +46,15 @@\n import org.kie.kogito.codegen.KogitoPackageSources;\n import org.kie.kogito.codegen.di.DependencyInjectionAnnotator;\n import org.kie.kogito.codegen.rules.config.RuleConfigGenerator;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import static java.util.stream.Collectors.toList;\n-import static org.kie.kogito.codegen.ApplicationGenerator.logger;\n \n public class DeclaredTypeCodegen extends AbstractGenerator {\n \n+    private static final Logger logger = LoggerFactory.getLogger(DeclaredTypeCodegen.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48e49362639bb7c3a1450dc58b73a4e9f3aa5d21"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjUwMTE5OnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/rules/IncrementalRuleCodegen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxODoxNlrOIDyQgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxODoxNlrOIDyQgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0MDA2Nw==", "bodyText": "LOGGER", "url": "https://github.com/kiegroup/kogito-runtimes/pull/930#discussion_r540840067", "createdAt": "2020-12-11T10:18:16Z", "author": {"login": "radtriste"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/rules/IncrementalRuleCodegen.java", "diffHunk": "@@ -80,16 +80,18 @@\n import org.kie.kogito.rules.RuleUnitConfig;\n import org.kie.kogito.rules.units.AssignableChecker;\n import org.kie.kogito.rules.units.ReflectiveRuleUnitDescription;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import static java.util.stream.Collectors.toList;\n \n import static com.github.javaparser.StaticJavaParser.parse;\n import static org.drools.compiler.kie.builder.impl.KieBuilderImpl.setDefaultsforEmptyKieModule;\n-import static org.kie.kogito.codegen.ApplicationGenerator.log;\n-import static org.kie.kogito.codegen.ApplicationGenerator.logger;\n \n public class IncrementalRuleCodegen extends AbstractGenerator {\n \n+    private static final Logger logger = LoggerFactory.getLogger(IncrementalRuleCodegen.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48e49362639bb7c3a1450dc58b73a4e9f3aa5d21"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4732, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}