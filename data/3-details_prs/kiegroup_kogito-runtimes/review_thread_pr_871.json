{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NjY3ODE3", "number": 871, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNTo0OTo1N1rOE2I6Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNTo0OTo1N1rOE2I6Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MjA0NDk4OnYy", "diffSide": "RIGHT", "path": "drools/drools-core-static/src/main/java/org/drools/statics/StaticServiceRegistry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNTo0OTo1N1rOHuzbnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjo1NDowNFrOHu11bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgzOTE5Nw==", "bodyText": "Minor: you're always replacing the class with its name even when not strictly necessary like in this case. If we need the name I'd prefer to have something like KieResources.class.getCanonicalName() instead of the hardcoded String.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/871#discussion_r518839197", "createdAt": "2020-11-06T15:49:57Z", "author": {"login": "mariofusco"}, "path": "drools/drools-core-static/src/main/java/org/drools/statics/StaticServiceRegistry.java", "diffHunk": "@@ -53,15 +47,15 @@\n     }\n \n     private void wireServices() {\n-        serviceMap.put(org.kie.api.io.KieResources.class, SimpleInstanceCreator.instance(\"org.drools.core.io.impl.ResourceFactoryServiceImpl\"));\n-        serviceMap.put(org.kie.api.concurrent.KieExecutors.class, SimpleInstanceCreator.instance(\"org.drools.core.concurrent.ExecutorProviderImpl\"));\n-        serviceMap.put(org.kie.api.KieServices.class, SimpleInstanceCreator.instance(\"org.drools.compiler.kie.builder.impl.KieServicesImpl\"));\n-        serviceMap.put(org.kie.internal.builder.KnowledgeBuilderFactoryService.class, SimpleInstanceCreator.instance(\"org.drools.compiler.builder.impl.KnowledgeBuilderFactoryServiceImpl\"));\n-        serviceMap.put(org.kie.kogito.rules.DataSource.Factory.class, SimpleInstanceCreator.instance(\"org.kie.kogito.rules.units.impl.DataSourceFactoryImpl\"));\n-        serviceMap.put(org.kie.internal.ruleunit.RuleUnitComponentFactory.class, SimpleInstanceCreator.instance(\"org.kie.kogito.rules.units.impl.RuleUnitComponentFactoryImpl\"));\n-        serviceMap.put(KieAssemblers.class, new StaticKieAssemblers());\n-        serviceMap.put(KieRuntimes.class, SimpleInstanceCreator.instance(\"org.kie.internal.services.KieRuntimesImpl\"));\n-        serviceMap.put(KieWeavers.class, new KieWeaversImpl());\n+        registerService(\"org.kie.api.io.KieResources\", \"org.drools.core.io.impl.ResourceFactoryServiceImpl\", true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7ec928d2165bedacaaeb491bff4299b9c230623"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg3ODU3Mw==", "bodyText": "I used a string so that if we want to make it optional just updating the flag", "url": "https://github.com/kiegroup/kogito-runtimes/pull/871#discussion_r518878573", "createdAt": "2020-11-06T16:54:04Z", "author": {"login": "danielezonca"}, "path": "drools/drools-core-static/src/main/java/org/drools/statics/StaticServiceRegistry.java", "diffHunk": "@@ -53,15 +47,15 @@\n     }\n \n     private void wireServices() {\n-        serviceMap.put(org.kie.api.io.KieResources.class, SimpleInstanceCreator.instance(\"org.drools.core.io.impl.ResourceFactoryServiceImpl\"));\n-        serviceMap.put(org.kie.api.concurrent.KieExecutors.class, SimpleInstanceCreator.instance(\"org.drools.core.concurrent.ExecutorProviderImpl\"));\n-        serviceMap.put(org.kie.api.KieServices.class, SimpleInstanceCreator.instance(\"org.drools.compiler.kie.builder.impl.KieServicesImpl\"));\n-        serviceMap.put(org.kie.internal.builder.KnowledgeBuilderFactoryService.class, SimpleInstanceCreator.instance(\"org.drools.compiler.builder.impl.KnowledgeBuilderFactoryServiceImpl\"));\n-        serviceMap.put(org.kie.kogito.rules.DataSource.Factory.class, SimpleInstanceCreator.instance(\"org.kie.kogito.rules.units.impl.DataSourceFactoryImpl\"));\n-        serviceMap.put(org.kie.internal.ruleunit.RuleUnitComponentFactory.class, SimpleInstanceCreator.instance(\"org.kie.kogito.rules.units.impl.RuleUnitComponentFactoryImpl\"));\n-        serviceMap.put(KieAssemblers.class, new StaticKieAssemblers());\n-        serviceMap.put(KieRuntimes.class, SimpleInstanceCreator.instance(\"org.kie.internal.services.KieRuntimesImpl\"));\n-        serviceMap.put(KieWeavers.class, new KieWeaversImpl());\n+        registerService(\"org.kie.api.io.KieResources\", \"org.drools.core.io.impl.ResourceFactoryServiceImpl\", true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgzOTE5Nw=="}, "originalCommit": {"oid": "f7ec928d2165bedacaaeb491bff4299b9c230623"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4681, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}