{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MDU4MTk3", "number": 582, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTowOToxNlrOEISIfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNToyNDoxOVrOEIan5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTIxMTQ5OnYy", "diffSide": "RIGHT", "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcessInstance.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTowOToxNlrOGoJpgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDoxNDo1M1rOGoUF2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc1NDMwNg==", "bodyText": "why is this needed? Since process instance was loaded from the storage it should not be connected at all. So how does it get into connected state here as the reconnect is few lines below?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/582#discussion_r444754306", "createdAt": "2020-06-24T09:09:16Z", "author": {"login": "mswiderski"}, "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcessInstance.java", "diffHunk": "@@ -125,6 +125,7 @@ public void internalSetProcessInstance(org.kie.api.runtime.process.ProcessInstan\n         if (this.legacyProcessInstance != null && this.status != ProcessInstance.STATE_PENDING) {\n             throw new IllegalStateException(\"Impossible to override process instance that already exists\");\n         }\n+        ((WorkflowProcessInstanceImpl) this.legacyProcessInstance).disconnect();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df02c53ed9e30d0c8cbe69c9358c11244c0d4834"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc2MzY2Mg==", "bodyText": "yep, I'm doing this only so that legacy process instance is removed from the DefaultProcessInstanceManager, otherwise it will keep appending more and more instances to it.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/582#discussion_r444763662", "createdAt": "2020-06-24T09:25:13Z", "author": {"login": "cristianonicolai"}, "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcessInstance.java", "diffHunk": "@@ -125,6 +125,7 @@ public void internalSetProcessInstance(org.kie.api.runtime.process.ProcessInstan\n         if (this.legacyProcessInstance != null && this.status != ProcessInstance.STATE_PENDING) {\n             throw new IllegalStateException(\"Impossible to override process instance that already exists\");\n         }\n+        ((WorkflowProcessInstanceImpl) this.legacyProcessInstance).disconnect();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc1NDMwNg=="}, "originalCommit": {"oid": "df02c53ed9e30d0c8cbe69c9358c11244c0d4834"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc2NDM3Nw==", "bodyText": "why is it added there in the first place?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/582#discussion_r444764377", "createdAt": "2020-06-24T09:26:27Z", "author": {"login": "mswiderski"}, "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcessInstance.java", "diffHunk": "@@ -125,6 +125,7 @@ public void internalSetProcessInstance(org.kie.api.runtime.process.ProcessInstan\n         if (this.legacyProcessInstance != null && this.status != ProcessInstance.STATE_PENDING) {\n             throw new IllegalStateException(\"Impossible to override process instance that already exists\");\n         }\n+        ((WorkflowProcessInstanceImpl) this.legacyProcessInstance).disconnect();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc1NDMwNg=="}, "originalCommit": {"oid": "df02c53ed9e30d0c8cbe69c9358c11244c0d4834"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc3MjEwMA==", "bodyText": "This is done when unmarshalling the process: https://github.com/kiegroup/kogito-runtimes/blob/master/jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/marshalling/ProcessInstanceMarshaller.java#L102\nand https://github.com/kiegroup/kogito-runtimes/blob/master/jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcessInstance.java#L112", "url": "https://github.com/kiegroup/kogito-runtimes/pull/582#discussion_r444772100", "createdAt": "2020-06-24T09:40:10Z", "author": {"login": "cristianonicolai"}, "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcessInstance.java", "diffHunk": "@@ -125,6 +125,7 @@ public void internalSetProcessInstance(org.kie.api.runtime.process.ProcessInstan\n         if (this.legacyProcessInstance != null && this.status != ProcessInstance.STATE_PENDING) {\n             throw new IllegalStateException(\"Impossible to override process instance that already exists\");\n         }\n+        ((WorkflowProcessInstanceImpl) this.legacyProcessInstance).disconnect();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc1NDMwNg=="}, "originalCommit": {"oid": "df02c53ed9e30d0c8cbe69c9358c11244c0d4834"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc3NDEyNw==", "bodyText": "in that case I'd change it there as it looks very confusing to disconnect and then reconnect.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/582#discussion_r444774127", "createdAt": "2020-06-24T09:43:48Z", "author": {"login": "mswiderski"}, "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcessInstance.java", "diffHunk": "@@ -125,6 +125,7 @@ public void internalSetProcessInstance(org.kie.api.runtime.process.ProcessInstan\n         if (this.legacyProcessInstance != null && this.status != ProcessInstance.STATE_PENDING) {\n             throw new IllegalStateException(\"Impossible to override process instance that already exists\");\n         }\n+        ((WorkflowProcessInstanceImpl) this.legacyProcessInstance).disconnect();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc1NDMwNg=="}, "originalCommit": {"oid": "df02c53ed9e30d0c8cbe69c9358c11244c0d4834"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkyNTQwMA==", "bodyText": "@mswiderski ok so trying a new approach here, so create process instance does not add it to ProcessInstanceManager. Some side effects are that now id is only generated when the process is started and not when created. Same goes for validating business key, it can only be done when starting the process now, not when creating. wdyt?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/582#discussion_r444925400", "createdAt": "2020-06-24T14:14:53Z", "author": {"login": "cristianonicolai"}, "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcessInstance.java", "diffHunk": "@@ -125,6 +125,7 @@ public void internalSetProcessInstance(org.kie.api.runtime.process.ProcessInstan\n         if (this.legacyProcessInstance != null && this.status != ProcessInstance.STATE_PENDING) {\n             throw new IllegalStateException(\"Impossible to override process instance that already exists\");\n         }\n+        ((WorkflowProcessInstanceImpl) this.legacyProcessInstance).disconnect();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc1NDMwNg=="}, "originalCommit": {"oid": "df02c53ed9e30d0c8cbe69c9358c11244c0d4834"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjYwMjYyOnYy", "diffSide": "RIGHT", "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcessInstance.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNToyNDoxOVrOGoXTXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTowNzo0MlrOGrBA1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3ODAxNQ==", "bodyText": "why this change is needed? correlation key type is way to complex and kind of legacy too, so keeping string here and use correlation key on legacy process instance would make more sense to me, but not a huge issue I guess.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/582#discussion_r444978015", "createdAt": "2020-06-24T15:24:19Z", "author": {"login": "mswiderski"}, "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcessInstance.java", "diffHunk": "@@ -84,7 +75,7 @@\n \n     protected Integer status;\n     protected String id;\n-    protected String businessKey;\n+    protected CorrelationKey correlationKey;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a7da2bff63c04013dc1aea9a3a514c58f38e77f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI4MTkwMw==", "bodyText": "@mswiderski I end up changing this because the CorrelationKey object is needed for when adding the process instance to the ProcessInstanceManager. I can revert that but then I would need to recreate this object every time the process is started. See: https://github.com/kiegroup/kogito-runtimes/pull/582/files#diff-c72f318d542b5bbf6d5de58b1b5c2f1fR163", "url": "https://github.com/kiegroup/kogito-runtimes/pull/582#discussion_r445281903", "createdAt": "2020-06-25T03:05:33Z", "author": {"login": "cristianonicolai"}, "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcessInstance.java", "diffHunk": "@@ -84,7 +75,7 @@\n \n     protected Integer status;\n     protected String id;\n-    protected String businessKey;\n+    protected CorrelationKey correlationKey;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3ODAxNQ=="}, "originalCommit": {"oid": "7a7da2bff63c04013dc1aea9a3a514c58f38e77f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY4NDk1Ng==", "bodyText": "@cristianonicolai Just a clarification. Being this a process instance, if we want to start two process instances, then we need to first create 2 process instance objects anyway, right? That would mean that the recreation will only be needed for the second time when the process instance is started (so once it will be done in the constructor, second time in the star method). But to me it makes sense to compute this in the constructor and then reuse it in whatever method within the same object.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/582#discussion_r447684956", "createdAt": "2020-06-30T13:32:36Z", "author": {"login": "MarianMacik"}, "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcessInstance.java", "diffHunk": "@@ -84,7 +75,7 @@\n \n     protected Integer status;\n     protected String id;\n-    protected String businessKey;\n+    protected CorrelationKey correlationKey;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3ODAxNQ=="}, "originalCommit": {"oid": "7a7da2bff63c04013dc1aea9a3a514c58f38e77f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc1ODU1MA==", "bodyText": "@MarianMacik correct, we need to first create then start, so it makes sense to me to be done at the constructor level.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/582#discussion_r447758550", "createdAt": "2020-06-30T15:07:42Z", "author": {"login": "cristianonicolai"}, "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcessInstance.java", "diffHunk": "@@ -84,7 +75,7 @@\n \n     protected Integer status;\n     protected String id;\n-    protected String businessKey;\n+    protected CorrelationKey correlationKey;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3ODAxNQ=="}, "originalCommit": {"oid": "7a7da2bff63c04013dc1aea9a3a514c58f38e77f"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4981, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}