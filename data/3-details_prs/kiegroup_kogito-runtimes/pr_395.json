{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0Nzk5NDgz", "number": 395, "title": "KOGITO-1575 DMN assembler-free ikb-free DMNRuntime", "bodyText": "Requires kiegroup/drools#2831", "createdAt": "2020-03-27T14:52:25Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/395", "merged": true, "mergeCommit": {"oid": "dceff3e7c00cc77acdce0b5c9bd68ba06810e9d0"}, "closed": true, "closedAt": "2020-04-01T11:55:43Z", "author": {"login": "tarilabs"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRzNIpAFqTM4MzAwOTgwOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTWYhEAFqTM4NTUxMjUxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMDA5ODA4", "url": "https://github.com/kiegroup/kogito-runtimes/pull/395#pullrequestreview-383009808", "createdAt": "2020-03-27T16:22:18Z", "commit": {"oid": "469fbb71a58ea9ff90a5de4962599944a546730e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0Nzk3ODUx", "url": "https://github.com/kiegroup/kogito-runtimes/pull/395#pullrequestreview-384797851", "createdAt": "2020-03-31T14:36:05Z", "commit": {"oid": "469fbb71a58ea9ff90a5de4962599944a546730e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDozNjowNVrOF-Y8DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDozNjowNVrOF-Y8DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk2NDYyMQ==", "bodyText": "A small side note: what about moving this call outside so that you don't have the same call in the following overload?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/395#discussion_r400964621", "createdAt": "2020-03-31T14:36:05Z", "author": {"login": "r00ta"}, "path": "drools/kogito-dmn/src/main/java/org/kie/kogito/dmn/DMNKogito.java", "diffHunk": "@@ -52,44 +51,41 @@ private DMNKogito() {\n         // intentionally private.\n     }\n \n-    public static DMNRuntime createGenericDMNRuntime(Reader... resources) {\n-        KnowledgeBaseImpl knowledgeBase = new KnowledgeBaseImpl(\"\", new RuleBaseConfiguration());\n-        Map<String, InternalKnowledgePackage> pkgs = knowledgeBase.getPackagesMap();\n-        DMNCompilerImpl compilerImpl = new DMNCompilerImpl();\n-        for (Reader dmnResource : resources) {\n-            try {\n-                DMNModel m = compilerImpl.compile(dmnResource);\n-                InternalKnowledgePackage pkg = pkgs.computeIfAbsent(m.getNamespace(), KnowledgePackageImpl::new);\n-                ResourceTypePackageRegistry rpkg = pkg.getResourceTypePackages();\n-                DMNPackageImpl dmnpkg = rpkg.computeIfAbsent(ResourceType.DMN, rtp -> new DMNPackageImpl(m.getNamespace()));\n-                dmnpkg.addModel(m.getName(), m);// TODO add profiles? and check dups over namespace/name\n-            } catch (Exception e) {\n-                LOG.error(\"Failed on DMN resource\", e);\n-            }\n-        }\n-        return new DMNRuntimeImpl(knowledgeBase);\n+    /**\n+     * Internal Utility class.<br/>\n+     * Use {@link Application#decisionModels()} of Kogito API to programmatically access DMN assets and evaluate DMN decisions.\n+     */\n+    public static DMNRuntime createGenericDMNRuntime(Reader... readers) {\n+        List<Resource> resources = Stream.of(readers).map(ReaderResource::new).collect(Collectors.toList());\n+        DMNRuntime dmnRuntime = DMNRuntimeBuilder.fromDefaults()\n+                                                 .setRootClassLoader(null)\n+                                                 .buildConfiguration()\n+                                                 .fromResources(resources)\n+                                                 .getOrElseThrow(e -> new RuntimeException(\"Error initalizing DMNRuntime\", e));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "469fbb71a58ea9ff90a5de4962599944a546730e"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0e6d2a0a0cd93120622b4a777dc2ddcb4c8e959", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/d0e6d2a0a0cd93120622b4a777dc2ddcb4c8e959", "committedDate": "2020-03-31T15:00:04Z", "message": "KOGITO-1575 DMN assembler-free ikb-free DMNRuntime"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb30423861038aa09120f0897498fd13e8fa9fa0", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/bb30423861038aa09120f0897498fd13e8fa9fa0", "committedDate": "2020-03-31T15:00:04Z", "message": "reference tag release"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8ea79faa403dc927b5063d4cde7e737ad2bba21", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/a8ea79faa403dc927b5063d4cde7e737ad2bba21", "committedDate": "2020-03-31T15:00:05Z", "message": "refactored following code review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f775695e1a4971afaab6452777142b84ac6c0939", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/f775695e1a4971afaab6452777142b84ac6c0939", "committedDate": "2020-03-31T15:00:05Z", "message": "cutting deprecated code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4824f2ba63f7a8d8527049aea528b87b07e31a8b", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/4824f2ba63f7a8d8527049aea528b87b07e31a8b", "committedDate": "2020-03-31T14:53:06Z", "message": "cutting deprecated code"}, "afterCommit": {"oid": "f775695e1a4971afaab6452777142b84ac6c0939", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/f775695e1a4971afaab6452777142b84ac6c0939", "committedDate": "2020-03-31T15:00:05Z", "message": "cutting deprecated code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f44c38b038b51ee11b1c5967a613f443f966983", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/4f44c38b038b51ee11b1c5967a613f443f966983", "committedDate": "2020-03-31T15:11:49Z", "message": "revert modificaitons to DMNKogitoTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c4a6afbe4e1d692dab4d43edab9a3051248a157", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/5c4a6afbe4e1d692dab4d43edab9a3051248a157", "committedDate": "2020-03-31T17:19:40Z", "message": "align test scenario"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NTEyNTEz", "url": "https://github.com/kiegroup/kogito-runtimes/pull/395#pullrequestreview-385512513", "createdAt": "2020-04-01T11:55:20Z", "commit": {"oid": "5c4a6afbe4e1d692dab4d43edab9a3051248a157"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3598, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}