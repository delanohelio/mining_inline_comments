{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NTkxMzQw", "number": 332, "title": "KOGITO-1264 - Allow to use Validation API to enhance generated REST api", "bodyText": "This PR brings support for validation api to enhance the generated REST api\nIn general it allows to use validation api annotations on model classes and then the generated api will enforce this validation. See some details in jira\nSo an example here could be to use following model\nimport javax.validation.constraints.Email;\nimport javax.validation.constraints.Min;\nimport javax.validation.constraints.NotNull;\nimport javax.validation.constraints.Size;\n\npublic class Person {\n\n    @NotNull\n    @Size(min = 2, max = 30)\n    private String name;\n\n    @NotNull\n    @Min(value = 2, message = \"Age must be higher than 5\")\n    private int age;\n\n    @NotNull\n    @Email\n    private String email;\n\n    private boolean adult;\n\nand this will then generated following input data model for process that references this type as variable\npublic class PersonsModelInput implements org.kie.kogito.Model {\n\n\n    @org.kie.internal.kogito.codegen.VariableInfo(tags = \"\")\n    @javax.validation.Valid()\n    private org.acme.travels.Person person;\n\n    public org.acme.travels.Person getPerson() {\n        return person;\n    }\n\n    public void setPerson(org.acme.travels.Person person) {\n        this.person = person;\n    }\n}\n\nAnd then the REST resource for creating new instances of the process\n @POST()\n    @Produces(MediaType.APPLICATION_JSON)\n    @Consumes(MediaType.APPLICATION_JSON)\n    public PersonsModelOutput createResource_persons(@Context HttpHeaders httpHeaders, \n@QueryParam(\"businessKey\") String businessKey,\n @javax.validation.Valid() @javax.validation.constraints.NotNull() PersonsModelInput resource) {     \n\nwhenever user attempts to send invalid data such as following\ncurl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"person\" : {\"name\" : \"john\", \"age\" : 3, \"email\" : \"user\"}}' http://localhost:8080/persons\n\nit will produce 400 Bad Request response with following message (this can actually be configured)\n* TCP_NODELAY set\n* Connected to localhost (127.0.0.1) port 8080 (#0)\n> POST /persons HTTP/1.1\n> Host: localhost:8080\n> User-Agent: curl/7.54.0\n> Content-Type:application/json\n> Accept:application/json\n> Content-Length: 59\n>\n* upload completely sent off: 59 out of 59 bytes\n< HTTP/1.1 400 Bad Request\n< Content-Length: 262\n< validation-exception: true\n< Content-Type: application/json\n<\n* Connection #0 to host localhost left intact\n{\"exception\":null,\"propertyViolations\":[],\"classViolations\":[],\"parameterViolations\":[{\"constraintType\":\"PARAMETER\",\"path\":\"createResource_persons.resource.person.email\",\"message\":\"must be a well-formed email address\",\"value\":\"user\"}],\"returnValueViolations\":[]}\n\nthis could be nice addition not only to processes but also to decision and rules\nIn addition this also is exposed via the OpenAPI/swagger\n\n@tarilabs @evacchi in case you would be interested", "createdAt": "2020-02-25T13:43:56Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/332", "merged": true, "mergeCommit": {"oid": "27cc41e4bf76d2c40efbd97ed9522d448fab0007"}, "closed": true, "closedAt": "2020-02-26T18:54:26Z", "author": {"login": "mswiderski"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHyoZoAFqTM2NDE2MjY5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIJG5GgBqjMwNzQ0MTY0NjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MTYyNjk4", "url": "https://github.com/kiegroup/kogito-runtimes/pull/332#pullrequestreview-364162698", "createdAt": "2020-02-25T14:02:56Z", "commit": {"oid": "485942815a24d939e3d35d3a74bc45957e3f00e0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "485942815a24d939e3d35d3a74bc45957e3f00e0", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/485942815a24d939e3d35d3a74bc45957e3f00e0", "committedDate": "2020-02-25T13:36:08Z", "message": "KOGITO-1264 - Allow to use Validation API to enhance generated REST api"}, "afterCommit": {"oid": "b17b34c70c8d5ec8c02e4db050aa76e37bb47002", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/b17b34c70c8d5ec8c02e4db050aa76e37bb47002", "committedDate": "2020-02-25T15:26:07Z", "message": "KOGITO-1264 - Allow to use Validation API to enhance generated REST api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b17b34c70c8d5ec8c02e4db050aa76e37bb47002", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/b17b34c70c8d5ec8c02e4db050aa76e37bb47002", "committedDate": "2020-02-25T15:26:07Z", "message": "KOGITO-1264 - Allow to use Validation API to enhance generated REST api"}, "afterCommit": {"oid": "5c25f817f04f6fb47ef48febcbdd7c7473a925dc", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/5c25f817f04f6fb47ef48febcbdd7c7473a925dc", "committedDate": "2020-02-25T16:19:07Z", "message": "KOGITO-1264 - Allow to use Validation API to enhance generated REST api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDUzNDU1", "url": "https://github.com/kiegroup/kogito-runtimes/pull/332#pullrequestreview-364453455", "createdAt": "2020-02-25T21:15:55Z", "commit": {"oid": "5c25f817f04f6fb47ef48febcbdd7c7473a925dc"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMToxNTo1NVrOFuVd7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMToyMzoyMFrOFuVsLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEzMDU0Mg==", "bodyText": "Probably the variable should be called classDotName?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/332#discussion_r384130542", "createdAt": "2020-02-25T21:15:55Z", "author": {"login": "MarianMacik"}, "path": "kogito-quarkus-extension/deployment/src/main/java/org/kie/kogito/quarkus/deployment/KogitoAssetsProcessor.java", "diffHunk": "@@ -323,7 +323,11 @@ private ApplicationGenerator createApplicationGenerator(Path projectPath, Launch\n                 .getClassByName(createDotName(persistenceFactoryClass)) != null;\n \n         GeneratorContext context = GeneratorContext.ofResourcePath(projectPath.resolve(\"src/main/resources\").toFile());\n-        context.withBuildContext(new QuarkusKogitoBuildContext());\n+        context.withBuildContext(new QuarkusKogitoBuildContext((className) -> {\n+                DotName classNotName = createDotName(className);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c25f817f04f6fb47ef48febcbdd7c7473a925dc"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEzNDE4OA==", "bodyText": "Is this constructor even used anywhere? I see that you actually use the other one, which means you override the resolver function everywhere in the end.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/332#discussion_r384134188", "createdAt": "2020-02-25T21:23:20Z", "author": {"login": "MarianMacik"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/context/QuarkusKogitoBuildContext.java", "diffHunk": "@@ -15,6 +15,30 @@\n \n package org.kie.kogito.codegen.context;\n \n+import java.util.function.Function;\n+\n public class QuarkusKogitoBuildContext implements KogitoBuildContext {\n+\n+    private Function<String, Boolean> classAvailabilityResolver;\n+    \n     \n+    public QuarkusKogitoBuildContext() {\n+        this((className) -> {\n+            try {\n+                Thread.currentThread().getContextClassLoader().loadClass(className);\n+                return true;\n+            } catch (ClassNotFoundException e) {\n+                return false;\n+            }\n+        });\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c25f817f04f6fb47ef48febcbdd7c7473a925dc"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c25f817f04f6fb47ef48febcbdd7c7473a925dc", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/5c25f817f04f6fb47ef48febcbdd7c7473a925dc", "committedDate": "2020-02-25T16:19:07Z", "message": "KOGITO-1264 - Allow to use Validation API to enhance generated REST api"}, "afterCommit": {"oid": "acade1e3f5c8434b45e69d47cf2af75a84cb4e08", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/acade1e3f5c8434b45e69d47cf2af75a84cb4e08", "committedDate": "2020-02-26T06:35:32Z", "message": "KOGITO-1264 - Allow to use Validation API to enhance generated REST api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NzczNTcz", "url": "https://github.com/kiegroup/kogito-runtimes/pull/332#pullrequestreview-364773573", "createdAt": "2020-02-26T10:13:34Z", "commit": {"oid": "acade1e3f5c8434b45e69d47cf2af75a84cb4e08"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODU2NTA1", "url": "https://github.com/kiegroup/kogito-runtimes/pull/332#pullrequestreview-364856505", "createdAt": "2020-02-26T12:26:53Z", "commit": {"oid": "acade1e3f5c8434b45e69d47cf2af75a84cb4e08"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e01c32cb2a51dff346d2e58846dba33cca0cbee", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/1e01c32cb2a51dff346d2e58846dba33cca0cbee", "committedDate": "2020-02-26T16:13:54Z", "message": "KOGITO-1264 - Allow to use Validation API to enhance generated REST api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "acade1e3f5c8434b45e69d47cf2af75a84cb4e08", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/acade1e3f5c8434b45e69d47cf2af75a84cb4e08", "committedDate": "2020-02-26T06:35:32Z", "message": "KOGITO-1264 - Allow to use Validation API to enhance generated REST api"}, "afterCommit": {"oid": "1e01c32cb2a51dff346d2e58846dba33cca0cbee", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/1e01c32cb2a51dff346d2e58846dba33cca0cbee", "committedDate": "2020-02-26T16:13:54Z", "message": "KOGITO-1264 - Allow to use Validation API to enhance generated REST api"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3747, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}