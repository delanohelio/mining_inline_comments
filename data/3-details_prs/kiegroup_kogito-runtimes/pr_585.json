{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5OTM5NzE0", "number": 585, "title": "KOGITO-2546  Refactor process/rules/decision-specific config out of ApplicationConfig", "bodyText": "A lot of the logic in ApplicationConfig is really for ProcessConfig. We can move this logic in a generated ProcessConfig class, and generate that as well. Same for other type of configs (rules, decisions)\n\nCreate different config classes depending on the underlying runtime (CDI, Spring, None -- i.e. codegen tests)\nUse templates for different types of runtime for code clarity\n\nThe code looks \"more\" but it's actually being substituted by templates, and I think the clarity has improved a lot. There are less conditional branches that insert framework-specific logic to the generated classes, and instead there are framework-specific templates, so it's easy to see what goes where.\nThe framework-agnostic codegen has been preserved -- it has its own template when appropriate.\nExpect more of this to come (re: Application.java and Process/Decision.java, etc.)\nhttps://issues.redhat.com/browse/KOGITO-2546", "createdAt": "2020-06-25T10:49:09Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/585", "merged": true, "mergeCommit": {"oid": "485e8273916379c8772d60c1dbd1b977f9fd6108"}, "closed": true, "closedAt": "2020-07-15T09:33:35Z", "author": {"login": "evacchi"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwRaOugBqjM0OTY1NjI1MTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1Gn06AFqTQ0ODc1MTg2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93669d94fd30440973fa4c5bc0338b7dadc7ca76", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/93669d94fd30440973fa4c5bc0338b7dadc7ca76", "committedDate": "2020-06-30T08:29:47Z", "message": "fix templates"}, "afterCommit": {"oid": "9049ea2d030b04480c4a27eee5fc292ec87732cb", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/9049ea2d030b04480c4a27eee5fc292ec87732cb", "committedDate": "2020-06-30T08:31:21Z", "message": "fix templates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9049ea2d030b04480c4a27eee5fc292ec87732cb", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/9049ea2d030b04480c4a27eee5fc292ec87732cb", "committedDate": "2020-06-30T08:31:21Z", "message": "fix templates"}, "afterCommit": {"oid": "6f3cb5b2f0475c3cd99ac57d16da12f11279963e", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/6f3cb5b2f0475c3cd99ac57d16da12f11279963e", "committedDate": "2020-06-30T08:33:09Z", "message": "fix templates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "81969b9257d46108518c46d37f2a81084df28f4c", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/81969b9257d46108518c46d37f2a81084df28f4c", "committedDate": "2020-06-30T09:17:53Z", "message": "fix templates/init"}, "afterCommit": {"oid": "0f692eb182d210ffd20d276ff541b272f636bd81", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0f692eb182d210ffd20d276ff541b272f636bd81", "committedDate": "2020-06-30T11:42:23Z", "message": "fix templates/init"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjE0Njg4", "url": "https://github.com/kiegroup/kogito-runtimes/pull/585#pullrequestreview-440614688", "createdAt": "2020-07-01T07:31:16Z", "commit": {"oid": "7e94f6389644f9f7cdc7334fff3d50cb0aa76146"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNzozMToxNlrOGraMNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxMjoxNjo0OFrOGs7r8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE3MTA2MQ==", "bodyText": "Missing abstract keyword. Btw why is it abstract?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/585#discussion_r448171061", "createdAt": "2020-07-01T07:31:16Z", "author": {"login": "danielezonca"}, "path": "drools/kogito-dmn/src/main/java/org/kie/kogito/dmn/config/AbstractDecisionConfig.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package org.kie.kogito.dmn.config;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.kie.kogito.decision.DecisionEventListenerConfig;\n+\n+public class AbstractDecisionConfig implements org.kie.kogito.decision.DecisionConfig {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e94f6389644f9f7cdc7334fff3d50cb0aa76146"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc2ODQzMg==", "bodyText": "What about make it protected? I don't think we want to expose this constructor with the templates.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/585#discussion_r449768432", "createdAt": "2020-07-04T12:16:48Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/AbstractConfigGenerator.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen;\n+\n+import java.util.Optional;\n+\n+import com.github.javaparser.ast.CompilationUnit;\n+import org.kie.kogito.codegen.di.CDIDependencyInjectionAnnotator;\n+import org.kie.kogito.codegen.di.DependencyInjectionAnnotator;\n+import org.kie.kogito.codegen.di.SpringDependencyInjectionAnnotator;\n+\n+import static com.github.javaparser.StaticJavaParser.parse;\n+\n+public abstract class AbstractConfigGenerator {\n+\n+    private final String packageName;\n+    private final String sourceFilePath;\n+\n+    private final String resourceCdi;\n+    private final String resourceSpring;\n+\n+    private DependencyInjectionAnnotator annotator;\n+\n+    public AbstractConfigGenerator(String packageName, String targetTypeName, String resourceCdi, String resourceSpring) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ddb49ae0fc327b3f344dbf60be5529454a21029"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NjcyMDY3", "url": "https://github.com/kiegroup/kogito-runtimes/pull/585#pullrequestreview-445672067", "createdAt": "2020-07-09T14:28:48Z", "commit": {"oid": "5ddb49ae0fc327b3f344dbf60be5529454a21029"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDoyODo0OFrOGvTv_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDoyODo0OFrOGvTv_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI1OTgzNg==", "bodyText": "@evacchi\nHi. I write this comment here but it is valid for the other templates implementing a statically-defined interface.\nThose templates implement the interface (that it is statically written in java). So everything needed to generate this code is already known/retrievable from the interface itself. What happen with all those templates is that every time a new model has been added, those templates must be manually modified with copy-and-paste code -that is basically error-prone and time consuming IMO.\nI think that everything that is \"mechanically\" derived from java code should be automatically generated - leaving hard-coded template only for complex cases that are not easily created out from existing sources", "url": "https://github.com/kiegroup/kogito-runtimes/pull/585#discussion_r452259836", "createdAt": "2020-07-09T14:28:48Z", "author": {"login": "gitgabrio"}, "path": "kogito-codegen/src/main/resources/class-templates/config/SpringApplicationConfigTemplate.java", "diffHunk": "@@ -0,0 +1,65 @@\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.function.Function;\n+import java.util.function.Supplier;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.drools.core.config.StaticRuleConfig;\n+import org.kie.kogito.dmn.config.StaticDecisionConfig;\n+import org.kie.kogito.process.impl.StaticProcessConfig;\n+\n+@org.springframework.stereotype.Component\n+public class ApplicationConfig implements org.kie.kogito.Config {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ddb49ae0fc327b3f344dbf60be5529454a21029"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a22634830e3c8f993fc7033a2b2ca239fa10042a", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/a22634830e3c8f993fc7033a2b2ca239fa10042a", "committedDate": "2020-07-09T15:16:37Z", "message": "use StaticConfig as superclass in templates"}, "afterCommit": {"oid": "48ef2b5d437f2cf8aeb36f4c46b6d241b34981f2", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/48ef2b5d437f2cf8aeb36f4c46b6d241b34981f2", "committedDate": "2020-07-09T15:58:50Z", "message": "use StaticConfig as superclass in templates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MTE0MTc2", "url": "https://github.com/kiegroup/kogito-runtimes/pull/585#pullrequestreview-446114176", "createdAt": "2020-07-10T04:28:04Z", "commit": {"oid": "abdfd6664bf0a12049a0b8de56145ab73dc417ce"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDoyODowNFrOGvpeFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDo1MTo0NlrOGvpx5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxNTcwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n          \n          \n            \n             * Copyright 2020 Red Hat, Inc. and/or its affiliates.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/585#discussion_r452615702", "createdAt": "2020-07-10T04:28:04Z", "author": {"login": "cristianonicolai"}, "path": "drools/drools-core/src/main/java/org/drools/core/config/AbstractRuleConfig.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abdfd6664bf0a12049a0b8de56145ab73dc417ce"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxNTg3MA==", "bodyText": "just some general code format, to add imports and review the formmating", "url": "https://github.com/kiegroup/kogito-runtimes/pull/585#discussion_r452615870", "createdAt": "2020-07-10T04:28:48Z", "author": {"login": "cristianonicolai"}, "path": "drools/drools-core/src/main/java/org/drools/core/config/AbstractRuleConfig.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.drools.core.config;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.kie.kogito.rules.RuleConfig;\n+import org.kie.kogito.rules.RuleEventListenerConfig;\n+\n+public abstract class AbstractRuleConfig implements RuleConfig {\n+\n+    private final RuleEventListenerConfig ruleEventListenerConfig;\n+\n+    public AbstractRuleConfig(RuleEventListenerConfig ruleEventListenerConfig) {\n+        this.ruleEventListenerConfig = ruleEventListenerConfig;\n+    }\n+\n+    public AbstractRuleConfig(\n+            Iterable<org.kie.kogito.rules.RuleEventListenerConfig> ruleEventListenerConfigs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abdfd6664bf0a12049a0b8de56145ab73dc417ce"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxNjAwNA==", "bodyText": "same for formatting.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/585#discussion_r452616004", "createdAt": "2020-07-10T04:29:27Z", "author": {"login": "cristianonicolai"}, "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcessConfig.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.process.impl;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.function.Supplier;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n+\n+import org.kie.api.event.process.ProcessEventListener;\n+import org.kie.kogito.jobs.JobsService;\n+import org.kie.kogito.process.ProcessConfig;\n+import org.kie.kogito.process.ProcessEventListenerConfig;\n+import org.kie.kogito.process.WorkItemHandlerConfig;\n+import org.kie.kogito.signal.SignalManagerHub;\n+import org.kie.kogito.uow.UnitOfWorkManager;\n+import org.kie.services.signal.DefaultSignalManagerHub;\n+\n+public abstract class AbstractProcessConfig implements ProcessConfig {\n+\n+    private final WorkItemHandlerConfig workItemHandlerConfig;\n+    private final SignalManagerHub signalManagerHub = new DefaultSignalManagerHub();\n+    private final ProcessEventListenerConfig processEventListenerConfig;\n+    private final UnitOfWorkManager unitOfWorkManager;\n+    private final JobsService jobsService;\n+\n+    protected AbstractProcessConfig(\n+            Iterable<org.kie.kogito.process.WorkItemHandlerConfig> workItemHandlerConfig,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abdfd6664bf0a12049a0b8de56145ab73dc417ce"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxNjM5MA==", "bodyText": "use this(new DefaultWorkItemHandlerConfig()... instead?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/585#discussion_r452616390", "createdAt": "2020-07-10T04:31:08Z", "author": {"login": "cristianonicolai"}, "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/StaticProcessConfig.java", "diffHunk": "@@ -31,6 +33,14 @@\n     private final UnitOfWorkManager unitOfWorkManager;\n     private final JobsService jobsService;\n \n+    public StaticProcessConfig() {\n+        this.workItemHandlerConfig = new DefaultWorkItemHandlerConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abdfd6664bf0a12049a0b8de56145ab73dc417ce"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxNjgyOA==", "bodyText": "keep the imports?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/585#discussion_r452616828", "createdAt": "2020-07-10T04:33:27Z", "author": {"login": "cristianonicolai"}, "path": "kogito-codegen/src/main/resources/class-templates/config/ApplicationConfigTemplate.java", "diffHunk": "@@ -1,40 +1,33 @@\n import java.util.Collection;\n import java.util.List;\n import java.util.function.Function;\n+import java.util.function.Supplier;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n \n-import org.kie.kogito.decision.DecisionConfig;\n-import org.kie.kogito.process.ProcessConfig;\n-import org.kie.kogito.rules.RuleConfig;\n-\n+import org.drools.core.config.StaticRuleConfig;\n+import org.kie.kogito.dmn.config.StaticDecisionConfig;\n+import org.kie.kogito.process.impl.StaticProcessConfig;\n \n public class ApplicationConfig implements org.kie.kogito.Config {\n \n-    protected ProcessConfig processConfig;\n-    protected RuleConfig ruleConfig;\n-    protected DecisionConfig decisionConfig;\n+    private org.kie.kogito.process.ProcessConfig processConfig = new StaticProcessConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abdfd6664bf0a12049a0b8de56145ab73dc417ce"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxOTQ0Mw==", "bodyText": "review imports and formatting", "url": "https://github.com/kiegroup/kogito-runtimes/pull/585#discussion_r452619443", "createdAt": "2020-07-10T04:45:46Z", "author": {"login": "cristianonicolai"}, "path": "kogito-codegen/src/main/resources/class-templates/config/CdiDecisionConfigTemplate.java", "diffHunk": "@@ -0,0 +1,24 @@\n+import java.util.Collection;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abdfd6664bf0a12049a0b8de56145ab73dc417ce"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYyMDc3Mg==", "bodyText": "@evacchi isnt register a little more explicit about the intent here? like registering a listener?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/585#discussion_r452620772", "createdAt": "2020-07-10T04:51:46Z", "author": {"login": "cristianonicolai"}, "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/BusinessRuleTaskTest.java", "diffHunk": "@@ -70,7 +70,7 @@ public void testBasicBusinessRuleTaskWithAgendaListener() throws Exception {\n         Application app = generateCode(Collections.singletonList(\"ruletask/BusinessRuleTask.bpmn2\"), Collections.singletonList(\"ruletask/BusinessRuleTask.drl\"));\n         assertThat(app).isNotNull();\n         final AtomicInteger counter = new AtomicInteger();\n-        ((DefaultRuleEventListenerConfig)app.config().rule().ruleEventListeners()).register(new DefaultAgendaEventListener() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abdfd6664bf0a12049a0b8de56145ab73dc417ce"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4a3575b8b8f1b5ccb76798c231bc2d12ae2b2df", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/c4a3575b8b8f1b5ccb76798c231bc2d12ae2b2df", "committedDate": "2020-07-15T07:09:47Z", "message": "KOGITO-2546 Refactor process-related config into generated ProcessConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bef6cd891e8a2417f18d96ee90170ba945d52b8", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/5bef6cd891e8a2417f18d96ee90170ba945d52b8", "committedDate": "2020-07-15T07:11:23Z", "message": "KOGITO-2546 Refactor process/rules/decision-specific config out of ApplicationConfig"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abdfd6664bf0a12049a0b8de56145ab73dc417ce", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/abdfd6664bf0a12049a0b8de56145ab73dc417ce", "committedDate": "2020-07-09T16:06:29Z", "message": "fix compile problem"}, "afterCommit": {"oid": "5bef6cd891e8a2417f18d96ee90170ba945d52b8", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/5bef6cd891e8a2417f18d96ee90170ba945d52b8", "committedDate": "2020-07-15T07:11:23Z", "message": "KOGITO-2546 Refactor process/rules/decision-specific config out of ApplicationConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64336a4764fdc7a663a92f4f38394a91b30ade91", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/64336a4764fdc7a663a92f4f38394a91b30ade91", "committedDate": "2020-07-15T07:27:26Z", "message": "formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NzUxODY3", "url": "https://github.com/kiegroup/kogito-runtimes/pull/585#pullrequestreview-448751867", "createdAt": "2020-07-15T08:47:00Z", "commit": {"oid": "64336a4764fdc7a663a92f4f38394a91b30ade91"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4184, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}