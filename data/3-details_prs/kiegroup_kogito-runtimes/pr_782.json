{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxODk4ODU1", "number": 782, "title": "KOGITO-3421 Fix variable name generation in CloudEvents resource router", "bodyText": "Signed-off-by: Ricardo Zanini zanini@redhat.com\nSee: https://issues.redhat.com/browse/KOGITO-3421\nTested with: kiegroup/kogito-examples#372\nIn this PR we generate a random name for the emiiter variable since in SW engine we are using CE source as the name of the trigger, which is an URI. We can't use that as var name.\nMany thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-09-23T16:26:17Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/782", "merged": true, "mergeCommit": {"oid": "9c2550fd0f46737c2e0583e9e04cdca59dd51988"}, "closed": true, "closedAt": "2020-09-24T09:42:23Z", "author": {"login": "ricardozanini"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLvHEuAH2gAyNDkxODk4ODU1OjBkNzYxN2IyMDQwYzc2NThmZTQ2YzQyZjA4ZDQzMWI3OTM0YmQyZDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdL98K6AFqTQ5NTM5NDY3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0d7617b2040c7658fe46c42f08d431b7934bd2d6", "author": {"user": {"login": "ricardozanini", "name": "Ricardo Zanini"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0d7617b2040c7658fe46c42f08d431b7934bd2d6", "committedDate": "2020-09-23T16:23:40Z", "message": "KOGITO-3421 Fix variable name generation in CloudEvents resource router\n\nSigned-off-by: Ricardo Zanini <zanini@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODUwNzE5", "url": "https://github.com/kiegroup/kogito-runtimes/pull/782#pullrequestreview-494850719", "createdAt": "2020-09-23T16:41:03Z", "commit": {"oid": "0d7617b2040c7658fe46c42f08d431b7934bd2d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1Mzk0MDEy", "url": "https://github.com/kiegroup/kogito-runtimes/pull/782#pullrequestreview-495394012", "createdAt": "2020-09-24T09:39:28Z", "commit": {"oid": "0d7617b2040c7658fe46c42f08d431b7934bd2d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1Mzk0Njcz", "url": "https://github.com/kiegroup/kogito-runtimes/pull/782#pullrequestreview-495394673", "createdAt": "2020-09-24T09:40:19Z", "commit": {"oid": "0d7617b2040c7658fe46c42f08d431b7934bd2d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOTo0MDoxOVrOHXSP9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOTo0MDoxOVrOHXSP9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE3ODI5NQ==", "bodyText": "A UUID may be safer", "url": "https://github.com/kiegroup/kogito-runtimes/pull/782#discussion_r494178295", "createdAt": "2020-09-24T09:40:19Z", "author": {"login": "evacchi"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/process/events/CloudEventsResourceGenerator.java", "diffHunk": "@@ -139,4 +141,8 @@ private void addInjection(final ClassOrInterfaceDeclaration template) {\n         template.findAll(FieldDeclaration.class, fd -> fd.getVariables().get(0).getNameAsString().contains(EMITTER_PREFIX))\n                 .forEach(annotator::withInjection);\n     }\n+\n+    String generateRandomEmitterName() {\n+        return String.join(\"\", EMITTER_PREFIX, Long.toHexString(Double.doubleToLongBits(random.nextLong())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7617b2040c7658fe46c42f08d431b7934bd2d6"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3973, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}