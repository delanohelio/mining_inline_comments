{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NzczMDYz", "number": 739, "title": "KOGITO-3236 DMN validation as part of Kogito CodeGen", "bodyText": "https://issues.redhat.com/browse/KOGITO-3236\n@evacchi could you please comment especially changes in commit e9aa570 which deals only with refactor to use CollectedResource; I seized the chance of this task to refactor to use your newly introduced class.\n/cc @danielezonca", "createdAt": "2020-09-02T12:05:17Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/739", "merged": true, "mergeCommit": {"oid": "d6e007258e7fb98f3b463793c7ab345cb6a7f1e3"}, "closed": true, "closedAt": "2020-09-03T09:31:18Z", "author": {"login": "tarilabs"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdE6Q2jAH2gAyNDc3NzczMDYzOmU5YWE1NzA1YThmMGUwMWNlNzkzZjZjZTllMjRlZDU3YjYzMjEwOWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFMfihAFqTQ4MTYyMTY4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e9aa5705a8f0e01ce793f6ce9e24ed57b632109b", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/e9aa5705a8f0e01ce793f6ce9e24ed57b632109b", "committedDate": "2020-09-02T11:25:50Z", "message": "refactor to use CollectedResource in preparation for validation work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b7f14b9d8614e07817e8b7514a9f3bcb45552d2", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0b7f14b9d8614e07817e8b7514a9f3bcb45552d2", "committedDate": "2020-09-02T11:25:51Z", "message": "plug-in kie-dmn-validation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwODg2Nzg3", "url": "https://github.com/kiegroup/kogito-runtimes/pull/739#pullrequestreview-480886787", "createdAt": "2020-09-02T14:36:20Z", "commit": {"oid": "0b7f14b9d8614e07817e8b7514a9f3bcb45552d2"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDozNjoyMFrOHLyPfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDozODozM1rOHLyWTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjExOTU0OQ==", "bodyText": "so you are dropping DMN Resource altogether in favor of this CollectedResource? ok", "url": "https://github.com/kiegroup/kogito-runtimes/pull/739#discussion_r482119549", "createdAt": "2020-09-02T14:36:20Z", "author": {"login": "evacchi"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java", "diffHunk": "@@ -61,83 +52,29 @@\n import org.kie.kogito.codegen.di.DependencyInjectionAnnotator;\n import org.kie.kogito.codegen.io.CollectedResource;\n import org.kie.kogito.grafana.GrafanaConfigurationWriter;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import static java.util.stream.Collectors.toList;\n-import static org.drools.core.util.IoUtils.readBytesFromInputStream;\n-import static org.kie.api.io.ResourceType.determineResourceType;\n import static org.kie.kogito.codegen.ApplicationGenerator.log;\n import static org.kie.kogito.codegen.ApplicationGenerator.logger;\n \n public class DecisionCodegen extends AbstractGenerator {\n \n+    public static final Logger LOG = LoggerFactory.getLogger(DecisionCodegen.class);\n+\n     public static String STRONGLY_TYPED_CONFIGURATION_KEY = \"kogito.decisions.stronglytyped\";\n+    public static String VALIDATION_CONFIGURATION_KEY = \"kogito.decisions.validation\";\n \n     public static DecisionCodegen ofCollectedResources(Collection<CollectedResource> resources) {\n-        List<DMNResource> dmnResources = resources.stream()\n+        List<CollectedResource> dmnResources = resources.stream()\n                 .filter(r -> r.resource().getResourceType() == ResourceType.DMN)\n-                .flatMap(r -> parseDecisions(r.basePath(), Collections.singletonList(r.resource())).stream())\n                 .collect(toList());\n-        return ofDecisions(dmnResources);\n-    }\n-\n-    @Deprecated\n-    public static DecisionCodegen ofJar(Path... jarPaths) throws IOException {\n-        List<DMNResource> dmnResources = new ArrayList<>();\n-\n-        for (Path jarPath : jarPaths) {\n-            List<Resource> resources = new ArrayList<>();\n-            try (ZipFile zipFile = new ZipFile(jarPath.toFile())) {\n-                Enumeration<? extends ZipEntry> entries = zipFile.entries();\n-                while (entries.hasMoreElements()) {\n-                    ZipEntry entry = entries.nextElement();\n-                    ResourceType resourceType = determineResourceType(entry.getName());\n-                    if (resourceType == ResourceType.DMN) {\n-                        InternalResource resource = new ByteArrayResource(readBytesFromInputStream(zipFile.getInputStream(entry)));\n-                        resource.setResourceType(resourceType);\n-                        resource.setSourcePath(entry.getName());\n-                        resources.add(resource);\n-                    }\n-                }\n-            }\n-            dmnResources.addAll(parseDecisions(jarPath, resources));\n-        }\n-\n-        return ofDecisions(dmnResources);\n+        return new DecisionCodegen(dmnResources);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b7f14b9d8614e07817e8b7514a9f3bcb45552d2"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEyMTI5NQ==", "bodyText": "so basically you are introducing this class and isolating the validation logic there; so at some point we may even be able to move it to a shared \"validation\" phase with other type of assets; is this your intention?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/739#discussion_r482121295", "createdAt": "2020-09-02T14:38:33Z", "author": {"login": "evacchi"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java", "diffHunk": "@@ -149,17 +86,29 @@ private static DecisionCodegen ofDecisions(List<DMNResource> resources) {\n \n     private DecisionContainerGenerator decisionContainerGenerator;\n \n-    private final List<DMNResource> resources;\n+    private final List<CollectedResource> cResources;\n+    private final List<DMNResource> resources = new ArrayList<>();\n     private final List<GeneratedFile> generatedFiles = new ArrayList<>();\n     private AddonsConfig addonsConfig = AddonsConfig.DEFAULT;\n     private ClassLoader projectClassLoader;\n \n-    public DecisionCodegen(List<DMNResource> resources) {\n-        this.resources = resources;\n+    public DecisionCodegen(List<CollectedResource> cResources) {\n+        this.cResources = cResources;\n \n         // set default package name\n         setPackageName(ApplicationGenerator.DEFAULT_PACKAGE_NAME);\n-        this.decisionContainerGenerator = new DecisionContainerGenerator(applicationCanonicalName, resources);\n+        this.decisionContainerGenerator = new DecisionContainerGenerator(applicationCanonicalName, this.cResources);\n+    }\n+\n+    private void init() {\n+        Map<Resource, CollectedResource> r2cr = cResources.stream().collect(Collectors.toMap(CollectedResource::resource, Function.identity()));\n+        DecisionValidation.dmnValidateResources(context(), r2cr.keySet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b7f14b9d8614e07817e8b7514a9f3bcb45552d2"}, "originalPosition": 145}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNjIxNjg3", "url": "https://github.com/kiegroup/kogito-runtimes/pull/739#pullrequestreview-481621687", "createdAt": "2020-09-03T08:40:10Z", "commit": {"oid": "0b7f14b9d8614e07817e8b7514a9f3bcb45552d2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4158, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}