{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MDEwODcy", "number": 357, "title": "KOGITO-1163 Call to Jobs service fails on OpenShift ", "bodyText": "Fix URL without port on service configuration.\nkiegroup/kogito-apps#94", "createdAt": "2020-03-06T20:36:58Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/357", "merged": true, "mergeCommit": {"oid": "0f1300013ef3822c2a1179c317840991a2c5c925"}, "closed": true, "closedAt": "2020-03-12T06:47:40Z", "author": {"login": "tiagodolphine"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLGMZMgH2gAyMzg1MDEwODcyOjYwMDgzZTMxZmIxYWYyOTUyNjBlOTA5NjA4Y2M1MjA4YTIwYmNkODM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMoQcMAH2gAyMzg1MDEwODcyOjZiMjBlNjQ1MzU3NzJkNWY4MmU0NTM0NGEyZmRkNTRmMzlkMGNmOTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "60083e31fb1af295260e909608cc5208a20bcd83", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/60083e31fb1af295260e909608cc5208a20bcd83", "committedDate": "2020-03-06T20:32:13Z", "message": "KOGITO-1163 Call to Jobs service fails on OpenShift - fix url without host"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjU1MzA2", "url": "https://github.com/kiegroup/kogito-runtimes/pull/357#pullrequestreview-370655306", "createdAt": "2020-03-06T22:05:20Z", "commit": {"oid": "60083e31fb1af295260e909608cc5208a20bcd83"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNzg0MTg1", "url": "https://github.com/kiegroup/kogito-runtimes/pull/357#pullrequestreview-370784185", "createdAt": "2020-03-07T19:22:39Z", "commit": {"oid": "60083e31fb1af295260e909608cc5208a20bcd83"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxOToyMjo0MFrOFzRVSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxOToyMjo0MFrOFzRVSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMwNTY3NQ==", "bodyText": "Wouldn't it have more sense to thrown an exception in case jobServiceUrl is null?\nFrom my point of view it is not valid value and we should fail fast.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/357#discussion_r389305675", "createdAt": "2020-03-07T19:22:40Z", "author": {"login": "sutaakar"}, "path": "addons/jobs/jobs-management-common/src/main/java/org/kie/kogito/jobs/management/RestJobsService.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.jobs.management;\n+\n+import java.net.URI;\n+import java.util.Objects;\n+\n+import org.kie.kogito.jobs.JobsService;\n+import org.kie.kogito.jobs.ProcessInstanceJobDescription;\n+import org.kie.kogito.jobs.api.URIBuilder;\n+\n+public abstract class RestJobsService implements JobsService {\n+\n+    public static final String JOBS_PATH = \"/jobs\";\n+\n+    private URI jobsServiceUri;\n+    private String callbackEndpoint;\n+\n+    public RestJobsService(String jobServiceUrl, String callbackEndpoint) {\n+        this.jobsServiceUri = Objects.nonNull(jobServiceUrl) ? buildJobsServiceURI(jobServiceUrl) : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60083e31fb1af295260e909608cc5208a20bcd83"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNzg0MjA4", "url": "https://github.com/kiegroup/kogito-runtimes/pull/357#pullrequestreview-370784208", "createdAt": "2020-03-07T19:23:04Z", "commit": {"oid": "60083e31fb1af295260e909608cc5208a20bcd83"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e65165b6b9be74e22033635a71bcbcba45b93f12", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/e65165b6b9be74e22033635a71bcbcba45b93f12", "committedDate": "2020-03-10T19:25:40Z", "message": "Adding unit tests in job management modules"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNDU3MDcy", "url": "https://github.com/kiegroup/kogito-runtimes/pull/357#pullrequestreview-372457072", "createdAt": "2020-03-11T03:35:50Z", "commit": {"oid": "e65165b6b9be74e22033635a71bcbcba45b93f12"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzozNTo1MVrOF0oN7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzo0MDo0MVrOF0oSGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcyOTE5Nw==", "bodyText": "test scope?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/357#discussion_r390729197", "createdAt": "2020-03-11T03:35:51Z", "author": {"login": "cristianonicolai"}, "path": "addons/jobs/jobs-api/pom.xml", "diffHunk": "@@ -11,6 +11,18 @@\n   <name>Jobs API</name>\n   <description>Jobs API used by both service and client</description>\n \n+  <dependencies>\n+    <dependency>\n+      <groupId>org.junit.jupiter</groupId>\n+      <artifactId>junit-jupiter</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.assertj</groupId>\n+      <artifactId>assertj-core</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e65165b6b9be74e22033635a71bcbcba45b93f12"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcyOTcxNA==", "bodyText": "maybe just do import static here as well", "url": "https://github.com/kiegroup/kogito-runtimes/pull/357#discussion_r390729714", "createdAt": "2020-03-11T03:38:18Z", "author": {"login": "cristianonicolai"}, "path": "addons/jobs/jobs-management-quarkus-addon/src/test/java/org/kie/kogito/jobs/management/quarkus/VertxJobsServiceTest.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.jobs.management.quarkus;\n+\n+import javax.enterprise.inject.Instance;\n+\n+import io.vertx.core.Handler;\n+import io.vertx.core.Vertx;\n+import io.vertx.ext.web.client.HttpRequest;\n+import io.vertx.ext.web.client.WebClient;\n+import org.assertj.core.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.kie.kogito.jobs.ExactExpirationTime;\n+import org.kie.kogito.jobs.ProcessInstanceJobDescription;\n+import org.kie.kogito.jobs.ProcessJobDescription;\n+import org.kie.kogito.jobs.api.Job;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.Mockito.lenient;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+@ExtendWith(MockitoExtension.class)\n+public class VertxJobsServiceTest {\n+\n+    public static final String CALLBACK_URL = \"http://localhost\";\n+    public static final String JOB_SERVICE_URL = \"http://localhost:8085\";\n+\n+    private VertxJobsService tested;\n+\n+    @Mock\n+    private Vertx vertx;\n+\n+    @Mock\n+    private WebClient webClient;\n+\n+    @Mock\n+    private Instance instance;\n+\n+    @BeforeEach\n+    public void setUp() {\n+        when(instance.isResolvable()).thenReturn(true);\n+        when(instance.get()).thenReturn(webClient);\n+\n+        tested = new VertxJobsService(JOB_SERVICE_URL, CALLBACK_URL, vertx, instance);\n+        tested.initialize();\n+    }\n+\n+    @Test\n+    void scheduleProcessJob() {\n+        ProcessJobDescription processJobDescription = ProcessJobDescription.of(ExactExpirationTime.now(),\n+                                                                               1,\n+                                                                               \"processId\");\n+        Assertions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e65165b6b9be74e22033635a71bcbcba45b93f12"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcyOTk1NQ==", "bodyText": "if you need to declare a depency version, that should be done via depencymanagement in the root pom.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/357#discussion_r390729955", "createdAt": "2020-03-11T03:39:13Z", "author": {"login": "cristianonicolai"}, "path": "addons/jobs/jobs-management-springboot-addon/pom.xml", "diffHunk": "@@ -53,5 +56,28 @@\n       <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>\n       <scope>provided</scope>\n     </dependency>\n+\n+    <!-- Test -->\n+    <dependency>\n+      <groupId>org.junit.jupiter</groupId>\n+      <artifactId>junit-jupiter</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.mockito</groupId>\n+      <artifactId>mockito-junit-jupiter</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.assertj</groupId>\n+      <artifactId>assertj-core</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>commons-logging</groupId>\n+      <artifactId>commons-logging</artifactId>\n+      <version>1.2</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e65165b6b9be74e22033635a71bcbcba45b93f12"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczMDA2Ng==", "bodyText": "same here about using import static instead.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/357#discussion_r390730066", "createdAt": "2020-03-11T03:39:45Z", "author": {"login": "cristianonicolai"}, "path": "addons/jobs/jobs-management-springboot-addon/src/test/java/org/kie/kogito/jobs/management/springboot/SpringRestJobsServiceTest.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.jobs.management.springboot;\n+\n+import java.net.URI;\n+\n+import org.assertj.core.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.kie.kogito.jobs.ExactExpirationTime;\n+import org.kie.kogito.jobs.ProcessInstanceJobDescription;\n+import org.kie.kogito.jobs.ProcessJobDescription;\n+import org.kie.kogito.jobs.api.Job;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.client.RestTemplate;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+@ExtendWith(MockitoExtension.class)\n+public class SpringRestJobsServiceTest {\n+\n+    public static final String CALLBACK_URL = \"http://localhost\";\n+    public static final String JOB_SERVICE_URL = \"http://localhost:8085\";\n+\n+    private SpringRestJobsService tested;\n+\n+    @Mock\n+    private RestTemplate restTemplate;\n+\n+    @BeforeEach\n+    void setUp() {\n+        this.tested = new SpringRestJobsService(JOB_SERVICE_URL, CALLBACK_URL, restTemplate);\n+        tested.initialize();\n+    }\n+\n+    @Test\n+    void scheduleProcessJob() {\n+        ProcessJobDescription processJobDescription = ProcessJobDescription.of(ExactExpirationTime.now(),\n+                                                                               1,\n+                                                                               \"processId\");\n+        Assertions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e65165b6b9be74e22033635a71bcbcba45b93f12"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczMDI2NA==", "bodyText": "should it be added before quarkus and springboot?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/357#discussion_r390730264", "createdAt": "2020-03-11T03:40:41Z", "author": {"login": "cristianonicolai"}, "path": "addons/jobs/pom.xml", "diffHunk": "@@ -13,5 +13,6 @@\n     <module>jobs-api</module>\n     <module>jobs-management-quarkus-addon</module>\n     <module>jobs-management-springboot-addon</module>\n+    <module>jobs-management-common</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e65165b6b9be74e22033635a71bcbcba45b93f12"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "702d1a9f0b558fa447117441d4583e4d127edbbe", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/702d1a9f0b558fa447117441d4583e4d127edbbe", "committedDate": "2020-03-11T13:16:18Z", "message": "Applying PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNzU4Mjkw", "url": "https://github.com/kiegroup/kogito-runtimes/pull/357#pullrequestreview-372758290", "createdAt": "2020-03-11T13:31:41Z", "commit": {"oid": "702d1a9f0b558fa447117441d4583e4d127edbbe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b20e64535772d5f82e45344a2fdd54f39d0cf93", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/6b20e64535772d5f82e45344a2fdd54f39d0cf93", "committedDate": "2020-03-11T14:47:20Z", "message": "Fix some sonar issues"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3763, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}