{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1NDc1MTk0", "number": 759, "title": "KOGITO-3325 DMN hot reload manage accessor cache when stronglytyped", "bodyText": "https://issues.redhat.com/browse/KOGITO-3325", "createdAt": "2020-09-11T21:28:19Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/759", "merged": true, "mergeCommit": {"oid": "96e47c208aa97738695546cb7c1657fefadebb6b"}, "closed": true, "closedAt": "2020-09-15T06:41:42Z", "author": {"login": "tarilabs"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdH8QszgH2gAyNDg1NDc1MTk0OjhjNDkwMmRlYzFhNTMyOWI2MmJlMmVkZmI1OGJjYTE2MjdlNGVhNTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJB91gAFqTQ4ODM2NzM3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8c4902dec1a5329b62be2edfb58bca1627e4ea55", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/8c4902dec1a5329b62be2edfb58bca1627e4ea55", "committedDate": "2020-09-11T21:27:15Z", "message": "reproducer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20b243758fde8de979cf23be2e0efd3c42b8f4d8", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/20b243758fde8de979cf23be2e0efd3c42b8f4d8", "committedDate": "2020-09-11T21:27:21Z", "message": "fix."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3253398e4c6048d004c8ddeaa380cb9eadabd411", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/3253398e4c6048d004c8ddeaa380cb9eadabd411", "committedDate": "2020-09-11T21:29:15Z", "message": "."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d28dc450f80e45ba8b15486b653c2d8e8af6a69", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0d28dc450f80e45ba8b15486b653c2d8e8af6a69", "committedDate": "2020-09-11T21:30:06Z", "message": "."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NDYyODY4", "url": "https://github.com/kiegroup/kogito-runtimes/pull/759#pullrequestreview-487462868", "createdAt": "2020-09-14T06:57:15Z", "commit": {"oid": "0d28dc450f80e45ba8b15486b653c2d8e8af6a69"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNjo1NzoxNVrOHRGN0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNjo1ODoxM1rOHRGPWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY4OTY4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final static QuarkusDevModeTest test = new QuarkusDevModeTest().setArchiveProducer(\n          \n          \n            \n                        new Supplier<JavaArchive>() {\n          \n          \n            \n            \n          \n          \n            \n                            @Override\n          \n          \n            \n                            public JavaArchive get() {\n          \n          \n            \n                                JavaArchive ja = ShrinkWrap.create(JavaArchive.class)\n          \n          \n            \n                                        .addAsResource(\"application.properties.stronglytyped\", \"/application.properties\")\n          \n          \n            \n                                        .addAsResource(\"TrafficViolation.txt\", DMN_RESOURCE_FILE);\n          \n          \n            \n                                return ja;\n          \n          \n            \n                            }\n          \n          \n            \n                        });\n          \n          \n            \n                final static QuarkusDevModeTest test = new QuarkusDevModeTest().setArchiveProducer(\n          \n          \n            \n                        () -> ShrinkWrap.create(JavaArchive.class)\n          \n          \n            \n                                        .addAsResource(\"application.properties.stronglytyped\", \"/application.properties\")\n          \n          \n            \n                                        .addAsResource(\"TrafficViolation.txt\", DMN_RESOURCE_FILE));", "url": "https://github.com/kiegroup/kogito-runtimes/pull/759#discussion_r487689683", "createdAt": "2020-09-14T06:57:15Z", "author": {"login": "danielezonca"}, "path": "kogito-quarkus-extension/integration-test-hot-reload/src/test/java/io/quarkus/it/kogito/decision/SimpleModifyHotReloadTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.quarkus.it.kogito.decision;\n+\n+import java.util.function.Supplier;\n+\n+import io.quarkus.test.QuarkusDevModeTest;\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+import io.restassured.response.ValidatableResponse;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.Matchers.is;\n+\n+public class SimpleModifyHotReloadTest {\n+\n+    static {\n+        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();\n+    }\n+\n+    private static final String PACKAGE = \"io.quarkus.it.kogito.decision\";\n+    private static final String RESOURCE_FILE_PATH = PACKAGE.replace( '.', '/' );\n+    private static final String DMN_RESOURCE_FILE = RESOURCE_FILE_PATH + \"/TrafficViolation.dmn\";\n+\n+    private static final String HTTP_TEST_PORT = \"65535\";\n+\n+    @RegisterExtension\n+    final static QuarkusDevModeTest test = new QuarkusDevModeTest().setArchiveProducer(\n+            new Supplier<JavaArchive>() {\n+\n+                @Override\n+                public JavaArchive get() {\n+                    JavaArchive ja = ShrinkWrap.create(JavaArchive.class)\n+                            .addAsResource(\"application.properties.stronglytyped\", \"/application.properties\")\n+                            .addAsResource(\"TrafficViolation.txt\", DMN_RESOURCE_FILE);\n+                    return ja;\n+                }\n+            });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d28dc450f80e45ba8b15486b653c2d8e8af6a69"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY5MDA3NA==", "bodyText": "What about a comment to explain this code?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/759#discussion_r487690074", "createdAt": "2020-09-14T06:58:13Z", "author": {"login": "danielezonca"}, "path": "drools/kogito-dmn/src/main/java/org/kie/kogito/dmn/DMNKogito.java", "diffHunk": "@@ -60,6 +61,7 @@ public static DMNRuntime createGenericDMNRuntime(Reader... readers) {\n \n     public static DMNRuntime createGenericDMNRuntime(Function<String, KieRuntimeFactory> kiePMMLRuntimeFactoryFunction, Reader... readers) {\n         List<Resource> resources = Stream.of(readers).map(ReaderResource::new).collect(Collectors.toList());\n+        EvalHelper.clearGenericAccessorCache();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d28dc450f80e45ba8b15486b653c2d8e8af6a69"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NTMzODAx", "url": "https://github.com/kiegroup/kogito-runtimes/pull/759#pullrequestreview-487533801", "createdAt": "2020-09-14T08:34:02Z", "commit": {"oid": "0d28dc450f80e45ba8b15486b653c2d8e8af6a69"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68f510efb916460503f884e004b7ce4435e5d8f5", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/68f510efb916460503f884e004b7ce4435e5d8f5", "committedDate": "2020-09-14T11:04:52Z", "message": "."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MzY3Mzcw", "url": "https://github.com/kiegroup/kogito-runtimes/pull/759#pullrequestreview-488367370", "createdAt": "2020-09-15T06:40:00Z", "commit": {"oid": "68f510efb916460503f884e004b7ce4435e5d8f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3939, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}