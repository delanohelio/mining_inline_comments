{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MjQwMzM3", "number": 804, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOToxNjoxM1rOEqOsoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOTo1Mjo0MVrOEqPnvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzE2NDQ4OnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOToxNjoxM1rOHcUS2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOToxNjoxM1rOHcUS2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ1NDY4Mw==", "bodyText": "What about rename the method to something more explicit like loadModelsAndValidate / loadAndValidate / parseModelsAndValidate?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/804#discussion_r499454683", "createdAt": "2020-10-05T09:16:13Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java", "diffHunk": "@@ -102,11 +102,15 @@ public DecisionCodegen(List<CollectedResource> cResources) {\n \n     private void init() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3dce5303d4c26cfbc1d020e3dbfd5bc65625bc0"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzMxNTgxOnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionValidation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOTo1Mjo0MVrOHcVskw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOTo1Mjo0MVrOHcVskw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3NzY1MQ==", "bodyText": "What about rename it to something like extractMsgPrefix / getMsgPrefix or similar?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/804#discussion_r499477651", "createdAt": "2020-10-05T09:52:41Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionValidation.java", "diffHunk": "@@ -71,21 +82,21 @@ static void dmnValidateResources(GeneratorContext context, Collection<Resource>\n                                                                                            .map(DecisionValidation::resourceToReader)\n                                                                                            .collect(Collectors.toList())\n                                                                                            .toArray(new Reader[]{}));\n-        logValidationMessages(schemaModelValidations);\n-        List<DMNMessage> errors = schemaModelValidations.stream().filter(m -> m.getLevel() == Level.ERROR).collect(Collectors.toList());\n-        if (!errors.isEmpty()) {\n-            if (validateOption != ValidationOption.IGNORE) {\n-                StringBuilder sb = new StringBuilder(\"DMN Validation schema and model validation contained errors\").append(\"\\n\");\n-                sb.append(\"You may configure \").append(DecisionCodegen.VALIDATION_CONFIGURATION_KEY).append(\"=IGNORE to ignore validation errors\").append(\"\\n\");\n-                sb.append(\"DMN Validation errors:\").append(\"\\n\");\n-                sb.append(errors.stream().map(DMNMessage::getMessage).collect(Collectors.joining(\",\\n\")));\n-                LOG.error(sb.toString());\n-                throw new RuntimeException(sb.toString());\n-            } else {\n-                LOG.warn(\"DMN Validation encountered errors but validation configuration was set to IGNORE, continuing with no blocking error.\");\n-                return;\n+        logValidationMessages(schemaModelValidations, DecisionValidation::validateMsgPrefixer, DMNMessage::getText);\n+        processMessagesHandleErrors(validateOption, schemaModelValidations);\n+    }\n+\n+    private static String validateMsgPrefixer(DMNMessage msg) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3dce5303d4c26cfbc1d020e3dbfd5bc65625bc0"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4825, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}