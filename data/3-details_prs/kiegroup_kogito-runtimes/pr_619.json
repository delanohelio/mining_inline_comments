{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NjQ4MDcw", "number": 619, "title": "KOGITO-2207 Review AbstractProcessInstance to use WorkflowProcessInst\u2026", "bodyText": "\u2026ance interface avoiding multiples casts\nSmall refactor with a series of improvements to avoid multiple casts in AbstractProcessInstance. As it depends on WorkflowProcessInstance anyway. Moved some method to interface to also avoid dpendency on Impl class.", "createdAt": "2020-07-09T06:31:55Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/619", "merged": true, "mergeCommit": {"oid": "a95c9a4b30d8bbc5c7ab5288a74bff31947c1021"}, "closed": true, "closedAt": "2020-07-13T04:39:40Z", "author": {"login": "cristianonicolai"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczJdJUAFqTQ0NTMzMjQ0MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABczeD1zAFqTQ0NjE2MzAzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MzMyNDQw", "url": "https://github.com/kiegroup/kogito-runtimes/pull/619#pullrequestreview-445332440", "createdAt": "2020-07-09T06:50:35Z", "commit": {"oid": "1b575d01dbe0f9fd61fb08dd534751fdb8b885ea"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNjo1MDozNlrOGvD5Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNjo1NDo1MFrOGvEA7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAwMDAwNw==", "bodyText": "I prefer tiger \ud83e\udd23", "url": "https://github.com/kiegroup/kogito-runtimes/pull/619#discussion_r452000007", "createdAt": "2020-07-09T06:50:36Z", "author": {"login": "ruromero"}, "path": "jbpm/jbpm-flow/src/main/java/org/jbpm/process/instance/ProcessInstance.java", "diffHunk": "@@ -44,14 +44,14 @@\n     void setState(int state, String outcome, Object faultData);\n \n     void setErrorState(NodeInstance nodeInstanceInError, Exception e);\n-\n+    \n     void setKnowledgeRuntime(InternalKnowledgeRuntime kruntime);\n \n     InternalKnowledgeRuntime getKnowledgeRuntime();\n \n     void start();\n \n-    void start(String tigger);\n+    void start(String trigger);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b575d01dbe0f9fd61fb08dd534751fdb8b885ea"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAwMTAxMg==", "bodyText": "why not just getByDefinitionId as it is the NodeInstanceContainer it can be assumed that the get will return a NodeInstance\nThe same could apply to the method above and call it just get", "url": "https://github.com/kiegroup/kogito-runtimes/pull/619#discussion_r452001012", "createdAt": "2020-07-09T06:52:42Z", "author": {"login": "ruromero"}, "path": "jbpm/jbpm-flow/src/main/java/org/jbpm/workflow/instance/NodeInstanceContainer.java", "diffHunk": "@@ -35,21 +37,39 @@\n     void addNodeInstance(NodeInstance nodeInstance);\n \n     void removeNodeInstance(NodeInstance nodeInstance);\n-    \n+\n     NodeContainer getNodeContainer();\n-    \n+\n     void nodeInstanceCompleted(NodeInstance nodeInstance, String outType);\n-    \n+\n     int getState();\n-    \n+\n     void setState(int state);\n-    \n+\n     int getLevelForNode(String uniqueID);\n-    \n-    void setCurrentLevel(int level);\n-    \n+\n     int getCurrentLevel();\n-    \n+\n+    void setCurrentLevel(int level);\n+\n     NodeInstance getNodeInstance(String nodeInstanceId, boolean recursive);\n \n+    default NodeInstance getNodeInstanceByNodeDefinitionId(final String nodeDefinitionId, NodeContainer nodeContainer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b575d01dbe0f9fd61fb08dd534751fdb8b885ea"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAwMjAyOQ==", "bodyText": "Why is this needed? Can you add a unit test to support it?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/619#discussion_r452002029", "createdAt": "2020-07-09T06:54:50Z", "author": {"login": "ruromero"}, "path": "jbpm/jbpm-flow/src/main/java/org/jbpm/workflow/instance/impl/WorkflowProcessInstanceImpl.java", "diffHunk": "@@ -380,6 +359,10 @@ public void setState(final int state, String outcome, Object faultData) {\n     @Override\n     public void setState(final int state, String outcome) {\n         // TODO move most of this to ProcessInstanceImpl\n+        if (state != ProcessInstance.STATE_ERROR) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b575d01dbe0f9fd61fb08dd534751fdb8b885ea"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9d48ea1049ea48f7905972a69cd318d02e16f21", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/b9d48ea1049ea48f7905972a69cd318d02e16f21", "committedDate": "2020-07-09T16:34:43Z", "message": "KOGITO-2207 Review AbstractProcessInstance to use WorkflowProcessInstance interface avoiding multiples casts"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b575d01dbe0f9fd61fb08dd534751fdb8b885ea", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/1b575d01dbe0f9fd61fb08dd534751fdb8b885ea", "committedDate": "2020-07-09T06:20:16Z", "message": "KOGITO-2207 Review AbstractProcessInstance to use WorkflowProcessInstance interface avoiding multiples casts"}, "afterCommit": {"oid": "b9d48ea1049ea48f7905972a69cd318d02e16f21", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/b9d48ea1049ea48f7905972a69cd318d02e16f21", "committedDate": "2020-07-09T16:34:43Z", "message": "KOGITO-2207 Review AbstractProcessInstance to use WorkflowProcessInstance interface avoiding multiples casts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODcwMzkx", "url": "https://github.com/kiegroup/kogito-runtimes/pull/619#pullrequestreview-445870391", "createdAt": "2020-07-09T18:33:31Z", "commit": {"oid": "b9d48ea1049ea48f7905972a69cd318d02e16f21"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MTYzMDMy", "url": "https://github.com/kiegroup/kogito-runtimes/pull/619#pullrequestreview-446163032", "createdAt": "2020-07-10T06:57:34Z", "commit": {"oid": "b9d48ea1049ea48f7905972a69cd318d02e16f21"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4220, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}