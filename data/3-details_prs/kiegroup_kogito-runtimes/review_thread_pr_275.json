{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMDEzODg3", "number": 275, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNToyNjozMVrODWR_Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNToyNjozMVrODWR_Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0Njg5OTk0OnYy", "diffSide": "RIGHT", "path": "kogito-maven-plugin/src/main/java/org/kie/kogito/maven/plugin/ProcessClassesMojo.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNToyNjozMVrOFa8tmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDoxOToxNVrOFbYPjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgwMjAxMQ==", "bodyText": "SonarCloud has noticed:\nFrom drools:\n@deprecated will be remove after the next release, please create an instance yourself\npublic static JavaCompilerFactory getInstance() {\n\nThough it has been there for ~9 years or even more, so not sure if it is relevant. But it would be better to not use deprecated methods in new code.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/275#discussion_r363802011", "createdAt": "2020-01-07T15:26:31Z", "author": {"login": "MarianMacik"}, "path": "kogito-maven-plugin/src/main/java/org/kie/kogito/maven/plugin/ProcessClassesMojo.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.maven.plugin;\n+\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.lang.reflect.Type;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.apache.maven.plugin.MojoExecutionException;\n+import org.apache.maven.plugin.MojoFailureException;\n+import org.apache.maven.plugins.annotations.LifecyclePhase;\n+import org.apache.maven.plugins.annotations.Mojo;\n+import org.apache.maven.plugins.annotations.Parameter;\n+import org.apache.maven.plugins.annotations.ResolutionScope;\n+import org.apache.maven.project.MavenProject;\n+import org.drools.compiler.commons.jci.compilers.CompilationResult;\n+import org.drools.compiler.commons.jci.compilers.JavaCompiler;\n+import org.drools.compiler.commons.jci.compilers.JavaCompilerFactory;\n+import org.drools.compiler.commons.jci.compilers.JavaCompilerSettings;\n+import org.drools.compiler.compiler.io.memory.MemoryFileSystem;\n+import org.drools.compiler.rule.builder.dialect.java.JavaDialectConfiguration;\n+import org.kie.kogito.Model;\n+import org.kie.kogito.codegen.ApplicationGenerator;\n+import org.kie.kogito.codegen.GeneratedFile;\n+import org.kie.kogito.codegen.process.persistence.PersistenceGenerator;\n+import org.kie.kogito.codegen.process.persistence.proto.ReflectionProtoGenerator;\n+import org.kie.kogito.process.ProcessInstancesFactory;\n+import org.reflections.Reflections;\n+import org.reflections.util.ConfigurationBuilder;\n+\n+@Mojo(name = \"process-model-classes\",\n+      requiresDependencyResolution = ResolutionScope.RUNTIME,\n+      requiresProject = true,\n+      defaultPhase = LifecyclePhase.PROCESS_CLASSES)\n+public class ProcessClassesMojo extends AbstractKieMojo {\n+    \n+    @SuppressWarnings(\"deprecation\")\n+    private static final JavaCompiler JAVA_COMPILER = JavaCompilerFactory.getInstance().loadCompiler(JavaDialectConfiguration.CompilerType.NATIVE, \"1.8\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b37b83a942e2ccdb597cf882cdfa76e977144ea"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE5Nzc5Nw==", "bodyText": "@MarianMacik updated, hope this time will be good", "url": "https://github.com/kiegroup/kogito-runtimes/pull/275#discussion_r364197797", "createdAt": "2020-01-08T12:02:20Z", "author": {"login": "mswiderski"}, "path": "kogito-maven-plugin/src/main/java/org/kie/kogito/maven/plugin/ProcessClassesMojo.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.maven.plugin;\n+\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.lang.reflect.Type;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.apache.maven.plugin.MojoExecutionException;\n+import org.apache.maven.plugin.MojoFailureException;\n+import org.apache.maven.plugins.annotations.LifecyclePhase;\n+import org.apache.maven.plugins.annotations.Mojo;\n+import org.apache.maven.plugins.annotations.Parameter;\n+import org.apache.maven.plugins.annotations.ResolutionScope;\n+import org.apache.maven.project.MavenProject;\n+import org.drools.compiler.commons.jci.compilers.CompilationResult;\n+import org.drools.compiler.commons.jci.compilers.JavaCompiler;\n+import org.drools.compiler.commons.jci.compilers.JavaCompilerFactory;\n+import org.drools.compiler.commons.jci.compilers.JavaCompilerSettings;\n+import org.drools.compiler.compiler.io.memory.MemoryFileSystem;\n+import org.drools.compiler.rule.builder.dialect.java.JavaDialectConfiguration;\n+import org.kie.kogito.Model;\n+import org.kie.kogito.codegen.ApplicationGenerator;\n+import org.kie.kogito.codegen.GeneratedFile;\n+import org.kie.kogito.codegen.process.persistence.PersistenceGenerator;\n+import org.kie.kogito.codegen.process.persistence.proto.ReflectionProtoGenerator;\n+import org.kie.kogito.process.ProcessInstancesFactory;\n+import org.reflections.Reflections;\n+import org.reflections.util.ConfigurationBuilder;\n+\n+@Mojo(name = \"process-model-classes\",\n+      requiresDependencyResolution = ResolutionScope.RUNTIME,\n+      requiresProject = true,\n+      defaultPhase = LifecyclePhase.PROCESS_CLASSES)\n+public class ProcessClassesMojo extends AbstractKieMojo {\n+    \n+    @SuppressWarnings(\"deprecation\")\n+    private static final JavaCompiler JAVA_COMPILER = JavaCompilerFactory.getInstance().loadCompiler(JavaDialectConfiguration.CompilerType.NATIVE, \"1.8\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgwMjAxMQ=="}, "originalCommit": {"oid": "2b37b83a942e2ccdb597cf882cdfa76e977144ea"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI0NTY2OQ==", "bodyText": "In the end Mario decided to make it a singleton using enum and leave that method, so you can revert back. Sorry for the confusion :) But at least we dismissed the deprecation which shouldn't have been there.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/275#discussion_r364245669", "createdAt": "2020-01-08T14:03:19Z", "author": {"login": "MarianMacik"}, "path": "kogito-maven-plugin/src/main/java/org/kie/kogito/maven/plugin/ProcessClassesMojo.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.maven.plugin;\n+\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.lang.reflect.Type;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.apache.maven.plugin.MojoExecutionException;\n+import org.apache.maven.plugin.MojoFailureException;\n+import org.apache.maven.plugins.annotations.LifecyclePhase;\n+import org.apache.maven.plugins.annotations.Mojo;\n+import org.apache.maven.plugins.annotations.Parameter;\n+import org.apache.maven.plugins.annotations.ResolutionScope;\n+import org.apache.maven.project.MavenProject;\n+import org.drools.compiler.commons.jci.compilers.CompilationResult;\n+import org.drools.compiler.commons.jci.compilers.JavaCompiler;\n+import org.drools.compiler.commons.jci.compilers.JavaCompilerFactory;\n+import org.drools.compiler.commons.jci.compilers.JavaCompilerSettings;\n+import org.drools.compiler.compiler.io.memory.MemoryFileSystem;\n+import org.drools.compiler.rule.builder.dialect.java.JavaDialectConfiguration;\n+import org.kie.kogito.Model;\n+import org.kie.kogito.codegen.ApplicationGenerator;\n+import org.kie.kogito.codegen.GeneratedFile;\n+import org.kie.kogito.codegen.process.persistence.PersistenceGenerator;\n+import org.kie.kogito.codegen.process.persistence.proto.ReflectionProtoGenerator;\n+import org.kie.kogito.process.ProcessInstancesFactory;\n+import org.reflections.Reflections;\n+import org.reflections.util.ConfigurationBuilder;\n+\n+@Mojo(name = \"process-model-classes\",\n+      requiresDependencyResolution = ResolutionScope.RUNTIME,\n+      requiresProject = true,\n+      defaultPhase = LifecyclePhase.PROCESS_CLASSES)\n+public class ProcessClassesMojo extends AbstractKieMojo {\n+    \n+    @SuppressWarnings(\"deprecation\")\n+    private static final JavaCompiler JAVA_COMPILER = JavaCompilerFactory.getInstance().loadCompiler(JavaDialectConfiguration.CompilerType.NATIVE, \"1.8\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgwMjAxMQ=="}, "originalCommit": {"oid": "2b37b83a942e2ccdb597cf882cdfa76e977144ea"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI1MzA3MQ==", "bodyText": "reverted", "url": "https://github.com/kiegroup/kogito-runtimes/pull/275#discussion_r364253071", "createdAt": "2020-01-08T14:19:15Z", "author": {"login": "mswiderski"}, "path": "kogito-maven-plugin/src/main/java/org/kie/kogito/maven/plugin/ProcessClassesMojo.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.maven.plugin;\n+\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.lang.reflect.Type;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.apache.maven.plugin.MojoExecutionException;\n+import org.apache.maven.plugin.MojoFailureException;\n+import org.apache.maven.plugins.annotations.LifecyclePhase;\n+import org.apache.maven.plugins.annotations.Mojo;\n+import org.apache.maven.plugins.annotations.Parameter;\n+import org.apache.maven.plugins.annotations.ResolutionScope;\n+import org.apache.maven.project.MavenProject;\n+import org.drools.compiler.commons.jci.compilers.CompilationResult;\n+import org.drools.compiler.commons.jci.compilers.JavaCompiler;\n+import org.drools.compiler.commons.jci.compilers.JavaCompilerFactory;\n+import org.drools.compiler.commons.jci.compilers.JavaCompilerSettings;\n+import org.drools.compiler.compiler.io.memory.MemoryFileSystem;\n+import org.drools.compiler.rule.builder.dialect.java.JavaDialectConfiguration;\n+import org.kie.kogito.Model;\n+import org.kie.kogito.codegen.ApplicationGenerator;\n+import org.kie.kogito.codegen.GeneratedFile;\n+import org.kie.kogito.codegen.process.persistence.PersistenceGenerator;\n+import org.kie.kogito.codegen.process.persistence.proto.ReflectionProtoGenerator;\n+import org.kie.kogito.process.ProcessInstancesFactory;\n+import org.reflections.Reflections;\n+import org.reflections.util.ConfigurationBuilder;\n+\n+@Mojo(name = \"process-model-classes\",\n+      requiresDependencyResolution = ResolutionScope.RUNTIME,\n+      requiresProject = true,\n+      defaultPhase = LifecyclePhase.PROCESS_CLASSES)\n+public class ProcessClassesMojo extends AbstractKieMojo {\n+    \n+    @SuppressWarnings(\"deprecation\")\n+    private static final JavaCompiler JAVA_COMPILER = JavaCompilerFactory.getInstance().loadCompiler(JavaDialectConfiguration.CompilerType.NATIVE, \"1.8\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgwMjAxMQ=="}, "originalCommit": {"oid": "2b37b83a942e2ccdb597cf882cdfa76e977144ea"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 266, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}