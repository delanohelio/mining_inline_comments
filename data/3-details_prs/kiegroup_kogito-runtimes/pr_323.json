{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MjQ0OTE1", "number": 323, "title": "KOGITO-893: Use Singleton DataSource in processes+rules", "bodyText": "We have introduced the SingletonStore: a data store for single-values. In this PR we use it for workflow-generated rule units; i.e. rule units that transparently \"see\" process variables", "createdAt": "2020-02-19T16:04:00Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/323", "merged": true, "mergeCommit": {"oid": "db1efc49720e4ae45e46df2005a2c1e6bdc878a5"}, "closed": true, "closedAt": "2020-02-25T08:45:50Z", "author": {"login": "evacchi"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGMi6EgH2gAyMzc3MjQ0OTE1OjIzMmUyOWRiOWU5ZDc0N2RiYjZiYmQyZGVmMGE5N2M2NmEzNzQ0NTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHtN-ugH2gAyMzc3MjQ0OTE1Ojk1MzY0ZmJiNDg0NDJlNGMyNzAyYTNmMTA1N2Y5MDlmYjg3MGJmNDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "232e29db9e9d747dbb6bbd2def0a97c66a374451", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/232e29db9e9d747dbb6bbd2def0a97c66a374451", "committedDate": "2020-02-20T15:06:37Z", "message": "KOGITO-893: Use Singleton DataSource in processes+rules"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0621d1a4592e612f3c6da35574a7122d88afb39e", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0621d1a4592e612f3c6da35574a7122d88afb39e", "committedDate": "2020-02-19T16:03:24Z", "message": "KOGITO-893: Use Singleton DataSource in processes+rules"}, "afterCommit": {"oid": "232e29db9e9d747dbb6bbd2def0a97c66a374451", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/232e29db9e9d747dbb6bbd2def0a97c66a374451", "committedDate": "2020-02-20T15:06:37Z", "message": "KOGITO-893: Use Singleton DataSource in processes+rules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26a9b809096bbd1c7cb9f8302e36f2b54e851ebd", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/26a9b809096bbd1c7cb9f8302e36f2b54e851ebd", "committedDate": "2020-02-20T16:20:28Z", "message": "fix codegen in bpm"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNDg0ODgz", "url": "https://github.com/kiegroup/kogito-runtimes/pull/323#pullrequestreview-362484883", "createdAt": "2020-02-21T09:06:18Z", "commit": {"oid": "26a9b809096bbd1c7cb9f8302e36f2b54e851ebd"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOTowNjoxOFrOFsv_YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOTowNzo1NlrOFswCEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ2NzkzNg==", "bodyText": "this did not implement Mappable, but it did provide all of the required methods", "url": "https://github.com/kiegroup/kogito-runtimes/pull/323#discussion_r382467936", "createdAt": "2020-02-21T09:06:18Z", "author": {"login": "evacchi"}, "path": "jbpm/jbpm-flow/src/main/java/org/jbpm/workflow/core/node/RuleSetNode.java", "diffHunk": "@@ -37,7 +38,8 @@\n /**\n  * Default implementation of a RuleSet node.\n  */\n-public class RuleSetNode extends StateBasedNode implements ContextContainer {\n+public class RuleSetNode extends StateBasedNode implements ContextContainer,\n+                                                           Mappable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a9b809096bbd1c7cb9f8302e36f2b54e851ebd"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ2ODE4Mw==", "bodyText": "moved the documentation of the mappings, as it was now handled here", "url": "https://github.com/kiegroup/kogito-runtimes/pull/323#discussion_r382468183", "createdAt": "2020-02-21T09:06:53Z", "author": {"login": "evacchi"}, "path": "jbpm/jbpm-flow-builder/src/main/java/org/jbpm/compiler/canonical/RuleUnitHandler.java", "diffHunk": "@@ -35,6 +35,19 @@\n \n import static com.github.javaparser.StaticJavaParser.parse;\n \n+/*\n+ *\n+ * Input/Output mapping with Rule Units:\n+ *\n+ * | Mapping | Process Variable | Rule Unit field   | Action\n+ * | IN      | scalar           | scalar            | Assignment\n+ * | IN      | scalar           | data source \t    | Add to (i.e. insert into) data source\n+ * | IN      | collection       | data source \t    | Add all contents from data source\n+ * | OUT     | scalar           | scalar \t        | Assignment\n+ * | OUT     | scalar           | data source \t    | get 1 value off the data source\n+ * | OUT     | collection       | data source \t    | Add all contents to the data source\n+ *\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a9b809096bbd1c7cb9f8302e36f2b54e851ebd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ2ODM4OA==", "bodyText": "this code was duplicated in handleDecision+generateRuleUnitDescription", "url": "https://github.com/kiegroup/kogito-runtimes/pull/323#discussion_r382468388", "createdAt": "2020-02-21T09:07:24Z", "author": {"login": "evacchi"}, "path": "jbpm/jbpm-flow-builder/src/main/java/org/jbpm/compiler/canonical/RuleSetNodeVisitor.java", "diffHunk": "@@ -100,27 +88,10 @@ public void visitNode(String factoryField, Node node, BlockStmt body, VariableSc\n         m.setScope(methodScope);\n         body.addStatement(m);\n \n-        for (Entry<String, String> entry : ruleSetNode.getInMappings().entrySet()) {\n-            addFactoryMethodWithArgs(body, callTargetName, \"inMapping\", new StringLiteralExpr(entry.getKey()), new StringLiteralExpr(entry.getValue()));\n-        }\n-        for (Entry<String, String> entry : ruleSetNode.getOutMappings().entrySet()) {\n-            addFactoryMethodWithArgs(body, callTargetName, \"outMapping\", new StringLiteralExpr(entry.getKey()), new StringLiteralExpr(entry.getValue()));\n-        }\n-\n         visitMetaData(ruleSetNode.getMetaData(), body, callTargetName);\n \n         addFactoryMethodWithArgs(body, callTargetName, \"done\");\n \n-        if (ruleType.isRuleUnit()) {\n-            if (ruleSetNode.getInMappings().isEmpty()) {\n-                GeneratedRuleUnitDescription generatedRuleUnitDescription = new GeneratedRuleUnitDescription(ruleType.getName(), contextClassLoader);\n-                for (Variable v : variableScope.getVariables()) {\n-                    generatedRuleUnitDescription.putDatasourceVar(v.getName(), DataStore.class.getCanonicalName(), v.getType().getStringType());\n-                }\n-                RuleUnitComponentFactoryImpl impl = (RuleUnitComponentFactoryImpl) RuleUnitComponentFactory.get();\n-                impl.registerRuleUnitDescription(generatedRuleUnitDescription);\n-            }\n-        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a9b809096bbd1c7cb9f8302e36f2b54e851ebd"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ2ODYyNQ==", "bodyText": "renamed as it now takes any Mappable node", "url": "https://github.com/kiegroup/kogito-runtimes/pull/323#discussion_r382468625", "createdAt": "2020-02-21T09:07:56Z", "author": {"login": "evacchi"}, "path": "jbpm/jbpm-flow-builder/src/main/java/org/jbpm/compiler/canonical/AbstractVisitor.java", "diffHunk": "@@ -153,8 +154,7 @@ protected void addWorkItemParameters(Work work, BlockStmt body, String variableN\n         }\n     }\n \n-    protected void addWorkItemMappings(WorkItemNode workItemNode, BlockStmt body, String variableName) {\n-\n+    protected void addNodeMappings(Mappable workItemNode, BlockStmt body, String variableName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a9b809096bbd1c7cb9f8302e36f2b54e851ebd"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e259f682fbaee67191126af0ae7c14970fb2cc55", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/e259f682fbaee67191126af0ae7c14970fb2cc55", "committedDate": "2020-02-21T09:09:07Z", "message": "rename var"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNjUzMTgz", "url": "https://github.com/kiegroup/kogito-runtimes/pull/323#pullrequestreview-363653183", "createdAt": "2020-02-24T19:45:59Z", "commit": {"oid": "e259f682fbaee67191126af0ae7c14970fb2cc55"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxOTo0NTo1OVrOFtthvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxOTo0NTo1OVrOFtthvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ3NjE1OQ==", "bodyText": "Wouldn\u2019t it be enough to just set the new value instead of clear and then set? It\u2019s sort of more natural to jest set value... does that have some side effects?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/323#discussion_r383476159", "createdAt": "2020-02-24T19:45:59Z", "author": {"login": "mswiderski"}, "path": "kogito-codegen/src/test/resources/ruletask/Generated.drl", "diffHunk": "@@ -16,14 +16,14 @@ rule singlePerson_add_note when\n     s: /singleString[ this == \"hello\" ]\n then\n     p.setAdult(true);\n-    singleString.remove(s);\n-\tsingleString.add(\"Now the life starts again\");\n+    singleString.clear();\n+\tsingleString.set(\"Now the life starts again\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e259f682fbaee67191126af0ae7c14970fb2cc55"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95364fbb48442e4c2702a3f1057f909fb870bf45", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/95364fbb48442e4c2702a3f1057f909fb870bf45", "committedDate": "2020-02-25T07:44:33Z", "message": "no need to clear then set var: just re-set"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3733, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}