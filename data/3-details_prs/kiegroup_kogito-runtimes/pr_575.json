{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3Mzc2MTA2", "number": 575, "title": "KOGITO-2498 DMN info/warn as response headers", "bodyText": "", "createdAt": "2020-06-20T07:01:31Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/575", "merged": true, "mergeCommit": {"oid": "8d71ea8a687f2a0c69f7b0d1b15bc3c1121f1166"}, "closed": true, "closedAt": "2020-06-24T08:41:14Z", "author": {"login": "tarilabs"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABctCHbiAH2gAyNDM3Mzc2MTA2OmI1YWYzMzM4NGNjM2YxODMyNzQwMGI2MzY2ODBkNGMxMGI2Y2RlYzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABct2gJwAFqTQzNTIzMjUxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b5af33384cc3f18327400b636680d4c10b6cdec7", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/b5af33384cc3f18327400b636680d4c10b6cdec7", "committedDate": "2020-06-20T07:00:36Z", "message": "KOGITO-2498 DMN info/warn as response headers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7e8b786e4d2e5094603f285d9eaf78ec2944d51", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/d7e8b786e4d2e5094603f285d9eaf78ec2944d51", "committedDate": "2020-06-20T20:52:55Z", "message": "Make codegen compilation work by resolving all expected reasteasy symbls"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MDMxMzY5", "url": "https://github.com/kiegroup/kogito-runtimes/pull/575#pullrequestreview-435031369", "createdAt": "2020-06-22T15:22:11Z", "commit": {"oid": "d7e8b786e4d2e5094603f285d9eaf78ec2944d51"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MjMyNTEz", "url": "https://github.com/kiegroup/kogito-runtimes/pull/575#pullrequestreview-435232513", "createdAt": "2020-06-22T20:01:50Z", "commit": {"oid": "d7e8b786e4d2e5094603f285d9eaf78ec2944d51"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMDowMTo1MFrOGnPBdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMDowMjowNFrOGnPB1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5Mzc4Mg==", "bodyText": "What about an assertion to verify that header value starts with warning prefix?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/575#discussion_r443793782", "createdAt": "2020-06-22T20:01:50Z", "author": {"login": "danielezonca"}, "path": "integration-tests/integration-tests-quarkus/src/test/java/org/kie/kogito/integrationtests/quarkus/ElementAtIndexTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.kie.kogito.integrationtests.quarkus;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+import org.junit.jupiter.api.Test;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.notNullValue;\n+import static org.hamcrest.Matchers.nullValue;\n+\n+@QuarkusTest\n+public class ElementAtIndexTest {\n+\n+    static {\n+        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();\n+    }\n+\n+    @Test\n+    public void testHeaderEmpty() {\n+        given().body(\" { \\\"a list\\\" : [\\\"a\\\", \\\"b\\\", \\\"c\\\"], \\\"an index\\\" : 1 }\")\n+               .contentType(ContentType.JSON)\n+               .when()\n+               .post(\"/ElementAtIndex\")\n+               .then()\n+               .statusCode(200)\n+               .header(\"X-Kogito-decision-messages\", nullValue())\n+               .body(\"'element at index'\", is(\"a\"));\n+    }\n+\n+    @Test\n+    public void testHeaderPopulated() {\n+        given().body(\" { \\\"a list\\\" : [\\\"a\\\", \\\"b\\\", \\\"c\\\"], \\\"an index\\\" : 47 }\")\n+               .contentType(ContentType.JSON)\n+               .when()\n+               .post(\"/ElementAtIndex\")\n+               .then()\n+               .statusCode(200)\n+               .header(\"X-Kogito-decision-messages\", notNullValue()) // a warning", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7e8b786e4d2e5094603f285d9eaf78ec2944d51"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5Mzg3Nw==", "bodyText": "Same as above", "url": "https://github.com/kiegroup/kogito-runtimes/pull/575#discussion_r443793877", "createdAt": "2020-06-22T20:02:04Z", "author": {"login": "danielezonca"}, "path": "integration-tests/integration-tests-springboot/src/it/integration-tests-springboot-it/src/test/java/org/kie/kogito/integrationtests/springboot/ElementAtIndexTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.kie.kogito.integrationtests.springboot;\n+\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.annotation.DirtiesContext;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.notNullValue;\n+import static org.hamcrest.Matchers.nullValue;\n+\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT, classes = KogitoSpringbootApplication.class)\n+@DirtiesContext(classMode = DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD)\n+public class ElementAtIndexTest {\n+\n+    static {\n+        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();\n+    }\n+\n+    @Test\n+    public void testHeaderEmpty() {\n+        given().body(\" { \\\"a list\\\" : [\\\"a\\\", \\\"b\\\", \\\"c\\\"], \\\"an index\\\" : 1 }\")\n+               .contentType(ContentType.JSON)\n+               .when()\n+               .post(\"/ElementAtIndex\")\n+               .then()\n+               .statusCode(200)\n+               .header(\"X-Kogito-decision-messages\", nullValue())\n+               .body(\"'element at index'\", is(\"a\"));\n+    }\n+\n+    @Test\n+    public void testHeaderPopulated() {\n+        given().body(\" { \\\"a list\\\" : [\\\"a\\\", \\\"b\\\", \\\"c\\\"], \\\"an index\\\" : 47 }\")\n+               .contentType(ContentType.JSON)\n+               .when()\n+               .post(\"/ElementAtIndex\")\n+               .then()\n+               .statusCode(200)\n+               .header(\"X-Kogito-decision-messages\", notNullValue()) // a warning", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7e8b786e4d2e5094603f285d9eaf78ec2944d51"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4167, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}