{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNTI4NDQ3", "number": 718, "title": "[KOGITO-3155] Add DMN + PMML support to KogitoDMNScenarioRunnerHelper", "bodyText": "https://issues.redhat.com/browse/KOGITO-3155\nThis PR fixes Kogito Test Scenario runner to work with DMN + PMML resources\nPRs list:\n\n#718\nkiegroup/kogito-examples#344\n\nMany thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-08-24T13:38:20Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/718", "merged": true, "mergeCommit": {"oid": "3bf69d19a2ab8970d187fb6e78d0b59ee39fc2b9"}, "closed": true, "closedAt": "2020-08-31T11:43:12Z", "author": {"login": "danielezonca"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCCf4ZgH2gAyNDcyNTI4NDQ3OmU4ZjZhNDM3OGM4ZDk4MTllZDgyMDkwNDE4Y2FiZDYyZjRiNmYzN2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEQpCLAFqTQ3ODUxNTI4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e8f6a4378c8d9819ed82090418cabd62f4b6f37f", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/e8f6a4378c8d9819ed82090418cabd62f4b6f37f", "committedDate": "2020-08-24T13:19:43Z", "message": "[KOGITO-3155] Add DMN + PMML support to KogitoDMNScenarioRunnerHelper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d11169c8329eca6c271eeb26cb43b27538076c07", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/d11169c8329eca6c271eeb26cb43b27538076c07", "committedDate": "2020-08-24T13:27:51Z", "message": "[KOGITO-3155] Minor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNTAxOTQ5", "url": "https://github.com/kiegroup/kogito-runtimes/pull/718#pullrequestreview-473501949", "createdAt": "2020-08-24T13:44:42Z", "commit": {"oid": "d11169c8329eca6c271eeb26cb43b27538076c07"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MjExNjQ5", "url": "https://github.com/kiegroup/kogito-runtimes/pull/718#pullrequestreview-474211649", "createdAt": "2020-08-25T07:37:52Z", "commit": {"oid": "d11169c8329eca6c271eeb26cb43b27538076c07"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNzozNzo1MlrOHGLX8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNzo0NTo0OFrOHGLqJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIzOTg1OQ==", "bodyText": "Small typo here", "url": "https://github.com/kiegroup/kogito-runtimes/pull/718#discussion_r476239859", "createdAt": "2020-08-25T07:37:52Z", "author": {"login": "jomarko"}, "path": "drools/kogito-pmml/src/main/java/org/kie/kogito/pmml/PMMLKogito.java", "diffHunk": "@@ -75,4 +85,11 @@ public static PMML4Result evaluate(PMMLRuntime pmmlRuntime, String modelName, Ma\n         return pmmlRuntime.evaluate(modelName, new PMMLContextImpl(pmmlRequestData));\n     }\n \n+    private static Map<KieBase, KieRuntimeFactory> commonCreateKieRuntimeFactorie(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d11169c8329eca6c271eeb26cb43b27538076c07"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI0MjY1Ng==", "bodyText": "Could we please use import rather than FQN here?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/718#discussion_r476242656", "createdAt": "2020-08-25T07:42:46Z", "author": {"login": "jomarko"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kogito/scenariosimulation/runner/KogitoDMNScenarioRunnerHelper.java", "diffHunk": "@@ -108,4 +92,44 @@ protected void loadInputData(List<InstanceGiven> dataToLoad, DMNContext dmnConte\n         }\n     }\n \n+    private Function<String, KieRuntimeFactory> initPmmlKieRuntimeFactory() {\n+        try (Stream<Path> fileStream = Files.walk(Paths.get(\".\"))) {\n+            Map<KieBase, KieRuntimeFactory> kieRuntimeFactories =\n+                    org.kie.kogito.pmml.PMMLKogito.createKieRuntimeFactoriesWithInMemoryCompilation(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d11169c8329eca6c271eeb26cb43b27538076c07"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI0MzQ0Mg==", "bodyText": "import vs. FQN", "url": "https://github.com/kiegroup/kogito-runtimes/pull/718#discussion_r476243442", "createdAt": "2020-08-25T07:44:06Z", "author": {"login": "jomarko"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kogito/scenariosimulation/runner/KogitoDMNScenarioRunnerHelper.java", "diffHunk": "@@ -108,4 +92,44 @@ protected void loadInputData(List<InstanceGiven> dataToLoad, DMNContext dmnConte\n         }\n     }\n \n+    private Function<String, KieRuntimeFactory> initPmmlKieRuntimeFactory() {\n+        try (Stream<Path> fileStream = Files.walk(Paths.get(\".\"))) {\n+            Map<KieBase, KieRuntimeFactory> kieRuntimeFactories =\n+                    org.kie.kogito.pmml.PMMLKogito.createKieRuntimeFactoriesWithInMemoryCompilation(\n+                            fileStream\n+                                    .filter(path -> Files.isRegularFile(path) && path.toString().endsWith(\".pmml\"))\n+                                    .map(Path::toString)\n+                                    .toArray(String[]::new));\n+\n+            return s -> kieRuntimeFactories.keySet().stream()\n+                    .filter(kieBase -> org.kie.pmml.evaluator.core.utils.KnowledgeBaseUtils.getModel(kieBase, s).isPresent())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d11169c8329eca6c271eeb26cb43b27538076c07"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI0Mzg1Mg==", "bodyText": "Idea reports typo, initializing, please update all occurrences in this file.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/718#discussion_r476243852", "createdAt": "2020-08-25T07:44:53Z", "author": {"login": "jomarko"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kogito/scenariosimulation/runner/KogitoDMNScenarioRunnerHelper.java", "diffHunk": "@@ -108,4 +92,44 @@ protected void loadInputData(List<InstanceGiven> dataToLoad, DMNContext dmnConte\n         }\n     }\n \n+    private Function<String, KieRuntimeFactory> initPmmlKieRuntimeFactory() {\n+        try (Stream<Path> fileStream = Files.walk(Paths.get(\".\"))) {\n+            Map<KieBase, KieRuntimeFactory> kieRuntimeFactories =\n+                    org.kie.kogito.pmml.PMMLKogito.createKieRuntimeFactoriesWithInMemoryCompilation(\n+                            fileStream\n+                                    .filter(path -> Files.isRegularFile(path) && path.toString().endsWith(\".pmml\"))\n+                                    .map(Path::toString)\n+                                    .toArray(String[]::new));\n+\n+            return s -> kieRuntimeFactories.keySet().stream()\n+                    .filter(kieBase -> org.kie.pmml.evaluator.core.utils.KnowledgeBaseUtils.getModel(kieBase, s).isPresent())\n+                    .map(kieRuntimeFactories::get)\n+                    .findFirst()\n+                    .orElseThrow(() -> new RuntimeException(\"Failed to fine KieRuntimeFactory for model \" + s));\n+\n+        } catch (IOException e) {\n+            throw new RuntimeException(\"Error initalizing KogitoDMNScenarioRunnerHelper\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d11169c8329eca6c271eeb26cb43b27538076c07"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI0NDUxOQ==", "bodyText": "Is this really needed?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/718#discussion_r476244519", "createdAt": "2020-08-25T07:45:48Z", "author": {"login": "jomarko"}, "path": "drools/kogito-scenario-simulation/src/main/java/org/kogito/scenariosimulation/runner/KogitoDMNScenarioRunnerHelper.java", "diffHunk": "@@ -108,4 +92,44 @@ protected void loadInputData(List<InstanceGiven> dataToLoad, DMNContext dmnConte\n         }\n     }\n \n+    private Function<String, KieRuntimeFactory> initPmmlKieRuntimeFactory() {\n+        try (Stream<Path> fileStream = Files.walk(Paths.get(\".\"))) {\n+            Map<KieBase, KieRuntimeFactory> kieRuntimeFactories =\n+                    org.kie.kogito.pmml.PMMLKogito.createKieRuntimeFactoriesWithInMemoryCompilation(\n+                            fileStream\n+                                    .filter(path -> Files.isRegularFile(path) && path.toString().endsWith(\".pmml\"))\n+                                    .map(Path::toString)\n+                                    .toArray(String[]::new));\n+\n+            return s -> kieRuntimeFactories.keySet().stream()\n+                    .filter(kieBase -> org.kie.pmml.evaluator.core.utils.KnowledgeBaseUtils.getModel(kieBase, s).isPresent())\n+                    .map(kieRuntimeFactories::get)\n+                    .findFirst()\n+                    .orElseThrow(() -> new RuntimeException(\"Failed to fine KieRuntimeFactory for model \" + s));\n+\n+        } catch (IOException e) {\n+            throw new RuntimeException(\"Error initalizing KogitoDMNScenarioRunnerHelper\", e);\n+        }\n+    }\n+\n+    private DMNRuntime initDmnRuntime() {\n+        Function<String, KieRuntimeFactory> kieRuntimeFactoryFunction = initPmmlKieRuntimeFactory();\n+\n+        try (Stream<Path> fileStream = Files.walk(Paths.get(\".\"))) {\n+            List<Resource> resources = fileStream.filter(path -> Files.isRegularFile(path) && path.toString().endsWith(\".dmn\"))\n+                    .peek(System.out::println)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d11169c8329eca6c271eeb26cb43b27538076c07"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "311578594a5d1aa4ba808ca5088312b43896a90c", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/311578594a5d1aa4ba808ca5088312b43896a90c", "committedDate": "2020-08-27T14:59:45Z", "message": "[KOGITO-3155] PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c58b050f682f86a0a71833e9cb7b6ab527e47262", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/c58b050f682f86a0a71833e9cb7b6ab527e47262", "committedDate": "2020-08-27T14:59:57Z", "message": "Merge remote-tracking branch 'upstream/master' into KOGITO-3155"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NDIyODM3", "url": "https://github.com/kiegroup/kogito-runtimes/pull/718#pullrequestreview-478422837", "createdAt": "2020-08-31T08:35:49Z", "commit": {"oid": "c58b050f682f86a0a71833e9cb7b6ab527e47262"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwODozNTo1MFrOHJvr8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwODozOTowMlrOHJvyVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk4MDUyOA==", "bodyText": "@danielezonca Why you moved java.util import in this way? Used checkstyle in kogito-runtimes requires this?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/718#discussion_r479980528", "createdAt": "2020-08-31T08:35:50Z", "author": {"login": "yesamer"}, "path": "drools/kogito-pmml/src/main/java/org/kie/kogito/pmml/KieRuntimeFactoryBuilder.java", "diffHunk": "@@ -38,11 +31,20 @@\n import org.kie.pmml.commons.model.KiePMMLModel;\n import org.kie.pmml.evaluator.api.container.PMMLPackage;\n import org.kie.pmml.evaluator.assembler.container.PMMLPackageImpl;\n+import org.kie.pmml.evaluator.assembler.service.PMMLCompilerService;\n+import org.kie.pmml.evaluator.assembler.service.PMMLLoaderService;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import java.lang.reflect.InvocationTargetException;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.BiFunction;\n+import java.util.stream.Stream;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c58b050f682f86a0a71833e9cb7b6ab527e47262"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk4MjE2NQ==", "bodyText": "@danielezonca Here, you changed the format only. Is it really necessary?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/718#discussion_r479982165", "createdAt": "2020-08-31T08:39:02Z", "author": {"login": "yesamer"}, "path": "drools/kogito-pmml/src/main/java/org/kie/kogito/pmml/KieRuntimeFactoryBuilder.java", "diffHunk": "@@ -73,8 +85,9 @@ private KieRuntimeFactoryBuilder() {\n                     internalKnowledgePackage = pkgReg.getPackage();\n                 }\n                 PMMLPackage pmmlPkg =\n-                        internalKnowledgePackage.getResourceTypePackages().computeIfAbsent(ResourceType.PMML,\n-                                                                                           rtp -> new PMMLPackageImpl());\n+                        internalKnowledgePackage.getResourceTypePackages().computeIfAbsent(\n+                                ResourceType.PMML,\n+                                rtp -> new PMMLPackageImpl());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c58b050f682f86a0a71833e9cb7b6ab527e47262"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NTE1Mjg3", "url": "https://github.com/kiegroup/kogito-runtimes/pull/718#pullrequestreview-478515287", "createdAt": "2020-08-31T10:56:14Z", "commit": {"oid": "c58b050f682f86a0a71833e9cb7b6ab527e47262"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4128, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}