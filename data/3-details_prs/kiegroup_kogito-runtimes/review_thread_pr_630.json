{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MjUwMjY3", "number": 630, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjozMDo1N1rOEN5Vuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1ODoxM1rOEN5-7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDA2Mzk1OnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/ApplicationGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjozMDo1N1rOGwwXcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjozNToyM1rOGxGIag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3NzI2Ng==", "bodyText": "Side note because it is not related to this PR. This code is quite error prone, if withAddons is invoked multiple times, multiple PrometheusLabelers are created", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453777266", "createdAt": "2020-07-13T16:30:57Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/ApplicationGenerator.java", "diffHunk": "@@ -192,17 +192,12 @@ public ApplicationGenerator withRuleUnits(boolean hasRuleUnits) {\n         return this;\n     }\n \n-   public ApplicationGenerator withPersistence(boolean persistence) {\n-       this.persistence = persistence;\n-       return this;\n-   }\n-\n-   public ApplicationGenerator withMonitoring(boolean monitoring) {\n-       if (monitoring) {\n-           this.labelers.add(new PrometheusLabeler());\n-       }\n-       return this;\n-   }\n+    public ApplicationGenerator withAddons(AddonsConfig addonsConfig) {\n+        if (addonsConfig.useMonitoring()) {\n+            this.labelers.add(new PrometheusLabeler());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzMzg2Ng==", "bodyText": "I agree with you @danielezonca . I've changed it to a Map<Class, Labeler> to mitigate it, let me know wdyt", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r454133866", "createdAt": "2020-07-14T06:35:23Z", "author": {"login": "r00ta"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/ApplicationGenerator.java", "diffHunk": "@@ -192,17 +192,12 @@ public ApplicationGenerator withRuleUnits(boolean hasRuleUnits) {\n         return this;\n     }\n \n-   public ApplicationGenerator withPersistence(boolean persistence) {\n-       this.persistence = persistence;\n-       return this;\n-   }\n-\n-   public ApplicationGenerator withMonitoring(boolean monitoring) {\n-       if (monitoring) {\n-           this.labelers.add(new PrometheusLabeler());\n-       }\n-       return this;\n-   }\n+    public ApplicationGenerator withAddons(AddonsConfig addonsConfig) {\n+        if (addonsConfig.useMonitoring()) {\n+            this.labelers.add(new PrometheusLabeler());\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3NzI2Ng=="}, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDE1NjQyOnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DMNRestResourceGenerator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1NDo0OFrOGwxQMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjoxNzo1MlrOGxFthw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5MTc5Mg==", "bodyText": "What about create a DEFAULT instance as public static final field in AddonsConfig to use as default instance in the codebase? In this way we can also define a different default value in a single place", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453791792", "createdAt": "2020-07-13T16:54:48Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DMNRestResourceGenerator.java", "diffHunk": "@@ -56,7 +57,7 @@\n     private final String resourceClazzName;\n     private final String appCanonicalName;\n     private DependencyInjectionAnnotator annotator;\n-    private boolean useMonitoring;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyNDQ4OA==", "bodyText": "Sounds good to me", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r454124488", "createdAt": "2020-07-14T06:11:22Z", "author": {"login": "r00ta"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DMNRestResourceGenerator.java", "diffHunk": "@@ -56,7 +57,7 @@\n     private final String resourceClazzName;\n     private final String appCanonicalName;\n     private DependencyInjectionAnnotator annotator;\n-    private boolean useMonitoring;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5MTc5Mg=="}, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyNjk4Mw==", "bodyText": "Done", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r454126983", "createdAt": "2020-07-14T06:17:52Z", "author": {"login": "r00ta"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DMNRestResourceGenerator.java", "diffHunk": "@@ -56,7 +57,7 @@\n     private final String resourceClazzName;\n     private final String appCanonicalName;\n     private DependencyInjectionAnnotator annotator;\n-    private boolean useMonitoring;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5MTc5Mg=="}, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDE2MDU2OnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1NTo0N1rOGwxSpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1NTo0N1rOGwxSpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5MjQyMA==", "bodyText": "Same comment about use a common default instance", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453792420", "createdAt": "2020-07-13T16:55:47Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java", "diffHunk": "@@ -136,7 +136,7 @@ private static DecisionCodegen ofDecisions(List<DMNResource> resources) {\n \n     private final List<DMNResource> resources;\n     private final List<GeneratedFile> generatedFiles = new ArrayList<>();\n-    private boolean useMonitoring = false;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDE2MjUyOnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionContainerGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1NjoxOVrOGwxT8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1NjoxOVrOGwxT8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5Mjc1Mg==", "bodyText": "Same as above", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453792752", "createdAt": "2020-07-13T16:56:19Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionContainerGenerator.java", "diffHunk": "@@ -55,16 +56,16 @@\n \n     private String applicationCanonicalName;\n     private final List<DMNResource> resources;\n-    private boolean useTracing = false;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDE2MzM2OnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/process/ProcessCodegen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1NjozMVrOGwxUbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1NjozMVrOGwxUbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5Mjg3Nw==", "bodyText": "Same as above", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453792877", "createdAt": "2020-07-13T16:56:31Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/process/ProcessCodegen.java", "diffHunk": "@@ -204,7 +205,7 @@ private static Process parseWorkflowFile(Resource r, String parser) {\n     private final Map<String, WorkflowProcess> processes;\n     private final List<GeneratedFile> generatedFiles = new ArrayList<>();\n \n-    private boolean persistence;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDE2NjAzOnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/rules/IncrementalRuleCodegen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1NzoxOFrOGwxWPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1NzoxOFrOGwxWPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5MzM0Mg==", "bodyText": "Same as above", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453793342", "createdAt": "2020-07-13T16:57:18Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/rules/IncrementalRuleCodegen.java", "diffHunk": "@@ -184,7 +184,7 @@ private static ResourceType typeOf(FileSystemResource r) {\n \n     private KieModuleModel kieModuleModel;\n     private boolean hotReloadMode = false;\n-    private boolean useMonitoring = false;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDE2NjgzOnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/process/ProcessGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1NzozMFrOGwxWvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1NzozMFrOGwxWvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5MzQ3MA==", "bodyText": "Same as above", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453793470", "createdAt": "2020-07-13T16:57:30Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/process/ProcessGenerator.java", "diffHunk": "@@ -83,7 +84,7 @@\n     private final String appCanonicalName;\n     private String targetTypeName;\n     private DependencyInjectionAnnotator annotator;\n-    private boolean persistence;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDE2OTQxOnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/rules/RuleUnitGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1ODoxM1rOGwxYSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1ODoxM1rOGwxYSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5Mzg2Ng==", "bodyText": "Same as above", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453793866", "createdAt": "2020-07-13T16:58:13Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/rules/RuleUnitGenerator.java", "diffHunk": "@@ -56,7 +56,7 @@\n     private DependencyInjectionAnnotator annotator;\n     private Collection<QueryModel> queries;\n     private String applicationPackageName;\n-    private boolean useMonitoring;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 42, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}