{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNDgwMzY1", "number": 890, "title": "KOGITO-3828 - new monitoring addon automatic wiring of listeners", "bodyText": "Jira: https://issues.redhat.com/browse/KOGITO-3828\nThis PR aims to refactor the wiring of the drools/process listener for the monitoring.\nThe new module structure looks like the following:\n\nIf the user imports the monitoring-core-quarkus or the monitoring-core-springboot addon, then the default listeners for rules and processes will be created unless the user specifies the following config property in his application.properties file:\nkogito.addon.monitoring.process.deafult.bean.create=false\nkogito.addon.monitoring.rule.deafult.bean.create=false\n\nThe same behaviour is guaranteed if the user imports the monitoring-prometheus-quarkus or the monitoring-prometheus-springboot module.\nMany thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-11-13T10:04:05Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890", "merged": true, "mergeCommit": {"oid": "096c580061ba05482ad83477919d2ffb79623fa5"}, "closed": true, "closedAt": "2020-12-11T02:50:10Z", "author": {"login": "r00ta"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdf-PEwAH2gAyNTIwNDgwMzY1OmNhZDY5YmIyOGQwM2RmNGQyZTNkMTE3NmU2NTUzZDc1ZjEyYjEzZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkvJPAAH2gAyNTIwNDgwMzY1OjBmYzM5MDI3ZjI1ZTU3OGM1OWViYzIyYzBhMWZkOTFlYzM5NzgzOTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cad69bb28d03df4d2e3d1176e6553d75f12b13fc", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/cad69bb28d03df4d2e3d1176e6553d75f12b13fc", "committedDate": "2020-11-25T13:19:28Z", "message": "add new modules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf2c85b3d62a71056d2bf71630c6b736cd6d6667", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/cf2c85b3d62a71056d2bf71630c6b736cd6d6667", "committedDate": "2020-11-25T13:22:59Z", "message": "fix poms and move src to new common modules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "902be55a0b9a6e5a3c5036c825b11b7a560ffebf", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/902be55a0b9a6e5a3c5036c825b11b7a560ffebf", "committedDate": "2020-11-25T13:45:52Z", "message": "update bom and rebase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95a333295caa0726b84d6cad58757b274514ebcd", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/95a333295caa0726b84d6cad58757b274514ebcd", "committedDate": "2020-11-25T15:26:30Z", "message": "rename package name"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3841ecda94c603ffde6c787886d77352eb369afb", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/3841ecda94c603ffde6c787886d77352eb369afb", "committedDate": "2020-11-16T09:10:17Z", "message": "fix monitoring-core-common dep"}, "afterCommit": {"oid": "95a333295caa0726b84d6cad58757b274514ebcd", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/95a333295caa0726b84d6cad58757b274514ebcd", "committedDate": "2020-11-25T15:26:30Z", "message": "rename package name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1d51f31ce8ce5368243ab71bdeef8dac25700db", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/b1d51f31ce8ce5368243ab71bdeef8dac25700db", "committedDate": "2020-11-25T15:31:42Z", "message": "rename config property"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4OTgxNDA2", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#pullrequestreview-538981406", "createdAt": "2020-11-26T04:09:36Z", "commit": {"oid": "b1d51f31ce8ce5368243ab71bdeef8dac25700db"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffc4a21b6aa98f8faae24fc74aa12ac23a60e63c", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/ffc4a21b6aa98f8faae24fc74aa12ac23a60e63c", "committedDate": "2020-11-26T08:03:10Z", "message": "remove quarkus dep in core module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba47291517f9c8dca83a60d4c3a58db86f0ba681", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/ba47291517f9c8dca83a60d4c3a58db86f0ba681", "committedDate": "2020-11-26T08:43:10Z", "message": "fix typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMDEwODM5", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#pullrequestreview-540010839", "createdAt": "2020-11-27T14:16:18Z", "commit": {"oid": "ba47291517f9c8dca83a60d4c3a58db86f0ba681"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNDoxNjoxOVrOH6_59g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMTo1NTo1OFrOH8Palw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYyNjQ4Ng==", "bodyText": "Why do you need this dependency?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r531626486", "createdAt": "2020-11-27T14:16:19Z", "author": {"login": "danielezonca"}, "path": "addons/monitoring-addon/monitoring-core/monitoring-core-common/pom.xml", "diffHunk": "@@ -0,0 +1,79 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>monitoring-core</artifactId>\n+    <groupId>org.kie.kogito</groupId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+  <name>Kogito :: Add-Ons :: Monitoring Core Api</name>\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>io.quarkus</groupId>\n+        <artifactId>quarkus-bom</artifactId>\n+        <version>${version.io.quarkus}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+  <artifactId>monitoring-core-common</artifactId>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>jbpm-flow</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>drools-core</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>grafana-api</artifactId>\n+    </dependency>\n+    <!-- https://mvnrepository.com/artifact/javax.enterprise/cdi-api -->\n+    <dependency>\n+      <groupId>javax.enterprise</groupId>\n+      <artifactId>cdi-api</artifactId>\n+      <version>2.0.SP1</version>\n+      <scope>provided</scope>\n+    </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba47291517f9c8dca83a60d4c3a58db86f0ba681"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkxNDE1OA==", "bodyText": "Can you please use a constant? Please use a shorter property name, I think something like kogito.monitoring.rule.useDefault could be enough. Wdyt?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r532914158", "createdAt": "2020-11-30T21:26:30Z", "author": {"login": "danielezonca"}, "path": "addons/monitoring-addon/monitoring-core/monitoring-core-quarkus/src/main/java/org/kie/kogito/monitoring/core/quarkus/QuarkusEventListenerFactory.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.kie.kogito.monitoring.core.quarkus;\n+\n+import javax.enterprise.context.Dependent;\n+import javax.enterprise.inject.Produces;\n+\n+import io.quarkus.arc.properties.IfBuildProperty;\n+import org.drools.core.config.DefaultRuleEventListenerConfig;\n+import org.kie.kogito.monitoring.core.common.process.MonitoringProcessEventListenerConfig;\n+import org.kie.kogito.monitoring.core.common.rule.RuleMetricsListenerConfig;\n+import org.kie.kogito.process.impl.DefaultProcessEventListenerConfig;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Dependent\n+public class QuarkusEventListenerFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(QuarkusEventListenerFactory.class);\n+\n+    @Produces\n+    @IfBuildProperty(name = \"kogito.addon.monitoring.rule.deafult.bean.create\", stringValue = \"true\", enableIfMissing = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba47291517f9c8dca83a60d4c3a58db86f0ba681"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkxOTg3OQ==", "bodyText": "Same as above", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r532919879", "createdAt": "2020-11-30T21:38:03Z", "author": {"login": "danielezonca"}, "path": "addons/monitoring-addon/monitoring-core/monitoring-core-quarkus/src/main/java/org/kie/kogito/monitoring/core/quarkus/QuarkusEventListenerFactory.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.kie.kogito.monitoring.core.quarkus;\n+\n+import javax.enterprise.context.Dependent;\n+import javax.enterprise.inject.Produces;\n+\n+import io.quarkus.arc.properties.IfBuildProperty;\n+import org.drools.core.config.DefaultRuleEventListenerConfig;\n+import org.kie.kogito.monitoring.core.common.process.MonitoringProcessEventListenerConfig;\n+import org.kie.kogito.monitoring.core.common.rule.RuleMetricsListenerConfig;\n+import org.kie.kogito.process.impl.DefaultProcessEventListenerConfig;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Dependent\n+public class QuarkusEventListenerFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(QuarkusEventListenerFactory.class);\n+\n+    @Produces\n+    @IfBuildProperty(name = \"kogito.addon.monitoring.rule.deafult.bean.create\", stringValue = \"true\", enableIfMissing = true)\n+    public DefaultRuleEventListenerConfig produceRuleListener() {\n+        LOGGER.info(\"Producing default listener for rule monitoring.\");\n+        return new RuleMetricsListenerConfig();\n+    }\n+\n+    @Produces\n+    @IfBuildProperty(name = \"kogito.addon.monitoring.process.deafult.bean.create\", stringValue = \"true\", enableIfMissing = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba47291517f9c8dca83a60d4c3a58db86f0ba681"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkyMTEwOQ==", "bodyText": "Where is it used?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r532921109", "createdAt": "2020-11-30T21:40:30Z", "author": {"login": "danielezonca"}, "path": "addons/monitoring-addon/monitoring-core/monitoring-core-springboot/pom.xml", "diffHunk": "@@ -0,0 +1,40 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>monitoring-core</artifactId>\n+    <groupId>org.kie.kogito</groupId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+  <name>Kogito :: Add-Ons :: Monitoring Core Springboot</name>\n+  <artifactId>monitoring-core-springboot</artifactId>\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-dependencies</artifactId>\n+        <version>${version.springboot}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>javax.annotation</groupId>\n+      <artifactId>javax.annotation-api</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba47291517f9c8dca83a60d4c3a58db86f0ba681"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkyOTE3NQ==", "bodyText": "Please move rest to platform specific modules: we are reviewing rest dep to use spring/quarkus specific (see #891 ). You can keep here an abstract if needed", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r532929175", "createdAt": "2020-11-30T21:55:58Z", "author": {"login": "danielezonca"}, "path": "addons/monitoring-addon/monitoring-prometheus-addon/monitoring-prometheus-common/pom.xml", "diffHunk": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>monitoring-prometheus-addon</artifactId>\n+    <groupId>org.kie.kogito</groupId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>monitoring-prometheus-common</artifactId>\n+  <name>Kogito :: Add-Ons :: Monitoring Prometheus Common</name>\n+\n+  <description>Prometheus monitoring for a kogito application</description>\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>monitoring-core-common</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.micrometer</groupId>\n+      <artifactId>micrometer-registry-prometheus</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.jboss.spec.javax.ws.rs</groupId>\n+      <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba47291517f9c8dca83a60d4c3a58db86f0ba681"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9510e79ee4349476668effe431385fe87e5965b8", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/9510e79ee4349476668effe431385fe87e5965b8", "committedDate": "2020-12-01T10:03:37Z", "message": "remove javax dep, add licences, move strings to constants"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNzg1NDg3", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#pullrequestreview-541785487", "createdAt": "2020-12-01T11:02:10Z", "commit": {"oid": "9510e79ee4349476668effe431385fe87e5965b8"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMTowMjoxMFrOH8nbmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMToyMTo0NFrOH8oG_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMyMjY1MQ==", "bodyText": "This should not be added here that is a common module but in the platform specific", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r533322651", "createdAt": "2020-12-01T11:02:10Z", "author": {"login": "danielezonca"}, "path": "addons/monitoring-addon/monitoring-core/monitoring-core-common/pom.xml", "diffHunk": "@@ -0,0 +1,72 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>monitoring-core</artifactId>\n+    <groupId>org.kie.kogito</groupId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+  <name>Kogito :: Add-Ons :: Monitoring Core Api</name>\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>io.quarkus</groupId>\n+        <artifactId>quarkus-bom</artifactId>\n+        <version>${version.io.quarkus}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9510e79ee4349476668effe431385fe87e5965b8"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMyMzQxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOGGER.info(\"Producing default listener for process monitoring.\");\n          \n          \n            \n                    LOGGER.debug(\"Producing default listener for process monitoring.\");", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r533323411", "createdAt": "2020-12-01T11:03:30Z", "author": {"login": "danielezonca"}, "path": "addons/monitoring-addon/monitoring-core/monitoring-core-springboot/src/main/java/org/kie/kogito/monitoring/core/springboot/SpringbootProcessEventListenerFactory.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.kogito.monitoring.core.springboot;\n+\n+import org.kie.kogito.monitoring.core.common.Constants;\n+import org.kie.kogito.monitoring.core.common.process.MonitoringProcessEventListenerConfig;\n+import org.kie.kogito.process.impl.DefaultProcessEventListenerConfig;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+@ConditionalOnProperty(\n+        value = Constants.MONITORING_PROCESS_USE_DEFAULT,\n+        havingValue = \"true\",\n+        matchIfMissing = true)\n+public class SpringbootProcessEventListenerFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(SpringbootProcessEventListenerFactory.class);\n+\n+    @Bean\n+    public DefaultProcessEventListenerConfig produceProcessListener() {\n+        LOGGER.info(\"Producing default listener for process monitoring.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9510e79ee4349476668effe431385fe87e5965b8"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMyMzUyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOGGER.info(\"Producing default listener for rule monitoring.\");\n          \n          \n            \n                    LOGGER.debug(\"Producing default listener for rule monitoring.\");", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r533323524", "createdAt": "2020-12-01T11:03:44Z", "author": {"login": "danielezonca"}, "path": "addons/monitoring-addon/monitoring-core/monitoring-core-springboot/src/main/java/org/kie/kogito/monitoring/core/springboot/SpringbootRuleEventListenerFactory.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.kogito.monitoring.core.springboot;\n+\n+import org.drools.core.config.DefaultRuleEventListenerConfig;\n+import org.kie.kogito.monitoring.core.common.Constants;\n+import org.kie.kogito.monitoring.core.common.rule.RuleMetricsListenerConfig;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+@ConditionalOnProperty(\n+        value = Constants.MONITORING_RULE_USE_DEFAULT,\n+        havingValue = \"true\",\n+        matchIfMissing = true)\n+public class SpringbootRuleEventListenerFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(SpringbootRuleEventListenerFactory.class);\n+\n+    @Bean\n+    public DefaultRuleEventListenerConfig produceRuleListener() {\n+        LOGGER.info(\"Producing default listener for rule monitoring.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9510e79ee4349476668effe431385fe87e5965b8"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMyMzY4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOGGER.info(\"Producing default listener for rule monitoring.\");\n          \n          \n            \n                    LOGGER.debug(\"Producing default listener for rule monitoring.\");", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r533323684", "createdAt": "2020-12-01T11:04:02Z", "author": {"login": "danielezonca"}, "path": "addons/monitoring-addon/monitoring-core/monitoring-core-quarkus/src/main/java/org/kie/kogito/monitoring/core/quarkus/QuarkusEventListenerFactory.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.kogito.monitoring.core.quarkus;\n+\n+import javax.enterprise.context.Dependent;\n+import javax.enterprise.inject.Produces;\n+\n+import io.quarkus.arc.properties.IfBuildProperty;\n+import org.drools.core.config.DefaultRuleEventListenerConfig;\n+import org.kie.kogito.monitoring.core.common.Constants;\n+import org.kie.kogito.monitoring.core.common.process.MonitoringProcessEventListenerConfig;\n+import org.kie.kogito.monitoring.core.common.rule.RuleMetricsListenerConfig;\n+import org.kie.kogito.process.impl.DefaultProcessEventListenerConfig;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Dependent\n+public class QuarkusEventListenerFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(QuarkusEventListenerFactory.class);\n+\n+    @Produces\n+    @IfBuildProperty(name = Constants.MONITORING_RULE_USE_DEFAULT, stringValue = \"true\", enableIfMissing = true)\n+    public DefaultRuleEventListenerConfig produceRuleListener() {\n+        LOGGER.info(\"Producing default listener for rule monitoring.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9510e79ee4349476668effe431385fe87e5965b8"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMyMzc2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOGGER.info(\"Producing default listener for process monitoring.\");\n          \n          \n            \n                    LOGGER.debug(\"Producing default listener for process monitoring.\");", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r533323764", "createdAt": "2020-12-01T11:04:12Z", "author": {"login": "danielezonca"}, "path": "addons/monitoring-addon/monitoring-core/monitoring-core-quarkus/src/main/java/org/kie/kogito/monitoring/core/quarkus/QuarkusEventListenerFactory.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.kogito.monitoring.core.quarkus;\n+\n+import javax.enterprise.context.Dependent;\n+import javax.enterprise.inject.Produces;\n+\n+import io.quarkus.arc.properties.IfBuildProperty;\n+import org.drools.core.config.DefaultRuleEventListenerConfig;\n+import org.kie.kogito.monitoring.core.common.Constants;\n+import org.kie.kogito.monitoring.core.common.process.MonitoringProcessEventListenerConfig;\n+import org.kie.kogito.monitoring.core.common.rule.RuleMetricsListenerConfig;\n+import org.kie.kogito.process.impl.DefaultProcessEventListenerConfig;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Dependent\n+public class QuarkusEventListenerFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(QuarkusEventListenerFactory.class);\n+\n+    @Produces\n+    @IfBuildProperty(name = Constants.MONITORING_RULE_USE_DEFAULT, stringValue = \"true\", enableIfMissing = true)\n+    public DefaultRuleEventListenerConfig produceRuleListener() {\n+        LOGGER.info(\"Producing default listener for rule monitoring.\");\n+        return new RuleMetricsListenerConfig();\n+    }\n+\n+    @Produces\n+    @IfBuildProperty(name = Constants.MONITORING_PROCESS_USE_DEFAULT, stringValue = \"true\", enableIfMissing = true)\n+    public DefaultProcessEventListenerConfig produceProcessListener() {\n+        LOGGER.info(\"Producing default listener for process monitoring.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9510e79ee4349476668effe431385fe87e5965b8"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMyNDg0Ng==", "bodyText": "This file is probably the output of a merge conflict addons/monitoring-addon/monitoring-core/pom.xml~HEAD", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r533324846", "createdAt": "2020-12-01T11:06:04Z", "author": {"login": "danielezonca"}, "path": "addons/monitoring-addon/monitoring-core/pom.xml~HEAD", "diffHunk": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9510e79ee4349476668effe431385fe87e5965b8"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMyNTAzNg==", "bodyText": "This file is probably the output of a merge conflict addons/monitoring-addon/monitoring-core/pom.xml~upstream_master", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r533325036", "createdAt": "2020-12-01T11:06:23Z", "author": {"login": "danielezonca"}, "path": "addons/monitoring-addon/monitoring-core/pom.xml~upstream_master", "diffHunk": "@@ -0,0 +1,63 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9510e79ee4349476668effe431385fe87e5965b8"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMzMzc1Nw==", "bodyText": "I'm not completely sure we need to decouple monitoring and prometheus-monitoring addons but it is probably fine", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r533333757", "createdAt": "2020-12-01T11:21:44Z", "author": {"login": "danielezonca"}, "path": "addons/monitoring-addon/monitoring-prometheus-addon/monitoring-prometheus-quarkus/src/main/resources/META-INF/kogito.addon", "diffHunk": "@@ -0,0 +1 @@\n+prometheus-monitoring", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9510e79ee4349476668effe431385fe87e5965b8"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33b17cca532a729075e91e1c7f093b0d2fbaef83", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/33b17cca532a729075e91e1c7f093b0d2fbaef83", "committedDate": "2020-12-01T13:41:53Z", "message": "fix pom"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73df1bf4d9b1265b073d7716c96378c171550269", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/73df1bf4d9b1265b073d7716c96378c171550269", "committedDate": "2020-12-01T13:46:15Z", "message": "specify request mapping method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec1adc6d75779152b580de20988536e6372de7d5", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/ec1adc6d75779152b580de20988536e6372de7d5", "committedDate": "2020-12-01T13:47:41Z", "message": "Update addons/monitoring-addon/monitoring-core/monitoring-core-springboot/src/main/java/org/kie/kogito/monitoring/core/springboot/SpringbootProcessEventListenerFactory.java\n\nCo-authored-by: Daniele Zonca <dzonca@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59fd627aec5fca69beef43d3638e8fbeba165de8", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/59fd627aec5fca69beef43d3638e8fbeba165de8", "committedDate": "2020-12-01T13:47:47Z", "message": "Update addons/monitoring-addon/monitoring-core/monitoring-core-springboot/src/main/java/org/kie/kogito/monitoring/core/springboot/SpringbootRuleEventListenerFactory.java\n\nCo-authored-by: Daniele Zonca <dzonca@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "836a7537c26e15e957397f0341987db21c1f14bc", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/836a7537c26e15e957397f0341987db21c1f14bc", "committedDate": "2020-12-01T13:47:53Z", "message": "Update addons/monitoring-addon/monitoring-core/monitoring-core-quarkus/src/main/java/org/kie/kogito/monitoring/core/quarkus/QuarkusEventListenerFactory.java\n\nCo-authored-by: Daniele Zonca <dzonca@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "280d02e7d4570d95c6f4983892431b53c258f56f", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/280d02e7d4570d95c6f4983892431b53c258f56f", "committedDate": "2020-12-01T13:47:59Z", "message": "Update addons/monitoring-addon/monitoring-core/monitoring-core-quarkus/src/main/java/org/kie/kogito/monitoring/core/quarkus/QuarkusEventListenerFactory.java\n\nCo-authored-by: Daniele Zonca <dzonca@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e17e8472e15b87fe95fad71487ed3ca93b9b1f95", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/e17e8472e15b87fe95fad71487ed3ca93b9b1f95", "committedDate": "2020-12-01T17:18:39Z", "message": "provide metrics interceptor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMDIxMzIz", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#pullrequestreview-543021323", "createdAt": "2020-12-02T16:34:47Z", "commit": {"oid": "e17e8472e15b87fe95fad71487ed3ca93b9b1f95"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjozNDo0OFrOH9juRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzoxNTowOVrOH9li5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMxMDQ2OQ==", "bodyText": "I think this is also possible to be put on the bean method, so you could combine it into one class I think.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r534310469", "createdAt": "2020-12-02T16:34:48Z", "author": {"login": "MarianMacik"}, "path": "addons/monitoring-addon/monitoring-core/monitoring-core-springboot/src/main/java/org/kie/kogito/monitoring/core/springboot/SpringbootProcessEventListenerFactory.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.kogito.monitoring.core.springboot;\n+\n+import org.kie.kogito.monitoring.core.common.Constants;\n+import org.kie.kogito.monitoring.core.common.process.MonitoringProcessEventListenerConfig;\n+import org.kie.kogito.process.impl.DefaultProcessEventListenerConfig;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+@ConditionalOnProperty(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e17e8472e15b87fe95fad71487ed3ca93b9b1f95"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMxMzAxMg==", "bodyText": "Shouldn't just resteasy and monitoring-core-common be enough? As it is not needed for spring boot version.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r534313012", "createdAt": "2020-12-02T16:38:15Z", "author": {"login": "MarianMacik"}, "path": "addons/monitoring-addon/monitoring-core/monitoring-core-quarkus/pom.xml", "diffHunk": "@@ -0,0 +1,43 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>monitoring-core</artifactId>\n+    <groupId>org.kie.kogito</groupId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+  <artifactId>monitoring-core-quarkus</artifactId>\n+  <name>Kogito :: Add-Ons :: Monitoring Core Quarkus</name>\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>io.quarkus</groupId>\n+        <artifactId>quarkus-bom</artifactId>\n+        <version>${version.io.quarkus}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>monitoring-core-common</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>jbpm-flow</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e17e8472e15b87fe95fad71487ed3ca93b9b1f95"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNDI3MQ==", "bodyText": "It would be good to put here quarkus-resteasy as well because we use it directly to define the QuarkusMetricsResource. Same thing is done with spring boot prometheus addon. It is always better to declare dependencies which are used and not rely on the transitive ones I think.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r534334271", "createdAt": "2020-12-02T17:06:29Z", "author": {"login": "MarianMacik"}, "path": "addons/monitoring-addon/monitoring-prometheus-addon/monitoring-prometheus-quarkus/pom.xml", "diffHunk": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>monitoring-prometheus-addon</artifactId>\n+    <groupId>org.kie.kogito</groupId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>monitoring-prometheus-quarkus</artifactId>\n+  <name>Kogito :: Add-Ons :: Monitoring Prometheus Quarkus</name>\n+\n+  <description>Prometheus monitoring for Quarkus</description>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>monitoring-prometheus-common</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>monitoring-core-quarkus</artifactId>\n+    </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e17e8472e15b87fe95fad71487ed3ca93b9b1f95"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM0MDMyNA==", "bodyText": "Just ony hypothetical question. If I add 2 addons with listeners (for example in future), will I have to solve this wiring myself? As then I need to somehow combine 2 listener configs into one, right?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r534340324", "createdAt": "2020-12-02T17:15:09Z", "author": {"login": "MarianMacik"}, "path": "addons/monitoring-addon/monitoring-core/monitoring-core-quarkus/src/main/java/org/kie/kogito/monitoring/core/quarkus/QuarkusEventListenerFactory.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.kogito.monitoring.core.quarkus;\n+\n+import javax.enterprise.context.Dependent;\n+import javax.enterprise.inject.Produces;\n+import javax.ws.rs.ext.Provider;\n+\n+import io.quarkus.arc.properties.IfBuildProperty;\n+import org.drools.core.config.DefaultRuleEventListenerConfig;\n+import org.kie.kogito.monitoring.core.common.Constants;\n+import org.kie.kogito.monitoring.core.common.process.MonitoringProcessEventListenerConfig;\n+import org.kie.kogito.monitoring.core.common.rule.RuleMetricsListenerConfig;\n+import org.kie.kogito.monitoring.core.common.system.interceptor.MetricsInterceptor;\n+import org.kie.kogito.process.impl.DefaultProcessEventListenerConfig;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Dependent\n+public class QuarkusEventListenerFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(QuarkusEventListenerFactory.class);\n+\n+    @Produces\n+    @IfBuildProperty(name = Constants.MONITORING_RULE_USE_DEFAULT, stringValue = \"true\", enableIfMissing = true)\n+    public DefaultRuleEventListenerConfig produceRuleListener() {\n+        LOGGER.debug(\"Producing default listener for rule monitoring.\");\n+        return new RuleMetricsListenerConfig();\n+    }\n+\n+    @Produces\n+    @IfBuildProperty(name = Constants.MONITORING_PROCESS_USE_DEFAULT, stringValue = \"true\", enableIfMissing = true)\n+    public DefaultProcessEventListenerConfig produceProcessListener() {\n+        LOGGER.debug(\"Producing default listener for process monitoring.\");\n+        return new MonitoringProcessEventListenerConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e17e8472e15b87fe95fad71487ed3ca93b9b1f95"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76fb931ccc33e75f525cac7cc501a5763546cb18", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/76fb931ccc33e75f525cac7cc501a5763546cb18", "committedDate": "2020-12-03T09:15:19Z", "message": "remove unused dependencies, refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzODAxMjg5", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#pullrequestreview-543801289", "createdAt": "2020-12-03T10:15:59Z", "commit": {"oid": "76fb931ccc33e75f525cac7cc501a5763546cb18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMDoxNTo1OVrOH-RHfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMDoxNTo1OVrOH-RHfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA1NDIwNw==", "bodyText": "I think kogito-api is also not needed here?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#discussion_r535054207", "createdAt": "2020-12-03T10:15:59Z", "author": {"login": "MarianMacik"}, "path": "addons/monitoring-addon/monitoring-core/monitoring-core-quarkus/pom.xml", "diffHunk": "@@ -0,0 +1,39 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>monitoring-core</artifactId>\n+    <groupId>org.kie.kogito</groupId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+  <artifactId>monitoring-core-quarkus</artifactId>\n+  <name>Kogito :: Add-Ons :: Monitoring Core Quarkus</name>\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>io.quarkus</groupId>\n+        <artifactId>quarkus-bom</artifactId>\n+        <version>${version.io.quarkus}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-api</artifactId>\n+    </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76fb931ccc33e75f525cac7cc501a5763546cb18"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzODA0NDk0", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#pullrequestreview-543804494", "createdAt": "2020-12-03T10:19:48Z", "commit": {"oid": "76fb931ccc33e75f525cac7cc501a5763546cb18"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTU4OTk5", "url": "https://github.com/kiegroup/kogito-runtimes/pull/890#pullrequestreview-543958999", "createdAt": "2020-12-03T13:37:20Z", "commit": {"oid": "76fb931ccc33e75f525cac7cc501a5763546cb18"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f7a0c543a954f0ab4c5cceb398a4300dad76016", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/7f7a0c543a954f0ab4c5cceb398a4300dad76016", "committedDate": "2020-12-03T13:41:05Z", "message": "fix pom"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fc39027f25e578c59ebc22c0a1fd91ec3978396", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0fc39027f25e578c59ebc22c0a1fd91ec3978396", "committedDate": "2020-12-10T08:34:08Z", "message": "rename monitoring modules and directories"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3851, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}