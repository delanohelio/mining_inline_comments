{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MTQzNzQw", "number": 645, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOToyNToxNFrOERL-Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOTozMTo0N1rOERMGyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDU3NDA2OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOToyNToxNFrOG1w9SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNjo0MDo0MlrOG197RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAyOTgzMg==", "bodyText": "Maybe we can extract this to the shared libraries. But I know that it may be cumbersome to make it working (yet another PR, waiting for merge...)", "url": "https://github.com/kiegroup/kogito-runtimes/pull/645#discussion_r459029832", "createdAt": "2020-07-22T19:25:14Z", "author": {"login": "MarianMacik"}, "path": "Jenkinsfile", "diffHunk": "@@ -21,88 +21,91 @@ pipeline {\n         MAVEN_OPTS = '-Xms1024m -Xmx4g'\n     }\n     stages {\n-        stage('build sh script') {\n+        stage('Initialize') {\n             steps {\n                 script {\n                     mailer.buildLogScriptPR()\n+\n+                    checkoutRepo(\"kogito-runtimes\")\n+                    checkoutRepo(\"kogito-apps\")\n+                    checkoutRepo(\"kogito-examples\")\n+                    checkoutRepo(\"kogito-examples\", \"kogito-examples-persistence\")\n+                    checkoutRepo(\"kogito-examples\", \"kogito-examples-events\")\n                 }\n             }\n         }\n         stage('Build kogito-runtimes') {\n             steps {\n-                dir(\"kogito-runtimes\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-runtimes', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install -Prun-code-coverage', false)\n-                        /*\n-                           The analysis must happen before the other stages as these clone different projects into a root\n-                           directory of kogito-runtimes and are by mistake incorporated in a test coverage report.\n-                         */\n-                        maven.runMavenWithSubmarineSettings('-e -nsu validate -Psonarcloud-analysis', false)\n-                    }\n+                script {\n+                    mavenInstall(\"kogito-runtimes\", false, [\"run-code-coverage\"])\n+                    /*\n+                    The analysis must happen before the other stages as these clone different projects into a root\n+                    directory of kogito-runtimes and are by mistake incorporated in a test coverage report.\n+                    */\n+                    mavenInstall(\"kogito-runtimes\", false, [\"sonarcloud-analysis\"], \"-e -nsu validate\")\n                 }\n             }\n         }\n         stage('Build kogito-apps') {\n             steps {\n-                dir(\"kogito-apps\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-apps', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install', false)\n-                    }\n-                }\n+                mavenInstall(\"kogito-apps\")\n             }\n         }\n         stage('Build kogito-examples') {\n             steps {\n-                dir(\"kogito-examples\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-examples', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install', false)\n-                    }\n-                }\n-                // Use a separate dir for persistence to not overwrite the test results\n-                dir(\"kogito-examples-persistence\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-examples', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install -Ppersistence', false)\n-                    }\n-                }\n-                // Use a separate dir for events to not overwrite the test results\n-                dir(\"kogito-examples-events\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-examples', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install -Pevents', false)\n-                    }\n-                }\n+                mavenInstall(\"kogito-examples\")\n+            }\n+        }\n+        stage('Build kogito-examples with persistence') {\n+            steps {\n+                mavenInstall(\"kogito-examples-persistence\", false, [\"persistence\"])\n+            }\n+        }\n+        stage('Build kogito-examples with events') {\n+            steps {\n+                mavenInstall(\"kogito-examples-events\", false, [\"events\"])\n             }\n         }\n     }\n     post {\n         always {\n             sh '$WORKSPACE/trace.sh'\n             junit '**/target/surefire-reports/**/*.xml, **/target/failsafe-reports/**/*.xml'\n+            cleanWs()\n         }\n         failure {\n             script {\n                 mailer.sendEmail_failedPR()\n             }\n-            cleanWs()\n         }\n         unstable {\n             script {\n                 mailer.sendEmail_unstablePR()\n             }\n-            cleanWs()\n         }\n         fixed {\n             script {\n                 mailer.sendEmail_fixedPR()\n             }\n-            cleanWs()\n-        }\n-        success {\n-            cleanWs()\n         }\n     }\n }\n+\n+void checkoutRepo(String repo, String dirName=repo) {\n+    dir(dirName) {\n+        githubscm.checkoutIfExists(repo, changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n+    }\n+}\n+\n+void mavenInstall(String directory, boolean skipTests = true, String[] profiles,  String extraArgs = \"\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "051898d60c004326b90f51c1bd77c88649ad21de"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0MjMwOA==", "bodyText": "The method is quite specific, and we could need more and more parameters for the different projects.\nI think the base shared lib is ok. Each project can then adapt.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/645#discussion_r459242308", "createdAt": "2020-07-23T06:40:42Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile", "diffHunk": "@@ -21,88 +21,91 @@ pipeline {\n         MAVEN_OPTS = '-Xms1024m -Xmx4g'\n     }\n     stages {\n-        stage('build sh script') {\n+        stage('Initialize') {\n             steps {\n                 script {\n                     mailer.buildLogScriptPR()\n+\n+                    checkoutRepo(\"kogito-runtimes\")\n+                    checkoutRepo(\"kogito-apps\")\n+                    checkoutRepo(\"kogito-examples\")\n+                    checkoutRepo(\"kogito-examples\", \"kogito-examples-persistence\")\n+                    checkoutRepo(\"kogito-examples\", \"kogito-examples-events\")\n                 }\n             }\n         }\n         stage('Build kogito-runtimes') {\n             steps {\n-                dir(\"kogito-runtimes\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-runtimes', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install -Prun-code-coverage', false)\n-                        /*\n-                           The analysis must happen before the other stages as these clone different projects into a root\n-                           directory of kogito-runtimes and are by mistake incorporated in a test coverage report.\n-                         */\n-                        maven.runMavenWithSubmarineSettings('-e -nsu validate -Psonarcloud-analysis', false)\n-                    }\n+                script {\n+                    mavenInstall(\"kogito-runtimes\", false, [\"run-code-coverage\"])\n+                    /*\n+                    The analysis must happen before the other stages as these clone different projects into a root\n+                    directory of kogito-runtimes and are by mistake incorporated in a test coverage report.\n+                    */\n+                    mavenInstall(\"kogito-runtimes\", false, [\"sonarcloud-analysis\"], \"-e -nsu validate\")\n                 }\n             }\n         }\n         stage('Build kogito-apps') {\n             steps {\n-                dir(\"kogito-apps\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-apps', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install', false)\n-                    }\n-                }\n+                mavenInstall(\"kogito-apps\")\n             }\n         }\n         stage('Build kogito-examples') {\n             steps {\n-                dir(\"kogito-examples\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-examples', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install', false)\n-                    }\n-                }\n-                // Use a separate dir for persistence to not overwrite the test results\n-                dir(\"kogito-examples-persistence\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-examples', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install -Ppersistence', false)\n-                    }\n-                }\n-                // Use a separate dir for events to not overwrite the test results\n-                dir(\"kogito-examples-events\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-examples', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install -Pevents', false)\n-                    }\n-                }\n+                mavenInstall(\"kogito-examples\")\n+            }\n+        }\n+        stage('Build kogito-examples with persistence') {\n+            steps {\n+                mavenInstall(\"kogito-examples-persistence\", false, [\"persistence\"])\n+            }\n+        }\n+        stage('Build kogito-examples with events') {\n+            steps {\n+                mavenInstall(\"kogito-examples-events\", false, [\"events\"])\n             }\n         }\n     }\n     post {\n         always {\n             sh '$WORKSPACE/trace.sh'\n             junit '**/target/surefire-reports/**/*.xml, **/target/failsafe-reports/**/*.xml'\n+            cleanWs()\n         }\n         failure {\n             script {\n                 mailer.sendEmail_failedPR()\n             }\n-            cleanWs()\n         }\n         unstable {\n             script {\n                 mailer.sendEmail_unstablePR()\n             }\n-            cleanWs()\n         }\n         fixed {\n             script {\n                 mailer.sendEmail_fixedPR()\n             }\n-            cleanWs()\n-        }\n-        success {\n-            cleanWs()\n         }\n     }\n }\n+\n+void checkoutRepo(String repo, String dirName=repo) {\n+    dir(dirName) {\n+        githubscm.checkoutIfExists(repo, changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n+    }\n+}\n+\n+void mavenInstall(String directory, boolean skipTests = true, String[] profiles,  String extraArgs = \"\") {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAyOTgzMg=="}, "originalCommit": {"oid": "051898d60c004326b90f51c1bd77c88649ad21de"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDU5NTkyOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOTozMTo0N1rOG1xKzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODoxMjoyMVrOG2AYNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAzMzI5Mw==", "bodyText": "Does this need to be in the script step? I noticed that others are not.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/645#discussion_r459033293", "createdAt": "2020-07-22T19:31:47Z", "author": {"login": "MarianMacik"}, "path": "Jenkinsfile", "diffHunk": "@@ -21,88 +21,91 @@ pipeline {\n         MAVEN_OPTS = '-Xms1024m -Xmx4g'\n     }\n     stages {\n-        stage('build sh script') {\n+        stage('Initialize') {\n             steps {\n                 script {\n                     mailer.buildLogScriptPR()\n+\n+                    checkoutRepo(\"kogito-runtimes\")\n+                    checkoutRepo(\"kogito-apps\")\n+                    checkoutRepo(\"kogito-examples\")\n+                    checkoutRepo(\"kogito-examples\", \"kogito-examples-persistence\")\n+                    checkoutRepo(\"kogito-examples\", \"kogito-examples-events\")\n                 }\n             }\n         }\n         stage('Build kogito-runtimes') {\n             steps {\n-                dir(\"kogito-runtimes\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-runtimes', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install -Prun-code-coverage', false)\n-                        /*\n-                           The analysis must happen before the other stages as these clone different projects into a root\n-                           directory of kogito-runtimes and are by mistake incorporated in a test coverage report.\n-                         */\n-                        maven.runMavenWithSubmarineSettings('-e -nsu validate -Psonarcloud-analysis', false)\n-                    }\n+                script {\n+                    mavenInstall(\"kogito-runtimes\", false, [\"run-code-coverage\"])\n+                    /*\n+                    The analysis must happen before the other stages as these clone different projects into a root\n+                    directory of kogito-runtimes and are by mistake incorporated in a test coverage report.\n+                    */\n+                    mavenInstall(\"kogito-runtimes\", false, [\"sonarcloud-analysis\"], \"-e -nsu validate\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "051898d60c004326b90f51c1bd77c88649ad21de"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI4MjQ4Nw==", "bodyText": "nope, I moved it outside in the end ;)", "url": "https://github.com/kiegroup/kogito-runtimes/pull/645#discussion_r459282487", "createdAt": "2020-07-23T08:12:21Z", "author": {"login": "radtriste"}, "path": "Jenkinsfile", "diffHunk": "@@ -21,88 +21,91 @@ pipeline {\n         MAVEN_OPTS = '-Xms1024m -Xmx4g'\n     }\n     stages {\n-        stage('build sh script') {\n+        stage('Initialize') {\n             steps {\n                 script {\n                     mailer.buildLogScriptPR()\n+\n+                    checkoutRepo(\"kogito-runtimes\")\n+                    checkoutRepo(\"kogito-apps\")\n+                    checkoutRepo(\"kogito-examples\")\n+                    checkoutRepo(\"kogito-examples\", \"kogito-examples-persistence\")\n+                    checkoutRepo(\"kogito-examples\", \"kogito-examples-events\")\n                 }\n             }\n         }\n         stage('Build kogito-runtimes') {\n             steps {\n-                dir(\"kogito-runtimes\") {\n-                    script {\n-                        githubscm.checkoutIfExists('kogito-runtimes', changeAuthor, changeBranch, 'kiegroup', changeTarget, true)\n-                        maven.runMavenWithSubmarineSettings('clean install -Prun-code-coverage', false)\n-                        /*\n-                           The analysis must happen before the other stages as these clone different projects into a root\n-                           directory of kogito-runtimes and are by mistake incorporated in a test coverage report.\n-                         */\n-                        maven.runMavenWithSubmarineSettings('-e -nsu validate -Psonarcloud-analysis', false)\n-                    }\n+                script {\n+                    mavenInstall(\"kogito-runtimes\", false, [\"run-code-coverage\"])\n+                    /*\n+                    The analysis must happen before the other stages as these clone different projects into a root\n+                    directory of kogito-runtimes and are by mistake incorporated in a test coverage report.\n+                    */\n+                    mavenInstall(\"kogito-runtimes\", false, [\"sonarcloud-analysis\"], \"-e -nsu validate\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAzMzI5Mw=="}, "originalCommit": {"oid": "051898d60c004326b90f51c1bd77c88649ad21de"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4888, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}