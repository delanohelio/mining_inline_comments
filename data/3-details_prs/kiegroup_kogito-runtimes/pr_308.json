{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNTA4NTk2", "number": 308, "title": "KOGITO-855 - [Jobs Service] improve persisted jobs loading", "bodyText": "Schedule and load jobs in chunks, expressed in a period of time that can be configured, for instance, next 10 minutes, 30 minutes,  60 minutes...\nThe scheduler just handles the jobs in the current chunk in this way it is not necessary to schedule jobs that are supposed to be executed in a long time in the future.\nBesides, it was added the jobs load prioritization.", "createdAt": "2020-02-07T16:58:55Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308", "merged": true, "mergeCommit": {"oid": "83774a7428197740fae2a276d452d1dcb274d075"}, "closed": true, "closedAt": "2020-02-16T14:16:12Z", "author": {"login": "tiagodolphine"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcCCmPzgFqTM1NTMwODg3Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcEO3HVgBqjMwMzg1OTI5Mjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MzA4ODcz", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#pullrequestreview-355308873", "createdAt": "2020-02-07T17:15:30Z", "commit": {"oid": "fbd875fd8953210ee7010a7e631d53c0e6f94bdf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzoxNTozMFrOFnENXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzoxNTozMFrOFnENXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwNzc0MA==", "bodyText": "Shouldn't we add these properties on the README?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r376507740", "createdAt": "2020-02-07T17:15:30Z", "author": {"login": "spolti"}, "path": "addons/jobs/jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/BaseTimerJobScheduler.java", "diffHunk": "@@ -52,13 +55,19 @@\n     @ConfigProperty(name = \"kogito.jobs-service.maxIntervalLimitToRetryMillis\", defaultValue = \"60000\")\n     long maxIntervalLimitToRetryMillis;\n \n+    @ConfigProperty(name = \"kogito.jobs-service.schedulerChunkInMinutes\", defaultValue = \"10\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbd875fd8953210ee7010a7e631d53c0e6f94bdf"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MzA5OTcx", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#pullrequestreview-355309971", "createdAt": "2020-02-07T17:17:22Z", "commit": {"oid": "fbd875fd8953210ee7010a7e631d53c0e6f94bdf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzoxNzoyM1rOFnEQhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzoxNzoyM1rOFnEQhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwODU0OQ==", "bodyText": "just an opinion, wouldn't be better break this step in smaller pieces for a better code maintainability?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r376508549", "createdAt": "2020-02-07T17:17:23Z", "author": {"login": "spolti"}, "path": "addons/jobs/jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/BaseTimerJobScheduler.java", "diffHunk": "@@ -79,30 +89,45 @@ public BaseTimerJobScheduler(JobExecutor jobExecutor,\n                 .fromCompletionStage(jobRepository.exists(job.getId()))\n                 .flatMap(exists -> Boolean.TRUE.equals(exists)\n                         ? handleExistingJob(job)\n-                        : ReactiveStreams.of(Boolean.TRUE))\n-                .filter(Boolean.TRUE::equals)\n-                //2- calculate the delay (when the job should be executed)\n-                .map(checked -> job.getExpirationTime())\n-                .map(this::calculateDelay)\n-                .peek(delay -> Optional\n-                        .of(delay.isNegative())\n-                        .filter(Boolean.FALSE::equals)\n-                        .orElseThrow(() -> new RuntimeException(\"Delay should be positive\")))\n-                //3- schedule the job\n-                .map(delay -> doSchedule(delay, job))\n-                .flatMap(p -> p)\n-                .map(scheduleId -> ScheduledJob\n-                        .builder()\n-                        .job(job)\n-                        .scheduledId(scheduleId)\n-                        .status(JobStatus.SCHEDULED)\n-                        .build())\n-                .map(scheduledJob -> jobRepository.save(scheduledJob))\n-                .flatMapCompletionStage(p -> p)\n+                        : ReactiveStreams.of(job))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbd875fd8953210ee7010a7e631d53c0e6f94bdf"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NzQ1MTk4", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#pullrequestreview-355745198", "createdAt": "2020-02-10T08:09:18Z", "commit": {"oid": "fbd875fd8953210ee7010a7e631d53c0e6f94bdf"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwODowOToxOFrOFnc4rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwODoxNDoxNVrOFnc_LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkxMjA0NQ==", "bodyText": "why to keep these two properties in different time units? one in minutes and the other in millis?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r376912045", "createdAt": "2020-02-10T08:09:18Z", "author": {"login": "mswiderski"}, "path": "addons/jobs/jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/JobSchedulerManager.java", "diffHunk": "@@ -35,22 +40,49 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(JobSchedulerManager.class);\n \n+    @ConfigProperty(name = \"kogito.jobs-service.schedulerChunkInMinutes\", defaultValue = \"10\")\n+    long schedulerChunkInMinutes;\n+\n+    @ConfigProperty(name = \"kogito.jobs-service.loadJobIntervalInMillis\", defaultValue = \"60000\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbd875fd8953210ee7010a7e631d53c0e6f94bdf"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkxMzUxOQ==", "bodyText": "so the load of jobs will run every minute by default and the jobs to be loaded are for 10 min from current time. so that means every minute we load next 10 min of jobs. Isn't that we will get lot of duplicates to filter out?\nwouldn't it be better to run less frequently ... close to the chunk size/time and just to load next chunk and thus no need to filter out duplicates? This would make a real difference in case there are lot of jobs in given chunk.\nI don't think we need to worry about scheduled jobs in between (like the chunk that was already loaded) as this is already checked upon scheduling.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r376913519", "createdAt": "2020-02-10T08:13:38Z", "author": {"login": "mswiderski"}, "path": "addons/jobs/jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/JobSchedulerManager.java", "diffHunk": "@@ -35,22 +40,49 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(JobSchedulerManager.class);\n \n+    @ConfigProperty(name = \"kogito.jobs-service.schedulerChunkInMinutes\", defaultValue = \"10\")\n+    long schedulerChunkInMinutes;\n+\n+    @ConfigProperty(name = \"kogito.jobs-service.loadJobIntervalInMillis\", defaultValue = \"60000\")\n+    long loadJobIntervalInMillis;\n+\n     @Inject\n     VertxJobScheduler scheduler;\n \n     @Inject\n     ReactiveJobRepository repository;\n \n-    CompletionStage<Void> loadScheduledJobs(@Observes StartupEvent startupEvent) {\n-        LOGGER.info(\"Loading scheduled jobs\");\n-        return repository.findByStatus(JobStatus.SCHEDULED, JobStatus.RETRY)\n-                //is is necessary to skip error on the publisher to continue processing, otherwise the subscribe\n-                // terminated\n+    @Inject\n+    Vertx vertx;\n+\n+    void onStartup(@Observes StartupEvent startupEvent) {\n+        //first execution\n+        vertx.runOnContext(v -> loadScheduledJobs());\n+        //periodic execution\n+        vertx.setPeriodic(loadJobIntervalInMillis, id -> loadScheduledJobs());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbd875fd8953210ee7010a7e631d53c0e6f94bdf"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkxMzcwOA==", "bodyText": "+1 and to update wiki page about jobs service", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r376913708", "createdAt": "2020-02-10T08:14:15Z", "author": {"login": "mswiderski"}, "path": "addons/jobs/jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/BaseTimerJobScheduler.java", "diffHunk": "@@ -52,13 +55,19 @@\n     @ConfigProperty(name = \"kogito.jobs-service.maxIntervalLimitToRetryMillis\", defaultValue = \"60000\")\n     long maxIntervalLimitToRetryMillis;\n \n+    @ConfigProperty(name = \"kogito.jobs-service.schedulerChunkInMinutes\", defaultValue = \"10\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwNzc0MA=="}, "originalCommit": {"oid": "fbd875fd8953210ee7010a7e631d53c0e6f94bdf"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbd875fd8953210ee7010a7e631d53c0e6f94bdf", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/fbd875fd8953210ee7010a7e631d53c0e6f94bdf", "committedDate": "2020-02-07T16:51:45Z", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests"}, "afterCommit": {"oid": "28305ae8fa5bff8ac2068e1a64aa845a60ae1bc3", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/28305ae8fa5bff8ac2068e1a64aa845a60ae1bc3", "committedDate": "2020-02-10T13:14:58Z", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28305ae8fa5bff8ac2068e1a64aa845a60ae1bc3", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/28305ae8fa5bff8ac2068e1a64aa845a60ae1bc3", "committedDate": "2020-02-10T13:14:58Z", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk"}, "afterCommit": {"oid": "2860a9ef2e48a44a58368c91688fff2bb20aed73", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/2860a9ef2e48a44a58368c91688fff2bb20aed73", "committedDate": "2020-02-11T17:01:24Z", "message": "KOGITO-532 Adding job load prioritization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MDcxMTEw", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#pullrequestreview-357071110", "createdAt": "2020-02-11T23:26:34Z", "commit": {"oid": "2860a9ef2e48a44a58368c91688fff2bb20aed73"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3Mjk0NDM1", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#pullrequestreview-357294435", "createdAt": "2020-02-12T09:21:42Z", "commit": {"oid": "2860a9ef2e48a44a58368c91688fff2bb20aed73"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOToyMTo0MlrOFom-Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOToyNDo1MlrOFonEww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEyNTgzMA==", "bodyText": "Can you please just quickly explain these 3 config parameters?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r378125830", "createdAt": "2020-02-12T09:21:42Z", "author": {"login": "MarianMacik"}, "path": "addons/jobs/jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/BaseTimerJobScheduler.java", "diffHunk": "@@ -46,19 +49,29 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(BaseTimerJobScheduler.class);\n \n-    @ConfigProperty(name = \"kogito.jobs-service.backoffRetryMillis\", defaultValue = \"1000\")\n+    @ConfigProperty(name = \"kogito.jobs-service.backoffRetryMillis\")\n     long backoffRetryMillis;\n \n-    @ConfigProperty(name = \"kogito.jobs-service.maxIntervalLimitToRetryMillis\", defaultValue = \"60000\")\n+    @ConfigProperty(name = \"kogito.jobs-service.maxIntervalLimitToRetryMillis\")\n     long maxIntervalLimitToRetryMillis;\n \n+    /**\n+     * The current chunk size  in minutes the scheduler handles, it is used to keep a limit number of jobs scheduled\n+     * in the in-memory scheduler.\n+     */\n+    @ConfigProperty(name = \"kogito.jobs-service.schedulerChunkInMinutes\")\n+    long schedulerChunkInMinutes;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2860a9ef2e48a44a58368c91688fff2bb20aed73"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEyNzU1NQ==", "bodyText": "Does this mean that the chunk is constantly moving?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r378127555", "createdAt": "2020-02-12T09:24:52Z", "author": {"login": "MarianMacik"}, "path": "addons/jobs/jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/BaseTimerJobScheduler.java", "diffHunk": "@@ -98,11 +129,18 @@ public BaseTimerJobScheduler(JobExecutor jobExecutor,\n                         .status(JobStatus.SCHEDULED)\n                         .build())\n                 .map(scheduledJob -> jobRepository.save(scheduledJob))\n-                .flatMapCompletionStage(p -> p)\n-                .buildRs();\n+                .flatMapCompletionStage(p -> p);\n+    }\n+\n+    /**\n+     * Check if it should be scheduled (on the current chunk) or saved to be scheduled later.\n+     * @return\n+     */\n+    private boolean isOnCurrentSchedulerChunk(Job job) {\n+        return job.getExpirationTime().isBefore(DateUtil.now().plusMinutes(schedulerChunkInMinutes));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2860a9ef2e48a44a58368c91688fff2bb20aed73"}, "originalPosition": 113}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MzEyNjI0", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#pullrequestreview-357312624", "createdAt": "2020-02-12T09:48:00Z", "commit": {"oid": "2860a9ef2e48a44a58368c91688fff2bb20aed73"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOTo0ODowMVrOFon3bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOTo0ODowMVrOFon3bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE0MDUyNQ==", "bodyText": "I guess this will run periodically so maybe changing log level to debug instead of info to not spam logs too much, wdyt?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/308#discussion_r378140525", "createdAt": "2020-02-12T09:48:01Z", "author": {"login": "mswiderski"}, "path": "addons/jobs/jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/JobSchedulerManager.java", "diffHunk": "@@ -35,22 +41,65 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(JobSchedulerManager.class);\n \n+    /**\n+     * The current chunk size  in minutes the scheduler handles, it is used to keep a limit number of jobs scheduled\n+     * in the in-memory scheduler.\n+     */\n+    @ConfigProperty(name = \"kogito.jobs-service.schedulerChunkInMinutes\")\n+    long schedulerChunkInMinutes;\n+\n+    /**\n+     * The interval the job loading method runs to fetch the persisted jobs from the repository.\n+     */\n+    @ConfigProperty(name = \"kogito.jobs-service.loadJobIntervalInMinutes\")\n+    long loadJobIntervalInMinutes;\n+\n     @Inject\n     VertxJobScheduler scheduler;\n \n     @Inject\n     ReactiveJobRepository repository;\n \n-    CompletionStage<Void> loadScheduledJobs(@Observes StartupEvent startupEvent) {\n-        LOGGER.info(\"Loading scheduled jobs\");\n-        return repository.findByStatus(JobStatus.SCHEDULED, JobStatus.RETRY)\n-                //is is necessary to skip error on the publisher to continue processing, otherwise the subscribe\n-                // terminated\n+    @Inject\n+    Vertx vertx;\n+\n+    void onStartup(@Observes StartupEvent startupEvent) {\n+        if (loadJobIntervalInMinutes > schedulerChunkInMinutes) {\n+            LOGGER.warn(\"The loadJobIntervalInMinutes ({}) cannot be greater than schedulerChunkInMinutes ({}), \" +\n+                                \"setting value {} for both\",\n+                        loadJobIntervalInMinutes,\n+                        schedulerChunkInMinutes,\n+                        schedulerChunkInMinutes);\n+            loadJobIntervalInMinutes = schedulerChunkInMinutes;\n+        }\n+\n+        //first execution\n+        vertx.runOnContext(v -> loadScheduledJobs());\n+        //periodic execution\n+        vertx.setPeriodic(TimeUnit.MINUTES.toMillis(loadJobIntervalInMinutes), id -> loadScheduledJobs());\n+    }\n+\n+    //Runs periodically loading the jobs from the repository in chunks\n+    void loadScheduledJobs() {\n+        loadJobsInCurrentChunk()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2860a9ef2e48a44a58368c91688fff2bb20aed73"}, "originalPosition": 73}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "789ef984cd5f3ab023c93714a2a5bc34e354e5a7", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/789ef984cd5f3ab023c93714a2a5bc34e354e5a7", "committedDate": "2020-02-12T16:26:26Z", "message": "Changing log level to debug on jobs loading"}, "afterCommit": {"oid": "dd301d71d838116b42d560273b6fae0635c3df9d", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/dd301d71d838116b42d560273b6fae0635c3df9d", "committedDate": "2020-02-13T15:50:17Z", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dd301d71d838116b42d560273b6fae0635c3df9d", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/dd301d71d838116b42d560273b6fae0635c3df9d", "committedDate": "2020-02-13T15:50:17Z", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest"}, "afterCommit": {"oid": "be05639e5e1724f2a8d5a732ea0014afb87b01bf", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/be05639e5e1724f2a8d5a732ea0014afb87b01bf", "committedDate": "2020-02-13T18:00:02Z", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "be05639e5e1724f2a8d5a732ea0014afb87b01bf", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/be05639e5e1724f2a8d5a732ea0014afb87b01bf", "committedDate": "2020-02-13T18:00:02Z", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest"}, "afterCommit": {"oid": "f7b84aacd1216a65e93e765c8eab8e1be547a338", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/f7b84aacd1216a65e93e765c8eab8e1be547a338", "committedDate": "2020-02-13T20:42:36Z", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f7b84aacd1216a65e93e765c8eab8e1be547a338", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/f7b84aacd1216a65e93e765c8eab8e1be547a338", "committedDate": "2020-02-13T20:42:36Z", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest"}, "afterCommit": {"oid": "8bbb68eda18f078409b29b460288891f43bf9be0", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/8bbb68eda18f078409b29b460288891f43bf9be0", "committedDate": "2020-02-14T11:32:51Z", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40e122c2a51ba62a73cf012b8ab3a5659ead4503", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/40e122c2a51ba62a73cf012b8ab3a5659ead4503", "committedDate": "2020-02-14T12:40:21Z", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8bbb68eda18f078409b29b460288891f43bf9be0", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/8bbb68eda18f078409b29b460288891f43bf9be0", "committedDate": "2020-02-14T11:32:51Z", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest"}, "afterCommit": {"oid": "40e122c2a51ba62a73cf012b8ab3a5659ead4503", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/40e122c2a51ba62a73cf012b8ab3a5659ead4503", "committedDate": "2020-02-14T12:40:21Z", "message": "[Jobs Service] improve persisted jobs loading\n\nHandle pre processing job\n\nInserting the chunk logic and conifguration for the scheduler\n\nInmemory jobs loading and reschedule fixes\n\nset max results on infinispan repository\n\nChanging jobs loading to use vertx scheduling\n\nChanging jobs loading to use vertx scheduling\n\ninserting unit tests\n\nApply pr comments let the jobs load interval in the same size as the chunk\n\nKOGITO-532 Adding job load prioritization\n\nChanging log level to debug on jobs loading\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest\n\nFix missing mock on JobSchedulerManagerTest"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3719, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}