{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2OTc4NjQz", "number": 802, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzoyODoyMlrOEsod-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzoyODoyMlrOEsod-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MjM1ODMzOnYy", "diffSide": "RIGHT", "path": "addons/tracing/tracing-decision-common/src/main/java/org/kie/kogito/tracing/decision/DecisionTracingCollector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzoyODoyMlrOHf-v4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwODoxNjoyNlrOHgay5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5NTk3MA==", "bodyText": "Is it ok to only log an error without throwing any exception or inform user also some other way?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/802#discussion_r503295970", "createdAt": "2020-10-12T13:28:22Z", "author": {"login": "jiripetrlik"}, "path": "addons/tracing/tracing-decision-common/src/main/java/org/kie/kogito/tracing/decision/DecisionTracingCollector.java", "diffHunk": "@@ -82,16 +83,23 @@ public void addEvent(EvaluateEvent event) {\n \n         if (terminationDetectorMap.get(executionId).isTerminated()) {\n             DMNModel dmnModel = modelSupplier.apply(event.getModelNamespace(), event.getModelName());\n-            String payload = aggregate(dmnModel, executionId, cacheMap.get(executionId));\n-            payloadConsumer.accept(payload);\n-            LOG.debug(\"Generated aggregated event for evaluation {} (length {})\", executionId, payload.length());\n+            Optional<String> optPayload = aggregate(dmnModel, executionId, cacheMap.get(executionId));\n+\n+            if (optPayload.isPresent()) {\n+                String payload = optPayload.get();\n+                payloadConsumer.accept(payload);\n+                LOG.debug(\"Generated aggregated event for evaluation {} (length {})\", executionId, payload.length());\n+            } else {\n+                LOG.error(\"Failed aggregating data for evaluation {}\", executionId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b00a6d9e57721aedb8e4a9dbd214b048716520b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzc1NTQ5NA==", "bodyText": "This PR is an integration of KOGITO-3297.\nYes I think this approach is correct because here in case of error we're simply not sending a trace event that the user should not be aware of. We discussed this approach with Optional here.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/802#discussion_r503755494", "createdAt": "2020-10-13T08:16:26Z", "author": {"login": "kostola"}, "path": "addons/tracing/tracing-decision-common/src/main/java/org/kie/kogito/tracing/decision/DecisionTracingCollector.java", "diffHunk": "@@ -82,16 +83,23 @@ public void addEvent(EvaluateEvent event) {\n \n         if (terminationDetectorMap.get(executionId).isTerminated()) {\n             DMNModel dmnModel = modelSupplier.apply(event.getModelNamespace(), event.getModelName());\n-            String payload = aggregate(dmnModel, executionId, cacheMap.get(executionId));\n-            payloadConsumer.accept(payload);\n-            LOG.debug(\"Generated aggregated event for evaluation {} (length {})\", executionId, payload.length());\n+            Optional<String> optPayload = aggregate(dmnModel, executionId, cacheMap.get(executionId));\n+\n+            if (optPayload.isPresent()) {\n+                String payload = optPayload.get();\n+                payloadConsumer.accept(payload);\n+                LOG.debug(\"Generated aggregated event for evaluation {} (length {})\", executionId, payload.length());\n+            } else {\n+                LOG.error(\"Failed aggregating data for evaluation {}\", executionId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5NTk3MA=="}, "originalCommit": {"oid": "0b00a6d9e57721aedb8e4a9dbd214b048716520b"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4822, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}