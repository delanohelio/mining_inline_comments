{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MjUwMjY3", "number": 630, "title": "KOGITO-2737 - refactoring injection of addons configuration", "bodyText": "Hi,\nI'd like to propose the following refactoring of the injection of the addons configurations. Since atm the addons are injected one by one with a simple boolean, I thought that using an object would make it much more easier to extend and maintain.\nJust as a side note: I'm working on a component that needs to know if the tracing and the monitoring addons are activated, and I would have had to inject both of them with some redundant code for the reason above.\nLet me know what do you think :)\nMany thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-07-13T13:18:21Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630", "merged": true, "mergeCommit": {"oid": "af6e585ae17d886019bc7185a2dd0934784683a2"}, "closed": true, "closedAt": "2020-07-15T06:52:46Z", "author": {"login": "r00ta"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0hOcJgH2gAyNDQ4MjUwMjY3OjM4ZTRlMzY5M2Y1ZDQwZTY5YTdiNjI4MzZmOGUyOWQ4OWNkYjFiM2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1E8LQgFqTQ0ODY3MzI1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c", "committedDate": "2020-07-13T13:12:47Z", "message": "refactoring injection of addons configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDEyMjg4", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#pullrequestreview-447412288", "createdAt": "2020-07-13T16:30:57Z", "commit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjozMDo1N1rOGwwXcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo1ODoxM1rOGwxYSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3NzI2Ng==", "bodyText": "Side note because it is not related to this PR. This code is quite error prone, if withAddons is invoked multiple times, multiple PrometheusLabelers are created", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453777266", "createdAt": "2020-07-13T16:30:57Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/ApplicationGenerator.java", "diffHunk": "@@ -192,17 +192,12 @@ public ApplicationGenerator withRuleUnits(boolean hasRuleUnits) {\n         return this;\n     }\n \n-   public ApplicationGenerator withPersistence(boolean persistence) {\n-       this.persistence = persistence;\n-       return this;\n-   }\n-\n-   public ApplicationGenerator withMonitoring(boolean monitoring) {\n-       if (monitoring) {\n-           this.labelers.add(new PrometheusLabeler());\n-       }\n-       return this;\n-   }\n+    public ApplicationGenerator withAddons(AddonsConfig addonsConfig) {\n+        if (addonsConfig.useMonitoring()) {\n+            this.labelers.add(new PrometheusLabeler());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5MTc5Mg==", "bodyText": "What about create a DEFAULT instance as public static final field in AddonsConfig to use as default instance in the codebase? In this way we can also define a different default value in a single place", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453791792", "createdAt": "2020-07-13T16:54:48Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DMNRestResourceGenerator.java", "diffHunk": "@@ -56,7 +57,7 @@\n     private final String resourceClazzName;\n     private final String appCanonicalName;\n     private DependencyInjectionAnnotator annotator;\n-    private boolean useMonitoring;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5MjQyMA==", "bodyText": "Same comment about use a common default instance", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453792420", "createdAt": "2020-07-13T16:55:47Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionCodegen.java", "diffHunk": "@@ -136,7 +136,7 @@ private static DecisionCodegen ofDecisions(List<DMNResource> resources) {\n \n     private final List<DMNResource> resources;\n     private final List<GeneratedFile> generatedFiles = new ArrayList<>();\n-    private boolean useMonitoring = false;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5Mjc1Mg==", "bodyText": "Same as above", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453792752", "createdAt": "2020-07-13T16:56:19Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/decision/DecisionContainerGenerator.java", "diffHunk": "@@ -55,16 +56,16 @@\n \n     private String applicationCanonicalName;\n     private final List<DMNResource> resources;\n-    private boolean useTracing = false;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5Mjg3Nw==", "bodyText": "Same as above", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453792877", "createdAt": "2020-07-13T16:56:31Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/process/ProcessCodegen.java", "diffHunk": "@@ -204,7 +205,7 @@ private static Process parseWorkflowFile(Resource r, String parser) {\n     private final Map<String, WorkflowProcess> processes;\n     private final List<GeneratedFile> generatedFiles = new ArrayList<>();\n \n-    private boolean persistence;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5MzM0Mg==", "bodyText": "Same as above", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453793342", "createdAt": "2020-07-13T16:57:18Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/rules/IncrementalRuleCodegen.java", "diffHunk": "@@ -184,7 +184,7 @@ private static ResourceType typeOf(FileSystemResource r) {\n \n     private KieModuleModel kieModuleModel;\n     private boolean hotReloadMode = false;\n-    private boolean useMonitoring = false;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5MzQ3MA==", "bodyText": "Same as above", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453793470", "createdAt": "2020-07-13T16:57:30Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/process/ProcessGenerator.java", "diffHunk": "@@ -83,7 +84,7 @@\n     private final String appCanonicalName;\n     private String targetTypeName;\n     private DependencyInjectionAnnotator annotator;\n-    private boolean persistence;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc5Mzg2Ng==", "bodyText": "Same as above", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#discussion_r453793866", "createdAt": "2020-07-13T16:58:13Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/rules/RuleUnitGenerator.java", "diffHunk": "@@ -56,7 +56,7 @@\n     private DependencyInjectionAnnotator annotator;\n     private Collection<QueryModel> queries;\n     private String applicationPackageName;\n-    private boolean useMonitoring;\n+    private AddonsConfig addonsConfig = new AddonsConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38e4e3693f5d40e69a7b62836f8e29d89cdb1b3c"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc7be1b50ea63c101ab438e80c09b50437586fdb", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/dc7be1b50ea63c101ab438e80c09b50437586fdb", "committedDate": "2020-07-14T06:17:34Z", "message": "create final static field in AddonsConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a77f53cd8de413898b125537972c1e076afa9c0", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0a77f53cd8de413898b125537972c1e076afa9c0", "committedDate": "2020-07-14T07:22:22Z", "message": "use hashmap instead of list for labelers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3OTcwMTYy", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#pullrequestreview-447970162", "createdAt": "2020-07-14T10:08:12Z", "commit": {"oid": "0a77f53cd8de413898b125537972c1e076afa9c0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3OTc4Mzc0", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#pullrequestreview-447978374", "createdAt": "2020-07-14T10:20:28Z", "commit": {"oid": "0a77f53cd8de413898b125537972c1e076afa9c0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MDIwNTQ0", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#pullrequestreview-448020544", "createdAt": "2020-07-14T11:28:33Z", "commit": {"oid": "0a77f53cd8de413898b125537972c1e076afa9c0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MDYwODg2", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#pullrequestreview-448060886", "createdAt": "2020-07-14T12:31:24Z", "commit": {"oid": "0a77f53cd8de413898b125537972c1e076afa9c0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3998f57ace8a1ee0d74bfbb7018696ccdbd6b3b", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/a3998f57ace8a1ee0d74bfbb7018696ccdbd6b3b", "committedDate": "2020-07-14T12:56:24Z", "message": "add AddonsConfigTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8aa4b2510e59cb9f0bd1dd288e4145b66a6f8af", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/b8aa4b2510e59cb9f0bd1dd288e4145b66a6f8af", "committedDate": "2020-07-14T13:00:52Z", "message": "update licence header"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MTUwMzI4", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#pullrequestreview-448150328", "createdAt": "2020-07-14T14:17:31Z", "commit": {"oid": "b8aa4b2510e59cb9f0bd1dd288e4145b66a6f8af"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NjczMjU0", "url": "https://github.com/kiegroup/kogito-runtimes/pull/630#pullrequestreview-448673254", "createdAt": "2020-07-15T06:49:25Z", "commit": {"oid": "b8aa4b2510e59cb9f0bd1dd288e4145b66a6f8af"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4241, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}