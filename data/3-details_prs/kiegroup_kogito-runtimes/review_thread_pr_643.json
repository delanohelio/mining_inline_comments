{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0MjQzNTUw", "number": 643, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTozNzoxNVrOEST8vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTozNzoxNVrOEST8vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjM2NjY4OnYy", "diffSide": "RIGHT", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/GeneratedFile.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTozNzoxNVrOG3bDXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo1MDoxOFrOG4q4pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2ODA5Mw==", "bodyText": "To be honest I think RESOURCE was intended for the same use case but it is only used for autogenerated Grafana dashboards that are not needed to be visible at runtime so we had not faced this problem but they are already generated resources done \"after generate-resources maven phase\".\nThus, what about update RESOURCE behavior to match your need? (/cc @r00ta )", "url": "https://github.com/kiegroup/kogito-runtimes/pull/643#discussion_r460768093", "createdAt": "2020-07-27T09:37:15Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/GeneratedFile.java", "diffHunk": "@@ -36,6 +36,10 @@\n         MESSAGE_CONSUMER( false ),\n         MESSAGE_PRODUCER( false ),\n         RESOURCE(false),\n+        /** Represent a cp resource automatically generated during codegen, so after generate-resources maven phase.\n+         * For Quarkus it will be added to target/classes and subject of GeneratedResourceBuildItem and NativeImageResourceBuildItem\n+         * When using the kogito-maven-plugin (and SB), it will be added to target/classes */\n+        GENERATED_CP_RESOURCE(false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf6c3585652b34c81f429a176583499b5e035f80"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2OTk1OA==", "bodyText": "Can't, since the behaviour is different.\nIf you remember, I asked this very question, and the response I got was that the Grafana resources are not \"classpath resources\" but are used for Containers.\nHence the reason why the behaviour for GENERATED_CP_RESOURCE is different of the one for RESOURCE .", "url": "https://github.com/kiegroup/kogito-runtimes/pull/643#discussion_r460769958", "createdAt": "2020-07-27T09:40:27Z", "author": {"login": "tarilabs"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/GeneratedFile.java", "diffHunk": "@@ -36,6 +36,10 @@\n         MESSAGE_CONSUMER( false ),\n         MESSAGE_PRODUCER( false ),\n         RESOURCE(false),\n+        /** Represent a cp resource automatically generated during codegen, so after generate-resources maven phase.\n+         * For Quarkus it will be added to target/classes and subject of GeneratedResourceBuildItem and NativeImageResourceBuildItem\n+         * When using the kogito-maven-plugin (and SB), it will be added to target/classes */\n+        GENERATED_CP_RESOURCE(false),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2ODA5Mw=="}, "originalCommit": {"oid": "cf6c3585652b34c81f429a176583499b5e035f80"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzNTY2MA==", "bodyText": "Yes but @r00ta realized that there will be the same issue now with the operator: it has to access them in some way while for now in the example we use maven to \"provision\" the files ( https://github.com/kiegroup/kogito-examples/blob/stable/dmn-drools-quarkus-metrics/pom.xml#L100 ).", "url": "https://github.com/kiegroup/kogito-runtimes/pull/643#discussion_r460835660", "createdAt": "2020-07-27T11:52:06Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/GeneratedFile.java", "diffHunk": "@@ -36,6 +36,10 @@\n         MESSAGE_CONSUMER( false ),\n         MESSAGE_PRODUCER( false ),\n         RESOURCE(false),\n+        /** Represent a cp resource automatically generated during codegen, so after generate-resources maven phase.\n+         * For Quarkus it will be added to target/classes and subject of GeneratedResourceBuildItem and NativeImageResourceBuildItem\n+         * When using the kogito-maven-plugin (and SB), it will be added to target/classes */\n+        GENERATED_CP_RESOURCE(false),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2ODA5Mw=="}, "originalCommit": {"oid": "cf6c3585652b34c81f429a176583499b5e035f80"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg0NDU5NQ==", "bodyText": "yet, it is a different use-case, it's not a classpath resource since it's not accessed from Java code", "url": "https://github.com/kiegroup/kogito-runtimes/pull/643#discussion_r460844595", "createdAt": "2020-07-27T12:10:35Z", "author": {"login": "tarilabs"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/GeneratedFile.java", "diffHunk": "@@ -36,6 +36,10 @@\n         MESSAGE_CONSUMER( false ),\n         MESSAGE_PRODUCER( false ),\n         RESOURCE(false),\n+        /** Represent a cp resource automatically generated during codegen, so after generate-resources maven phase.\n+         * For Quarkus it will be added to target/classes and subject of GeneratedResourceBuildItem and NativeImageResourceBuildItem\n+         * When using the kogito-maven-plugin (and SB), it will be added to target/classes */\n+        GENERATED_CP_RESOURCE(false),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2ODA5Mw=="}, "originalCommit": {"oid": "cf6c3585652b34c81f429a176583499b5e035f80"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5NjAyNg==", "bodyText": "Hi @tarilabs @danielezonca , last week I started experimenting a bit the operator thing and one option would be to expose the generated dashboards with an endpoint in the kogito-runtime application. The endpoint might be exposed with the monitoring-addon, so that the operator can fetch them and do what is needed. If we want to go in that direction, we will have to turn the dashboards into classpath resources. I still have to close some tasks before that one, and I'd like to show a little demo to the operator's guys before moving forward.\nIf it's ok for you, if we will go into that direction I would refactor the runtime and rename GENERATED_CP_RESOURCE with RESOURCE so that we remove the possibility that a generated resource is outside the jar", "url": "https://github.com/kiegroup/kogito-runtimes/pull/643#discussion_r460896026", "createdAt": "2020-07-27T13:39:10Z", "author": {"login": "r00ta"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/GeneratedFile.java", "diffHunk": "@@ -36,6 +36,10 @@\n         MESSAGE_CONSUMER( false ),\n         MESSAGE_PRODUCER( false ),\n         RESOURCE(false),\n+        /** Represent a cp resource automatically generated during codegen, so after generate-resources maven phase.\n+         * For Quarkus it will be added to target/classes and subject of GeneratedResourceBuildItem and NativeImageResourceBuildItem\n+         * When using the kogito-maven-plugin (and SB), it will be added to target/classes */\n+        GENERATED_CP_RESOURCE(false),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2ODA5Mw=="}, "originalCommit": {"oid": "cf6c3585652b34c81f429a176583499b5e035f80"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkyMjQ4Nw==", "bodyText": "good for me, so we are not blocking this PR for future eventual work.\nI have no objection if later you will be refactoring out both resource variant as one, when you will work on it as part of the operator dashboard.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/643#discussion_r460922487", "createdAt": "2020-07-27T14:16:24Z", "author": {"login": "tarilabs"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/GeneratedFile.java", "diffHunk": "@@ -36,6 +36,10 @@\n         MESSAGE_CONSUMER( false ),\n         MESSAGE_PRODUCER( false ),\n         RESOURCE(false),\n+        /** Represent a cp resource automatically generated during codegen, so after generate-resources maven phase.\n+         * For Quarkus it will be added to target/classes and subject of GeneratedResourceBuildItem and NativeImageResourceBuildItem\n+         * When using the kogito-maven-plugin (and SB), it will be added to target/classes */\n+        GENERATED_CP_RESOURCE(false),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2ODA5Mw=="}, "originalCommit": {"oid": "cf6c3585652b34c81f429a176583499b5e035f80"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3NjA3MA==", "bodyText": "https://issues.redhat.com/browse/KOGITO-2901", "url": "https://github.com/kiegroup/kogito-runtimes/pull/643#discussion_r462076070", "createdAt": "2020-07-29T06:50:18Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/GeneratedFile.java", "diffHunk": "@@ -36,6 +36,10 @@\n         MESSAGE_CONSUMER( false ),\n         MESSAGE_PRODUCER( false ),\n         RESOURCE(false),\n+        /** Represent a cp resource automatically generated during codegen, so after generate-resources maven phase.\n+         * For Quarkus it will be added to target/classes and subject of GeneratedResourceBuildItem and NativeImageResourceBuildItem\n+         * When using the kogito-maven-plugin (and SB), it will be added to target/classes */\n+        GENERATED_CP_RESOURCE(false),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2ODA5Mw=="}, "originalCommit": {"oid": "cf6c3585652b34c81f429a176583499b5e035f80"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4887, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}