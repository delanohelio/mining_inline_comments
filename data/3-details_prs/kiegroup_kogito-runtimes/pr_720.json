{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNjYxMjQy", "number": 720, "title": "KOGITO-2914: connect Trusty service and Explainability service", "bodyText": "General description\nThis PR includes multiple tickets because the are all correlated to close the end to end loop ([involved component]):\n\nKOGITO-3086: implement a remote PredictionProvider that uses /predict API to calculate explainability. To do that, refactor explainability-core to support not blocking execution [explainability-addon][explainability-core]\nKOGITO-2944: implement explainability DTOs for input and output and connect them to explainability-core [trusty-service][explainbility-service]\nKOGITO-2945: store and read explainability result inside trusty-service [trusty-service]\nKOGITO-2914: expose explainability information as REST featureImportance endpoint [trusty-service]\n\nDescription of this PR\nMost of the changes are not in this repo.\nThis PR contains:\n\nExtract predict-api as independent addon for flexibility (btw tracing addon depends on explainability addon). We have now explainability-quarkus-addon and explainability-springboot-addon to just get /predict API\nCreate typedvalue-api module that contains DTO for value serialization. They are now used by TraceEvents (tracing-addon + trusty-service) and by explainability events too\n\nList of PRs\n\n#720\nkiegroup/kogito-apps#410", "createdAt": "2020-08-24T17:25:39Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/720", "merged": true, "mergeCommit": {"oid": "1483e0705b4c8bef8fa5a39d6600e7b15c80ff8c"}, "closed": true, "closedAt": "2020-08-31T09:27:11Z", "author": {"login": "kostola"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCD_jcgH2gAyNDcyNjYxMjQyOjNiMjFiOTFkZjQ5NGMzMjllN2U5Y2NhZWE5YzM0ODk5NTUzZTkzOTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEONRbAFqTQ3ODQwMzg2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3b21b91df494c329e7e9ccaea9c34899553e9398", "author": {"user": {"login": "kostola", "name": "Alessandro Costa"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/3b21b91df494c329e7e9ccaea9c34899553e9398", "committedDate": "2020-08-24T15:04:13Z", "message": "KOGITO-2914: add tracing-typedvalue-api module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38d0fe699f7acb46c0b9c0257786dbe29d679af9", "author": {"user": {"login": "kostola", "name": "Alessandro Costa"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/38d0fe699f7acb46c0b9c0257786dbe29d679af9", "committedDate": "2020-08-24T15:04:13Z", "message": "KOGITO-2914: renaming classes in tracing-typedvalue-api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1284d8d8078c601c8c72c7776aa273de41e27327", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/1284d8d8078c601c8c72c7776aa273de41e27327", "committedDate": "2020-08-24T15:04:13Z", "message": "Refactored predict-api as explainability addon + accept batch requests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ade91d587e5ca7a03ae6588791feb544a4a0220", "author": {"user": {"login": "kostola", "name": "Alessandro Costa"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/8ade91d587e5ca7a03ae6588791feb544a4a0220", "committedDate": "2020-08-24T15:04:13Z", "message": "KOGITO-2914: rename tracing-typedvalue-api to typedvalue-api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd371b0ffdbf6d4ae2e92e82428ef077f0928cf0", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/dd371b0ffdbf6d4ae2e92e82428ef077f0928cf0", "committedDate": "2020-08-24T17:42:16Z", "message": "[KOGITO-2914] Renamed explainability-common to explainability-addon-common + minor refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "655b5afd41fb197102e1b55916f0165bf4c536a3", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/655b5afd41fb197102e1b55916f0165bf4c536a3", "committedDate": "2020-08-24T17:44:44Z", "message": "[KOGITO-2914] Minor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNzI3MDc2", "url": "https://github.com/kiegroup/kogito-runtimes/pull/720#pullrequestreview-473727076", "createdAt": "2020-08-24T17:51:29Z", "commit": {"oid": "655b5afd41fb197102e1b55916f0165bf4c536a3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzo1MTozMFrOHFwBKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxODozMzowNlrOHFxdUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5MTY1Ng==", "bodyText": "add also a test with more than one request in the body?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/720#discussion_r475791656", "createdAt": "2020-08-24T17:51:30Z", "author": {"login": "r00ta"}, "path": "addons/explainability/explainability-quarkus-addon/src/test/java/org/kie/kogito/explainability/QuarkusExplainableResourceIT.java", "diffHunk": "@@ -45,20 +44,23 @@ public static ConfigBean configBeanProducer() {\n \n     @Test\n     @SuppressWarnings(\"unchecked\")\n-    void testRequestIsProcessedAndCorrect() throws JsonProcessingException {\n+    void explainServiceTest() throws JsonProcessingException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "655b5afd41fb197102e1b55916f0165bf4c536a3"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc5Mjk5Mg==", "bodyText": "remove newline? :)", "url": "https://github.com/kiegroup/kogito-runtimes/pull/720#discussion_r475792992", "createdAt": "2020-08-24T17:53:54Z", "author": {"login": "r00ta"}, "path": "addons/explainability/explainability-springboot-addon/pom.xml", "diffHunk": "@@ -0,0 +1,65 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>explainability</artifactId>\n+        <groupId>org.kie.kogito</groupId>\n+        <version>1.0.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>explainability-springboot-addon</artifactId>\n+    <name>Kogito :: Add-Ons :: Explainability :: SpringBoot Addon</name>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "655b5afd41fb197102e1b55916f0165bf4c536a3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxMzM5NA==", "bodyText": "Given that with these changes multiple requests are embedded in just one http call, one request might be invalid and raise an uncaught exception. I think we have to handle this case and add a test for that, wdyt?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/720#discussion_r475813394", "createdAt": "2020-08-24T18:29:39Z", "author": {"login": "r00ta"}, "path": "addons/explainability/explainability-addon-common/src/test/java/org/kie/kogito/explainability/ExplainabilityServiceTest.java", "diffHunk": "@@ -54,42 +49,37 @@\n \n     @Test\n     public void testPerturbedExecution() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "655b5afd41fb197102e1b55916f0165bf4c536a3"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxNDMwNA==", "bodyText": "remove newlines", "url": "https://github.com/kiegroup/kogito-runtimes/pull/720#discussion_r475814304", "createdAt": "2020-08-24T18:31:16Z", "author": {"login": "r00ta"}, "path": "addons/explainability/pom.xml", "diffHunk": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>addons</artifactId>\n+        <groupId>org.kie.kogito</groupId>\n+        <version>1.0.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>explainability</artifactId>\n+    <name>Kogito :: Add-Ons :: Explainability</name>\n+\n+    <packaging>pom</packaging>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "655b5afd41fb197102e1b55916f0165bf4c536a3"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxNTI0OA==", "bodyText": "remove newline", "url": "https://github.com/kiegroup/kogito-runtimes/pull/720#discussion_r475815248", "createdAt": "2020-08-24T18:33:06Z", "author": {"login": "r00ta"}, "path": "addons/explainability/explainability-addon-common/pom.xml", "diffHunk": "@@ -0,0 +1,39 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>explainability</artifactId>\n+        <groupId>org.kie.kogito</groupId>\n+        <version>1.0.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>explainability-addon-common</artifactId>\n+    <name>Kogito :: Add-Ons :: Explainability :: Addon :: Common</name>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "655b5afd41fb197102e1b55916f0165bf4c536a3"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73f3ba52e7cb5c3b1ee93964d66dfd6edf5033b8", "author": {"user": {"login": "kostola", "name": "Alessandro Costa"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/73f3ba52e7cb5c3b1ee93964d66dfd6edf5033b8", "committedDate": "2020-08-25T07:16:45Z", "message": "Merge branch 'master' into 'KOGITO-2914'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b032299db6dd5af18b1c4c5da4b1ebbf4b1bc5c", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0b032299db6dd5af18b1c4c5da4b1ebbf4b1bc5c", "committedDate": "2020-08-25T17:10:01Z", "message": "[KOGITO-2914] Apply PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa1463d6b438c792dce27804559cc9399c9abc58", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/fa1463d6b438c792dce27804559cc9399c9abc58", "committedDate": "2020-08-25T19:30:23Z", "message": "[KOGITO-2914] Fix jandex index creation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c29515c9f8ae1c94a382d2ddcef2c9975116e71", "author": {"user": {"login": "kostola", "name": "Alessandro Costa"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/2c29515c9f8ae1c94a382d2ddcef2c9975116e71", "committedDate": "2020-08-26T07:11:13Z", "message": "Merge branch 'master' into 'KOGITO-2914'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47170b06bfb4d4f63c592a58ddd40dc6a41ea6dc", "author": {"user": {"login": "kostola", "name": "Alessandro Costa"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/47170b06bfb4d4f63c592a58ddd40dc6a41ea6dc", "committedDate": "2020-08-27T07:03:11Z", "message": "Merge 'master' into 'KOGITO-2914'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b16052a49cb6a0dde845e448177365f38b141da", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/4b16052a49cb6a0dde845e448177365f38b141da", "committedDate": "2020-08-27T10:07:03Z", "message": "[KOGITO-2914] Fix code smell + test coverage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eca5cc65e40403c5501e727a980e7ca3d0590185", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/eca5cc65e40403c5501e727a980e7ca3d0590185", "committedDate": "2020-08-27T10:07:11Z", "message": "Merge remote-tracking branch 'kostola/KOGITO-2914' into KOGITO-2914"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df94a6e5c285bf9e6beeb91087527359881c8a77", "author": {"user": {"login": "kostola", "name": "Alessandro Costa"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/df94a6e5c285bf9e6beeb91087527359881c8a77", "committedDate": "2020-08-27T11:37:54Z", "message": "KOGITO-2914: add EventUtilsTest to tracing-decision-common"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3499a712c99610fffb43d3c6650bb1d298970eb", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/e3499a712c99610fffb43d3c6650bb1d298970eb", "committedDate": "2020-08-28T11:28:15Z", "message": "Merge remote-tracking branch 'upstream/master' into KOGITO-2914"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d4e146abd11e00bab8717cc8440d98a74b87e30", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/1d4e146abd11e00bab8717cc8440d98a74b87e30", "committedDate": "2020-08-28T11:32:20Z", "message": "[KOGITO-2914] Fix code smell"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NzUwMzUz", "url": "https://github.com/kiegroup/kogito-runtimes/pull/720#pullrequestreview-477750353", "createdAt": "2020-08-28T13:57:27Z", "commit": {"oid": "1d4e146abd11e00bab8717cc8440d98a74b87e30"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo1NzoyOFrOHJHJ2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo1ODoxMlrOHJHMqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMxNjQ0MA==", "bodyText": "Would it be also possible to provide expected model name and namespace in the exception.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/720#discussion_r479316440", "createdAt": "2020-08-28T13:57:28Z", "author": {"login": "jiripetrlik"}, "path": "addons/explainability/explainability-addon-common/src/test/java/org/kie/kogito/explainability/ExplainabilityServiceTest.java", "diffHunk": "@@ -54,42 +49,37 @@\n \n     @Test\n     public void testPerturbedExecution() {\n-        Consumer<EvaluateEvent> eventConsumer = mock(Consumer.class);\n-        DecisionTracingListener listener = new DecisionTracingListener(eventConsumer);\n-        genericDMNRuntime.addListener(listener);\n-\n-        DecisionModels decisionModels = new DecisionModels() {\n-            @Override\n-            public DecisionModel getDecisionModel(String namespace, String name) {\n-                if (MODEL_NAMESPACE.equals(namespace) && MODEL_NAME.equals(name)) {\n-                    return decisionModel;\n-                }\n-                throw new RuntimeException(\"Model not found.\");\n+\n+        DecisionModels decisionModels = (namespace, name) -> {\n+            if (MODEL_NAMESPACE.equals(namespace) && MODEL_NAME.equals(name)) {\n+                return decisionModel;\n             }\n+            throw new RuntimeException(\"Model not found.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d4e146abd11e00bab8717cc8440d98a74b87e30"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMxNzE2Mg==", "bodyText": "Would it be also possible to provide info about model name and namespace in the exception.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/720#discussion_r479317162", "createdAt": "2020-08-28T13:58:12Z", "author": {"login": "jiripetrlik"}, "path": "addons/explainability/explainability-quarkus-addon/src/test/java/org/kie/kogito/explainability/ApplicationMock.java", "diffHunk": "@@ -14,51 +14,36 @@\n  * limitations under the License.\n  */\n \n-package org.kie.kogito.tracing.decision;\n-\n-import java.io.InputStreamReader;\n-import java.util.function.Consumer;\n+package org.kie.kogito.explainability;\n \n import io.quarkus.test.Mock;\n import org.kie.dmn.api.core.DMNRuntime;\n import org.kie.kogito.Application;\n import org.kie.kogito.Config;\n-import org.kie.kogito.decision.DecisionModel;\n import org.kie.kogito.decision.DecisionModels;\n import org.kie.kogito.dmn.DMNKogito;\n import org.kie.kogito.dmn.DmnDecisionModel;\n-import org.kie.kogito.tracing.decision.event.evaluate.EvaluateEvent;\n import org.kie.kogito.uow.UnitOfWorkManager;\n \n-import static org.kie.kogito.tracing.decision.Constants.TEST_EXECUTION_ID;\n-import static org.kie.kogito.tracing.decision.Constants.MODEL_RESOURCE;\n-import static org.kie.kogito.tracing.decision.Constants.MODEL_NAME;\n-import static org.kie.kogito.tracing.decision.Constants.MODEL_NAMESPACE;\n-import static org.mockito.Mockito.mock;\n+import java.io.InputStreamReader;\n \n @Mock\n public class ApplicationMock implements Application {\n \n     final static DMNRuntime genericDMNRuntime = DMNKogito.createGenericDMNRuntime(new InputStreamReader(\n-            QuarkusExplainableResourceIT.class.getResourceAsStream(MODEL_RESOURCE)\n+            ApplicationMock.class.getResourceAsStream(Constants.MODEL_RESOURCE)\n     ));\n \n     final static DecisionModels decisionModels;\n \n     static {\n-        DmnDecisionModel decisionModel = new DmnDecisionModel(genericDMNRuntime, MODEL_NAMESPACE, MODEL_NAME, () -> TEST_EXECUTION_ID);\n-        Consumer<EvaluateEvent> eventConsumer = mock(Consumer.class);\n-        DecisionTracingListener listener = new DecisionTracingListener(eventConsumer);\n-        genericDMNRuntime.addListener(listener);\n+        DmnDecisionModel decisionModel = new DmnDecisionModel(genericDMNRuntime, Constants.MODEL_NAMESPACE, Constants.MODEL_NAME, () -> Constants.TEST_EXECUTION_ID);\n \n-        decisionModels = new DecisionModels() {\n-            @Override\n-            public DecisionModel getDecisionModel(String namespace, String name) {\n-                if (MODEL_NAMESPACE.equals(namespace) && MODEL_NAME.equals(name)) {\n-                    return decisionModel;\n-                }\n-                throw new RuntimeException(\"Model not found.\");\n+        decisionModels = (namespace, name) -> {\n+            if (Constants.MODEL_NAMESPACE.equals(namespace) && Constants.MODEL_NAME.equals(name)) {\n+                return decisionModel;\n             }\n+            throw new RuntimeException(\"Model not found.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d4e146abd11e00bab8717cc8440d98a74b87e30"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7673debdbffcac73d303cd65e9e1717202a2a6d1", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/7673debdbffcac73d303cd65e9e1717202a2a6d1", "committedDate": "2020-08-28T16:29:46Z", "message": "[KOGITO-2914] PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NDAzODYw", "url": "https://github.com/kiegroup/kogito-runtimes/pull/720#pullrequestreview-478403860", "createdAt": "2020-08-31T08:06:06Z", "commit": {"oid": "7673debdbffcac73d303cd65e9e1717202a2a6d1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4136, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}