{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMDE2OTYy", "number": 373, "title": "KOGITO-1088 Migrate REST code generation for spring boot to use Spring REST Controller", "bodyText": "Code generation of REST endpoints based on Spring Web API, the default for spring boot. This removes the dependency on REASTEasy and JAX-WS.\nNote: The modification is only applied to processes, it is necessary to do the same for Rules and Decisions.\nTo test it I used the kogito-examples.", "createdAt": "2020-03-17T18:53:02Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373", "merged": true, "mergeCommit": {"oid": "dcd26b648afb88548c275084532c3aab95ef310c"}, "closed": true, "closedAt": "2020-03-30T02:09:19Z", "author": {"login": "tiagodolphine"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOnp0mABqjMxMzg3MDI3NzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcR0Je8gFqTM4MzA2MjUxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7994239ae0caa5351ca6d07ccbcaad84f2991489", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/7994239ae0caa5351ca6d07ccbcaad84f2991489", "committedDate": "2020-03-17T18:19:01Z", "message": "Inserting process management module for spring boot, creating new modules for spring boot starter updating kogito bom"}, "afterCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/22d11bae1d747ced03f42c131b452679f63e7726", "committedDate": "2020-03-17T19:12:40Z", "message": "Migrate REST code generation for spring boot to use Spring REST Controller\n\nspring boot archtype\n\nfix conflicts with master\n\naddding spring dependency\n\nFix some details during spring REST code generation\n\nFix Spring resource template\n\nadding validation for spring on rest reousrce generation\n\nrefactoring some changes on the resource generator\n\nremoving unecessry dependencies\n\nTests with spring context\n\nclear comments on template\n\nAdding test for ResourceGeneratorFactory\n\nInserting process management module for spring boot, creating new modules for spring boot starter updating kogito bom\n\nadding process management to bom"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NTYxMDkz", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#pullrequestreview-376561093", "createdAt": "2020-03-18T04:43:38Z", "commit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNDo0MzozOFrOF32MvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNDo0MzozOFrOF32MvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzk5Nw==", "bodyText": "@tiagodolphine perhaps move process-management-addon into here and rename to process-management-quarkus-addon ?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394103997", "createdAt": "2020-03-18T04:43:38Z", "author": {"login": "cristianonicolai"}, "path": "addons/pom.xml", "diffHunk": "@@ -18,6 +18,7 @@\n     <module>process-management-addon</module>\n     <module>jobs</module>\n     <module>predictions</module>\n+    <module>process-management</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NjAxODIx", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#pullrequestreview-376601821", "createdAt": "2020-03-18T06:55:06Z", "commit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNjo1NTowN1rOF34MNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNzowMzo1MlrOF34XRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNjYyOA==", "bodyText": "this seems to be an empty module so what's the point of it?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394136628", "createdAt": "2020-03-18T06:55:07Z", "author": {"login": "mswiderski"}, "path": "addons/process-management/process-management-common/pom.xml", "diffHunk": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>process-management</artifactId>\n+    <groupId>org.kie.kogito</groupId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>process-management-common</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNjgyMg==", "bodyText": "this looks like a top level module so process-management-addon should be most likely moved in here", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394136822", "createdAt": "2020-03-18T06:55:43Z", "author": {"login": "mswiderski"}, "path": "addons/pom.xml", "diffHunk": "@@ -18,6 +18,7 @@\n     <module>process-management-addon</module>\n     <module>jobs</module>\n     <module>predictions</module>\n+    <module>process-management</module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzk5Nw=="}, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNzAzMg==", "bodyText": "should this module depend on starter on just individual needed dependencies?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394137032", "createdAt": "2020-03-18T06:56:24Z", "author": {"login": "mswiderski"}, "path": "addons/process-management/process-management-springboot-addon/pom.xml", "diffHunk": "@@ -0,0 +1,59 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>process-management</artifactId>\n+    <groupId>org.kie.kogito</groupId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>process-management-springboot-addon</artifactId>\n+  <description>Management of process instances for Spring Boot</description>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-springboot-starter</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNzUyOQ==", "bodyText": "this looks like a complete copy of the process-management-addon module just with spring annotations instead of JAXRS, maybe it should be extracted to this process-management-common module and only extend the abstract class with annotations....", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394137529", "createdAt": "2020-03-18T06:57:54Z", "author": {"login": "mswiderski"}, "path": "addons/process-management/process-management-springboot-addon/src/main/java/org/kie/kogito/process/management/ProcessInstanceManagementResource.java", "diffHunk": "@@ -0,0 +1,227 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.process.management;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.function.Function;\n+\n+import org.kie.kogito.Application;\n+import org.kie.kogito.auth.SecurityPolicy;\n+import org.kie.kogito.process.Process;\n+import org.kie.kogito.process.ProcessError;\n+import org.kie.kogito.process.ProcessInstance;\n+import org.kie.kogito.process.ProcessInstanceExecutionException;\n+import org.kie.kogito.process.Processes;\n+import org.kie.kogito.process.WorkItem;\n+import org.kie.kogito.services.uow.UnitOfWorkExecutor;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;\n+\n+@RestController\n+@RequestMapping(\"/management/processes\")\n+public class ProcessInstanceManagementResource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNzc3NA==", "bodyText": "maybe add all exception handlers in single class since the actual handler is a method and not class level annotation", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394137774", "createdAt": "2020-03-18T06:58:39Z", "author": {"login": "mswiderski"}, "path": "addons/process-management/process-management-springboot-addon/src/main/java/org/kie/kogito/process/management/exceptions/InvalidLifeCyclePhaseExceptionMapper.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.process.management.exceptions;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.kie.kogito.process.workitem.InvalidLifeCyclePhaseException;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.ControllerAdvice;\n+import org.springframework.web.bind.annotation.ExceptionHandler;\n+\n+@ControllerAdvice\n+public class InvalidLifeCyclePhaseExceptionMapper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzODQxNw==", "bodyText": "isn't this sort of cyclic dependency? I know it might not be strictly cyclic dependency but feel wrong to have the starter here...", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394138417", "createdAt": "2020-03-18T07:00:34Z", "author": {"login": "mswiderski"}, "path": "kogito-codegen/pom.xml", "diffHunk": "@@ -127,5 +127,15 @@\n       <artifactId>mockito-core</artifactId>\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.mockito</groupId>\n+      <artifactId>mockito-junit-jupiter</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-springboot-starter</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzODQ5OQ==", "bodyText": "I really like this one!!!!!", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394138499", "createdAt": "2020-03-18T07:00:49Z", "author": {"login": "mswiderski"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/ResourceGeneratorFactory.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen;\n+\n+import java.util.Arrays;\n+import java.util.NoSuchElementException;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import org.kie.api.definition.process.WorkflowProcess;\n+import org.kie.kogito.codegen.context.KogitoBuildContext;\n+import org.kie.kogito.codegen.context.QuarkusKogitoBuildContext;\n+import org.kie.kogito.codegen.context.SpringBootKogitoBuildContext;\n+import org.kie.kogito.codegen.process.AbstractResourceGenerator;\n+import org.kie.kogito.codegen.process.ReactiveResourceGenerator;\n+import org.kie.kogito.codegen.process.ResourceGenerator;\n+import org.kie.kogito.codegen.process.SpringResourceGenerator;\n+\n+public class ResourceGeneratorFactory {\n+\n+    private enum GeneratorType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzOTIxMQ==", "bodyText": "is this complete copy of the test? if so why this is not being reused ...", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394139211", "createdAt": "2020-03-18T07:03:03Z", "author": {"login": "mswiderski"}, "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/MessageStartEventTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import java.lang.reflect.Method;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.assertj.core.api.Condition;\n+import org.junit.jupiter.api.Test;\n+import org.kie.kogito.Application;\n+import org.kie.kogito.Model;\n+import org.kie.kogito.codegen.AbstractCodegenTest;\n+import org.kie.kogito.process.Process;\n+import org.kie.kogito.process.ProcessInstance;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+public class MessageStartEventTest extends AbstractCodegenTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzOTQ2Mw==", "bodyText": "is this really needed? since the generators don't produce JAXRS annotated spring beans then this starter is of no use I believe.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394139463", "createdAt": "2020-03-18T07:03:52Z", "author": {"login": "mswiderski"}, "path": "kogito-springboot/kogito-resteasy-springboot-starter/pom.xml", "diffHunk": "@@ -0,0 +1,20 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-springboot</artifactId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <artifactId>kogito-resteasy-springboot-starter</artifactId>\n+  <name>Kogito RESTEasy SpringBoot Starter</name>\n+  <description>Kogito RESTEasy SpringBoot Starter</description>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MDE0NzI5", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#pullrequestreview-377014729", "createdAt": "2020-03-18T16:07:08Z", "commit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "state": "COMMENTED", "comments": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNjowNzowOFrOF4MNvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNzowMjowNFrOF4OiRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ2NDcwMw==", "bodyText": "+1", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394464703", "createdAt": "2020-03-18T16:07:08Z", "author": {"login": "MarianMacik"}, "path": "addons/process-management/process-management-springboot-addon/src/main/java/org/kie/kogito/process/management/ProcessInstanceManagementResource.java", "diffHunk": "@@ -0,0 +1,227 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.process.management;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.function.Function;\n+\n+import org.kie.kogito.Application;\n+import org.kie.kogito.auth.SecurityPolicy;\n+import org.kie.kogito.process.Process;\n+import org.kie.kogito.process.ProcessError;\n+import org.kie.kogito.process.ProcessInstance;\n+import org.kie.kogito.process.ProcessInstanceExecutionException;\n+import org.kie.kogito.process.Processes;\n+import org.kie.kogito.process.WorkItem;\n+import org.kie.kogito.services.uow.UnitOfWorkExecutor;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;\n+\n+@RestController\n+@RequestMapping(\"/management/processes\")\n+public class ProcessInstanceManagementResource {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzNzUyOQ=="}, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4NjAyNA==", "bodyText": "Probably not needed here?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394486024", "createdAt": "2020-03-18T16:37:40Z", "author": {"login": "MarianMacik"}, "path": "kogito-codegen/src/main/resources/class-templates/RestResourceTemplate.java", "diffHunk": "@@ -27,6 +27,7 @@\n import org.kie.kogito.process.ProcessInstanceExecutionException;\n import org.kie.kogito.process.WorkItem;\n import org.kie.kogito.process.workitem.Policy;\n+import org.kie.kogito.process.impl.Sig;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4ODM2Ng==", "bodyText": "Import probably not needed?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394488366", "createdAt": "2020-03-18T16:41:05Z", "author": {"login": "MarianMacik"}, "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/AbstractCodegenTest.java", "diffHunk": "@@ -37,13 +38,16 @@\n import org.drools.compiler.rule.builder.dialect.java.JavaDialectConfiguration;\n import org.kie.kogito.Application;\n import org.kie.kogito.codegen.context.KogitoBuildContext;\n+import org.kie.kogito.codegen.context.QuarkusKogitoBuildContext;\n+import org.kie.kogito.codegen.context.SpringBootKogitoBuildContext;\n import org.kie.kogito.codegen.decision.DecisionCodegen;\n import org.kie.kogito.codegen.process.ProcessCodegen;\n import org.kie.kogito.codegen.rules.IncrementalRuleCodegen;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.InstanceOfAssertFactories.OPTIONAL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5MDk3OA==", "bodyText": "Why do we need lenient stubbing here?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394490978", "createdAt": "2020-03-18T16:44:57Z", "author": {"login": "MarianMacik"}, "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/ResourceGeneratorFactoryTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen;\n+\n+import java.util.NoSuchElementException;\n+import java.util.Optional;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.kie.api.definition.process.WorkflowProcess;\n+import org.kie.kogito.codegen.context.QuarkusKogitoBuildContext;\n+import org.kie.kogito.codegen.context.SpringBootKogitoBuildContext;\n+import org.kie.kogito.codegen.process.AbstractResourceGenerator;\n+import org.kie.kogito.codegen.process.ReactiveResourceGenerator;\n+import org.kie.kogito.codegen.process.ResourceGenerator;\n+import org.kie.kogito.codegen.process.SpringResourceGenerator;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.lenient;\n+import static org.mockito.Mockito.when;\n+\n+@ExtendWith(MockitoExtension.class)\n+class ResourceGeneratorFactoryTest {\n+\n+    public static final String MODEL_FQCN = \"modelfqcn\";\n+    public static final String PROCESS_FQCN = \"processfqcn\";\n+    public static final String APP_CANONICAL_NAME = \"appCanonicalName\";\n+\n+    private ResourceGeneratorFactory tested;\n+\n+    @Mock\n+    private WorkflowProcess process;\n+\n+    @BeforeEach\n+    public void setUp() {\n+        lenient().when(process.getId()).thenReturn(\"process.id\");\n+        lenient().when(process.getPackageName()).thenReturn(\"name.process\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5MzgxNQ==", "bodyText": "AFAIK this should end with Test suffix.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394493815", "createdAt": "2020-03-18T16:49:09Z", "author": {"login": "MarianMacik"}, "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/BusinessRuleTaskTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.BusinessRuleTaskTest;\n+\n+public class BusinessRuleTaskTestSpring extends BusinessRuleTaskTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NDAxOQ==", "bodyText": "Same here.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394494019", "createdAt": "2020-03-18T16:49:26Z", "author": {"login": "MarianMacik"}, "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/BusinessRuleUnitTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.BusinessRuleUnitTest;\n+\n+public class BusinessRuleUnitTestSpring extends BusinessRuleUnitTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NDE3NA==", "bodyText": "Here.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394494174", "createdAt": "2020-03-18T16:49:39Z", "author": {"login": "MarianMacik"}, "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/CallActivityTaskTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.CallActivityTaskTest;\n+\n+public class CallActivityTaskTestSpring extends CallActivityTaskTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NDM2OQ==", "bodyText": "Same.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394494369", "createdAt": "2020-03-18T16:49:58Z", "author": {"login": "MarianMacik"}, "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/EmbeddedSubProcessTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.EmbeddedSubProcessTest;\n+\n+public class EmbeddedSubProcessTestSpring extends EmbeddedSubProcessTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NDQ2MA==", "bodyText": "Same.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394494460", "createdAt": "2020-03-18T16:50:06Z", "author": {"login": "MarianMacik"}, "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/EventSubProcessTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.EventSubProcessTest;\n+\n+public class EventSubProcessTestSpring extends EventSubProcessTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NDU4OQ==", "bodyText": "Same.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394494589", "createdAt": "2020-03-18T16:50:18Z", "author": {"login": "MarianMacik"}, "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/GatewayTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.GatewayTest;\n+\n+public class GatewayTestSpring extends GatewayTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NTMwMw==", "bodyText": "Same.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394495303", "createdAt": "2020-03-18T16:51:14Z", "author": {"login": "MarianMacik"}, "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/InvalidProcessTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.InvalidProcessTest;\n+\n+public class InvalidProcessTestSpring extends InvalidProcessTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NTM3Nw==", "bodyText": "Same.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394495377", "createdAt": "2020-03-18T16:51:21Z", "author": {"login": "MarianMacik"}, "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/MessageIntermediateEventTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.MessageIntermediateEventTest;\n+\n+public class MessageIntermediateEventTestSpring extends MessageIntermediateEventTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NjA5MA==", "bodyText": "Same and also with other classes.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394496090", "createdAt": "2020-03-18T16:52:21Z", "author": {"login": "MarianMacik"}, "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/spring/PublishEventTestSpring.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.codegen.tests.spring;\n+\n+import org.kie.kogito.codegen.tests.PublishEventTest;\n+\n+public class PublishEventTestSpring extends PublishEventTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMDAwMA==", "bodyText": "What else is present in this starter? It seems that it has only one dependency.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394500000", "createdAt": "2020-03-18T16:58:01Z", "author": {"login": "MarianMacik"}, "path": "kogito-springboot/kogito-springboot-starter/pom.xml", "diffHunk": "@@ -0,0 +1,37 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>kogito-springboot</artifactId>\n+    <groupId>org.kie.kogito</groupId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>kogito-springboot-starter</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMjcyNQ==", "bodyText": "For some reason it is only used for tests. Maybe that's ok?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r394502725", "createdAt": "2020-03-18T17:02:04Z", "author": {"login": "MarianMacik"}, "path": "kogito-codegen/pom.xml", "diffHunk": "@@ -127,5 +127,15 @@\n       <artifactId>mockito-core</artifactId>\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.mockito</groupId>\n+      <artifactId>mockito-junit-jupiter</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-springboot-starter</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzODQxNw=="}, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87e0409b37d4f41cc346e3fcc52855ef41ae792a", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/87e0409b37d4f41cc346e3fcc52855ef41ae792a", "committedDate": "2020-03-19T19:44:32Z", "message": "Inserting the DefaultResourceGeneratorFactory that basically create only JAX-RS generator and removing uncessary dependencies kogito-resteasy-springboot-starter"}, "afterCommit": {"oid": "07b69bef3041d4532ca49c46ef3829d96a68d315", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/07b69bef3041d4532ca49c46ef3829d96a68d315", "committedDate": "2020-03-20T14:14:59Z", "message": "Inserting spring web api dependency on the pom"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44c1c65f903ae3793e76a0e37db809858af51385", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/44c1c65f903ae3793e76a0e37db809858af51385", "committedDate": "2020-03-20T19:19:17Z", "message": "Fix sonar issues and openapi generation for process management addon"}, "afterCommit": {"oid": "1209a1bee507696662a4e94635056e7b1cecb09e", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/1209a1bee507696662a4e94635056e7b1cecb09e", "committedDate": "2020-03-23T15:03:24Z", "message": "Fix conflicts and fix security on endpoint generation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa9238b6fd29d2145d36367ec9d9d053ddf32b8e", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/aa9238b6fd29d2145d36367ec9d9d053ddf32b8e", "committedDate": "2020-03-24T13:54:19Z", "message": "Inserting unit tests and sonar fixes"}, "afterCommit": {"oid": "2872698e533b11d1503b1fe5b39606d144e26266", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/2872698e533b11d1503b1fe5b39606d144e26266", "committedDate": "2020-03-24T14:17:01Z", "message": "Inserting unit tests and sonar fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2ca2243b4696706740559a62c87c400d6bec0130", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/2ca2243b4696706740559a62c87c400d6bec0130", "committedDate": "2020-03-24T17:09:28Z", "message": "adding tests on ProcessInstanceManagementResourceTest"}, "afterCommit": {"oid": "a4b5d429499a02605336450351e6e852a9628bf3", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/a4b5d429499a02605336450351e6e852a9628bf3", "committedDate": "2020-03-25T12:11:37Z", "message": "Fix test errors on java 11"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTcyOTQw", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#pullrequestreview-382572940", "createdAt": "2020-03-27T04:25:38Z", "commit": {"oid": "a4b5d429499a02605336450351e6e852a9628bf3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNDoyNTozOFrOF8iwQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNDozMjoxN1rOF8i14g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAyODI5MQ==", "bodyText": "@tiagodolphine version.testcontainers is already defined.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r399028291", "createdAt": "2020-03-27T04:25:38Z", "author": {"login": "cristianonicolai"}, "path": "pom.xml", "diffHunk": "@@ -131,9 +132,11 @@\n     <version.org.kie7>7.34.0.Final</version.org.kie7>\n     <version.org.reflections>0.9.11</version.org.reflections>\n     <version.org.slf4j>1.7.25</version.org.slf4j>\n-    <version.org.springframework.kafka>2.2.2.RELEASE</version.org.springframework.kafka>\n-\n     <version.testcontainers>1.12.4</version.testcontainers>\n+    <version.resteasy.springboot>4.5.0.Final</version.resteasy.springboot>\n+    <version.springboot>2.2.5.RELEASE</version.springboot>\n+    <version.spring.framework>5.2.4.RELEASE</version.spring.framework>\n+    <version.testcontainers>1.12.3</version.testcontainers>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4b5d429499a02605336450351e6e852a9628bf3"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAyOTczMA==", "bodyText": "@tiagodolphine sorry being a pita, I know in theory it should work anyway, but seems some issues with this, maybe because of the local maven cache problems we had in the past, but if you dont mind, moving the module declarion to before addons.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r399029730", "createdAt": "2020-03-27T04:32:17Z", "author": {"login": "cristianonicolai"}, "path": "pom.xml", "diffHunk": "@@ -223,6 +226,7 @@\n     <module>kogito-maven-plugin</module>\n     <module>kogito-quarkus-extension</module>\n     <module>archetypes</module>\n+    <module>kogito-springboot</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4b5d429499a02605336450351e6e852a9628bf3"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNzQ0MDk2", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#pullrequestreview-382744096", "createdAt": "2020-03-27T10:37:05Z", "commit": {"oid": "a4b5d429499a02605336450351e6e852a9628bf3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDozNzowNVrOF8rlhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDozNzowNVrOF8rlhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE3Mjk5Nw==", "bodyText": "not sure what's the difference but I'd prefer change of the artefact id would be done before dev preview as otherwise people would have to update their already build application with new artefact id. just my 2 c...", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#discussion_r399172997", "createdAt": "2020-03-27T10:37:05Z", "author": {"login": "mswiderski"}, "path": "addons/pom.xml", "diffHunk": "@@ -18,6 +18,7 @@\n     <module>process-management-addon</module>\n     <module>jobs</module>\n     <module>predictions</module>\n+    <module>process-management</module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEwMzk5Nw=="}, "originalCommit": {"oid": "22d11bae1d747ced03f42c131b452679f63e7726"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8035f31a6e1a3512e587168259d10dc7d628368a", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/8035f31a6e1a3512e587168259d10dc7d628368a", "committedDate": "2020-03-27T13:14:51Z", "message": "Migrate REST code generation for spring boot to use Spring REST Controller\n\nspring boot archtype\n\nfix conflicts with master\n\naddding spring dependency\n\nFix some details during spring REST code generation\n\nFix Spring resource template\n\nadding validation for spring on rest reousrce generation\n\nrefactoring some changes on the resource generator\n\nremoving unecessry dependencies\n\nTests with spring context\n\nclear comments on template\n\nAdding test for ResourceGeneratorFactory\n\nInserting process management module for spring boot, creating new modules for spring boot starter updating kogito bom\n\nadding process management to bom\n\nApply PR comments, process-management refactoring\n\nRenaming ProcessInstanceManagementResource\n\nInserting the DefaultResourceGeneratorFactory that basically create only JAX-RS generator and removing uncessary dependencies kogito-resteasy-springboot-starter\n\nInserting spring web api dependency on the pom\n\nBaseExceptionHandler initialization fix\n\nFix sonar issues and openapi generation for process management addon\n\nFix conflicts and fix security on endpoint generation\n\nInserting unit tests and sonar fixes\n\nDisabling Spring generation codegen tests\n\nadding tests on ProcessInstanceManagementResourceTest\n\nFix test errors on java 11\n\napply pr comemnts on pom.xm"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4b5d429499a02605336450351e6e852a9628bf3", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/a4b5d429499a02605336450351e6e852a9628bf3", "committedDate": "2020-03-25T12:11:37Z", "message": "Fix test errors on java 11"}, "afterCommit": {"oid": "8035f31a6e1a3512e587168259d10dc7d628368a", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/8035f31a6e1a3512e587168259d10dc7d628368a", "committedDate": "2020-03-27T13:14:51Z", "message": "Migrate REST code generation for spring boot to use Spring REST Controller\n\nspring boot archtype\n\nfix conflicts with master\n\naddding spring dependency\n\nFix some details during spring REST code generation\n\nFix Spring resource template\n\nadding validation for spring on rest reousrce generation\n\nrefactoring some changes on the resource generator\n\nremoving unecessry dependencies\n\nTests with spring context\n\nclear comments on template\n\nAdding test for ResourceGeneratorFactory\n\nInserting process management module for spring boot, creating new modules for spring boot starter updating kogito bom\n\nadding process management to bom\n\nApply PR comments, process-management refactoring\n\nRenaming ProcessInstanceManagementResource\n\nInserting the DefaultResourceGeneratorFactory that basically create only JAX-RS generator and removing uncessary dependencies kogito-resteasy-springboot-starter\n\nInserting spring web api dependency on the pom\n\nBaseExceptionHandler initialization fix\n\nFix sonar issues and openapi generation for process management addon\n\nFix conflicts and fix security on endpoint generation\n\nInserting unit tests and sonar fixes\n\nDisabling Spring generation codegen tests\n\nadding tests on ProcessInstanceManagementResourceTest\n\nFix test errors on java 11\n\napply pr comemnts on pom.xm"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMDYyNTEw", "url": "https://github.com/kiegroup/kogito-runtimes/pull/373#pullrequestreview-383062510", "createdAt": "2020-03-27T17:28:13Z", "commit": {"oid": "8035f31a6e1a3512e587168259d10dc7d628368a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3577, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}