{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwODQ5NjI2", "number": 302, "title": "KOGITO-458 Add health check for Data Index service", "bodyText": "Adding the health check for kafka and infinispan in the same way as the jobs-service.", "createdAt": "2020-02-04T13:53:06Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/302", "merged": true, "mergeCommit": {"oid": "ec1cfaaa4ba0279ed4bc26ed0a89c623e4da954e"}, "closed": true, "closedAt": "2020-02-10T06:58:23Z", "author": {"login": "tiagodolphine"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBB3PdgH2gAyMzcwODQ5NjI2OjU4YzhjOWE0MGE1YWViODhiMGVkMzI0ZWRjM2VhMmU1NjYxYjYxZTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBs2nWgFqTM1NDU2MzQ5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "58c8c9a40a5aeb88b0ed324edc3ea2e5661b61e4", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/58c8c9a40a5aeb88b0ed324edc3ea2e5661b61e4", "committedDate": "2020-02-04T13:50:15Z", "message": "KOGITO-458 Add health check for Data Index service\n\nSetting kafka client endpoint on data-index"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyOTk4ODA4", "url": "https://github.com/kiegroup/kogito-runtimes/pull/302#pullrequestreview-352998808", "createdAt": "2020-02-04T14:05:43Z", "commit": {"oid": "58c8c9a40a5aeb88b0ed324edc3ea2e5661b61e4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyOTk5ODQ2", "url": "https://github.com/kiegroup/kogito-runtimes/pull/302#pullrequestreview-352999846", "createdAt": "2020-02-04T14:07:02Z", "commit": {"oid": "58c8c9a40a5aeb88b0ed324edc3ea2e5661b61e4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNDk4NzUw", "url": "https://github.com/kiegroup/kogito-runtimes/pull/302#pullrequestreview-353498750", "createdAt": "2020-02-05T06:58:09Z", "commit": {"oid": "58c8c9a40a5aeb88b0ed324edc3ea2e5661b61e4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNzM0NzAz", "url": "https://github.com/kiegroup/kogito-runtimes/pull/302#pullrequestreview-353734703", "createdAt": "2020-02-05T14:00:13Z", "commit": {"oid": "58c8c9a40a5aeb88b0ed324edc3ea2e5661b61e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNDowMDoxM1rOFl4rew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNDowMDoxM1rOFl4rew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI3MDI2Nw==", "bodyText": "is there a liveness check as well?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/302#discussion_r375270267", "createdAt": "2020-02-05T14:00:13Z", "author": {"login": "spolti"}, "path": "data-index/data-index-storage/data-index-storage-infinispan/src/main/java/org/kie/kogito/index/infinispan/InfinispanHealthCheckProducer.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.index.infinispan;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Instance;\n+import javax.enterprise.inject.Produces;\n+\n+import org.eclipse.microprofile.health.Readiness;\n+import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.kie.kogito.infinispan.health.InfinispanHealthCheck;\n+\n+@ApplicationScoped\n+public class InfinispanHealthCheckProducer {\n+\n+    @Produces\n+    @Readiness", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58c8c9a40a5aeb88b0ed324edc3ea2e5661b61e4"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NTYzNDk0", "url": "https://github.com/kiegroup/kogito-runtimes/pull/302#pullrequestreview-354563494", "createdAt": "2020-02-06T15:55:17Z", "commit": {"oid": "58c8c9a40a5aeb88b0ed324edc3ea2e5661b61e4"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNTo1NToxOFrOFmgWRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNTo1NToxOFrOFmgWRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkyMDE5Nw==", "bodyText": "+1 for connection with other components. We can detect which components the kogito app will be connected to when compiling assets/endpoints and based on that generate health checks, i.e. if we use persistence, have a persistence health check as we now have for jobs and data index.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/302#discussion_r375920197", "createdAt": "2020-02-06T15:55:18Z", "author": {"login": "MarianMacik"}, "path": "data-index/data-index-storage/data-index-storage-infinispan/src/main/java/org/kie/kogito/index/infinispan/InfinispanHealthCheckProducer.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.index.infinispan;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Instance;\n+import javax.enterprise.inject.Produces;\n+\n+import org.eclipse.microprofile.health.Readiness;\n+import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.kie.kogito.infinispan.health.InfinispanHealthCheck;\n+\n+@ApplicationScoped\n+public class InfinispanHealthCheckProducer {\n+\n+    @Produces\n+    @Readiness", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI3MDI2Nw=="}, "originalCommit": {"oid": "58c8c9a40a5aeb88b0ed324edc3ea2e5661b61e4"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3708, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}