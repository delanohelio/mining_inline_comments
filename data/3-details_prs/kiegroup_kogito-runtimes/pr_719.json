{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNTc0NTMy", "number": 719, "title": "[KOGITO-1942] tasks endpoint to return a list work item", "bodyText": "Changins tasks endpoint to return list of work items rather than a map with id and name\nMerge with kiegroup/kogito-examples#347", "createdAt": "2020-08-24T14:49:39Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719", "merged": true, "mergeCommit": {"oid": "091620391c160b266f1c83a2c181912b36633bff"}, "closed": true, "closedAt": "2020-09-08T10:11:38Z", "author": {"login": "fjtirado"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCI_QYgBqjM2ODcxODk3NjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGfz6AAFqTQ4MzQxMzc1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4a02d13c422239fea69fbdd51afe1d0c68ea3c9", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/c4a02d13c422239fea69fbdd51afe1d0c68ea3c9", "committedDate": "2020-08-24T14:48:39Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}, "afterCommit": {"oid": "115d29d80acef5f422ec4c220a196e7cc9f5ee8e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/115d29d80acef5f422ec4c220a196e7cc9f5ee8e", "committedDate": "2020-08-24T20:53:15Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MTU5OTcy", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#pullrequestreview-474159972", "createdAt": "2020-08-25T06:07:29Z", "commit": {"oid": "115d29d80acef5f422ec4c220a196e7cc9f5ee8e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNjowNzoyOVrOHGI29g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNjowNzoyOVrOHGI29g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5ODY0Ng==", "bodyText": "My suggestion to simplify this without need for creating the TestWorkItem class\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    WorkItem[] tasks = given()\n          \n          \n            \n                        .when()\n          \n          \n            \n                        .get(\"/cinema/{pid}/tasks\", pid)\n          \n          \n            \n                        .then()\n          \n          \n            \n                        .statusCode(200)\n          \n          \n            \n                        .extract()\n          \n          \n            \n                        .body()\n          \n          \n            \n                        .as(TestWorkItem[].class);\n          \n          \n            \n                    assertEquals(1, tasks.length);\n          \n          \n            \n                    String taskId = given()\n          \n          \n            \n                            .when()\n          \n          \n            \n                            .get(\"/cinema/{pid}/tasks\", pid)\n          \n          \n            \n                            .then()\n          \n          \n            \n                            .statusCode(200)\n          \n          \n            \n                            .body(\"$.size\", is(1))\n          \n          \n            \n                            .body(\"[0].name\", is(\"ReviewRatingTask\"))\n          \n          \n            \n                            .extract()\n          \n          \n            \n                            .path(\"[0].id\");\n          \n          \n            \n            \n          \n          \n            \n                    Map<String, Object> reviewedRating = new HashMap<>();\n          \n          \n            \n                    reviewedRating.put(\"reviewedRating\", Rating.PG_13);\n          \n          \n            \n                    given()\n          \n          \n            \n                        .contentType(ContentType.JSON)\n          \n          \n            \n                        .when()\n          \n          \n            \n                        .body(reviewedRating)\n          \n          \n            \n                        .post(\"/cinema/{pid}/ReviewRatingTask/{taskId}\", pid, taskId)\n          \n          \n            \n                        .then()\n          \n          \n            \n                        .statusCode(200)\n          \n          \n            \n                        .body(\"movie.rating\", equalTo(Rating.PG_13.name()));", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#discussion_r476198646", "createdAt": "2020-08-25T06:07:29Z", "author": {"login": "cristianonicolai"}, "path": "integration-tests/integration-tests-quarkus/src/test/java/org/kie/kogito/integrationtests/quarkus/EnumsTest.java", "diffHunk": "@@ -65,27 +66,27 @@ void testSubmitMovie() {\n             .extract()\n                 .path(\"id\");\n \n-        Map<String, String> tasks = given()\n-                .when()\n-                    .get(\"/cinema/{pid}/tasks\", pid)\n-                .then()\n-                    .statusCode(200)\n-                .extract()\n-                    .body()\n-                    .as(Map.class);\n-        assertEquals(1, tasks.size());\n+        WorkItem[] tasks = given()\n+            .when()\n+            .get(\"/cinema/{pid}/tasks\", pid)\n+            .then()\n+            .statusCode(200)\n+            .extract()\n+            .body()\n+            .as(TestWorkItem[].class);\n+        assertEquals(1, tasks.length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "115d29d80acef5f422ec4c220a196e7cc9f5ee8e"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "115d29d80acef5f422ec4c220a196e7cc9f5ee8e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/115d29d80acef5f422ec4c220a196e7cc9f5ee8e", "committedDate": "2020-08-24T20:53:15Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}, "afterCommit": {"oid": "0b92b857571bd6cba99e6e348614448614f995e3", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0b92b857571bd6cba99e6e348614448614f995e3", "committedDate": "2020-08-25T08:58:58Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b92b857571bd6cba99e6e348614448614f995e3", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0b92b857571bd6cba99e6e348614448614f995e3", "committedDate": "2020-08-25T08:58:58Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}, "afterCommit": {"oid": "615667c69907ce6d0b14079f490fbc7dfb6e4584", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/615667c69907ce6d0b14079f490fbc7dfb6e4584", "committedDate": "2020-08-25T09:07:35Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "615667c69907ce6d0b14079f490fbc7dfb6e4584", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/615667c69907ce6d0b14079f490fbc7dfb6e4584", "committedDate": "2020-08-25T09:07:35Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}, "afterCommit": {"oid": "c97b873f076f8379c4a78437a18f8cf50d323909", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/c97b873f076f8379c4a78437a18f8cf50d323909", "committedDate": "2020-08-27T12:03:40Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c97b873f076f8379c4a78437a18f8cf50d323909", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/c97b873f076f8379c4a78437a18f8cf50d323909", "committedDate": "2020-08-27T12:03:40Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}, "afterCommit": {"oid": "2e72b74651989f9335d36fa0d41f8318e76cb205", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/2e72b74651989f9335d36fa0d41f8318e76cb205", "committedDate": "2020-08-27T12:11:28Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e72b74651989f9335d36fa0d41f8318e76cb205", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/2e72b74651989f9335d36fa0d41f8318e76cb205", "committedDate": "2020-08-27T12:11:28Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}, "afterCommit": {"oid": "f6a39763737d82555601b0789e6c3b710b43a1c6", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/f6a39763737d82555601b0789e6c3b710b43a1c6", "committedDate": "2020-08-27T13:19:45Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MjY3NTIz", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#pullrequestreview-478267523", "createdAt": "2020-08-31T02:05:33Z", "commit": {"oid": "f6a39763737d82555601b0789e6c3b710b43a1c6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MzM3MDM5", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#pullrequestreview-478337039", "createdAt": "2020-08-31T06:06:02Z", "commit": {"oid": "f6a39763737d82555601b0789e6c3b710b43a1c6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNjowNjowMlrOHJrhMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNjowODo1NlrOHJrksg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkxMjI0Mw==", "bodyText": "As done in other changes as part of this PR, what about not copying the content in the array and assert the content directly doing:\n.body(\"$.size\", is(1))\n.body(\"[0].name\", is(\"Task\"));", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#discussion_r479912243", "createdAt": "2020-08-31T06:06:02Z", "author": {"login": "Sgitario"}, "path": "integration-tests/integration-tests-springboot/src/it/integration-tests-springboot-it/src/test/java/org/kie/kogito/integrationtests/springboot/BasicRestTest.java", "diffHunk": "@@ -197,16 +198,16 @@ void testGetTasks() {\n             .extract()\n                 .path(\"id\");\n \n-        Map<String, String> tasks = given()\n+        WorkItem[] tasks = given()\n                 .contentType(ContentType.JSON)\n             .when()\n                 .get(\"/AdHocFragments/{id}/tasks\", id)\n             .then()\n                 .statusCode(200)\n             .extract()\n                 .body()\n-                .as(Map.class);\n-        assertEquals(1, tasks.size());\n-        assertEquals(\"Task\", tasks.values().iterator().next());\n+                .as(TestWorkItem[].class);\n+        assertEquals(1, tasks.length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a39763737d82555601b0789e6c3b710b43a1c6"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkxMzEzOA==", "bodyText": "For sake of readability, maybe we could just use Collections.singletonMap(\"reviewedRating\", Rating.PG_13) instead of creating a separated HashMap.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#discussion_r479913138", "createdAt": "2020-08-31T06:08:56Z", "author": {"login": "Sgitario"}, "path": "integration-tests/integration-tests-springboot/src/it/integration-tests-springboot-it/src/test/java/org/kie/kogito/integrationtests/springboot/EnumsTest.java", "diffHunk": "@@ -63,27 +66,26 @@ void testSubmitMovie() {\n             .extract()\n                 .path(\"id\");\n \n-        Map<String, String> tasks = given()\n+        WorkItem task = given()\n                 .when()\n-                    .get(\"/cinema/{pid}/tasks\", pid)\n+                .get(\"/cinema/{pid}/tasks\", pid)\n                 .then()\n-                    .statusCode(200)\n+                .statusCode(200)\n+                .body(\"$.size\", is(1))\n                 .extract()\n-                    .body()\n-                    .as(Map.class);\n-        assertEquals(1, tasks.size());\n+                .as(TestWorkItem[].class)[0];\n \n-        tasks.keySet().forEach(taskId -> {\n-            Map<String, Object> reviewedRating = new HashMap<>();\n-            reviewedRating.put(\"reviewedRating\", Rating.PG_13);\n-            given()\n-                    .contentType(ContentType.JSON)\n-                .when()\n-                    .body(reviewedRating)\n-                    .post(\"/cinema/{pid}/ReviewRatingTask/{taskId}\", pid, taskId)\n-                .then()\n-                    .statusCode(200)\n-                    .body(\"movie.rating\", equalTo(Rating.PG_13.name()));\n-        });\n-    }\n+        assertEquals(\"ReviewRatingTask\", task.getName());\n+\n+        Map<String, Object> reviewedRating = new HashMap<>();\n+        reviewedRating.put(\"reviewedRating\", Rating.PG_13);\n+        given()\n+            .contentType(ContentType.JSON)\n+            .when()\n+            .body(reviewedRating)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a39763737d82555601b0789e6c3b710b43a1c6"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNzY3MDQ3", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#pullrequestreview-480767047", "createdAt": "2020-09-02T12:27:44Z", "commit": {"oid": "f6a39763737d82555601b0789e6c3b710b43a1c6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6a39763737d82555601b0789e6c3b710b43a1c6", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/f6a39763737d82555601b0789e6c3b710b43a1c6", "committedDate": "2020-08-27T13:19:45Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}, "afterCommit": {"oid": "e20e2370bab6fd990ab2205b7d2bbc9e46bf6c1d", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/e20e2370bab6fd990ab2205b7d2bbc9e46bf6c1d", "committedDate": "2020-09-07T08:26:50Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "827d7ccf6d4f507e0c2a567f7fe3440ecccd783a", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/827d7ccf6d4f507e0c2a567f7fe3440ecccd783a", "committedDate": "2020-09-07T09:42:13Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e20e2370bab6fd990ab2205b7d2bbc9e46bf6c1d", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/e20e2370bab6fd990ab2205b7d2bbc9e46bf6c1d", "committedDate": "2020-09-07T08:26:50Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}, "afterCommit": {"oid": "827d7ccf6d4f507e0c2a567f7fe3440ecccd783a", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/827d7ccf6d4f507e0c2a567f7fe3440ecccd783a", "committedDate": "2020-09-07T09:42:13Z", "message": "[KOGITO-1942] tasks endpoint to return a list work item"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNDEzNzUy", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#pullrequestreview-483413752", "createdAt": "2020-09-07T09:44:32Z", "commit": {"oid": "827d7ccf6d4f507e0c2a567f7fe3440ecccd783a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4133, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}