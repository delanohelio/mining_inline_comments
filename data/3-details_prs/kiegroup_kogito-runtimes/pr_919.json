{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxOTk2Mzk3", "number": 919, "title": "[KOGITO-3896] Link events has reverted multiple source/target behavior", "bodyText": "Carry forward of changes from JBPM to Kogito regarding links", "createdAt": "2020-12-03T18:43:54Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/919", "merged": true, "mergeCommit": {"oid": "d02716d68405306ed69cd8565e857c9340565542"}, "closed": true, "closedAt": "2020-12-09T13:22:19Z", "author": {"login": "fjtirado"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdinvmagBqjQwNjkxMjUyNDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkbhChAFqTU0ODAwMTgzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ebe648e588f81590cc206722daa9656c24120bb9", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/ebe648e588f81590cc206722daa9656c24120bb9", "committedDate": "2020-12-03T18:42:47Z", "message": "[KOGITO-3986] Link events has reverted multiple source/target behavior\n\nCarry forward of changes on JBPM to Kogito regarding links"}, "afterCommit": {"oid": "ba1dced7a0b86dcfcea73fd82dce7c5ec37d73e5", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/ba1dced7a0b86dcfcea73fd82dce7c5ec37d73e5", "committedDate": "2020-12-03T18:48:48Z", "message": "[KOGITO-3896] Link events has reverted multiple source/target behavior\n\nCarry forward of changes on JBPM to Kogito regarding links"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0ODE3NTk5", "url": "https://github.com/kiegroup/kogito-runtimes/pull/919#pullrequestreview-544817599", "createdAt": "2020-12-04T10:04:56Z", "commit": {"oid": "ba1dced7a0b86dcfcea73fd82dce7c5ec37d73e5"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDowNDo1NlrOH_JuWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDowNToxNFrOH_JvDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk4MTY1OQ==", "bodyText": "unnecessary formatting change?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/919#discussion_r535981659", "createdAt": "2020-12-04T10:04:56Z", "author": {"login": "cristianonicolai"}, "path": "jbpm/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java", "diffHunk": "@@ -127,7 +132,8 @@ public ProcessHandler() {\n \t\t}\n \t}\n \n-\tpublic Object start(final String uri, final String localName,\n+\t@Override\n+    public Object start(final String uri, final String localName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1dced7a0b86dcfcea73fd82dce7c5ec37d73e5"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk4MTc2NQ==", "bodyText": "unnecessary formatting change?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/919#discussion_r535981765", "createdAt": "2020-12-04T10:05:07Z", "author": {"login": "cristianonicolai"}, "path": "jbpm/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java", "diffHunk": "@@ -183,7 +189,8 @@ public Object start(final String uri, final String localName,\n \t\treturn process;\n \t}\n \n-\t@SuppressWarnings(\"unchecked\")\n+\t@Override\n+    @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1dced7a0b86dcfcea73fd82dce7c5ec37d73e5"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk4MTgzNw==", "bodyText": "unnecessary formatting change?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/919#discussion_r535981837", "createdAt": "2020-12-04T10:05:14Z", "author": {"login": "cristianonicolai"}, "path": "jbpm/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java", "diffHunk": "@@ -303,7 +336,8 @@ private static Node findNodeByIdOrUniqueIdInMetadata(NodeContainer nodeContainer\n \t     return node;\n \t }\n \n-\t public Class<?> generateNodeFor() {\n+\t @Override\n+    public Class<?> generateNodeFor() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1dced7a0b86dcfcea73fd82dce7c5ec37d73e5"}, "originalPosition": 200}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0ODE0OTg2", "url": "https://github.com/kiegroup/kogito-runtimes/pull/919#pullrequestreview-544814986", "createdAt": "2020-12-04T10:01:43Z", "commit": {"oid": "ba1dced7a0b86dcfcea73fd82dce7c5ec37d73e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDowMTo0M1rOH_JmqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDowMTo0M1rOH_JmqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk3OTY4OA==", "bodyText": "Maybe a better message would be There is not connection from these throw links to any catch link\u00a0or There is not connection to any catch link from these throw links. Just to satisfy the specification that the orientation of these links is from source/throw to target/catch.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/919#discussion_r535979688", "createdAt": "2020-12-04T10:01:43Z", "author": {"login": "MarianMacik"}, "path": "jbpm/jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java", "diffHunk": "@@ -209,65 +216,91 @@ public Object end(final String uri, final String localName,\n \t\treturn process;\n \t}\n \t\n-\t public static void linkIntermediateLinks(NodeContainer process,\n-\t            List<IntermediateLink> links) {\n-\n-\t        if (null != links) {\n-\n-\t            // Search throw links\n-\t            ArrayList<IntermediateLink> throwLinks = new ArrayList<IntermediateLink>();\n-\t            for (IntermediateLink aLinks : links) {\n-\t                if (aLinks.isThrowLink()) {\n-\t                    throwLinks.add(aLinks);\n-\t                }\n-\t            }\n-\n-\t            // Look for catch links for a throw link\n-\t            for (IntermediateLink throwLink : throwLinks) {\n-\n-\t                ArrayList<IntermediateLink> linksWithSharedNames = new ArrayList<IntermediateLink>();\n-\t                for (IntermediateLink aLink : links) {\n-\t                    if (throwLink.getName().equals(aLink.getName())) {\n-\t                        linksWithSharedNames.add(aLink);\n-\t                    }\n-\t                }\n-\n-\t                if (linksWithSharedNames.size() < 2) {\n-\t                    throw new IllegalArgumentException(\n-\t                            \"There should be at least 2 link events to make a connection\");\n-\t                }\n-\n-\t                linksWithSharedNames.remove(throwLink);\n-\n-\t                // Make the connections\n-\t                Node t = findNodeByIdOrUniqueIdInMetadata(process,\n-\t                        throwLink.getUniqueId());\n-\n-\t                // connect throw to catch\n-\t                for (IntermediateLink catchLink : linksWithSharedNames) {\n-\n-\t                    Node c = findNodeByIdOrUniqueIdInMetadata(process,\n-\t                            catchLink.getUniqueId());\n-\t                    if (t != null && c != null) {\n-\t                        Connection result = new ConnectionImpl(t,\n-\t                                NodeImpl.CONNECTION_DEFAULT_TYPE, c,\n-\t                                NodeImpl.CONNECTION_DEFAULT_TYPE);\n-\t                        result.setMetaData(\"linkNodeHidden\", \"yes\");\n-\t                    }\n-\t                }\n-\n-\t                // Remove processed links\n-\t                links.remove(throwLink);\n-\t                links.removeAll(linksWithSharedNames);\n-\t            }\n-\n-\t            if (links.size() > 0) {\n-\t                throw new IllegalArgumentException(links.size()\n-\t                        + \" links were not processed\");\n-\t            }\n+\t\n+    public static void linkIntermediateLinks(NodeContainer process,List<IntermediateLink> links) {\n+        if (links == null) { \n+            return;\n+        }\n+        Map<String,IntermediateLink> catchLinks = new HashMap<>();\n+        Map<String,Collection<IntermediateLink>> throwLinks = new HashMap<>();\n+        Collection<IntermediateLink> noNameLinks = new ArrayList<>();\n+        Collection<IntermediateLink> duplicatedTarget = new LinkedHashSet<>();\n+        Collection<IntermediateLink> unconnectedTarget = new ArrayList<>();\n+        \n+        // collect errors and nodes in first loop\n+        for (IntermediateLink link : links) {\n+            if (link.getName() == null || link.getName().isEmpty()) {\n+                noNameLinks.add(link);\n+            }\n+            else if (link.isThrowLink()) {\n+                throwLinks.computeIfAbsent(link.getName(), s -> new ArrayList<>()).add(link);\n+            }\n+            else {\n+                IntermediateLink duplicateLink = catchLinks.putIfAbsent(link.getName(),link);\n+                if (duplicateLink != null) {\n+                    duplicatedTarget.add(duplicateLink);\n+                    duplicatedTarget.add(link);\n+                }\n+            }\n+        }\n \n-\t        }\n-\t }\n+        // second loop for connection\n+        for (IntermediateLink catchLink : catchLinks.values()) {\n+            Collection<IntermediateLink> associatedLinks = throwLinks.remove(catchLink.getName());\n+            if (associatedLinks != null) {\n+                // connect throw to catch\n+                Node catchNode = findNodeByIdOrUniqueIdInMetadata(process,catchLink.getUniqueId());\n+                if (catchNode != null) {\n+                    for (IntermediateLink throwLink : associatedLinks) {\n+                        Node throwNode = findNodeByIdOrUniqueIdInMetadata(process,\n+                            throwLink.getUniqueId());\n+                        if (throwNode != null) {\n+                            Connection result = new ConnectionImpl(throwNode,\n+                                NodeImpl.CONNECTION_DEFAULT_TYPE, catchNode,\n+                                NodeImpl.CONNECTION_DEFAULT_TYPE);\n+                            result.setMetaData(\"linkNodeHidden\", \"yes\");\n+                        }\n+                    }\n+                }\n+            }\n+            else {\n+                unconnectedTarget.add(catchLink);\n+            }\n+        }\n+        \n+        // throw exception if any error (this is done at the end of the process to show the user as much errors as possible) \n+        StringBuilder errors = new StringBuilder();\n+        if (!noNameLinks.isEmpty()) {\n+            formatError(errors,\"These nodes do not have a name \",noNameLinks.stream(), process);\n+        }\n+        if (!duplicatedTarget.isEmpty()) {\n+            formatError(errors,\"\\nThere are multiple catch nodes with the same name \",duplicatedTarget.stream(), process);\n+        }\n+        if (!unconnectedTarget.isEmpty()) {\n+            formatError(errors,\"\\nThere is not connection from any throw link to these catch links \",unconnectedTarget.stream(), process);\n+        }\n+        if (!throwLinks.isEmpty()) {\n+            formatError(errors,\"\\nThere is not connection from any catch link to these throw links \",throwLinks", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1dced7a0b86dcfcea73fd82dce7c5ec37d73e5"}, "originalPosition": 170}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba1dced7a0b86dcfcea73fd82dce7c5ec37d73e5", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/ba1dced7a0b86dcfcea73fd82dce7c5ec37d73e5", "committedDate": "2020-12-03T18:48:48Z", "message": "[KOGITO-3896] Link events has reverted multiple source/target behavior\n\nCarry forward of changes on JBPM to Kogito regarding links"}, "afterCommit": {"oid": "66fbc8897c625409b97c973e4d058778ca858679", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/66fbc8897c625409b97c973e4d058778ca858679", "committedDate": "2020-12-04T10:33:35Z", "message": "[KOGITO-3896] Link events has reverted multiple source/target behavior\n\nCarry forward of changes on JBPM to Kogito regarding links"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "66fbc8897c625409b97c973e4d058778ca858679", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/66fbc8897c625409b97c973e4d058778ca858679", "committedDate": "2020-12-04T10:33:35Z", "message": "[KOGITO-3896] Link events has reverted multiple source/target behavior\n\nCarry forward of changes on JBPM to Kogito regarding links"}, "afterCommit": {"oid": "465b134e7778a44bc723b08348049b48ef50c6e8", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/465b134e7778a44bc723b08348049b48ef50c6e8", "committedDate": "2020-12-04T11:13:17Z", "message": "[KOGITO-3896] Link events has reverted multiple source/target behavior\n\nCarry forward of changes on JBPM to Kogito regarding links"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "440ccdff31510a90c7be0ff1dae7ca8dc4e2ce29", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/440ccdff31510a90c7be0ff1dae7ca8dc4e2ce29", "committedDate": "2020-12-04T11:15:06Z", "message": "[KOGITO-3896] Link events has reverted multiple source/target behavior\n\nCarry forward of changes on JBPM to Kogito regarding links"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "465b134e7778a44bc723b08348049b48ef50c6e8", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/465b134e7778a44bc723b08348049b48ef50c6e8", "committedDate": "2020-12-04T11:13:17Z", "message": "[KOGITO-3896] Link events has reverted multiple source/target behavior\n\nCarry forward of changes on JBPM to Kogito regarding links"}, "afterCommit": {"oid": "440ccdff31510a90c7be0ff1dae7ca8dc4e2ce29", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/440ccdff31510a90c7be0ff1dae7ca8dc4e2ce29", "committedDate": "2020-12-04T11:15:06Z", "message": "[KOGITO-3896] Link events has reverted multiple source/target behavior\n\nCarry forward of changes on JBPM to Kogito regarding links"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODU1Nzk0", "url": "https://github.com/kiegroup/kogito-runtimes/pull/919#pullrequestreview-547855794", "createdAt": "2020-12-09T05:40:03Z", "commit": {"oid": "440ccdff31510a90c7be0ff1dae7ca8dc4e2ce29"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MDAxODM3", "url": "https://github.com/kiegroup/kogito-runtimes/pull/919#pullrequestreview-548001837", "createdAt": "2020-12-09T09:42:02Z", "commit": {"oid": "440ccdff31510a90c7be0ff1dae7ca8dc4e2ce29"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3887, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}