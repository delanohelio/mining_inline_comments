{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5ODY5OTU1", "number": 480, "title": "KOGITO-2024, KOGITO-2068, KOGITO-2110 - Add human task and rules (drl) support for Serverless Workflow", "bodyText": "This also allows user tasks to be placed inside embedded subprocess (tested by the serverless workflow tests)", "createdAt": "2020-04-28T04:08:53Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/480", "merged": true, "mergeCommit": {"oid": "5c52af749aa749eabb8318032e1c9310ab691d57"}, "closed": true, "closedAt": "2020-05-07T02:16:11Z", "author": {"login": "tsurdilo"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcb9nQ6AFqTQwMTUxOTE5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcevAaeAH2gAyNDA5ODY5OTU1OjA5MjhiMzdiMWZjZjE4M2NiNzFmMmY1ODZjNDA5ODlmODVlMDZhODg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNTE5MTk4", "url": "https://github.com/kiegroup/kogito-runtimes/pull/480#pullrequestreview-401519198", "createdAt": "2020-04-28T06:01:03Z", "commit": {"oid": "3d56ee5980a3f480e3b1c6327767252588daa1e7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNjowMTowM1rOGND6ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNjowNDo0MFrOGNEAYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM0ODgzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } else {\n          \n          \n            \n                    } else if {", "url": "https://github.com/kiegroup/kogito-runtimes/pull/480#discussion_r416348830", "createdAt": "2020-04-28T06:01:03Z", "author": {"login": "cristianonicolai"}, "path": "jbpm/jbpm-serverless-workflow/src/main/java/org/jbpm/serverless/workflow/parser/util/ServerlessWorkflowUtils.java", "diffHunk": "@@ -155,16 +156,22 @@ public static String scriptFunctionScript(String script) {\n     }\n \n     public static String conditionScript(String path, DefaultChoice.Operator operator, String value) {\n+        String workflowVar = ServerlessWorkflowFactory.DEFAULT_WORKFLOW_VAR;\n \n         if (path.startsWith(\"$.\")) {\n             path = path.substring(2);\n+        } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d56ee5980a3f480e3b1c6327767252588daa1e7"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM1MDMwNQ==", "bodyText": "My personal preference here would be to simply create a new HashMap and assign a variable, as this style endups creating an inner class.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/480#discussion_r416350305", "createdAt": "2020-04-28T06:04:40Z", "author": {"login": "cristianonicolai"}, "path": "jbpm/jbpm-serverless-workflow/src/test/java/org/jbpm/serverless/workflow/WorkflowFactoryTest.java", "diffHunk": "@@ -232,4 +232,73 @@ public void testJoinNode() {\n         assertThat(join.getType()).isEqualTo(Join.TYPE_XOR);\n         assertThat(join.getMetaData().get(\"UniqueId\")).isEqualTo(\"1\");\n     }\n+\n+    @Test\n+    public void testProcessVar() {\n+        RuleFlowProcess process = new RuleFlowProcess();\n+        testFactory.processVar(\"testVar\", JsonNode.class, process);\n+\n+        assertThat(process.getVariableScope()).isNotNull();\n+        assertThat(process.getVariableScope().getVariables()).isNotNull();\n+        assertThat(process.getVariableScope().getVariables().size()).isEqualTo(1);\n+    }\n+\n+    @Test\n+    public void testHumanTaskNode() {\n+        TestNodeContainer nodeContainer = new TestNodeContainer();\n+        RuleFlowProcess process = new RuleFlowProcess();\n+\n+        Function function = new Function().withName(\"testfunction1\").withMetadata(\n+                new HashMap() {{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d56ee5980a3f480e3b1c6327767252588daa1e7"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNzUwNDA4", "url": "https://github.com/kiegroup/kogito-runtimes/pull/480#pullrequestreview-401750408", "createdAt": "2020-04-28T11:39:36Z", "commit": {"oid": "839c5efa7d7c8360f5981322c1ee7c77e49974f1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8320cc4a3a5cb3232e2a5ace6df51250d0546a6", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/f8320cc4a3a5cb3232e2a5ace6df51250d0546a6", "committedDate": "2020-04-30T16:54:55Z", "message": "KOGITO-2024 - Add Decision (Human Task) support for Serverless Workflow"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "119b80e57db5f226ed2b7b4f2337ec02f2e72355", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/119b80e57db5f226ed2b7b4f2337ec02f2e72355", "committedDate": "2020-04-30T16:54:55Z", "message": "updates for cristianonicolai review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2567c49d0912477c4823b6fbffdf74a5640b99f0", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/2567c49d0912477c4823b6fbffdf74a5640b99f0", "committedDate": "2020-04-30T16:54:55Z", "message": "fixing missing function type in log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "520fdf293567e36bee62955bb57f7836e3dfa328", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/520fdf293567e36bee62955bb57f7836e3dfa328", "committedDate": "2020-04-30T16:54:55Z", "message": "adding multi decision test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f62120b326f504f277f493b6a32e4ec7e7ea592", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/2f62120b326f504f277f493b6a32e4ec7e7ea592", "committedDate": "2020-05-02T15:56:48Z", "message": "Adding KOGITO-2068 - rule support (drl) for sw"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3c037f68f52809b1907fa331204f9a537b41ed0", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/f3c037f68f52809b1907fa331204f9a537b41ed0", "committedDate": "2020-04-30T13:16:55Z", "message": "adding multi decision test"}, "afterCommit": {"oid": "2f62120b326f504f277f493b6a32e4ec7e7ea592", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/2f62120b326f504f277f493b6a32e4ec7e7ea592", "committedDate": "2020-05-02T15:56:48Z", "message": "Adding KOGITO-2068 - rule support (drl) for sw"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NDY4OTk2", "url": "https://github.com/kiegroup/kogito-runtimes/pull/480#pullrequestreview-405468996", "createdAt": "2020-05-05T03:04:21Z", "commit": {"oid": "2f62120b326f504f277f493b6a32e4ec7e7ea592"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NTk2OTEy", "url": "https://github.com/kiegroup/kogito-runtimes/pull/480#pullrequestreview-406596912", "createdAt": "2020-05-06T13:12:30Z", "commit": {"oid": "2f62120b326f504f277f493b6a32e4ec7e7ea592"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzoxMjozMFrOGRSRLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzoxMjozMFrOGRSRLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc3ODI4Ng==", "bodyText": "what about using\nVariable variable = Optional.ofNullable(variableScope.findVariable(entry.getValue()))\n.orElse(processVariableScope.findVariable(entry.getValue()));", "url": "https://github.com/kiegroup/kogito-runtimes/pull/480#discussion_r420778286", "createdAt": "2020-05-06T13:12:30Z", "author": {"login": "tiagodolphine"}, "path": "jbpm/jbpm-flow-builder/src/main/java/org/jbpm/compiler/canonical/UserTaskModelMetaData.java", "diffHunk": "@@ -160,7 +162,10 @@ private CompilationUnit compilationUnitInput() {\n             Variable variable = variableScope.findVariable(entry.getValue());\n \n             if (variable == null) {\n-                throw new IllegalStateException(\"Task \" + humanTaskNode.getName() +\" (input) \" + entry.getKey() + \" reference not existing variable \" + entry.getValue());\n+                variable = processVariableScope.findVariable(entry.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f62120b326f504f277f493b6a32e4ec7e7ea592"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NTk3NTE3", "url": "https://github.com/kiegroup/kogito-runtimes/pull/480#pullrequestreview-406597517", "createdAt": "2020-05-06T13:13:13Z", "commit": {"oid": "2f62120b326f504f277f493b6a32e4ec7e7ea592"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzoxMzoxM1rOGRSTOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzoxMzoxM1rOGRSTOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc3ODgwOA==", "bodyText": "what about using\nVariable variable = Optional.ofNullable(variableScope.findVariable(entry.getValue()))\n.orElse(processVariableScope.findVariable(entry.getValue()));", "url": "https://github.com/kiegroup/kogito-runtimes/pull/480#discussion_r420778808", "createdAt": "2020-05-06T13:13:13Z", "author": {"login": "tiagodolphine"}, "path": "jbpm/jbpm-flow-builder/src/main/java/org/jbpm/compiler/canonical/UserTaskModelMetaData.java", "diffHunk": "@@ -251,15 +256,18 @@ private CompilationUnit compilationUnitOutput() {\n             Variable variable = variableScope.findVariable(entry.getValue());\n \n             if (variable == null) {\n-                // check if given mapping is an expression\n-                Matcher matcher = PatternConstants.PARAMETER_MATCHER.matcher(entry.getValue());\n-                if (matcher.find()) {                    \n-                    Map<String, String> dataOutputs = (Map<String, String>) humanTaskNode.getMetaData(\"DataOutputs\");\n-                    variable = new Variable();\n-                    variable.setName(entry.getKey());\n-                    variable.setType(new ObjectDataType(dataOutputs.get(entry.getKey())));\n-                } else {\n-                    throw new IllegalStateException(\"Task \" + humanTaskNode.getName() +\" (output) \" + entry.getKey() + \" reference not existing variable \" + entry.getValue());\n+                variable = processVariableScope.findVariable(entry.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f62120b326f504f277f493b6a32e4ec7e7ea592"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7986f02e98895e55fc13f8132f3cfd293daa2557", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/7986f02e98895e55fc13f8132f3cfd293daa2557", "committedDate": "2020-05-06T17:25:42Z", "message": "Review updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0928b37b1fcf183cb71f2f586c40989f85e06a88", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0928b37b1fcf183cb71f2f586c40989f85e06a88", "committedDate": "2020-05-06T20:49:48Z", "message": "KOGITO-2110 - Fix issues with message start/end events for Event State"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3438, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}