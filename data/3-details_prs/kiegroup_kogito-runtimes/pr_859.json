{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMTQ5NzM2", "number": 859, "title": "KOGITO-3732 - monitoring refactoring: decouple from Prometheus", "bodyText": "JIRA: https://issues.redhat.com/browse/KOGITO-3732\nStill a draft, description to be done\nThis PR aims to decouple the monitoring addon from prometheus: the user will have the possibility to specify what is the tecnology to use to export the metrics generated by the kogito runtime.\nThe existing monitoring-prometheus-addon will remain available with exactly the same interfaces that already exist: it is backcompatible.\nA new artifact monitoring-core will be available, and the user can import that so to inject the micrometer registy to use. For example, if the user would like to export the metrics to elastic, he/she will have to import the dependencies:\n    <dependency>\n      <groupId>org.kie.kogito</groupId>\n      <artifactId>monitoring-core</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>io.micrometer</groupId>\n      <artifactId>micrometer-registry-elastic</artifactId>\n    </dependency>\nThen register and start the micrometer registry like\nimport java.util.concurrent.Executors;\n\nimport javax.annotation.PostConstruct;\nimport javax.inject.Singleton;\n\nimport io.micrometer.core.lang.Nullable;\nimport io.micrometer.elastic.ElasticConfig;\nimport io.micrometer.elastic.ElasticMeterRegistry;\nimport io.quarkus.runtime.Startup;\nimport org.kie.kogito.monitoring.core.MonitoringRegistry;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n@Singleton\n@Startup\npublic class ElasticProvider {\n\n    private ElasticMeterRegistry registry;\n    private static final Logger logger = LoggerFactory.getLogger(ElasticProvider.class);\n\n    private ElasticProvider() {\n    }\n\n    @PostConstruct\n    public void setUp() {\n        ElasticConfig elasticConfig = new ElasticConfig() {\n            @Override\n            @Nullable\n            public String get(String k) {\n                return null;\n            }\n        };\n        registry = ElasticMeterRegistry.builder(elasticConfig).build();\n        MonitoringRegistry.addRegistry(registry);\n        logger.info(\"Elastic registry added to monitoring addon.\");\n        runMe();\n    }\n\n    private void runMe() {\n        logger.info(\"Initializing elastic metrics publisher\");\n        registry.start(Executors.defaultThreadFactory());\n    }\n}\nIf the user would like to use Prometheus, the module\n    <dependency>\n      <groupId>org.kie.kogito</groupId>\n      <artifactId>monitoring-prometheus-addon</artifactId>\n    </dependency>\nis still available and the behaviour/interfaces are the same.\nThe files PrometheusProcessEventListener, PrometheusMetrics, PrometheusMetricsDroolsListener have been moved to ProcessEventListener, RuleMetrics, RuleMetricsDroolsListener keeping the history (here on Github they are shown as new files, but if you git blame them you will see the history, as well as you can check the single commits).\nThen they were recreated to implement the wrapper.\nMany thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-10-29T09:51:10Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859", "merged": true, "mergeCommit": {"oid": "86e086dd55974bc902a6ee44df6f2d524ad50e67"}, "closed": true, "closedAt": "2020-11-25T12:24:02Z", "author": {"login": "r00ta"}, "timelineItems": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXMsgZAH2gAyNTEyMTQ5NzM2Ojg2YTI1ZTRkZTdhMTFmMzJlNjk5NGU2ZmIzMzVkZGQzODViZGYzMmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdf9bUQAFqTUzODQ0MTM1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "86a25e4de7a11f32e6994e6fb335ddd385bdf32e", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/86a25e4de7a11f32e6994e6fb335ddd385bdf32e", "committedDate": "2020-10-29T07:04:58Z", "message": "use micrometer library"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "095333e7718d9c056b4fe28f8f8514d030e29383", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/095333e7718d9c056b4fe28f8f8514d030e29383", "committedDate": "2020-10-29T07:06:29Z", "message": "move prometheus addon into monitoring addons module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "903bd53a52a8975361c8f40a799c7ce64c2263b0", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/903bd53a52a8975361c8f40a799c7ce64c2263b0", "committedDate": "2020-10-29T07:26:31Z", "message": "refactoring: move to monitoring core decoupled monitoring resources"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9eaf9f073e4bce6fa574dc24e12adba536049537", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/9eaf9f073e4bce6fa574dc24e12adba536049537", "committedDate": "2020-10-29T07:43:41Z", "message": "move test files to core module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d37ad37a024e598055693c9653064c3d896873c0", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/d37ad37a024e598055693c9653064c3d896873c0", "committedDate": "2020-10-29T09:38:09Z", "message": "refactoring tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61e5dcbcda9bdef91dafa92621bc2c357d56e7bc", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/61e5dcbcda9bdef91dafa92621bc2c357d56e7bc", "committedDate": "2020-10-29T09:45:56Z", "message": "implement backcompability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3b5278ad3c3d14c121ea981400671558938eae5", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/a3b5278ad3c3d14c121ea981400671558938eae5", "committedDate": "2020-10-29T09:50:12Z", "message": "refactoring on kogito codegen so to use the new core module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11fda1719dd166072276a166eff61ee0ce2c297f", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/11fda1719dd166072276a166eff61ee0ce2c297f", "committedDate": "2020-10-29T09:52:03Z", "message": "remove file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1560a0b0c53e973ebd8c1cde587c805d0898532", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/a1560a0b0c53e973ebd8c1cde587c805d0898532", "committedDate": "2020-11-04T09:47:10Z", "message": "refactoring dashboards generation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75b8fc8104ae25c4f119d0113b68acdcb9c140ca", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/75b8fc8104ae25c4f119d0113b68acdcb9c140ca", "committedDate": "2020-11-04T14:00:54Z", "message": "refactoring dmnresult test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84e05be90a3815afb780f661d72b267570736a09", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/84e05be90a3815afb780f661d72b267570736a09", "committedDate": "2020-11-04T14:13:21Z", "message": "add prometheus test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff1d6c16cc672d3351b3ccac62e8155e37e52db1", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/ff1d6c16cc672d3351b3ccac62e8155e37e52db1", "committedDate": "2020-11-05T09:26:26Z", "message": "refactoring kogito codegen to work with the two monitoring modules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3329ec1f4fb49012057766b24a6d827ae3b5d65", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/e3329ec1f4fb49012057766b24a6d827ae3b5d65", "committedDate": "2020-11-10T07:57:15Z", "message": "remove file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cde3bcf05d22a32fd1f5c18675cd12f450492334", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/cde3bcf05d22a32fd1f5c18675cd12f450492334", "committedDate": "2020-11-10T08:01:37Z", "message": "Merge branch 'master' into KOGITO-3732-monitoring-refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTQ0NDUx", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#pullrequestreview-526944451", "createdAt": "2020-11-10T08:08:03Z", "commit": {"oid": "cde3bcf05d22a32fd1f5c18675cd12f450492334"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODowODowM1rOHwQbTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODowODowM1rOHwQbTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM2MjgzMQ==", "bodyText": "Micrometer supports dynamic labels (i.e. we see a new process_id every time and a new measurement is created every time ), but it's somehow hidden by the api: we have to create the object every time and if a Counter with the same name and tags already exists, then the existing one is returned (see micrometer-metrics/micrometer#535 (comment)) .", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r520362831", "createdAt": "2020-11-10T08:08:03Z", "author": {"login": "r00ta"}, "path": "addons/monitoring-addon/monitoring-core/src/main/java/org/kie/kogito/monitoring/core/process/ProcessEventListener.java", "diffHunk": "@@ -0,0 +1,192 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.kogito.monitoring.core.process;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import io.micrometer.core.instrument.Counter;\n+import io.micrometer.core.instrument.DistributionSummary;\n+import io.micrometer.core.instrument.Gauge;\n+import io.micrometer.core.instrument.Tag;\n+import org.jbpm.workflow.instance.impl.WorkflowProcessInstanceImpl;\n+import org.jbpm.workflow.instance.node.WorkItemNodeInstance;\n+import org.kie.api.event.process.DefaultProcessEventListener;\n+import org.kie.api.event.process.ProcessCompletedEvent;\n+import org.kie.api.event.process.ProcessNodeLeftEvent;\n+import org.kie.api.event.process.ProcessStartedEvent;\n+import org.kie.api.event.process.SLAViolatedEvent;\n+import org.kie.api.runtime.process.NodeInstance;\n+import org.kie.kogito.monitoring.core.MonitoringRegistry;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ProcessEventListener extends DefaultProcessEventListener {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ProcessEventListener.class);\n+    private static Map<String, AtomicInteger> gaugeMap = new HashMap<String, AtomicInteger>();\n+    private String identifier;\n+\n+    public ProcessEventListener(String identifier) {\n+        this.identifier = identifier;\n+    }\n+\n+    private static Counter getNumberOfProcessInstancesStartedCounter(String appId, String processId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cde3bcf05d22a32fd1f5c18675cd12f450492334"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45e965e1bd9089bfc09ad456a82ef65d0685e1b4", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/45e965e1bd9089bfc09ad456a82ef65d0685e1b4", "committedDate": "2020-11-10T08:48:06Z", "message": "add test on process gauge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0015594e1913a1558ae4536ae7444771c002d79", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/b0015594e1913a1558ae4536ae7444771c002d79", "committedDate": "2020-11-10T09:04:11Z", "message": "fix pom"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41c3ecbafce011c4dd3ceba67826dac0a48e199d", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/41c3ecbafce011c4dd3ceba67826dac0a48e199d", "committedDate": "2020-11-10T09:07:06Z", "message": "fix monitoring core pom"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTkzMjk5", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#pullrequestreview-526993299", "createdAt": "2020-11-10T09:10:08Z", "commit": {"oid": "41c3ecbafce011c4dd3ceba67826dac0a48e199d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxMDowOFrOHwSvsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxMDowOFrOHwSvsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQwMDgxOA==", "bodyText": "This file is not new..", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r520400818", "createdAt": "2020-11-10T09:10:08Z", "author": {"login": "r00ta"}, "path": "addons/monitoring-addon/monitoring-core/src/main/java/org/kie/kogito/monitoring/core/process/ProcessEventListener.java", "diffHunk": "@@ -0,0 +1,192 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c3ecbafce011c4dd3ceba67826dac0a48e199d"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTkzNzU2", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#pullrequestreview-526993756", "createdAt": "2020-11-10T09:10:38Z", "commit": {"oid": "41c3ecbafce011c4dd3ceba67826dac0a48e199d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxMDozOFrOHwSw_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxMDozOFrOHwSw_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQwMTE1MA==", "bodyText": "This file is not new..", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r520401150", "createdAt": "2020-11-10T09:10:38Z", "author": {"login": "r00ta"}, "path": "addons/monitoring-addon/monitoring-core/src/main/java/org/kie/kogito/monitoring/core/rule/RuleMetrics.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c3ecbafce011c4dd3ceba67826dac0a48e199d"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTkzOTE2", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#pullrequestreview-526993916", "createdAt": "2020-11-10T09:10:49Z", "commit": {"oid": "41c3ecbafce011c4dd3ceba67826dac0a48e199d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxMDo0OVrOHwSxfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxMDo0OVrOHwSxfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQwMTI3OA==", "bodyText": "This file is not new..", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r520401278", "createdAt": "2020-11-10T09:10:49Z", "author": {"login": "r00ta"}, "path": "addons/monitoring-addon/monitoring-core/src/main/java/org/kie/kogito/monitoring/core/system/metrics/SystemMetricsCollector.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c3ecbafce011c4dd3ceba67826dac0a48e199d"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTk0MDc0", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#pullrequestreview-526994074", "createdAt": "2020-11-10T09:11:00Z", "commit": {"oid": "41c3ecbafce011c4dd3ceba67826dac0a48e199d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxMTowMFrOHwSx-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxMTowMFrOHwSx-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQwMTQwMQ==", "bodyText": "This file is not new..", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r520401401", "createdAt": "2020-11-10T09:11:00Z", "author": {"login": "r00ta"}, "path": "addons/monitoring-addon/monitoring-core/src/main/java/org/kie/kogito/monitoring/core/system/metrics/dmnhandlers/BooleanHandler.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c3ecbafce011c4dd3ceba67826dac0a48e199d"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTk0MzQ3", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#pullrequestreview-526994347", "createdAt": "2020-11-10T09:11:17Z", "commit": {"oid": "41c3ecbafce011c4dd3ceba67826dac0a48e199d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxMToxOFrOHwSyww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxMToxOFrOHwSyww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQwMTYwMw==", "bodyText": "This file is not new..", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r520401603", "createdAt": "2020-11-10T09:11:18Z", "author": {"login": "r00ta"}, "path": "addons/monitoring-addon/monitoring-core/src/main/java/org/kie/kogito/monitoring/core/system/metrics/dmnhandlers/StringHandler.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c3ecbafce011c4dd3ceba67826dac0a48e199d"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTk0NDky", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#pullrequestreview-526994492", "createdAt": "2020-11-10T09:11:29Z", "commit": {"oid": "41c3ecbafce011c4dd3ceba67826dac0a48e199d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxMToyOVrOHwSzMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToxMToyOVrOHwSzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQwMTcxMw==", "bodyText": "This file is not new..", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r520401713", "createdAt": "2020-11-10T09:11:29Z", "author": {"login": "r00ta"}, "path": "addons/monitoring-addon/monitoring-core/src/main/java/org/kie/kogito/monitoring/core/system/metrics/dmnhandlers/TypeHandlerWithSummary.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c3ecbafce011c4dd3ceba67826dac0a48e199d"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "426bf4091613e122a89cdd9b215688079f17a9c9", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/426bf4091613e122a89cdd9b215688079f17a9c9", "committedDate": "2020-11-10T09:22:50Z", "message": "fix pom"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3Nzk0OTY4", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#pullrequestreview-527794968", "createdAt": "2020-11-11T02:14:25Z", "commit": {"oid": "426bf4091613e122a89cdd9b215688079f17a9c9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMjoxNDoyNVrOHw46RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMjoxOTo0N1rOHw5H3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAyNjExNg==", "bodyText": "@r00ta we probably dont even need this file as the one the root level of the project should be enough.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r521026116", "createdAt": "2020-11-11T02:14:25Z", "author": {"login": "cristianonicolai"}, "path": "addons/monitoring-addon/monitoring-prometheus-addon/.gitignore", "diffHunk": "@@ -2,7 +2,7 @@\n /local\n \n # Eclipse, Netbeans and IntelliJ files\n-/.*\n+/.gitignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "426bf4091613e122a89cdd9b215688079f17a9c9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAyOTU5OA==", "bodyText": "@r00ta could you avoid this inline add for the creation of the list? I would suggest maybe using Arrays.asList instead.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r521029598", "createdAt": "2020-11-11T02:19:47Z", "author": {"login": "cristianonicolai"}, "path": "addons/monitoring-addon/monitoring-core/src/main/java/org/kie/kogito/monitoring/core/process/ProcessEventListener.java", "diffHunk": "@@ -0,0 +1,192 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.kogito.monitoring.core.process;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import io.micrometer.core.instrument.Counter;\n+import io.micrometer.core.instrument.DistributionSummary;\n+import io.micrometer.core.instrument.Gauge;\n+import io.micrometer.core.instrument.Tag;\n+import org.jbpm.workflow.instance.impl.WorkflowProcessInstanceImpl;\n+import org.jbpm.workflow.instance.node.WorkItemNodeInstance;\n+import org.kie.api.event.process.DefaultProcessEventListener;\n+import org.kie.api.event.process.ProcessCompletedEvent;\n+import org.kie.api.event.process.ProcessNodeLeftEvent;\n+import org.kie.api.event.process.ProcessStartedEvent;\n+import org.kie.api.event.process.SLAViolatedEvent;\n+import org.kie.api.runtime.process.NodeInstance;\n+import org.kie.kogito.monitoring.core.MonitoringRegistry;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ProcessEventListener extends DefaultProcessEventListener {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ProcessEventListener.class);\n+    private static Map<String, AtomicInteger> gaugeMap = new HashMap<String, AtomicInteger>();\n+    private String identifier;\n+\n+    public ProcessEventListener(String identifier) {\n+        this.identifier = identifier;\n+    }\n+\n+    private static Counter getNumberOfProcessInstancesStartedCounter(String appId, String processId) {\n+        List<Tag> tags = new ArrayList<Tag>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "426bf4091613e122a89cdd9b215688079f17a9c9"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4bb0aa5d471462872b0d11d0200b9ce77f41315", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/d4bb0aa5d471462872b0d11d0200b9ce77f41315", "committedDate": "2020-11-11T07:54:10Z", "message": "rebase master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d660804ae750cdb288744a03dae3806869f919c", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/9d660804ae750cdb288744a03dae3806869f919c", "committedDate": "2020-11-11T08:05:26Z", "message": "refactoring tag array creation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a31cc5f226da469b0cb14d3c44ef3a3ee1334c1c", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/a31cc5f226da469b0cb14d3c44ef3a3ee1334c1c", "committedDate": "2020-11-11T08:06:08Z", "message": "remove .gitignore nested file"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNjMwMTI3", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#pullrequestreview-521630127", "createdAt": "2020-11-02T13:33:20Z", "commit": {"oid": "11fda1719dd166072276a166eff61ee0ce2c297f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToxMTo0M1rOHx_WjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToxMTo0M1rOHx_WjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE4MDIzNg==", "bodyText": "Why this change?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r522180236", "createdAt": "2020-11-12T15:11:43Z", "author": {"login": "danielezonca"}, "path": "kogito-maven-plugin/src/main/java/org/kie/kogito/maven/plugin/GenerateModelMojo.java", "diffHunk": "@@ -236,7 +236,8 @@ private ApplicationGenerator createApplicationGenerator() throws IOException, Mo\n         }\n \n         boolean usePersistence = persistence || hasClassOnClasspath(project, \"org.kie.kogito.persistence.KogitoProcessInstancesFactory\");\n-        boolean useMonitoring = hasClassOnClasspath(project, \"org.kie.kogito.monitoring.rest.MetricsResource\");\n+        boolean useMonitoring = hasClassOnClasspath(project, \"org.kie.kogito.monitoring.rest.MetricsResource\") ||\n+                hasClassOnClasspath(project, \"org.kie.kogito.monitoring.core.MonitoringRegistry\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a31cc5f226da469b0cb14d3c44ef3a3ee1334c1c"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "456ecd2c2db43475ada1c0168860f3e82fd0b1b6", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/456ecd2c2db43475ada1c0168860f3e82fd0b1b6", "committedDate": "2020-11-13T08:15:51Z", "message": "generate grafana dashboards only if using prometheus addon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0acb83c8aa56b12c43ee6494fc5e60cce09f3c85", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0acb83c8aa56b12c43ee6494fc5e60cce09f3c85", "committedDate": "2020-11-13T09:12:34Z", "message": "fix monitoring core package name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5ODk3NDgw", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#pullrequestreview-529897480", "createdAt": "2020-11-13T09:17:34Z", "commit": {"oid": "0acb83c8aa56b12c43ee6494fc5e60cce09f3c85"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwOToxNzozNFrOHymkFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwOToxNzozNFrOHymkFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgyMjY3Nw==", "bodyText": "Let's name it withDashboardGeneration or similar, the fact that now we generate dashboards only if Prometheus is available is an impl detail", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r522822677", "createdAt": "2020-11-13T09:17:34Z", "author": {"login": "danielezonca"}, "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/AddonsConfig.java", "diffHunk": "@@ -21,12 +21,14 @@\n             .withPersistence(false)\n             .withTracing(false)\n             .withMonitoring(false)\n+            .withPrometheusMonitoring(false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0acb83c8aa56b12c43ee6494fc5e60cce09f3c85"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd3e3d723748f14a33fbb201ad1448570a9fa788", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/cd3e3d723748f14a33fbb201ad1448570a9fa788", "committedDate": "2020-11-13T14:48:50Z", "message": "fix native compatibility"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNjQzNjU3", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#pullrequestreview-532643657", "createdAt": "2020-11-17T17:57:19Z", "commit": {"oid": "cd3e3d723748f14a33fbb201ad1448570a9fa788"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MTMzMTA5", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#pullrequestreview-535133109", "createdAt": "2020-11-20T05:54:43Z", "commit": {"oid": "cd3e3d723748f14a33fbb201ad1448570a9fa788"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07ccd96fb831ed5992c56d5ba145c08c9965b8bd", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/07ccd96fb831ed5992c56d5ba145c08c9965b8bd", "committedDate": "2020-11-20T10:46:15Z", "message": "Merge branch 'master' into KOGITO-3732-monitoring-refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MzQ5MDU0", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#pullrequestreview-537349054", "createdAt": "2020-11-24T10:26:20Z", "commit": {"oid": "07ccd96fb831ed5992c56d5ba145c08c9965b8bd"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDoyNjoyMFrOH45B8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMToyMTo1NFrOH48TvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQxNjY4OQ==", "bodyText": "Why not to name it just RuleMetricListener. Because right now we have both Rule and Drools in the name, seems unnecessary.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r529416689", "createdAt": "2020-11-24T10:26:20Z", "author": {"login": "MarianMacik"}, "path": "addons/monitoring-addon/monitoring-core/src/main/java/org/kie/kogito/monitoring/core/rule/RuleMetricsDroolsListener.java", "diffHunk": "@@ -25,12 +23,12 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class PrometheusMetricsDroolsListener extends DefaultAgendaEventListener {\n+public class RuleMetricsDroolsListener extends DefaultAgendaEventListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07ccd96fb831ed5992c56d5ba145c08c9965b8bd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ2NzU5Mw==", "bodyText": "Expected value no longer used.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r529467593", "createdAt": "2020-11-24T11:17:02Z", "author": {"login": "MarianMacik"}, "path": "addons/monitoring-addon/monitoring-core/src/test/java/org/kie/kogito/monitoring/core/integration/DaysAndTimeDurationHandlerTest.java", "diffHunk": "@@ -44,14 +45,12 @@ public void givenDurationMetricsWhenMetricsAreStoredThenTheQuantilesAreCorrect()\n         // Arrange\n         Integer expectedValue = 10000;\n         Duration duration = Duration.ofMillis(expectedValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07ccd96fb831ed5992c56d5ba145c08c9965b8bd"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ2ODIzNA==", "bodyText": "Same here, the old expected values are not used.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r529468234", "createdAt": "2020-11-24T11:18:09Z", "author": {"login": "MarianMacik"}, "path": "addons/monitoring-addon/monitoring-core/src/test/java/org/kie/kogito/monitoring/core/integration/LocalDateHandlerTest.java", "diffHunk": "@@ -50,9 +50,9 @@ public void givenLocalDateMetricsWhenMetricsAreStoredThenTheQuantilesAreCorrect(\n         // Act\n         handler.record(\"decision\", ENDPOINT_NAME, now);\n \n+\n         // Assert\n-        for (Double key : quantiles) {\n-            assertEquals(expectedValue, getQuantile(\"decision\", ENDPOINT_NAME + DecisionConstants.DECISIONS_NAME_SUFFIX, ENDPOINT_NAME, key), 5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07ccd96fb831ed5992c56d5ba145c08c9965b8bd"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ2ODMzNw==", "bodyText": "Same here.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r529468337", "createdAt": "2020-11-24T11:18:19Z", "author": {"login": "MarianMacik"}, "path": "addons/monitoring-addon/monitoring-core/src/test/java/org/kie/kogito/monitoring/core/integration/LocalDateTimeHandlerTest.java", "diffHunk": "@@ -51,8 +51,7 @@ public void givenLocalDateTimeMetricsWhenMetricsAreStoredThenTheQuantilesAreCorr\n         handler.record(\"decision\", ENDPOINT_NAME, now);\n \n         // Assert\n-        for (Double key : quantiles) {\n-            assertEquals(expectedValue, getQuantile(\"decision\", ENDPOINT_NAME + DecisionConstants.DECISIONS_NAME_SUFFIX, ENDPOINT_NAME, key), 5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07ccd96fb831ed5992c56d5ba145c08c9965b8bd"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ3MDM5Nw==", "bodyText": "Maybe it would be good to name it MetricsProcessEventListener or similar so it is easier to identify?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#discussion_r529470397", "createdAt": "2020-11-24T11:21:54Z", "author": {"login": "MarianMacik"}, "path": "addons/monitoring-addon/monitoring-core/src/main/java/org/kie/kogito/monitoring/core/process/ProcessEventListener.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.kogito.monitoring.core.process;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import io.micrometer.core.instrument.Counter;\n+import io.micrometer.core.instrument.DistributionSummary;\n+import io.micrometer.core.instrument.Gauge;\n+import io.micrometer.core.instrument.Tag;\n+import org.jbpm.workflow.instance.impl.WorkflowProcessInstanceImpl;\n+import org.jbpm.workflow.instance.node.WorkItemNodeInstance;\n+import org.kie.api.event.process.DefaultProcessEventListener;\n+import org.kie.api.event.process.ProcessCompletedEvent;\n+import org.kie.api.event.process.ProcessNodeLeftEvent;\n+import org.kie.api.event.process.ProcessStartedEvent;\n+import org.kie.api.event.process.SLAViolatedEvent;\n+import org.kie.api.runtime.process.NodeInstance;\n+import org.kie.kogito.monitoring.core.MonitoringRegistry;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ProcessEventListener extends DefaultProcessEventListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07ccd96fb831ed5992c56d5ba145c08c9965b8bd"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "863e3134a7b68f2a133f32ab69837b2c991e59c5", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/863e3134a7b68f2a133f32ab69837b2c991e59c5", "committedDate": "2020-11-24T14:29:48Z", "message": "remove unused variables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7ae1919a448a8f0d93d059d6b14d3145ffa5e42", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/a7ae1919a448a8f0d93d059d6b14d3145ffa5e42", "committedDate": "2020-11-24T14:31:53Z", "message": "Merge branch 'KOGITO-3732-monitoring-refactoring' of github.com:r00ta/kogito-runtimes into KOGITO-3732-monitoring-refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "487d7fe240ac016302a2f00594bf18e61f6b75eb", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/487d7fe240ac016302a2f00594bf18e61f6b75eb", "committedDate": "2020-11-24T15:11:45Z", "message": "rename drools and process default listeners"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86ae85b58de3d94c9b5eac4f88befb7c4e709e70", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/86ae85b58de3d94c9b5eac4f88befb7c4e709e70", "committedDate": "2020-11-24T15:52:07Z", "message": "Merge remote-tracking branch 'upstream/master' into KOGITO-3732-monitoring-refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "283fd723727f8a0a736b74e481fb76434ca69e58", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/283fd723727f8a0a736b74e481fb76434ca69e58", "committedDate": "2020-11-24T15:56:32Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NDQxMzU1", "url": "https://github.com/kiegroup/kogito-runtimes/pull/859#pullrequestreview-538441355", "createdAt": "2020-11-25T12:22:57Z", "commit": {"oid": "283fd723727f8a0a736b74e481fb76434ca69e58"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3808, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}