{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNDM0Nzcx", "number": 389, "title": "A set of improvements and enhancements for working with bpmn2 processes", "bodyText": "added support for start timer event including code generation, added also life cycle methods (activate/deactivate) for process to allow control on availability of the process for execution\nallow to use custom dialects for assignments instead of hardcoded XPath\nexternalise BpmnProcess compilation to separate class and allow to override to extend it, allow DMN namespace as script format\nallow to rely on errorCode of the error to handle work item exceptions\nexpose node instance and process instance via work item so it can be accessed by work item handler\nallow to defined data intput and output associations on script task to control variables used", "createdAt": "2020-03-25T07:48:56Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389", "merged": true, "mergeCommit": {"oid": "b819c0dec528456be9c5903bf65c43cba754f7fe"}, "closed": true, "closedAt": "2020-03-27T12:22:59Z", "author": {"login": "mswiderski"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRFKLLAH2gAyMzkzNDM0NzcxOjg2YWRjNzg4OTNkNjliNjhjY2FmYmY4YWE5M2YxZWU2MWFiOTkxOGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRvx0ggFqTM4MjgwOTEwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "86adc78893d69b68ccafbf8aa93f1ee61ab9918d", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/86adc78893d69b68ccafbf8aa93f1ee61ab9918d", "committedDate": "2020-03-25T10:43:26Z", "message": "allow to defined data intput and output associations on script task to control variables used"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4282b00f97904d247aa1ff64a3c60a22638aa1d", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/b4282b00f97904d247aa1ff64a3c60a22638aa1d", "committedDate": "2020-03-25T10:43:26Z", "message": "expose node instance and process instance via work item so it can be accessed by work item handler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3976bfb1c06ed3a033efa6f32549122f07823427", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/3976bfb1c06ed3a033efa6f32549122f07823427", "committedDate": "2020-03-25T10:43:26Z", "message": "allow to rely on errorCode of the error to handle work item exceptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1267bf3bbcf16d74eb2cabf5d4aca07a7ae6c24", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/a1267bf3bbcf16d74eb2cabf5d4aca07a7ae6c24", "committedDate": "2020-03-25T10:43:26Z", "message": "externalize BpmnProcess compilation to separate class and allow to override to extend it, allow DMN namespace as script format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7de9b5c38d41d0eaa0e3c7323d484b7597974bb3", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/7de9b5c38d41d0eaa0e3c7323d484b7597974bb3", "committedDate": "2020-03-25T10:43:26Z", "message": "allow to use custom dialects for assignmnets instead of hardcoded XPath"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "144bd5fd3433bbd3f72b11f0b8a57bdf84bc1cc9", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/144bd5fd3433bbd3f72b11f0b8a57bdf84bc1cc9", "committedDate": "2020-03-25T10:43:26Z", "message": "added support for start timer event including code generation, added also life cycle methods (Activate/deactivate for process to allow control on availability of the process for execution"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b6c1e2a3010fb1d78f10bd10193c3e2b910e8068", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/b6c1e2a3010fb1d78f10bd10193c3e2b910e8068", "committedDate": "2020-03-25T07:41:20Z", "message": "added support for start timer event including code generation, added also life cycle methods (Activate/deactivate for process to allow control on availability of the process for execution"}, "afterCommit": {"oid": "144bd5fd3433bbd3f72b11f0b8a57bdf84bc1cc9", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/144bd5fd3433bbd3f72b11f0b8a57bdf84bc1cc9", "committedDate": "2020-03-25T10:43:26Z", "message": "added support for start timer event including code generation, added also life cycle methods (Activate/deactivate for process to allow control on availability of the process for execution"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjUzMDE2", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#pullrequestreview-381253016", "createdAt": "2020-03-25T15:19:14Z", "commit": {"oid": "144bd5fd3433bbd3f72b11f0b8a57bdf84bc1cc9"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNToxOToxNFrOF7gPIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNToyODoxNVrOF7grvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzODQ2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testServiceTaskWithAccessoWorkItemInfo() throws Exception {\n          \n          \n            \n                public void testServiceTaskWithAccessToWorkItemInfo() throws Exception {\n          \n      \n    \n    \n  \n\nis that what you mean?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#discussion_r397938465", "createdAt": "2020-03-25T15:19:14Z", "author": {"login": "cristianonicolai"}, "path": "jbpm/jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/ActivityTest.java", "diffHunk": "@@ -966,6 +1002,29 @@ public void testServiceTask() throws Exception {\n         assertProcessInstanceFinished(processInstance, ksession);\n         assertEquals(\"Hello john!\", processInstance.getVariable(\"s\"));\n     }\n+    \n+    @Test\n+    public void testServiceTaskWithAccessoWorkItemInfo() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "144bd5fd3433bbd3f72b11f0b8a57bdf84bc1cc9"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0MjAzNg==", "bodyText": "Do we need this var? doesnt seem to be used.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#discussion_r397942036", "createdAt": "2020-03-25T15:23:35Z", "author": {"login": "cristianonicolai"}, "path": "jbpm/jbpm-flow/src/main/java/org/kie/kogito/process/impl/AbstractProcess.java", "diffHunk": "@@ -41,6 +52,10 @@\n     protected final ProcessRuntimeServiceProvider services;\n \n     protected CompletionEventListener completionEventListener = new CompletionEventListener();\n+    \n+    protected boolean started;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "144bd5fd3433bbd3f72b11f0b8a57bdf84bc1cc9"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0NTc5MA==", "bodyText": "for these two tests, could be possible to verify that cancelJob was called x number of times?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#discussion_r397945790", "createdAt": "2020-03-25T15:28:15Z", "author": {"login": "cristianonicolai"}, "path": "kogito-codegen/src/test/java/org/kie/kogito/codegen/tests/TimerEventTest.java", "diffHunk": "@@ -208,4 +209,78 @@ public void testBoundaryDurationTimerEventOnSubprocess() throws Exception {\n      \n         assertThat(processInstance.status()).isEqualTo(ProcessInstance.STATE_COMPLETED);\n     }\n+    \n+    @Test\n+    public void testStartTimerEvent() throws Exception {\n+        \n+        Application app = generateCodeProcessesOnly(\"timer/StartTimerDuration.bpmn2\");        \n+        assertThat(app).isNotNull();\n+        \n+        NodeLeftCountDownProcessEventListener listener = new NodeLeftCountDownProcessEventListener(\"timer fired\", 1);\n+        ((DefaultProcessEventListenerConfig)app.config().process().processEventListeners()).register(listener);\n+                \n+        Process<? extends Model> p = app.processes().processById(\"defaultPackage.TimerProcess\");\n+        // activate to schedule timers\n+        p.activate();\n+        \n+        boolean completed = listener.waitTillCompleted(5000);\n+        assertThat(completed).isTrue();\n+        \n+        Collection<?> instances = p.instances().values();\n+        assertThat(instances).hasSize(1);\n+        \n+        ProcessInstance<?> processInstance = (ProcessInstance<?>) instances.iterator().next();\n+        assertThat(processInstance).isNotNull();\n+        \n+        assertThat(processInstance.status()).isEqualTo(ProcessInstance.STATE_ACTIVE);\n+        \n+        processInstance.abort();\n+        assertThat(processInstance.status()).isEqualTo(ProcessInstance.STATE_ABORTED);\n+        \n+        instances = p.instances().values();\n+        assertThat(instances).hasSize(0);\n+        \n+        p.deactivate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "144bd5fd3433bbd3f72b11f0b8a57bdf84bc1cc9"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87a254f7a8fd3d7a540af314e0b10f92be8657c7", "author": {"user": {"login": "mswiderski", "name": "Maciej Swiderski"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/87a254f7a8fd3d7a540af314e0b10f92be8657c7", "committedDate": "2020-03-26T08:14:04Z", "message": "applied sonar and review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTA2MDQ2", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#pullrequestreview-381906046", "createdAt": "2020-03-26T11:09:40Z", "commit": {"oid": "87a254f7a8fd3d7a540af314e0b10f92be8657c7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNzk4MzA3", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#pullrequestreview-382798307", "createdAt": "2020-03-27T12:05:25Z", "commit": {"oid": "87a254f7a8fd3d7a540af314e0b10f92be8657c7"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyODA5MTAy", "url": "https://github.com/kiegroup/kogito-runtimes/pull/389#pullrequestreview-382809102", "createdAt": "2020-03-27T12:22:45Z", "commit": {"oid": "87a254f7a8fd3d7a540af314e0b10f92be8657c7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3593, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}