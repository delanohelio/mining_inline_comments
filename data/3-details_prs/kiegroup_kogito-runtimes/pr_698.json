{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MzA5Nzc0", "number": 698, "title": "[KOGITO-2902] Checked exceptions in user code", "bodyText": "This implementation change WorkItemHandler to enable it to throw any excepction and handle them in workItemManager.\nAn altenartive implementation is the generated code to catch Exception and rethrow it as runtime (so the same handling than is performed in this implementation in WorkItemManager implementations). I prefer the current one becuase I feel that in the alternative one (although generated) we are spreading exception for every service method rather than having it in a common place.\nIn both cases, a pending optimitization (will work on it when other task allowed) is to identify the checked exception thrown by the service rather than use Exception\nIn current implementation generated code will throw only those exceptions thrown by the service\nIn alternative implementation the generated code will catch only those exceptions thrown by the service.\nPlease let me know your preferences and we will act accordingly", "createdAt": "2020-08-13T10:57:21Z", "url": "https://github.com/kiegroup/kogito-runtimes/pull/698", "merged": true, "mergeCommit": {"oid": "c3d66a4924b39ee4f5a75de37c342d1fa63ada1a"}, "closed": true, "closedAt": "2020-08-25T01:36:14Z", "author": {"login": "fjtirado"}, "timelineItems": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-fO0nABqjM2NTE4NDEzNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCCv23AFqTQ3MzQ4NDU1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9afcec49dca1b81290cad16db084e6fdfeb5dfea", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/9afcec49dca1b81290cad16db084e6fdfeb5dfea", "committedDate": "2020-08-13T10:52:26Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "b3e4a45dea2970ceb54440068df3573db028bd74", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/b3e4a45dea2970ceb54440068df3573db028bd74", "committedDate": "2020-08-13T12:32:25Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3e4a45dea2970ceb54440068df3573db028bd74", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/b3e4a45dea2970ceb54440068df3573db028bd74", "committedDate": "2020-08-13T12:32:25Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "07f914252a622af46a2b7d6c7a84d43c4d7b9927", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/07f914252a622af46a2b7d6c7a84d43c4d7b9927", "committedDate": "2020-08-17T17:27:30Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07f914252a622af46a2b7d6c7a84d43c4d7b9927", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/07f914252a622af46a2b7d6c7a84d43c4d7b9927", "committedDate": "2020-08-17T17:27:30Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "4359eab26a872efe9721cf6b694571ca41098646", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/4359eab26a872efe9721cf6b694571ca41098646", "committedDate": "2020-08-17T17:35:13Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4359eab26a872efe9721cf6b694571ca41098646", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/4359eab26a872efe9721cf6b694571ca41098646", "committedDate": "2020-08-17T17:35:13Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "6c7498f30286e66851fd990a0eb411efe4b931e9", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/6c7498f30286e66851fd990a0eb411efe4b931e9", "committedDate": "2020-08-17T17:35:52Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c7498f30286e66851fd990a0eb411efe4b931e9", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/6c7498f30286e66851fd990a0eb411efe4b931e9", "committedDate": "2020-08-17T17:35:52Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "0d03fbfdb96cb2288413b41c720bab85cdb383e5", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0d03fbfdb96cb2288413b41c720bab85cdb383e5", "committedDate": "2020-08-17T17:50:55Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d03fbfdb96cb2288413b41c720bab85cdb383e5", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0d03fbfdb96cb2288413b41c720bab85cdb383e5", "committedDate": "2020-08-17T17:50:55Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "55f5973964ce5aec97d355236bc6225ca5c64af0", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/55f5973964ce5aec97d355236bc6225ca5c64af0", "committedDate": "2020-08-17T17:52:41Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55f5973964ce5aec97d355236bc6225ca5c64af0", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/55f5973964ce5aec97d355236bc6225ca5c64af0", "committedDate": "2020-08-17T17:52:41Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "dd2ad8dce7cf56d422c4bf98edd5782039a155fa", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/dd2ad8dce7cf56d422c4bf98edd5782039a155fa", "committedDate": "2020-08-17T17:54:30Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dd2ad8dce7cf56d422c4bf98edd5782039a155fa", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/dd2ad8dce7cf56d422c4bf98edd5782039a155fa", "committedDate": "2020-08-17T17:54:30Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "ccc985e5d15f09d02546463e8c478b36138436c8", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/ccc985e5d15f09d02546463e8c478b36138436c8", "committedDate": "2020-08-18T12:45:09Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ccc985e5d15f09d02546463e8c478b36138436c8", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/ccc985e5d15f09d02546463e8c478b36138436c8", "committedDate": "2020-08-18T12:45:09Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "0b8d154615b6104661912f8a2010f52a6d1c96f0", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0b8d154615b6104661912f8a2010f52a6d1c96f0", "committedDate": "2020-08-18T15:43:09Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b8d154615b6104661912f8a2010f52a6d1c96f0", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0b8d154615b6104661912f8a2010f52a6d1c96f0", "committedDate": "2020-08-18T15:43:09Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "c7faf65280d2c64a45bb84ebfb3d8169df5a5f06", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/c7faf65280d2c64a45bb84ebfb3d8169df5a5f06", "committedDate": "2020-08-18T15:49:04Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c7faf65280d2c64a45bb84ebfb3d8169df5a5f06", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/c7faf65280d2c64a45bb84ebfb3d8169df5a5f06", "committedDate": "2020-08-18T15:49:04Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "1d4f8ae59e472fc642ecf1eeab77d7359b035c49", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/1d4f8ae59e472fc642ecf1eeab77d7359b035c49", "committedDate": "2020-08-18T15:50:04Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1d4f8ae59e472fc642ecf1eeab77d7359b035c49", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/1d4f8ae59e472fc642ecf1eeab77d7359b035c49", "committedDate": "2020-08-18T15:50:04Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "0d2306c911ec328035a32f77b734dd88594376ea", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0d2306c911ec328035a32f77b734dd88594376ea", "committedDate": "2020-08-18T15:51:46Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d2306c911ec328035a32f77b734dd88594376ea", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0d2306c911ec328035a32f77b734dd88594376ea", "committedDate": "2020-08-18T15:51:46Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "0e5bd311ed353a90a25b7a422c2e27408f13947a", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0e5bd311ed353a90a25b7a422c2e27408f13947a", "committedDate": "2020-08-19T08:01:03Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e5bd311ed353a90a25b7a422c2e27408f13947a", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/0e5bd311ed353a90a25b7a422c2e27408f13947a", "committedDate": "2020-08-19T08:01:03Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "4a1783c5fb1fc9bddc3112855faa9a8cc95d25f8", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/4a1783c5fb1fc9bddc3112855faa9a8cc95d25f8", "committedDate": "2020-08-19T08:03:54Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4a1783c5fb1fc9bddc3112855faa9a8cc95d25f8", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/4a1783c5fb1fc9bddc3112855faa9a8cc95d25f8", "committedDate": "2020-08-19T08:03:54Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "95b2872f1fe96329bb4927c910c5b5c735d0d828", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/95b2872f1fe96329bb4927c910c5b5c735d0d828", "committedDate": "2020-08-19T08:04:26Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95b2872f1fe96329bb4927c910c5b5c735d0d828", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/95b2872f1fe96329bb4927c910c5b5c735d0d828", "committedDate": "2020-08-19T08:04:26Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "ac368f4e6e37ac6f09a0fabc9b376ae40522672a", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/ac368f4e6e37ac6f09a0fabc9b376ae40522672a", "committedDate": "2020-08-19T08:55:30Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac368f4e6e37ac6f09a0fabc9b376ae40522672a", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/ac368f4e6e37ac6f09a0fabc9b376ae40522672a", "committedDate": "2020-08-19T08:55:30Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "9025b4c286a74337a497e483ce2ef32395927904", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/9025b4c286a74337a497e483ce2ef32395927904", "committedDate": "2020-08-19T09:11:12Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9025b4c286a74337a497e483ce2ef32395927904", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/9025b4c286a74337a497e483ce2ef32395927904", "committedDate": "2020-08-19T09:11:12Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "74561fd4d5e98f6a04171bf96b8b2ac8b7116498", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/74561fd4d5e98f6a04171bf96b8b2ac8b7116498", "committedDate": "2020-08-19T10:19:35Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "74561fd4d5e98f6a04171bf96b8b2ac8b7116498", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/74561fd4d5e98f6a04171bf96b8b2ac8b7116498", "committedDate": "2020-08-19T10:19:35Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "a3c9c6ac8d4d6a87011f8798f3bd078738481931", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/a3c9c6ac8d4d6a87011f8798f3bd078738481931", "committedDate": "2020-08-19T10:25:37Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a3c9c6ac8d4d6a87011f8798f3bd078738481931", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/a3c9c6ac8d4d6a87011f8798f3bd078738481931", "committedDate": "2020-08-19T10:25:37Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "a429a067d10521e47310b47bd65750305eda82be", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/a429a067d10521e47310b47bd65750305eda82be", "committedDate": "2020-08-19T10:30:48Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a429a067d10521e47310b47bd65750305eda82be", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/a429a067d10521e47310b47bd65750305eda82be", "committedDate": "2020-08-19T10:30:48Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "81ccd593b372bfd7ab7deb2c7023fbdb0f8cc9e6", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/81ccd593b372bfd7ab7deb2c7023fbdb0f8cc9e6", "committedDate": "2020-08-19T10:36:34Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "81ccd593b372bfd7ab7deb2c7023fbdb0f8cc9e6", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/81ccd593b372bfd7ab7deb2c7023fbdb0f8cc9e6", "committedDate": "2020-08-19T10:36:34Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "c2f39319229e07c0ba8967ea5590dba9384bb78d", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/c2f39319229e07c0ba8967ea5590dba9384bb78d", "committedDate": "2020-08-19T10:42:35Z", "message": "[KOGITO-2902] Checked exceptions in user code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c2f39319229e07c0ba8967ea5590dba9384bb78d", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/c2f39319229e07c0ba8967ea5590dba9384bb78d", "committedDate": "2020-08-19T10:42:35Z", "message": "[KOGITO-2902] Checked exceptions in user code"}, "afterCommit": {"oid": "7dabf91d96d2f7160b66b1a80599f8d7d3aa170b", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/7dabf91d96d2f7160b66b1a80599f8d7d3aa170b", "committedDate": "2020-08-19T12:18:09Z", "message": "ClassLoader getMethod altenative approach"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7dabf91d96d2f7160b66b1a80599f8d7d3aa170b", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/7dabf91d96d2f7160b66b1a80599f8d7d3aa170b", "committedDate": "2020-08-19T12:18:09Z", "message": "ClassLoader getMethod altenative approach"}, "afterCommit": {"oid": "9c2dcd62a5d29f9339d3e379265c28757bb31e63", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/9c2dcd62a5d29f9339d3e379265c28757bb31e63", "committedDate": "2020-08-19T13:37:26Z", "message": "[KOGITO-2902] Changing unit test\n\nAlthough working before this JIRA, for the purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c2dcd62a5d29f9339d3e379265c28757bb31e63", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/9c2dcd62a5d29f9339d3e379265c28757bb31e63", "committedDate": "2020-08-19T13:37:26Z", "message": "[KOGITO-2902] Changing unit test\n\nAlthough working before this JIRA, for the purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}, "afterCommit": {"oid": "c9e3b92502acc181bf666450c64749f96e10b133", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/c9e3b92502acc181bf666450c64749f96e10b133", "committedDate": "2020-08-19T14:49:50Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest wasalso  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9e3b92502acc181bf666450c64749f96e10b133", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/c9e3b92502acc181bf666450c64749f96e10b133", "committedDate": "2020-08-19T14:49:50Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest wasalso  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}, "afterCommit": {"oid": "b680cc58c8d8c75ec778fa2943764476cff05278", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/b680cc58c8d8c75ec778fa2943764476cff05278", "committedDate": "2020-08-20T09:28:34Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b680cc58c8d8c75ec778fa2943764476cff05278", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/b680cc58c8d8c75ec778fa2943764476cff05278", "committedDate": "2020-08-20T09:28:34Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}, "afterCommit": {"oid": "09a779a861fadad1fe4780c9efd53df7470c0988", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/09a779a861fadad1fe4780c9efd53df7470c0988", "committedDate": "2020-08-20T09:29:12Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09a779a861fadad1fe4780c9efd53df7470c0988", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/09a779a861fadad1fe4780c9efd53df7470c0988", "committedDate": "2020-08-20T09:29:12Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}, "afterCommit": {"oid": "2ddfebb809c37c36c611859e453ff17b1a1ee9fc", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/2ddfebb809c37c36c611859e453ff17b1a1ee9fc", "committedDate": "2020-08-20T09:29:39Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2ddfebb809c37c36c611859e453ff17b1a1ee9fc", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/2ddfebb809c37c36c611859e453ff17b1a1ee9fc", "committedDate": "2020-08-20T09:29:39Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}, "afterCommit": {"oid": "695a1b946a6825c7eb1d71ce629ef7520d13fc60", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/695a1b946a6825c7eb1d71ce629ef7520d13fc60", "committedDate": "2020-08-20T09:40:31Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "695a1b946a6825c7eb1d71ce629ef7520d13fc60", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/695a1b946a6825c7eb1d71ce629ef7520d13fc60", "committedDate": "2020-08-20T09:40:31Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}, "afterCommit": {"oid": "e5d9f7004f4bcfc7e28771ec7db7dafea493b070", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/e5d9f7004f4bcfc7e28771ec7db7dafea493b070", "committedDate": "2020-08-20T11:56:09Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5d9f7004f4bcfc7e28771ec7db7dafea493b070", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/e5d9f7004f4bcfc7e28771ec7db7dafea493b070", "committedDate": "2020-08-20T11:56:09Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}, "afterCommit": {"oid": "abb21a2d3ab6eb59edbb603360d48da8ea1c3a31", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/abb21a2d3ab6eb59edbb603360d48da8ea1c3a31", "committedDate": "2020-08-20T12:01:20Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMDgxNzEx", "url": "https://github.com/kiegroup/kogito-runtimes/pull/698#pullrequestreview-472081711", "createdAt": "2020-08-21T01:12:48Z", "commit": {"oid": "abb21a2d3ab6eb59edbb603360d48da8ea1c3a31"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMToxMjo0OFrOHEYPtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMToxMjo0OFrOHEYPtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM1MzU5MQ==", "bodyText": "maybe would be good to test some form o method overloading as well, making sure we get the correct one?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/698#discussion_r474353591", "createdAt": "2020-08-21T01:12:48Z", "author": {"login": "cristianonicolai"}, "path": "jbpm/jbpm-flow-builder/src/test/java/org/jbpm/compiler/canonical/ReflectionUtilsTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.jbpm.compiler.canonical;\n+\n+import java.lang.reflect.Method;\n+import java.util.Arrays;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class ReflectionUtilsTest {\n+\n+    private static class ServiceExample {\n+\n+        @SuppressWarnings(\"unused\")\n+        public int primitiveType(String s, int a) {\n+            return a;\n+        }\n+\n+        @SuppressWarnings(\"unused\")\n+        public Float wrapperType(String s, Float a) {\n+            return a;\n+        }\n+    }\n+\n+    @Test\n+    public void testGetMethod() throws ReflectiveOperationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb21a2d3ab6eb59edbb603360d48da8ea1c3a31"}, "originalPosition": 41}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abb21a2d3ab6eb59edbb603360d48da8ea1c3a31", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/abb21a2d3ab6eb59edbb603360d48da8ea1c3a31", "committedDate": "2020-08-20T12:01:20Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}, "afterCommit": {"oid": "f8012ea7de148a28aaecf5e23d72e860b7bedd74", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/f8012ea7de148a28aaecf5e23d72e860b7bedd74", "committedDate": "2020-08-21T09:36:41Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f8012ea7de148a28aaecf5e23d72e860b7bedd74", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/f8012ea7de148a28aaecf5e23d72e860b7bedd74", "committedDate": "2020-08-21T09:36:41Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}, "afterCommit": {"oid": "276fb720d7515c48b425ec0f325b6cf4cccda27b", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/276fb720d7515c48b425ec0f325b6cf4cccda27b", "committedDate": "2020-08-21T09:41:33Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "276fb720d7515c48b425ec0f325b6cf4cccda27b", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/276fb720d7515c48b425ec0f325b6cf4cccda27b", "committedDate": "2020-08-21T09:41:33Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}, "afterCommit": {"oid": "3dc71b26e7f813ee2de8967b57d6175bf61547a6", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/3dc71b26e7f813ee2de8967b57d6175bf61547a6", "committedDate": "2020-08-21T09:54:19Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNjQzMTgx", "url": "https://github.com/kiegroup/kogito-runtimes/pull/698#pullrequestreview-472643181", "createdAt": "2020-08-21T16:51:34Z", "commit": {"oid": "3dc71b26e7f813ee2de8967b57d6175bf61547a6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNjo1MTozNFrOHE0UpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNjo1MTozNFrOHE0UpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgxMzYwNQ==", "bodyText": "Are there any of the integration-tests processes calling the hello, with the exception? I mean to test this exception use case.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/698#discussion_r474813605", "createdAt": "2020-08-21T16:51:34Z", "author": {"login": "tiagodolphine"}, "path": "integration-tests/integration-tests-quarkus/src/main/java/org/kie/kogito/integrationtests/HelloService.java", "diffHunk": "@@ -28,21 +30,20 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(HelloService.class);\n \n-    public String hello(String name) {\n+    public String hello(String name) throws IOException {\n+        if (name.equals(\"exception\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dc71b26e7f813ee2de8967b57d6175bf61547a6"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3dc71b26e7f813ee2de8967b57d6175bf61547a6", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/3dc71b26e7f813ee2de8967b57d6175bf61547a6", "committedDate": "2020-08-21T09:54:19Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}, "afterCommit": {"oid": "942582e686fa231a2cc546e1750960a258376455", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/942582e686fa231a2cc546e1750960a258376455", "committedDate": "2020-08-24T08:43:30Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMzA2MzU5", "url": "https://github.com/kiegroup/kogito-runtimes/pull/698#pullrequestreview-473306359", "createdAt": "2020-08-24T09:53:33Z", "commit": {"oid": "942582e686fa231a2cc546e1750960a258376455"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwOTo1MzozNFrOHFdHXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMDoyMjo0MVrOHFeD3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ4MTk0OQ==", "bodyText": "I would throw ex2 if the last caught exception was ex2. In case the exception messages are different, it can cause confusions.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/698#discussion_r475481949", "createdAt": "2020-08-24T09:53:34Z", "author": {"login": "MarianMacik"}, "path": "jbpm/jbpm-flow-builder/src/main/java/org/jbpm/compiler/canonical/ReflectionUtils.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.jbpm.compiler.canonical;\n+\n+import java.lang.reflect.Method;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+public class ReflectionUtils {\n+\n+    private ReflectionUtils() {}\n+\n+    private static Map<Class<?>, Class<?>> wrappers2Primitive = new ConcurrentHashMap<>();\n+\n+    static {\n+        wrappers2Primitive.put(Boolean.class, boolean.class);\n+        wrappers2Primitive.put(Byte.class, byte.class);\n+        wrappers2Primitive.put(Character.class, char.class);\n+        wrappers2Primitive.put(Double.class, double.class);\n+        wrappers2Primitive.put(Float.class, float.class);\n+        wrappers2Primitive.put(Integer.class, int.class);\n+        wrappers2Primitive.put(Long.class, long.class);\n+        wrappers2Primitive.put(Short.class, short.class);\n+    }\n+\n+    public static boolean isWrapper(Class<?> clazz) {\n+        return wrappers2Primitive.containsKey(clazz);\n+    }\n+\n+    public static Class<?> getPrimitive(Class<?> clazz) {\n+        return wrappers2Primitive.get(clazz);\n+    }\n+    \n+    public static Method\n+        getMethod(ClassLoader cl,\n+                  Class<?> clazz,\n+                  String methodName,\n+                  Collection<String> parameterTypes) throws ReflectiveOperationException {\n+        \n+        boolean hasPrimitive = false;\n+        Class<?>[] methodParameters = new Class<?> [parameterTypes.size()];\n+        Class<?>[] primitiveParameters = new Class<?> [parameterTypes.size()];\n+        \n+        Iterator<String> iter = parameterTypes.iterator(); \n+        int i = 0;\n+        while (iter.hasNext()) {\n+            String parameter = iter.next();\n+            if (!parameter.contains(\".\")) {\n+                parameter = \"java.lang.\" + parameter;\n+            }\n+            Class<?> parameterClass = cl.loadClass(parameter);\n+            methodParameters[i] = parameterClass;\n+            Class<?> primitive = wrappers2Primitive.get(parameterClass);\n+            if (primitive != null) {\n+                primitiveParameters[i] = primitive;\n+                hasPrimitive = true;\n+            } else {\n+                primitiveParameters[i] = parameterClass;\n+            }\n+            i++;\n+        }\n+        try {\n+            return clazz.getMethod(methodName, methodParameters);\n+        }\n+        catch (NoSuchMethodException ex) {\n+            if (hasPrimitive) {\n+               try {\n+                   return clazz.getMethod(methodName,primitiveParameters);\n+               }\n+               catch (NoSuchMethodException ex2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "942582e686fa231a2cc546e1750960a258376455"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ4Mjk2MA==", "bodyText": "Please use the full name in constants, i.e. EXCEPTION_NAME.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/698#discussion_r475482960", "createdAt": "2020-08-24T09:55:11Z", "author": {"login": "MarianMacik"}, "path": "jbpm/jbpm-flow-builder/src/main/java/org/jbpm/compiler/canonical/ServiceTaskDescriptor.java", "diffHunk": "@@ -19,47 +19,61 @@\n import java.lang.reflect.Method;\n import java.text.MessageFormat;\n import java.util.Arrays;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.stream.Collectors;\n \n import com.github.javaparser.StaticJavaParser;\n import com.github.javaparser.ast.CompilationUnit;\n import com.github.javaparser.ast.Modifier;\n+import com.github.javaparser.ast.NodeList;\n import com.github.javaparser.ast.body.ClassOrInterfaceDeclaration;\n import com.github.javaparser.ast.body.FieldDeclaration;\n import com.github.javaparser.ast.body.MethodDeclaration;\n+import com.github.javaparser.ast.body.Parameter;\n import com.github.javaparser.ast.body.VariableDeclarator;\n+import com.github.javaparser.ast.expr.AssignExpr;\n import com.github.javaparser.ast.expr.CastExpr;\n import com.github.javaparser.ast.expr.Expression;\n import com.github.javaparser.ast.expr.MethodCallExpr;\n import com.github.javaparser.ast.expr.NameExpr;\n import com.github.javaparser.ast.expr.NullLiteralExpr;\n+import com.github.javaparser.ast.expr.ObjectCreationExpr;\n+import com.github.javaparser.ast.expr.SimpleName;\n import com.github.javaparser.ast.expr.StringLiteralExpr;\n import com.github.javaparser.ast.expr.VariableDeclarationExpr;\n import com.github.javaparser.ast.stmt.BlockStmt;\n+import com.github.javaparser.ast.stmt.CatchClause;\n+import com.github.javaparser.ast.stmt.ExpressionStmt;\n import com.github.javaparser.ast.stmt.ReturnStmt;\n+import com.github.javaparser.ast.stmt.Statement;\n+import com.github.javaparser.ast.stmt.ThrowStmt;\n+import com.github.javaparser.ast.stmt.TryStmt;\n import com.github.javaparser.ast.type.ClassOrInterfaceType;\n+import com.github.javaparser.ast.type.Type;\n+import com.github.javaparser.ast.type.UnionType;\n import org.jbpm.process.core.ParameterDefinition;\n import org.jbpm.workflow.core.node.DataAssociation;\n import org.jbpm.workflow.core.node.WorkItemNode;\n import org.kie.api.runtime.process.WorkItem;\n import org.kie.api.runtime.process.WorkItemHandler;\n import org.kie.api.runtime.process.WorkItemManager;\n-\n-import static java.util.stream.Collectors.joining;\n+import org.kie.kogito.process.workitem.WorkItemExecutionError;\n \n public class ServiceTaskDescriptor {\n \n+    private static final String RESULT_NAME = \"result\";\n+    private static final String EXC_NAME = \"ex\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "942582e686fa231a2cc546e1750960a258376455"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ5NzQzNg==", "bodyText": "So this functionality is here to support either:\nmethod(String a, Float b, Integer c)\nor\nmethod(String a, float a, int b)\nso nothing in between.\nI think that the current BPMN modeller knows only wrapper types, so if somebody calls a method with arguments String, Float and Integer and a service will have only String, float and Integer parameters, it will fail to find the method.\nI don't mean we should support all combinations, just asking if I understand it correctly.", "url": "https://github.com/kiegroup/kogito-runtimes/pull/698#discussion_r475497436", "createdAt": "2020-08-24T10:22:41Z", "author": {"login": "MarianMacik"}, "path": "jbpm/jbpm-flow-builder/src/main/java/org/jbpm/compiler/canonical/ReflectionUtils.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.jbpm.compiler.canonical;\n+\n+import java.lang.reflect.Method;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+public class ReflectionUtils {\n+\n+    private ReflectionUtils() {}\n+\n+    private static Map<Class<?>, Class<?>> wrappers2Primitive = new ConcurrentHashMap<>();\n+\n+    static {\n+        wrappers2Primitive.put(Boolean.class, boolean.class);\n+        wrappers2Primitive.put(Byte.class, byte.class);\n+        wrappers2Primitive.put(Character.class, char.class);\n+        wrappers2Primitive.put(Double.class, double.class);\n+        wrappers2Primitive.put(Float.class, float.class);\n+        wrappers2Primitive.put(Integer.class, int.class);\n+        wrappers2Primitive.put(Long.class, long.class);\n+        wrappers2Primitive.put(Short.class, short.class);\n+    }\n+\n+    public static boolean isWrapper(Class<?> clazz) {\n+        return wrappers2Primitive.containsKey(clazz);\n+    }\n+\n+    public static Class<?> getPrimitive(Class<?> clazz) {\n+        return wrappers2Primitive.get(clazz);\n+    }\n+    \n+    public static Method\n+        getMethod(ClassLoader cl,\n+                  Class<?> clazz,\n+                  String methodName,\n+                  Collection<String> parameterTypes) throws ReflectiveOperationException {\n+        \n+        boolean hasPrimitive = false;\n+        Class<?>[] methodParameters = new Class<?> [parameterTypes.size()];\n+        Class<?>[] primitiveParameters = new Class<?> [parameterTypes.size()];\n+        \n+        Iterator<String> iter = parameterTypes.iterator(); \n+        int i = 0;\n+        while (iter.hasNext()) {\n+            String parameter = iter.next();\n+            if (!parameter.contains(\".\")) {\n+                parameter = \"java.lang.\" + parameter;\n+            }\n+            Class<?> parameterClass = cl.loadClass(parameter);\n+            methodParameters[i] = parameterClass;\n+            Class<?> primitive = wrappers2Primitive.get(parameterClass);\n+            if (primitive != null) {\n+                primitiveParameters[i] = primitive;\n+                hasPrimitive = true;\n+            } else {\n+                primitiveParameters[i] = parameterClass;\n+            }\n+            i++;\n+        }\n+        try {\n+            return clazz.getMethod(methodName, methodParameters);\n+        }\n+        catch (NoSuchMethodException ex) {\n+            if (hasPrimitive) {\n+               try {\n+                   return clazz.getMethod(methodName,primitiveParameters);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "942582e686fa231a2cc546e1750960a258376455"}, "originalPosition": 83}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "942582e686fa231a2cc546e1750960a258376455", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/942582e686fa231a2cc546e1750960a258376455", "committedDate": "2020-08-24T08:43:30Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}, "afterCommit": {"oid": "1b7a1a02a42d2b7db3ffbae24d9866d74764cd18", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/1b7a1a02a42d2b7db3ffbae24d9866d74764cd18", "committedDate": "2020-08-24T11:11:18Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b7a1a02a42d2b7db3ffbae24d9866d74764cd18", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/1b7a1a02a42d2b7db3ffbae24d9866d74764cd18", "committedDate": "2020-08-24T11:11:18Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}, "afterCommit": {"oid": "2b7177ba259220f2864bfe2c0e24a775dcaafc30", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/2b7177ba259220f2864bfe2c0e24a775dcaafc30", "committedDate": "2020-08-24T11:21:11Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bb3ab3c33120f65e8e48c2a57b7b6cd5780afc9", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/6bb3ab3c33120f65e8e48c2a57b7b6cd5780afc9", "committedDate": "2020-08-24T12:17:04Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b7177ba259220f2864bfe2c0e24a775dcaafc30", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/2b7177ba259220f2864bfe2c0e24a775dcaafc30", "committedDate": "2020-08-24T11:21:11Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}, "afterCommit": {"oid": "6bb3ab3c33120f65e8e48c2a57b7b6cd5780afc9", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-runtimes/commit/6bb3ab3c33120f65e8e48c2a57b7b6cd5780afc9", "committedDate": "2020-08-24T12:17:04Z", "message": "[KOGITO-2902] Checked exceptions in user code\n\nModifying service task descriptor to resolve the list of exceptions\nthrown by a service method, catch them and rethrow as a\nWorkItemHandlerError one\n\nHotReloadTest was also  modified. Although working before this JIRA, for\nthe purposes of this test I think\njava files should not be added as txt (standard classloader is not\nfinding these classes, which is limiting), they should be added as\nclasses and modified using modifySource file as indicated in this link"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNDQ2Nzk0", "url": "https://github.com/kiegroup/kogito-runtimes/pull/698#pullrequestreview-473446794", "createdAt": "2020-08-24T13:08:10Z", "commit": {"oid": "6bb3ab3c33120f65e8e48c2a57b7b6cd5780afc9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNDg0NTUw", "url": "https://github.com/kiegroup/kogito-runtimes/pull/698#pullrequestreview-473484550", "createdAt": "2020-08-24T13:37:10Z", "commit": {"oid": "6bb3ab3c33120f65e8e48c2a57b7b6cd5780afc9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4112, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}