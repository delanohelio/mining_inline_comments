{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzOTY0NDk1", "number": 864, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzowMzozMVrOE0XmOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzowMzozMVrOE0XmOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzQ4MDI1OnYy", "diffSide": "RIGHT", "path": "addons/tracing/tracing-decision-quarkus-addon/src/main/java/org/kie/kogito/tracing/decision/QuarkusStartupModelPublisher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzowMzozMVrOHsDeFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzowOToyNFrOHsDrHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk1NjI0Ng==", "bodyText": "Can you add a comment to refer Quarkus issue?", "url": "https://github.com/kiegroup/kogito-runtimes/pull/864#discussion_r515956246", "createdAt": "2020-11-02T13:03:31Z", "author": {"login": "danielezonca"}, "path": "addons/tracing/tracing-decision-quarkus-addon/src/main/java/org/kie/kogito/tracing/decision/QuarkusStartupModelPublisher.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.tracing.decision;\n+\n+import javax.enterprise.event.Observes;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+import io.quarkus.runtime.Startup;\n+import io.quarkus.runtime.StartupEvent;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Singleton\n+@Startup\n+public class QuarkusStartupModelPublisher {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(QuarkusStartupModelPublisher.class);\n+\n+    @Inject\n+    QuarkusModelEventEmitter modelEventEmitter;\n+\n+    public void publish(@Observes StartupEvent event) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57d58dced5668270c1afd340039cd4743b0b5037"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk1OTU4MQ==", "bodyText": "Sure \ud83d\udc4d", "url": "https://github.com/kiegroup/kogito-runtimes/pull/864#discussion_r515959581", "createdAt": "2020-11-02T13:09:24Z", "author": {"login": "r00ta"}, "path": "addons/tracing/tracing-decision-quarkus-addon/src/main/java/org/kie/kogito/tracing/decision/QuarkusStartupModelPublisher.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.tracing.decision;\n+\n+import javax.enterprise.event.Observes;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+import io.quarkus.runtime.Startup;\n+import io.quarkus.runtime.StartupEvent;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Singleton\n+@Startup\n+public class QuarkusStartupModelPublisher {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(QuarkusStartupModelPublisher.class);\n+\n+    @Inject\n+    QuarkusModelEventEmitter modelEventEmitter;\n+\n+    public void publish(@Observes StartupEvent event) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk1NjI0Ng=="}, "originalCommit": {"oid": "57d58dced5668270c1afd340039cd4743b0b5037"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4672, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}