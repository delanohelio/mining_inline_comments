{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1Mjg2OTI1", "number": 560, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoxNTo1MVrOD-8hTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoyNToxNFrOD-8slw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzI5ODY5OnYy", "diffSide": "RIGHT", "path": "mongodb-panache-quickstart/src/main/java/org/acme/mongodb/panache/PersonResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoxNTo1MVrOGZWq8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoxNTo1MVrOGZWq8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzOTAyNQ==", "bodyText": "Not needed, annotated the class with @Path is enought", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429239025", "createdAt": "2020-05-22T13:15:51Z", "author": {"login": "loicmathieu"}, "path": "mongodb-panache-quickstart/src/main/java/org/acme/mongodb/panache/PersonResource.java", "diffHunk": "@@ -11,20 +12,23 @@\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.Response;\n+import java.util.List;\n \n @Path(\"/persons\")\n+@ApplicationScoped", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzMwNTc0OnYy", "diffSide": "RIGHT", "path": "mongodb-panache-quickstart/src/test/java/org/acme/mongodb/panache/PersonResourceTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoxODowNlrOGZWvNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxMTo1Mjo0OVrOGZo_3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MDExNg==", "bodyText": "ID will be automatically populated by MongoDB so you can skip them", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429240116", "createdAt": "2020-05-22T13:18:06Z", "author": {"login": "loicmathieu"}, "path": "mongodb-panache-quickstart/src/test/java/org/acme/mongodb/panache/PersonResourceTest.java", "diffHunk": "@@ -0,0 +1,187 @@\n+package org.acme.mongodb.panache;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.datatype.jdk8.Jdk8Module;\n+import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;\n+import com.github.dockerjava.api.model.ExposedPort;\n+import com.github.dockerjava.api.model.PortBinding;\n+import com.github.dockerjava.api.model.Ports;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import io.restassured.config.ObjectMapperConfig;\n+import io.restassured.http.ContentType;\n+import io.restassured.parsing.Parser;\n+import org.assertj.core.api.Assertions;\n+import org.bson.types.ObjectId;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n+\n+import java.time.LocalDate;\n+\n+import static io.restassured.config.LogConfig.logConfig;\n+import static org.acme.mongodb.panache.MongoDbContainer.MONGODB_HOST;\n+import static org.acme.mongodb.panache.MongoDbContainer.MONGODB_PORT;\n+\n+@Testcontainers\n+@QuarkusTest\n+class PersonResourceTest {\n+\n+    @Container\n+    static GenericContainer MONGO_DB_CONTAINER = new MongoDbContainer()\n+            .withCreateContainerCmdModifier(cmd -> {\n+                cmd.withHostName(MONGODB_HOST)\n+                        .withPortBindings(new PortBinding(Ports.Binding.bindPort(MONGODB_PORT), new ExposedPort(MONGODB_PORT)));\n+            });\n+\n+    @BeforeAll\n+    static void initAll() {\n+        RestAssured.defaultParser = Parser.JSON;\n+        RestAssured.config\n+                .logConfig((logConfig().enableLoggingOfRequestAndResponseIfValidationFails()))\n+                .objectMapperConfig(new ObjectMapperConfig().jackson2ObjectMapperFactory((type, s) -> new ObjectMapper()\n+                        .registerModule(new Jdk8Module())\n+                        .registerModule(new JavaTimeModule())\n+                        .disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)));\n+    }\n+\n+    @Test\n+    void test() {\n+        PersonDTO person1 = PersonDTO.Builder\n+                .aPersonDTO()\n+                .withId(\"5889273c093d1c3e614bf2f9\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0NDA4OA==", "bodyText": "The rest service should return them inside the location header so you can retrieve them from restassured response.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429244088", "createdAt": "2020-05-22T13:25:59Z", "author": {"login": "loicmathieu"}, "path": "mongodb-panache-quickstart/src/test/java/org/acme/mongodb/panache/PersonResourceTest.java", "diffHunk": "@@ -0,0 +1,187 @@\n+package org.acme.mongodb.panache;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.datatype.jdk8.Jdk8Module;\n+import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;\n+import com.github.dockerjava.api.model.ExposedPort;\n+import com.github.dockerjava.api.model.PortBinding;\n+import com.github.dockerjava.api.model.Ports;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import io.restassured.config.ObjectMapperConfig;\n+import io.restassured.http.ContentType;\n+import io.restassured.parsing.Parser;\n+import org.assertj.core.api.Assertions;\n+import org.bson.types.ObjectId;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n+\n+import java.time.LocalDate;\n+\n+import static io.restassured.config.LogConfig.logConfig;\n+import static org.acme.mongodb.panache.MongoDbContainer.MONGODB_HOST;\n+import static org.acme.mongodb.panache.MongoDbContainer.MONGODB_PORT;\n+\n+@Testcontainers\n+@QuarkusTest\n+class PersonResourceTest {\n+\n+    @Container\n+    static GenericContainer MONGO_DB_CONTAINER = new MongoDbContainer()\n+            .withCreateContainerCmdModifier(cmd -> {\n+                cmd.withHostName(MONGODB_HOST)\n+                        .withPortBindings(new PortBinding(Ports.Binding.bindPort(MONGODB_PORT), new ExposedPort(MONGODB_PORT)));\n+            });\n+\n+    @BeforeAll\n+    static void initAll() {\n+        RestAssured.defaultParser = Parser.JSON;\n+        RestAssured.config\n+                .logConfig((logConfig().enableLoggingOfRequestAndResponseIfValidationFails()))\n+                .objectMapperConfig(new ObjectMapperConfig().jackson2ObjectMapperFactory((type, s) -> new ObjectMapper()\n+                        .registerModule(new Jdk8Module())\n+                        .registerModule(new JavaTimeModule())\n+                        .disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)));\n+    }\n+\n+    @Test\n+    void test() {\n+        PersonDTO person1 = PersonDTO.Builder\n+                .aPersonDTO()\n+                .withId(\"5889273c093d1c3e614bf2f9\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MDExNg=="}, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUzOTI5Mw==", "bodyText": "I my tests, there is nothing returned in headers by keeping the actual behaviour.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429539293", "createdAt": "2020-05-23T11:52:49Z", "author": {"login": "aoudiamoncef"}, "path": "mongodb-panache-quickstart/src/test/java/org/acme/mongodb/panache/PersonResourceTest.java", "diffHunk": "@@ -0,0 +1,187 @@\n+package org.acme.mongodb.panache;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.datatype.jdk8.Jdk8Module;\n+import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;\n+import com.github.dockerjava.api.model.ExposedPort;\n+import com.github.dockerjava.api.model.PortBinding;\n+import com.github.dockerjava.api.model.Ports;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import io.restassured.config.ObjectMapperConfig;\n+import io.restassured.http.ContentType;\n+import io.restassured.parsing.Parser;\n+import org.assertj.core.api.Assertions;\n+import org.bson.types.ObjectId;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n+\n+import java.time.LocalDate;\n+\n+import static io.restassured.config.LogConfig.logConfig;\n+import static org.acme.mongodb.panache.MongoDbContainer.MONGODB_HOST;\n+import static org.acme.mongodb.panache.MongoDbContainer.MONGODB_PORT;\n+\n+@Testcontainers\n+@QuarkusTest\n+class PersonResourceTest {\n+\n+    @Container\n+    static GenericContainer MONGO_DB_CONTAINER = new MongoDbContainer()\n+            .withCreateContainerCmdModifier(cmd -> {\n+                cmd.withHostName(MONGODB_HOST)\n+                        .withPortBindings(new PortBinding(Ports.Binding.bindPort(MONGODB_PORT), new ExposedPort(MONGODB_PORT)));\n+            });\n+\n+    @BeforeAll\n+    static void initAll() {\n+        RestAssured.defaultParser = Parser.JSON;\n+        RestAssured.config\n+                .logConfig((logConfig().enableLoggingOfRequestAndResponseIfValidationFails()))\n+                .objectMapperConfig(new ObjectMapperConfig().jackson2ObjectMapperFactory((type, s) -> new ObjectMapper()\n+                        .registerModule(new Jdk8Module())\n+                        .registerModule(new JavaTimeModule())\n+                        .disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)));\n+    }\n+\n+    @Test\n+    void test() {\n+        PersonDTO person1 = PersonDTO.Builder\n+                .aPersonDTO()\n+                .withId(\"5889273c093d1c3e614bf2f9\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MDExNg=="}, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzMxMDUzOnYy", "diffSide": "RIGHT", "path": "mongodb-panache-quickstart/src/test/java/org/acme/mongodb/panache/NativePersonResourceIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoxOTo0MlrOGZWyYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNjo0NTo0NFrOGZdeOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MDkyOQ==", "bodyText": "Duplicated with PersonResourceIT", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429240929", "createdAt": "2020-05-22T13:19:42Z", "author": {"login": "loicmathieu"}, "path": "mongodb-panache-quickstart/src/test/java/org/acme/mongodb/panache/NativePersonResourceIT.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package org.acme.mongodb.panache;\n+\n+import io.quarkus.test.junit.NativeImageTest;\n+\n+@NativeImageTest\n+public class NativePersonResourceIT extends PersonResourceTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM1MDQ1Ng==", "bodyText": "I should remove which file ?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429350456", "createdAt": "2020-05-22T16:45:44Z", "author": {"login": "aoudiamoncef"}, "path": "mongodb-panache-quickstart/src/test/java/org/acme/mongodb/panache/NativePersonResourceIT.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package org.acme.mongodb.panache;\n+\n+import io.quarkus.test.junit.NativeImageTest;\n+\n+@NativeImageTest\n+public class NativePersonResourceIT extends PersonResourceTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MDkyOQ=="}, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzMxMjUwOnYy", "diffSide": "RIGHT", "path": "mongodb-panache-quickstart/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoyMDoxNlrOGZWzlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzo1OTowMVrOGZYILA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MTIzOA==", "bodyText": "Please avoid DEBUG level", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429241238", "createdAt": "2020-05-22T13:20:16Z", "author": {"login": "loicmathieu"}, "path": "mongodb-panache-quickstart/src/main/resources/application.properties", "diffHunk": "@@ -1,4 +1,6 @@\n # configure the MongoDB client for a single node cluster on localhost\n quarkus.mongodb.connection-string = mongodb://localhost:27017\n # mandatory if you don't specify the name of the database using @MongoEntity\n-quarkus.mongodb.database = person\n\\ No newline at end of file\n+quarkus.mongodb.database = persons\n+\n+quarkus.log.category.\"io.quarkus.mongodb.panache.runtime\".level=DEBUG", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI1OTUxMw==", "bodyText": "I could remove it ? the default value is INFO no ?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429259513", "createdAt": "2020-05-22T13:53:24Z", "author": {"login": "aoudiamoncef"}, "path": "mongodb-panache-quickstart/src/main/resources/application.properties", "diffHunk": "@@ -1,4 +1,6 @@\n # configure the MongoDB client for a single node cluster on localhost\n quarkus.mongodb.connection-string = mongodb://localhost:27017\n # mandatory if you don't specify the name of the database using @MongoEntity\n-quarkus.mongodb.database = person\n\\ No newline at end of file\n+quarkus.mongodb.database = persons\n+\n+quarkus.log.category.\"io.quarkus.mongodb.panache.runtime\".level=DEBUG", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MTIzOA=="}, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI2Mjg5Mg==", "bodyText": "Yes, please remove it", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429262892", "createdAt": "2020-05-22T13:59:01Z", "author": {"login": "loicmathieu"}, "path": "mongodb-panache-quickstart/src/main/resources/application.properties", "diffHunk": "@@ -1,4 +1,6 @@\n # configure the MongoDB client for a single node cluster on localhost\n quarkus.mongodb.connection-string = mongodb://localhost:27017\n # mandatory if you don't specify the name of the database using @MongoEntity\n-quarkus.mongodb.database = person\n\\ No newline at end of file\n+quarkus.mongodb.database = persons\n+\n+quarkus.log.category.\"io.quarkus.mongodb.panache.runtime\".level=DEBUG", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MTIzOA=="}, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzMxOTUzOnYy", "diffSide": "RIGHT", "path": "mongodb-panache-quickstart/src/main/java/org/acme/mongodb/panache/Person.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoyMjozM1rOGZW4JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNjo0Mjo0NFrOGZdWTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MjQwNA==", "bodyText": "I' not sure about these import changes.\nAre you using Quarkus code formatter ?\nDid you run mvn process-sources ?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429242404", "createdAt": "2020-05-22T13:22:33Z", "author": {"login": "loicmathieu"}, "path": "mongodb-panache-quickstart/src/main/java/org/acme/mongodb/panache/Person.java", "diffHunk": "@@ -1,31 +1,28 @@\n package org.acme.mongodb.panache;\n \n-import java.time.LocalDate;\n-import java.util.List;\n-\n-import org.bson.codecs.pojo.annotations.BsonProperty;\n-\n import io.quarkus.mongodb.panache.MongoEntity;\n import io.quarkus.mongodb.panache.PanacheMongoEntity;\n+import org.bson.codecs.pojo.annotations.BsonProperty;\n+\n+import java.time.LocalDate;\n+import java.util.List;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM0ODQzMA==", "bodyText": "I think that it's not available on quarkus-quickstarts. But i resolved this issue", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429348430", "createdAt": "2020-05-22T16:42:44Z", "author": {"login": "aoudiamoncef"}, "path": "mongodb-panache-quickstart/src/main/java/org/acme/mongodb/panache/Person.java", "diffHunk": "@@ -1,31 +1,28 @@\n package org.acme.mongodb.panache;\n \n-import java.time.LocalDate;\n-import java.util.List;\n-\n-import org.bson.codecs.pojo.annotations.BsonProperty;\n-\n import io.quarkus.mongodb.panache.MongoEntity;\n import io.quarkus.mongodb.panache.PanacheMongoEntity;\n+import org.bson.codecs.pojo.annotations.BsonProperty;\n+\n+import java.time.LocalDate;\n+import java.util.List;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MjQwNA=="}, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzMyMTYyOnYy", "diffSide": "RIGHT", "path": "mongodb-panache-quickstart/src/main/java/org/acme/mongodb/panache/Person.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoyMzoxNVrOGZW5gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDowNjo1NVrOGZYapg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0Mjc1Mg==", "bodyText": "Why are you changing this ?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429242752", "createdAt": "2020-05-22T13:23:15Z", "author": {"login": "loicmathieu"}, "path": "mongodb-panache-quickstart/src/main/java/org/acme/mongodb/panache/Person.java", "diffHunk": "@@ -1,31 +1,28 @@\n package org.acme.mongodb.panache;\n \n-import java.time.LocalDate;\n-import java.util.List;\n-\n-import org.bson.codecs.pojo.annotations.BsonProperty;\n-\n import io.quarkus.mongodb.panache.MongoEntity;\n import io.quarkus.mongodb.panache.PanacheMongoEntity;\n+import org.bson.codecs.pojo.annotations.BsonProperty;\n+\n+import java.time.LocalDate;\n+import java.util.List;\n \n @MongoEntity(collection = \"ThePerson\")\n public class Person extends PanacheMongoEntity {\n     public String name;\n-\n     // will be persisted as a 'birth' field in MongoDB\n     @BsonProperty(\"birth\")\n     public LocalDate birthDate;\n-\n     public Status status;\n \n-    // return name as uppercase in the model\n+    // return name as lowercase in the model\n     public String getName() {\n-        return name.toUpperCase();\n+        return name.toLowerCase();\n     }\n \n-    // store all names in lowercase in the DB\n+    // store all names in uppercase in the DB\n     public void setName(String name) {\n-        this.name = name.toLowerCase();\n+        this.name = name.toUpperCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI2MzMyNw==", "bodyText": "Just to avoid to pass the name in capital letters in the URL.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429263327", "createdAt": "2020-05-22T13:59:45Z", "author": {"login": "aoudiamoncef"}, "path": "mongodb-panache-quickstart/src/main/java/org/acme/mongodb/panache/Person.java", "diffHunk": "@@ -1,31 +1,28 @@\n package org.acme.mongodb.panache;\n \n-import java.time.LocalDate;\n-import java.util.List;\n-\n-import org.bson.codecs.pojo.annotations.BsonProperty;\n-\n import io.quarkus.mongodb.panache.MongoEntity;\n import io.quarkus.mongodb.panache.PanacheMongoEntity;\n+import org.bson.codecs.pojo.annotations.BsonProperty;\n+\n+import java.time.LocalDate;\n+import java.util.List;\n \n @MongoEntity(collection = \"ThePerson\")\n public class Person extends PanacheMongoEntity {\n     public String name;\n-\n     // will be persisted as a 'birth' field in MongoDB\n     @BsonProperty(\"birth\")\n     public LocalDate birthDate;\n-\n     public Status status;\n \n-    // return name as uppercase in the model\n+    // return name as lowercase in the model\n     public String getName() {\n-        return name.toUpperCase();\n+        return name.toLowerCase();\n     }\n \n-    // store all names in lowercase in the DB\n+    // store all names in uppercase in the DB\n     public void setName(String name) {\n-        this.name = name.toLowerCase();\n+        this.name = name.toUpperCase();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0Mjc1Mg=="}, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI2NzYyMg==", "bodyText": "OK, then", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429267622", "createdAt": "2020-05-22T14:06:55Z", "author": {"login": "loicmathieu"}, "path": "mongodb-panache-quickstart/src/main/java/org/acme/mongodb/panache/Person.java", "diffHunk": "@@ -1,31 +1,28 @@\n package org.acme.mongodb.panache;\n \n-import java.time.LocalDate;\n-import java.util.List;\n-\n-import org.bson.codecs.pojo.annotations.BsonProperty;\n-\n import io.quarkus.mongodb.panache.MongoEntity;\n import io.quarkus.mongodb.panache.PanacheMongoEntity;\n+import org.bson.codecs.pojo.annotations.BsonProperty;\n+\n+import java.time.LocalDate;\n+import java.util.List;\n \n @MongoEntity(collection = \"ThePerson\")\n public class Person extends PanacheMongoEntity {\n     public String name;\n-\n     // will be persisted as a 'birth' field in MongoDB\n     @BsonProperty(\"birth\")\n     public LocalDate birthDate;\n-\n     public Status status;\n \n-    // return name as uppercase in the model\n+    // return name as lowercase in the model\n     public String getName() {\n-        return name.toUpperCase();\n+        return name.toLowerCase();\n     }\n \n-    // store all names in lowercase in the DB\n+    // store all names in uppercase in the DB\n     public void setName(String name) {\n-        this.name = name.toLowerCase();\n+        this.name = name.toUpperCase();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0Mjc1Mg=="}, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzMyNDE5OnYy", "diffSide": "RIGHT", "path": "mongodb-panache-quickstart/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoyNDoxNFrOGZW7Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoyNDoxNFrOGZW7Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MzE4Mg==", "bodyText": "Please avoid miningless changes (you just change the order of properties).", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429243182", "createdAt": "2020-05-22T13:24:14Z", "author": {"login": "loicmathieu"}, "path": "mongodb-panache-quickstart/pom.xml", "diffHunk": "@@ -6,15 +6,15 @@\n   <artifactId>mongodb-panache-quickstart</artifactId>\n   <version>1.0-SNAPSHOT</version>\n   <properties>\n-    <surefire-plugin.version>2.22.0</surefire-plugin.version>\n-    <maven.compiler.target>1.8</maven.compiler.target>\n-    <maven.compiler.source>1.8</maven.compiler.source>\n     <quarkus-plugin.version>999-SNAPSHOT</quarkus-plugin.version>\n     <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\n     <quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>\n     <quarkus.platform.version>999-SNAPSHOT</quarkus.platform.version>\n-    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    <surefire-plugin.version>2.22.1</surefire-plugin.version>\n+    <maven.compiler.source>1.8</maven.compiler.source>\n+    <maven.compiler.target>1.8</maven.compiler.target>\n     <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n+    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n   </properties>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzMyNzU5OnYy", "diffSide": "RIGHT", "path": "mongodb-panache-quickstart/src/test/java/org/acme/mongodb/panache/PersonDTO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoyNToxNFrOGZW9Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzoyNToxNFrOGZW9Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MzcwNw==", "bodyText": "Is it really needed ?\nWe want to keep the quickstart as close to the guide as possible, and we don't use such DTO in the guide.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/560#discussion_r429243707", "createdAt": "2020-05-22T13:25:14Z", "author": {"login": "loicmathieu"}, "path": "mongodb-panache-quickstart/src/test/java/org/acme/mongodb/panache/PersonDTO.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package org.acme.mongodb.panache;\n+\n+import com.fasterxml.jackson.annotation.JsonFormat;\n+\n+import java.time.LocalDate;\n+\n+class PersonDTO {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "629136ad318b42ce7aef5aea9379373773c2851e"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2405, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}