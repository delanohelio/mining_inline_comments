{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNjUyOTc3", "number": 612, "title": "Use Mutiny event-based API in the Hibernate Reactive quickstart", "bodyText": "WARNING: It requires this PR in Quarkus: quarkusio/quarkus#10433\nUpdate the Hibernate Reactive quickstart so that it uses the Mutiny event-based API.\nIt also inject the session directly making the code simpler.\n@Sanne, @gavinking Would you like to have a look?", "createdAt": "2020-07-02T17:27:34Z", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/612", "merged": true, "mergeCommit": {"oid": "06ef27c9f712043a09e9640e714df7ce39b24e09"}, "closed": true, "closedAt": "2020-07-15T09:06:24Z", "author": {"login": "DavideD"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxCfNMAFqTQ0MTkwMjY3MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc00kIEABqjM1NDM3OTA0MTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxOTAyNjcx", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/612#pullrequestreview-441902671", "createdAt": "2020-07-02T17:42:17Z", "commit": {"oid": "43cd1781f8c1cbe4f6d67f8f86119c7452dad02f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDExODk5", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/612#pullrequestreview-442011899", "createdAt": "2020-07-02T20:52:57Z", "commit": {"oid": "43cd1781f8c1cbe4f6d67f8f86119c7452dad02f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMDo1Mjo1N1rOGscscQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMDo1Mjo1N1rOGscscQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI2MDY1Nw==", "bodyText": "Could the \"get\" method return Uni<List<Fruit>> rather than needing the toArray conversion?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/612#discussion_r449260657", "createdAt": "2020-07-02T20:52:57Z", "author": {"login": "Sanne"}, "path": "hibernate-reactive-quickstart/src/main/java/org/acme/hibernate/reactive/FruitMutinyResource.java", "diffHunk": "@@ -25,65 +25,67 @@\n public class FruitMutinyResource {\n \n     @Inject\n-    Uni<Mutiny.Session> mutinySession;\n+    Mutiny.Session mutinySession;\n \n     @GET\n     public Uni<Fruit[]> get() {\n-        return mutinySession.flatMap( session -> session.createNamedQuery( \"Fruits.findAll\", Fruit.class ).getResultList() )\n-                .map( fruits -> fruits.toArray( new Fruit[fruits.size()] ) );\n+        return mutinySession\n+                .createNamedQuery( \"Fruits.findAll\", Fruit.class ).getResultList()\n+                .onItem().apply( fruits -> fruits.toArray( new Fruit[fruits.size()] ) );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43cd1781f8c1cbe4f6d67f8f86119c7452dad02f"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDEyMDk3", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/612#pullrequestreview-442012097", "createdAt": "2020-07-02T20:53:21Z", "commit": {"oid": "43cd1781f8c1cbe4f6d67f8f86119c7452dad02f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMDo1MzoyMVrOGsctEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMDo1MzoyMVrOGsctEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI2MDgxNg==", "bodyText": "great, much better!", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/612#discussion_r449260816", "createdAt": "2020-07-02T20:53:21Z", "author": {"login": "Sanne"}, "path": "hibernate-reactive-quickstart/src/main/java/org/acme/hibernate/reactive/FruitMutinyResource.java", "diffHunk": "@@ -25,65 +25,67 @@\n public class FruitMutinyResource {\n \n     @Inject\n-    Uni<Mutiny.Session> mutinySession;\n+    Mutiny.Session mutinySession;\n \n     @GET\n     public Uni<Fruit[]> get() {\n-        return mutinySession.flatMap( session -> session.createNamedQuery( \"Fruits.findAll\", Fruit.class ).getResultList() )\n-                .map( fruits -> fruits.toArray( new Fruit[fruits.size()] ) );\n+        return mutinySession\n+                .createNamedQuery( \"Fruits.findAll\", Fruit.class ).getResultList()\n+                .onItem().apply( fruits -> fruits.toArray( new Fruit[fruits.size()] ) );\n     }\n \n     @GET\n     @Path(\"{id}\")\n     public Uni<Fruit> getSingle(@PathParam Integer id) {\n-        return mutinySession\n-                .flatMap( session -> session.find( Fruit.class, id ) );\n+        return mutinySession.find( Fruit.class, id );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43cd1781f8c1cbe4f6d67f8f86119c7452dad02f"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDEzNDEx", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/612#pullrequestreview-442013411", "createdAt": "2020-07-02T20:55:59Z", "commit": {"oid": "43cd1781f8c1cbe4f6d67f8f86119c7452dad02f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMDo1NTo1OVrOGscxGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMDo1NTo1OVrOGscxGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI2MTg1MQ==", "bodyText": "I have to admit that even with help from indentation, it's not clear to me to which element of the chain the \"ifNull\" applies here..", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/612#discussion_r449261851", "createdAt": "2020-07-02T20:55:59Z", "author": {"login": "Sanne"}, "path": "hibernate-reactive-quickstart/src/main/java/org/acme/hibernate/reactive/FruitMutinyResource.java", "diffHunk": "@@ -25,65 +25,67 @@\n public class FruitMutinyResource {\n \n     @Inject\n-    Uni<Mutiny.Session> mutinySession;\n+    Mutiny.Session mutinySession;\n \n     @GET\n     public Uni<Fruit[]> get() {\n-        return mutinySession.flatMap( session -> session.createNamedQuery( \"Fruits.findAll\", Fruit.class ).getResultList() )\n-                .map( fruits -> fruits.toArray( new Fruit[fruits.size()] ) );\n+        return mutinySession\n+                .createNamedQuery( \"Fruits.findAll\", Fruit.class ).getResultList()\n+                .onItem().apply( fruits -> fruits.toArray( new Fruit[fruits.size()] ) );\n     }\n \n     @GET\n     @Path(\"{id}\")\n     public Uni<Fruit> getSingle(@PathParam Integer id) {\n-        return mutinySession\n-                .flatMap( session -> session.find( Fruit.class, id ) );\n+        return mutinySession.find( Fruit.class, id );\n     }\n \n     @POST\n     public Uni<Response> create(Fruit fruit) {\n         if (fruit.getId() != null) {\n             throw new WebApplicationException(\"Id was invalidly set on request.\", 422);\n         }\n+\n         return mutinySession\n-                .flatMap( session -> session.persist( fruit ) )\n-                .flatMap( session -> session.flush() )\n-                .map( ignore -> Response.ok( fruit ).status( 201 ).build() );\n+                .persist( fruit )\n+                .onItem().produceUni( session -> mutinySession.flush() )\n+                .onItem().apply( ignore -> Response.ok( fruit ).status( 201 ).build() );\n     }\n \n     @PUT\n     @Path(\"{id}\")\n-    public Uni<Fruit>  update(@PathParam Integer id, Fruit fruit) {\n+    public Uni<Response> update(@PathParam Integer id, Fruit fruit) {\n         if (fruit.getName() == null) {\n             throw new WebApplicationException(\"Fruit Name was not set on request.\", 422);\n         }\n \n         return mutinySession\n-                .flatMap( session -> session.find( Fruit.class, id )\n-                        .flatMap( entity -> {\n-                            if (entity == null) {\n-                                throw new WebApplicationException(\"Fruit with id of \" + id + \" does not exist.\", 404);\n-                            }\n-                            entity.setName( fruit.getName() );\n-                            return session.flush()\n-                                    .map( ignore -> entity );\n-                        } )\n-                );\n+                .find( Fruit.class, id )\n+                // Found\n+                .onItem().ifNotNull()\n+                    .produceUni( entity -> {\n+                        entity.setName( fruit.getName() );\n+                        return mutinySession.flush()\n+                                .onItem().apply( ignore -> Response.ok( entity ).build() );\n+                    } )\n+                // Not found\n+                .onItem().ifNull()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43cd1781f8c1cbe4f6d67f8f86119c7452dad02f"}, "originalPosition": 67}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "43cd1781f8c1cbe4f6d67f8f86119c7452dad02f", "author": {"user": {"login": "DavideD", "name": "Davide D'Alto"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/43cd1781f8c1cbe4f6d67f8f86119c7452dad02f", "committedDate": "2020-07-02T17:25:20Z", "message": "Use Mutiny event-based API in the Hibernate Reactive quickstart\n\n  * Inject the Session directly, unwrap from Uni\n  * Additional tests for update and not found entities"}, "afterCommit": {"oid": "e47d85d6ecae754019ebe279ed8c636393be3f42", "author": {"user": {"login": "DavideD", "name": "Davide D'Alto"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/e47d85d6ecae754019ebe279ed8c636393be3f42", "committedDate": "2020-07-03T08:16:45Z", "message": "Use Mutiny event-based API in the Hibernate Reactive quickstart\n\n  * Inject the Session directly, unwrap from Uni\n  * Additional tests for update and not found entities"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e47d85d6ecae754019ebe279ed8c636393be3f42", "author": {"user": {"login": "DavideD", "name": "Davide D'Alto"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/e47d85d6ecae754019ebe279ed8c636393be3f42", "committedDate": "2020-07-03T08:16:45Z", "message": "Use Mutiny event-based API in the Hibernate Reactive quickstart\n\n  * Inject the Session directly, unwrap from Uni\n  * Additional tests for update and not found entities"}, "afterCommit": {"oid": "ce83683dc8e78bdc5ea4c7b3258728926d7451c8", "author": {"user": {"login": "DavideD", "name": "Davide D'Alto"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/ce83683dc8e78bdc5ea4c7b3258728926d7451c8", "committedDate": "2020-07-03T08:50:43Z", "message": "Use Mutiny event-based API in the Hibernate Reactive quickstart\n\n  * Inject the Session directly, unwrap from Uni\n  * Additional tests for update and not found entities"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce83683dc8e78bdc5ea4c7b3258728926d7451c8", "author": {"user": {"login": "DavideD", "name": "Davide D'Alto"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/ce83683dc8e78bdc5ea4c7b3258728926d7451c8", "committedDate": "2020-07-03T08:50:43Z", "message": "Use Mutiny event-based API in the Hibernate Reactive quickstart\n\n  * Inject the Session directly, unwrap from Uni\n  * Additional tests for update and not found entities"}, "afterCommit": {"oid": "a2b2c727075f96cd63b5a22e16466244359785a0", "author": {"user": {"login": "DavideD", "name": "Davide D'Alto"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/a2b2c727075f96cd63b5a22e16466244359785a0", "committedDate": "2020-07-03T09:01:18Z", "message": "Use Mutiny event-based API in the Hibernate Reactive quickstart\n\n  * Inject the Session directly, unwrap from Uni\n  * Additional tests for update and not found entities\n  * Return Uni<List<Fruit>> instead of Uni<Fruit[]>\n  * Add example on how to map exceptions in the HTTP response"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NTM1NjY0", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/612#pullrequestreview-445535664", "createdAt": "2020-07-09T11:41:01Z", "commit": {"oid": "a2b2c727075f96cd63b5a22e16466244359785a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTo0MTowMVrOGvNYjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTo0MTowMVrOGvNYjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE1NTUzNQ==", "bodyText": "This is perhaps the wrong place, but given it's a quickstart to help people.. why isn't this Multi<Fruit> ? Seems like a weird API if it's only a Uni wrapper for normal blocking models instead of real reactive one.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/612#discussion_r452155535", "createdAt": "2020-07-09T11:41:01Z", "author": {"login": "burmanm"}, "path": "hibernate-reactive-quickstart/src/main/java/org/acme/hibernate/reactive/FruitMutinyResource.java", "diffHunk": "@@ -23,67 +30,118 @@\n @Produces(\"application/json\")\n @Consumes(\"application/json\")\n public class FruitMutinyResource {\n+    private static final Logger LOGGER = Logger.getLogger(FruitMutinyResource.class.getName());\n \n     @Inject\n-    Uni<Mutiny.Session> mutinySession;\n+    Mutiny.Session mutinySession;\n \n     @GET\n-    public Uni<Fruit[]> get() {\n-        return mutinySession.flatMap( session -> session.createNamedQuery( \"Fruits.findAll\", Fruit.class ).getResultList() )\n-                .map( fruits -> fruits.toArray( new Fruit[fruits.size()] ) );\n+    public Uni<List<Fruit>> get() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2b2c727075f96cd63b5a22e16466244359785a0"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2b2c727075f96cd63b5a22e16466244359785a0", "author": {"user": {"login": "DavideD", "name": "Davide D'Alto"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/a2b2c727075f96cd63b5a22e16466244359785a0", "committedDate": "2020-07-03T09:01:18Z", "message": "Use Mutiny event-based API in the Hibernate Reactive quickstart\n\n  * Inject the Session directly, unwrap from Uni\n  * Additional tests for update and not found entities\n  * Return Uni<List<Fruit>> instead of Uni<Fruit[]>\n  * Add example on how to map exceptions in the HTTP response"}, "afterCommit": {"oid": "5e5fa03d9be1ad1f22ab0e8cae8dd2e25f27f8dc", "author": {"user": {"login": "DavideD", "name": "Davide D'Alto"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/5e5fa03d9be1ad1f22ab0e8cae8dd2e25f27f8dc", "committedDate": "2020-07-09T13:18:38Z", "message": "Use Mutiny event-based API in the Hibernate Reactive quickstart\n\n  * Inject the Session directly, unwrap from Uni\n  * Additional tests for update and not found entities\n  * Return Uni<List<Fruit>> instead of Uni<Fruit[]>\n  * Add example on how to map exceptions in the HTTP response"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2abc7d9718af320846ab4143ee428bc9b6fd5c0", "author": {"user": {"login": "DavideD", "name": "Davide D'Alto"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/f2abc7d9718af320846ab4143ee428bc9b6fd5c0", "committedDate": "2020-07-14T11:43:35Z", "message": "Use Mutiny event-based API in the Hibernate Reactive quickstart\n\n  * Inject the Session directly, unwrap from Uni\n  * Additional tests for update and not found entities\n  * Return Multi<Fruit> instead of Uni<Fruit[]>\n  * Add example on how to map exceptions in the HTTP response"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5e5fa03d9be1ad1f22ab0e8cae8dd2e25f27f8dc", "author": {"user": {"login": "DavideD", "name": "Davide D'Alto"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/5e5fa03d9be1ad1f22ab0e8cae8dd2e25f27f8dc", "committedDate": "2020-07-09T13:18:38Z", "message": "Use Mutiny event-based API in the Hibernate Reactive quickstart\n\n  * Inject the Session directly, unwrap from Uni\n  * Additional tests for update and not found entities\n  * Return Uni<List<Fruit>> instead of Uni<Fruit[]>\n  * Add example on how to map exceptions in the HTTP response"}, "afterCommit": {"oid": "f2abc7d9718af320846ab4143ee428bc9b6fd5c0", "author": {"user": {"login": "DavideD", "name": "Davide D'Alto"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/f2abc7d9718af320846ab4143ee428bc9b6fd5c0", "committedDate": "2020-07-14T11:43:35Z", "message": "Use Mutiny event-based API in the Hibernate Reactive quickstart\n\n  * Inject the Session directly, unwrap from Uni\n  * Additional tests for update and not found entities\n  * Return Multi<Fruit> instead of Uni<Fruit[]>\n  * Add example on how to map exceptions in the HTTP response"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3387, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}