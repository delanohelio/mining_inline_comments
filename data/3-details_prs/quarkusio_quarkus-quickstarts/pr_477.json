{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNjI5NzEw", "number": 477, "title": "RSS Regression: Upload pmap output to cloud storage, compare between runs", "bodyText": "The PR aims to make the RSS regression check more robust for the native image cron job by;\n\nCapturing pmap output from getting-started native binary\nDownloading pmap output from previous build from IBM cloud storage\nComparing RSS from current build to previous build. If the RSS has grown more than 10%, then the run fails the RSS regression test\nAn upper limit of 40MB is defined to stop unbounded RSS growth by less than 10% each run\nCurrent run pmap output is uploaded to IBM cloud storage for comparison against subsequent test\n\nIn order for this PR to function, the following secrets needs to be defined for the repo before this PR is merged;\n\nBUCKET_NAME\nAPI_KEY\nSERVICE_INSTANCE_ID", "createdAt": "2020-03-02T21:58:24Z", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477", "merged": true, "mergeCommit": {"oid": "40555bc4e26b7d73dbe55d70c020a861ec50532c"}, "closed": true, "closedAt": "2020-03-04T11:56:53Z", "author": {"login": "johnaohara"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJ02BMAH2gAyMzgyNjI5NzEwOmJhOWVkOGIxNDJmOTNmYTIwMmMxMDg3MTYyNjZmZTg4NDVkMWFiYWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKRDXLgFqTM2ODUzMzUwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac", "author": {"user": {"login": "johnaohara", "name": "John O'Hara"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/ba9ed8b142f93fa202c108716266fe8845d1abac", "committedDate": "2020-03-02T21:45:28Z", "message": "Capture pmap output, upload to IBM cloud storage, compute RSS regression based on <10% from previous run"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NzQ2OTIx", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#pullrequestreview-367746921", "createdAt": "2020-03-03T07:21:29Z", "commit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzoyMToyOVrOFw6ldw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzoyODoxMlrOFw6ulw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNTgzMQ==", "bodyText": "You really want to make Max happy, right?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386835831", "createdAt": "2020-03-03T07:21:29Z", "author": {"login": "cescoffier"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}\n+          SERVICE_INSTANCE_ID: ${{ secrets.SERVICE_INSTANCE_ID }}\n+\n         run: |\n-          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m > server.log &\n+          sudo apt-get update -o Dir::Etc::sourcelist=\"sources.list\" -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\"\n+          sudo apt-get install -y gnupg2 gnupg-agent\n+          echo Installing SDKMAN\n+          curl -s \"https://get.sdkman.io\" | bash\n+          source ~/.sdkman/bin/sdkman-init.sh\n+          sdk install jbang", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNjE0MA==", "bodyText": "We may very soon have multiple API_KEY, can you prefix it with something like S3_API_KEY?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386836140", "createdAt": "2020-03-03T07:22:20Z", "author": {"login": "cescoffier"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNjIxMA==", "bodyText": "I would also prefix this one with S3_", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386836210", "createdAt": "2020-03-03T07:22:36Z", "author": {"login": "cescoffier"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNjM3NA==", "bodyText": "I believe it's also S3 related, could you prefix it?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386836374", "createdAt": "2020-03-03T07:23:06Z", "author": {"login": "cescoffier"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}\n+          SERVICE_INSTANCE_ID: ${{ secrets.SERVICE_INSTANCE_ID }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNzM4Ng==", "bodyText": "Maybe indicate somewhere that this retrieves the previous pmap and compare it to the new one.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386837386", "createdAt": "2020-03-03T07:26:05Z", "author": {"login": "cescoffier"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}\n+          SERVICE_INSTANCE_ID: ${{ secrets.SERVICE_INSTANCE_ID }}\n+\n         run: |\n-          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m > server.log &\n+          sudo apt-get update -o Dir::Etc::sourcelist=\"sources.list\" -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\"\n+          sudo apt-get install -y gnupg2 gnupg-agent\n+          echo Installing SDKMAN\n+          curl -s \"https://get.sdkman.io\" | bash\n+          source ~/.sdkman/bin/sdkman-init.sh\n+          sdk install jbang\n+          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m -Dquarkus.http.io-threads=1 -Dquarkus.vertx.worker-pool-size=1 > server.log &\n           sleep 2\n+          appPid=$!\n+          pmap -x $appPid > pmap.out\n           ps --no-headers  -C getting-started-${QUICKSTART_VERSION}-runner -o rss > rss.out\n           rss=$(< rss.out)\n-          echo \"Threshold (kB): ${RSS_THRESHOLD}\"\n+          echo \"Max RSS Threshold (kB): ${RSS_THRESHOLD}\"\n           echo \"RSS (kB): $rss\"\n           startTime=$(grep -oP \"started in \\K([0-9]*\\.[0-9]*)\" server.log)\n           startTimeMs=$(echo \"$startTime*1000/1\" | bc)\n           echo \"Start time Threshold (ms): ${START_TIME_THRESHOLD}\"\n           echo \"Start time (ms): $startTimeMs\"\n+          jbang .github/RssRegression.java ${BUCKET_NAME} ${API_KEY} ${SERVICE_INSTANCE_ID} ${REMOTE_OBJECT_NAME} pmap.old.out pmap.out", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzODE2Nw==", "bodyText": "BTW you fails the build it the ration is greater to 1.1 between the old and new one. However, you upload the new one anyway (even if the build failed). So it's unlikely we can catch the regression in the next builds.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386838167", "createdAt": "2020-03-03T07:28:12Z", "author": {"login": "cescoffier"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}\n+          SERVICE_INSTANCE_ID: ${{ secrets.SERVICE_INSTANCE_ID }}\n+\n         run: |\n-          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m > server.log &\n+          sudo apt-get update -o Dir::Etc::sourcelist=\"sources.list\" -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\"\n+          sudo apt-get install -y gnupg2 gnupg-agent\n+          echo Installing SDKMAN\n+          curl -s \"https://get.sdkman.io\" | bash\n+          source ~/.sdkman/bin/sdkman-init.sh\n+          sdk install jbang\n+          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m -Dquarkus.http.io-threads=1 -Dquarkus.vertx.worker-pool-size=1 > server.log &\n           sleep 2\n+          appPid=$!\n+          pmap -x $appPid > pmap.out\n           ps --no-headers  -C getting-started-${QUICKSTART_VERSION}-runner -o rss > rss.out\n           rss=$(< rss.out)\n-          echo \"Threshold (kB): ${RSS_THRESHOLD}\"\n+          echo \"Max RSS Threshold (kB): ${RSS_THRESHOLD}\"\n           echo \"RSS (kB): $rss\"\n           startTime=$(grep -oP \"started in \\K([0-9]*\\.[0-9]*)\" server.log)\n           startTimeMs=$(echo \"$startTime*1000/1\" | bc)\n           echo \"Start time Threshold (ms): ${START_TIME_THRESHOLD}\"\n           echo \"Start time (ms): $startTimeMs\"\n+          jbang .github/RssRegression.java ${BUCKET_NAME} ${API_KEY} ${SERVICE_INSTANCE_ID} ${REMOTE_OBJECT_NAME} pmap.old.out pmap.out", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNzM4Ng=="}, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf5edbccbd964558c0d4341f3a1e2f0efe6249e5", "author": {"user": {"login": "johnaohara", "name": "John O'Hara"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/bf5edbccbd964558c0d4341f3a1e2f0efe6249e5", "committedDate": "2020-03-03T08:57:19Z", "message": "Only upload pmap object if there is no regression"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d58aa7af1ce84e99847b716c597fc22cdb7d359", "author": {"user": {"login": "johnaohara", "name": "John O'Hara"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/6d58aa7af1ce84e99847b716c597fc22cdb7d359", "committedDate": "2020-03-03T10:04:42Z", "message": "Update secret names"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3OTQyODU2", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#pullrequestreview-367942856", "createdAt": "2020-03-03T12:38:28Z", "commit": {"oid": "6d58aa7af1ce84e99847b716c597fc22cdb7d359"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMjozODoyOFrOFxEGbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMjozODoyOFrOFxEGbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5MTcyNA==", "bodyText": "This line should be moved no?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386991724", "createdAt": "2020-03-03T12:38:28Z", "author": {"login": "cescoffier"}, "path": ".github/RssRegression.java", "diffHunk": "@@ -0,0 +1,182 @@\n+//usr/bin/env jbang \"$0\" \"$@\" ; exit $?\n+//DEPS com.ibm.cos:ibm-cos-java-sdk:2.1.0\n+//DEPS javax.xml.bind:jaxb-api:2.4.0-b180830.0359\n+\n+package io.quarkus;\n+\n+import com.ibm.cloud.objectstorage.ClientConfiguration;\n+import com.ibm.cloud.objectstorage.SDKGlobalConfiguration;\n+import com.ibm.cloud.objectstorage.auth.AWSCredentials;\n+import com.ibm.cloud.objectstorage.auth.AWSStaticCredentialsProvider;\n+import com.ibm.cloud.objectstorage.client.builder.AwsClientBuilder.EndpointConfiguration;\n+import com.ibm.cloud.objectstorage.oauth.BasicIBMOAuthCredentials;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3ClientBuilder;\n+import com.ibm.cloud.objectstorage.services.s3.model.AmazonS3Exception;\n+import com.ibm.cloud.objectstorage.services.s3.model.GetObjectRequest;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+\n+import static java.lang.System.exit;\n+\n+public class RssRegression {\n+\n+    private static AmazonS3 _cosClient;\n+    private static String ENDPOINT_URL;\n+    private static String LOCATION;\n+\n+    static {\n+        ENDPOINT_URL = \"https://s3.eu-gb.cloud-object-storage.appdomain.cloud\";\n+        SDKGlobalConfiguration.IAM_ENDPOINT = \"https://iam.cloud.ibm.com/identity/token\";\n+        LOCATION = \"eu-gb\";\n+    }\n+\n+    /**\n+     * @param args\n+     */\n+    public static void main(String[] args) {\n+\n+        if(args.length != 6){\n+            System.out.println(args.length);\n+            printUsage();\n+            exit(1);\n+        }\n+        String BUCKET_NAME = args[0];\n+        String API_KEY = args[1];\n+        String SERVICE_INSTANCE_ID = args[2];\n+        String bucketFile = args[3];\n+        String oldPmapFile = args[4];\n+        String newPmapFile = args[5];\n+\n+        _cosClient = createClient(API_KEY, SERVICE_INSTANCE_ID, ENDPOINT_URL, LOCATION);\n+\n+        System.out.println(\"Downloading file from storage: \" + bucketFile + \" to local: \" + oldPmapFile);\n+        try{\n+            downloadFile(_cosClient, BUCKET_NAME, bucketFile, oldPmapFile);\n+        } catch (AmazonS3Exception s3Execpetion){\n+            System.out.println(\"Download failed with: \" + s3Execpetion.getMessage());\n+            _cosClient.shutdown();\n+            exit(1);\n+        }\n+\n+        int oldRss = getRssFromFile(oldPmapFile);\n+        int newRss = getRssFromFile(newPmapFile);\n+        boolean rssRegression = false;\n+\n+        if( oldRss != -1 && newRss != -1) {\n+            System.out.println(\"Old RSS: \" + oldRss);\n+            System.out.println(\"New RSS: \" + newRss);\n+\n+            rssRegression = newRss > (oldRss * 1.1);\n+            System.out.println(\"Regression: \" + rssRegression);\n+\n+            System.out.println(\"Uploading new pmap file to storage: \" + bucketFile + \" from local: \" + oldPmapFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d58aa7af1ce84e99847b716c597fc22cdb7d359"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "042dfe58465546880907b57db490d541216abf43", "author": {"user": {"login": "johnaohara", "name": "John O'Hara"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/042dfe58465546880907b57db490d541216abf43", "committedDate": "2020-03-03T12:51:18Z", "message": "Move upload log statement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3OTUyMTMy", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#pullrequestreview-367952132", "createdAt": "2020-03-03T12:53:12Z", "commit": {"oid": "042dfe58465546880907b57db490d541216abf43"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NTMzNTAw", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#pullrequestreview-368533500", "createdAt": "2020-03-04T06:37:23Z", "commit": {"oid": "042dfe58465546880907b57db490d541216abf43"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNjozNzoyM1rOFxhdyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNjozNzoyM1rOFxhdyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ3Mjg0Mg==", "bodyText": "fyi you can greatly simplify the parsing and usage text by using picocli ... not a blocker for the PR but just a pointer.  example: https://github.com/maxandersen/jbang/blob/master/examples/smee.java#L51", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r387472842", "createdAt": "2020-03-04T06:37:23Z", "author": {"login": "maxandersen"}, "path": ".github/RssRegression.java", "diffHunk": "@@ -0,0 +1,182 @@\n+//usr/bin/env jbang \"$0\" \"$@\" ; exit $?\n+//DEPS com.ibm.cos:ibm-cos-java-sdk:2.1.0\n+//DEPS javax.xml.bind:jaxb-api:2.4.0-b180830.0359\n+\n+package io.quarkus;\n+\n+import com.ibm.cloud.objectstorage.ClientConfiguration;\n+import com.ibm.cloud.objectstorage.SDKGlobalConfiguration;\n+import com.ibm.cloud.objectstorage.auth.AWSCredentials;\n+import com.ibm.cloud.objectstorage.auth.AWSStaticCredentialsProvider;\n+import com.ibm.cloud.objectstorage.client.builder.AwsClientBuilder.EndpointConfiguration;\n+import com.ibm.cloud.objectstorage.oauth.BasicIBMOAuthCredentials;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3ClientBuilder;\n+import com.ibm.cloud.objectstorage.services.s3.model.AmazonS3Exception;\n+import com.ibm.cloud.objectstorage.services.s3.model.GetObjectRequest;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+\n+import static java.lang.System.exit;\n+\n+public class RssRegression {\n+\n+    private static AmazonS3 _cosClient;\n+    private static String ENDPOINT_URL;\n+    private static String LOCATION;\n+\n+    static {\n+        ENDPOINT_URL = \"https://s3.eu-gb.cloud-object-storage.appdomain.cloud\";\n+        SDKGlobalConfiguration.IAM_ENDPOINT = \"https://iam.cloud.ibm.com/identity/token\";\n+        LOCATION = \"eu-gb\";\n+    }\n+\n+    /**\n+     * @param args\n+     */\n+    public static void main(String[] args) {\n+\n+        if(args.length != 6){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "042dfe58465546880907b57db490d541216abf43"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3434, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}