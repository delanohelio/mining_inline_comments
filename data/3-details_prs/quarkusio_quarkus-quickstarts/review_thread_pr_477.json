{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNjI5NzEw", "number": 477, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzoyMToyOVrODkibPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNjozNzoyM1rODk7ShA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjM5MzU4OnYy", "diffSide": "RIGHT", "path": ".github/workflows/native-build-development.yml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzoyMToyOVrOFw6ldw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMjozMTo0MFrOFxra4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNTgzMQ==", "bodyText": "You really want to make Max happy, right?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386835831", "createdAt": "2020-03-03T07:21:29Z", "author": {"login": "cescoffier"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}\n+          SERVICE_INSTANCE_ID: ${{ secrets.SERVICE_INSTANCE_ID }}\n+\n         run: |\n-          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m > server.log &\n+          sudo apt-get update -o Dir::Etc::sourcelist=\"sources.list\" -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\"\n+          sudo apt-get install -y gnupg2 gnupg-agent\n+          echo Installing SDKMAN\n+          curl -s \"https://get.sdkman.io\" | bash\n+          source ~/.sdkman/bin/sdkman-init.sh\n+          sdk install jbang", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2MjQzNw==", "bodyText": "Just finding it useful :)", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386862437", "createdAt": "2020-03-03T08:30:46Z", "author": {"login": "johnaohara"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}\n+          SERVICE_INSTANCE_ID: ${{ secrets.SERVICE_INSTANCE_ID }}\n+\n         run: |\n-          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m > server.log &\n+          sudo apt-get update -o Dir::Etc::sourcelist=\"sources.list\" -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\"\n+          sudo apt-get install -y gnupg2 gnupg-agent\n+          echo Installing SDKMAN\n+          curl -s \"https://get.sdkman.io\" | bash\n+          source ~/.sdkman/bin/sdkman-init.sh\n+          sdk install jbang", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNTgzMQ=="}, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYzNTkzOQ==", "bodyText": "fyi, you could have used the maxandersen/jbang-action docker image here", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r387635939", "createdAt": "2020-03-04T12:31:40Z", "author": {"login": "maxandersen"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}\n+          SERVICE_INSTANCE_ID: ${{ secrets.SERVICE_INSTANCE_ID }}\n+\n         run: |\n-          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m > server.log &\n+          sudo apt-get update -o Dir::Etc::sourcelist=\"sources.list\" -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\"\n+          sudo apt-get install -y gnupg2 gnupg-agent\n+          echo Installing SDKMAN\n+          curl -s \"https://get.sdkman.io\" | bash\n+          source ~/.sdkman/bin/sdkman-init.sh\n+          sdk install jbang", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNTgzMQ=="}, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjM5NTYyOnYy", "diffSide": "RIGHT", "path": ".github/workflows/native-build-development.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzoyMjoyMFrOFw6mrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwODozMTozOVrOFw8O2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNjE0MA==", "bodyText": "We may very soon have multiple API_KEY, can you prefix it with something like S3_API_KEY?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386836140", "createdAt": "2020-03-03T07:22:20Z", "author": {"login": "cescoffier"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2MjgxMQ==", "bodyText": "@gsmet requested changes to the secret names. I proposed;\nBUCKET_NAME -> IBM_COS_BUCKET_NAME\nAPI_KEY -> IBM_COS_SERVICE_CREDENTIAL_API_KEY\nSERVICE_INSTANCE_ID -> IBM_COS_SERVICE_CREDENTIAL_RESOURCE_INSTANCE_ID", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386862811", "createdAt": "2020-03-03T08:31:39Z", "author": {"login": "johnaohara"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNjE0MA=="}, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjM5NjA1OnYy", "diffSide": "RIGHT", "path": ".github/workflows/native-build-development.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzoyMjozNlrOFw6m8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwODozMTo1M1rOFw8PRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNjIxMA==", "bodyText": "I would also prefix this one with S3_", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386836210", "createdAt": "2020-03-03T07:22:36Z", "author": {"login": "cescoffier"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2MjkxOQ==", "bodyText": "see previous comment", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386862919", "createdAt": "2020-03-03T08:31:53Z", "author": {"login": "johnaohara"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNjIxMA=="}, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjM5NzIyOnYy", "diffSide": "RIGHT", "path": ".github/workflows/native-build-development.yml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzoyMzowNlrOFw6nlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwODozMjowNlrOFw8PyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNjM3NA==", "bodyText": "I believe it's also S3 related, could you prefix it?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386836374", "createdAt": "2020-03-03T07:23:06Z", "author": {"login": "cescoffier"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}\n+          SERVICE_INSTANCE_ID: ${{ secrets.SERVICE_INSTANCE_ID }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzODUzNA==", "bodyText": "or auth centric maybe.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386838534", "createdAt": "2020-03-03T07:29:12Z", "author": {"login": "cescoffier"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}\n+          SERVICE_INSTANCE_ID: ${{ secrets.SERVICE_INSTANCE_ID }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNjM3NA=="}, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2MzA0OQ==", "bodyText": "see previous comment", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386863049", "createdAt": "2020-03-03T08:32:06Z", "author": {"login": "johnaohara"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}\n+          SERVICE_INSTANCE_ID: ${{ secrets.SERVICE_INSTANCE_ID }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNjM3NA=="}, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjQwMzc0OnYy", "diffSide": "RIGHT", "path": ".github/workflows/native-build-development.yml", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzoyNjowNVrOFw6rig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwODo1OTo1MlrOFw9Grg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNzM4Ng==", "bodyText": "Maybe indicate somewhere that this retrieves the previous pmap and compare it to the new one.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386837386", "createdAt": "2020-03-03T07:26:05Z", "author": {"login": "cescoffier"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}\n+          SERVICE_INSTANCE_ID: ${{ secrets.SERVICE_INSTANCE_ID }}\n+\n         run: |\n-          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m > server.log &\n+          sudo apt-get update -o Dir::Etc::sourcelist=\"sources.list\" -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\"\n+          sudo apt-get install -y gnupg2 gnupg-agent\n+          echo Installing SDKMAN\n+          curl -s \"https://get.sdkman.io\" | bash\n+          source ~/.sdkman/bin/sdkman-init.sh\n+          sdk install jbang\n+          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m -Dquarkus.http.io-threads=1 -Dquarkus.vertx.worker-pool-size=1 > server.log &\n           sleep 2\n+          appPid=$!\n+          pmap -x $appPid > pmap.out\n           ps --no-headers  -C getting-started-${QUICKSTART_VERSION}-runner -o rss > rss.out\n           rss=$(< rss.out)\n-          echo \"Threshold (kB): ${RSS_THRESHOLD}\"\n+          echo \"Max RSS Threshold (kB): ${RSS_THRESHOLD}\"\n           echo \"RSS (kB): $rss\"\n           startTime=$(grep -oP \"started in \\K([0-9]*\\.[0-9]*)\" server.log)\n           startTimeMs=$(echo \"$startTime*1000/1\" | bc)\n           echo \"Start time Threshold (ms): ${START_TIME_THRESHOLD}\"\n           echo \"Start time (ms): $startTimeMs\"\n+          jbang .github/RssRegression.java ${BUCKET_NAME} ${API_KEY} ${SERVICE_INSTANCE_ID} ${REMOTE_OBJECT_NAME} pmap.old.out pmap.out", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzODE2Nw==", "bodyText": "BTW you fails the build it the ration is greater to 1.1 between the old and new one. However, you upload the new one anyway (even if the build failed). So it's unlikely we can catch the regression in the next builds.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386838167", "createdAt": "2020-03-03T07:28:12Z", "author": {"login": "cescoffier"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}\n+          SERVICE_INSTANCE_ID: ${{ secrets.SERVICE_INSTANCE_ID }}\n+\n         run: |\n-          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m > server.log &\n+          sudo apt-get update -o Dir::Etc::sourcelist=\"sources.list\" -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\"\n+          sudo apt-get install -y gnupg2 gnupg-agent\n+          echo Installing SDKMAN\n+          curl -s \"https://get.sdkman.io\" | bash\n+          source ~/.sdkman/bin/sdkman-init.sh\n+          sdk install jbang\n+          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m -Dquarkus.http.io-threads=1 -Dquarkus.vertx.worker-pool-size=1 > server.log &\n           sleep 2\n+          appPid=$!\n+          pmap -x $appPid > pmap.out\n           ps --no-headers  -C getting-started-${QUICKSTART_VERSION}-runner -o rss > rss.out\n           rss=$(< rss.out)\n-          echo \"Threshold (kB): ${RSS_THRESHOLD}\"\n+          echo \"Max RSS Threshold (kB): ${RSS_THRESHOLD}\"\n           echo \"RSS (kB): $rss\"\n           startTime=$(grep -oP \"started in \\K([0-9]*\\.[0-9]*)\" server.log)\n           startTimeMs=$(echo \"$startTime*1000/1\" | bc)\n           echo \"Start time Threshold (ms): ${START_TIME_THRESHOLD}\"\n           echo \"Start time (ms): $startTimeMs\"\n+          jbang .github/RssRegression.java ${BUCKET_NAME} ${API_KEY} ${SERVICE_INSTANCE_ID} ${REMOTE_OBJECT_NAME} pmap.old.out pmap.out", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNzM4Ng=="}, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2NDc4MA==", "bodyText": "We should probably make that 1.1 configurable.\nWhat happens in the case that the +10% RSS is genuinely related to an increase as a result of the build tools, i.e. not a regression caused by a bug. It could be valid, all though it requires manual validation, hence the failure and should be compared against the next builds.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386864780", "createdAt": "2020-03-03T08:35:56Z", "author": {"login": "johnaohara"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}\n+          SERVICE_INSTANCE_ID: ${{ secrets.SERVICE_INSTANCE_ID }}\n+\n         run: |\n-          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m > server.log &\n+          sudo apt-get update -o Dir::Etc::sourcelist=\"sources.list\" -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\"\n+          sudo apt-get install -y gnupg2 gnupg-agent\n+          echo Installing SDKMAN\n+          curl -s \"https://get.sdkman.io\" | bash\n+          source ~/.sdkman/bin/sdkman-init.sh\n+          sdk install jbang\n+          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m -Dquarkus.http.io-threads=1 -Dquarkus.vertx.worker-pool-size=1 > server.log &\n           sleep 2\n+          appPid=$!\n+          pmap -x $appPid > pmap.out\n           ps --no-headers  -C getting-started-${QUICKSTART_VERSION}-runner -o rss > rss.out\n           rss=$(< rss.out)\n-          echo \"Threshold (kB): ${RSS_THRESHOLD}\"\n+          echo \"Max RSS Threshold (kB): ${RSS_THRESHOLD}\"\n           echo \"RSS (kB): $rss\"\n           startTime=$(grep -oP \"started in \\K([0-9]*\\.[0-9]*)\" server.log)\n           startTimeMs=$(echo \"$startTime*1000/1\" | bc)\n           echo \"Start time Threshold (ms): ${START_TIME_THRESHOLD}\"\n           echo \"Start time (ms): $startTimeMs\"\n+          jbang .github/RssRegression.java ${BUCKET_NAME} ${API_KEY} ${SERVICE_INSTANCE_ID} ${REMOTE_OBJECT_NAME} pmap.old.out pmap.out", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNzM4Ng=="}, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3MzY1MQ==", "bodyText": "Having said that, RSS regression tripping would be the most common failure path, and I am archiving the pmap output with every run. So if it does trip, and is genuinely due to the tooling, we could manually replace the pmap file stored in the cloud bucket", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386873651", "createdAt": "2020-03-03T08:53:28Z", "author": {"login": "johnaohara"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}\n+          SERVICE_INSTANCE_ID: ${{ secrets.SERVICE_INSTANCE_ID }}\n+\n         run: |\n-          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m > server.log &\n+          sudo apt-get update -o Dir::Etc::sourcelist=\"sources.list\" -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\"\n+          sudo apt-get install -y gnupg2 gnupg-agent\n+          echo Installing SDKMAN\n+          curl -s \"https://get.sdkman.io\" | bash\n+          source ~/.sdkman/bin/sdkman-init.sh\n+          sdk install jbang\n+          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m -Dquarkus.http.io-threads=1 -Dquarkus.vertx.worker-pool-size=1 > server.log &\n           sleep 2\n+          appPid=$!\n+          pmap -x $appPid > pmap.out\n           ps --no-headers  -C getting-started-${QUICKSTART_VERSION}-runner -o rss > rss.out\n           rss=$(< rss.out)\n-          echo \"Threshold (kB): ${RSS_THRESHOLD}\"\n+          echo \"Max RSS Threshold (kB): ${RSS_THRESHOLD}\"\n           echo \"RSS (kB): $rss\"\n           startTime=$(grep -oP \"started in \\K([0-9]*\\.[0-9]*)\" server.log)\n           startTimeMs=$(echo \"$startTime*1000/1\" | bc)\n           echo \"Start time Threshold (ms): ${START_TIME_THRESHOLD}\"\n           echo \"Start time (ms): $startTimeMs\"\n+          jbang .github/RssRegression.java ${BUCKET_NAME} ${API_KEY} ${SERVICE_INSTANCE_ID} ${REMOTE_OBJECT_NAME} pmap.old.out pmap.out", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNzM4Ng=="}, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3NzEwMg==", "bodyText": "Have changed to upload only if does not regress", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386877102", "createdAt": "2020-03-03T08:59:52Z", "author": {"login": "johnaohara"}, "path": ".github/workflows/native-build-development.yml", "diffHunk": "@@ -43,21 +43,40 @@ jobs:\n       - name: Check RSS\n         env:\n           QUICKSTART_VERSION: \"1.0-SNAPSHOT\"\n-          RSS_THRESHOLD: \"25000\"\n+          RSS_THRESHOLD: \"40000\"\n           START_TIME_THRESHOLD: \"1000\"\n+          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}\n+          REMOTE_OBJECT_NAME: \"pmap.out\"\n+          API_KEY: ${{ secrets.API_KEY }}\n+          SERVICE_INSTANCE_ID: ${{ secrets.SERVICE_INSTANCE_ID }}\n+\n         run: |\n-          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m > server.log &\n+          sudo apt-get update -o Dir::Etc::sourcelist=\"sources.list\" -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\"\n+          sudo apt-get install -y gnupg2 gnupg-agent\n+          echo Installing SDKMAN\n+          curl -s \"https://get.sdkman.io\" | bash\n+          source ~/.sdkman/bin/sdkman-init.sh\n+          sdk install jbang\n+          getting-started/target/getting-started-${QUICKSTART_VERSION}-runner -Xmx2m -Dquarkus.http.io-threads=1 -Dquarkus.vertx.worker-pool-size=1 > server.log &\n           sleep 2\n+          appPid=$!\n+          pmap -x $appPid > pmap.out\n           ps --no-headers  -C getting-started-${QUICKSTART_VERSION}-runner -o rss > rss.out\n           rss=$(< rss.out)\n-          echo \"Threshold (kB): ${RSS_THRESHOLD}\"\n+          echo \"Max RSS Threshold (kB): ${RSS_THRESHOLD}\"\n           echo \"RSS (kB): $rss\"\n           startTime=$(grep -oP \"started in \\K([0-9]*\\.[0-9]*)\" server.log)\n           startTimeMs=$(echo \"$startTime*1000/1\" | bc)\n           echo \"Start time Threshold (ms): ${START_TIME_THRESHOLD}\"\n           echo \"Start time (ms): $startTimeMs\"\n+          jbang .github/RssRegression.java ${BUCKET_NAME} ${API_KEY} ${SERVICE_INSTANCE_ID} ${REMOTE_OBJECT_NAME} pmap.old.out pmap.out", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNzM4Ng=="}, "originalCommit": {"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NzM5NDA2OnYy", "diffSide": "RIGHT", "path": ".github/RssRegression.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMjozODoyOFrOFxEGbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMjo1MTo1MFrOFxEg2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5MTcyNA==", "bodyText": "This line should be moved no?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386991724", "createdAt": "2020-03-03T12:38:28Z", "author": {"login": "cescoffier"}, "path": ".github/RssRegression.java", "diffHunk": "@@ -0,0 +1,182 @@\n+//usr/bin/env jbang \"$0\" \"$@\" ; exit $?\n+//DEPS com.ibm.cos:ibm-cos-java-sdk:2.1.0\n+//DEPS javax.xml.bind:jaxb-api:2.4.0-b180830.0359\n+\n+package io.quarkus;\n+\n+import com.ibm.cloud.objectstorage.ClientConfiguration;\n+import com.ibm.cloud.objectstorage.SDKGlobalConfiguration;\n+import com.ibm.cloud.objectstorage.auth.AWSCredentials;\n+import com.ibm.cloud.objectstorage.auth.AWSStaticCredentialsProvider;\n+import com.ibm.cloud.objectstorage.client.builder.AwsClientBuilder.EndpointConfiguration;\n+import com.ibm.cloud.objectstorage.oauth.BasicIBMOAuthCredentials;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3ClientBuilder;\n+import com.ibm.cloud.objectstorage.services.s3.model.AmazonS3Exception;\n+import com.ibm.cloud.objectstorage.services.s3.model.GetObjectRequest;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+\n+import static java.lang.System.exit;\n+\n+public class RssRegression {\n+\n+    private static AmazonS3 _cosClient;\n+    private static String ENDPOINT_URL;\n+    private static String LOCATION;\n+\n+    static {\n+        ENDPOINT_URL = \"https://s3.eu-gb.cloud-object-storage.appdomain.cloud\";\n+        SDKGlobalConfiguration.IAM_ENDPOINT = \"https://iam.cloud.ibm.com/identity/token\";\n+        LOCATION = \"eu-gb\";\n+    }\n+\n+    /**\n+     * @param args\n+     */\n+    public static void main(String[] args) {\n+\n+        if(args.length != 6){\n+            System.out.println(args.length);\n+            printUsage();\n+            exit(1);\n+        }\n+        String BUCKET_NAME = args[0];\n+        String API_KEY = args[1];\n+        String SERVICE_INSTANCE_ID = args[2];\n+        String bucketFile = args[3];\n+        String oldPmapFile = args[4];\n+        String newPmapFile = args[5];\n+\n+        _cosClient = createClient(API_KEY, SERVICE_INSTANCE_ID, ENDPOINT_URL, LOCATION);\n+\n+        System.out.println(\"Downloading file from storage: \" + bucketFile + \" to local: \" + oldPmapFile);\n+        try{\n+            downloadFile(_cosClient, BUCKET_NAME, bucketFile, oldPmapFile);\n+        } catch (AmazonS3Exception s3Execpetion){\n+            System.out.println(\"Download failed with: \" + s3Execpetion.getMessage());\n+            _cosClient.shutdown();\n+            exit(1);\n+        }\n+\n+        int oldRss = getRssFromFile(oldPmapFile);\n+        int newRss = getRssFromFile(newPmapFile);\n+        boolean rssRegression = false;\n+\n+        if( oldRss != -1 && newRss != -1) {\n+            System.out.println(\"Old RSS: \" + oldRss);\n+            System.out.println(\"New RSS: \" + newRss);\n+\n+            rssRegression = newRss > (oldRss * 1.1);\n+            System.out.println(\"Regression: \" + rssRegression);\n+\n+            System.out.println(\"Uploading new pmap file to storage: \" + bucketFile + \" from local: \" + oldPmapFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d58aa7af1ce84e99847b716c597fc22cdb7d359"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5ODQ4OA==", "bodyText": "moved that log statement", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386998488", "createdAt": "2020-03-03T12:51:50Z", "author": {"login": "johnaohara"}, "path": ".github/RssRegression.java", "diffHunk": "@@ -0,0 +1,182 @@\n+//usr/bin/env jbang \"$0\" \"$@\" ; exit $?\n+//DEPS com.ibm.cos:ibm-cos-java-sdk:2.1.0\n+//DEPS javax.xml.bind:jaxb-api:2.4.0-b180830.0359\n+\n+package io.quarkus;\n+\n+import com.ibm.cloud.objectstorage.ClientConfiguration;\n+import com.ibm.cloud.objectstorage.SDKGlobalConfiguration;\n+import com.ibm.cloud.objectstorage.auth.AWSCredentials;\n+import com.ibm.cloud.objectstorage.auth.AWSStaticCredentialsProvider;\n+import com.ibm.cloud.objectstorage.client.builder.AwsClientBuilder.EndpointConfiguration;\n+import com.ibm.cloud.objectstorage.oauth.BasicIBMOAuthCredentials;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3ClientBuilder;\n+import com.ibm.cloud.objectstorage.services.s3.model.AmazonS3Exception;\n+import com.ibm.cloud.objectstorage.services.s3.model.GetObjectRequest;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+\n+import static java.lang.System.exit;\n+\n+public class RssRegression {\n+\n+    private static AmazonS3 _cosClient;\n+    private static String ENDPOINT_URL;\n+    private static String LOCATION;\n+\n+    static {\n+        ENDPOINT_URL = \"https://s3.eu-gb.cloud-object-storage.appdomain.cloud\";\n+        SDKGlobalConfiguration.IAM_ENDPOINT = \"https://iam.cloud.ibm.com/identity/token\";\n+        LOCATION = \"eu-gb\";\n+    }\n+\n+    /**\n+     * @param args\n+     */\n+    public static void main(String[] args) {\n+\n+        if(args.length != 6){\n+            System.out.println(args.length);\n+            printUsage();\n+            exit(1);\n+        }\n+        String BUCKET_NAME = args[0];\n+        String API_KEY = args[1];\n+        String SERVICE_INSTANCE_ID = args[2];\n+        String bucketFile = args[3];\n+        String oldPmapFile = args[4];\n+        String newPmapFile = args[5];\n+\n+        _cosClient = createClient(API_KEY, SERVICE_INSTANCE_ID, ENDPOINT_URL, LOCATION);\n+\n+        System.out.println(\"Downloading file from storage: \" + bucketFile + \" to local: \" + oldPmapFile);\n+        try{\n+            downloadFile(_cosClient, BUCKET_NAME, bucketFile, oldPmapFile);\n+        } catch (AmazonS3Exception s3Execpetion){\n+            System.out.println(\"Download failed with: \" + s3Execpetion.getMessage());\n+            _cosClient.shutdown();\n+            exit(1);\n+        }\n+\n+        int oldRss = getRssFromFile(oldPmapFile);\n+        int newRss = getRssFromFile(newPmapFile);\n+        boolean rssRegression = false;\n+\n+        if( oldRss != -1 && newRss != -1) {\n+            System.out.println(\"Old RSS: \" + oldRss);\n+            System.out.println(\"New RSS: \" + newRss);\n+\n+            rssRegression = newRss > (oldRss * 1.1);\n+            System.out.println(\"Regression: \" + rssRegression);\n+\n+            System.out.println(\"Uploading new pmap file to storage: \" + bucketFile + \" from local: \" + oldPmapFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5MTcyNA=="}, "originalCommit": {"oid": "6d58aa7af1ce84e99847b716c597fc22cdb7d359"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDQ2NzI0OnYy", "diffSide": "RIGHT", "path": ".github/RssRegression.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNjozNzoyM1rOFxhdyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMTo1NjoxMFrOFxqbLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ3Mjg0Mg==", "bodyText": "fyi you can greatly simplify the parsing and usage text by using picocli ... not a blocker for the PR but just a pointer.  example: https://github.com/maxandersen/jbang/blob/master/examples/smee.java#L51", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r387472842", "createdAt": "2020-03-04T06:37:23Z", "author": {"login": "maxandersen"}, "path": ".github/RssRegression.java", "diffHunk": "@@ -0,0 +1,182 @@\n+//usr/bin/env jbang \"$0\" \"$@\" ; exit $?\n+//DEPS com.ibm.cos:ibm-cos-java-sdk:2.1.0\n+//DEPS javax.xml.bind:jaxb-api:2.4.0-b180830.0359\n+\n+package io.quarkus;\n+\n+import com.ibm.cloud.objectstorage.ClientConfiguration;\n+import com.ibm.cloud.objectstorage.SDKGlobalConfiguration;\n+import com.ibm.cloud.objectstorage.auth.AWSCredentials;\n+import com.ibm.cloud.objectstorage.auth.AWSStaticCredentialsProvider;\n+import com.ibm.cloud.objectstorage.client.builder.AwsClientBuilder.EndpointConfiguration;\n+import com.ibm.cloud.objectstorage.oauth.BasicIBMOAuthCredentials;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3ClientBuilder;\n+import com.ibm.cloud.objectstorage.services.s3.model.AmazonS3Exception;\n+import com.ibm.cloud.objectstorage.services.s3.model.GetObjectRequest;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+\n+import static java.lang.System.exit;\n+\n+public class RssRegression {\n+\n+    private static AmazonS3 _cosClient;\n+    private static String ENDPOINT_URL;\n+    private static String LOCATION;\n+\n+    static {\n+        ENDPOINT_URL = \"https://s3.eu-gb.cloud-object-storage.appdomain.cloud\";\n+        SDKGlobalConfiguration.IAM_ENDPOINT = \"https://iam.cloud.ibm.com/identity/token\";\n+        LOCATION = \"eu-gb\";\n+    }\n+\n+    /**\n+     * @param args\n+     */\n+    public static void main(String[] args) {\n+\n+        if(args.length != 6){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "042dfe58465546880907b57db490d541216abf43"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYxOTYyOQ==", "bodyText": "Thanks for the pointer", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r387619629", "createdAt": "2020-03-04T11:56:10Z", "author": {"login": "johnaohara"}, "path": ".github/RssRegression.java", "diffHunk": "@@ -0,0 +1,182 @@\n+//usr/bin/env jbang \"$0\" \"$@\" ; exit $?\n+//DEPS com.ibm.cos:ibm-cos-java-sdk:2.1.0\n+//DEPS javax.xml.bind:jaxb-api:2.4.0-b180830.0359\n+\n+package io.quarkus;\n+\n+import com.ibm.cloud.objectstorage.ClientConfiguration;\n+import com.ibm.cloud.objectstorage.SDKGlobalConfiguration;\n+import com.ibm.cloud.objectstorage.auth.AWSCredentials;\n+import com.ibm.cloud.objectstorage.auth.AWSStaticCredentialsProvider;\n+import com.ibm.cloud.objectstorage.client.builder.AwsClientBuilder.EndpointConfiguration;\n+import com.ibm.cloud.objectstorage.oauth.BasicIBMOAuthCredentials;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3ClientBuilder;\n+import com.ibm.cloud.objectstorage.services.s3.model.AmazonS3Exception;\n+import com.ibm.cloud.objectstorage.services.s3.model.GetObjectRequest;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+\n+import static java.lang.System.exit;\n+\n+public class RssRegression {\n+\n+    private static AmazonS3 _cosClient;\n+    private static String ENDPOINT_URL;\n+    private static String LOCATION;\n+\n+    static {\n+        ENDPOINT_URL = \"https://s3.eu-gb.cloud-object-storage.appdomain.cloud\";\n+        SDKGlobalConfiguration.IAM_ENDPOINT = \"https://iam.cloud.ibm.com/identity/token\";\n+        LOCATION = \"eu-gb\";\n+    }\n+\n+    /**\n+     * @param args\n+     */\n+    public static void main(String[] args) {\n+\n+        if(args.length != 6){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ3Mjg0Mg=="}, "originalCommit": {"oid": "042dfe58465546880907b57db490d541216abf43"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2374, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}