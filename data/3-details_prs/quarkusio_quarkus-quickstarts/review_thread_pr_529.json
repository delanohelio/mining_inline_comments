{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MjIxNzE4", "number": 529, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNzowNjo1NFrODzVpRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjoyNzo0MVrOEtH9Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MTU4NTk5OnYy", "diffSide": "RIGHT", "path": "security-oauth2-quickstart/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNzowNjo1NFrOGHzdIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODozNzowOVrOGIiP3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjI1Ng==", "bodyText": "Wondering if this property can use a random port (and set by a Quarkus Test Resource)", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r410836256", "createdAt": "2020-04-19T07:06:54Z", "author": {"login": "cescoffier"}, "path": "security-oauth2-quickstart/src/main/resources/application.properties", "diffHunk": "@@ -1,3 +1,4 @@\n-quarkus.oauth2.client-id=client_id\n+quarkus.oauth2.enabled=true\n+quarkus.oauth2.client-id=backend-service\n quarkus.oauth2.client-secret=secret\n-quarkus.oauth2.introspection-url=http://oauth-server/introspect\n\\ No newline at end of file\n+quarkus.oauth2.introspection-url=http://localhost:8180/auth/realms/quarkus/protocol/openid-connect/token/introspect", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bead224a4764e09a1230685776e9b98467d2b4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwMjkwOQ==", "bodyText": "This configuration is overwritten during at QuarkusTestResource creation. I was not able to delete this configuration because the following error occurs if not written.\nio.quarkus.runtime.configuration.ConfigurationException: client-id, client-secret and introspection-url must be configured when the oauth2 extension is enabled\n\nI was able to set port via a QuarkusTestResource\nhttps://github.com/cemnura/quarkus-quickstarts/blob/156a80d7f3a07e04b2c06d2aa9e11d88efad2960/security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/KeycloakResource.java#L15-L27", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r411602909", "createdAt": "2020-04-20T18:37:09Z", "author": {"login": "cemnura"}, "path": "security-oauth2-quickstart/src/main/resources/application.properties", "diffHunk": "@@ -1,3 +1,4 @@\n-quarkus.oauth2.client-id=client_id\n+quarkus.oauth2.enabled=true\n+quarkus.oauth2.client-id=backend-service\n quarkus.oauth2.client-secret=secret\n-quarkus.oauth2.introspection-url=http://oauth-server/introspect\n\\ No newline at end of file\n+quarkus.oauth2.introspection-url=http://localhost:8180/auth/realms/quarkus/protocol/openid-connect/token/introspect", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjI1Ng=="}, "originalCommit": {"oid": "04bead224a4764e09a1230685776e9b98467d2b4"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MTU4ODAxOnYy", "diffSide": "RIGHT", "path": "security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNzowODoxOVrOGHzeAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwOTozOToyNVrOGH1ISQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjQ4MQ==", "bodyText": "So we cannot use TestContainer like this, as the lifecycle is different from the Quarkus lifecycle.\nYou need to use a Quarkus Test Resource, and BTW, it will also let you set some properties dynamically.\nCheck how the Kafka quickstart is built as an example.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r410836481", "createdAt": "2020-04-19T07:08:19Z", "author": {"login": "cescoffier"}, "path": "security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.acme.security.oauth2;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import org.junit.ClassRule;\n+import org.junit.jupiter.api.Test;\n+import org.testcontainers.containers.BindMode;\n+import org.testcontainers.containers.FixedHostPortGenericContainer;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n+\n+@Testcontainers\n+@QuarkusTest\n+public class TokenSecuredResourceTest {\n+\n+    private static final String KEYCLOAK_SERVER_URL = System.getProperty(\"keycloak.url\", \"http://localhost:8180/auth\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bead224a4764e09a1230685776e9b98467d2b4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg2MzY4OQ==", "bodyText": "I will check how the Kafka quickstart is built.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r410863689", "createdAt": "2020-04-19T09:39:25Z", "author": {"login": "cemnura"}, "path": "security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.acme.security.oauth2;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import org.junit.ClassRule;\n+import org.junit.jupiter.api.Test;\n+import org.testcontainers.containers.BindMode;\n+import org.testcontainers.containers.FixedHostPortGenericContainer;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n+\n+@Testcontainers\n+@QuarkusTest\n+public class TokenSecuredResourceTest {\n+\n+    private static final String KEYCLOAK_SERVER_URL = System.getProperty(\"keycloak.url\", \"http://localhost:8180/auth\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjQ4MQ=="}, "originalCommit": {"oid": "04bead224a4764e09a1230685776e9b98467d2b4"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MTU4OTM0OnYy", "diffSide": "RIGHT", "path": "security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNzowOToxOFrOGHzelQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwOTozODozNFrOGH1HXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjYyOQ==", "bodyText": "This should be moved to a Quarkus Test Resources, and probably bound to a free port.\nAlso, I'm surprised about @ClassRule as it's a Junit 4 annotation.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r410836629", "createdAt": "2020-04-19T07:09:18Z", "author": {"login": "cescoffier"}, "path": "security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.acme.security.oauth2;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import org.junit.ClassRule;\n+import org.junit.jupiter.api.Test;\n+import org.testcontainers.containers.BindMode;\n+import org.testcontainers.containers.FixedHostPortGenericContainer;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n+\n+@Testcontainers\n+@QuarkusTest\n+public class TokenSecuredResourceTest {\n+\n+    private static final String KEYCLOAK_SERVER_URL = System.getProperty(\"keycloak.url\", \"http://localhost:8180/auth\");\n+    private static final String KEYCLOAK_REALM = \"quarkus\";\n+\n+    @ClassRule\n+    @Container\n+    private static GenericContainer keycloak = new FixedHostPortGenericContainer(\"quay.io/keycloak/keycloak:9.0.3\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bead224a4764e09a1230685776e9b98467d2b4"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg2MzQ1NA==", "bodyText": "Okey I will move try to move this and try to bound to a free port.\nYes you are correct @ClassRule is a Junit4 annotation. I misread the testcontainer documentation. I will be removing this in general.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r410863454", "createdAt": "2020-04-19T09:38:34Z", "author": {"login": "cemnura"}, "path": "security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.acme.security.oauth2;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import org.junit.ClassRule;\n+import org.junit.jupiter.api.Test;\n+import org.testcontainers.containers.BindMode;\n+import org.testcontainers.containers.FixedHostPortGenericContainer;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n+\n+@Testcontainers\n+@QuarkusTest\n+public class TokenSecuredResourceTest {\n+\n+    private static final String KEYCLOAK_SERVER_URL = System.getProperty(\"keycloak.url\", \"http://localhost:8180/auth\");\n+    private static final String KEYCLOAK_REALM = \"quarkus\";\n+\n+    @ClassRule\n+    @Container\n+    private static GenericContainer keycloak = new FixedHostPortGenericContainer(\"quay.io/keycloak/keycloak:9.0.3\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjYyOQ=="}, "originalCommit": {"oid": "04bead224a4764e09a1230685776e9b98467d2b4"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MTU5MDQ2OnYy", "diffSide": "RIGHT", "path": "security-oauth2-quickstart/src/test/resources/.notes", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNzoxMDoxNlrOGHzfFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODozNzo1MFrOGIiRaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjc1Nw==", "bodyText": "What the goal of this file?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r410836757", "createdAt": "2020-04-19T07:10:16Z", "author": {"login": "cescoffier"}, "path": "security-oauth2-quickstart/src/test/resources/.notes", "diffHunk": "@@ -0,0 +1,66 @@\n+curl -X POST \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bead224a4764e09a1230685776e9b98467d2b4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg2MjQ2Nw==", "bodyText": "These where my notes when developing this qucikstart. I thought that I may improve the documentation using these commands.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r410862467", "createdAt": "2020-04-19T09:33:19Z", "author": {"login": "cemnura"}, "path": "security-oauth2-quickstart/src/test/resources/.notes", "diffHunk": "@@ -0,0 +1,66 @@\n+curl -X POST \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjc1Nw=="}, "originalCommit": {"oid": "04bead224a4764e09a1230685776e9b98467d2b4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwMzMwNA==", "bodyText": "I will delete these files when I am going to squash commits.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r411603304", "createdAt": "2020-04-20T18:37:50Z", "author": {"login": "cemnura"}, "path": "security-oauth2-quickstart/src/test/resources/.notes", "diffHunk": "@@ -0,0 +1,66 @@\n+curl -X POST \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjc1Nw=="}, "originalCommit": {"oid": "04bead224a4764e09a1230685776e9b98467d2b4"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTA2NTc5OnYy", "diffSide": "RIGHT", "path": "security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/KeycloakTestResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMTozMDo1MlrOHfiksg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMToyMDoyOFrOHgNgHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzNDM1NA==", "bodyText": "@sberyozkin  This is a demo Keycloak mock server using WireMock for evaluation. Is missing protocol/openid-connect/token path mock.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r502834354", "createdAt": "2020-10-10T21:30:52Z", "author": {"login": "cemnura"}, "path": "security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/KeycloakTestResource.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package org.acme.security.openid.connect;\n+\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.github.tomakehurst.wiremock.client.WireMock;\n+import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n+\n+import javax.ws.rs.core.MediaType;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.get;\n+import static com.github.tomakehurst.wiremock.client.WireMock.post;\n+import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.options;\n+\n+public class KeycloakTestResource implements QuarkusTestResourceLifecycleManager {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c66b83b5aaf1cba3353dc99ef4e0fdf416653346"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUzNzY5NA==", "bodyText": "I have deleted this class from this PR and moving it to the main quarkus repository", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r503537694", "createdAt": "2020-10-12T21:20:28Z", "author": {"login": "cemnura"}, "path": "security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/KeycloakTestResource.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package org.acme.security.openid.connect;\n+\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.github.tomakehurst.wiremock.client.WireMock;\n+import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n+\n+import javax.ws.rs.core.MediaType;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.get;\n+import static com.github.tomakehurst.wiremock.client.WireMock.post;\n+import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.options;\n+\n+public class KeycloakTestResource implements QuarkusTestResourceLifecycleManager {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzNDM1NA=="}, "originalCommit": {"oid": "c66b83b5aaf1cba3353dc99ef4e0fdf416653346"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzUxNzI3OnYy", "diffSide": "RIGHT", "path": "security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/UsersResourceTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjoyNzo0MVrOHgvXLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzowMzozMlrOHg8eVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5MjQ2Mg==", "bodyText": "@cemnura Can you please have a single test class (say BearerTokenAuthenticationTest) combining both admin and user resources tests - to have KC started and stopped once and avoid some instability.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r504092462", "createdAt": "2020-10-13T16:27:41Z", "author": {"login": "sberyozkin"}, "path": "security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/UsersResourceTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.acme.security.openid.connect;\n+\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.junit.jupiter.api.Test;\n+\n+@QuarkusTest\n+@QuarkusTestResource(KeycloakServer.class)\n+public class UsersResourceTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2d0cb2643dbcca986b8466281173baf588a350b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIyNDY5MA==", "bodyText": "@sberyozkin gladly. Resolving ASAP.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r504224690", "createdAt": "2020-10-13T20:07:41Z", "author": {"login": "cemnura"}, "path": "security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/UsersResourceTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.acme.security.openid.connect;\n+\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.junit.jupiter.api.Test;\n+\n+@QuarkusTest\n+@QuarkusTestResource(KeycloakServer.class)\n+public class UsersResourceTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5MjQ2Mg=="}, "originalCommit": {"oid": "c2d0cb2643dbcca986b8466281173baf588a350b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwNzI4NQ==", "bodyText": "I combined the test classes into one class being BearerTokenAuthenticationTest.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r504307285", "createdAt": "2020-10-13T23:03:32Z", "author": {"login": "cemnura"}, "path": "security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/UsersResourceTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.acme.security.openid.connect;\n+\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.junit.jupiter.api.Test;\n+\n+@QuarkusTest\n+@QuarkusTestResource(KeycloakServer.class)\n+public class UsersResourceTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5MjQ2Mg=="}, "originalCommit": {"oid": "c2d0cb2643dbcca986b8466281173baf588a350b"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2390, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}