{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5ODMyNzU5", "number": 721, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQwNjoyOTo0OVrOFRRSsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQwNjozMDo0MlrOFRRTsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzNjUzNDI0OnYy", "diffSide": "RIGHT", "path": "reactive-messaging-http-quickstart/src/main/java/org/acme/reactivehttp/CostCollector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQwNjoyOTo0OVrOIXnOwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxMTozMzozOFrOIXx3ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTYzMDkxMw==", "bodyText": "Concurrency issue - sum can be accessed concurrently.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/721#discussion_r561630913", "createdAt": "2021-01-21T06:29:49Z", "author": {"login": "cescoffier"}, "path": "reactive-messaging-http-quickstart/src/main/java/org/acme/reactivehttp/CostCollector.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.acme.reactivehttp;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+\n+@Path(\"/cost-collector\")\n+@ApplicationScoped\n+public class CostCollector {\n+\n+    private double sum = 0;\n+\n+    @POST\n+    public void consumeCost(String valueAsString) {\n+        sum += Double.parseDouble(valueAsString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05c888c1f0887a7fb286f0f75c1c16e1a26b3d02"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTgwNTI0Mg==", "bodyText": "good point, I'll synchronize the stuff, this class does not illustrate the core of the quickstart and synchronization is more readable than while loop for updating an atomic reference", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/721#discussion_r561805242", "createdAt": "2021-01-21T11:33:38Z", "author": {"login": "michalszynkiewicz"}, "path": "reactive-messaging-http-quickstart/src/main/java/org/acme/reactivehttp/CostCollector.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.acme.reactivehttp;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+\n+@Path(\"/cost-collector\")\n+@ApplicationScoped\n+public class CostCollector {\n+\n+    private double sum = 0;\n+\n+    @POST\n+    public void consumeCost(String valueAsString) {\n+        sum += Double.parseDouble(valueAsString);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTYzMDkxMw=="}, "originalCommit": {"oid": "05c888c1f0887a7fb286f0f75c1c16e1a26b3d02"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzNjUzNjgxOnYy", "diffSide": "RIGHT", "path": "reactive-messaging-http-quickstart/src/main/java/org/acme/reactivehttp/CostConverter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQwNjozMDo0MlrOIXnQGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxMjozNjozNFrOIX0YiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTYzMTI1Ng==", "bodyText": "It might be just me, but I'm not a big fan of the 1. notation. I found 1.0 clearly, but again, that might be me, so feel free to ignore it.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/721#discussion_r561631256", "createdAt": "2021-01-21T06:30:42Z", "author": {"login": "cescoffier"}, "path": "reactive-messaging-http-quickstart/src/main/java/org/acme/reactivehttp/CostConverter.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.acme.reactivehttp;\n+\n+import org.eclipse.microprofile.reactive.messaging.Incoming;\n+import org.eclipse.microprofile.reactive.messaging.Outgoing;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * A bean consuming costs in multiple currencies and producing prices in EUR from them\n+ */\n+@ApplicationScoped\n+public class CostConverter {\n+\n+    private static final Map<String, Double> conversionRatios = new HashMap<>();\n+\n+    static {\n+        conversionRatios.put(\"CHF\", 0.93);\n+        conversionRatios.put(\"USD\", 0.84);\n+        conversionRatios.put(\"PLN\", 0.22);\n+        conversionRatios.put(\"EUR\", 1.);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05c888c1f0887a7fb286f0f75c1c16e1a26b3d02"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTgxMTE0Nw==", "bodyText": "I like 1. more but I changed it for you :D", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/721#discussion_r561811147", "createdAt": "2021-01-21T11:39:00Z", "author": {"login": "michalszynkiewicz"}, "path": "reactive-messaging-http-quickstart/src/main/java/org/acme/reactivehttp/CostConverter.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.acme.reactivehttp;\n+\n+import org.eclipse.microprofile.reactive.messaging.Incoming;\n+import org.eclipse.microprofile.reactive.messaging.Outgoing;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * A bean consuming costs in multiple currencies and producing prices in EUR from them\n+ */\n+@ApplicationScoped\n+public class CostConverter {\n+\n+    private static final Map<String, Double> conversionRatios = new HashMap<>();\n+\n+    static {\n+        conversionRatios.put(\"CHF\", 0.93);\n+        conversionRatios.put(\"USD\", 0.84);\n+        conversionRatios.put(\"PLN\", 0.22);\n+        conversionRatios.put(\"EUR\", 1.);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTYzMTI1Ng=="}, "originalCommit": {"oid": "05c888c1f0887a7fb286f0f75c1c16e1a26b3d02"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTg0NjQwOQ==", "bodyText": ":-D", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/721#discussion_r561846409", "createdAt": "2021-01-21T12:36:34Z", "author": {"login": "cescoffier"}, "path": "reactive-messaging-http-quickstart/src/main/java/org/acme/reactivehttp/CostConverter.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.acme.reactivehttp;\n+\n+import org.eclipse.microprofile.reactive.messaging.Incoming;\n+import org.eclipse.microprofile.reactive.messaging.Outgoing;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * A bean consuming costs in multiple currencies and producing prices in EUR from them\n+ */\n+@ApplicationScoped\n+public class CostConverter {\n+\n+    private static final Map<String, Double> conversionRatios = new HashMap<>();\n+\n+    static {\n+        conversionRatios.put(\"CHF\", 0.93);\n+        conversionRatios.put(\"USD\", 0.84);\n+        conversionRatios.put(\"PLN\", 0.22);\n+        conversionRatios.put(\"EUR\", 1.);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTYzMTI1Ng=="}, "originalCommit": {"oid": "05c888c1f0887a7fb286f0f75c1c16e1a26b3d02"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2313, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}