{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NTkyOTk4", "number": 518, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDo1NDowNFrODt_csg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDo1NDowNFrODt_csg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTUyMDUwOnYy", "diffSide": "RIGHT", "path": "kafka-quickstart/src/test/java/org/acme/kafka/KafkaResource.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDo1NDowNFrOF_vLsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNToyNDoyNVrOF_wn2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM3NzY0OQ==", "bodyText": "Actually, the returned Map could contain the property.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/518#discussion_r402377649", "createdAt": "2020-04-02T14:54:04Z", "author": {"login": "cescoffier"}, "path": "kafka-quickstart/src/test/java/org/acme/kafka/KafkaResource.java", "diffHunk": "@@ -9,19 +9,21 @@\n \n public class KafkaResource implements QuarkusTestResourceLifecycleManager {\n \n-    private final KafkaContainer KAFKA = new KafkaContainer();\n+    private KafkaContainer kafka;\n \n     @Override\n     public Map<String, String> start() {\n-        KafkaContainer KAFKA = new KafkaContainer();\n-        KAFKA.start();\n-        System.setProperty(\"kafka.bootstrap.servers\", KAFKA.getBootstrapServers());\n+        kafka = new KafkaContainer();\n+        kafka.start();\n+        System.setProperty(\"kafka.bootstrap.servers\", kafka.getBootstrapServers());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26ba14700c11bdf657a9df0212d5e2264b5dc03c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM4OTQ1OQ==", "bodyText": "Not sure what you're saying here?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/518#discussion_r402389459", "createdAt": "2020-04-02T15:08:53Z", "author": {"login": "gsmet"}, "path": "kafka-quickstart/src/test/java/org/acme/kafka/KafkaResource.java", "diffHunk": "@@ -9,19 +9,21 @@\n \n public class KafkaResource implements QuarkusTestResourceLifecycleManager {\n \n-    private final KafkaContainer KAFKA = new KafkaContainer();\n+    private KafkaContainer kafka;\n \n     @Override\n     public Map<String, String> start() {\n-        KafkaContainer KAFKA = new KafkaContainer();\n-        KAFKA.start();\n-        System.setProperty(\"kafka.bootstrap.servers\", KAFKA.getBootstrapServers());\n+        kafka = new KafkaContainer();\n+        kafka.start();\n+        System.setProperty(\"kafka.bootstrap.servers\", kafka.getBootstrapServers());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM3NzY0OQ=="}, "originalCommit": {"oid": "26ba14700c11bdf657a9df0212d5e2264b5dc03c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwMTI0Mg==", "bodyText": "Instead of setting the system property, you can do the following:\nreturn Collections.singletonMap(\"kafka.boostrap.servers\", kafka.getBootstrapServers());", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/518#discussion_r402401242", "createdAt": "2020-04-02T15:24:25Z", "author": {"login": "cescoffier"}, "path": "kafka-quickstart/src/test/java/org/acme/kafka/KafkaResource.java", "diffHunk": "@@ -9,19 +9,21 @@\n \n public class KafkaResource implements QuarkusTestResourceLifecycleManager {\n \n-    private final KafkaContainer KAFKA = new KafkaContainer();\n+    private KafkaContainer kafka;\n \n     @Override\n     public Map<String, String> start() {\n-        KafkaContainer KAFKA = new KafkaContainer();\n-        KAFKA.start();\n-        System.setProperty(\"kafka.bootstrap.servers\", KAFKA.getBootstrapServers());\n+        kafka = new KafkaContainer();\n+        kafka.start();\n+        System.setProperty(\"kafka.bootstrap.servers\", kafka.getBootstrapServers());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM3NzY0OQ=="}, "originalCommit": {"oid": "26ba14700c11bdf657a9df0212d5e2264b5dc03c"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2382, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}