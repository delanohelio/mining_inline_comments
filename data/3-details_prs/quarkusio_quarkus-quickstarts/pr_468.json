{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MjU4OTEx", "number": 468, "title": "OptaPlanner quickstart", "bodyText": "A quickstart that shows the new OptaPlanner Quarkus extension in action.\nIt includes a simple UI in a static JavaScript file, because (unlike Hibernate and RESTEasy) it's impossible to prove to people that OptaPlanner works, without some sort of visualization of the plan.\nCheck list:\n\n[V] targets the development branch\n[V] uses the 999-SNAPSHOT version of Quarkus\n[V] has tests (mvn clean test)\n[V] works in native (mvn clean package -Pnative)\n[V] has native tests (mvn clean verify -Pnative)\n(n/a) makes sure the documentation must not be updated\n(n/a) links the documentation update pull request (if needed)\n[V] updates or creates the README.md file (with build and run instructions)\n[V] For new quickstart, is located in the directory component-quickstart\n[V] For new quickstart, is added to the root pom.xml and README.md", "createdAt": "2020-02-21T12:27:22Z", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/468", "merged": true, "mergeCommit": {"oid": "6f93835a5e467feadf9a2f9a56e22c24b0f62949"}, "closed": true, "closedAt": "2020-02-24T15:38:55Z", "author": {"login": "ge0ffrey"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGjHlDgFqTM2Mjc5MTU5NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHeCGiABqjMwNjU0NzIzODk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNzkxNTk0", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/468#pullrequestreview-362791594", "createdAt": "2020-02-21T17:24:35Z", "commit": {"oid": "2d25cdccc0c10b7f0af96bc9680226c385a6db12"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d25cdccc0c10b7f0af96bc9680226c385a6db12", "author": {"user": {"login": "ge0ffrey", "name": "Geoffrey De Smet"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/2d25cdccc0c10b7f0af96bc9680226c385a6db12", "committedDate": "2020-02-21T12:12:26Z", "message": "Add unit tests + adjust readme"}, "afterCommit": {"oid": "433a67978ab9231f0c283404444a329bc8df0282", "author": {"user": {"login": "ge0ffrey", "name": "Geoffrey De Smet"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/433a67978ab9231f0c283404444a329bc8df0282", "committedDate": "2020-02-21T18:23:50Z", "message": "Add unit tests + adjust readme"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMjQ5NzEw", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/468#pullrequestreview-363249710", "createdAt": "2020-02-24T09:24:46Z", "commit": {"oid": "433a67978ab9231f0c283404444a329bc8df0282"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOToyNDo0NlrOFtZu5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOToyNDo0NlrOFtZu5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MTg0NQ==", "bodyText": "I like having the test dependencies at the bottom of the others. Maybe that's just an OCD of myself :-)", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/468#discussion_r383151845", "createdAt": "2020-02-24T09:24:46Z", "author": {"login": "ia3andy"}, "path": "optaplanner-quickstart/pom.xml", "diffHunk": "@@ -0,0 +1,158 @@\n+<?xml version=\"1.0\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.acme</groupId>\n+  <artifactId>optaplanner-quickstart</artifactId>\n+  <version>1.0-SNAPSHOT</version>\n+\n+  <properties>\n+    <quarkus.version>999-SNAPSHOT</quarkus.version>\n+    <compiler-plugin.version>3.8.1</compiler-plugin.version>\n+    <surefire-plugin.version>2.22.1</surefire-plugin.version>\n+    <docker-plugin.version>0.28.0</docker-plugin.version>\n+    <maven.compiler.target>1.8</maven.compiler.target>\n+    <maven.compiler.source>1.8</maven.compiler.source>\n+    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+  </properties>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>io.quarkus</groupId>\n+        <artifactId>quarkus-bom</artifactId>\n+        <version>${quarkus.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-optaplanner</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-optaplanner-jackson</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy-jackson</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-hibernate-orm-panache</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-jdbc-h2</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-junit5</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-test-h2</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.rest-assured</groupId>\n+      <artifactId>rest-assured</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>bootstrap</artifactId>\n+      <version>4.3.1</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>jquery</artifactId>\n+      <version>3.4.1</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>font-awesome</artifactId>\n+      <version>5.11.2</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>momentjs</artifactId>\n+      <version>2.24.0</version>\n+    </dependency>\n+  </dependencies>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "433a67978ab9231f0c283404444a329bc8df0282"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMjUwMjQ3", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/468#pullrequestreview-363250247", "createdAt": "2020-02-24T09:25:39Z", "commit": {"oid": "433a67978ab9231f0c283404444a329bc8df0282"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOToyNTozOVrOFtZwag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOToyODo1M1rOFtZ2fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MjIzNA==", "bodyText": "Any reason not to have this bean in its own package?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/468#discussion_r383152234", "createdAt": "2020-02-24T09:25:39Z", "author": {"login": "ia3andy"}, "path": "optaplanner-quickstart/src/main/java/org/acme/optaplanner/DemoDataGenerator.java", "diffHunk": "@@ -0,0 +1,193 @@\n+package org.acme.optaplanner;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "433a67978ab9231f0c283404444a329bc8df0282"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MzU2Nw==", "bodyText": "No equals and hashCode on data beans is risky :)", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/468#discussion_r383153567", "createdAt": "2020-02-24T09:28:25Z", "author": {"login": "ia3andy"}, "path": "optaplanner-quickstart/src/main/java/org/acme/optaplanner/domain/Lesson.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package org.acme.optaplanner.domain;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.ManyToOne;\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotNull;\n+\n+import io.quarkus.hibernate.orm.panache.PanacheEntityBase;\n+import org.optaplanner.core.api.domain.entity.PlanningEntity;\n+import org.optaplanner.core.api.domain.lookup.PlanningId;\n+import org.optaplanner.core.api.domain.variable.PlanningVariable;\n+\n+@PlanningEntity\n+@Entity\n+public class Lesson extends PanacheEntityBase {\n+\n+    @PlanningId\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n+    @NotNull\n+    private Long id;\n+\n+    @NotBlank\n+    private String subject;\n+    @NotBlank\n+    private String teacher;\n+    @NotBlank\n+    private String studentGroup;\n+\n+    @PlanningVariable(valueRangeProviderRefs = \"timeslotRange\")\n+    @ManyToOne\n+    private Timeslot timeslot;\n+    @PlanningVariable(valueRangeProviderRefs = \"roomRange\")\n+    @ManyToOne\n+    private Room room;\n+\n+    public Lesson() {\n+    }\n+\n+    public Lesson(String subject, String teacher, String studentGroup) {\n+        this.subject = subject.trim();\n+        this.teacher = teacher.trim();\n+        this.studentGroup = studentGroup.trim();\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public String getSubject() {\n+        return subject;\n+    }\n+\n+    public String getTeacher() {\n+        return teacher;\n+    }\n+\n+    public String getStudentGroup() {\n+        return studentGroup;\n+    }\n+\n+    public Timeslot getTimeslot() {\n+        return timeslot;\n+    }\n+\n+    public void setTimeslot(Timeslot timeslot) {\n+        this.timeslot = timeslot;\n+    }\n+\n+    public Room getRoom() {\n+        return room;\n+    }\n+\n+    public void setRoom(Room room) {\n+        this.room = room;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return subject + \"(\" + id + \")\";\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "433a67978ab9231f0c283404444a329bc8df0282"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MzY0Mw==", "bodyText": "No equals and hashCode on data beans is risky :)", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/468#discussion_r383153643", "createdAt": "2020-02-24T09:28:36Z", "author": {"login": "ia3andy"}, "path": "optaplanner-quickstart/src/main/java/org/acme/optaplanner/domain/Room.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.acme.optaplanner.domain;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotNull;\n+\n+import io.quarkus.hibernate.orm.panache.PanacheEntityBase;\n+\n+@Entity\n+public class Room extends PanacheEntityBase { // extends PanacheEntityBase because we want to annotate the id\n+\n+    //    @PlanningId\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n+    @NotNull\n+    private Long id;\n+\n+    @NotBlank\n+    private String name;\n+\n+    public Room() {\n+    }\n+\n+    public Room(String name) {\n+        this.name = name.trim();\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return name;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "433a67978ab9231f0c283404444a329bc8df0282"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MzczOA==", "bodyText": "No equals and hashCode on data beans is risky :)", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/468#discussion_r383153738", "createdAt": "2020-02-24T09:28:46Z", "author": {"login": "ia3andy"}, "path": "optaplanner-quickstart/src/main/java/org/acme/optaplanner/domain/TimeTable.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package org.acme.optaplanner.domain;\n+\n+import java.util.List;\n+\n+import org.optaplanner.core.api.domain.solution.PlanningEntityCollectionProperty;\n+import org.optaplanner.core.api.domain.solution.PlanningScore;\n+import org.optaplanner.core.api.domain.solution.PlanningSolution;\n+import org.optaplanner.core.api.domain.solution.drools.ProblemFactCollectionProperty;\n+import org.optaplanner.core.api.domain.valuerange.ValueRangeProvider;\n+import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScore;\n+import org.optaplanner.core.api.solver.SolverStatus;\n+\n+@PlanningSolution\n+public class TimeTable {\n+\n+    @ProblemFactCollectionProperty\n+    @ValueRangeProvider(id = \"timeslotRange\")\n+    private List<Timeslot> timeslotList;\n+    @ProblemFactCollectionProperty\n+    @ValueRangeProvider(id = \"roomRange\")\n+    private List<Room> roomList;\n+    @PlanningEntityCollectionProperty\n+    private List<Lesson> lessonList;\n+\n+    @PlanningScore\n+    private HardSoftScore score;\n+\n+    // Ignored by OptaPlanner, used by the UI to display solve or stop solving button\n+    private SolverStatus solverStatus;\n+\n+    public TimeTable() {\n+    }\n+\n+    public TimeTable(List<Timeslot> timeslotList, List<Room> roomList, List<Lesson> lessonList) {\n+        this.timeslotList = timeslotList;\n+        this.roomList = roomList;\n+        this.lessonList = lessonList;\n+    }\n+\n+    public List<Timeslot> getTimeslotList() {\n+        return timeslotList;\n+    }\n+\n+    public List<Room> getRoomList() {\n+        return roomList;\n+    }\n+\n+    public List<Lesson> getLessonList() {\n+        return lessonList;\n+    }\n+\n+    public HardSoftScore getScore() {\n+        return score;\n+    }\n+\n+    public SolverStatus getSolverStatus() {\n+        return solverStatus;\n+    }\n+\n+    public void setSolverStatus(SolverStatus solverStatus) {\n+        this.solverStatus = solverStatus;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "433a67978ab9231f0c283404444a329bc8df0282"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1Mzc5MQ==", "bodyText": "No equals and hashCode on data beans is risky :)", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/468#discussion_r383153791", "createdAt": "2020-02-24T09:28:53Z", "author": {"login": "ia3andy"}, "path": "optaplanner-quickstart/src/main/java/org/acme/optaplanner/domain/Timeslot.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package org.acme.optaplanner.domain;\n+\n+import java.time.DayOfWeek;\n+import java.time.LocalTime;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.validation.constraints.NotNull;\n+\n+import io.quarkus.hibernate.orm.panache.PanacheEntityBase;\n+\n+@Entity\n+public class Timeslot extends PanacheEntityBase {\n+\n+//    @PlanningId\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n+    @NotNull\n+    private Long id;\n+\n+    @NotNull\n+    private DayOfWeek dayOfWeek;\n+    @NotNull\n+    private LocalTime startTime;\n+    @NotNull\n+    private LocalTime endTime;\n+\n+    public Timeslot() {\n+    }\n+\n+    public Timeslot(DayOfWeek dayOfWeek, LocalTime startTime, LocalTime endTime) {\n+        this.dayOfWeek = dayOfWeek;\n+        this.startTime = startTime;\n+        this.endTime = endTime;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public DayOfWeek getDayOfWeek() {\n+        return dayOfWeek;\n+    }\n+\n+    public LocalTime getStartTime() {\n+        return startTime;\n+    }\n+\n+    public LocalTime getEndTime() {\n+        return endTime;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return dayOfWeek + \" \" + startTime.toString();\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "433a67978ab9231f0c283404444a329bc8df0282"}, "originalPosition": 59}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3622cf5a6dcd753f582e183819d3e15ab3bdce2d", "author": {"user": {"login": "ge0ffrey", "name": "Geoffrey De Smet"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/3622cf5a6dcd753f582e183819d3e15ab3bdce2d", "committedDate": "2020-02-24T12:27:14Z", "message": "Move test dependencies down + create \"bootstrap\" package"}, "afterCommit": {"oid": "fbbd1cd53595c1ac160f8e24b1539c74c6828a6d", "author": {"user": {"login": "MusaTalluzi", "name": "Musa Talluzi"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/fbbd1cd53595c1ac160f8e24b1539c74c6828a6d", "committedDate": "2020-02-24T12:28:27Z", "message": "OptaPlanner quickstart"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbbd1cd53595c1ac160f8e24b1539c74c6828a6d", "author": {"user": {"login": "MusaTalluzi", "name": "Musa Talluzi"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/fbbd1cd53595c1ac160f8e24b1539c74c6828a6d", "committedDate": "2020-02-24T12:28:27Z", "message": "OptaPlanner quickstart"}, "afterCommit": {"oid": "9aca0aedb2247a054c14d75ceb2bdded50abbe5d", "author": {"user": {"login": "MusaTalluzi", "name": "Musa Talluzi"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/9aca0aedb2247a054c14d75ceb2bdded50abbe5d", "committedDate": "2020-02-24T12:35:06Z", "message": "OptaPlanner quickstart"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMzk5NjU3", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/468#pullrequestreview-363399657", "createdAt": "2020-02-24T13:49:03Z", "commit": {"oid": "9aca0aedb2247a054c14d75ceb2bdded50abbe5d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMzo0OTowM1rOFthMLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMzo0OTowM1rOFthMLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3NDAzMQ==", "bodyText": "Could we do this in one line/cmd without changing dir?", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/468#discussion_r383274031", "createdAt": "2020-02-24T13:49:03Z", "author": {"login": "ia3andy"}, "path": "optaplanner-quickstart/README.md", "diffHunk": "@@ -0,0 +1,89 @@\n+# Quarkus demo: OptaPlanner AI with Hibernate ORM and RESTEasy\n+\n+This project contains a [Quarkus](https://quarkus.io/) application\n+with [OptaPlanner](https://www.optaplanner.org/)'s constraint solving Artificial Intelligence (AI)\n+integrated with a database and exposed through a REST API.\n+\n+This web application optimizes a school timetable for students and teachers.\n+It assigns `Lesson` instances to `Timeslot` and `Room` instances automatically\n+by using AI to adhere to hard and soft scheduling constraints, such as:\n+\n+* A room can have at most one lesson at the same time.\n+* A teacher can teach at most one lesson at the same time.\n+* A student can attend at most one lesson at the same time.\n+* A teacher prefers to teach in a single room.\n+* A teacher prefers to teach sequential lessons and dislikes gaps between lessons.\n+\n+## Run the application with live coding\n+\n+1. Start the application:\n+\n+    ```\n+    ./mvnw quarkus:dev\n+    ```\n+\n+2. Visit http://localhost:8080 in your browser.\n+3. Click on the _Solve_ button.\n+\n+Now try live coding:\n+\n+1. Make some changes in the source code\n+2. Refresh your browser (F5).\n+\n+Those changes are immediately applied.\n+\n+## Package and run the application\n+\n+When you're done iterating in `quarkus:dev` mode, run the application as a conventional jar file.\n+\n+1. Compile it:\n+\n+    ```\n+    ./mvnw package\n+    ```\n+\n+2. run it:\n+\n+    ```\n+    java -jar ./target/optaplanner-quickstart-1.0-SNAPSHOT-runner.jar\n+    ```\n+\n+Look at how fast it boots!\n+\n+## Run a native executable\n+\n+You can also create a native executable from this application without making any\n+source code changes. A native executable removes the dependency on the JVM:\n+everything needed to run the application on the target platform is included in\n+the executable, allowing the application to run with minimal resource overhead.\n+\n+Because the quarkus H2 extension does not support compiling the embedded database engine into native images,\n+you need to run the H2 server locally first:\n+\n+ 1. Download the [H2 engine](http://www.h2database.com/html/download.html) (Platform-independent zip)\n+ \n+ 2. Unzip it.\n+\n+ 3. Start H2 server with the option `-ifNotExists` (this is not recommended in production but saves you from creating the database manually)\n+\n+    ```shell script\n+    cd h2/bin\n+    java -cp h2*.jar org.h2.tools.Server -ifNotExists", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9aca0aedb2247a054c14d75ceb2bdded50abbe5d"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc8392232a8ca5d1f013fd58ac64edc5aa9f3772", "author": {"user": {"login": "MusaTalluzi", "name": "Musa Talluzi"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/fc8392232a8ca5d1f013fd58ac64edc5aa9f3772", "committedDate": "2020-02-24T14:02:50Z", "message": "OptaPlanner quickstart"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9aca0aedb2247a054c14d75ceb2bdded50abbe5d", "author": {"user": {"login": "MusaTalluzi", "name": "Musa Talluzi"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/9aca0aedb2247a054c14d75ceb2bdded50abbe5d", "committedDate": "2020-02-24T12:35:06Z", "message": "OptaPlanner quickstart"}, "afterCommit": {"oid": "fc8392232a8ca5d1f013fd58ac64edc5aa9f3772", "author": {"user": {"login": "MusaTalluzi", "name": "Musa Talluzi"}}, "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/fc8392232a8ca5d1f013fd58ac64edc5aa9f3772", "committedDate": "2020-02-24T14:02:50Z", "message": "OptaPlanner quickstart"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3424, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}