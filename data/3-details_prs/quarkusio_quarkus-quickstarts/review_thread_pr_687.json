{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MTUwMDk5", "number": 687, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNjowNToyNVrOEqk9sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNjowNToyNVrOEqk9sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMDgxMjY2OnYy", "diffSide": "RIGHT", "path": "kafka-streams-quickstart/producer/src/main/java/org/acme/kafka/streams/producer/generator/ValuesGenerator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNjowNToyNVrOHc3GFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzo0NjoyNVrOHdHaOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAyNDg1Mg==", "bodyText": "Minor - 2 things:\n\nwe can create a Multi directly from a Stream (Multi.createFrom().items(stream)), it will iterate according to demands, which is often better\nI don't believe we need to use KafkaRecord, we can use Record directly (depends who consume the stream).\n\nCan you check with:\npublic Multi<Record<Integer, String>> weatherStations() {\n   return Multi.createFrom().items(stations.stream()\n      .map(s -> Record.of(s.id, \"{ \\\"id\\\" : \" + s.id + \", \\\"name\\\" : \\\"\" + s.name + \"\\\" }\"))\n   );\n}", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/687#discussion_r500024852", "createdAt": "2020-10-06T06:05:25Z", "author": {"login": "cescoffier"}, "path": "kafka-streams-quickstart/producer/src/main/java/org/acme/kafka/streams/producer/generator/ValuesGenerator.java", "diffHunk": "@@ -60,13 +60,13 @@\n     }\n \n     @Outgoing(\"weather-stations\")\n-    public Flowable<KafkaRecord<Integer, String>> weatherStations() {\n+    public Multi<KafkaRecord<Integer, String>> weatherStations() {\n         List<KafkaRecord<Integer, String>> stationsAsJson = stations.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71bde39b9af3afd8df4a3157be48db178df6559f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIzNTU2Nw==", "bodyText": "@cescoffier, could you please let me know which Record you mean in this case? Did not find this class right away.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/687#discussion_r500235567", "createdAt": "2020-10-06T12:29:53Z", "author": {"login": "alexey-anufriev"}, "path": "kafka-streams-quickstart/producer/src/main/java/org/acme/kafka/streams/producer/generator/ValuesGenerator.java", "diffHunk": "@@ -60,13 +60,13 @@\n     }\n \n     @Outgoing(\"weather-stations\")\n-    public Flowable<KafkaRecord<Integer, String>> weatherStations() {\n+    public Multi<KafkaRecord<Integer, String>> weatherStations() {\n         List<KafkaRecord<Integer, String>> stationsAsJson = stations.stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAyNDg1Mg=="}, "originalCommit": {"oid": "71bde39b9af3afd8df4a3157be48db178df6559f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MjE1NQ==", "bodyText": "This one: io.smallrye.reactive.messaging.kafka.Record. It's quite new, so be sure you have the latest Quarkus master.", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/687#discussion_r500292155", "createdAt": "2020-10-06T13:46:25Z", "author": {"login": "cescoffier"}, "path": "kafka-streams-quickstart/producer/src/main/java/org/acme/kafka/streams/producer/generator/ValuesGenerator.java", "diffHunk": "@@ -60,13 +60,13 @@\n     }\n \n     @Outgoing(\"weather-stations\")\n-    public Flowable<KafkaRecord<Integer, String>> weatherStations() {\n+    public Multi<KafkaRecord<Integer, String>> weatherStations() {\n         List<KafkaRecord<Integer, String>> stationsAsJson = stations.stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAyNDg1Mg=="}, "originalCommit": {"oid": "71bde39b9af3afd8df4a3157be48db178df6559f"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2304, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}