{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNDI3NDU1", "number": 8527, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozNTo0MlrOFAvG7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjoyNToyMFrOFCTLyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzE2MTQxOnYy", "diffSide": "RIGHT", "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozNTo0MlrOH_K51Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozNTo0MlrOH_K51Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwMDk4MQ==", "bodyText": "Change to findFirst() so when we support multi-inheritance first project will be returned", "url": "https://github.com/enonic/xp/pull/8527#discussion_r536000981", "createdAt": "2020-12-04T10:35:42Z", "author": {"login": "rymsha"}, "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java", "diffHunk": "@@ -39,6 +39,14 @@ public static Projects from( Repositories repositories )\n             build();\n     }\n \n+    public Project get( final ProjectName name )\n+    {\n+        return this.stream().\n+            filter( project -> project.getName().equals( name ) ).\n+            findAny().", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0d8553e79f24ef373eaec0b86cf01360457686d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzI1NzE0OnYy", "diffSide": "RIGHT", "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/ProjectResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDo1ODoyOFrOH_Lxnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDo1ODoyOFrOH_Lxnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAxNTI2Mw==", "bodyText": "I think we need graph method in projectService. This one does not follow spec #8413 (comment)", "url": "https://github.com/enonic/xp/pull/8527#discussion_r536015263", "createdAt": "2020-12-04T10:58:28Z", "author": {"login": "rymsha"}, "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/ProjectResource.java", "diffHunk": "@@ -184,6 +192,47 @@ public ProjectJson get( final @QueryParam(\"name\") String projectNameValue )\n         return doCreateJson( this.projectService.get( projectName ) );\n     }\n \n+    @GET\n+    @Path(\"getTree\")\n+    public List<ProjectParentJson> getTree( final @QueryParam(\"name\") String projectNameValue )\n+    {\n+        final List<Project> result = new ArrayList<>();\n+        final Projects projects = adminContext().callWith( () -> this.projectService.list() );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0d8553e79f24ef373eaec0b86cf01360457686d"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MzM5Nzg3OnYy", "diffSide": "RIGHT", "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDo0MToxNVrOIAgeRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMTo0NDoxN1rOIAi2-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwMjk1MA==", "bodyText": "Is it OK to extend lmmutavleList here?", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537402950", "createdAt": "2020-12-07T10:41:15Z", "author": {"login": "rymsha"}, "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.enonic.xp.admin.impl.rest.resource.project.json;\n+\n+import java.util.stream.Collectors;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import com.enonic.xp.project.ProjectGraph;\n+import com.enonic.xp.support.AbstractImmutableEntityList;\n+\n+public final class ProjectGraphJson\n+    extends AbstractImmutableEntityList<ProjectGraphEntryJson>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ0MjA0Mw==", "bodyText": "we do the same with AccessControlEntriesJson", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537442043", "createdAt": "2020-12-07T11:44:17Z", "author": {"login": "vbradnitski"}, "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.enonic.xp.admin.impl.rest.resource.project.json;\n+\n+import java.util.stream.Collectors;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import com.enonic.xp.project.ProjectGraph;\n+import com.enonic.xp.support.AbstractImmutableEntityList;\n+\n+public final class ProjectGraphJson\n+    extends AbstractImmutableEntityList<ProjectGraphEntryJson>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwMjk1MA=="}, "originalCommit": {"oid": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MzQwODcwOnYy", "diffSide": "RIGHT", "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDo0MzozM1rOIAgkXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDo0MzozM1rOIAgkXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwNDUxMA==", "bodyText": "Utility methods don't belong to here.", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537404510", "createdAt": "2020-12-07T10:43:33Z", "author": {"login": "rymsha"}, "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java", "diffHunk": "@@ -39,6 +39,14 @@ public static Projects from( Repositories repositories )\n             build();\n     }\n \n+    public Project get( final ProjectName name )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MzQxOTI0OnYy", "diffSide": "RIGHT", "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDo0NTo0MFrOIAgqTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDo0NTo0MFrOIAgqTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwNjAzMA==", "bodyText": "It has multiple parents in graph", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537406030", "createdAt": "2020-12-07T10:45:40Z", "author": {"login": "rymsha"}, "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package com.enonic.xp.project;\n+\n+import java.util.Objects;\n+\n+import com.google.common.base.Preconditions;\n+\n+import com.enonic.xp.annotation.PublicApi;\n+\n+@PublicApi\n+public final class ProjectGraphEntry\n+{\n+    private final ProjectName name;\n+\n+    private final ProjectName parent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MzQyMTc4OnYy", "diffSide": "RIGHT", "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDo0NjoxM1rOIAgrvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDo0NjoxM1rOIAgrvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwNjM5Nw==", "bodyText": "This is service responsibility to convert", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537406397", "createdAt": "2020-12-07T10:46:13Z", "author": {"login": "rymsha"}, "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package com.enonic.xp.project;\n+\n+import java.util.Objects;\n+\n+import com.google.common.base.Preconditions;\n+\n+import com.enonic.xp.annotation.PublicApi;\n+\n+@PublicApi\n+public final class ProjectGraphEntry\n+{\n+    private final ProjectName name;\n+\n+    private final ProjectName parent;\n+\n+    private ProjectGraphEntry( Builder builder )\n+    {\n+        this.name = builder.name;\n+        this.parent = builder.parent;\n+    }\n+\n+    public static Builder create()\n+    {\n+        return new Builder();\n+    }\n+\n+    public static ProjectGraphEntry from( final Project project )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MzQyNjA4OnYy", "diffSide": "RIGHT", "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDo0NzowOVrOIAguIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDo0NzowOVrOIAguIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwNzAwOQ==", "bodyText": "I'm not sure we need equality methods in this class", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537407009", "createdAt": "2020-12-07T10:47:09Z", "author": {"login": "rymsha"}, "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package com.enonic.xp.project;\n+\n+import java.util.Objects;\n+\n+import com.google.common.base.Preconditions;\n+\n+import com.enonic.xp.annotation.PublicApi;\n+\n+@PublicApi\n+public final class ProjectGraphEntry\n+{\n+    private final ProjectName name;\n+\n+    private final ProjectName parent;\n+\n+    private ProjectGraphEntry( Builder builder )\n+    {\n+        this.name = builder.name;\n+        this.parent = builder.parent;\n+    }\n+\n+    public static Builder create()\n+    {\n+        return new Builder();\n+    }\n+\n+    public static ProjectGraphEntry from( final Project project )\n+    {\n+        if ( project == null )\n+        {\n+            return null;\n+        }\n+\n+        return ProjectGraphEntry.create().\n+            name( project.getName() ).\n+            parent( project.getParent() ).\n+            build();\n+    }\n+\n+    public ProjectName getName()\n+    {\n+        return name;\n+    }\n+\n+    public ProjectName getParent()\n+    {\n+        return parent;\n+    }\n+\n+    @Override\n+    public boolean equals( final Object o )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MzkyMjAzOnYy", "diffSide": "RIGHT", "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraph.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjo0NzoyN1rOIAlJ_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjo0NzoyN1rOIAlJ_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3OTY3Nw==", "bodyText": "delete", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537479677", "createdAt": "2020-12-07T12:47:27Z", "author": {"login": "rymsha"}, "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraph.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.enonic.xp.project;\n+\n+import java.util.Collection;\n+\n+import com.google.common.base.MoreObjects;\n+import com.google.common.collect.ImmutableList;\n+\n+import com.enonic.xp.annotation.PublicApi;\n+import com.enonic.xp.support.AbstractImmutableEntityList;\n+\n+@PublicApi\n+public final class ProjectGraph\n+    extends AbstractImmutableEntityList<ProjectGraphEntry>\n+{\n+    private ProjectGraph( final Builder builder )\n+    {\n+        super( builder.projects.build() );\n+    }\n+\n+    public static ProjectGraph empty()\n+    {\n+        return create().build();\n+    }\n+\n+\n+    public static Builder create()\n+    {\n+        return new Builder();\n+    }\n+\n+    @Override\n+    public String toString()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Mzk0MjY5OnYy", "diffSide": "RIGHT", "path": "modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjo1MjoyMVrOIAlWGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjo1MjoyMVrOIAlWGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ4Mjc3Ng==", "bodyText": "no need", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537482776", "createdAt": "2020-12-07T12:52:21Z", "author": {"login": "rymsha"}, "path": "modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java", "diffHunk": "@@ -252,6 +260,53 @@ public Projects list()\n         } );\n     }\n \n+    @Override\n+    public ProjectGraph graph( final ProjectName projectName )\n+    {\n+        final List<Project> result = new ArrayList<>();\n+\n+        final Project targetProject = this.get( projectName );\n+\n+        if ( targetProject == null )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Mzk3ODgwOnYy", "diffSide": "RIGHT", "path": "modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMzowMDo0OFrOIAlrAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMzowMDo0OFrOIAlrAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ4ODEzMA==", "bodyText": "do it in graph", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537488130", "createdAt": "2020-12-07T13:00:48Z", "author": {"login": "rymsha"}, "path": "modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java", "diffHunk": "@@ -260,12 +315,25 @@ private Projects doList()\n     @Override\n     public Project get( final ProjectName projectName )\n     {\n-        return callWithGetContext( () -> doGet( projectName ), projectName );\n+        try", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NjMyNTQ0OnYy", "diffSide": "RIGHT", "path": "modules/itest/itest-core/src/test/java/com/enonic/xp/core/project/ProjectServiceImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMToxNzoxOFrOIA7GPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMToxNzoxOFrOIA7GPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgzOTE2NQ==", "bodyText": "Static import helps", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537839165", "createdAt": "2020-12-07T21:17:18Z", "author": {"login": "rymsha"}, "path": "modules/itest/itest-core/src/test/java/com/enonic/xp/core/project/ProjectServiceImplTest.java", "diffHunk": "@@ -807,6 +810,37 @@ void modify_default_project_permissions()\n         } );\n     }\n \n+    @Test\n+    void graph()\n+    {\n+        final Project project1 = ADMIN_CONTEXT.callWith( () -> doCreateProject( ProjectName.from( \"project1\" ), null, true, null ) );\n+        final Project project2 =\n+            ADMIN_CONTEXT.callWith( () -> doCreateProject( ProjectName.from( \"project2\" ), null, true, project1.getName() ) );\n+        final Project project3 =\n+            ADMIN_CONTEXT.callWith( () -> doCreateProject( ProjectName.from( \"project3\" ), null, true, project2.getName() ) );\n+        final Project project4 =\n+            ADMIN_CONTEXT.callWith( () -> doCreateProject( ProjectName.from( \"project4\" ), null, true, project2.getName() ) );\n+        final Project project5 =\n+            ADMIN_CONTEXT.callWith( () -> doCreateProject( ProjectName.from( \"project5\" ), null, true, project4.getName() ) );\n+\n+        final ProjectGraph graph1 = ADMIN_CONTEXT.callWith( () -> projectService.graph( project1.getName() ) );\n+\n+        assertEquals( 5, graph1.getSize() );\n+        assertThat( graph1.getList() ).\n+            extracting( \"name\", \"parent\" ).\n+            containsExactly( Tuple.tuple( project1.getName(), null ), Tuple.tuple( project2.getName(), project1.getName() ),\n+                             Tuple.tuple( project4.getName(), project2.getName() ), Tuple.tuple( project3.getName(), project2.getName() ),\n+                             Tuple.tuple( project5.getName(), project4.getName() ) );\n+\n+        final ProjectGraph graph2 = ADMIN_CONTEXT.callWith( () -> projectService.graph( project4.getName() ) );\n+\n+        assertEquals( 4, graph2.getSize() );\n+        assertThat( graph2.getList() ).\n+            extracting( \"name\", \"parent\" ).\n+            containsExactly( Tuple.tuple( project1.getName(), null ), Tuple.tuple( project2.getName(), project1.getName() ),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a0d12be89efd792bb1c9613ed340265e1463e6"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NjMzNDU2OnYy", "diffSide": "RIGHT", "path": "modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMToxOTo1MlrOIA7LwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMToxOTo1MlrOIA7LwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0MDU3Nw==", "bodyText": "Don't we want exception here?", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537840577", "createdAt": "2020-12-07T21:19:52Z", "author": {"login": "rymsha"}, "path": "modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java", "diffHunk": "@@ -435,6 +504,14 @@ private BufferedImage scaleWidth( final BufferedImage source, final int sizeInt\n         return ImageHelper.getScaledInstance( source, newWidth.intValue(), newHeight.intValue() );\n     }\n \n+    private Project getProject( final Projects projects, final ProjectName name )\n+    {\n+        return projects.stream().\n+            filter( project -> project.getName().equals( name ) ).\n+            findFirst().\n+            orElse( null );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a0d12be89efd792bb1c9613ed340265e1463e6"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NjM0OTYzOnYy", "diffSide": "RIGHT", "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMToyMzoyOFrOIA7UWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMToyMzoyOFrOIA7UWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0Mjc3Nw==", "bodyText": "Don't use guava when not necessarily, please. Unmodifiable list works here just fine", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537842777", "createdAt": "2020-12-07T21:23:28Z", "author": {"login": "rymsha"}, "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package com.enonic.xp.admin.impl.rest.resource.project.json;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import com.enonic.xp.project.ProjectGraph;\n+\n+public final class ProjectGraphJson\n+{\n+    private final List<ProjectGraphEntryJson> entries;\n+\n+    public ProjectGraphJson( final ProjectGraph projectGraph )\n+    {\n+        this.entries = projectGraph != null ? ImmutableList.copyOf( projectGraph.stream().", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a0d12be89efd792bb1c9613ed340265e1463e6"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NjM1Mzg1OnYy", "diffSide": "RIGHT", "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraph.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMToyNDozMlrOIA7W5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMToyNDozMlrOIA7W5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0MzQyOA==", "bodyText": "Never used? Not needed.", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537843428", "createdAt": "2020-12-07T21:24:32Z", "author": {"login": "rymsha"}, "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraph.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package com.enonic.xp.project;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import com.enonic.xp.annotation.PublicApi;\n+import com.enonic.xp.support.AbstractImmutableEntityList;\n+\n+@PublicApi\n+public final class ProjectGraph\n+    extends AbstractImmutableEntityList<ProjectGraphEntry>\n+{\n+    private ProjectGraph( final Builder builder )\n+    {\n+        super( builder.projects.build() );\n+    }\n+\n+    public static ProjectGraph empty()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a0d12be89efd792bb1c9613ed340265e1463e6"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTU1Nzg3OnYy", "diffSide": "RIGHT", "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/ProjectResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjoyNToyMFrOIBXu9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjozMjozOFrOIBYGeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMwODM0Mg==", "bodyText": "I suggest to use tree instead off getTree, because get presents in the HTTP method", "url": "https://github.com/enonic/xp/pull/8527#discussion_r538308342", "createdAt": "2020-12-08T12:25:20Z", "author": {"login": "anatol-sialitski"}, "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/ProjectResource.java", "diffHunk": "@@ -184,6 +186,14 @@ public ProjectJson get( final @QueryParam(\"name\") String projectNameValue )\n         return doCreateJson( this.projectService.get( projectName ) );\n     }\n \n+    @GET\n+    @Path(\"getTree\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "166362b4d47aa64c5b9312be1b0cfd80bd517082"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMxNDM2MA==", "bodyText": "If we have list this one should be called tree, I agree", "url": "https://github.com/enonic/xp/pull/8527#discussion_r538314360", "createdAt": "2020-12-08T12:32:38Z", "author": {"login": "rymsha"}, "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/ProjectResource.java", "diffHunk": "@@ -184,6 +186,14 @@ public ProjectJson get( final @QueryParam(\"name\") String projectNameValue )\n         return doCreateJson( this.projectService.get( projectName ) );\n     }\n \n+    @GET\n+    @Path(\"getTree\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMwODM0Mg=="}, "originalCommit": {"oid": "166362b4d47aa64c5b9312be1b0cfd80bd517082"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 932, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}