{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMTQwMTM1", "number": 8116, "title": "System dump archive issue #8106", "bodyText": "", "createdAt": "2020-05-26T11:11:58Z", "url": "https://github.com/enonic/xp/pull/8116", "merged": true, "mergeCommit": {"oid": "fd3dbe4f6ec590ebc20ffc4474c739c796070574"}, "closed": true, "closedAt": "2020-05-27T09:30:03Z", "author": {"login": "anatol-sialitski"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclGV3yAFqTQxODM5NzQ3NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABclVrIkAFqTQxOTAwNjk3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4Mzk3NDc1", "url": "https://github.com/enonic/xp/pull/8116#pullrequestreview-418397475", "createdAt": "2020-05-26T15:10:57Z", "commit": {"oid": "7242f06574984b1dbb2a572897a22a95074e961e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNToxMDo1N1rOGai5XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNToyMjo0M1rOGajc8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ4NzkwMA==", "bodyText": "You may simplify code a bit and return ZipDumpReader right here", "url": "https://github.com/enonic/xp/pull/8116#discussion_r430487900", "createdAt": "2020-05-26T15:10:57Z", "author": {"login": "rymsha"}, "path": "modules/core/core-repo/src/main/java/com/enonic/xp/repo/impl/dump/reader/ZipDumpReader.java", "diffHunk": "@@ -39,14 +46,56 @@ public static ZipDumpReader create( SystemLoadListener listener, final Path base\n             final SeekableByteChannel seekableByteChannel =\n                 Files.newByteChannel( basePath.resolve( dumpName + \".zip\" ), EnumSet.of( StandardOpenOption.READ ) );\n             final ZipFile zipFile = new ZipFile( seekableByteChannel );\n-            return new ZipDumpReader( listener, PathRef.of( dumpName ), zipFile );\n+\n+            return create( listener, dumpName, zipFile );\n         }\n         catch ( IOException e )\n         {\n             throw new UncheckedIOException( e );\n         }\n     }\n \n+    private static ZipDumpReader create( final SystemLoadListener listener, final String dumpName, final ZipFile zipFile )\n+    {\n+        if ( zipFile.getEntry( \"dump.json\" ) != null )\n+        {\n+            return new ZipDumpReader( listener, PathRef.of(), zipFile );\n+        }\n+        else if ( zipFile.getEntry( dumpName + \"/dump.json\" ) != null )\n+        {\n+            return new ZipDumpReader( listener, PathRef.of( dumpName ), zipFile );\n+        }\n+        else\n+        {\n+            String rootDumpDir = null;\n+\n+            final Enumeration<ZipArchiveEntry> entries = zipFile.getEntries();\n+\n+            while ( entries.hasMoreElements() )\n+            {\n+                final ZipArchiveEntry entry = entries.nextElement();\n+\n+                final Matcher matcher = ROOT_DUMP_DIR_PATTERN.matcher( entry.getName() );\n+\n+                if ( matcher.find() )\n+                {\n+                    rootDumpDir = matcher.group( 1 );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7242f06574984b1dbb2a572897a22a95074e961e"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ5MzU1MQ==", "bodyText": "Missing $ at the and. Without it a/dump.jsons would match, for ex. (this is why it is also better to use matches\nAlso . must be escaped", "url": "https://github.com/enonic/xp/pull/8116#discussion_r430493551", "createdAt": "2020-05-26T15:18:49Z", "author": {"login": "rymsha"}, "path": "modules/core/core-repo/src/main/java/com/enonic/xp/repo/impl/dump/reader/ZipDumpReader.java", "diffHunk": "@@ -19,11 +22,15 @@\n import com.enonic.xp.dump.SystemLoadListener;\n import com.enonic.xp.repo.impl.dump.DefaultFilePaths;\n import com.enonic.xp.repo.impl.dump.PathRef;\n+import com.enonic.xp.repo.impl.dump.RepoLoadException;\n import com.enonic.xp.repo.impl.dump.blobstore.ZipDumpReadBlobStore;\n \n public class ZipDumpReader\n     extends AbstractDumpReader\n {\n+\n+    private static final Pattern ROOT_DUMP_DIR_PATTERN = Pattern.compile( \"^([^/]+)\\\\/dump.json\" );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7242f06574984b1dbb2a572897a22a95074e961e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ5NzAwOA==", "bodyText": "I would prefer matches() for clarity.", "url": "https://github.com/enonic/xp/pull/8116#discussion_r430497008", "createdAt": "2020-05-26T15:22:43Z", "author": {"login": "rymsha"}, "path": "modules/core/core-repo/src/main/java/com/enonic/xp/repo/impl/dump/reader/ZipDumpReader.java", "diffHunk": "@@ -39,14 +46,56 @@ public static ZipDumpReader create( SystemLoadListener listener, final Path base\n             final SeekableByteChannel seekableByteChannel =\n                 Files.newByteChannel( basePath.resolve( dumpName + \".zip\" ), EnumSet.of( StandardOpenOption.READ ) );\n             final ZipFile zipFile = new ZipFile( seekableByteChannel );\n-            return new ZipDumpReader( listener, PathRef.of( dumpName ), zipFile );\n+\n+            return create( listener, dumpName, zipFile );\n         }\n         catch ( IOException e )\n         {\n             throw new UncheckedIOException( e );\n         }\n     }\n \n+    private static ZipDumpReader create( final SystemLoadListener listener, final String dumpName, final ZipFile zipFile )\n+    {\n+        if ( zipFile.getEntry( \"dump.json\" ) != null )\n+        {\n+            return new ZipDumpReader( listener, PathRef.of(), zipFile );\n+        }\n+        else if ( zipFile.getEntry( dumpName + \"/dump.json\" ) != null )\n+        {\n+            return new ZipDumpReader( listener, PathRef.of( dumpName ), zipFile );\n+        }\n+        else\n+        {\n+            String rootDumpDir = null;\n+\n+            final Enumeration<ZipArchiveEntry> entries = zipFile.getEntries();\n+\n+            while ( entries.hasMoreElements() )\n+            {\n+                final ZipArchiveEntry entry = entries.nextElement();\n+\n+                final Matcher matcher = ROOT_DUMP_DIR_PATTERN.matcher( entry.getName() );\n+\n+                if ( matcher.find() )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7242f06574984b1dbb2a572897a22a95074e961e"}, "originalPosition": 64}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7242f06574984b1dbb2a572897a22a95074e961e", "author": {"user": {"login": "anatol-sialitski", "name": null}}, "url": "https://github.com/enonic/xp/commit/7242f06574984b1dbb2a572897a22a95074e961e", "committedDate": "2020-05-26T11:10:45Z", "message": "System dump archive NullPointerException when loading system dump from archive #8106"}, "afterCommit": {"oid": "6a8daa90b26a6050cc3ae65ea5d63991c67dabd5", "author": {"user": {"login": "anatol-sialitski", "name": null}}, "url": "https://github.com/enonic/xp/commit/6a8daa90b26a6050cc3ae65ea5d63991c67dabd5", "committedDate": "2020-05-26T18:45:40Z", "message": "System dump archive NullPointerException when loading system dump from archive #8106"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c64c5ea81cb2797e6f07d930668f8219f47499f", "author": {"user": {"login": "anatol-sialitski", "name": null}}, "url": "https://github.com/enonic/xp/commit/2c64c5ea81cb2797e6f07d930668f8219f47499f", "committedDate": "2020-05-26T19:35:27Z", "message": "System dump archive NullPointerException when loading system dump from archive #8106"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a8daa90b26a6050cc3ae65ea5d63991c67dabd5", "author": {"user": {"login": "anatol-sialitski", "name": null}}, "url": "https://github.com/enonic/xp/commit/6a8daa90b26a6050cc3ae65ea5d63991c67dabd5", "committedDate": "2020-05-26T18:45:40Z", "message": "System dump archive NullPointerException when loading system dump from archive #8106"}, "afterCommit": {"oid": "2c64c5ea81cb2797e6f07d930668f8219f47499f", "author": {"user": {"login": "anatol-sialitski", "name": null}}, "url": "https://github.com/enonic/xp/commit/2c64c5ea81cb2797e6f07d930668f8219f47499f", "committedDate": "2020-05-26T19:35:27Z", "message": "System dump archive NullPointerException when loading system dump from archive #8106"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4ODgzMjMy", "url": "https://github.com/enonic/xp/pull/8116#pullrequestreview-418883232", "createdAt": "2020-05-27T06:13:12Z", "commit": {"oid": "2c64c5ea81cb2797e6f07d930668f8219f47499f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MDA2OTc2", "url": "https://github.com/enonic/xp/pull/8116#pullrequestreview-419006976", "createdAt": "2020-05-27T09:16:24Z", "commit": {"oid": "2c64c5ea81cb2797e6f07d930668f8219f47499f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4414, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}