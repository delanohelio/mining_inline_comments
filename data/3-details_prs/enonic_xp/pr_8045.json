{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NDkxMTk5", "number": 8045, "title": "Implement upload of project icon #8044", "bodyText": "", "createdAt": "2020-04-22T19:27:41Z", "url": "https://github.com/enonic/xp/pull/8045", "merged": true, "mergeCommit": {"oid": "e51b6a0eb31cb87fb14e83ba303fc1c166d67a5e"}, "closed": true, "closedAt": "2020-04-27T08:25:50Z", "author": {"login": "vbradnitski"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaPAntAFqTM5ODU5NjI4MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbq9yGAFqTQwMDczMTE5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NTk2Mjgw", "url": "https://github.com/enonic/xp/pull/8045#pullrequestreview-398596280", "createdAt": "2020-04-22T21:17:13Z", "commit": {"oid": "97ef3076d25c3f3de0082df000d62b1e518c6dc5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMToxNzoxM1rOGKMO0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMToxNzoxM1rOGKMO0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMzOTM0NA==", "bodyText": "This is a controller class which does waaay too much.\nLet see how to split it up.", "url": "https://github.com/enonic/xp/pull/8045#discussion_r413339344", "createdAt": "2020-04-22T21:17:13Z", "author": {"login": "rymsha"}, "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/icon/ProjectIconResource.java", "diffHunk": "@@ -0,0 +1,192 @@\n+package com.enonic.xp.admin.impl.rest.resource.project.icon;\n+\n+import java.awt.image.BufferedImage;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.UncheckedIOException;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Paths;\n+import java.util.Iterator;\n+\n+import javax.annotation.security.RolesAllowed;\n+import javax.imageio.ImageIO;\n+import javax.imageio.ImageWriter;\n+import javax.ws.rs.DefaultValue;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.CacheControl;\n+import javax.ws.rs.core.Response;\n+\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+import com.google.common.hash.HashCode;\n+import com.google.common.hash.Hashing;\n+import com.google.common.io.ByteSource;\n+\n+import com.enonic.xp.admin.impl.rest.resource.content.ResolvedImage;\n+import com.enonic.xp.attachment.Attachment;\n+import com.enonic.xp.home.HomeDir;\n+import com.enonic.xp.image.ImageHelper;\n+import com.enonic.xp.jaxrs.JaxRsComponent;\n+import com.enonic.xp.project.Project;\n+import com.enonic.xp.project.ProjectName;\n+import com.enonic.xp.project.ProjectService;\n+import com.enonic.xp.repository.RepositoryService;\n+import com.enonic.xp.security.RoleKeys;\n+import com.enonic.xp.util.HexEncoder;\n+import com.enonic.xp.util.ImmutableFilesHelper;\n+\n+import static com.enonic.xp.admin.impl.rest.resource.ResourceConstants.REST_ROOT;\n+import static com.google.common.base.Strings.isNullOrEmpty;\n+\n+@Path(REST_ROOT + \"project/icon\")\n+@Produces(\"image/*\")\n+@RolesAllowed({RoleKeys.ADMIN_LOGIN_ID, RoleKeys.ADMIN_ID})\n+@Component(immediate = true, property = \"group=admin\")\n+public final class ProjectIconResource", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97ef3076d25c3f3de0082df000d62b1e518c6dc5"}, "originalPosition": 52}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97ef3076d25c3f3de0082df000d62b1e518c6dc5", "author": {"user": {"login": "vbradnitski", "name": "Bradnitski Viachaslau"}}, "url": "https://github.com/enonic/xp/commit/97ef3076d25c3f3de0082df000d62b1e518c6dc5", "committedDate": "2020-04-22T19:17:15Z", "message": "Implement upload of project icon #8044"}, "afterCommit": {"oid": "29c487618648aea1aade659658ba00b5fd2568c1", "author": {"user": {"login": "vbradnitski", "name": "Bradnitski Viachaslau"}}, "url": "https://github.com/enonic/xp/commit/29c487618648aea1aade659658ba00b5fd2568c1", "committedDate": "2020-04-23T14:35:58Z", "message": "Implement upload of project icon #8044"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5MzQ0MTk2", "url": "https://github.com/enonic/xp/pull/8045#pullrequestreview-399344196", "createdAt": "2020-04-23T17:58:13Z", "commit": {"oid": "29c487618648aea1aade659658ba00b5fd2568c1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzo1ODoxNFrOGK0-4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxODowMDo1MlrOGK1F7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAwNzAxMA==", "bodyText": "I think you need to introduce ModifyProjectParams\nAlso, what is size? dimension?", "url": "https://github.com/enonic/xp/pull/8045#discussion_r414007010", "createdAt": "2020-04-23T17:58:14Z", "author": {"login": "rymsha"}, "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectService.java", "diffHunk": "@@ -9,6 +10,8 @@\n \n     Project modify( final ModifyProjectParams params );\n \n+    void modifyIcon( final ProjectName projectName, final CreateAttachment icon, final int size );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29c487618648aea1aade659658ba00b5fd2568c1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAwODgxNA==", "bodyText": "No TODOs, please", "url": "https://github.com/enonic/xp/pull/8045#discussion_r414008814", "createdAt": "2020-04-23T18:00:52Z", "author": {"login": "rymsha"}, "path": "modules/core/core-api/src/main/java/com/enonic/xp/image/ImageHelper.java", "diffHunk": "@@ -85,6 +85,45 @@ public static ImageWriter getWriterByFormat( final String format )\n         }\n     }\n \n+    public static String getFormatByMimeType( final String mimeType )\n+        throws IOException\n+    {\n+        final Iterator<ImageWriter> i = ImageIO.getImageWritersByMIMEType( mimeType );\n+        if ( !i.hasNext() )\n+        {\n+            throw new IOException( \"The image-based media type \" + mimeType + \" is not supported for writing\" );\n+        }\n+\n+        return i.next().getOriginatingProvider().getFormatNames()[0];\n+    }\n+\n+    public static ByteSource serializeImage( final BufferedImage bufferedImage, final String mimeType, final int quality )\n+        throws IOException\n+    {\n+        final byte[] serializedImage;\n+        //TODO If/Else due to a difference of treatment between admin and portal. Should be uniform", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29c487618648aea1aade659658ba00b5fd2568c1"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "29c487618648aea1aade659658ba00b5fd2568c1", "author": {"user": {"login": "vbradnitski", "name": "Bradnitski Viachaslau"}}, "url": "https://github.com/enonic/xp/commit/29c487618648aea1aade659658ba00b5fd2568c1", "committedDate": "2020-04-23T14:35:58Z", "message": "Implement upload of project icon #8044"}, "afterCommit": {"oid": "b1d7b62cb445ef69be8bc81c43f0e8829b0846a5", "author": {"user": {"login": "vbradnitski", "name": "Bradnitski Viachaslau"}}, "url": "https://github.com/enonic/xp/commit/b1d7b62cb445ef69be8bc81c43f0e8829b0846a5", "committedDate": "2020-04-23T19:09:22Z", "message": "Implement upload of project icon #8044"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NDQ2MDMy", "url": "https://github.com/enonic/xp/pull/8045#pullrequestreview-399446032", "createdAt": "2020-04-23T20:20:48Z", "commit": {"oid": "b1d7b62cb445ef69be8bc81c43f0e8829b0846a5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDoyMDo0OFrOGK6eZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDozNDo1MlrOGK6-ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5Njk5OQ==", "bodyText": "Format is only part of hash, right? If so, it should be private", "url": "https://github.com/enonic/xp/pull/8045#discussion_r414096999", "createdAt": "2020-04-23T20:20:48Z", "author": {"login": "rymsha"}, "path": "modules/core/core-api/src/main/java/com/enonic/xp/image/ImageHelper.java", "diffHunk": "@@ -85,6 +85,44 @@ public static ImageWriter getWriterByFormat( final String format )\n         }\n     }\n \n+    public static String getFormatByMimeType( final String mimeType )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1d7b62cb445ef69be8bc81c43f0e8829b0846a5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5ODk3OA==", "bodyText": "Float is slower and less precise.\nAnyway let's make a more generic solution.", "url": "https://github.com/enonic/xp/pull/8045#discussion_r414098978", "createdAt": "2020-04-23T20:24:05Z", "author": {"login": "rymsha"}, "path": "modules/core/core-api/src/main/java/com/enonic/xp/image/ImageHelper.java", "diffHunk": "@@ -203,6 +241,18 @@ public static BufferedImage scaleSquare( final BufferedImage source, final int s\n         return getScaledInstance( cropped, size, size );\n     }\n \n+    public static BufferedImage scaleWidth( BufferedImage source, final int size )\n+    {\n+        int width = source.getWidth();\n+        int height = source.getHeight();\n+        float scale = (float) size / (float) width;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1d7b62cb445ef69be8bc81c43f0e8829b0846a5"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5OTQ1MQ==", "bodyText": "newWidth instead of size\nAPI should have more generic method. This one is too specific", "url": "https://github.com/enonic/xp/pull/8045#discussion_r414099451", "createdAt": "2020-04-23T20:25:00Z", "author": {"login": "rymsha"}, "path": "modules/core/core-api/src/main/java/com/enonic/xp/image/ImageHelper.java", "diffHunk": "@@ -203,6 +241,18 @@ public static BufferedImage scaleSquare( final BufferedImage source, final int s\n         return getScaledInstance( cropped, size, size );\n     }\n \n+    public static BufferedImage scaleWidth( BufferedImage source, final int size )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1d7b62cb445ef69be8bc81c43f0e8829b0846a5"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEwMTk4MA==", "bodyText": "Avoid ByteSource in API. byte[] is ok here", "url": "https://github.com/enonic/xp/pull/8045#discussion_r414101980", "createdAt": "2020-04-23T20:29:14Z", "author": {"login": "rymsha"}, "path": "modules/core/core-api/src/main/java/com/enonic/xp/image/ImageHelper.java", "diffHunk": "@@ -85,6 +85,44 @@ public static ImageWriter getWriterByFormat( final String format )\n         }\n     }\n \n+    public static String getFormatByMimeType( final String mimeType )\n+        throws IOException\n+    {\n+        final Iterator<ImageWriter> i = ImageIO.getImageWritersByMIMEType( mimeType );\n+        if ( !i.hasNext() )\n+        {\n+            throw new IOException( \"The image-based media type \" + mimeType + \" is not supported for writing\" );\n+        }\n+\n+        return i.next().getOriginatingProvider().getFormatNames()[0];\n+    }\n+\n+    public static ByteSource serializeImage( final BufferedImage bufferedImage, final String mimeType, final int quality )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1d7b62cb445ef69be8bc81c43f0e8829b0846a5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEwMzYyNg==", "bodyText": "width?", "url": "https://github.com/enonic/xp/pull/8045#discussion_r414103626", "createdAt": "2020-04-23T20:31:56Z", "author": {"login": "rymsha"}, "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ModifyProjectIconParams.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package com.enonic.xp.project;\n+\n+import com.google.common.base.Preconditions;\n+\n+import com.enonic.xp.annotation.PublicApi;\n+import com.enonic.xp.attachment.CreateAttachment;\n+\n+@PublicApi\n+public final class ModifyProjectIconParams\n+{\n+    private final ProjectName name;\n+\n+    private final CreateAttachment icon;\n+\n+    private final int size;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1d7b62cb445ef69be8bc81c43f0e8829b0846a5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEwNTI3NA==", "bodyText": "debug.", "url": "https://github.com/enonic/xp/pull/8045#discussion_r414105274", "createdAt": "2020-04-23T20:34:52Z", "author": {"login": "rymsha"}, "path": "modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java", "diffHunk": "@@ -161,6 +162,43 @@ private Project doModify( final ModifyProjectParams params )\n         return Project.from( updatedRepository );\n     }\n \n+    @Override\n+    public void modifyIcon( final ModifyProjectIconParams params )\n+    {\n+        callWithUpdateContext( ( () -> {\n+            doModifyIcon( params );\n+            LOG.info( \"Icon for project updated: \" + params.getName() );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1d7b62cb445ef69be8bc81c43f0e8829b0846a5"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1439e0adf72f3bef7bb65162b1e43f08a4581f9e", "author": {"user": {"login": "vbradnitski", "name": "Bradnitski Viachaslau"}}, "url": "https://github.com/enonic/xp/commit/1439e0adf72f3bef7bb65162b1e43f08a4581f9e", "committedDate": "2020-04-24T10:39:10Z", "message": "Implement upload of project icon #8044"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b1d7b62cb445ef69be8bc81c43f0e8829b0846a5", "author": {"user": {"login": "vbradnitski", "name": "Bradnitski Viachaslau"}}, "url": "https://github.com/enonic/xp/commit/b1d7b62cb445ef69be8bc81c43f0e8829b0846a5", "committedDate": "2020-04-23T19:09:22Z", "message": "Implement upload of project icon #8044"}, "afterCommit": {"oid": "1439e0adf72f3bef7bb65162b1e43f08a4581f9e", "author": {"user": {"login": "vbradnitski", "name": "Bradnitski Viachaslau"}}, "url": "https://github.com/enonic/xp/commit/1439e0adf72f3bef7bb65162b1e43f08a4581f9e", "committedDate": "2020-04-24T10:39:10Z", "message": "Implement upload of project icon #8044"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5ODU2MDM4", "url": "https://github.com/enonic/xp/pull/8045#pullrequestreview-399856038", "createdAt": "2020-04-24T11:15:52Z", "commit": {"oid": "1439e0adf72f3bef7bb65162b1e43f08a4581f9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNzMxMTk1", "url": "https://github.com/enonic/xp/pull/8045#pullrequestreview-400731195", "createdAt": "2020-04-27T08:25:32Z", "commit": {"oid": "1439e0adf72f3bef7bb65162b1e43f08a4581f9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4524, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}