{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMTc4NTgz", "number": 8009, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDo0MToxNVrODvl_ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo0MDo0N1rODvpc0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjMyMTYzOnYy", "diffSide": "RIGHT", "path": "modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectAccessSiteProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDo0MToxNVrOGCG49Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMTowMzozM1rOGCWCZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg2MzIyMQ==", "bodyText": "@vbradnitski why this method always returns null?", "url": "https://github.com/enonic/xp/pull/8009#discussion_r404863221", "createdAt": "2020-04-07T14:41:15Z", "author": {"login": "anatol-sialitski"}, "path": "modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectAccessSiteProcessor.java", "diffHunk": "@@ -51,38 +49,33 @@ public ProcessUpdateResult processUpdate( final ProcessUpdateParams params )\n         final SiteConfigs editedSiteConfigs = editedSite.getSiteConfigs();\n         final Site originalSite = (Site) params.getOriginalContent();\n         final SiteConfigs originalSiteConfigs = originalSite.getSiteConfigs();\n-        final User modifier = params.getModifier();\n \n-        if ( !Objects.equals( originalSiteConfigs, editedSiteConfigs ) && !this.hasContentAdminRole( modifier ) )\n+        final Context context = ContextAccessor.current();\n+        final AuthenticationInfo authenticationInfo = context.getAuthInfo();\n+        final ProjectName projectName = ProjectName.from( context.getRepositoryId() );\n+\n+        if ( !Objects.equals( originalSiteConfigs, editedSiteConfigs ) )\n         {\n-            throw new RoleRequiredException( modifier.getKey(), RoleKeys.ADMIN, RoleKeys.CONTENT_MANAGER_ADMIN );\n+            if ( !this.projectPermissionsContextManager.hasAdminAccess( authenticationInfo ) )\n+            {\n+                if ( ProjectConstants.DEFAULT_PROJECT_NAME.equals( projectName ) )\n+                {\n+                    throw new ProjectAccessRequiredException( authenticationInfo.getUser().getKey() );\n+                }\n+                else if ( !this.projectPermissionsContextManager.hasAnyProjectPermission( projectName, authenticationInfo,\n+                                                                                          Set.of( ProjectRole.OWNER ) ) )\n+                {\n+                    throw new ProjectAccessRequiredException( authenticationInfo.getUser().getKey(), ProjectRole.OWNER );\n+                }\n+            }\n         }\n \n         return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea541fef343512c8fef17d964c5c9600ce66e1a4"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTExMTM5OA==", "bodyText": "It's a processor, which called during create/update methods in a queue of similar classes. So it should check authInfo and throw an exception if it doesn't contain project role. Result of this particular processor is never used.", "url": "https://github.com/enonic/xp/pull/8009#discussion_r405111398", "createdAt": "2020-04-07T21:03:33Z", "author": {"login": "vbradnitski"}, "path": "modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectAccessSiteProcessor.java", "diffHunk": "@@ -51,38 +49,33 @@ public ProcessUpdateResult processUpdate( final ProcessUpdateParams params )\n         final SiteConfigs editedSiteConfigs = editedSite.getSiteConfigs();\n         final Site originalSite = (Site) params.getOriginalContent();\n         final SiteConfigs originalSiteConfigs = originalSite.getSiteConfigs();\n-        final User modifier = params.getModifier();\n \n-        if ( !Objects.equals( originalSiteConfigs, editedSiteConfigs ) && !this.hasContentAdminRole( modifier ) )\n+        final Context context = ContextAccessor.current();\n+        final AuthenticationInfo authenticationInfo = context.getAuthInfo();\n+        final ProjectName projectName = ProjectName.from( context.getRepositoryId() );\n+\n+        if ( !Objects.equals( originalSiteConfigs, editedSiteConfigs ) )\n         {\n-            throw new RoleRequiredException( modifier.getKey(), RoleKeys.ADMIN, RoleKeys.CONTENT_MANAGER_ADMIN );\n+            if ( !this.projectPermissionsContextManager.hasAdminAccess( authenticationInfo ) )\n+            {\n+                if ( ProjectConstants.DEFAULT_PROJECT_NAME.equals( projectName ) )\n+                {\n+                    throw new ProjectAccessRequiredException( authenticationInfo.getUser().getKey() );\n+                }\n+                else if ( !this.projectPermissionsContextManager.hasAnyProjectPermission( projectName, authenticationInfo,\n+                                                                                          Set.of( ProjectRole.OWNER ) ) )\n+                {\n+                    throw new ProjectAccessRequiredException( authenticationInfo.getUser().getKey(), ProjectRole.OWNER );\n+                }\n+            }\n         }\n \n         return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg2MzIyMQ=="}, "originalCommit": {"oid": "ea541fef343512c8fef17d964c5c9600ce66e1a4"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjg2MjczOnYy", "diffSide": "RIGHT", "path": "modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjozNDozM1rOGCMN2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjozNDozM1rOGCMN2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1MDQ5MA==", "bodyText": "hasAnyProjectRole and change arguments order\nMove way all other has methods", "url": "https://github.com/enonic/xp/pull/8009#discussion_r404950490", "createdAt": "2020-04-07T16:34:33Z", "author": {"login": "rymsha"}, "path": "modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManager.java", "diffHunk": "@@ -22,5 +25,7 @@\n \n     boolean hasAnyProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo );\n \n+    boolean hasAnyProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea541fef343512c8fef17d964c5c9600ce66e1a4"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjg3NzYxOnYy", "diffSide": "RIGHT", "path": "modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjozODoxOFrOGCMXag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjozODoxOFrOGCMXag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1MjkzOA==", "bodyText": "We decided to use hasRole method of AuthInfo but it means that internally service must know how to construct project role names correctly - which should be done in another class (to share logic)", "url": "https://github.com/enonic/xp/pull/8009#discussion_r404952938", "createdAt": "2020-04-07T16:38:18Z", "author": {"login": "rymsha"}, "path": "modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManagerImpl.java", "diffHunk": "@@ -124,27 +124,18 @@ public boolean hasAnyProjectPermission( final ProjectName projectName, final Aut\n                                        ProjectRole.VIEWER ) );\n     }\n \n-    private boolean hasAdminProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo )\n-    {\n-        return hasPermissions( projectName, authenticationInfo, Set.of( ProjectRole.OWNER ) );\n-    }\n-\n-    private boolean hasEditorProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo )\n-    {\n-        return hasPermissions( projectName, authenticationInfo, Set.of( ProjectRole.EDITOR ) );\n-    }\n-\n-    private boolean hasAuthorProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo )\n+    @Override\n+    public boolean hasAnyProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo,\n+                                            final Set<ProjectRole> projectRoles )\n     {\n-        return hasPermissions( projectName, authenticationInfo, Set.of( ProjectRole.AUTHOR ) );\n+        return hasPermissions( projectName, authenticationInfo, projectRoles );\n     }\n \n-    private boolean hasContributorProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo )\n+    private boolean hasOwnerProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo )\n     {\n-        return hasPermissions( projectName, authenticationInfo, Set.of( ProjectRole.CONTRIBUTOR ) );\n+        return hasPermissions( projectName, authenticationInfo, Set.of( ProjectRole.OWNER ) );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea541fef343512c8fef17d964c5c9600ce66e1a4"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjg4Nzg2OnYy", "diffSide": "RIGHT", "path": "modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo0MDo0N1rOGCMd-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo0MDo0N1rOGCMd-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1NDYxOA==", "bodyText": "Maybe better to call it ProjectSecurityService and move away \"context\" logic", "url": "https://github.com/enonic/xp/pull/8009#discussion_r404954618", "createdAt": "2020-04-07T16:40:47Z", "author": {"login": "rymsha"}, "path": "modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManager.java", "diffHunk": "@@ -1,7 +1,10 @@\n package com.enonic.xp.core.impl.project;\n \n+import java.util.Set;\n+\n import com.enonic.xp.context.Context;\n import com.enonic.xp.project.ProjectName;\n+import com.enonic.xp.project.ProjectRole;\n import com.enonic.xp.security.auth.AuthenticationInfo;\n \n public interface ProjectPermissionsContextManager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea541fef343512c8fef17d964c5c9600ce66e1a4"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1041, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}