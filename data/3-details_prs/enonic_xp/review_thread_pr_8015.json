{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNDMwNzc2", "number": 8015, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDo1MjoxNVrODwxMjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo0NzoxMVrODwzJsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDY0MjY4OnYy", "diffSide": "RIGHT", "path": "modules/core/core-image/src/main/java/com/enonic/xp/core/impl/image/ImageServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDo1MjoxNVrOGD8qbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDo1MjoxNVrOGD8qbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc5MjgxMw==", "bodyText": "I am not sure that A needs here, I think renderAsSource will be better", "url": "https://github.com/enonic/xp/pull/8015#discussion_r406792813", "createdAt": "2020-04-10T14:52:15Z", "author": {"login": "anatol-sialitski"}, "path": "modules/core/core-image/src/main/java/com/enonic/xp/core/impl/image/ImageServiceImpl.java", "diffHunk": "@@ -53,67 +51,47 @@\n     public ByteSource readImage( final ReadImageParams readImageParams )\n         throws IOException\n     {\n-        final Path cachedImagePath = getCachedImagePath( readImageParams );\n-        ByteSource imageByteSource = ImmutableFilesHelper.computeIfAbsent( cachedImagePath, () -> createImage( readImageParams ) );\n-        return imageByteSource;\n+        final String format = doGetFormatByMimeType( readImageParams.getMimeType() );\n+\n+        if ( renderAsASource( format ) )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d364caa89c75d47f4239e3e54ecbbcdbd62e7159"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDk0Mjc5OnYy", "diffSide": "RIGHT", "path": "modules/core/core-image/src/main/java/com/enonic/xp/core/impl/image/ImageServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjozOTo0N1rOGD_fuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjozOTo0N1rOGD_fuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzOTIyNA==", "bodyText": "It seems unnecessary to extract format from MIME type here as we only ignore processing very well defined image/gif MIME. So we can remove renderAsASource altogether and replace it with plain \"image/gif\".equals(readImageParams.getMimeType())", "url": "https://github.com/enonic/xp/pull/8015#discussion_r406839224", "createdAt": "2020-04-10T16:39:47Z", "author": {"login": "rymsha"}, "path": "modules/core/core-image/src/main/java/com/enonic/xp/core/impl/image/ImageServiceImpl.java", "diffHunk": "@@ -53,67 +51,47 @@\n     public ByteSource readImage( final ReadImageParams readImageParams )\n         throws IOException\n     {\n-        final Path cachedImagePath = getCachedImagePath( readImageParams );\n-        ByteSource imageByteSource = ImmutableFilesHelper.computeIfAbsent( cachedImagePath, () -> createImage( readImageParams ) );\n-        return imageByteSource;\n+        final String format = doGetFormatByMimeType( readImageParams.getMimeType() );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d364caa89c75d47f4239e3e54ecbbcdbd62e7159"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDk2MTAzOnYy", "diffSide": "LEFT", "path": "modules/core/core-image/src/main/java/com/enonic/xp/core/impl/image/ImageServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo0NjoyNVrOGD_qxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo0NjoyNVrOGD_qxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MjA1Mg==", "bodyText": "Move calculation of \"format\" here, so it is also guarded by cache.", "url": "https://github.com/enonic/xp/pull/8015#discussion_r406842052", "createdAt": "2020-04-10T16:46:25Z", "author": {"login": "rymsha"}, "path": "modules/core/core-image/src/main/java/com/enonic/xp/core/impl/image/ImageServiceImpl.java", "diffHunk": "@@ -157,9 +135,6 @@ else if ( readImageParams.isScaleWidth() )\n         //Filter string value\n         final String filter = readImageParams.getFilterParam() != null ? readImageParams.getFilterParam() : \"no-filter\";\n \n-        //Format string value\n-        final String format = readImageParams.getFormat();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d364caa89c75d47f4239e3e54ecbbcdbd62e7159"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDk2MzA1OnYy", "diffSide": "RIGHT", "path": "modules/core/core-image/src/test/java/com/enonic/xp/core/impl/image/ImageServiceImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo0NzoxMVrOGD_sCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo0NzoxMVrOGD_sCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MjM3Ng==", "bodyText": "dead code. remove", "url": "https://github.com/enonic/xp/pull/8015#discussion_r406842376", "createdAt": "2020-04-10T16:47:11Z", "author": {"login": "rymsha"}, "path": "modules/core/core-image/src/test/java/com/enonic/xp/core/impl/image/ImageServiceImplTest.java", "diffHunk": "@@ -62,7 +60,7 @@ public void setUp()\n         imageService.setImageFilterBuilder( imageFilterBuilder );\n     }\n \n-    @Test\n+    /*@Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d364caa89c75d47f4239e3e54ecbbcdbd62e7159"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1046, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}