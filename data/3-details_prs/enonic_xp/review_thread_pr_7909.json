{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MTI1OTE4", "number": 7909, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNzo1OTo0MlrODimSTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODozNjo1OFrODi-53w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjA1NDU0OnYy", "diffSide": "RIGHT", "path": "modules/core/core-event/src/main/java/com/enonic/xp/core/impl/event/cluster/ClusterEventReceiver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNzo1OTo0MlrOFt7zrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTozOTo0N1rOFt-4-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcxMDEyNQ==", "bodyText": "@rymsha why do you use two times @Activate annotation?", "url": "https://github.com/enonic/xp/pull/7909#discussion_r383710125", "createdAt": "2020-02-25T07:59:42Z", "author": {"login": "anatol-sialitski"}, "path": "modules/core/core-event/src/main/java/com/enonic/xp/core/impl/event/cluster/ClusterEventReceiver.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.enonic.xp.core.impl.event.cluster;\n+\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Deactivate;\n+import org.osgi.service.component.annotations.Reference;\n+\n+import com.hazelcast.core.HazelcastInstance;\n+import com.hazelcast.core.ITopic;\n+import com.hazelcast.core.Message;\n+import com.hazelcast.core.MessageListener;\n+\n+import com.enonic.xp.event.Event;\n+import com.enonic.xp.event.EventPublisher;\n+\n+@Component(immediate = true)\n+public final class ClusterEventReceiver\n+    implements MessageListener<Event>\n+{\n+    private final EventPublisher eventPublisher;\n+\n+    private final ITopic<Event> topic;\n+\n+    private String registrationId;\n+\n+    @Activate\n+    public ClusterEventReceiver( @Reference final HazelcastInstance hazelcastInstance, @Reference final EventPublisher eventPublisher )\n+    {\n+        this.topic = hazelcastInstance.getTopic( ClusterEventSender.ACTION );\n+        this.eventPublisher = eventPublisher;\n+    }\n+\n+    @Activate", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e360c67141c9863cc08080783e8f435ac0bfbb06"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc2MDYzNQ==", "bodyText": "One for \"constructor injection\", another for real activation logic.", "url": "https://github.com/enonic/xp/pull/7909#discussion_r383760635", "createdAt": "2020-02-25T09:39:47Z", "author": {"login": "rymsha"}, "path": "modules/core/core-event/src/main/java/com/enonic/xp/core/impl/event/cluster/ClusterEventReceiver.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.enonic.xp.core.impl.event.cluster;\n+\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Deactivate;\n+import org.osgi.service.component.annotations.Reference;\n+\n+import com.hazelcast.core.HazelcastInstance;\n+import com.hazelcast.core.ITopic;\n+import com.hazelcast.core.Message;\n+import com.hazelcast.core.MessageListener;\n+\n+import com.enonic.xp.event.Event;\n+import com.enonic.xp.event.EventPublisher;\n+\n+@Component(immediate = true)\n+public final class ClusterEventReceiver\n+    implements MessageListener<Event>\n+{\n+    private final EventPublisher eventPublisher;\n+\n+    private final ITopic<Event> topic;\n+\n+    private String registrationId;\n+\n+    @Activate\n+    public ClusterEventReceiver( @Reference final HazelcastInstance hazelcastInstance, @Reference final EventPublisher eventPublisher )\n+    {\n+        this.topic = hazelcastInstance.getTopic( ClusterEventSender.ACTION );\n+        this.eventPublisher = eventPublisher;\n+    }\n+\n+    @Activate", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcxMDEyNQ=="}, "originalCommit": {"oid": "e360c67141c9863cc08080783e8f435ac0bfbb06"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MDA3OTgyOnYy", "diffSide": "RIGHT", "path": "modules/core/core-event/src/main/java/com/enonic/xp/core/impl/event/cluster/ClusterEventSender.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODozNDoxMVrOFuiIjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODozNDoxMVrOFuiIjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzODA2Mg==", "bodyText": "I guess will be better to rename ACTION to TOPIC", "url": "https://github.com/enonic/xp/pull/7909#discussion_r384338062", "createdAt": "2020-02-26T08:34:11Z", "author": {"login": "anatol-sialitski"}, "path": "modules/core/core-event/src/main/java/com/enonic/xp/core/impl/event/cluster/ClusterEventSender.java", "diffHunk": "@@ -18,47 +16,20 @@\n {\n     public static final String ACTION = \"xp/event\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c461c933c2233bd1828d8af6c4dd37ddfe297712"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MDA4Nzk5OnYy", "diffSide": "RIGHT", "path": "modules/core/core-task/src/main/java/com/enonic/xp/impl/task/ClusteredTaskManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODozNjo1OFrOFuiNog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODozNjo1OFrOFuiNog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzOTM2Mg==", "bodyText": "I guess will be better to rename ACTION to EXECUTOR_SERVICE", "url": "https://github.com/enonic/xp/pull/7909#discussion_r384339362", "createdAt": "2020-02-26T08:36:58Z", "author": {"login": "anatol-sialitski"}, "path": "modules/core/core-task/src/main/java/com/enonic/xp/impl/task/ClusteredTaskManagerImpl.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package com.enonic.xp.impl.task;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+import com.hazelcast.core.HazelcastInstance;\n+import com.hazelcast.core.IExecutorService;\n+import com.hazelcast.core.Member;\n+import com.hazelcast.util.ExceptionUtil;\n+\n+import com.enonic.xp.impl.task.distributed.AllTasksReporter;\n+import com.enonic.xp.impl.task.distributed.RunningTasksReporter;\n+import com.enonic.xp.impl.task.distributed.SerializableFunction;\n+import com.enonic.xp.impl.task.distributed.SingleTaskReporter;\n+import com.enonic.xp.impl.task.distributed.TasksReporterCallable;\n+import com.enonic.xp.task.TaskId;\n+import com.enonic.xp.task.TaskInfo;\n+\n+@Component\n+public final class ClusteredTaskManagerImpl\n+    implements ClusteredTaskManager\n+{\n+    private static final long TRANSPORT_REQUEST_TIMEOUT_SECONDS = 5L;\n+\n+    public static final String ACTION = \"xp/task\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c461c933c2233bd1828d8af6c4dd37ddfe297712"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1011, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}