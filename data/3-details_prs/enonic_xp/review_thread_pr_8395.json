{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMDEyOTg5", "number": 8395, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMjoxMDoxN1rOEmjh8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMjoxMDoxN1rOEmjh8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODYzNDc1OnYy", "diffSide": "RIGHT", "path": "modules/core/core-app/src/main/java/com/enonic/xp/core/impl/app/event/ApplicationClusterEventListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMjoxMDoxN1rOHWpqPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzo1MDozOFrOHWvfSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUxMzI3OQ==", "bodyText": "What about default block?", "url": "https://github.com/enonic/xp/pull/8395#discussion_r493513279", "createdAt": "2020-09-23T12:10:17Z", "author": {"login": "anatol-sialitski"}, "path": "modules/core/core-app/src/main/java/com/enonic/xp/core/impl/app/event/ApplicationClusterEventListener.java", "diffHunk": "@@ -17,100 +19,81 @@\n public class ApplicationClusterEventListener\n     implements EventListener\n {\n-    private ApplicationService applicationService;\n+    private final ApplicationService applicationService;\n+\n+    @Activate\n+    public ApplicationClusterEventListener( @Reference final ApplicationService applicationService )\n+    {\n+        this.applicationService = applicationService;\n+    }\n \n     @Override\n     public void onEvent( final Event event )\n     {\n-        if ( event != null )\n+        if ( !event.isLocalOrigin() )\n         {\n-            if ( event.isLocalOrigin() )\n-            {\n-                return;\n-            }\n-\n             doHandleEvent( event );\n         }\n     }\n \n     private void doHandleEvent( final Event event )\n     {\n-        final String type = event.getType();\n-\n-        if ( type.equals( ApplicationClusterEvents.EVENT_TYPE ) )\n+        if ( ApplicationClusterEvents.EVENT_TYPE.equals( event.getType() ) )\n         {\n-            final String eventSubType = event.getValueAs( String.class, ApplicationClusterEvents.EVENT_TYPE_KEY ).get();\n-\n-            switch ( eventSubType )\n-            {\n-                case ApplicationClusterEvents.INSTALLED:\n-                    handleInstalledEvent( event );\n-                    break;\n-                case ApplicationClusterEvents.STATE_CHANGE:\n-                    handleStateChangedEvent( event );\n-                    break;\n-                case ApplicationClusterEvents.UNINSTALLED:\n-                    handleUninstalledEvent( event );\n-                    break;\n-            }\n+            event.getValueAs( String.class, ApplicationClusterEvents.EVENT_TYPE_KEY ).\n+                ifPresent( eventSubType -> {\n+                    switch ( eventSubType )\n+                    {\n+                        case ApplicationClusterEvents.INSTALLED:\n+                            handleInstalledEvent( event );\n+                            break;\n+                        case ApplicationClusterEvents.UNINSTALL:\n+                            handleUninstallEvent( event );\n+                            break;\n+                        case ApplicationClusterEvents.START:\n+                            handleStartEvent( event );\n+                            break;\n+                        case ApplicationClusterEvents.STOP:\n+                            handleStopEvent( event );\n+                            break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd3f29fc421989c4b937db1da1744dae81f31570"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYwODc3Nw==", "bodyText": "default wasn't there, and there is nothing to do in default", "url": "https://github.com/enonic/xp/pull/8395#discussion_r493608777", "createdAt": "2020-09-23T13:50:38Z", "author": {"login": "rymsha"}, "path": "modules/core/core-app/src/main/java/com/enonic/xp/core/impl/app/event/ApplicationClusterEventListener.java", "diffHunk": "@@ -17,100 +19,81 @@\n public class ApplicationClusterEventListener\n     implements EventListener\n {\n-    private ApplicationService applicationService;\n+    private final ApplicationService applicationService;\n+\n+    @Activate\n+    public ApplicationClusterEventListener( @Reference final ApplicationService applicationService )\n+    {\n+        this.applicationService = applicationService;\n+    }\n \n     @Override\n     public void onEvent( final Event event )\n     {\n-        if ( event != null )\n+        if ( !event.isLocalOrigin() )\n         {\n-            if ( event.isLocalOrigin() )\n-            {\n-                return;\n-            }\n-\n             doHandleEvent( event );\n         }\n     }\n \n     private void doHandleEvent( final Event event )\n     {\n-        final String type = event.getType();\n-\n-        if ( type.equals( ApplicationClusterEvents.EVENT_TYPE ) )\n+        if ( ApplicationClusterEvents.EVENT_TYPE.equals( event.getType() ) )\n         {\n-            final String eventSubType = event.getValueAs( String.class, ApplicationClusterEvents.EVENT_TYPE_KEY ).get();\n-\n-            switch ( eventSubType )\n-            {\n-                case ApplicationClusterEvents.INSTALLED:\n-                    handleInstalledEvent( event );\n-                    break;\n-                case ApplicationClusterEvents.STATE_CHANGE:\n-                    handleStateChangedEvent( event );\n-                    break;\n-                case ApplicationClusterEvents.UNINSTALLED:\n-                    handleUninstalledEvent( event );\n-                    break;\n-            }\n+            event.getValueAs( String.class, ApplicationClusterEvents.EVENT_TYPE_KEY ).\n+                ifPresent( eventSubType -> {\n+                    switch ( eventSubType )\n+                    {\n+                        case ApplicationClusterEvents.INSTALLED:\n+                            handleInstalledEvent( event );\n+                            break;\n+                        case ApplicationClusterEvents.UNINSTALL:\n+                            handleUninstallEvent( event );\n+                            break;\n+                        case ApplicationClusterEvents.START:\n+                            handleStartEvent( event );\n+                            break;\n+                        case ApplicationClusterEvents.STOP:\n+                            handleStopEvent( event );\n+                            break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUxMzI3OQ=="}, "originalCommit": {"oid": "fd3f29fc421989c4b937db1da1744dae81f31570"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 951, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}