{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMTgxMzI4", "number": 2225, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTo0MDoyOFrODYi-MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTo1MTozM1rODYjPSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDY1MzkzOnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/TokenEntry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTo0MDoyOFrOFedyzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTo0MDoyOFrOFedyzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ4OTc0Mw==", "bodyText": "Please call here the other constructor via this(image, tokenSrcID, beginLine, -1, -1). That way, we don't need to duplicate the logic...", "url": "https://github.com/pmd/pmd/pull/2225#discussion_r367489743", "createdAt": "2020-01-16T15:40:28Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/TokenEntry.java", "diffHunk": "@@ -48,6 +50,25 @@ public TokenEntry(String image, String tokenSrcID, int beginLine) {\n         setImage(image);\n         this.tokenSrcID = tokenSrcID;\n         this.beginLine = beginLine;\n+        this.beginColumn = -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ba92bdca4d6f0faa7361633ab5f5a909fdb403"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDY1OTk1OnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/XMLRenderer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTo0MjowMVrOFed2bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTo0MjowMVrOFed2bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ5MDY3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            file.setAttribute(\"column\", String.valueOf(mark.getBeginColumn()));\n          \n          \n            \n                            file.setAttribute(\"column\", String.valueOf(beginCol));", "url": "https://github.com/pmd/pmd/pull/2225#discussion_r367490670", "createdAt": "2020-01-16T15:42:01Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/XMLRenderer.java", "diffHunk": "@@ -117,9 +117,18 @@ private Element addFilesToDuplicationElement(Document doc, Element duplication,\n         Mark mark;\n         for (Iterator<Mark> iterator = match.iterator(); iterator.hasNext();) {\n             mark = iterator.next();\n-            Element file = doc.createElement(\"file\");\n+            final Element file = doc.createElement(\"file\");\n             file.setAttribute(\"line\", String.valueOf(mark.getBeginLine()));\n             file.setAttribute(\"path\", mark.getFilename());\n+            file.setAttribute(\"endline\", String.valueOf(mark.getEndLine()));\n+            final int beginCol = mark.getBeginColumn();\n+            final int endCol = mark.getEndColumn();\n+            if (beginCol != -1) {\n+                file.setAttribute(\"column\", String.valueOf(mark.getBeginColumn()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ba92bdca4d6f0faa7361633ab5f5a909fdb403"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDY2MDkzOnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/XMLRenderer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTo0MjoxNlrOFed3AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTo0MjoxNlrOFed3AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ5MDgxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            file.setAttribute(\"endcolumn\", String.valueOf(mark.getEndColumn()));\n          \n          \n            \n                            file.setAttribute(\"endcolumn\", String.valueOf(endCol));", "url": "https://github.com/pmd/pmd/pull/2225#discussion_r367490817", "createdAt": "2020-01-16T15:42:16Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/XMLRenderer.java", "diffHunk": "@@ -117,9 +117,18 @@ private Element addFilesToDuplicationElement(Document doc, Element duplication,\n         Mark mark;\n         for (Iterator<Mark> iterator = match.iterator(); iterator.hasNext();) {\n             mark = iterator.next();\n-            Element file = doc.createElement(\"file\");\n+            final Element file = doc.createElement(\"file\");\n             file.setAttribute(\"line\", String.valueOf(mark.getBeginLine()));\n             file.setAttribute(\"path\", mark.getFilename());\n+            file.setAttribute(\"endline\", String.valueOf(mark.getEndLine()));\n+            final int beginCol = mark.getBeginColumn();\n+            final int endCol = mark.getEndColumn();\n+            if (beginCol != -1) {\n+                file.setAttribute(\"column\", String.valueOf(mark.getBeginColumn()));\n+            }\n+            if (endCol != -1) {\n+                file.setAttribute(\"endcolumn\", String.valueOf(mark.getEndColumn()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ba92bdca4d6f0faa7361633ab5f5a909fdb403"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDY5NzcwOnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/TokenEntry.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTo1MTozM1rOFeeNsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTo1MTozM1rOFeeNsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ5NjYyNw==", "bodyText": "You have marked the new methods here already as deprecated. Can you describe please, how you envision the API to evolve here?\nFrom the TODO comment, I understand, that this method should look like public Optional<Integer> getBeginColumn() in the future (possibly with PMD 7.0.0). But changing that signature would immediately break compilation, and right now there is no alternative to the deprecated method...", "url": "https://github.com/pmd/pmd/pull/2225#discussion_r367496627", "createdAt": "2020-01-16T15:51:33Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/TokenEntry.java", "diffHunk": "@@ -93,6 +114,16 @@ public int getBeginLine() {\n         return beginLine;\n     }\n \n+    @Deprecated\n+    public int getBeginColumn() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ba92bdca4d6f0faa7361633ab5f5a909fdb403"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 455, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}