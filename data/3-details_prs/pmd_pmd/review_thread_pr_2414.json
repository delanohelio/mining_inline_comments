{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMjI3NTQz", "number": 2414, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODo0MjowNlrODyoRNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODozNDowOFrODznHzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDE1MTU4OnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/HTMLRenderer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODo0MjowNlrOGGyfjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODo0MjowNlrOGGyfjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc3MTkxNw==", "bodyText": "that was the bug", "url": "https://github.com/pmd/pmd/pull/2414#discussion_r409771917", "createdAt": "2020-04-16T18:42:06Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/HTMLRenderer.java", "diffHunk": "@@ -78,6 +89,10 @@ public void renderBody(Writer writer, Report report) throws IOException {\n \n     @Override\n     public void start() throws IOException {\n+        linkPrefix = getProperty(LINK_PREFIX);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44e43d618639065a7a71337b6205c1a6db723e86"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NDQ0OTQzOnYy", "diffSide": "RIGHT", "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/HTMLRenderer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODozNDowOFrOGIJUwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMToyNzo1NFrOGKkcGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE5NDU2MQ==", "bodyText": "The control flow confused me so I added another test. What happens when the link prefix is set but not the line prefix? Currently the link is rendered, but there's nothing behind the #. I think this might be useful behavior (no line prefix != empty line prefix), let me know if this is expected and I'll merge the PR", "url": "https://github.com/pmd/pmd/pull/2414#discussion_r411194561", "createdAt": "2020-04-20T08:34:08Z", "author": {"login": "oowekyala"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/HTMLRenderer.java", "diffHunk": "@@ -134,6 +148,20 @@ private void glomRuleViolations(Writer writer, Iterator<RuleViolation> violation\n         }\n     }\n \n+    private String renderFileName(String filename, int beginLine) {\n+        return maybeWrap(StringEscapeUtils.escapeHtml4(determineFileName(filename)),\n+                linePrefix == null || beginLine < 0 ? \"\" : linePrefix + beginLine);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44e43d618639065a7a71337b6205c1a6db723e86"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYxNTU2Ng==", "bodyText": "I think we should preserve whatever current behavior it is (not sure, what exactly is correct/expected). But \"no line prefix!=empty line prefix\" sounds reasonable.\nThe use cases are:\n\nnoLinePrefix - then, as it is implemented like now, we don't output the line number in the link\nLinePrefix is an empty string - then we should output \"#4711\". Some systems might use directly the linenumbers as target\nLinePrefix is any non-empty string - like github uses \"L\". Then we should output \"#L4711\".\n\nI'll double check, that we have a test case for the empty lineprefix and merge afterwards.", "url": "https://github.com/pmd/pmd/pull/2414#discussion_r413615566", "createdAt": "2020-04-23T08:25:54Z", "author": {"login": "adangel"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/HTMLRenderer.java", "diffHunk": "@@ -134,6 +148,20 @@ private void glomRuleViolations(Writer writer, Iterator<RuleViolation> violation\n         }\n     }\n \n+    private String renderFileName(String filename, int beginLine) {\n+        return maybeWrap(StringEscapeUtils.escapeHtml4(determineFileName(filename)),\n+                linePrefix == null || beginLine < 0 ? \"\" : linePrefix + beginLine);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE5NDU2MQ=="}, "originalCommit": {"oid": "44e43d618639065a7a71337b6205c1a6db723e86"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzczNTk2Mw==", "bodyText": "SGTM. Side note: this will make it so, that the property wil need to be changed to Optional<String> on 7.0 because the new property framework explicitly forbids null property values. So Optional.empty() would mean \"no line prefix\" instead of null", "url": "https://github.com/pmd/pmd/pull/2414#discussion_r413735963", "createdAt": "2020-04-23T11:27:54Z", "author": {"login": "oowekyala"}, "path": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/HTMLRenderer.java", "diffHunk": "@@ -134,6 +148,20 @@ private void glomRuleViolations(Writer writer, Iterator<RuleViolation> violation\n         }\n     }\n \n+    private String renderFileName(String filename, int beginLine) {\n+        return maybeWrap(StringEscapeUtils.escapeHtml4(determineFileName(filename)),\n+                linePrefix == null || beginLine < 0 ? \"\" : linePrefix + beginLine);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE5NDU2MQ=="}, "originalCommit": {"oid": "44e43d618639065a7a71337b6205c1a6db723e86"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 375, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}